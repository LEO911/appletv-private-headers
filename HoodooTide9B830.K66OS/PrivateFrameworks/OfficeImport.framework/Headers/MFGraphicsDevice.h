/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import <NSObject.h> // Unknown library

@class NSMutableArray, MFObjectTable, NSDictionary, MFDeviceContext;
@protocol MFDeviceDriver;

__attribute__((visibility("hidden")))
@interface MFGraphicsDevice : NSObject {
@private
	MFDeviceContext *m_currentDC;	// 4 = 0x4
	NSMutableArray *m_savedDC;	// 8 = 0x8
	NSObject<MFDeviceDriver> *m_deviceDriver;	// 12 = 0xc
	MFObjectTable *m_objectTable;	// 16 = 0x10
	MFObjectTable *m_stockObjects;	// 20 = 0x14
	NSDictionary *m_colorMap;	// 24 = 0x18
	NSDictionary *m_fillMap;	// 28 = 0x1c
}
- (id)initWithCanvas:(CGRect)canvas;	// 0x31179e91
- (int)abortPath;	// 0x313aba21
- (int)angleArc:(int)arc :(int)arg2 :(unsigned long)arg3 :(double)arg4 :(double)arg5;	// 0x313ab76d
- (int)arc:(int)arc :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x312cdd85
- (int)arcTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x313ab7c1
- (int)beginPath;	// 0x31241941
- (int)bezier:(int)bezier :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x312ba2e9
- (int)bezierTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6;	// 0x31241c59
- (int)bitBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(unsigned long)arg8 :(CGAffineTransform *)arg9 :(unsigned long)arg10;	// 0x31299be5
- (int)chord:(int)chord :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x313ab821
- (int)closeCurrentPath:(bool)path;	// 0x31242139
- (int)comment:(id)comment;	// 0x313ab765
- (id)createBitmap:(unsigned)bitmap :(unsigned)arg2 :(unsigned)arg3 :(unsigned)arg4 :(const char *)arg5 :(unsigned)arg6;	// 0x313abe65
- (int)createBrush:(int)brush :(id)arg2 :(int)arg3 :(unsigned)arg4;	// 0x3117dd81
- (id)createColorWithRGBBytes:(unsigned char)rgbbytes :(unsigned char)arg2 :(unsigned char)arg3 :(unsigned char)arg4;	// 0x3117dd19
- (id)createDIBitmap:(const char *)bitmap :(unsigned)arg2 :(int)arg3;	// 0x3122fa1d
- (id)createDIBitmap:(const char *)bitmap :(unsigned)arg2 :(const char *)arg3 :(unsigned)arg4 :(int)arg5;	// 0x3126407d
- (int)createFontIndirect:(long)indirect :(long)arg2 :(long)arg3 :(long)arg4 :(long)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15;	// 0x3117cc7d
- (int)createFontIndirectW:(long)w :(long)arg2 :(long)arg3 :(long)arg4 :(long)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15 :(id)arg16 :(id)arg17 :(unsigned)arg18 :(unsigned)arg19 :(unsigned)arg20 :(unsigned)arg21 :(unsigned)arg22 :(unsigned)arg23;	// 0x31298605
- (int)createPalette:(id)palette :(unsigned)arg2;	// 0x3125f38d
- (int)createPatternBrush:(id)brush :(unsigned)arg2 usePaletteForBilevel:(BOOL)bilevel;	// 0x312a44b5
- (int)createPen:(int)pen :(long)arg2 :(id)arg3 :(double *)arg4 :(unsigned)arg5;	// 0x3117df59
- (int)createRegion:(id)region;	// 0x312a4a39
- (void)createStockObjects;	// 0x31264301
- (void)dealloc;	// 0x311760e1
- (int)deleteObject:(int)object;	// 0x3117f715
- (int)description:(id)description;	// 0x312413e1
- (void)done;	// 0x31181609
- (int)ellipse:(int)ellipse :(int)arg2 :(int)arg3 :(int)arg4;	// 0x3117e0b1
- (int)endPath;	// 0x31242271
- (int)excludeClipRect:(CGRect)rect;	// 0x31299d69
- (int)extTextOut:(int)anOut :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int *)arg9 :(int)arg10;	// 0x3117d775
- (int)extTextOutEncoded:(int)encoded :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int *)arg9 :(int)arg10;	// 0x3117d645
- (int)fillRgn:(unsigned)rgn :(unsigned)arg2;	// 0x313abc91
- (int)fillRgnWithRects:(id)rects :(unsigned)arg2;	// 0x313abc09
- (int)frameRegion:(unsigned)region :(unsigned)arg2 :(int)arg3 :(int)arg4;	// 0x313abdf1
- (int)frameRegionWithRects:(id)rects :(unsigned)arg2 :(int)arg3 :(int)arg4;	// 0x313abd69
- (int)getStockObject:(unsigned)object;	// 0x31264279
- (int)intersectClipRect:(CGRect)rect;	// 0x31180c2d
- (int)invertRgn:(unsigned)rgn;	// 0x313abbbd
- (int)invertRgnWithRects:(id)rects;	// 0x313abb69
- (int)lineTo:(double)to :(double)arg2;	// 0x31297fc5
- (int)maskBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(id)arg8 :(int)arg9 :(int)arg10 :(unsigned long)arg11 :(CGAffineTransform *)arg12 :(unsigned long)arg13;	// 0x313abeb9
- (int)modifyWorldTransform:(const CGAffineTransform *)transform :(int)arg2;	// 0x312a6d35
- (int)moveTo:(double)to :(double)arg2;	// 0x31237a55
- (int)offsetViewportOrg:(int)org :(int)arg2;	// 0x313ab9a1
- (int)offsetWindowOrg:(int)org :(int)arg2;	// 0x313ab961
- (int)paintRgn:(unsigned)rgn;	// 0x313abb01
- (int)paintRgnWithRects:(id)rects;	// 0x313aba95
- (int)patBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(unsigned long)arg5;	// 0x3117f929
- (int)pie:(int)pie :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x312a1c3d
- (int)plgBlt:(CGPoint *)blt :(id)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(id)arg7 :(int)arg8 :(int)arg9 :(CGAffineTransform *)arg10 :(unsigned long)arg11;	// 0x313abf61
- (int)polyPolygon:(CGPoint *)polygon :(int *)arg2 :(int)arg3;	// 0x31237be5
- (int)polyPolyline:(CGPoint *)polyline :(int *)arg2 :(int)arg3;	// 0x312d4e39
- (int)polygon:(CGPoint *)polygon :(int)arg2;	// 0x311812b5
- (int)polyline:(CGPoint *)polyline :(int)arg2;	// 0x31181521
- (int)realizePalette;	// 0x3125f561
- (id)recolor:(unsigned char)recolor :(unsigned char)arg2 :(unsigned char)arg3 fill:(BOOL)fill;	// 0x312647cd
- (id)recolor:(id)recolor fill:(BOOL)fill;	// 0x3117d3f9
- (int)rectangle:(int)rectangle :(int)arg2 :(int)arg3 :(int)arg4;	// 0x311810d1
- (int)resizePalette:(unsigned)palette :(unsigned)arg2;	// 0x313ab8fd
- (int)restoreDC:(int)dc;	// 0x31180ccd
- (int)roundRect:(int)rect :(int)arg2 :(int)arg3 :(int)arg4 :(double)arg5 :(double)arg6;	// 0x312e1169
- (int)saveDC;	// 0x3117fd31
- (int)scaleViewportExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;	// 0x3122f7a1
- (int)scaleWindowExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;	// 0x313ab9e1
- (int)selectClipPath:(int)path;	// 0x312a5581
- (int)selectClipRegion:(unsigned)region :(int)arg2;	// 0x3129a135
- (int)selectClipRegionWithRects:(id)rects :(int)arg2;	// 0x31264b05
- (int)selectObject:(int)object;	// 0x3117d0fd
- (int)setArcDirection:(int)direction;	// 0x313ab769
- (int)setBkColour:(id)colour;	// 0x3122f6a1
- (int)setBkMode:(int)mode;	// 0x3117d319
- (int)setBrushOrg:(double)org :(double)arg2;	// 0x312a2229
- (void)setColorMap:(id)map fillMap:(id)map2;	// 0x3117b12d
- (int)setMapMode:(int)mode;	// 0x3117b71d
- (int)setMetaRgn;	// 0x312d3249
- (int)setMiterLimit:(double)limit;	// 0x312b90b9
- (int)setPaletteEntries:(unsigned)entries :(id)arg2 :(unsigned)arg3;	// 0x313ab881
- (int)setPolyFillMode:(int)mode;	// 0x31184861
- (int)setRop2:(int)a2;	// 0x3122f535
- (int)setStretchBltMode:(int)mode;	// 0x3122f8d1
- (int)setTextAlign:(bool)align :(int)arg2 :(int)arg3 :(int)arg4;	// 0x3122f58d
- (int)setTextCharExtra:(int)extra;	// 0x312a8839
- (int)setTextColour:(const id)colour;	// 0x3117d3b5
- (int)setTextJustification:(int)justification :(int)arg2;	// 0x3122f63d
- (int)setViewBox:(double)box :(double)arg2 :(double)arg3 :(double)arg4;	// 0x3117bdb5
- (int)setViewportExt:(int)ext :(int)arg2;	// 0x3117bd05
- (int)setViewportOrg:(int)org :(int)arg2;	// 0x3117bc89
- (int)setWindowExt:(int)ext :(int)arg2;	// 0x3117bbd9
- (int)setWindowOrg:(int)org :(int)arg2;	// 0x3117b855
- (int)setWorldTransform:(const CGAffineTransform *)transform;	// 0x312d3325
- (int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned long)arg10 :(CGAffineTransform *)arg11 :(unsigned long)arg12;	// 0x312300f1
- (int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned long)arg10 :(CGAffineTransform *)arg11 :(unsigned long)arg12 usePaletteForBilevel:(BOOL)bilevel;	// 0x31264209
- (int)strokeAndFillPath:(bool)path :(bool)arg2;	// 0x3124231d
- (int)textOut:(int)anOut :(int)arg2 :(id)arg3;	// 0x312a4c75
- (int)textOutEncoded:(int)encoded :(int)arg2 :(id)arg3;	// 0x312a4b4d
- (int)widenPath;	// 0x313aba59
@end

