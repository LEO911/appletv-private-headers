/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTV.framework/AppleTV
 */

#import "AppleTV-Structs.h"
#import "BRSingleton.h"
#import "ATVProgressMonitorConfiguration.h"

@class NSTimer, NSDictionary, NSNumber, NSString, BRBackgroundTask, NSMutableDictionary, NSArray;
@protocol BRMediaProvider;

@interface BRMusicStore : BRSingleton <ATVProgressMonitorConfiguration> {
@private
	int _musicStoreLoadState;	// 4 = 0x4
	NSDictionary *_storeFrontsDictionary;	// 8 = 0x8
	NSDictionary *_storeFrontCodesDictionary;	// 12 = 0xc
	NSNumber *_storeFrontID;	// 16 = 0x10
	NSArray *_rootCollection;	// 20 = 0x14
	NSArray *_partnerData;	// 24 = 0x18
	id<BRMediaProvider> _provider;	// 28 = 0x1c
	BOOL _initializing;	// 32 = 0x20
	NSString *_selectedLanguageCode;	// 36 = 0x24
	NSString *_storeMainMenuPresentsKey;	// 40 = 0x28
	dispatch_queue_s *_urlBagQueue;	// 44 = 0x2c
	NSDictionary *_urlBag;	// 48 = 0x30
	BRBackgroundTask *_bagReloadTask;	// 52 = 0x34
	NSTimer *_retryTimer;	// 56 = 0x38
	NSString *_platform;	// 60 = 0x3c
	BOOL _initializePlatform;	// 64 = 0x40
	NSMutableDictionary *_languageIDForLanguageCodeCache;	// 68 = 0x44
	BOOL _dsidSentWithLastStoreRefresh;	// 72 = 0x48
}
@property(retain) id currentStoreFrontID;	// G=0x32a8c53d; S=0x32a8c93d; converted property
@property(assign) BOOL dsidSentWithLastStoreRefresh;	// G=0x32a8eb11; S=0x32a8eb21; @synthesize=_dsidSentWithLastStoreRefresh
@property(assign) int musicStoreLoadState;	// G=0x32a8c325; S=0x32a8c335; converted property
@property(readonly, retain) NSArray *rootCollection;	// G=0x32a8e661; converted property
+ (void)setSingleton:(id)singleton;	// 0x32a8c09d
+ (id)singleton;	// 0x32a8c0ad
- (id)init;	// 0x32a8c0bd
- (id)URLBagEntryForKey:(id)key;	// 0x32a8c38d
- (id)_acceptLanguage;	// 0x32a9101d
- (void)_bootstrapMusicStore;	// 0x32a8ecb1
- (void)_bootstrapMusicStoreFromURL:(id)url;	// 0x32a8ece1
- (id)_canonicalNameForMediaType:(id)mediaType;	// 0x32a8eb3d
- (id)_currentStoreFrontsFilePath;	// 0x32a90c45
- (id)_defaultStoreFrontsFilePath;	// 0x32a90c15
- (id)_determineLanguageCodeForStoreFront:(id)storeFront;	// 0x32a912bd
- (void)_initializeGhostrider;	// 0x32a90239
- (BOOL)_initializeMusicStore;	// 0x32a8f7f9
- (id)_languageIDForLanguageCode:(id)languageCode;	// 0x32a911ad
- (BOOL)_loadRootCollection:(id)collection;	// 0x32a8f889
- (double)_maxAgeFromResponseHeaders:(id)responseHeaders;	// 0x32a903f9
- (void)_networkStateChanged:(id)changed;	// 0x32a906c5
- (id)_primaryMusicStoreURL;	// 0x32a8eb31
- (void)_requestStoreFrontList;	// 0x32a907c1
- (void)_retryRootCollection:(id)collection;	// 0x32a90219
- (void)_rootCollectionLoaded:(id)loaded;	// 0x32a8fc19
- (void)_seedMusicStore:(id)store;	// 0x32a8edf5
- (BOOL)_seedMusicStoreWithBag:(id)bag;	// 0x32a8f6a1
- (void)_seedRequestProcessed:(id)processed;	// 0x32a8f2b5
- (void)_setCurrentStoreFrontID:(id)anId language:(id)language platform:(id)platform;	// 0x32a90f51
- (void)_setRootCollection:(id)collection;	// 0x32a8fd59
- (void)_storeFrontListRequestProcessed:(id)processed;	// 0x32a90915
- (id)_storeFrontsDictionary;	// 0x32a90c79
- (id)_storeLanguageID;	// 0x32a910a1
- (void)_storeLoadFailed:(id)failed;	// 0x32a8ec09
- (void)_updateDateAndTimeFromResponse:(id)response;	// 0x32a9056d
- (void)_updateReloadTaskWithInterval:(double)interval;	// 0x32a8f17d
- (void)_updateStoreFrontFromResponse:(id)response;	// 0x32a904f9
- (id)_ytURLDictPath;	// 0x32a8cf2d
- (id)bandwidthHintReadyToPlayMaxTimeInSeconds;	// 0x32a8e031
- (id)beaconingPuntRatio;	// 0x32a8db0d
- (id)beaconingURLString;	// 0x32a8da2d
- (id)bookmarkSaveInterval;	// 0x32a8ddad
- (id)cacheBusterURLForURL:(id)url;	// 0x32a8c539
- (id)commonHeaders;	// 0x32a8e349
// converted property getter: - (id)currentStoreFrontID;	// 0x32a8c53d
- (id)currentStoreFrontISO3166Code;	// 0x32a8c789
- (void)dealloc;	// 0x32a8c1e5
- (void)decomposeCompositeStoreFrontHeader:(id)header;	// 0x32a8cbdd
- (void)delayedRootCollectionReset;	// 0x32a8e94d
- (id)downloadCapBytesSpeedtest;	// 0x32a8d86d
- (id)downloadCapInSecondsSpeedtest;	// 0x32a8d78d
- (id)downloadMovieSpeedTestURLsArray;	// 0x32a8d6ad
- (id)downloadSpeedTestKVSDomain;	// 0x32a8d4dd
- (id)downloadSpeedTestPostResultsURLString;	// 0x32a8d94d
- (id)downloadSpeedTestURLsArray;	// 0x32a8d5cd
// declared property getter: - (BOOL)dsidSentWithLastStoreRefresh;	// 0x32a8eb11
- (id)keyValueStoreGetAllURLString;	// 0x32a8dbed
- (id)keyValueStorePutAllURLString;	// 0x32a8dccd
- (id)matchLogoPath;	// 0x32a8e28d
- (id)matchStoreCategory;	// 0x32a8e1ad
// converted property getter: - (int)musicStoreLoadState;	// 0x32a8c325
- (id)previewBandwidthHintPromptTime;	// 0x32a8deb5
- (id)provider;	// 0x32a8cd31
- (void)purgeMusicStore;	// 0x32a8ce71
- (void)refreshURLBag;	// 0x32a8c315
// converted property getter: - (id)rootCollection;	// 0x32a8e661
- (id)rootCollectionForMediaType:(id)mediaType;	// 0x32a8e715
// converted property setter: - (void)setCurrentStoreFrontID:(id)anId;	// 0x32a8c93d
- (void)setCurrentStoreFrontID:(id)anId language:(id)language;	// 0x32a8c951
// declared property setter: - (void)setDsidSentWithLastStoreRefresh:(BOOL)lastStoreRefresh;	// 0x32a8eb21
// converted property setter: - (void)setMusicStoreLoadState:(int)state;	// 0x32a8c335
- (id)storeFronts;	// 0x32a8ea71
- (id)storeHeadersDictionary;	// 0x32a8e469
- (id)storeHeadersWithDsid;	// 0x328e6ddd
- (id)storeMainMenuPresentsURLKey;	// 0x32a8d0d9
- (id)storeRecommendationsURL;	// 0x32a8d211
- (id)storeRelatedMoviesURLString;	// 0x32a8d31d
- (id)storeViewMovieURLString;	// 0x32a8d3fd
- (id)userAgent;	// 0x32a8e551
- (id)vendorBags;	// 0x32a8e925
- (id)ytAuthURLBase;	// 0x32a8d01d
- (id)ytURLBase;	// 0x32a8cf61
@end

