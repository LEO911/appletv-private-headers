/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "ML3Entity.h"


@interface ML3Track : ML3Entity {
}
+ (id)TVShowEpisodesDefaultOrderingProperties;	// 0x34fa96f1
+ (BOOL)_clearLocationFromLibrary:(id)library persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x34faaf65
+ (BOOL)_deleteAssetAtPath:(id)path;	// 0x34fab239
+ (void)_enumeratePathsToDeleteFromLibrary:(id)library persistentIDs:(const long long *)ids count:(unsigned)count usingBlock:(id)block;	// 0x34fab29d
+ (id)_flattenedChapterDataWithImportChapters:(id)importChapters library:(id)library trackPersistentID:(long long)anId;	// 0x34fbec4d
+ (id)albumAllArtistsDefaultOrderingProperties;	// 0x34f93dd1
+ (id)albumAndArtistDefaultOrderingProperties;	// 0x34fa96c1
+ (id)albumsDefaultOrderingProperties;	// 0x34f8e5b1
+ (id)allProperties;	// 0x34fa9735
+ (id)artistAllAlbumsDefaultOrderingProperties;	// 0x34fa96a1
+ (id)artistsDefaultOrderingProperties;	// 0x34fa96b1
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x34faa3c5
+ (id)composersDefaultOrderingProperties;	// 0x34fa96d1
+ (id)containerQueryWithContainer:(id)container;	// 0x34fb706d
+ (id)containerQueryWithContainer:(id)container predicate:(id)predicate;	// 0x34fb70c5
+ (id)containerQueryWithContainer:(id)container predicate:(id)predicate orderingProperties:(id)properties;	// 0x34f8f5cd
+ (id)databaseTable;	// 0x34f8b575
+ (id)defaultOrderingProperties;	// 0x34f8b71d
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x34fa9821
+ (id)extraTablesToDelete;	// 0x34fa9745
+ (id)extraTablesToInsert;	// 0x34fa9755
+ (id)flattenedChapterDataFromSyncInfoDictionaries:(id)syncInfoDictionaries trackPersistentID:(long long)anId;	// 0x34fbf275
+ (id)foreignColumnForProperty:(id)property;	// 0x34f938a5
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x34f93865
+ (id)genresDefaultOrderingProperties;	// 0x34f93bf1
+ (void)initialize;	// 0x34f88de1
+ (id)joinClauseForProperty:(id)property;	// 0x34f8b521
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x34f93989
+ (id)orderingPropertiesForITTGTrackOrder:(unsigned long)ittgtrackOrder;	// 0x34fb6469
+ (id)persistentIDColumnForTable:(id)table;	// 0x34f938e5
+ (id)podcastsDefaultOrderingProperties;	// 0x34fa9691
+ (id)podcastsEpisodesDefaultOrderingProperties;	// 0x34fa96e1
+ (void)populateSortOrdersOfPropertyValues:(id)propertyValues inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x34fa9e71
+ (id)predisambiguatedProperties;	// 0x34f8b511
+ (int)revisionTrackingCode;	// 0x34f93901
+ (id)sectionPropertyForProperty:(id)property;	// 0x34f8bf8d
+ (id)subselectPropertyForProperty:(id)property;	// 0x34fa9701
+ (id)subselectStatementForProperty:(id)property;	// 0x34f8bfa9
+ (BOOL)trackValueAreInTheCloud:(id)theCloud;	// 0x34faaa75
+ (BOOL)trackWithPersistentID:(long long)persistentID existsInLibrary:(id)library;	// 0x34fa9d09
+ (BOOL)unlinkRedownloadableAssetsFromLibrary:(id)library persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x34faa471
+ (BOOL)unlinkRedownloadableAssetsFromLibrary:(id)library persistentIDs:(const long long *)ids count:(unsigned)count deletedFileSize:(long long *)size;	// 0x34faa495
+ (id)unsettableProperties;	// 0x34f93855
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x34faa2d1
- (id)absoluteFilePath;	// 0x34fa9795
- (id)artworkCacheIDAtPlaybackTime:(double)playbackTime;	// 0x34f8e8e5
- (id)chapterTOC;	// 0x34f92b41
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x34faad01
- (BOOL)populateArtworkCacheWithArtworkData:(id)artworkData;	// 0x34fbeb2d
- (void)populateChapterDataByImportingFromAsset;	// 0x34fbf7d9
- (void)populateChapterDataWithImportChapters:(id)importChapters;	// 0x34fbf57d
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x34fc0385
- (void)updateCollectionCloudStatus;	// 0x34faae0d
- (BOOL)updateIntegrity;	// 0x34faab0d
@end

