/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
@private
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x34f9ec85; 
@property(assign) ML3MusicLibrary *library;	// G=0x34f8d5b9; S=0x34fa0665; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x34f92af9; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x34f9fc11
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x34f8e109
+ (id)allProperties;	// 0x34fa0349
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x34f855d9
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x34fa0345
+ (id)defaultOrderingProperties;	// 0x34f9f259
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x34f9fdd1
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x34facf15
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x34f85b81
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x34fa047d
+ (id)extraTablesToDelete;	// 0x34fa033d
+ (id)extraTablesToInsert;	// 0x34f9293d
+ (id)foreignColumnForProperty:(id)property;	// 0x34f9f265
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x34f9f261
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x34f8e559
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type;	// 0x34f9e2ad
+ (id)indexableSQLForProperties:(id)properties;	// 0x34fa034d
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x34f92561
+ (BOOL)insertionChangesLibraryContents;	// 0x34f92945
+ (id)joinClauseForProperty:(id)property;	// 0x34f85c65
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x34f9fc0d
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x34f90161
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x34f9f185
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x34f8cf19
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x34f8c555
+ (id)persistentIDColumnForTable:(id)table;	// 0x34fa0341
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x34f8b45d
+ (id)predisambiguatedProperties;	// 0x34f85c0d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x34f8e999
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x34f8d775
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x34f8b72d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x34face99
+ (id)replacerWithProperties:(id)properties databaseHandle:(sqlite3 *)handle;	// 0x34fc7059
+ (int)revisionTrackingCode;	// 0x34fa0475
+ (id)sectionPropertyForProperty:(id)property;	// 0x34f9f25d
+ (id)subselectPropertyForProperty:(id)property;	// 0x34f9f181
+ (id)subselectStatementForProperty:(id)property;	// 0x34f862bd
+ (id)unsettableProperties;	// 0x34f9253d
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x34f90fdd
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x34f8cf49
- (id)copyInLibrary:(id)library;	// 0x34f9e9a9
- (id)copyWithZone:(NSZone *)zone;	// 0x34f9eb31
- (BOOL)deleteFromLibrary;	// 0x34fa02e9
- (id)description;	// 0x34f9ec29
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x34f93905
// declared property getter: - (BOOL)existsInLibrary;	// 0x34f9ec85
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x34f8d025
- (unsigned)hash;	// 0x34f9ec19
- (void)incrementRevision;	// 0x34fa060d
- (BOOL)isEqual:(id)equal;	// 0x34f9eb95
// declared property getter: - (id)library;	// 0x34f8d5b9
- (BOOL)matchesPredicate:(id)predicate;	// 0x34f9ef65
- (id)newSelectSQLForProperties:(id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x34f8d1a5
// declared property getter: - (long long)persistentID;	// 0x34f92af9
// declared property setter: - (void)setLibrary:(id)library;	// 0x34fa0665
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x34f92fd9
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x34f93001
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x34f937e1
- (id)valueForProperty:(id)property;	// 0x34f8e96d
@end

