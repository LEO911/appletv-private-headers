/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import <NSObject.h> // Unknown library
#import "SSAccountStore.h"
#import "NSObject.h"

@class SSAccount, NSLock, NSArray, SSDistributedNotificationCenter;

@protocol SSAccountStore <NSObject>
@property(readonly, assign) NSArray *accounts;
@property(readonly, assign) SSAccount *activeAccount;
@property(readonly, assign) SSAccount *activeLockerAccount;
@property(readonly, assign, getter=isExpired) BOOL expired;
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier;
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier reloadIfNecessary:(BOOL)necessary;
// declared property getter: - (id)accounts;
// declared property getter: - (id)activeAccount;
// declared property getter: - (id)activeLockerAccount;
- (id)addAccount:(id)account;
// declared property getter: - (BOOL)isExpired;
- (BOOL)isExpiredForTokenType:(int)tokenType;
- (void)resetExpiration;
- (void)resetExpirationForTokenType:(int)tokenType;
- (void)setAccountCredits:(id)credits forAccountWithUniqueIdentifier:(id)uniqueIdentifier;
- (id)setActiveAccount:(id)account;
- (id)setActiveLockerAccount:(id)account;
- (void)signOutAccount:(id)account;
- (void)signOutAllAccounts;
@end

@interface SSAccountStore : NSObject <SSAccountStore> {
@private
	NSArray *_accounts;	// 4 = 0x4
	BOOL _accountsValid;	// 8 = 0x8
	NSLock *_lock;	// 12 = 0xc
	SSDistributedNotificationCenter *_notificationCenter;	// 16 = 0x10
	id _observer;	// 20 = 0x14
}
@property(readonly, assign) NSArray *accounts;	// G=0x30500ee9; 
@property(readonly, assign) SSAccount *activeAccount;	// G=0x30500ff1; 
@property(readonly, assign) SSAccount *activeLockerAccount;	// G=0x3050111d; 
@property(retain) id distributedNotificationCenter;	// G=0x305013a5; S=0x3050178d; converted property
@property(readonly, assign, getter=isExpired) BOOL expired;	// G=0x30501249; 
+ (id)defaultStore;	// 0x30500e59
+ (id)existingDefaultStore;	// 0x3050126d
+ (BOOL)isExpired;	// 0x305019f5
+ (BOOL)isExpiredForTokenType:(int)tokenType;	// 0x30501a0d
+ (void)resetExpiration;	// 0x30501b2d
+ (void)resetExpirationForTokenType:(int)tokenType;	// 0x30501b41
+ (void)setDefaultStore:(id)store;	// 0x30501bc1
+ (double)tokenExpirationInterval;	// 0x30500ed5
- (id)init;	// 0x30500cb9
- (id)_accountWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x30501c15
- (id)_addAccount:(id)account withMessageParameters:(id)messageParameters;	// 0x30501cd9
- (void)_invalidateAccounts;	// 0x30501ed5
- (void)_postAccountStoreChanged;	// 0x3050200d
- (BOOL)_reloadAccountsIfNeeded;	// 0x30501f11
- (void)_setAccounts:(id)accounts;	// 0x30502051
- (void)_signOutWithUserInfo:(id)userInfo;	// 0x30502095
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x30500f69
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier reloadIfNecessary:(BOOL)necessary;	// 0x305012b1
// declared property getter: - (id)accounts;	// 0x30500ee9
// declared property getter: - (id)activeAccount;	// 0x30500ff1
// declared property getter: - (id)activeLockerAccount;	// 0x3050111d
- (id)addAccount:(id)account;	// 0x30501391
- (void)dealloc;	// 0x30500d91
// converted property getter: - (id)distributedNotificationCenter;	// 0x305013a5
// declared property getter: - (BOOL)isExpired;	// 0x30501249
- (BOOL)isExpiredForTokenType:(int)tokenType;	// 0x30501411
- (void)reloadAccounts;	// 0x30501435
- (void)resetExpiration;	// 0x30501485
- (void)resetExpirationForTokenType:(int)tokenType;	// 0x305014a1
- (void)setAccountCredits:(id)credits forAccountWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x305014bd
- (id)setActiveAccount:(id)account;	// 0x3050164d
- (id)setActiveLockerAccount:(id)account;	// 0x305016ed
// converted property setter: - (void)setDistributedNotificationCenter:(id)center;	// 0x3050178d
- (void)signOutAccount:(id)account;	// 0x3050190d
- (void)signOutAllAccounts;	// 0x305019e1
@end

