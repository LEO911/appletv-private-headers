/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import <DAAccount.h> // Unknown library
#import "DAEAS-Structs.h"

@class ASFolderHierarchy, ASProtocol, ASTaskManager, NSMutableSet, NSLock, NSMutableArray, ASAutodiscoverTask;

@interface ASAccount : DAAccount {
	ASFolderHierarchy *_folderHierarchy;	// 64 = 0x40
	ASTaskManager *_taskManager;	// 68 = 0x44
	ASProtocol *_protocol;	// 72 = 0x48
	NSMutableSet *_searchTaskSet;	// 76 = 0x4c
	NSMutableArray *_autodiscoveryServersToTry;	// 80 = 0x50
	NSLock *_autodiscoverTaskLock;	// 84 = 0x54
	ASAutodiscoverTask *_autodiscoverTask;	// 88 = 0x58
	BOOL _useHTTPForTesting;	// 92 = 0x5c
	BOOL _useLocalhostForAutodiscoveryTesting;	// 93 = 0x5d
	BOOL _isValidating;	// 94 = 0x5e
}
@property(assign, setter=setASAccountVersion:) int asAccountVersion;	// G=0x31871b11; S=0x31871b45; 
@property(retain) id emailAddress;	// G=0x31871e05; S=0x31871e21; converted property
@property(retain) id emailAddresses;	// G=0x31871e9d; S=0x31871f19; converted property
@property(retain) id encryptionIdentityPersistentReference;	// G=0x318724a5; S=0x318724c1; converted property
@property(retain) id host;	// G=0x31871cad; S=0x31871cc9; converted property
@property(retain) id lastKnownProtocolVersion;	// G=0x31872299; S=0x3187240d; converted property
@property(assign) int mailNumberOfPastDaysToSync;	// G=0x3187220d; S=0x3187227d; 
@property(readonly, assign) int mailNumberOfPastDaysToSyncUpperLimit;	// G=0x31872161; 
@property(assign) int port;	// G=0x31871d45; S=0x31871d61; converted property
@property(readonly, retain) ASProtocol *protocol;	// G=0x31872641; converted property
@property(retain) id savedFolderPathsThatClientsCareAbout;	// G=0x31872329; S=0x31872345; converted property
@property(retain) id signingIdentityPersistentReference;	// G=0x31872441; S=0x3187245d; converted property
@property(readonly, retain) ASTaskManager *taskManager;	// G=0x3186c281; converted property
@property(assign) BOOL useSSL;	// G=0x31871d7d; S=0x31871d9d; converted property
@property(retain) id username;	// G=0x31871b89; S=0x31871ba5; converted property
+ (Class)accountClass;	// 0x3186c095
+ (void)cleanUpFilesForAccountWithId:(id)anId;	// 0x3186c30d
+ (Class)clientClass;	// 0x31876db5
+ (id)defaultProperties;	// 0x3186c551
+ (id)supportedDataclasses;	// 0x3186c6cd
- (id)initWithProperties:(id)properties;	// 0x3186bfc9
- (void *)_copyDefaultExchangeEventsCalendar:(BOOL)calendar;	// 0x318703f1
- (void *)_copyExchangeCalendarStore:(BOOL)store;	// 0x318700ed
- (id)_defaultMailFolderWithDefaultType:(int)defaultType fallbackType:(int)type fallbackName:(id)name;	// 0x3186df61
- (void)_fillOutActionsArray:(id)array responseArray:(id)array2 withTask:(id)task added:(id)added removed:(id)removed modified:(id)modified perserved:(id)perserved addedResponse:(id)response modifiedResponse:(id)response9 removedResponse:(id)response10 fetchedResponse:(id)response11;	// 0x3186e30d
- (id)_folderHierarchy;	// 0x3186d2c5
- (BOOL)_generateAutodiscoverURLsForEmailAddress:(id)emailAddress;	// 0x31870f55
- (void)_getContextElementsForItemChangeType:(int)itemChangeType dataclass:(int)dataclass nativeContext:(id)context outContext:(id *)context4 outServerId:(id *)anId;	// 0x3186e295
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x3186cb11
- (id)_newPolicyManager;	// 0x3186bfc5
- (id)_oldURLsForKeychain;	// 0x3186c8a1
- (void)_removeInvitationsForMailboxFolderID:(id)mailboxFolderID;	// 0x3186e9f5
- (BOOL)_shouldSaveLastKnownProtocolVersion;	// 0x31872409
- (void)_startAutodiscoverTaskWithConsumer:(id)consumer;	// 0x31871261
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x3186cb1d
- (id)_visibleASFolders;	// 0x3186d349
- (void)accountDidUpdateProtocolVersion;	// 0x31872749
- (BOOL)accountNeedsUpgrade;	// 0x3186cfb1
- (id)addressBookConstraintsPath;	// 0x31872721
- (void)applyNewAccountProperties:(id)properties forceSave:(BOOL)save;	// 0x3186fe6d
// declared property getter: - (int)asAccountVersion;	// 0x31871b11
- (id)asFolderHierarchyTaskManager:(id)manager;	// 0x3186e1c5
- (id)asFolderWithId:(id)anId;	// 0x3186e16d
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x318713e5
- (void)autodiscoverTask:(id)task completedWithStatus:(int)status accountInfo:(id)info shouldRetryWithEmail:(id)email error:(id)error;	// 0x3187161d
- (void)blowAwayFolderCache;	// 0x3186e145
- (id)calendarConstraintsPath;	// 0x318726f9
- (void)cancelAllSearchQueries;	// 0x31870aa1
- (void)cancelAutodiscovery;	// 0x318711f1
- (void)cancelSearchQuery:(id)query;	// 0x31870959
- (void)cancelTaskWithID:(int)anId;	// 0x318700c1
- (void)checkValidityWithConsumer:(id)consumer;	// 0x3186c329
- (void)cleanupAccountFiles;	// 0x3186c241
- (id)contactsFolders;	// 0x3186d8fd
- (void)dealloc;	// 0x3186c0b1
- (id)defaultContactsFolder;	// 0x3186d75d
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x3186e229
- (id)defaultEventsFolder;	// 0x3186da09
- (id)defaultToDosFolder;	// 0x3186dcb5
- (id)deletedItemsFolder;	// 0x3186e0f1
- (id)displayName;	// 0x3186c781
- (id)domainOnly;	// 0x3187274d
// converted property getter: - (id)emailAddress;	// 0x31871e05
// converted property getter: - (id)emailAddresses;	// 0x31871e9d
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x3186d0a9
// converted property getter: - (id)encryptionIdentityPersistentReference;	// 0x318724a5
- (id)eventsFolders;	// 0x3186dba9
- (id)existingTaskManager;	// 0x3186c2fd
- (void)fetchAttachmentTask:(id)task completedWithStatus:(int)status dataWasBase64:(BOOL)a64 error:(id)error;	// 0x3186f769
- (void)fetchAttachmentTask:(id)task receivedData:(id)data ofContentType:(id)contentType;	// 0x3186f6fd
- (id)folderIdsThatExternalClientsCareAbout;	// 0x3186e1d5
- (id)folderIdsThatExternalClientsCareAboutForDataclasses:(int)dataclasses;	// 0x3186e1fd
- (void)folderItemsSyncTask:(id)task completedWithStatus:(int)status error:(id)error newSyncKey:(id)key added:(id)added removed:(id)removed modified:(id)modified addedResponse:(id)response modifiedResponse:(id)response9 removedResponse:(id)response10 fetchedResponse:(id)response11;	// 0x3186eb51
- (BOOL)folderItemsSyncTask:(id)task handleStreamOperation:(int)operation forCodePage:(int)codePage tag:(int)tag withParentItem:(id)parentItem withData:(char *)data dataLength:(int)length;	// 0x3186f291
- (BOOL)folderItemsSyncTask:(id)task hasPartialAdded:(id)added removed:(id)removed modified:(id)modified addedResponse:(id)response modifiedResponse:(id)response6 removedResponse:(id)response7 fetchedResponse:(id)response8 moreAvailable:(BOOL)available;	// 0x3186f4b9
- (id)folderWithId:(id)anId;	// 0x3186e199
- (id)foldersTag;	// 0x3186e11d
- (void)getOptionsTask:(id)task completedWithStatus:(int)status supportedCommands:(id)commands supportedVersions:(id)versions error:(id)error;	// 0x3186c3d5
// converted property getter: - (id)host;	// 0x31871cad
- (id)inboxFolder;	// 0x3186e099
- (BOOL)isActiveSyncAccount;	// 0x318727bd
- (BOOL)isEqualToAccount:(id)account;	// 0x31872889
- (BOOL)isGoogleAccount;	// 0x31872825
- (BOOL)isHotmailAccount;	// 0x318727c1
- (void)itemOperationsTask:(id)task completedWithStatus:(int)status error:(id)error responses:(id)responses;	// 0x3186f7d5
- (BOOL)itemOperationsTask:(id)task handleStreamOperation:(int)operation forCodePage:(int)codePage tag:(int)tag withParentItem:(id)parentItem withData:(char *)data dataLength:(int)length;	// 0x3186f9e1
- (BOOL)itemOperationsTask:(id)task hasPartialResponses:(id)responses;	// 0x3186fbed
// converted property getter: - (id)lastKnownProtocolVersion;	// 0x31872299
- (id)localizedIdenticalAccountFailureMessage;	// 0x31872ab5
- (id)localizedInvalidPasswordMessage;	// 0x31872b65
// declared property getter: - (int)mailNumberOfPastDaysToSync;	// 0x3187220d
// declared property getter: - (int)mailNumberOfPastDaysToSyncUpperLimit;	// 0x31872161
- (void)moveItemsTask:(id)task completedWithStatus:(int)status error:(id)error movedItems:(id)items;	// 0x3187058d
- (CFStringRef)passwordChangedNotificationName;	// 0x3186c839
- (CFStringRef)passwordIsKnownGoodNotificationName;	// 0x3186c86d
- (void)performSearchQuery:(id)query;	// 0x31870b79
- (id)policyManager;	// 0x3186c1c9
// converted property getter: - (int)port;	// 0x31871d45
// converted property getter: - (id)protocol;	// 0x31872641
- (void)resetAccountID;	// 0x3186d275
- (void)saveAccountSettings;	// 0x3186c1f1
// converted property getter: - (id)savedFolderPathsThatClientsCareAbout;	// 0x31872329
- (BOOL)searchQueriesRunning;	// 0x31870d9d
- (void)searchTask:(id)task finishedWithError:(id)error;	// 0x31870e75
- (void)searchTask:(id)task returnedResults:(id)results;	// 0x31870dc5
- (void)searchTask:(id)task returnedTotalCount:(id)count;	// 0x31870e0d
- (void)sendMailTask:(id)task completedWithStatus:(int)status error:(id)error;	// 0x3186fe29
- (int)sendMessageWithRFC822Data:(id)rfc822Data messageID:(id)anId outgoingMessageType:(int)type originalMessageFolderID:(id)anId4 originalMessageItemID:(id)anId5 originalMessageLongID:(id)anId6 originalAccountID:(id)anId7 consumer:(id)consumer context:(void *)context;	// 0x3186feb1
- (id)sentItemsFolder;	// 0x3186e0c5
// declared property setter: - (void)setASAccountVersion:(int)version;	// 0x31871b45
// converted property setter: - (void)setEmailAddress:(id)address;	// 0x31871e21
// converted property setter: - (void)setEmailAddresses:(id)addresses;	// 0x31871f19
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass changeType:(int)type;	// 0x3186d0f9
// converted property setter: - (void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x318724c1
- (BOOL)setFolderIdsThatExternalClientsCareAboutAdded:(id)added deleted:(id)deleted foldersTag:(id)tag;	// 0x3186e291
// converted property setter: - (void)setHost:(id)host;	// 0x31871cc9
// converted property setter: - (void)setLastKnownProtocolVersion:(id)version;	// 0x3187240d
- (void)setLastKnownProtocolVersion:(id)version save:(BOOL)save;	// 0x318722b5
// declared property setter: - (void)setMailNumberOfPastDaysToSync:(int)sync;	// 0x3187227d
// converted property setter: - (void)setPort:(int)port;	// 0x31871d61
- (void)setProtocolVersion:(id)version;	// 0x31872551
// converted property setter: - (void)setSavedFolderPathsThatClientsCareAbout:(id)about;	// 0x31872345
- (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x31871a69
// converted property setter: - (void)setSigningIdentityPersistentReference:(id)reference;	// 0x3187245d
- (void)setUseHTTPForTesting:(BOOL)testing;	// 0x318711d1
- (void)setUseLocalhostForAutodiscoveryTesting:(BOOL)autodiscoveryTesting;	// 0x318711e1
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x31871d9d
// converted property setter: - (void)setUsername:(id)username;	// 0x31871ba5
- (id)shortTypeString;	// 0x3186c7e5
- (BOOL)shouldFixOnDiskDeviceId;	// 0x3186e309
- (BOOL)shouldSavePropertiesForFolderPathsThatClientsCareAbout;	// 0x31872325
// converted property getter: - (id)signingIdentityPersistentReference;	// 0x31872441
- (int)sniffableTypeForFolder:(id)folder;	// 0x3186d5e1
- (id)stateString;	// 0x3186c4cd
- (id)supportedDataclasses;	// 0x3186c6ed
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x3186c4ad
- (int)supportsEmailFlagging;	// 0x318726d1
- (int)supportsMailboxSearch;	// 0x318726a9
// converted property getter: - (id)taskManager;	// 0x3186c281
- (id)toDosFolders;	// 0x3186de55
- (id)typeString;	// 0x3186c791
- (BOOL)upgradeAccount;	// 0x3186cf29
- (void)upgradeWithProtocolVersion:(id)protocolVersion;	// 0x31872509
// converted property getter: - (BOOL)useSSL;	// 0x31871d7d
// converted property getter: - (id)username;	// 0x31871b89
- (id)usernameWithoutDomain;	// 0x31871c21
- (id)visibleFolders;	// 0x3186d32d
@end

