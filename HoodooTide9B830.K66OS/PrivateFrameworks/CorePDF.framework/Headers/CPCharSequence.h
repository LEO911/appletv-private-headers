/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import "CorePDF-Structs.h"
#import <NSObject.h> // Unknown library
#import "CPDisposable.h"
#import "NSCopying.h"

@class CPMemoryOwner;

@interface CPCharSequence : NSObject <NSCopying, CPDisposable> {
	unsigned length;	// 4 = 0x4
	CPPDFChar **charArray;	// 8 = 0x8
	unsigned previousSize;	// 12 = 0xc
	unsigned size;	// 16 = 0x10
	CPMemoryOwner *sharedMemory;	// 20 = 0x14
	BOOL wasMerged;	// 24 = 0x18
}
@property(readonly, assign) CPPDFChar **charArray;	// G=0x3109feb9; converted property
@property(readonly, assign) unsigned length;	// G=0x3109fea9; converted property
@property(readonly, assign) BOOL wasMerged;	// G=0x3109fec9; converted property
- (id)initWithChars:(CPPDFChar *)chars length:(unsigned)length;	// 0x310a02b9
- (id)initWithSizeFor:(unsigned)aFor;	// 0x310a137d
- (void)addChar:(CPPDFChar *)aChar;	// 0x310a1039
- (void)addChars:(CPPDFChar *)chars length:(unsigned)length;	// 0x310a0fcd
- (void)addChars:(CPPDFChar *)chars length:(unsigned)length ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x310a0f41
- (void)addCharsFromSequence:(id)sequence;	// 0x310a0edd
- (CGRect)bounds;	// 0x310a0459
- (CGRect)boundsFrom:(unsigned)from length:(unsigned)length;	// 0x310a034d
// converted property getter: - (CPPDFChar **)charArray;	// 0x3109feb9
- (CPPDFChar *)charAtIndex:(unsigned)index;	// 0x310a1095
- (void)copyToSubsequence:(id)subsequence from:(unsigned)from length:(unsigned)length;	// 0x310a06c9
- (void)copyToSubsequence:(id)subsequence ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x310a0621
- (id)copyWithZone:(NSZone *)zone;	// 0x310a1229
- (void)dealloc;	// 0x310a131d
- (void)dispose;	// 0x310a0281
- (void)finalize;	// 0x310a030d
// converted property getter: - (unsigned)length;	// 0x3109fea9
- (BOOL)map:(/*function-pointer*/ void *)map passing:(void *)passing;	// 0x3109fed9
- (BOOL)map:(/*function-pointer*/ void *)map whereNeighborsWith:(id)with passing:(void *)passing;	// 0x310a0045
- (BOOL)mapToPairs:(/*function-pointer*/ void *)pairs passing:(void *)passing;	// 0x3109ff81
- (BOOL)mapToPairsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x3109ffe1
- (BOOL)mapWithIndex:(/*function-pointer*/ void *)index from:(unsigned)from length:(unsigned)length passing:(void *)passing;	// 0x310a0489
- (BOOL)mapWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x3109ff29
- (void)merge:(id)merge by:(/*function-pointer*/ void *)by;	// 0x310a0af5
- (void)mergeByAnchorXIncreasingYDecreasing:(id)decreasing;	// 0x310a0bdd
- (void)mergeByAnchorYDecreasingXIncreasing:(id)increasing;	// 0x310a0bf9
- (id)newSubsequenceFrom:(unsigned)from length:(unsigned)length;	// 0x310a09a5
- (void)removeAllChars;	// 0x310a0e21
- (void)removeChar;	// 0x310a0e9d
- (void)removeCharAtIndex:(unsigned)index;	// 0x310a0d01
- (void)removeFrom:(unsigned)from;	// 0x310a0cad
- (BOOL)removeSubsequences:(id)subsequences whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x310a0769
- (BOOL)removeToSubsequence:(id)subsequence ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x310a050d
- (void)replaceCharAtIndex:(unsigned)index withChar:(CPPDFChar *)aChar;	// 0x310a0da9
- (void)resize:(unsigned)resize;	// 0x310a10e5
- (void)sortBy:(/*function-pointer*/ void *)by;	// 0x310a0c15
- (void)sortByAnchorXIncreasingYDecreasing;	// 0x310a0c75
- (void)sortByAnchorYDecreasingXIncreasing;	// 0x310a0c91
- (void)splitToSubsequences:(id)subsequences whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x310a08ad
// converted property getter: - (BOOL)wasMerged;	// 0x3109fec9
@end

