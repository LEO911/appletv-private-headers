/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import <NSObject.h> // Unknown library
#import "GeoServices-Structs.h"

@class NSMutableArray, GEOExpiringTileCache, NSMapTable, NSLock, GEOTileCache;
@protocol GEOTileServerProxy;

@interface GEOTileLoader : NSObject {
	GEOTileCache *_tiles;	// 4 = 0x4
	GEOExpiringTileCache *_expTiles;	// 8 = 0x8
	NSMapTable *_pendingLoads;	// 12 = 0xc
	NSLock *_pendingLoadsLock;	// 16 = 0x10
	NSMapTable *_pendingNetworkLoads;	// 20 = 0x14
	NSLock *_pendingNetworkLoadsLock;	// 24 = 0x18
	NSMutableArray *_tileDecoders;	// 28 = 0x1c
	id<GEOTileServerProxy> _serverConnection;	// 32 = 0x20
	int _memoryHits;	// 36 = 0x24
	int _diskHits;	// 40 = 0x28
	int _networkHits;	// 44 = 0x2c
}
@property(readonly, assign, nonatomic) int diskHits;	// G=0x35f1a3a5; 
@property(readonly, assign, nonatomic) int memoryHits;	// G=0x35f1a395; 
@property(readonly, assign, nonatomic) int networkHits;	// G=0x35f1a3b5; 
+ (id)diskCacheLocation;	// 0x35f186c1
+ (void)setDiskCacheLocation:(id)location;	// 0x35f18681
+ (id)sharedLoader;	// 0x35f186dd
+ (void)useLocalLoader;	// 0x35f18671
+ (void)useRemoteLoader;	// 0x35f18661
- (id)init;	// 0x35f18749
- (void)_asyncDecodeTile:(id)tile forKey:(const GEOTileKey *)key completion:(id)completion;	// 0x35f18bd5
- (id)_decodeTile:(id)tile forKey:(const GEOTileKey *)key;	// 0x35f18b01
- (void)_loadTilesFromServer:(id)server checkDisk:(BOOL)disk allowNetworking:(BOOL)networking;	// 0x35f194e1
- (void)_tileEditionChanged:(id)changed;	// 0x35f193bd
- (void)cancelAllRequests;	// 0x35f19a99
- (void)cancelRequest:(id)request;	// 0x35f19cfd
- (void)clearAllCaches;	// 0x35f18ac5
- (void)closeDatabase;	// 0x35f1937d
- (void)dealloc;	// 0x35f1896d
// declared property getter: - (int)diskHits;	// 0x35f1a3a5
- (id)expireTilesWithType:(unsigned char)type provider:(unsigned short)provider olderThan:(double)than;	// 0x35f1a2c1
- (id)hostnameForProviderID:(unsigned short)providerID;	// 0x35f1a335
- (void)loadTiles:(id)tiles progress:(id)progress finished:(id)finished error:(id)error;	// 0x35f199ad
- (void)loadTilesFromCache:(id)cache progress:(id)progress finished:(id)finished error:(id)error;	// 0x35f19981
- (void)loadTilesFromCacheAndNetwork:(id)cacheAndNetwork progress:(id)progress finished:(id)finished error:(id)error;	// 0x35f19955
- (void)loadTilesFromCacheAndNetwork:(id)cacheAndNetwork progress:(id)progress finished:(id)finished error:(id)error skipNetwork:(BOOL)network;	// 0x35f196c1
// declared property getter: - (int)memoryHits;	// 0x35f1a395
// declared property getter: - (int)networkHits;	// 0x35f1a3b5
- (void)openDatabase;	// 0x35f1939d
- (void)registerTileDecoder:(id)decoder;	// 0x35f18a61
- (void)registerTileLoader:(Class)loader;	// 0x35f1a2e1
- (id)renderDataForKey:(GEOTileKey *)key;	// 0x35f18f61
- (id)renderDataForKey:(GEOTileKey *)key asyncHandler:(id)handler;	// 0x35f19095
- (void)tileServerProxy:(id)proxy receivedData:(id)data forKey:(GEOTileKey)key forRequest:(id)request fromDisk:(BOOL)disk;	// 0x35f19e19
- (void)tileServerProxy:(id)proxy receivedError:(id)error forRequest:(id)request;	// 0x35f1a085
- (void)tileServerProxy:(id)proxy requestFinished:(id)finished;	// 0x35f1a1a5
- (void)tileServerProxy:(id)proxy requestMovedToNetwork:(id)network;	// 0x35f1a081
@end

