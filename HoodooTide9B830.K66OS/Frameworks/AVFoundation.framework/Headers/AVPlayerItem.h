/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class AVPlayerItemInternal, NSError, NSString, NSDate;

@interface AVPlayerItem : NSObject <NSCopying> {
@private
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x35e26421; S=0x35e264d5; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x35e26589; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x35e2669d; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x35e2685d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x35e26749; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x35e267b1; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x35e265f1; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x35e22875; S=0x35e22a21; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x35e26135; 
@property(retain) id audioMix;	// G=0x35e23129; S=0x35e23305; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x35e26115; 
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x35e27881; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x35e26189; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x35e22ea5; S=0x35e23051; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x35e22b8d; S=0x35e22d39; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x35e2783d; S=0x35e277a1; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x35e27999; S=0x35e27919; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x35e1fcc1; @dynamic
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x35e21dfd; S=0x35e21fd1; converted property
@property(retain) id gaplessInfo;	// G=0x35e24419; S=0x35e247bd; converted property
@property(retain) id initialDate;	// G=0x35e21ad5; S=0x35e21b19; converted property
@property(retain) id initialEstimatedDate;	// G=0x35e21bfd; S=0x35e21c41; converted property
@property(assign) BOOL limitReadAhead;	// G=0x35e2255d; S=0x35e22709; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x35e25b35; S=0x35e25b55; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x35e221d1; S=0x35e223a5; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x35e249b1; S=0x35e24911; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x35e1fca1; @dynamic
@property(retain) id videoComposition;	// G=0x35e233d5; S=0x35e23419; converted property
@property(assign) float volumeAdjustment;	// G=0x35e24ae5; S=0x35e24a45; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x35e1d5c5
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x35e1d5b1
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x35e261dd
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x35e263c1
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x35e22af5
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x35e260f5
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x35e233d1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x35e23125
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x35e22e0d
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x35e220f1
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x35e2489d
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x35e227dd
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x35e26109
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x35e25c21
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x35e260fd
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x35e26101
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x35e260f9
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x35e2610d
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x35e224c5
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x35e26105
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x35e249d1
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x35e260f1
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x35e26111
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x35e236d1
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x35e24b05
+ (void)initialize;	// 0x35e1d551
+ (id)playerItemWithAsset:(id)asset;	// 0x35e1d621
+ (id)playerItemWithURL:(id)url;	// 0x35e1d5d9
- (id)init;	// 0x35e1d969
- (id)initWithAsset:(id)asset;	// 0x35e1dae1
- (id)initWithURL:(id)url;	// 0x35e1da25
- (int)_CreateSeekID;	// 0x35e211a5
- (id)_URL;	// 0x35e1f851
- (void)_addFPListeners;	// 0x35e20621
- (void)_addSyncLayer:(id)layer;	// 0x35e25ec9
- (BOOL)_alwaysMonitorsPlayability;	// 0x35e227e1
- (void)_applyAudioMix;	// 0x35e2316d
- (void)_applyInitialAudioMix;	// 0x35e232ad
- (void)_applyMediaSelectionOptions;	// 0x35e24d3d
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x35e24ec9
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x35e1ef9d
- (long long)_availableFileSize;	// 0x35e27715
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x35e25131
- (id)_cachedValueForKey:(id)key;	// 0x35e1e5c5
- (BOOL)_canPlayFastForward;	// 0x35e20cbd
- (BOOL)_canPlayFastReverse;	// 0x35e20e15
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x35e21201
- (void)_changeStatusToFailedWithError:(id)error;	// 0x35e1fd05
- (void)_configurePlaybackItemForPlayerType:(int)playerType;	// 0x35e1e889
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x35e22e11
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x35e22af9
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x35e1ef05
- (void)_createPlayerItemInternal;	// 0x35e1d669
- (void)_detachFromPlayer;	// 0x35e1f70d
- (void)_didAccessKVOForKey:(id)key;	// 0x35e1e61d
- (XXStruct_pwHToB)_duration;	// 0x35e1fe85
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x35e25c25
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x35e1e585
- (long long)_fileSize;	// 0x35e27689
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x35e21d21
- (id)_fpNotificationNames;	// 0x35e204a1
- (BOOL)_hasEnabledVideoMedia;	// 0x35e25fc1
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x35e1fbf1
- (void)_insertAfterItem:(id)item;	// 0x35e1f771
- (void)_invokeReadyForEnqueueingHandlers;	// 0x35e20a29
- (BOOL)_isCurrentPlayerItem;	// 0x35e1ed71
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x35e26421
// declared property getter: - (BOOL)_isRental;	// 0x35e26589
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x35e26749
- (void)_kickAssetObserversIfAppropriate;	// 0x35e1fb49
- (BOOL)_limitReadAhead;	// 0x35e224c9
- (id)_loadedTimeRanges;	// 0x35e240b5
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x35e1f9c9
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x35e20b25
- (id)_nextItem;	// 0x35e1f731
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x35e25f5d
- (id)_playbackProperties;	// 0x35e2445d
- (id)_player;	// 0x35e1ed45
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x35e1f721
- (id)_playerConnection;	// 0x35e1ee89
- (CGSize)_presentationSize;	// 0x35e20f6d
- (id)_previousItem;	// 0x35e1f751
- (id)_propertyStorage;	// 0x35e1e5a5
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x35e22951
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x35e22f81
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x35e22c69
- (void)_quietlySetEQPreset:(int)preset;	// 0x35e275bd
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x35e21f0d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x35e22639
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x35e24501
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x35e222e1
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x35e248a1
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x35e249d5
- (void)_removeFPListeners;	// 0x35e207fd
- (void)_removeFromItems;	// 0x35e1f7e5
- (void)_removeSyncLayer:(id)layer;	// 0x35e25e7d
// declared property getter: - (id)_rentalExpirationDate;	// 0x35e2669d
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x35e2685d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x35e267b1
// declared property getter: - (id)_rentalStartDate;	// 0x35e265f1
- (void)_respondToBecomingReadyForBasicInspection;	// 0x35e20941
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x35e220f5
- (id)_seekableTimeRanges;	// 0x35e23d51
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x35e251f5
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x35e25305
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x35e25471
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x35e25069
- (id)_selectedMediaOptionInAlternateTrackGroup:(id)alternateTrackGroup;	// 0x35e25559
- (id)_selectedMediaOptionInKeyValueGroup:(id)keyValueGroup;	// 0x35e258a1
- (void)_setAsset:(id)asset;	// 0x35e1f8b5
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x35e1fa89
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x35e1f911
- (void)_setAudibleDRMInfo:(id)info;	// 0x35e27519
- (void)_setEQPreset:(int)preset;	// 0x35e2762d
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x35e24ff5
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x35e264d5
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x35e1ed91
- (void)_setPlayerConnection:(id)connection;	// 0x35e1eea9
- (void)_setRampInOutInfo:(id)outInfo;	// 0x35e27475
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x35e25df5
- (void)_setTimedMetadata:(id)metadata;	// 0x35e25d81
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x35e1f96d
- (void)_setURL:(id)url;	// 0x35e1f871
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x35e236d5
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x35e23865
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x35e237e1
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x35e23771
- (void)_setVideoCompositor:(id)compositor;	// 0x35e238b5
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x35e1e565
- (id)_trackWithTrackID:(int)trackID;	// 0x35e203d9
- (id)_tracks;	// 0x35e20065
- (id)_unregisterAndReturnRetainedSeekCompletionHandler;	// 0x35e213a9
- (id)_weakReference;	// 0x35e1e545
- (void)_willAccessKVOForKey:(id)key;	// 0x35e1e5f1
- (id)accessLog;	// 0x35e26909
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x35e1e709
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x35e22875
- (id)asset;	// 0x35e1fe41
// converted property getter: - (id)audioMix;	// 0x35e23129
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x35e27881
- (BOOL)canPlayFastForward;	// 0x35e20d39
- (BOOL)canPlayFastReverse;	// 0x35e20e91
- (void)cancelPendingSeeks;	// 0x35e21981
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x35e22ea5
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x35e22b8d
- (id)copyWithZone:(NSZone *)zone;	// 0x35e1dfe9
- (id)currentDate;	// 0x35e21a09
- (id)currentEstimatedDate;	// 0x35e21b75
- (XXStruct_pwHToB)currentTime;	// 0x35e210f1
// declared property getter: - (id)dataYouTubeID;	// 0x35e2783d
- (void)dealloc;	// 0x35e1dbc1
- (id)description;	// 0x35e1e3dd
- (void)didChangeValueForKey:(id)key;	// 0x35e1e6a9
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x35e279b9
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x35e27999
- (XXStruct_pwHToB)duration;	// 0x35e1ff29
// declared property getter: - (id)error;	// 0x35e1fcc1
- (id)errorLog;	// 0x35e269d5
- (void)finalize;	// 0x35e1dee5
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x35e21dfd
// converted property getter: - (id)gaplessInfo;	// 0x35e24419
// converted property getter: - (id)initialDate;	// 0x35e21ad5
// converted property getter: - (id)initialEstimatedDate;	// 0x35e21bfd
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x35e26135
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x35e26115
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x35e26189
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x35e25b35
- (BOOL)isPlaybackBufferEmpty;	// 0x35e23b5d
- (BOOL)isPlaybackBufferFull;	// 0x35e23a65
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x35e2396d
// converted property getter: - (BOOL)limitReadAhead;	// 0x35e2255d
- (id)loadedTimeRanges;	// 0x35e24381
- (id)playabilityMetrics;	// 0x35e23ccd
- (CGSize)presentationSize;	// 0x35e20fe5
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x35e23c55
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x35e221d1
- (BOOL)seekToDate:(id)date;	// 0x35e21a91
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x35e213f5
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x35e214a9
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x35e2142d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x35e21511
- (id)seekableTimeRanges;	// 0x35e2401d
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x35e25535
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x35e24c41
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x35e25a95
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x35e24b09
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x35e22a21
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x35e23305
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x35e23051
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x35e22d39
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x35e277a1
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x35e27919
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x35e21fd1
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x35e247bd
// converted property setter: - (void)setInitialDate:(id)date;	// 0x35e21b19
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x35e21c41
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x35e22709
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x35e25b55
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x35e223a5
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x35e24911
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x35e23419
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x35e24a45
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x35e249b1
// declared property getter: - (int)status;	// 0x35e1fca1
- (void)stepByCount:(int)count;	// 0x35e21c9d
- (id)timedMetadata;	// 0x35e25d3d
- (id)tracks;	// 0x35e20321
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x35e1e4bd
// converted property getter: - (id)videoComposition;	// 0x35e233d5
// converted property getter: - (float)volumeAdjustment;	// 0x35e24ae5
- (void)willChangeValueForKey:(id)key;	// 0x35e1e649
@end

