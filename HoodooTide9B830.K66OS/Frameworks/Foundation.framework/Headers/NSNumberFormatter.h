/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x31626961; S=0x31599c79; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x31626afd; S=0x315ba8bd; converted property
@property(retain) id currencyCode;	// G=0x31627c5d; S=0x31627d1d; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x31626bb1; S=0x31626c71; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x316296f1; S=0x316297b1; converted property
@property(retain) id currencySymbol;	// G=0x31627db9; S=0x31627e79; converted property
@property(retain) id decimalSeparator;	// G=0x316269a1; S=0x31626a61; converted property
@property(retain) id exponentSymbol;	// G=0x316285e1; S=0x316286a1; converted property
@property(assign) unsigned formatWidth;	// G=0x31628971; S=0x31628a4d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x3162638d; S=0x315ba6d1; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x31626345; S=0x315a968d; converted property
@property(retain) id groupingSeparator;	// G=0x31626dc1; S=0x31626e81; converted property
@property(assign) unsigned groupingSize;	// G=0x3162873d; S=0x315b50ed; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x31627f15; S=0x31627fd5; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x3162984d; S=0x3162990d; converted property
@property(retain) id locale;	// G=0x316262d5; S=0x315a9621; converted property
@property(retain) id maximum;	// G=0x31629635; S=0x3162965d; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x3162949d; S=0x315af839; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x31629269; S=0x31629345; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x31629c25; S=0x31629d01; converted property
@property(retain) id minimum;	// G=0x31629579; S=0x316295a1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x316293c1; S=0x315ba93d; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x3162918d; S=0x315ba9b9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x31629acd; S=0x31629ba9; converted property
@property(retain) id minusSign;	// G=0x31628329; S=0x316283e9; converted property
@property(retain) id multiplier;	// G=0x31628ac9; S=0x31628b89; converted property
@property(retain) id negativeFormat;	// G=0x316263cd; S=0x31626485; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x3162758d; S=0x31599c21; converted property
@property(retain) id negativePrefix;	// G=0x316279a5; S=0x31627a65; converted property
@property(retain) id negativeSuffix;	// G=0x31627b01; S=0x31627bc1; converted property
@property(retain) id nilSymbol;	// G=0x31627095; S=0x31599b71; converted property
@property(retain) id notANumberSymbol;	// G=0x316271f5; S=0x316272b5; converted property
@property(assign) unsigned numberStyle;	// G=0x31626255; S=0x3159ef41; converted property
@property(retain) id paddingCharacter;	// G=0x31628c25; S=0x31628ce5; converted property
@property(assign) unsigned paddingPosition;	// G=0x31628d81; S=0x31628e5d; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x31629d7d; S=0x31629dc5; converted property
@property(retain) id perMillSymbol;	// G=0x316281cd; S=0x3162828d; converted property
@property(retain) id percentSymbol;	// G=0x31628071; S=0x31628131; converted property
@property(retain) id plusSign;	// G=0x31628485; S=0x31628545; converted property
@property(retain) id positiveFormat;	// G=0x316266bd; S=0x31626759; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x3162742d; S=0x31599bc9; converted property
@property(retain) id positivePrefix;	// G=0x316276ed; S=0x316277ad; converted property
@property(retain) id positiveSuffix;	// G=0x31627849; S=0x31627909; converted property
@property(retain) id roundingIncrement;	// G=0x31629031; S=0x316290f1; converted property
@property(assign) unsigned roundingMode;	// G=0x31628ed9; S=0x31628fb5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x31628819; S=0x316288f5; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x31627611; S=0x31627695; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x316265e1; S=0x31626665; converted property
@property(retain) id textAttributesForNil;	// G=0x31627119; S=0x3162719d; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x31627351; S=0x316273d5; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x316274b1; S=0x31627535; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x31626885; S=0x31626909; converted property
@property(retain) id textAttributesForZero;	// G=0x31626fb9; S=0x3162703d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x31626d0d; S=0x3159d321; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x3162998d; S=0x31629a4d; converted property
@property(retain) id zeroSymbol;	// G=0x315b2355; S=0x31626f1d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x31599b61
+ (void)initialize;	// 0x31599791
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x315baab1
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x315997bd
- (id)init;	// 0x315997d5
- (id)initWithCoder:(id)coder;	// 0x3162579d
- (void *)__Keynote_NOOP;	// 0x316254cd
- (void)_regenerateFormatter;	// 0x31599cd5
- (void)_reset;	// 0x316254d1
// converted property getter: - (BOOL)allowsFloats;	// 0x31626961
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x31626afd
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x3162593d
- (id)copyWithZone:(NSZone *)zone;	// 0x3162568d
// converted property getter: - (id)currencyCode;	// 0x31627c5d
// converted property getter: - (id)currencyDecimalSeparator;	// 0x31626bb1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x316296f1
// converted property getter: - (id)currencySymbol;	// 0x31627db9
- (void)dealloc;	// 0x315a9761
// converted property getter: - (id)decimalSeparator;	// 0x316269a1
- (void)encodeWithCoder:(id)coder;	// 0x316256f5
// converted property getter: - (id)exponentSymbol;	// 0x316285e1
- (void)finalize;	// 0x31625649
// converted property getter: - (unsigned)formatWidth;	// 0x31628971
// converted property getter: - (unsigned)formatterBehavior;	// 0x3162638d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x31626345
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x31625941
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x316261f9
// converted property getter: - (id)groupingSeparator;	// 0x31626dc1
// converted property getter: - (unsigned)groupingSize;	// 0x3162873d
// converted property getter: - (id)internationalCurrencySymbol;	// 0x31627f15
// converted property getter: - (BOOL)isLenient;	// 0x3162984d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x31629d7d
// converted property getter: - (id)locale;	// 0x316262d5
// converted property getter: - (id)maximum;	// 0x31629635
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x3162949d
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x31629269
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x31629c25
// converted property getter: - (id)minimum;	// 0x31629579
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x316293c1
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x3162918d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x31629acd
// converted property getter: - (id)minusSign;	// 0x31628329
// converted property getter: - (id)multiplier;	// 0x31628ac9
// converted property getter: - (id)negativeFormat;	// 0x316263cd
// converted property getter: - (id)negativeInfinitySymbol;	// 0x3162758d
// converted property getter: - (id)negativePrefix;	// 0x316279a5
// converted property getter: - (id)negativeSuffix;	// 0x31627b01
// converted property getter: - (id)nilSymbol;	// 0x31627095
// converted property getter: - (id)notANumberSymbol;	// 0x316271f5
- (id)numberFromString:(id)string;	// 0x31626219
// converted property getter: - (unsigned)numberStyle;	// 0x31626255
// converted property getter: - (id)paddingCharacter;	// 0x31628c25
// converted property getter: - (unsigned)paddingPosition;	// 0x31628d81
// converted property getter: - (id)perMillSymbol;	// 0x316281cd
// converted property getter: - (id)percentSymbol;	// 0x31628071
// converted property getter: - (id)plusSign;	// 0x31628485
// converted property getter: - (id)positiveFormat;	// 0x316266bd
// converted property getter: - (id)positiveInfinitySymbol;	// 0x3162742d
// converted property getter: - (id)positivePrefix;	// 0x316276ed
// converted property getter: - (id)positiveSuffix;	// 0x31627849
// converted property getter: - (id)roundingIncrement;	// 0x31629031
// converted property getter: - (unsigned)roundingMode;	// 0x31628ed9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x31628819
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x31599c79
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x315ba8bd
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x31627d1d
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x31626c71
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x316297b1
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x31627e79
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x31626a61
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x316286a1
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x31628a4d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x315ba6d1
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x315a968d
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x31626e81
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x315b50ed
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x31627fd5
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x3162990d
// converted property setter: - (void)setLocale:(id)locale;	// 0x315a9621
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x3162965d
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x315af839
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x31629345
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x31629d01
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x316295a1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x315ba93d
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x315ba9b9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x31629ba9
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x316283e9
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x31628b89
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x31626485
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x31599c21
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x31627a65
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x31627bc1
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x31599b71
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x316272b5
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3159ef41
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x31628ce5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x31628e5d
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x31629dc5
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x3162828d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x31628131
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x31628545
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x31626759
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x31599bc9
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x316277ad
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x31627909
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x316290f1
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x31628fb5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x316288f5
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x31627695
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x31626665
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x3162719d
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x316273d5
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x31627535
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x31626909
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x3162703d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x3159d321
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x31629a4d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x31626f1d
- (id)stringForObjectValue:(id)objectValue;	// 0x3159d3c1
- (id)stringFromNumber:(id)number;	// 0x3159d3a1
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x31627611
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x316265e1
// converted property getter: - (id)textAttributesForNil;	// 0x31627119
// converted property getter: - (id)textAttributesForNotANumber;	// 0x31627351
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x316274b1
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x31626885
// converted property getter: - (id)textAttributesForZero;	// 0x31626fb9
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x31626d0d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x3162998d
// converted property getter: - (id)zeroSymbol;	// 0x315b2355
@end

