/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSPredicate.h"
#import "Foundation-Structs.h"

@class NSExpression, NSPredicateOperator;

@interface NSComparisonPredicate : NSPredicate {
@private
	void *_reserved2;	// 8 = 0x8
	NSPredicateOperator *_predicateOperator;	// 12 = 0xc
	NSExpression *_lhs;	// 16 = 0x10
	NSExpression *_rhs;	// 20 = 0x14
}
@property(retain) NSPredicateOperator *predicateOperator;	// G=0x315a5a6d; S=0x315a93ed; converted property
+ (id)predicateWithLeftExpression:(id)leftExpression rightExpression:(id)expression customSelector:(SEL)selector;	// 0x3163fe05
+ (id)predicateWithLeftExpression:(id)leftExpression rightExpression:(id)expression modifier:(unsigned)modifier type:(unsigned)type options:(unsigned)options;	// 0x315a5bed
+ (id)predicateWithPredicateOperator:(id)predicateOperator leftExpression:(id)expression rightExpression:(id)expression3;	// 0x3163ff55
+ (id)predicateWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightKeyPath:(id)path3;	// 0x3163ff0d
+ (id)predicateWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightValue:(id)value;	// 0x3163fec5
- (id)initWithCoder:(id)coder;	// 0x315a5511
- (id)initWithLeftExpression:(id)leftExpression rightExpression:(id)expression customSelector:(SEL)selector;	// 0x3163fe4d
- (id)initWithLeftExpression:(id)leftExpression rightExpression:(id)expression modifier:(unsigned)modifier type:(unsigned)type options:(unsigned)options;	// 0x315a5c41
- (id)initWithPredicateOperator:(id)predicateOperator leftExpression:(id)expression rightExpression:(id)expression3;	// 0x31583cb1
- (id)initWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightKeyPath:(id)path3;	// 0x316400cd
- (id)initWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightValue:(id)value;	// 0x316401a1
- (void)_acceptExpressions:(id)expressions flags:(unsigned)flags;	// 0x315a6139
- (void)_acceptOperator:(id)anOperator flags:(unsigned)flags;	// 0x316404c5
- (void)acceptVisitor:(id)visitor flags:(unsigned)flags;	// 0x315a6099
- (unsigned)comparisonPredicateModifier;	// 0x315a62cd
- (id)copyWithZone:(NSZone *)zone;	// 0x315a903d
- (SEL)customSelector;	// 0x31640341
- (void)dealloc;	// 0x31584351
- (void)encodeWithCoder:(id)coder;	// 0x3163ffd1
- (BOOL)evaluateWithObject:(id)object substitutionVariables:(id)variables;	// 0x315a7af1
- (id)generateMetadataDescription;	// 0x315c1575
- (unsigned)hash;	// 0x31640451
- (BOOL)isEqual:(id)equal;	// 0x31640369
- (id)keyPathExpressionForString:(id)string;	// 0x3163ff9d
- (id)leftExpression;	// 0x315a59f5
- (unsigned)options;	// 0x315a663d
- (id)predicateFormat;	// 0x31640265
// converted property getter: - (id)predicateOperator;	// 0x315a5a6d
- (unsigned)predicateOperatorType;	// 0x315a5a45
- (id)predicateWithSubstitutionVariables:(id)substitutionVariables;	// 0x316404f5
- (id)rightExpression;	// 0x315a5a35
// converted property setter: - (void)setPredicateOperator:(id)anOperator;	// 0x315a93ed
@end

