/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class NSData, AVAsset, MPMediaItem, MPAVController, AVPlayerItem, MPAlternateTracks, NSURL, NSString, MPQueueFeeder, NSArray;

@interface MPAVItem : NSObject {
	AVAsset *_asset;	// 4 = 0x4
	dispatch_queue_s *_assetQueue;	// 8 = 0x8
	AVPlayerItem *_avPlayerItem;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	unsigned _type;	// 68 = 0x44
	float _defaultPlaybackRate;	// 72 = 0x48
	unsigned _indexInQueueFeeder;	// 76 = 0x4c
	unsigned _advancedDuringPlayback : 1;	// 80 = 0x50
	unsigned _handledFinishTime : 1;	// 80 = 0x50
	unsigned _hasPlayedThisSession : 1;	// 80 = 0x50
	unsigned _wasCountedAsSkipped : 1;	// 80 = 0x50
	unsigned _isStreamable : 2;	// 80 = 0x50
	unsigned _useCachedPlayableDuration : 1;	// 80 = 0x50
	unsigned _watchingAttributes : 1;	// 80 = 0x50
	unsigned _lyricsAvailable : 1;	// 81 = 0x51
	unsigned _delayedInvalidateCachedPlayedDurationScheduled : 1;	// 81 = 0x51
	unsigned _timeMarkersNeedLoading : 1;	// 81 = 0x51
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x3463e89d; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x3463e8a5; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x3463e8ad; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x3463e8a9; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x34641175; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x3463e8a1; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x3463e8b5; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x3463e8b9; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x3463ff19; S=0x34641185; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x3463dac9; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x3463fef1; S=0x346411a9; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x3463ffe5; S=0x3463ff69; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x3463e8bd; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x3463e8e1; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x3463e909; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x346411ed; S=0x346411fd; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x3463e8c5; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x3463e8c1; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x3463e965; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x3463e91d; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x346407ad; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x346407ed; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x34640881; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x34640801; 
@property(readonly, assign, nonatomic) BOOL externalProtectionEnabled;	// G=0x3464076d; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x346411cd; S=0x346411dd; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x3463eb61; S=0x3463eba1; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x3463e8dd; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x3463e9fd; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x3463ea01; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x3463ea05; S=0x3463ec45; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x3464120d; S=0x3464121d; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x3464122d; S=0x3464123d; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x3463e975; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x3463ea89; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x346e9b05; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x3464060d; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x346409c5; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x34640b45; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x3463df01; S=0x3463df15; 
@property(assign, nonatomic) MPAVController *player;	// G=0x3464124d; S=0x3464125d; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x3463dca5; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x3463ea8d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x3463eb25; 
@property(readonly, assign, nonatomic) BOOL requiresExternalProtection;	// G=0x34640745; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x3464126d; S=0x3463ec81; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x3463de6d; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x3463ea19; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x34640c45; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x34640b8d; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x346405f9; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x3463ff41; S=0x3464127d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x3463ef95; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x34640609; 
@property(assign) BOOL userSkippedPlayback;	// G=0x3463dfa5; S=0x3463df7d; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x346406f1; S=0x34640719; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x34640619; 
+ (id)URLFromPath:(id)path;	// 0x3463d585
+ (unsigned)defaultScaleMode;	// 0x3463d555
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x3463d565
- (id)init;	// 0x3463d635
- (id)initWithAsset:(id)asset;	// 0x3463d6c1
- (id)initWithURL:(id)url;	// 0x3463d649
- (id)initWithURL:(id)url options:(id)options;	// 0x3463d685
- (void)_checkAllowsBlockingDurationCall;	// 0x3463ed21
- (void)_delayedInvalidateCachedPlayedDuration;	// 0x34640d45
- (double)_durationFromExternalMetadataIfAvailable;	// 0x34640825
- (double)_durationInSeconds;	// 0x3463dfb9
- (void)_itemAttributeAvailableKey:(id)key;	// 0x34640d75
- (void)_loadAssetAndPlayerItem;	// 0x3463d99d
- (void)_loadTimeMarkersAsync;	// 0x3463fdd1
- (void)_loadTimeMarkersBlocking;	// 0x3463ef99
- (void)_realoadEmbeddedTimeMarkers;	// 0x3463eced
- (void)_releaseAllTimeMarkers;	// 0x3463d7ed
// declared property getter: - (id)album;	// 0x3463e89d
// declared property getter: - (id)albumArtist;	// 0x3463e8a5
// declared property getter: - (unsigned)albumTrackCount;	// 0x3463e8ad
// declared property getter: - (unsigned)albumTrackNumber;	// 0x3463e8a9
- (BOOL)allowAutoChangingScaleModeToFill;	// 0x3463d551
// declared property getter: - (id)alternateTracks;	// 0x34641175
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x3463e9d9
- (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x3463e8b1
// declared property getter: - (id)artist;	// 0x3463e8a1
// declared property getter: - (id)artworkImageData;	// 0x3463e8b5
// declared property getter: - (id)artworkMIMEType;	// 0x3463e8b9
- (id)artworkTimeMarkerForTime:(double)time;	// 0x346400fd
// declared property getter: - (id)artworkTimeMarkers;	// 0x3463ff19
// declared property getter: - (id)asset;	// 0x3463dac9
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x34640fb1
- (id)chapterTimeMarkerForTime:(double)time;	// 0x3463fff5
// declared property getter: - (id)chapterTimeMarkers;	// 0x3463fef1
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x3464030d
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x3463ffe5
// declared property getter: - (id)composer;	// 0x3463e8bd
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x3463e8e1
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x3463e909
- (void)dealloc;	// 0x3463d871
// declared property getter: - (float)defaultPlaybackRate;	// 0x346411ed
// declared property getter: - (unsigned)discCount;	// 0x3463e8c5
// declared property getter: - (unsigned)discNumber;	// 0x3463e8c1
// declared property getter: - (id)displayableText;	// 0x3463e965
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x3463e91d
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x346407ad
// declared property getter: - (double)durationFromExternalMetadata;	// 0x346407ed
// declared property getter: - (double)durationIfAvailable;	// 0x34640881
- (double)durationInSeconds;	// 0x3463e001
// declared property getter: - (BOOL)durationIsValid;	// 0x34640801
// declared property getter: - (BOOL)externalProtectionEnabled;	// 0x3464076d
// declared property getter: - (id)feeder;	// 0x346411cd
- (void)flushNowPlayingCaches;	// 0x3463d96d
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x3463eb61
// declared property getter: - (id)genre;	// 0x3463e8dd
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x3463e9b5
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x3463e9fd
// declared property getter: - (BOOL)hasDisplayableText;	// 0x3463ea01
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x3463ea05
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x3463eeb5
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x3464120d
// declared property getter: - (BOOL)isAssetLoaded;	// 0x3464122d
- (BOOL)isAssetURLValid;	// 0x3463e8d9
- (BOOL)isPlaceholderForItem:(id)item;	// 0x3463e8d5
// declared property getter: - (BOOL)isStreamable;	// 0x3463ea19
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x3463d579
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x3463e8c9
- (void)loadAssetAndPlayerItem;	// 0x3463d999
- (id)localeForAssetTrack:(id)assetTrack;	// 0x3463ee55
- (id)localizedPositionInPlaylistString;	// 0x3464061d
// declared property getter: - (id)lyrics;	// 0x3463e975
// declared property getter: - (id)mainTitle;	// 0x3463ea89
// declared property getter: - (id)mediaItem;	// 0x346e9b05
- (CGSize)naturalSize;	// 0x34640f75
- (void)notePlaybackFinishedByHittingEnd;	// 0x3463dee9
- (id)path;	// 0x3463e071
// declared property getter: - (unsigned long long)persistentID;	// 0x3464060d
// declared property getter: - (double)playableDuration;	// 0x346409c5
// declared property getter: - (double)playableDurationIfAvailable;	// 0x34640b45
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x3463df01
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x3463ea91
// declared property getter: - (id)player;	// 0x3464124d
// declared property getter: - (id)playerItem;	// 0x3463dca5
// declared property getter: - (id)podcastURL;	// 0x3463ea8d
- (void)postDurationDidChange;	// 0x3463e859
// declared property getter: - (CGSize)presentationSize;	// 0x3463eb25
- (void)reevaluateType;	// 0x34640415
// declared property getter: - (BOOL)requiresExternalProtection;	// 0x34640745
- (void)resetBookkeeping;	// 0x3463de8d
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x3463ebe9
- (void)setAlternateAudioTrackID:(unsigned)anId;	// 0x3463dee1
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x34641185
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x346411a9
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x3463ff69
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x346411fd
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x346411dd
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3463eba1
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x3463ec45
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x3464121d
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x3464123d
- (void)setOverrideDuration:(double)duration;	// 0x3463ec6d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x3463df15
- (void)setPlaybackFinishedTime:(double)time;	// 0x3463df19
- (void)setPlaybackStoppedTime:(double)time;	// 0x3463dee5
// declared property setter: - (void)setPlayer:(id)player;	// 0x3464125d
- (void)setRating:(float)rating;	// 0x3463df31
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x3463ec81
- (void)setSubtitleTrackID:(unsigned)anId;	// 0x3463df35
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x3464127d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x3463df39
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x3463df51
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x3463df7d
// declared property setter: - (void)setVideoID:(id)anId;	// 0x34640719
- (void)setupPlaybackInfo;	// 0x3463e169
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x3464126d
// declared property getter: - (int)status;	// 0x3463de6d
// declared property getter: - (double)timeOfSeekableEnd;	// 0x34640c45
// declared property getter: - (double)timeOfSeekableStart;	// 0x34640b8d
- (id)titlesForTime:(double)time;	// 0x3463ef91
// declared property getter: - (unsigned)type;	// 0x346405f9
- (void)updateAttributesForDefaultsChange:(id)defaultsChange;	// 0x3463e855
- (id)url;	// 0x3463e0f9
- (id)urlTimeMarkerForTime:(double)time;	// 0x34640205
// declared property getter: - (id)urlTimeMarkers;	// 0x3463ff41
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x3463ef95
// declared property getter: - (float)userRating;	// 0x34640609
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x3463dfa5
// declared property getter: - (id)videoID;	// 0x346406f1
// declared property getter: - (BOOL)wantsSubtitles;	// 0x34640619
@end

