/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSArray, MPMediaItemArtwork, NSString, NSDate;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) BOOL _hasDownloadProgress;	// G=0x346e7331; 
@property(readonly, assign, nonatomic) BOOL _isDownloadable;	// G=0x346e7745; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x346864e1; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x34686539; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x34686555; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x34686571; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x3468658d; S=0x346865c1; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x34685d3d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x34686605; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x346864fd; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x3468676d; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x34686621; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x34686b41; S=0x34686b71; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x3468666d; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x3468663d; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x346869e1; S=0x346869fd; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x34686b09; S=0x34686b25; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x3468669d; 
@property(assign, nonatomic) unsigned playCount;	// G=0x346868f1; S=0x34686925; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x34686969; S=0x3468699d; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x346866d1; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x346867b1; 
@property(assign, nonatomic) unsigned rating;	// G=0x346867cd; S=0x34686801; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x34686845; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x34686bb5; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x34686a19; S=0x34686a4d; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x34686a91; S=0x34686ac5; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x34686705; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x34686739; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x34686861; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x3468687d; 
+ (void)_createFilterableDictionary;	// 0x34685d59
+ (BOOL)_hasDownloadProgressForDownloadStatus:(int)downloadStatus downloadIdentifier:(id)identifier isTemporaryCloudDownload:(BOOL)download mediaItemPersistentID:(id)anId;	// 0x346e7265
+ (BOOL)_isDownloadableForRedownloadParameters:(id)redownloadParameters filePath:(id)path downloadStatus:(int)status isTemporaryCloudDownload:(BOOL)download;	// 0x346e7709
+ (BOOL)_isValidItemProperty:(id)property;	// 0x3468649d
+ (BOOL)canFilterByProperty:(id)property;	// 0x34685849
+ (id)daapKeyForMediaProperty:(id)mediaProperty;	// 0x346ee0f1
+ (id)daapValueFromMediaValue:(id)mediaValue mediaProperty:(id)property;	// 0x346ee33d
+ (id)dynamicProperties;	// 0x34685c4d
+ (id)mediaPropertyForDAAPKey:(id)daapkey;	// 0x346edfe9
+ (id)mediaValueFromDAAPValue:(id)daapvalue mediaProperty:(id)property;	// 0x346ee1fd
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x34685a35
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x34685b35
- (id)initWithCoder:(id)coder;	// 0x34685745
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x34685639
- (id)_bestStoreURL;	// 0x34685981
- (id)_directStoreURL;	// 0x34687249
// declared property getter: - (BOOL)_hasDownloadProgress;	// 0x346e7331
// declared property getter: - (BOOL)_isDownloadable;	// 0x346e7745
- (id)_libraryLinkArtist;	// 0x346873ed
- (id)_libraryLinkKind;	// 0x34687461
- (id)_libraryLinkPlaylistName;	// 0x34687521
- (id)_libraryLinkURL;	// 0x346875b5
// declared property getter: - (id)albumArtist;	// 0x346864e1
// declared property getter: - (id)albumTitle;	// 0x34686539
// declared property getter: - (id)artist;	// 0x34686555
// declared property getter: - (id)artwork;	// 0x34686571
// declared property getter: - (double)bookmarkTime;	// 0x3468658d
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x34686d01
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x34686dd1
// declared property getter: - (id)chapters;	// 0x34685d3d
- (id)chaptersOfType:(int)type;	// 0x34686be5
// declared property getter: - (id)composer;	// 0x34686605
- (unsigned)countOfChaptersOfType:(int)type;	// 0x34686ed5
// declared property getter: - (id)effectiveAlbumArtist;	// 0x346864fd
// declared property getter: - (double)effectiveStopTime;	// 0x3468676d
- (void)encodeWithCoder:(id)coder;	// 0x346857cd
- (BOOL)existsInLibrary;	// 0x346859b9
- (void)gaplessHeuristicInfo:(unsigned *)info duration:(unsigned *)duration lastPacketsResync:(unsigned *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x34686f95
// declared property getter: - (id)genre;	// 0x34686621
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x34686b41
- (unsigned)hash;	// 0x34685695
- (BOOL)isEqual:(id)equal;	// 0x346856ad
// declared property getter: - (BOOL)isITunesU;	// 0x3468666d
// declared property getter: - (BOOL)isRental;	// 0x3468663d
// declared property getter: - (id)lastPlayedDate;	// 0x346869e1
// declared property getter: - (id)lastSkippedDate;	// 0x34686b09
// declared property getter: - (int)mediaType;	// 0x3468669d
// declared property getter: - (unsigned)playCount;	// 0x346868f1
// declared property getter: - (unsigned)playCountSinceSync;	// 0x34686969
// declared property getter: - (double)playbackDuration;	// 0x346866d1
// declared property getter: - (id)podcastTitle;	// 0x346867b1
- (id)predicateForProperty:(id)property;	// 0x346868b1
// declared property getter: - (unsigned)rating;	// 0x346867cd
// declared property getter: - (id)releaseDate;	// 0x34686845
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x34686bb5
- (id)representativeItem;	// 0x346859b5
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x346865c1
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x34686b71
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x346869fd
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x34686b25
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x34686925
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x3468699d
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x34686801
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x34686a4d
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x34686ac5
// declared property getter: - (unsigned)skipCount;	// 0x34686a19
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x34686a91
// declared property getter: - (double)startTime;	// 0x34686705
// declared property getter: - (double)stopTime;	// 0x34686739
// declared property getter: - (id)title;	// 0x34686861
- (id)valueForProperty:(id)property;	// 0x346858d9
// declared property getter: - (unsigned)year;	// 0x3468687d
@end

