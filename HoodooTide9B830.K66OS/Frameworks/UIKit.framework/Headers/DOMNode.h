/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import <DOMNode.h> // Unknown library
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"
#import "UIWebSelectionBlock.h"

@class UITextSelectionView, UITextInteractionAssistant, UIResponder, UIColor, UIImage, UITextRange, NSDictionary, UITextPosition, UIView;
@protocol UITextSelectingContent, UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x3023472d
- (id)createPickerCell;	// 0x30234735
- (id)createSelectedItem;	// 0x30234731
- (id)itemTitle;	// 0x3023473d
- (void)populateCell:(id)cell;	// 0x30234739
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x30248fa1
- (id)urlScheme;	// 0x30248ff9
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x30255e11
- (BOOL)isSecure;	// 0x30255f2d
- (BOOL)isTextControl;	// 0x30255f29
- (int)keyboardType;	// 0x30255f31
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30257c55; S=0x30257c59; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x30257e8d; 
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x30257c45; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x30257609; S=0x3025760d; 
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x30257c4d; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x30257c51; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30257ec5; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x30257621; S=0x30257625; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30258919; S=0x30258971; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x30257c49; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x30256765; S=0x302563f9; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30258525; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30258ab1; S=0x30258ab5; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x30257619; S=0x3025761d; 
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x30257cbd; S=0x30257e19; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30258e89; S=0x30258ee1; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x30257bc5; 
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x3025733d; S=0x302572ad; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextSelection> *textDocument;	// G=0x30258ee5; 
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x30257611; S=0x30257615; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x30257601; S=0x30257605; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x30256151; S=0x30256155; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30258915; 
- (CGRect)_lastRectForRange:(id)range;	// 0x30258235
- (NSRange)_markedTextNSRange;	// 0x30256df1
- (id)_textSelectingContainer;	// 0x30257c65
- (void)acceptedAutoFillWord:(id)word;	// 0x30257ab1
- (id)automaticallySelectedOverlay;	// 0x30257629
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30258cc5
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30257c55
- (void)beginSelectionChange;	// 0x30257b65
// declared property getter: - (id)beginningOfDocument;	// 0x30257e8d
- (CGRect)caretRect;	// 0x30257455
- (CGRect)caretRectForPosition:(id)position;	// 0x302589cd
- (unsigned short)characterAfterCaretSelection;	// 0x30256aa1
- (unsigned short)characterBeforeCaretSelection;	// 0x302563b9
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30256375
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30258b79
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30258c59
- (id)closestPositionToPoint:(CGPoint)point;	// 0x30258ab9
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30258b19
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x3025863d
- (void)confirmMarkedText:(id)text;	// 0x30256561
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30257a81
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x302571b1
// declared property getter: - (id)content;	// 0x30257c45
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x30257609
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x3025756d
- (id)delegate;	// 0x30256105
- (void)deleteBackward;	// 0x30256159
- (void)detachInteractionAssistant;	// 0x30257c5d
- (void)detachSelectionView;	// 0x30257c61
- (BOOL)editable;	// 0x30258e81
- (BOOL)editing;	// 0x30258e85
// declared property getter: - (id)endOfDocument;	// 0x30257ec5
- (void)endSelectionChange;	// 0x30257b95
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30256d55
- (void)extendCurrentSelection:(int)selection;	// 0x30256fc9
- (CGRect)firstRectForRange:(id)range;	// 0x3025811d
- (id)fontForCaretSelection;	// 0x30256ae1
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30256331
- (void)handleKeyWebEvent:(id)event;	// 0x3025610d
- (BOOL)hasContent;	// 0x30255f61
- (BOOL)hasSelection;	// 0x30257059
- (BOOL)hasText;	// 0x30258625
// converted property getter: - (int)initialSelectionBehavior;	// 0x30257621
// declared property getter: - (id)inputDelegate;	// 0x30258919
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x30256281
- (id)insertDictationResultPlaceholder;	// 0x302562d9
- (void)insertText:(id)text;	// 0x302561c9
// declared property getter: - (id)interactionAssistant;	// 0x30257c49
- (BOOL)isAutoFillMode;	// 0x30257b0d
// declared property getter: - (BOOL)isEditable;	// 0x30257c4d
// declared property getter: - (BOOL)isEditing;	// 0x30257c51
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3025877d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x30258831
- (BOOL)isShowingPlaceholder;	// 0x302575fd
// converted property getter: - (id)markedText;	// 0x30256765
// declared property getter: - (id)markedTextRange;	// 0x30258525
// declared property getter: - (id)markedTextStyle;	// 0x30258ab1
- (id)metadataDictionariesForDictationResults;	// 0x302562b1
- (void)moveBackward:(unsigned)backward;	// 0x30257109
- (void)moveDown;	// 0x302584b1
- (void)moveForward:(unsigned)forward;	// 0x3025710d
- (void)moveLeft;	// 0x302583c9
- (void)moveRight;	// 0x30258355
- (void)moveUp;	// 0x3025843d
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30256c91
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x30258679
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x3025871d
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x302586b5
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x302587c5
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30258be9
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30256c65
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30256f8d
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30256f51
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x30258879
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30257fe9
- (CGRect)rectContainingCaretSelection;	// 0x30256be1
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30256651
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x30256701
- (id)rectsForRange:(id)range;	// 0x30258ccd
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30256301
- (void)replaceCurrentWordWithText:(id)text;	// 0x302568bd
- (void)replaceRange:(id)range withText:(id)text;	// 0x30258035
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x302567d9
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30256989
- (BOOL)requiresKeyEvents;	// 0x30256109
// declared property getter: - (int)returnKeyType;	// 0x30257619
- (void)selectAll;	// 0x30257111
- (id)selectedDOMRange;	// 0x30256ea1
// declared property getter: - (id)selectedTextRange;	// 0x30257cbd
// declared property getter: - (int)selectionAffinity;	// 0x30258e89
- (BOOL)selectionAtDocumentStart;	// 0x30257099
- (BOOL)selectionAtWordStart;	// 0x302570d1
- (CGRect)selectionClipRect;	// 0x30257c21
- (NSRange)selectionRange;	// 0x30256e55
- (int)selectionState;	// 0x30257171
// declared property getter: - (id)selectionView;	// 0x30257bc5
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30258cc9
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30257c59
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x3025760d
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x30257625
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x30258971
// converted property setter: - (void)setMarkedText:(id)text;	// 0x302563f9
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x302564a9
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30258ab5
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x3025761d
- (void)setSecure:(BOOL)secure;	// 0x30256101
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x30256ed9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30257e19
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30257d2d
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30258ee1
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30257431
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x3025738d
// converted property setter: - (void)setText:(id)text;	// 0x302572ad
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x30257615
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x30257605
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x30256155
- (void)setupPlaceholderTextIfNeeded;	// 0x30255fa1
- (void)takeTraitsFrom:(id)from;	// 0x30255f35
// converted property getter: - (id)text;	// 0x3025733d
- (id)textColorForCaretSelection;	// 0x30256bc5
// declared property getter: - (id)textDocument;	// 0x30258ee5
- (id)textInRange:(id)range;	// 0x30257efd
- (id)textInputTraits;	// 0x30255fa5
// declared property getter: - (int)textLoupeVisibility;	// 0x30257611
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30257f51
// declared property getter: - (id)textSuggestionDelegate;	// 0x30257601
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x30256151
// declared property getter: - (id)tokenizer;	// 0x30258915
- (id)uiWebDocumentView;	// 0x30256239
- (void)unmarkText;	// 0x302585a1
- (void)updateAutoscroll:(id)autoscroll;	// 0x30257671
- (void)updateSelection;	// 0x30257c1d
- (id)wordContainingCaretSelection;	// 0x30256cfd
- (int)wordOffsetInRange:(id)range;	// 0x30256db5
- (id)wordRangeContainingCaretSelection;	// 0x30256cbd
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x302d2459
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x3016fb6d
- (BOOL)isLikelyToBeginPageLoad;	// 0x302d25f9
- (BOOL)nodeCanBecomeFirstResponder;	// 0x302d25fd
- (BOOL)showsTapHighlight;	// 0x3016fa85
- (id)tapHighlightColor;	// 0x302d25b5
- (BOOL)touchCalloutEnabled;	// 0x302d25f5
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x302fd825
- (id)asDomRange;	// 0x302fd829
- (id)asElement;	// 0x302fd541
- (CGRect)boundingRect;	// 0x3016deb9
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x302fdb09
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x3016de05
- (BOOL)containsBlock:(id)block;	// 0x302fd67d
- (BOOL)containsNode:(id)node;	// 0x302fd4b1
- (BOOL)containsRange:(id)range;	// 0x302fd8f9
- (id)enclosingDocument;	// 0x302fdb75
- (id)enclosingElementIncludingSelf;	// 0x302fd565
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x302fdd81
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x302fdb85
- (BOOL)hasCustomLineHeight;	// 0x302fd5f9
- (BOOL)isSameBlock:(id)block;	// 0x302fd62d
- (id)largerParent;	// 0x302fd72d
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x302fde1d
- (id)parentBlock;	// 0x302fd599
- (id)rangeOfContents;	// 0x302fd9f1
- (BOOL)rendersAsBlock;	// 0x302fd80d
- (BOOL)selectable;	// 0x302fd5a9
- (BOOL)strictlyContainsBlock:(id)block;	// 0x302fd6e9
- (BOOL)strictlyContainsNode:(id)node;	// 0x302fd4fd
- (id)webFrame;	// 0x3016dff5
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x303107f5
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x303480d9
- (id)_nextAssistedNode;	// 0x303480dd
- (id)_previousAssistedNode;	// 0x3034811d
- (BOOL)_requiresAccessoryView;	// 0x303480a1
- (BOOL)_requiresInputView;	// 0x303480b9
- (void)_startAssistingDocumentView:(id)view;	// 0x30348019
- (void)_stopAssistingDocumentView:(id)view;	// 0x3034804d
- (BOOL)_supportsAccessoryClear;	// 0x303480d5
- (BOOL)_supportsAutoFill;	// 0x303480d1
- (id)_textFormElement;	// 0x3034815d
@end

