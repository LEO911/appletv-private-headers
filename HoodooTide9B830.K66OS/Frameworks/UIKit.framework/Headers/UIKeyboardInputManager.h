/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UIKit-Structs.h"


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x302bf939; S=0x302bf931; converted property
@property(assign) unsigned phraseBoundary;	// G=0x302bf961; S=0x302bf95d; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x302bf96d; S=0x301099cd; converted property
+ (id)activeInstance;	// 0x301100b1
+ (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x30110079
+ (void)clearAllCentroids;	// 0x301104ed
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x302bfb65
+ (void)endRegisteringKeyplane;	// 0x30110831
+ (id)keyboardUserDirectory;	// 0x30046589
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x301107ad
+ (void)releaseSharedInstance;	// 0x3008c025
+ (void)removeAllDynamicDictionaries;	// 0x302bfc85
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x302bfbf5
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x30095061
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x30046555
- (void)acceptInput;	// 0x302bf921
- (BOOL)acceptInputString:(id)string;	// 0x30129acd
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x302bf94d
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x302bfa4d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x30159421
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x302bf901
- (id)addInputObject:(id)object;	// 0x302bfdc1
- (void)addToTypingHistory:(id)typingHistory;	// 0x302bfb49
- (void)appendToInputContext:(id)inputContext;	// 0x302bf925
- (id)autocorrection;	// 0x302bf951
- (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x301100c1
- (BOOL)canHandleKeyHitTest;	// 0x302bfe59
- (BOOL)canUseGeometryKeyTouch;	// 0x301104c9
- (void)candidateAccepted:(id)accepted;	// 0x302bfb51
- (id)candidates;	// 0x302bf955
- (CFArrayRef)chargeableKeys;	// 0x302bfdb9
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x302bfdbd
- (void)clearAllCentroids;	// 0x302bfea9
- (void)clearDynamicDictionary;	// 0x302bfb61
- (void)clearInput;	// 0x302bf91d
- (void)clearInputContext;	// 0x302bf92d
- (void)clearKeyAreas;	// 0x302bfe5d
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x302bfa6d
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x30097a25
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x302bfa71
- (void)decreaseUserFrequency:(id)frequency;	// 0x302bfb5d
- (id)defaultCandidate;	// 0x302bf975
- (unsigned)defaultCandidateIndex;	// 0x302bf979
- (id)deleteFromInput:(unsigned *)input;	// 0x302bf915
- (void)deleteFromStrokeHistory:(BOOL)strokeHistory;	// 0x302bfea1
- (void)endRegisteringKeyplane;	// 0x30110865
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x302bf9dd
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x302bf9e1
- (void)increaseUserFrequency:(id)frequency;	// 0x302bfb59
- (unsigned)inputCount;	// 0x302bf93d
- (BOOL)inputEmpty;	// 0x302bf941
// converted property getter: - (unsigned)inputIndex;	// 0x302bf939
- (void)inputLocationChanged;	// 0x302bf949
- (id)inputString;	// 0x302bf945
- (BOOL)isSentenceDelimiter:(unsigned short)delimiter;	// 0x3017dedd
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift;	// 0x302bfe65
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x302bfe69
- (BOOL)keySlidIntoSwipe;	// 0x302bfe9d
- (void)lastAcceptedCandidateCorrected;	// 0x302bfb55
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x302bf9e5
- (unsigned)maximumShortcutLengthAllowed;	// 0x302bfeb5
// converted property getter: - (unsigned)phraseBoundary;	// 0x302bf961
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x302bfea5
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x302bfe61
- (id)remainingInput;	// 0x302bf959
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x302bf929
- (id)searchStringForMarkedText;	// 0x302bf981
- (void)setAutoCorrects:(BOOL)corrects;	// 0x302bfa55
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x302bfdb5
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x302bfa65
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x302bfa69
- (void)setInput:(id)input;	// 0x302bf90d
- (void)setInput:(id)input typedString:(id)string;	// 0x302bf911
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x302bf931
- (id)setInputObject:(id)object;	// 0x302bfe0d
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x302bfa61
- (void)setKeyboardMatchType:(int)type;	// 0x30097925
- (void)setLearnsCorrection:(BOOL)correction;	// 0x302bfb45
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x302bf95d
- (void)setShallowPrediction:(BOOL)prediction;	// 0x302bfa59
- (void)setShift:(BOOL)shift;	// 0x302bfa5d
- (void)setTypologyRecorder:(id)recorder;	// 0x302bfead
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x301099cd
- (id)shadowTyping;	// 0x302bfdb1
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x302bfeb9
- (BOOL)shouldExtendPriorWord;	// 0x3013a22d
- (BOOL)shouldShiftAfterChar:(unsigned short)aChar withSpaces:(int)spaces currentShift:(BOOL)shift;	// 0x3013a481
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x302bf9cd
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x302bf9d1
- (id)sortingMethods;	// 0x302bf9d5
- (BOOL)stringEndsWord:(id)word;	// 0x3015926d
- (id)stringForDoubleKey:(id)doubleKey;	// 0x302bf995
- (BOOL)suppliesCompletions;	// 0x302bf98d
- (BOOL)supportsNumberKeySelection;	// 0x302bfa51
- (BOOL)supportsSetPhraseBoundary;	// 0x302bf969
- (BOOL)supportsShortcutConversion;	// 0x302bfeb1
- (BOOL)suppressCompletionsForFieldEditor;	// 0x302bf991
- (BOOL)suppressesCandidateDisplay;	// 0x3017ba71
- (void)textAccepted:(id)accepted;	// 0x302bfb4d
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x302bf9d9
- (BOOL)usesAutoDeleteWord;	// 0x302bf971
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x302bf96d
- (unsigned)wordHistoryDepth;	// 0x302bf935
@end

