/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EKPersistentCalendarItem.h"
#import "EventKit-Structs.h"

@class NSURL, NSString, NSDate;

@interface EKPersistentEvent : EKPersistentCalendarItem {
	XXStruct_mY3THC _cachedDurationUnits;	// 28 = 0x1c
}
@property(copy, nonatomic) NSURL *URL;	// G=0x32463001; S=0x324c1785; 
@property(retain) id actions;	// G=0x324c1d1d; S=0x324c1d51; converted property
@property(assign, nonatomic) int availability;	// G=0x324c1ad1; S=0x324c1aed; 
@property(readonly, assign, nonatomic) int birthdayID;	// G=0x324c17c1; 
@property(readonly, assign, nonatomic) double duration;	// G=0x324c17dd; 
@property(readonly, assign, nonatomic) XXStruct_mY3THC durationUnits;	// G=0x3245ad4d; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x324c1dcd; 
@property(copy, nonatomic) NSDate *endDate;	// G=0x3245afb1; S=0x3246c049; 
@property(readonly, assign, nonatomic) NSString *eventIdentifier;	// G=0x32462c69; 
@property(readonly, assign, nonatomic, getter=isFloating) BOOL floating;	// G=0x32463d3d; 
@property(readonly, assign, nonatomic, getter=isInvitation) BOOL invitation;	// G=0x324634e9; 
@property(readonly, assign, nonatomic, getter=isMeeting) BOOL meeting;	// G=0x324c1849; 
@property(assign, nonatomic) unsigned modifiedProperties;	// G=0x324c18a1; S=0x324c18bd; 
@property(assign, nonatomic) BOOL needsOccurrenceCacheUpdate;	// G=0x324c18d9; S=0x324c18f9; 
@property(copy, nonatomic) NSDate *originalStartDate;	// G=0x324c1b79; S=0x324c1b95; 
@property(assign, nonatomic) int participationStatus;	// G=0x324c1915; S=0x324c1945; 
@property(readonly, assign, nonatomic) int pendingParticipationStatus;	// G=0x324c1975; 
@property(assign, nonatomic) unsigned privacyLevel;	// G=0x324c1b09; S=0x324c1b25; 
@property(assign, nonatomic) unsigned readStatus;	// G=0x324636e5; S=0x324c1ab5; 
@property(copy, nonatomic) NSString *responseComment;	// G=0x324c1b41; S=0x324c1b5d; 
@property(assign, nonatomic) int status;	// G=0x3245cf35; S=0x324c1885; 
+ (id)defaultPropertiesToLoad;	// 0x3245a3ed
+ (id)generateUniqueIDWithEvent:(id)event originalEvent:(id)event2 calendar:(id)calendar;	// 0x3246cfdd
+ (id)relations;	// 0x3245c845
- (id)initCommon;	// 0x3245a151
// declared property getter: - (id)URL;	// 0x32463001
- (void)_adjustForNewCalendar;	// 0x3246ca15
- (BOOL)_areDurationUnitsCached;	// 0x3245ae6d
- (BOOL)_hasExternalIDOrDeliverySource;	// 0x324c1ce5
- (BOOL)_hasValidEventAction;	// 0x324c1c19
- (void)_invalidateCachedDurationUnits;	// 0x3245a195
// converted property getter: - (id)actions;	// 0x324c1d1d
- (void)addAction:(id)action;	// 0x324c1d95
- (BOOL)allowsParticipationStatusModifications;	// 0x324632f5
// declared property getter: - (int)availability;	// 0x324c1ad1
// declared property getter: - (int)birthdayID;	// 0x324c17c1
- (int)birthdayId;	// 0x324c19a5
- (void)clearExceptionDatesAndUpdateDetachedOriginalDates;	// 0x3246c065
- (id)committedStartDate;	// 0x324c1bb1
- (id)copyWithZone:(NSZone *)zone;	// 0x324c2475
- (void)dealloc;	// 0x324c1689
- (void)deleteFromOccurrenceDateOnward:(id)occurrenceDateOnward;	// 0x324c1fd1
- (id)description;	// 0x324c1e39
- (id)detachWithStartDate:(id)startDate newStartDate:(id)date future:(BOOL)future;	// 0x324c269d
// declared property getter: - (double)duration;	// 0x324c17dd
// declared property getter: - (XXStruct_mY3THC)durationUnits;	// 0x3245ad4d
// declared property getter: - (id)endDate;	// 0x3245afb1
- (int)entityType;	// 0x32463ce1
// declared property getter: - (id)eventIdentifier;	// 0x32462c69
- (id)exportToICS;	// 0x324c16b5
- (void)filterExceptionDates;	// 0x324c3285
// declared property getter: - (BOOL)isEditable;	// 0x324c1dcd
// declared property getter: - (BOOL)isFloating;	// 0x32463d3d
// declared property getter: - (BOOL)isInvitation;	// 0x324634e9
// declared property getter: - (BOOL)isMeeting;	// 0x324c1849
// declared property getter: - (unsigned)modifiedProperties;	// 0x324c18a1
// declared property getter: - (BOOL)needsOccurrenceCacheUpdate;	// 0x324c18d9
- (id)organizer;	// 0x32462e71
// declared property getter: - (id)originalStartDate;	// 0x324c1b79
// declared property getter: - (int)participationStatus;	// 0x324c1915
// declared property getter: - (int)pendingParticipationStatus;	// 0x324c1975
- (void)primitiveValueChangedForKey:(id)key;	// 0x32463add
// declared property getter: - (unsigned)privacyLevel;	// 0x324c1b09
// declared property getter: - (unsigned)readStatus;	// 0x324636e5
- (BOOL)refresh;	// 0x3246eb0d
- (void)removeAction:(id)action;	// 0x324c1db1
// declared property getter: - (id)responseComment;	// 0x324c1b41
- (BOOL)responseMustApplyToAll;	// 0x324c19c1
// converted property setter: - (void)setActions:(id)actions;	// 0x324c1d51
// declared property setter: - (void)setAvailability:(int)availability;	// 0x324c1aed
// declared property setter: - (void)setEndDate:(id)date;	// 0x3246c049
// declared property setter: - (void)setModifiedProperties:(unsigned)properties;	// 0x324c18bd
// declared property setter: - (void)setNeedsOccurrenceCacheUpdate:(BOOL)update;	// 0x324c18f9
// declared property setter: - (void)setOriginalStartDate:(id)date;	// 0x324c1b95
// declared property setter: - (void)setParticipationStatus:(int)status;	// 0x324c1945
// declared property setter: - (void)setPrivacyLevel:(unsigned)level;	// 0x324c1b25
// declared property setter: - (void)setReadStatus:(unsigned)status;	// 0x324c1ab5
// declared property setter: - (void)setResponseComment:(id)comment;	// 0x324c1b5d
// declared property setter: - (void)setStatus:(int)status;	// 0x324c1885
// declared property setter: - (void)setURL:(id)url;	// 0x324c1785
// declared property getter: - (int)status;	// 0x3245cf35
- (BOOL)validate:(id *)validate;	// 0x3246c5a1
@end

