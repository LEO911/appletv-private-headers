/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTV.framework/AppleTV
 */

#import "BRApplianceBrowserProtocol.h"
#import "BRControl.h"
#import "AppleTV-Structs.h"

@class BRScrollControl, NSTimer, NSArray, BRTopShelfView, NSMutableDictionary, BRApplianceCategoryListProvider, NSDate, BRApplianceProvider, BRImage, BRImageControl, BRListView, BRCursorControl;
@protocol BRAppliance;

__attribute__((visibility("hidden")))
@interface BRMainMenuControl : BRControl <BRApplianceBrowserProtocol> {
@private
	int _focusState;	// 48 = 0x30
	BRApplianceProvider *_applianceProvider;	// 52 = 0x34
	id<BRAppliance> _currentAppliance;	// 56 = 0x38
	NSArray *_columns;	// 60 = 0x3c
	long _activeColumn;	// 64 = 0x40
	float _columnScrollAdjustment;	// 68 = 0x44
	long _curPreviewedColumn;	// 72 = 0x48
	long _oldPreviewedColumn;	// 76 = 0x4c
	BRTopShelfView *_curPreview;	// 80 = 0x50
	BRTopShelfView *_oldPreview;	// 84 = 0x54
	NSTimer *_previewTimer;	// 88 = 0x58
	BRImageControl *_logo;	// 92 = 0x5c
	BRImageControl *_backgroundImgControl;	// 96 = 0x60
	BRImageControl *_barGlow;	// 100 = 0x64
	BRImage *_barGlowActiveImage;	// 104 = 0x68
	BRImage *_barGlowInactiveImage;	// 108 = 0x6c
	BRControl *_topDivider;	// 112 = 0x70
	BRControl *_bottomDivider;	// 116 = 0x74
	BRControl *_leftColumnFade;	// 120 = 0x78
	BRControl *_rightColumnFade;	// 124 = 0x7c
	BRCursorControl *_cursor;	// 128 = 0x80
	BRScrollControl *_categoryScroller;	// 132 = 0x84
	BRListView *_categoryList;	// 136 = 0x88
	BRApplianceCategoryListProvider *_categoryListProvider;	// 140 = 0x8c
	NSTimer *_menuTimer;	// 144 = 0x90
	NSDate *_menuTriggerTime;	// 148 = 0x94
	NSMutableDictionary *_remembery;	// 152 = 0x98
	BOOL _createCategoryList;	// 156 = 0x9c
	BOOL _isLoaded;	// 157 = 0x9d
	id _datasource;	// 160 = 0xa0
	id _delegate;	// 164 = 0xa4
}
@property(readonly, assign) id<BRAppliance> currentAppliance;	// G=0x341f75c5; @synthesize=_currentAppliance
@property(readonly, assign) long currentApplianceIndex;	// G=0x341f75d5; @synthesize=_activeColumn
@property(assign) id datasource;	// G=0x341f7585; S=0x341f7595; @synthesize=_datasource
@property(assign) id delegate;	// G=0x341f75a5; S=0x341f75b5; @synthesize=_delegate
+ (id)_categoryTextAttributes;	// 0x341f96c1
- (id)init;	// 0x341f55f1
- (BOOL)_activateColumnIndex:(long)index;	// 0x341f8c21
- (void)_applianceProviderChanged:(id)changed;	// 0x341fa669
- (float)_calculateLongestStringForColumn:(long)column;	// 0x341f9ee1
- (id)_categoryListActions;	// 0x341fa081
- (void)_categoryListChanged:(id)changed;	// 0x341f9e51
- (id)_categoryListSlowActions;	// 0x341fa135
- (void)_categoryListTimerFired:(id)fired;	// 0x341f9b35
- (BOOL)_categorySelected:(id)selected;	// 0x341f8b35
- (void)_createCategoryList;	// 0x341f9bf1
- (id)_currentApplianceKey;	// 0x341f8a59
- (id)_currentCategoryIdentifier;	// 0x341f8a9d
- (void)_expandAndCollapseShelves;	// 0x341f95b1
- (long)_focusedCategoryIndex;	// 0x341f9ea9
- (BOOL)_handleEventInMenuFocusedState:(id)menuFocusedState;	// 0x341f8e85
- (BOOL)_handleEventInMenuUnocusedState:(id)menuUnocusedState;	// 0x341f9151
- (BOOL)_handleEventInShelfFocusedState:(id)shelfFocusedState;	// 0x341f9155
- (void)_hideCategoryList;	// 0x341f98fd
- (void)_highlightDefaultCategory;	// 0x341fa29d
- (BOOL)_isCategoryListActive;	// 0x341fa1e1
- (void)_languageChanged:(id)changed;	// 0x341fa5c5
- (id)_leftFadeFilters;	// 0x341fa39d
- (BOOL)_previewColumnAtIndex:(long)index;	// 0x341f91d9
- (void)_previewTimerFired:(id)fired;	// 0x341f94ed
- (void)_reload;	// 0x341f75e5
- (void)_removeCategoryList;	// 0x341f9b55
- (id)_rightFadeFilters;	// 0x341fa4b1
- (void)_showCategoryList;	// 0x341f98bd
- (void)_unload;	// 0x341f8651
- (void)_updateAppliance;	// 0x341f879d
- (void)_updateCategoryList;	// 0x341f994d
- (void)_updateCategoryListAfterDelay:(double)delay;	// 0x341f99c9
- (void)_updateCategoryProvider;	// 0x341f9809
- (void)_updateCategoryRemembery;	// 0x341fa219
- (void)_updatePreviewAfterDelay:(double)delay;	// 0x341f9535
- (void)_windowBoundsChanged:(id)changed;	// 0x341f8bd9
- (id)accessibilityLabel;	// 0x341f7515
- (id)accessibilityScreenContent;	// 0x341fa365
- (id)actionForCurrentSelection;	// 0x341f5b59
- (BOOL)brEventAction:(id)action;	// 0x341f61d9
- (void)clearRemembery;	// 0x341f5dd5
- (void)controlWasActivated;	// 0x341f63a9
- (void)controlWasDeactivated;	// 0x341f6451
- (id)controllerForCurrentSelection;	// 0x341f5ae5
- (BOOL)controllerMatchesCurrentSelection:(id)selection;	// 0x341f5d09
// declared property getter: - (id)currentAppliance;	// 0x341f75c5
// declared property getter: - (long)currentApplianceIndex;	// 0x341f75d5
// declared property getter: - (id)datasource;	// 0x341f7585
- (void)dealloc;	// 0x341f58a5
// declared property getter: - (id)delegate;	// 0x341f75a5
- (id)focusedControlForEvent:(id)event focusPoint:(CGPoint *)point;	// 0x341f6399
- (void)highlightApplianceWithKey:(id)key andCategoryWithIdentifier:(id)identifier;	// 0x341f5c45
- (void)highlightItemsForController:(id)controller;	// 0x341f5bdd
- (BOOL)isAccessibilityElement;	// 0x341f74cd
- (void)layoutSubcontrols;	// 0x341f6491
- (float)list:(id)list heightForItemAtIndexPath:(id)indexPath;	// 0x341f74b5
- (void)reloadTopShelf;	// 0x341f5df5
// declared property setter: - (void)setDatasource:(id)datasource;	// 0x341f7595
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x341f75b5
- (BOOL)setMenuFocusState:(int)state;	// 0x341f5e15
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x341f5a9d
@end

