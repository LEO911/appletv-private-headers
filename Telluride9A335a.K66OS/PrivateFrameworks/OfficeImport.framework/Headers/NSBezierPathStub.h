/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


__attribute__((visibility("hidden")))
@interface NSBezierPathStub : NSObject <NSCopying> {
@private
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x353f5a11; S=0x353f5a15; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x353f6785; converted property
@property(readonly, assign) int elementCount;	// G=0x351c0b81; converted property
@property(assign) float flatness;	// G=0x351c2ac5; S=0x351c2ad5; converted property
@property(assign) unsigned lineCapStyle;	// G=0x351c16ad; S=0x351c14d5; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x351c16c1; S=0x351c159d; converted property
@property(assign) float lineWidth;	// G=0x351c2a95; S=0x351c13bd; converted property
@property(assign) float miterLimit;	// G=0x351c2aa5; S=0x351c2ab5; converted property
@property(assign) unsigned windingRule;	// G=0x351c1111; S=0x351c0f21; converted property
+ (id)bezierPath;	// 0x351bcde9
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x353f5ca1
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x352a6c69
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x353f5c4d
+ (void)clipRect:(CGRect)rect;	// 0x351bdfbd
+ (CGContextRef)currentCGContext;	// 0x351bdb51
+ (float)defaultFlatness;	// 0x353f5769
+ (unsigned)defaultLineCapStyle;	// 0x353f57a9
+ (unsigned)defaultLineJoinStyle;	// 0x353f57c9
+ (float)defaultLineWidth;	// 0x353f57e9
+ (float)defaultMiterLimit;	// 0x353f5749
+ (unsigned)defaultWindingRule;	// 0x353f5789
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x353f5a19
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x351bfaa5
+ (void)fillRect:(CGRect)rect;	// 0x353f5bed
+ (float)flatness;	// 0x353f717d
+ (void)initialize;	// 0x352714b5
+ (unsigned)lineCapStyle;	// 0x353f71bd
+ (unsigned)lineJoinStyle;	// 0x353f71dd
+ (float)lineWidth;	// 0x353f71fd
+ (float)miterLimit;	// 0x353f715d
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x351b7221
+ (void)setDefaultFlatness:(float)flatness;	// 0x353f5759
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x353f5799
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x353f57b9
+ (void)setDefaultLineWidth:(float)width;	// 0x353f57d9
+ (void)setDefaultMiterLimit:(float)limit;	// 0x353f5739
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x353f5779
+ (void)setFlatness:(float)flatness;	// 0x353f716d
+ (void)setLineCapStyle:(unsigned)style;	// 0x353f71ad
+ (void)setLineJoinStyle:(unsigned)style;	// 0x353f71cd
+ (void)setLineWidth:(float)width;	// 0x353f71ed
+ (void)setMiterLimit:(float)limit;	// 0x353f714d
+ (void)setWindingRule:(unsigned)rule;	// 0x353f718d
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x353f5a71
+ (void)strokeRect:(CGRect)rect;	// 0x353f5afd
+ (unsigned)windingRule;	// 0x353f719d
- (id)init;	// 0x351bce21
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x351c06ed
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x351c07e9
- (id)_copyFlattenedPath;	// 0x353f6afd
- (void)_deviceClosePath;	// 0x351c1c41
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x351c0965
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x351c1be5
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x351c05f5
- (void)_doPath;	// 0x353f6ea9
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x351c1125
- (int)_locationOfPoint:(CGPoint)point;	// 0x353f5d6d
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x351c0c85
- (void)addClip;	// 0x352a6cfd
- (void)appendBezierPath:(id)path;	// 0x351c0aad
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x353f62cd
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x351c0315
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x351c0355
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radiusSize:(CGSize)size startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x352e40c9
- (void)appendBezierPathWithArcWithRect:(CGPoint)rect rightBottom:(CGPoint)bottom start:(CGPoint)start end:(CGPoint)end clockwise:(BOOL)clockwise;	// 0x352e3f51
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x351c01cd
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x351c338d
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x351c1acd
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x353f6049
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes;	// 0x353eca45
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes spacing:(int *)spacing spacingCount:(int)count;	// 0x353eca49
- (void)attachBezierPath:(id)path;	// 0x35283ee1
- (id)bezierPathByFlatteningPath;	// 0x353f6b4d
- (id)bezierPathByReversingPath;	// 0x353f68f1
- (CGRect)bounds;	// 0x353f66c5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x353f5a11
- (void)closePath;	// 0x351c1c31
- (BOOL)containsPoint:(CGPoint)point;	// 0x353f5cf9
// converted property getter: - (CGRect)controlPointBounds;	// 0x353f6785
- (id)copyWithZone:(NSZone *)zone;	// 0x351c2905
- (CGPoint)currentPoint;	// 0x35284081
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x35283db5
- (void)dealloc;	// 0x351b7d89
- (id)description;	// 0x353f720d
- (unsigned)elementAtIndex:(int)index;	// 0x353f66b1
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x351c0be9
// converted property getter: - (int)elementCount;	// 0x351c0b81
- (BOOL)equalToCurrentPoint:(CGPoint)currentPoint;	// 0x35283ff1
- (void)fill;	// 0x351c109d
- (void)finalize;	// 0x353f70c5
// converted property getter: - (float)flatness;	// 0x351c2ac5
- (void)flattenIntoPath:(id)path;	// 0x353f6be5
- (id)getGlyphs:(id)glyphs :(id)arg2 :(unsigned *)arg3;	// 0x353eca41
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x353f57f9
- (BOOL)isEmpty;	// 0x351c05dd
- (BOOL)isHitByPath:(id)path;	// 0x353f5a01
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x353f5ce1
- (BOOL)isHitByRect:(CGRect)rect;	// 0x353f59fd
- (BOOL)isStrokeHitByPath:(id)path;	// 0x353f5a0d
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x353f5a05
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x353f5a09
// converted property getter: - (unsigned)lineCapStyle;	// 0x351c16ad
// converted property getter: - (unsigned)lineJoinStyle;	// 0x351c16c1
- (void)lineToPoint:(CGPoint)point;	// 0x351c1b71
// converted property getter: - (float)lineWidth;	// 0x351c2a95
// converted property getter: - (float)miterLimit;	// 0x351c2aa5
- (void)moveToPoint:(CGPoint)point;	// 0x351c1b61
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x353f6f89
- (void)relativeLineToPoint:(CGPoint)point;	// 0x353f7015
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x353f706d
- (void)removeAllPoints;	// 0x352839c9
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x353f65e5
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x353f5a15
- (void)setClip;	// 0x352a6ca9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x351c2ad5
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x351c14d5
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x352fb0e5
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x351c159d
// converted property setter: - (void)setLineWidth:(float)width;	// 0x351c13bd
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x351c2ab5
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x351c0f21
- (void)stroke;	// 0x351c15c1
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x353f6cc1
- (void)transformUsingAffineTransform:(id)transform;	// 0x351c09ed
// converted property getter: - (unsigned)windingRule;	// 0x351c1111
@end

