/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import "CalDAVPrincipal.h"
#import <NSObject.h> // Unknown library

@class NSString, MobileCalDAVAccount, NSSet, NSURL, NSMutableDictionary, NSDictionary, NSNumber, CalDAVRefreshContext, NSDateComponents;
@protocol CalDAVAccount, CoreDAVTaskManager;

@interface MobileCalDAVPrincipal : NSObject <CoreDAVAccountInfoProvider, CalDAVPrincipal> {
	NSString *_uid;	// 4 = 0x4
	MobileCalDAVAccount *_account;	// 8 = 0x8
	NSSet *_calendarUserAddresses;	// 12 = 0xc
	NSMutableDictionary *_calendarUserAddressesPerCalendar;	// 16 = 0x10
	NSURL *_preferredCalendarUserAddress;	// 20 = 0x14
	NSString *_fullName;	// 24 = 0x18
	NSURL *_calendarHomeURL;	// 28 = 0x1c
	NSURL *_principalURL;	// 32 = 0x20
	NSURL *_defaultCalendarURL;	// 36 = 0x24
	NSURL *_notificationCollectionURL;	// 40 = 0x28
	NSString *_notificationCollectionCTag;	// 44 = 0x2c
	NSURL *_inboxURL;	// 48 = 0x30
	NSString *_inboxCTag;	// 52 = 0x34
	NSURL *_outboxURL;	// 56 = 0x38
	NSURL *_dropBoxURL;	// 60 = 0x3c
	NSString *_notificationURLString;	// 64 = 0x40
	NSDictionary *_pushTransports;	// 68 = 0x44
	NSString *_calendarHomePushKey;	// 72 = 0x48
	NSString *_XMPPServer;	// 76 = 0x4c
	NSNumber *_quotaFreeBytes;	// 80 = 0x50
	BOOL _isDelegate;	// 84 = 0x54
	BOOL _isWritable;	// 85 = 0x55
	BOOL _isEnabled;	// 86 = 0x56
	BOOL _isExpandPropertyReportSupported;	// 87 = 0x57
	BOOL _supportsFreebusy;	// 88 = 0x58
	BOOL _shouldUpdatePushDelegate;	// 89 = 0x59
	BOOL _isDirty;	// 90 = 0x5a
	BOOL _calendarsAreDirty;	// 91 = 0x5b
	int _calendarChangeIndex;	// 92 = 0x5c
}
@property(readonly, assign) NSString *APSEnv;	// G=0x34ce40e9; 
@property(readonly, assign) NSURL *APSSubscriptionURL;	// G=0x34ce4069; 
@property(readonly, assign) NSString *APSTopic;	// G=0x34ce4025; 
@property(retain) NSString *XMPPServer;	// G=0x34ce3019; S=0x34ce3029; 
@property(readonly, assign) id<CalDAVAccount> account;	// G=0x34ce248d; 
@property(retain) NSString *calendarHomePushKey;	// G=0x34ce2f95; S=0x34ce2fa5; 
@property(retain) NSURL *calendarHomeURL;	// G=0x34ce28c1; S=0x34ce28e1; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x34ce2795; S=0x34ce27a5; 
@property(readonly, assign) NSSet *calendars;	// G=0x34ce3741; 
@property(assign) BOOL calendarsAreDirty;	// G=0x34ce3f59; S=0x34ce3e9d; @synthesize=_calendarsAreDirty
@property(retain) NSURL *defaultCalendarURL;	// G=0x34ce2a11; S=0x34ce2a31; 
@property(readonly, assign) NSSet *deletedCalendarURLs;	// G=0x34ce3761; 
@property(retain) NSURL *dropBoxURL;	// G=0x34ce2db9; S=0x34ce2dd9; 
@property(readonly, assign) NSDateComponents *eventFilterEndDate;	// G=0x34ce357d; 
@property(readonly, assign) NSDateComponents *eventFilterStartDate;	// G=0x34ce3521; 
@property(retain) NSString *fullName;	// G=0x34ce283d; S=0x34ce284d; 
@property(retain) NSString *inboxCTag;	// G=0x34ce2c8d; S=0x34ce2c9d; 
@property(retain) NSURL *inboxURL;	// G=0x34ce2be5; S=0x34ce2c05; 
@property(assign) BOOL isDelegate;	// G=0x34ce310d; S=0x34ce311d; 
@property(assign) BOOL isDirty;	// G=0x34ce4cb9; S=0x34ce4cc9; @synthesize=_isDirty
@property(assign) BOOL isEnabled;	// G=0x34ce319d; S=0x34ce31ad; 
@property(readonly, assign) BOOL isEnabledForEvents;	// G=0x34ce3209; 
@property(readonly, assign) BOOL isEnabledForTodos;	// G=0x34ce3265; 
@property(assign) BOOL isExpandPropertyReportSupported;	// G=0x34ce3691; S=0x34ce36a1; 
@property(readonly, assign) BOOL isMergeSync;	// G=0x34ce31e5; 
@property(assign) BOOL isWritable;	// G=0x34ce3155; S=0x34ce3165; 
@property(retain) NSString *notificationCollectionCTag;	// G=0x34ce2b61; S=0x34ce2b71; 
@property(retain) NSURL *notificationCollectionURL;	// G=0x34ce2ab9; S=0x34ce2ad9; 
@property(retain) NSString *notificationURLString;	// G=0x34ce2e61; S=0x34ce2e71; 
@property(retain) NSURL *outboxURL;	// G=0x34ce2d11; S=0x34ce2d31; 
@property(readonly, assign) NSURL *preferredCalendarUserAddress;	// G=0x34ce4459; 
@property(retain) NSURL *principalURL;	// G=0x34ce2969; S=0x34ce2989; 
@property(readonly, assign) NSSet *pushKeys;	// G=0x34ce41dd; 
@property(retain) NSDictionary *pushTransports;	// G=0x34ce2ef5; S=0x34ce2f05; 
@property(retain) NSNumber *quotaFreeBytes;	// G=0x34ce309d; S=0x34ce30ad; 
@property(readonly, assign) CalDAVRefreshContext *refreshContext;	// G=0x34ce3721; 
@property(assign) BOOL shouldUpdatePushDelegate;	// G=0x34ce4c99; S=0x34ce4ca9; @synthesize=_shouldUpdatePushDelegate
@property(readonly, assign) BOOL supportsExtendedCalendarQuery;	// G=0x34ce32c1; 
@property(assign) BOOL supportsFreebusy;	// G=0x34ce36d9; S=0x34ce36e9; 
@property(readonly, assign) id<CoreDAVTaskManager> taskManager;	// G=0x34ce46c9; 
@property(readonly, assign) NSDateComponents *todoFilterEndDate;	// G=0x34ce364d; 
@property(readonly, assign) NSDateComponents *todoFilterStartDate;	// G=0x34ce35f1; 
@property(readonly, assign) NSString *uid;	// G=0x34ce4c89; @synthesize=_uid
+ (id)_preferredCalendarUserAddressFromAddresses:(id)addresses;	// 0x34ce42dd
+ (BOOL)compareAddressURL:(id)url localString:(id)string;	// 0x34ce0cc5
- (id)init;	// 0x34ce0e9d
- (id)initWithConfiguration:(id)configuration account:(id)account;	// 0x34ce1075
// declared property getter: - (id)APSEnv;	// 0x34ce40e9
// declared property getter: - (id)APSSubscriptionURL;	// 0x34ce4069
// declared property getter: - (id)APSTopic;	// 0x34ce4025
// declared property getter: - (id)XMPPServer;	// 0x34ce3019
- (id)_addUsernameIfNeeded:(id)needed;	// 0x34ce242d
- (id)_sharedSyncEndDate;	// 0x34ce32f5
- (id)_startDateFromDaysToSync:(int)sync;	// 0x34ce33f5
- (BOOL)_userAddressSet:(id)set isEqualToSet:(id)set2;	// 0x34ce24ad
// declared property getter: - (id)account;	// 0x34ce248d
- (id)accountID;	// 0x34ce4879
- (id)additionalHeaderValues;	// 0x34ce4995
// declared property getter: - (id)calendarHomePushKey;	// 0x34ce2f95
// declared property getter: - (id)calendarHomeURL;	// 0x34ce28c1
- (id)calendarOfType:(int)type atURL:(id)url withOptions:(id)options;	// 0x34ce3bc9
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)url;	// 0x34ce45e5
// declared property getter: - (id)calendarUserAddresses;	// 0x34ce2795
- (id)calendarUserAddressesForCalendar:(id)calendar;	// 0x34ce3dbd
// declared property getter: - (id)calendars;	// 0x34ce3741
// declared property getter: - (BOOL)calendarsAreDirty;	// 0x34ce3f59
- (BOOL)clearCalendarChanges;	// 0x34ce3b75
- (id)configuration;	// 0x34ce1ae9
- (void)dealloc;	// 0x34ce0eb1
// declared property getter: - (id)defaultCalendarURL;	// 0x34ce2a11
- (id)defaultEventCalendarTitle;	// 0x34ce3d75
- (id)defaultTodoCalendarTitle;	// 0x34ce3d81
// declared property getter: - (id)deletedCalendarURLs;	// 0x34ce3761
// declared property getter: - (id)dropBoxURL;	// 0x34ce2db9
// declared property getter: - (id)eventFilterEndDate;	// 0x34ce357d
// declared property getter: - (id)eventFilterStartDate;	// 0x34ce3521
// declared property getter: - (id)fullName;	// 0x34ce283d
- (BOOL)handleCertificateError:(id)error;	// 0x34ce4ad5
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x34ce4aad
- (BOOL)hasCalendarUserAddress:(id)address;	// 0x34ce44d5
- (id)host;	// 0x34ce4709
- (id)identityPersist;	// 0x34ce4859
// declared property getter: - (id)inboxCTag;	// 0x34ce2c8d
// declared property getter: - (id)inboxURL;	// 0x34ce2be5
// declared property getter: - (BOOL)isDelegate;	// 0x34ce310d
// declared property getter: - (BOOL)isDirty;	// 0x34ce4cb9
// declared property getter: - (BOOL)isEnabled;	// 0x34ce319d
// declared property getter: - (BOOL)isEnabledForEvents;	// 0x34ce3209
// declared property getter: - (BOOL)isEnabledForTodos;	// 0x34ce3265
// declared property getter: - (BOOL)isExpandPropertyReportSupported;	// 0x34ce3691
// declared property getter: - (BOOL)isMergeSync;	// 0x34ce31e5
// declared property getter: - (BOOL)isWritable;	// 0x34ce3155
- (void)noteFailedNetworkRequest;	// 0x34ce4bd9
- (void)noteFailedProtocolRequest;	// 0x34ce4c11
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x34ce4749
- (void)noteSuccessfulRequestWithNumDownloadedElements:(int)numDownloadedElements;	// 0x34ce4b9d
- (void)noteTimeSpentInNetworking:(double)networking;	// 0x34ce4c49
// declared property getter: - (id)notificationCollectionCTag;	// 0x34ce2b61
// declared property getter: - (id)notificationCollectionURL;	// 0x34ce2ab9
// declared property getter: - (id)notificationURLString;	// 0x34ce2e61
// declared property getter: - (id)outboxURL;	// 0x34ce2d11
- (id)password;	// 0x34ce4839
- (int)port;	// 0x34ce4729
// declared property getter: - (id)preferredCalendarUserAddress;	// 0x34ce4459
- (void)prepareCalendarsForSyncWithCompletionBlock:(id)completionBlock;	// 0x34ce3879
// declared property getter: - (id)principalURL;	// 0x34ce2969
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x34ce4a0d
// declared property getter: - (id)pushKeys;	// 0x34ce41dd
// declared property getter: - (id)pushTransports;	// 0x34ce2ef5
// declared property getter: - (id)quotaFreeBytes;	// 0x34ce309d
// declared property getter: - (id)refreshContext;	// 0x34ce3721
- (void)removeCalendar:(id)calendar;	// 0x34ce3d8d
- (id)scheme;	// 0x34ce46e9
- (id)serverComplianceClasses;	// 0x34ce4899
- (id)serverRoot;	// 0x34ce4815
- (void)setAccount:(id)account;	// 0x34ce249d
// declared property setter: - (void)setCalendarHomePushKey:(id)key;	// 0x34ce2fa5
// declared property setter: - (void)setCalendarHomeURL:(id)url;	// 0x34ce28e1
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x34ce27a5
- (void)setCalendarUserAddresses:(id)addresses forCalendar:(id)calendar;	// 0x34ce3df9
// declared property setter: - (void)setCalendarsAreDirty:(BOOL)dirty;	// 0x34ce3e9d
// declared property setter: - (void)setDefaultCalendarURL:(id)url;	// 0x34ce2a31
// declared property setter: - (void)setDropBoxURL:(id)url;	// 0x34ce2dd9
// declared property setter: - (void)setFullName:(id)name;	// 0x34ce284d
// declared property setter: - (void)setInboxCTag:(id)tag;	// 0x34ce2c9d
// declared property setter: - (void)setInboxURL:(id)url;	// 0x34ce2c05
// declared property setter: - (void)setIsDelegate:(BOOL)delegate;	// 0x34ce311d
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x34ce4cc9
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x34ce31ad
// declared property setter: - (void)setIsExpandPropertyReportSupported:(BOOL)supported;	// 0x34ce36a1
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x34ce3165
// declared property setter: - (void)setNotificationCollectionCTag:(id)tag;	// 0x34ce2b71
// declared property setter: - (void)setNotificationCollectionURL:(id)url;	// 0x34ce2ad9
// declared property setter: - (void)setNotificationURLString:(id)string;	// 0x34ce2e71
// declared property setter: - (void)setOutboxURL:(id)url;	// 0x34ce2d31
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x34ce2989
// declared property setter: - (void)setPushTransports:(id)transports;	// 0x34ce2f05
// declared property setter: - (void)setQuotaFreeBytes:(id)bytes;	// 0x34ce30ad
// declared property setter: - (void)setShouldUpdatePushDelegate:(BOOL)updatePushDelegate;	// 0x34ce4ca9
// declared property setter: - (void)setSupportsFreebusy:(BOOL)freebusy;	// 0x34ce36e9
// declared property setter: - (void)setXMPPServer:(id)server;	// 0x34ce3029
- (BOOL)shouldCompressRequests;	// 0x34ce4b45
- (BOOL)shouldFailAllTasks;	// 0x34ce4ad9
- (BOOL)shouldHandleHTTPCookiesForURL:(id)url;	// 0x34ce4add
- (BOOL)shouldSendClientInfoHeaderForURL:(id)url;	// 0x34ce4ae1
// declared property getter: - (BOOL)shouldUpdatePushDelegate;	// 0x34ce4c99
- (BOOL)shouldUseOpportunisticSockets;	// 0x34ce4b79
// declared property getter: - (BOOL)supportsExtendedCalendarQuery;	// 0x34ce32c1
// declared property getter: - (BOOL)supportsFreebusy;	// 0x34ce36d9
// declared property getter: - (id)taskManager;	// 0x34ce46c9
// declared property getter: - (id)todoFilterEndDate;	// 0x34ce364d
// declared property getter: - (id)todoFilterStartDate;	// 0x34ce35f1
// declared property getter: - (id)uid;	// 0x34ce4c89
- (id)user;	// 0x34ce4819
- (id)userAgentHeader;	// 0x34ce489d
@end

