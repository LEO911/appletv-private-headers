/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import <NSObject.h> // Unknown library
#import "GeoServices-Structs.h"

@class NSMutableArray, NSMutableSet, GEOTileDBMRU, NSLock, NSString;

@interface GEOTileDBWriter : NSObject {
	NSString *_path;	// 4 = 0x4
	sqlite3 *_db;	// 8 = 0x8
	sqlite3_stmt *_versionQuery;	// 12 = 0xc
	sqlite3_stmt *_versionInsert;	// 16 = 0x10
	sqlite3_stmt *_editionQuery;	// 20 = 0x14
	sqlite3_stmt *_editionDelete;	// 24 = 0x18
	sqlite3_stmt *_editionUpdate;	// 28 = 0x1c
	sqlite3_stmt *_tileInsert;	// 32 = 0x20
	sqlite3_stmt *_sizeQuery;	// 36 = 0x24
	long long _lastRowID;	// 40 = 0x28
	unsigned long long _databaseSize;	// 48 = 0x30
	BOOL _closed;	// 56 = 0x38
	BOOL _defunct;	// 57 = 0x39
	NSMutableArray *_writeList;	// 60 = 0x3c
	NSMutableSet *_uncommitedWriteSet;	// 64 = 0x40
	unsigned _pendingWriteBytes;	// 68 = 0x44
	NSLock *_writeListLock;	// 72 = 0x48
	dispatch_queue_s *_writeQueue;	// 76 = 0x4c
	void *_editionMap;	// 80 = 0x50
	long long _evictionRowsThreshold;	// 84 = 0x54
	GEOTileDBMRU *_tileDBMRU;	// 92 = 0x5c
}
@property(assign) BOOL closed;	// G=0x31ce5d4d; S=0x31ce5c65; 
@property(readonly, assign, nonatomic) unsigned long long databaseSize;	// G=0x31ce7539; @synthesize=_databaseSize
@property(readonly, assign, nonatomic) NSString *path;	// G=0x31ce74f5; @synthesize=_path
@property(retain, nonatomic) GEOTileDBMRU *tileDBMRU;	// G=0x31ce7505; S=0x31ce7515; @synthesize=_tileDBMRU
- (id)initWithPath:(id)path;	// 0x31ce4d71
- (void)_closeDB;	// 0x31ce51a9
- (void)_createTables;	// 0x31ce5295
- (void)_deviceLocked;	// 0x31ce505d
- (void)_evict;	// 0x31ce5d5d
- (void)_localeChanged:(id)changed;	// 0x31ce4fc1
- (void)_openDBForceRecreate:(BOOL)recreate;	// 0x31ce5725
- (void)_openIfNecessary;	// 0x31ce5c39
- (void)_performWrites:(BOOL)writes;	// 0x31ce6b8d
- (void)_prepareStatements;	// 0x31ce5301
- (BOOL)_readEditions;	// 0x31ce5605
- (void)_updateEdition:(id)edition;	// 0x31ce67a5
- (void)_updateSize;	// 0x31ce56d9
- (void)_writeEntry:(id)entry;	// 0x31ce6545
- (void)_writeVersion;	// 0x31ce5555
- (void)addTile:(id)tile forKey:(GEOTileKey *)key edition:(unsigned)edition tileSet:(unsigned)set;	// 0x31ce6ef9
// declared property getter: - (BOOL)closed;	// 0x31ce5d4d
// declared property getter: - (unsigned long long)databaseSize;	// 0x31ce7539
- (void)dealloc;	// 0x31ce7365
- (void)flushPendingWrites;	// 0x31ce510d
// declared property getter: - (id)path;	// 0x31ce74f5
- (id)pendingWriteForKey:(GEOTileKey *)key;	// 0x31ce7091
- (void)pendingWritesForKeys:(id)keys handler:(id)handler;	// 0x31ce71ed
// declared property setter: - (void)setClosed:(BOOL)closed;	// 0x31ce5c65
// declared property setter: - (void)setTileDBMRU:(id)dbmru;	// 0x31ce7515
// declared property getter: - (id)tileDBMRU;	// 0x31ce7505
@end

