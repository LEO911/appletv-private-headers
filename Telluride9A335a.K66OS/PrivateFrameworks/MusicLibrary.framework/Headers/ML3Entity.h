/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
@private
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x3098e23d; 
@property(assign) ML3MusicLibrary *library;	// G=0x3097c82d; S=0x3098fc21; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x309821c1; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x3098f1c9
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x3097d355
+ (id)allProperties;	// 0x3098f905
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x30974969
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x3098f901
+ (id)defaultOrderingProperties;	// 0x3098e811
+ (BOOL)deleteFromLibrary:(id)library persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x3098f389
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x3099caf5
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x30974f11
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x3098fa39
+ (id)extraTablesToDelete;	// 0x3098f8f9
+ (id)extraTablesToInsert;	// 0x30981e99
+ (id)foreignColumnForProperty:(id)property;	// 0x3098e81d
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x3098e819
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x3097d7a5
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deleted:(BOOL)deleted;	// 0x30981e9d
+ (id)indexableSQLForProperties:(id)properties;	// 0x3098f909
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x30981abd
+ (BOOL)insertionChangesLibraryContents;	// 0x3098200d
+ (id)joinClauseForProperty:(id)property;	// 0x30974ff5
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x3098f1c5
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x3097f6ad
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x3098e73d
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x3097c18d
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x3097b839
+ (id)persistentIDColumnForTable:(id)table;	// 0x3098f8fd
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x3097a785
+ (id)predisambiguatedProperties;	// 0x30974f9d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x3097dbe5
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x3097c9c1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x3097aa55
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x3099ca79
+ (id)replacerWithProperties:(id)properties databaseHandle:(sqlite3 *)handle;	// 0x309b6989
+ (int)revisionTrackingCode;	// 0x3098fa31
+ (id)sectionPropertyForProperty:(id)property;	// 0x3098e815
+ (id)subselectPropertyForProperty:(id)property;	// 0x3098e739
+ (id)subselectStatementForProperty:(id)property;	// 0x3097564d
+ (id)unsettableProperties;	// 0x30981a99
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30980539
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x3097c1bd
- (id)copyInLibrary:(id)library;	// 0x3098df61
- (id)copyWithZone:(NSZone *)zone;	// 0x3098e0e9
- (BOOL)deleteFromLibrary;	// 0x3098f8a5
- (id)description;	// 0x3098e1e1
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x30983029
// declared property getter: - (BOOL)existsInLibrary;	// 0x3098e23d
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x3097c299
- (unsigned)hash;	// 0x3098e1d1
- (void)incrementRevision;	// 0x3098fbc9
- (BOOL)isEqual:(id)equal;	// 0x3098e14d
// declared property getter: - (id)library;	// 0x3097c82d
- (BOOL)matchesPredicate:(id)predicate;	// 0x3098e51d
- (id)newSelectSQLForProperties:(id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x3097c419
// declared property getter: - (long long)persistentID;	// 0x309821c1
// declared property setter: - (void)setLibrary:(id)library;	// 0x3098fc21
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x309826fd
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x30982725
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x30982f05
- (id)valueForProperty:(id)property;	// 0x3097dbb9
@end

