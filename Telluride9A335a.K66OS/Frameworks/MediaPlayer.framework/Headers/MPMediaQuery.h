/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSArray, MPMediaLibrary, MPMediaQuerySectionInfo, NSSet;

@interface MPMediaQuery : NSObject <NSCoding, NSCopying> {
@private
	MPMediaQueryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaQueryInternal _internal;	// G=0x3013f525; S=0x3013f54d; @synthesize
@property(copy, nonatomic) NSSet *collectionPropertiesToFetch;	// G=0x3013e5c5; S=0x3013e60d; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *collectionSectionInfo;	// G=0x3013e69d; 
@property(readonly, assign, nonatomic) NSArray *collectionSections;	// G=0x3013eb51; 
@property(readonly, assign, nonatomic) NSArray *collections;	// G=0x3013df2d; 
@property(retain) id criteria;	// G=0x3013f4c9; S=0x3013f4dd; converted property
@property(readonly, assign, nonatomic) BOOL excludesEntitiesWithBlankNames;	// G=0x3013e7cd; 
@property(retain, nonatomic) NSSet *filterPredicates;	// G=0x3013dca5; S=0x3013dced; 
@property(assign, nonatomic) int groupingType;	// G=0x3013df69; S=0x3013df8d; 
@property(copy, nonatomic) NSSet *itemPropertiesToFetch;	// G=0x3013e539; S=0x3013e55d; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *itemSectionInfo;	// G=0x3013e675; 
@property(readonly, assign, nonatomic) NSArray *itemSections;	// G=0x3013eb29; 
@property(readonly, assign, nonatomic) NSArray *items;	// G=0x3013def1; 
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary;	// G=0x3013de9d; S=0x3013dead; 
@property(copy, nonatomic, getter=_orderingProperties, setter=_setOrderingProperties:) NSArray *orderingProperties;	// G=0x3013e72d; S=0x3013e6c5; 
@property(assign, nonatomic) BOOL sortItems;	// G=0x3013e7a1; S=0x3013e775; 
@property(readonly, assign, nonatomic) BOOL specifiesPlaylistItems;	// G=0x3013ea89; 
@property(readonly, assign, nonatomic) BOOL willGroupEntities;	// G=0x3013eab5; 
+ (id)ITunesUAudioQuery;	// 0x3013d8c5
+ (id)activeGeniusPlaylist;	// 0x3017e175
+ (id)albumsQuery;	// 0x3013d521
+ (id)artistsQuery;	// 0x3013d5f1
+ (id)audibleAudiobooksQuery;	// 0x3013daa1
+ (id)audiobooksQuery;	// 0x3013d9e9
+ (id)compilationsQuery;	// 0x3013db1d
+ (id)composersQuery;	// 0x3013dbed
+ (id)geniusMixesQuery;	// 0x3013e431
+ (id)genresQuery;	// 0x3013dc49
+ (void)initialize;	// 0x3013c9b9
+ (id)movieRentalsQuery;	// 0x3013e2fd
+ (id)moviesQuery;	// 0x3013e245
+ (id)musicVideosQuery;	// 0x3013e0d5
+ (id)playlistsQuery;	// 0x3013d799
+ (id)podcastsQuery;	// 0x3013d7f5
+ (void)setFilteringDisabled:(BOOL)disabled;	// 0x3013dfdd
+ (id)songsQuery;	// 0x3013d6c1
+ (id)tvShowsQuery;	// 0x3013e18d
+ (id)videoPodcastsQuery;	// 0x3013e379
+ (id)videosQuery;	// 0x3013e01d
- (id)init;	// 0x3013ca09
- (id)initWithCoder:(id)coder;	// 0x3013cf39
- (id)initWithCriteria:(id)criteria library:(id)library;	// 0x3013ca1d
- (id)initWithEntities:(id)entities entityType:(int)type;	// 0x3013cb9d
- (id)initWithFilterPredicates:(id)filterPredicates;	// 0x3013cb29
- (id)initWithFilterPredicatesInternal:(id)filterPredicatesInternal;	// 0x3013ca95
- (void)_enumerateCollectionsUsingBlock:(id)block;	// 0x3013f149
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x3013efb1
// declared property getter: - (MPMediaQueryInternal)_internal;	// 0x3013f525
- (BOOL)_isFilteringDisabled;	// 0x3013ef65
// declared property getter: - (id)_orderingProperties;	// 0x3013e72d
- (id)_sanitizedQuery;	// 0x3013eb79
// declared property setter: - (void)_setOrderingProperties:(id)properties;	// 0x3013e6c5
- (id)_valueForAggregateFunction:(id)aggregateFunction onProperty:(id)property entityType:(int)type;	// 0x3013ebe9
- (void)addFilterPredicate:(id)predicate;	// 0x3013dd55
// declared property getter: - (id)collectionPropertiesToFetch;	// 0x3013e5c5
// declared property getter: - (id)collectionSectionInfo;	// 0x3013e69d
// declared property getter: - (id)collectionSections;	// 0x3013eb51
// declared property getter: - (id)collections;	// 0x3013df2d
- (id)copyWithZone:(NSZone *)zone;	// 0x3013d3b9
// converted property getter: - (id)criteria;	// 0x3013f4c9
- (void)dealloc;	// 0x3013cbe9
- (id)description;	// 0x3013cc45
- (void)encodeWithCoder:(id)coder;	// 0x3013d1cd
// declared property getter: - (BOOL)excludesEntitiesWithBlankNames;	// 0x3013e7cd
// declared property getter: - (id)filterPredicates;	// 0x3013dca5
- (unsigned)groupingThreshold;	// 0x3013eab1
// declared property getter: - (int)groupingType;	// 0x3013df69
- (unsigned)hash;	// 0x3013cef5
- (BOOL)isEqual:(id)equal;	// 0x3013ce3d
// declared property getter: - (id)itemPropertiesToFetch;	// 0x3013e539
// declared property getter: - (id)itemSectionInfo;	// 0x3013e675
// declared property getter: - (id)itemSections;	// 0x3013eb29
// declared property getter: - (id)items;	// 0x3013def1
// declared property getter: - (id)mediaLibrary;	// 0x3013de9d
- (id)predicateForProperty:(id)property;	// 0x3017e315
- (void)removeFilterPredicate:(id)predicate;	// 0x3013ddf1
- (void)removePredicatesForProperty:(id)property;	// 0x3017e419
// declared property setter: - (void)setCollectionPropertiesToFetch:(id)fetch;	// 0x3013e60d
// converted property setter: - (void)setCriteria:(id)criteria;	// 0x3013f4dd
- (void)setFilterPredicate:(id)predicate forProperty:(id)property;	// 0x3017e529
// declared property setter: - (void)setFilterPredicates:(id)predicates;	// 0x3013dced
- (void)setFilterPropertyPredicate:(id)predicate;	// 0x3017e585
// declared property setter: - (void)setGroupingType:(int)type;	// 0x3013df8d
// declared property setter: - (void)setItemPropertiesToFetch:(id)fetch;	// 0x3013e55d
// declared property setter: - (void)setMediaLibrary:(id)library;	// 0x3013dead
// declared property setter: - (void)setSortItems:(BOOL)items;	// 0x3013e775
- (void)setStaticEntities:(id)entities entityType:(int)type;	// 0x3013f471
// declared property setter: - (void)set_internal:(MPMediaQueryInternal)internal;	// 0x3013f54d
// declared property getter: - (BOOL)sortItems;	// 0x3013e7a1
// declared property getter: - (BOOL)specifiesPlaylistItems;	// 0x3013ea89
- (id)valueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property;	// 0x3013ef41
- (id)valueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property;	// 0x3013ef1d
// declared property getter: - (BOOL)willGroupEntities;	// 0x3013eab5
@end

