/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EKObject.h"
#import "EventKit-Structs.h"

@class EKSource, NSString;

@interface EKCalendar : EKObject {
@private
	CGColorRef _color;	// 36 = 0x24
	unsigned long _loadFlags;	// 40 = 0x28
	BOOL _isMain;	// 44 = 0x2c
}
@property(assign, nonatomic) CGColorRef CGColor;	// G=0x30fdb4d1; S=0x3101aee1; 
@property(assign) int allowedEntityTypes;	// G=0x30fdcc11; S=0x3101b3e5; converted property
@property(readonly, assign, nonatomic) BOOL allowsContentModifications;	// G=0x30fdcc79; 
@property(readonly, assign, nonatomic) NSString *calendarIdentifier;	// G=0x30fdccd1; 
@property(retain, nonatomic) CGColorRef color;	// G=0x3101b81d; S=0x3101b82d; @synthesize=_color
@property(retain) id colorString;	// G=0x30fdb5d1; S=0x3101ade9; converted property
@property(assign) int displayOrder;	// G=0x30fe4319; S=0x3101b015; converted property
@property(readonly, assign, nonatomic, getter=isImmutable) BOOL immutable;	// G=0x30fedbed; 
@property(assign, nonatomic) BOOL isMainCalendarForSource;	// G=0x3101b871; S=0x3101b881; @synthesize=_isMain
@property(assign, nonatomic) unsigned long loadFlags;	// G=0x3101b851; S=0x3101b861; @synthesize=_loadFlags
@property(retain, nonatomic) EKSource *source;	// G=0x30fdb731; S=0x3101b341; 
@property(readonly, assign, nonatomic, getter=isSubscribed) BOOL subscribed;	// G=0x30fdb6dd; 
@property(readonly, assign, nonatomic) unsigned supportedEventAvailabilities;	// G=0x30fe0f21; 
@property(copy, nonatomic) NSString *title;	// G=0x30fdcf7d; S=0x3101adcd; 
@property(readonly, assign, nonatomic) int type;	// G=0x30fdb675; 
+ (id)calendarWithEventStore:(id)eventStore;	// 0x3101ac59
+ (id)typeDescription:(int)description;	// 0x3101b059
- (id)init;	// 0x3101ace9
// declared property getter: - (CGColorRef)CGColor;	// 0x30fdb4d1
- (void)_setSource:(id)source;	// 0x3101b3b9
- (id)_sourceRelation;	// 0x30fdb759
// converted property getter: - (int)allowedEntityTypes;	// 0x30fdcc11
// declared property getter: - (BOOL)allowsContentModifications;	// 0x30fdcc79
- (BOOL)allowsEvents;	// 0x30fe6e6d
- (BOOL)allowsTasks;	// 0x30feeb61
// declared property getter: - (id)calendarIdentifier;	// 0x30fdccd1
// declared property getter: - (CGColorRef)color;	// 0x3101b81d
// converted property getter: - (id)colorString;	// 0x30fdb5d1
- (BOOL)commit:(id *)commit;	// 0x3101b721
- (void)dealloc;	// 0x3101ad2d
- (id)description;	// 0x3101b0a5
// converted property getter: - (int)displayOrder;	// 0x30fe4319
- (int)entityType;	// 0x3101ad71
- (id)externalID;	// 0x3101b2a1
- (id)externalURI;	// 0x3101b2bd
- (BOOL)getColorRed:(int *)red green:(int *)green blue:(int *)blue;	// 0x30fdb585
- (BOOL)hasEvents;	// 0x3101b429
- (BOOL)hasTasks;	// 0x3101b4ad
- (BOOL)isDefaultCalendarForSource;	// 0x3101b185
- (BOOL)isHidden;	// 0x3101b209
// declared property getter: - (BOOL)isImmutable;	// 0x30fedbed
// declared property getter: - (BOOL)isMainCalendarForSource;	// 0x3101b871
// declared property getter: - (BOOL)isSubscribed;	// 0x30fdb6dd
- (id)lazyLoadRelationForKey:(id)key;	// 0x30fdb775
// declared property getter: - (unsigned long)loadFlags;	// 0x3101b851
- (BOOL)prohibitsScheduling;	// 0x3101b239
- (BOOL)refresh;	// 0x30fec825
- (BOOL)remove:(id *)remove;	// 0x3101b759
- (void)reset;	// 0x3101ad75
// converted property setter: - (void)setAllowedEntityTypes:(int)types;	// 0x3101b3e5
// declared property setter: - (void)setCGColor:(CGColorRef)color;	// 0x3101aee1
// declared property setter: - (void)setColor:(CGColorRef)color;	// 0x3101b82d
// converted property setter: - (void)setColorString:(id)string;	// 0x3101ade9
// converted property setter: - (void)setDisplayOrder:(int)order;	// 0x3101b015
// declared property setter: - (void)setIsMainCalendarForSource:(BOOL)source;	// 0x3101b881
// declared property setter: - (void)setLoadFlags:(unsigned long)flags;	// 0x3101b861
// declared property setter: - (void)setSource:(id)source;	// 0x3101b341
// declared property setter: - (void)setTitle:(id)title;	// 0x3101adcd
- (id)sharedOwnerAddress;	// 0x3101b285
- (id)sharedOwnerName;	// 0x3101b269
- (int)sharingStatus;	// 0x30fed7d1
// declared property getter: - (id)source;	// 0x30fdb731
// declared property getter: - (unsigned)supportedEventAvailabilities;	// 0x30fe0f21
// declared property getter: - (id)title;	// 0x30fdcf7d
// declared property getter: - (int)type;	// 0x30fdb675
- (BOOL)validate:(id *)validate;	// 0x3101b531
@end

