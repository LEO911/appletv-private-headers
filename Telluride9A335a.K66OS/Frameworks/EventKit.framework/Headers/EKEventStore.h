/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <NSObject.h> // Unknown library
#import "EventKit-Structs.h"

@class NSNumber, NSTimeZone, NSArray, NSString, EKDaemonConnection, EKCalendar, NSMutableDictionary, NSMutableSet;

@interface EKEventStore : NSObject {
@private
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKDaemonConnection *_database;	// 32 = 0x20
	unsigned long _flags;	// 36 = 0x24
	NSTimeZone *_timeZone;	// 40 = 0x28
	NSMutableDictionary *_calendars;	// 44 = 0x2c
	NSMutableDictionary *_sources;	// 48 = 0x30
	NSMutableSet *_objectsPendingCommit;	// 52 = 0x34
	dispatch_queue_s *_calendarQueue;	// 56 = 0x38
	dispatch_queue_s *_registeredQueue;	// 60 = 0x3c
	dispatch_queue_s *_unsavedChangesQueue;	// 64 = 0x40
	dispatch_queue_s *_dbChangedQueue;	// 68 = 0x44
}
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x31018e41; S=0x31018e51; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x31018e75; S=0x31018e85; @synthesize
@property(assign, nonatomic) dispatch_queue_s *calendarQueue;	// G=0x31018ec9; S=0x31018ed9; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x30fed821; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x31018ded; S=0x31018dfd; @synthesize=_database
@property(assign, nonatomic) dispatch_queue_s *dbChangedQueue;	// G=0x31018f29; S=0x31018f39; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x30fe3501; S=0x31018d09; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x30fe43a5; 
@property(retain) id defaultCalendarForNewTasks;	// G=0x30fee5ad; S=0x31015c99; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x30fe21d1; S=0x31018cc5; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x31018dad; S=0x31018dbd; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x31013cad; 
@property(assign, nonatomic) unsigned long flags;	// G=0x31018e21; S=0x31018e31; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x31018d8d; S=0x31018d9d; @synthesize=_insertedObjects
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x31018ea9; S=0x31018eb9; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x31018d6d; S=0x31018d7d; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x31018d4d; S=0x31018d5d; @synthesize=_registeredObjects
@property(assign, nonatomic) dispatch_queue_s *registeredQueue;	// G=0x31018ee9; S=0x31018ef9; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x30fd2161; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x30fd0435; S=0x30fd47f1; @synthesize=_timeZone
@property(assign, nonatomic) dispatch_queue_s *unsavedChangesQueue;	// G=0x31018f09; S=0x31018f19; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x31018dcd; S=0x31018ddd; @synthesize=_updatedObjects
+ (Class)classForEntityName:(id)entityName;	// 0x30fd2799
+ (Class)publicClassForEntityName:(id)entityName;	// 0x30fdb9cd
+ (id)storeWithOptions:(unsigned long)options path:(id)path;	// 0x31012fd1
- (id)init;	// 0x30fcfead
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x30fcfec1
- (id)_addFetchedObjectWithID:(id)anId;	// 0x30fd2529
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x30fea141
- (id)_allCalendars;	// 0x30fdc9c1
- (BOOL)_calendar:(id)calendar supportsEntityType:(int)type;	// 0x30fdcb79
// declared property getter: - (id)_calendars;	// 0x31018e41
- (void)_databaseChangedExternally;	// 0x30febb39
- (void)_deleteObject:(id)object;	// 0x30fed4ed
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x31014ccd
- (void)_forgetRegisteredObjects;	// 0x31016799
- (void)_insertObject:(id)object;	// 0x30fe62c9
- (void)_notifyStoreChanged;	// 0x31013d8d
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x3101496d
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x30fdcde9
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x30fdd30d
- (void)_protectedDataDidBecomeAvailable;	// 0x31018cc1
- (void)_protectedDataWillBecomeUnavailable;	// 0x31018cbd
- (void)_refreshCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x310162f5
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x31016475
- (void)_registerObject:(id)object;	// 0x30fe1c01
- (void)_registerObjectImmediate:(id)immediate;	// 0x30fd2b99
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x30feb559
- (void)_save;	// 0x31013d79
- (void)_saveWithNotify:(BOOL)notify;	// 0x31013cf1
// declared property getter: - (id)_sources;	// 0x31018e75
- (void)_trackModifiedObject:(id)object;	// 0x30fefd1d
- (void)_unregisterObject:(id)object;	// 0x30fed741
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x30febda9
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x31018739
- (id)alarmWithUUID:(id)uuid;	// 0x31018671
// declared property getter: - (dispatch_queue_s *)calendarQueue;	// 0x31018ec9
- (id)calendarWithExternalURI:(id)externalURI;	// 0x3101614d
- (id)calendarWithID:(id)anId;	// 0x30fd79e5
- (id)calendarWithIdentifier:(id)identifier;	// 0x30fdd209
// declared property getter: - (id)calendars;	// 0x30fed821
- (void)cancelFetchRequest:(id)request;	// 0x31018651
- (id)changesSinceSequenceNumber:(int)number;	// 0x310130a5
- (BOOL)commit:(id *)commit;	// 0x30fea1a5
- (id)connection;	// 0x30fd1591
- (CGColorRef)copyCGColorForNewCalendar;	// 0x31015b39
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x30fdd5a1
- (void)daemonRestarted;	// 0x31013c65
// declared property getter: - (id)database;	// 0x31018ded
// declared property getter: - (dispatch_queue_s *)dbChangedQueue;	// 0x31018f29
- (void)dealloc;	// 0x30fd1d49
- (id)defaultAllDayAlarm;	// 0x30fe348d
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x30fe3501
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x30fe43a5
// converted property getter: - (id)defaultCalendarForNewTasks;	// 0x30fee5ad
- (id)defaultTimedAlarm;	// 0x30fe215d
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x30fe21d1
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x31014759
// declared property getter: - (id)deletedObjects;	// 0x31018dad
- (id)earliestExpiringUnreadEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x30fd0485
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x3101843d
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x30fe0a79
// declared property getter: - (id)eventStoreIdentifier;	// 0x31013cad
- (id)eventWithIdentifier:(id)identifier;	// 0x3101488d
- (id)eventWithUUID:(id)uuid;	// 0x31016081
- (id)eventWithUniqueId:(id)uniqueId;	// 0x31014edd
- (id)eventsMatchingPredicate:(id)predicate;	// 0x30fd0d7d
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x30fd0f3d
- (void)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x30ff29c9
// declared property getter: - (unsigned long)flags;	// 0x31018e21
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x31015365
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x31015905
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x31015459
- (id)insertNewEvent;	// 0x3101622d
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x31016289
- (id)insertNewReminder;	// 0x31015ed1
// declared property getter: - (id)insertedObjects;	// 0x31018d8d
- (BOOL)isDataProtected;	// 0x30fd0431
- (id)localSource;	// 0x31013fe9
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x30fdcd65
- (BOOL)markEventRead:(id)read error:(id *)error;	// 0x31014fb5
- (BOOL)markEventsRead:(id)read error:(id *)error;	// 0x3101510d
- (id)objectWithObjectID:(id)objectID;	// 0x30fd7a7d
// declared property getter: - (id)objectsPendingCommit;	// 0x31018ea9
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x31015f91
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x30fde40d
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x31016011
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x30fdd2d5
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x30fddda5
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x30fd7c85
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x31018b45
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x30fedc91
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x30fde441
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x30ff2919
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x31015fc9
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x31016035
- (id)predicateForUnacknowledgedEvents;	// 0x31018c85
- (id)predicateForUnalertedEvents;	// 0x30fd0d29
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x31018ca1
- (id)publicObjectWithObjectID:(id)objectID;	// 0x31016a69
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x30fdb2b5
// declared property getter: - (id)publicRegisteredObjects;	// 0x31018d6d
- (int)readWriteCalendarCountForEntityType:(int)entityType;	// 0x30fe2c49
- (id)readWriteCalendarsForEntityType:(int)entityType;	// 0x30fdc8b5
- (void)refreshSourcesIfNecessary;	// 0x31016595
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x30fd3edd
- (id)registerFetchedObjectWithID:(id)anId;	// 0x30fd23c9
// declared property getter: - (id)registeredObjects;	// 0x31018d4d
// declared property getter: - (dispatch_queue_s *)registeredQueue;	// 0x31018ee9
- (oneway void)release;	// 0x30fd08b9
- (id)reminderWithExternalURI:(id)externalURI;	// 0x31015cfd
- (id)reminderWithUUID:(id)uuid;	// 0x31015e09
- (id)remindersMatchingPredicate:(id)predicate;	// 0x30fddddd
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x3101469d
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x310145c5
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x30fece81
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x30fece5d
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x30ff2b99
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x30ff2b79
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x31014155
- (void)reset;	// 0x310173e5
- (void)rollback;	// 0x310170e9
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x310145e5
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x310145a5
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x30fe6135
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x30fe6111
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x30fee881
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x30fefce1
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x310140a9
- (int)sequenceNumber;	// 0x3101304d
- (unsigned)serverPort;	// 0x30fd0585
// declared property setter: - (void)setCalendarQueue:(dispatch_queue_s *)queue;	// 0x31018ed9
// declared property setter: - (void)setDatabase:(id)database;	// 0x31018dfd
// declared property setter: - (void)setDbChangedQueue:(dispatch_queue_s *)queue;	// 0x31018f39
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x31018d09
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x31015c35
// converted property setter: - (void)setDefaultCalendarForNewTasks:(id)newTasks;	// 0x31015c99
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x31018cc5
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x31018dbd
- (void)setEventsAlertedAndSave:(id)save;	// 0x30fd1bb5
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x31018e31
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x31018d9d
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x31018eb9
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x31018d7d
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x31018d5d
// declared property setter: - (void)setRegisteredQueue:(dispatch_queue_s *)queue;	// 0x31018ef9
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x30fd47f1
// declared property setter: - (void)setUnsavedChangesQueue:(dispatch_queue_s *)queue;	// 0x31018f19
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x31018ddd
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x31018e51
// declared property setter: - (void)set_sources:(id)sources;	// 0x31018e85
- (id)sourceWithIdentifier:(id)identifier;	// 0x30fdb8e5
// converted property getter: - (id)sources;	// 0x30fd2161
// declared property getter: - (id)timeZone;	// 0x30fd0435
- (int)unacknowledgedEventCount;	// 0x310162c9
- (int)unreadEventCount;	// 0x30fd0a29
// declared property getter: - (dispatch_queue_s *)unsavedChangesQueue;	// 0x31018f09
// declared property getter: - (id)updatedObjects;	// 0x31018dcd
@end

