/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "NSCopying.h"
#import "NSMutableCopying.h"
#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x30fe2f99; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x30fd599d
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x30fd8631
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x30fd6fd1
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x30fe4789
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x3102fc0d
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x30fd59e5
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x30fd8671
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x30fd7011
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x30fd6f3d
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x30fe47dd
- (double)absoluteTime;	// 0x30fd63a5
- (id)calendarDateByAddingDays:(int)days;	// 0x30fd7339
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x30fd7365
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x3102fdc9
- (id)calendarDateForDay;	// 0x30fd71c9
- (id)calendarDateForEndOfDay;	// 0x30fd7455
- (id)calendarDateForEndOfMonth;	// 0x30fdc0ed
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x30fdbf1d
- (id)calendarDateForMonth;	// 0x30fdbff9
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x30fd62f1
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x30fd6305
- (id)calendarDateForYear;	// 0x3102ffc5
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x30fedcf5
- (id)calendarDateWithDate:(id)date;	// 0x3102fdf9
- (int)compare:(id)compare;	// 0x30fd95d5
- (id)components;	// 0x30feddf9
- (id)copyWithZone:(NSZone *)zone;	// 0x30fd62e1
- (id)date;	// 0x30fd7559
- (unsigned)day;	// 0x30ff2759
- (unsigned)dayOfWeek;	// 0x30ff19fd
- (unsigned)dayOfYear;	// 0x3102fed1
- (unsigned)daysInMonth;	// 0x30fdc1f9
- (unsigned)daysInYear;	// 0x3102ff31
- (void)dealloc;	// 0x30fd887d
- (id)description;	// 0x3102fc89
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x30fd8fd1
- (int)differenceInDays:(id)days;	// 0x30fdbee5
- (int)differenceInMonths:(id)months;	// 0x30ff2701
- (int)differenceInYears:(id)years;	// 0x3102fe35
- (id)earlierDate:(id)date;	// 0x30ff2c6d
- (XXStruct_lQVxyC)gregorianDate;	// 0x30fd72ad
- (unsigned)hour;	// 0x30ff1135
- (BOOL)isEqual:(id)equal;	// 0x30fe3bd9
- (id)laterDate:(id)date;	// 0x310300c5
- (unsigned)minute;	// 0x30ff1169
- (unsigned)month;	// 0x3102fe9d
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x30ff1959
- (double)second;	// 0x30ff119d
- (int)secondsFromGMT;	// 0x3102fd8d
// converted property getter: - (id)timeZone;	// 0x30fe2f99
- (unsigned)weekOfYear;	// 0x3102ff01
- (unsigned)weeksInYear;	// 0x3102ff79
- (unsigned)year;	// 0x3102fe6d
@end

