/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UITextInputTraits.h"
#import "NSObject.h"
#import "UITextInputTraits_Private.h"
#import "NSCopying.h"
#import "UIKit-Structs.h"

@class UIImage, UIColor;

@protocol UITextInputTraits <NSObject>
@optional
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) int returnKeyType;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(assign, nonatomic) int spellCheckingType;
// declared property getter: - (int)autocapitalizationType;
// declared property getter: - (int)autocorrectionType;
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;
// declared property getter: - (BOOL)isSecureTextEntry;
// declared property getter: - (int)keyboardAppearance;
// declared property getter: - (int)keyboardType;
// declared property getter: - (int)returnKeyType;
// declared property setter: - (void)setAutocapitalizationType:(int)type;
// declared property setter: - (void)setAutocorrectionType:(int)type;
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;
// declared property setter: - (void)setKeyboardType:(int)type;
// declared property setter: - (void)setReturnKeyType:(int)type;
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;
// declared property setter: - (void)setSpellCheckingType:(int)type;
// declared property getter: - (int)spellCheckingType;
@end

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {
	int autocapitalizationType;	// 4 = 0x4
	int autocorrectionType;	// 8 = 0x8
	int spellCheckingType;	// 12 = 0xc
	unsigned keyboardType : 8;	// 16 = 0x10
	unsigned keyboardAppearance : 8;	// 17 = 0x11
	int returnKeyType;	// 20 = 0x14
	BOOL enablesReturnKeyAutomatically;	// 24 = 0x18
	BOOL secureTextEntry;	// 25 = 0x19
	CFCharacterSetRef textTrimmingSet;	// 28 = 0x1c
	UIColor *insertionPointColor;	// 32 = 0x20
	UIColor *selectionBarColor;	// 36 = 0x24
	UIColor *selectionHighlightColor;	// 40 = 0x28
	UIImage *selectionDragDotImage;	// 44 = 0x2c
	unsigned insertionPointWidth;	// 48 = 0x30
	int textLoupeVisibility;	// 52 = 0x34
	int textSelectionBehavior;	// 56 = 0x38
	id textSuggestionDelegate;	// 60 = 0x3c
	BOOL contentsIsSingleValue;	// 64 = 0x40
	BOOL acceptsEmoji;	// 65 = 0x41
	BOOL returnKeyGoesToNextResponder;	// 66 = 0x42
	BOOL acceptsFloatingKeyboard;	// 67 = 0x43
	BOOL acceptsSplitKeyboard;	// 68 = 0x44
	BOOL richText;	// 69 = 0x45
	BOOL displaySecureTextUsingPlainText;	// 70 = 0x46
	BOOL learnsCorrections;	// 71 = 0x47
	int emptyContentReturnKeyType;	// 72 = 0x48
	int shortcutConversionType;	// 76 = 0x4c
	BOOL suppressReturnKeyStyling;	// 80 = 0x50
	BOOL forceEnableDictation;	// 81 = 0x51
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x339f365d; S=0x33a09be1; @synthesize
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;	// G=0x339f368d; S=0x33be90f9; @synthesize
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;	// G=0x339f369d; S=0x33be9109; @synthesize
@property(assign, nonatomic) int autocapitalizationType;	// G=0x339f3531; S=0x33a078d9; @synthesize
@property(assign, nonatomic) int autocorrectionType;	// G=0x339f3541; S=0x339c8e7d; @synthesize
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x339f364d; S=0x33aa71dd; @synthesize
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;	// G=0x339f36bd; S=0x33be9119; @synthesize
@property(assign, nonatomic) int emptyContentReturnKeyType;	// G=0x339f367d; S=0x33be90d9; @synthesize
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// G=0x339f3591; S=0x339c8a41; @synthesize
@property(assign, nonatomic) BOOL forceEnableDictation;	// G=0x33be9149; S=0x33be9159; @synthesize
@property(retain, nonatomic) UIColor *insertionPointColor;	// G=0x339f35cd; S=0x339c57cd; @synthesize
@property(assign, nonatomic) unsigned insertionPointWidth;	// G=0x339f360d; S=0x33be90c9; @synthesize
@property(assign, nonatomic) int keyboardAppearance;	// G=0x339f3571; S=0x33be90b9; @synthesize
@property(assign, nonatomic) int keyboardType;	// G=0x339f3561; S=0x33a078f9; @synthesize
@property(assign, nonatomic) BOOL learnsCorrections;	// G=0x339f36cd; S=0x33be9129; @synthesize
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;	// G=0x339f366d; S=0x33be90e9; @synthesize
@property(assign, nonatomic) int returnKeyType;	// G=0x339f3581; S=0x339c8a31; @synthesize
@property(assign, nonatomic, getter=isRichText) BOOL richText;	// G=0x339f36ad; S=0x33adace9; @synthesize
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// G=0x33997af1; S=0x33be86c1; @synthesize
@property(retain, nonatomic) UIColor *selectionBarColor;	// G=0x339f35dd; S=0x339c57f1; @synthesize
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// G=0x339f35fd; S=0x339c5901; @synthesize
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// G=0x339f35ed; S=0x339c58dd; @synthesize
@property(assign, nonatomic) int shortcutConversionType;	// G=0x339f36dd; S=0x33be9139; @synthesize
@property(assign, nonatomic) int spellCheckingType;	// G=0x339f3551; S=0x33a078e9; @synthesize
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;	// G=0x339f36ed; S=0x33af1e69; @synthesize
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x339f361d; S=0x33a450b5; @synthesize
@property(assign, nonatomic) int textSelectionBehavior;	// G=0x339f362d; S=0x33a6313d; @synthesize
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x339f363d; S=0x33aa71ed; @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x339978f9; S=0x339f35a1; @dynamic
+ (id)defaultTextInputTraits;	// 0x33ad2cdd
+ (BOOL)keyboardTypeRequiresASCIICapable:(int)capable;	// 0x33a66f9d
+ (id)traitsByAdoptingTraits:(id)traits;	// 0x33a66179
- (id)init;	// 0x339c54b1
// declared property getter: - (BOOL)acceptsEmoji;	// 0x339f365d
// declared property getter: - (BOOL)acceptsFloatingKeyboard;	// 0x339f368d
// declared property getter: - (BOOL)acceptsSplitKeyboard;	// 0x339f369d
// declared property getter: - (int)autocapitalizationType;	// 0x339f3531
// declared property getter: - (int)autocorrectionType;	// 0x339f3541
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x339f364d
- (id)copyWithZone:(NSZone *)zone;	// 0x339f2ad5
- (void)dealloc;	// 0x33a05711
- (id)description;	// 0x33be86ed
- (id)dictionaryRepresentation;	// 0x33be845d
// declared property getter: - (BOOL)displaySecureTextUsingPlainText;	// 0x339f36bd
// declared property getter: - (int)emptyContentReturnKeyType;	// 0x339f367d
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;	// 0x339f3591
// declared property getter: - (BOOL)forceEnableDictation;	// 0x33be9149
// declared property getter: - (id)insertionPointColor;	// 0x339f35cd
// declared property getter: - (unsigned)insertionPointWidth;	// 0x339f360d
- (BOOL)isEqual:(id)equal;	// 0x33be8cb5
// declared property getter: - (BOOL)isRichText;	// 0x339f36ad
// declared property getter: - (BOOL)isSecureTextEntry;	// 0x33997af1
// declared property getter: - (int)keyboardAppearance;	// 0x339f3571
// declared property getter: - (int)keyboardType;	// 0x339f3561
// declared property getter: - (BOOL)learnsCorrections;	// 0x339f36cd
// declared property getter: - (BOOL)returnKeyGoesToNextResponder;	// 0x339f366d
// declared property getter: - (int)returnKeyType;	// 0x339f3581
// declared property getter: - (id)selectionBarColor;	// 0x339f35dd
// declared property getter: - (id)selectionDragDotImage;	// 0x339f35fd
// declared property getter: - (id)selectionHighlightColor;	// 0x339f35ed
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x33a09be1
// declared property setter: - (void)setAcceptsFloatingKeyboard:(BOOL)keyboard;	// 0x33be90f9
// declared property setter: - (void)setAcceptsSplitKeyboard:(BOOL)keyboard;	// 0x33be9109
// declared property setter: - (void)setAutocapitalizationType:(int)type;	// 0x33a078d9
// declared property setter: - (void)setAutocorrectionType:(int)type;	// 0x339c8e7d
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x33aa71dd
// declared property setter: - (void)setDisplaySecureTextUsingPlainText:(BOOL)text;	// 0x33be9119
// declared property setter: - (void)setEmptyContentReturnKeyType:(int)type;	// 0x33be90d9
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;	// 0x339c8a41
// declared property setter: - (void)setForceEnableDictation:(BOOL)dictation;	// 0x33be9159
// declared property setter: - (void)setInsertionPointColor:(id)color;	// 0x339c57cd
// declared property setter: - (void)setInsertionPointWidth:(unsigned)width;	// 0x33be90c9
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;	// 0x33be90b9
// declared property setter: - (void)setKeyboardType:(int)type;	// 0x33a078f9
// declared property setter: - (void)setLearnsCorrections:(BOOL)corrections;	// 0x33be9129
// declared property setter: - (void)setReturnKeyGoesToNextResponder:(BOOL)nextResponder;	// 0x33be90e9
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x339c8a31
// declared property setter: - (void)setRichText:(BOOL)text;	// 0x33adace9
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;	// 0x33be86c1
// declared property setter: - (void)setSelectionBarColor:(id)color;	// 0x339c57f1
// declared property setter: - (void)setSelectionDragDotImage:(id)image;	// 0x339c5901
// declared property setter: - (void)setSelectionHighlightColor:(id)color;	// 0x339c58dd
// declared property setter: - (void)setShortcutConversionType:(int)type;	// 0x33be9139
// declared property setter: - (void)setSpellCheckingType:(int)type;	// 0x33a078e9
// declared property setter: - (void)setSuppressReturnKeyStyling:(BOOL)styling;	// 0x33af1e69
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x33a450b5
// declared property setter: - (void)setTextSelectionBehavior:(int)behavior;	// 0x33a6313d
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x33aa71ed
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x339f35a1
- (void)setToDefaultValues;	// 0x339c54f9
- (void)setToSecureValues;	// 0x33be83bd
// declared property getter: - (int)shortcutConversionType;	// 0x339f36dd
// declared property getter: - (int)spellCheckingType;	// 0x339f3551
// declared property getter: - (BOOL)suppressReturnKeyStyling;	// 0x339f36ed
- (void)takeTraitsFrom:(id)from;	// 0x339f2b21
// declared property getter: - (int)textLoupeVisibility;	// 0x339f361d
// declared property getter: - (int)textSelectionBehavior;	// 0x339f362d
// declared property getter: - (id)textSuggestionDelegate;	// 0x339f363d
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x339978f9
@end

