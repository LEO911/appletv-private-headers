/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class NSMutableArray, UITextInputTraits, NSArray, UIDelayedAction, UIAutocorrectInlinePrompt, NSTimer, UIKeyboardLayout, NSMutableDictionary, UITextInputArrowKeyHistory, UIKeyboardCandidate, UIAlertView, UIKeyboardInputManager, NSString;
@protocol UIKeyboardRecording, UIApplicationEventRecording, UIKeyInput, UITextInput, UIKeyboardTypology, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 48 = 0x30
	UIView *m_languageIndicator;	// 52 = 0x34
	NSString *m_previousInputString;	// 56 = 0x38
	UIKeyboardInputManager *m_inputManager;	// 60 = 0x3c
	UIKeyboardCandidate *m_autocorrection;	// 64 = 0x40
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 68 = 0x44
	UIDelayedAction *m_autocorrectPromptAction;	// 72 = 0x48
	NSMutableDictionary *m_autocorrectHistoryLists;	// 76 = 0x4c
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 80 = 0x50
	NSArray *m_candidates;	// 84 = 0x54
	id<UIKeyboardCandidateList> m_candidateList;	// 88 = 0x58
	UIView *m_markedTextOverlay;	// 92 = 0x5c
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 96 = 0x60
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 100 = 0x64
	UIKeyboardLayout *m_layout;	// 104 = 0x68
	NSMutableDictionary *m_keyedLayouts;	// 108 = 0x6c
	NSString *m_inputModeLastChosen;	// 112 = 0x70
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 116 = 0x74
	NSTimer *m_autoDeleteTimer;	// 128 = 0x80
	unsigned m_autoDeleteCount;	// 132 = 0x84
	double m_autoDeleteLastDelete;	// 136 = 0x88
	double m_autoDeleteInterval;	// 144 = 0x90
	unsigned long m_autoDeleteShiftCharacter;	// 152 = 0x98
	UIDelayedAction *m_longPressAction;	// 156 = 0x9c
	int m_orientation;	// 160 = 0xa0
	int m_originalOrientation;	// 164 = 0xa4
	CGPoint m_inputPoint;	// 168 = 0xa8
	int m_changeCount;	// 176 = 0xb0
	double m_changeTime;	// 180 = 0xb4
	double m_doubleSpacePeriodTime;	// 188 = 0xbc
	id m_changedDelegate;	// 196 = 0xc4
	CFRunLoopObserverRef m_observer;	// 200 = 0xc8
	unsigned m_textInputChangingCount;	// 204 = 0xcc
	BOOL m_textInputChangingText;	// 208 = 0xd0
	BOOL m_textInputChangingDirection;	// 209 = 0xd1
	BOOL m_textInputChangesIgnored;	// 210 = 0xd2
	BOOL m_insideKeyInputDelegateCall;	// 211 = 0xd3
	UITextInputTraits *m_defaultTraits;	// 212 = 0xd4
	UITextInputTraits *m_traits;	// 216 = 0xd8
	int m_returnKeyState;	// 220 = 0xdc
	int m_currentDirection;	// 224 = 0xe0
	int m_learnsCorrections;	// 228 = 0xe4
	BOOL m_anotherTouchWaiting;	// 232 = 0xe8
	BOOL m_autoDeleteOK;	// 233 = 0xe9
	BOOL m_autocapitalizationPreference;	// 234 = 0xea
	BOOL m_autocorrectPromptTimerFired;	// 235 = 0xeb
	BOOL m_autocorrectionPreference;	// 236 = 0xec
	BOOL m_autoshift;	// 237 = 0xed
	BOOL m_caretShowingNow;	// 238 = 0xee
	BOOL m_changeNotificationDisabled;	// 239 = 0xef
	BOOL m_delegateIsSMSTextView;	// 240 = 0xf0
	BOOL m_delegateRequiresKeyEvents;	// 241 = 0xf1
	BOOL m_doubleSpacePeriodPreference;	// 242 = 0xf2
	BOOL m_hardwareKeyboardAttached;	// 243 = 0xf3
	BOOL m_inDealloc;	// 244 = 0xf4
	BOOL m_inHardwareKeyboardMode;	// 245 = 0xf5
	BOOL m_initializationDone;	// 246 = 0xf6
	BOOL m_performDecomposingDelete;	// 247 = 0xf7
	BOOL m_performanceLoggingEnabled;	// 248 = 0xf8
	BOOL m_selecting;	// 249 = 0xf9
	BOOL m_shift;	// 250 = 0xfa
	BOOL m_shiftLocked;	// 251 = 0xfb
	BOOL m_shiftLockedEnabled;	// 252 = 0xfc
	BOOL m_settingShift;	// 253 = 0xfd
	BOOL m_shouldSkipCandidateSelection;	// 254 = 0xfe
	BOOL m_usesCandidateSelection;	// 255 = 0xff
	BOOL m_updatingPreferences;	// 256 = 0x100
	BOOL m_changingGeometryWithSameOrientation;	// 257 = 0x101
	BOOL m_suppressGeometryChangeNotifications;	// 258 = 0x102
	BOOL m_acceptingCandidate;	// 259 = 0x103
	BOOL m_userChangedSelection;	// 260 = 0x104
	BOOL m_shouldChargeKeys;	// 261 = 0x105
	BOOL m_longPress;	// 262 = 0x106
	BOOL m_syntheticInput;	// 263 = 0x107
	BOOL m_replacingWord;	// 264 = 0x108
	BOOL m_shiftNeedsUpdate;	// 265 = 0x109
	BOOL m_shiftPreventAutoshift;	// 266 = 0x10a
	BOOL m_shiftHeldDownNeedsUpdated;	// 267 = 0x10b
	BOOL m_delegateAdoptsTextInput;	// 268 = 0x10c
	BOOL m_delegateAdoptsTextInputPrivate;	// 269 = 0x10d
	BOOL m_delegateAdoptsKeyboardInput;	// 270 = 0x10e
	BOOL m_clientVariantSupportEnabled;	// 271 = 0x10f
	BOOL m_clientVariantSupportEnabledEver;	// 272 = 0x110
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 276 = 0x114
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 280 = 0x118
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 284 = 0x11c
	BOOL m_preRotateShift;	// 288 = 0x120
	BOOL m_preRotateShiftLocked;	// 289 = 0x121
	BOOL m_showInputModeIndicator;	// 290 = 0x122
	BOOL m_suppressUpdateCandidateView;	// 291 = 0x123
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 292 = 0x124
	BOOL m_shouldSetInputModeInNextRun;	// 293 = 0x125
	BOOL m_rivenCenterFilled;	// 294 = 0x126
	float m_splitProgress;	// 296 = 0x128
	NSString *m_currentUsedInputMode;	// 300 = 0x12c
	NSString *m_lastUsedInputMode;	// 304 = 0x130
	BOOL m_needsCandidates;	// 308 = 0x134
	BOOL m_updateLayoutOnShowKeyboard;	// 309 = 0x135
	int _currentAlertReason;	// 312 = 0x138
@private
	id<UIKeyboardTypology> typologyRecorder;	// 316 = 0x13c
	BOOL m_showsCandidateBar;	// 320 = 0x140
	BOOL m_showsCandidateInline;	// 321 = 0x141
	UIAlertView *keyboardAlertView;	// 324 = 0x144
	BOOL committingCandidate;	// 328 = 0x148
	BOOL geometryIsChanging;	// 329 = 0x149
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x33a94f71; S=0x33a7ed51; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x33a66435; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x33a094ed; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x33a869f5; S=0x339f9e01; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x339f9dcd; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x33b9866d; S=0x33b986a1; converted property
@property(assign) BOOL caretBlinks;	// G=0x33b9d2bd; S=0x33a679ad; converted property
@property(assign) BOOL caretVisible;	// G=0x33a9309d; S=0x33a67a15; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x33b980a5; 
@property(readonly, assign) int changeCount;	// G=0x33a65dfd; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x33b996e5; S=0x33b996f5; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x33a87f89; S=0x33a0b3f9; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x33a6f5e5; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x33b9d491; S=0x33b9d4a1; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x33a96125; S=0x33a0b441; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x339f2ac5; S=0x3399d895; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x33b99621; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x33a660bd; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x339f3aed; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x33a65ded; S=0x33a65a51; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x33b9d4b1; S=0x33b9d4c1; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x33b98b79; S=0x33b98bb1; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x339f7cb9; S=0x33a94009; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x339f714d; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x339f97c1; S=0x339f979d; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x33b99279; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x33b9d45d; S=0x33b9d46d; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x33b9d43d; S=0x33a0b41d; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x339f6aed; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x33ab99d9; S=0x33b9d839; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x33b99795; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x33b9827d; 
@property(readonly, assign) int orientation;	// G=0x33a78229; converted property
@property(assign) unsigned phraseBoundary;	// G=0x33b99fa5; S=0x33b99f1d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x339f2aa1; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x339fa58d; S=0x33a0b11d; 
@property(assign) BOOL returnKeyEnabled;	// G=0x33a72391; S=0x33a6620d; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x33b981ed; S=0x33b98221; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x33a701a5; S=0x33b25bd9; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x33b25d25; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x33b9c1c5; S=0x33a661d9; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x33b9d41d; S=0x33b9d42d; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x339fa9cd; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x33aba521; S=0x33a68ae5; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x33b9d3fd; S=0x33b9d40d; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x339faced; S=0x339faad5; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x33b9d44d; S=0x339fa911; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x339ff661; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x339f97d1; S=0x33a0b15d; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x33b9d6e5
+ (id)activeInstance;	// 0x3399d885
+ (float)additionalInstanceHeight;	// 0x339fac95
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x33b97a55
+ (void)applicationWillResignActive:(id)application;	// 0x33a0a60d
+ (void)applicationWillSuspend:(id)application;	// 0x33a0a8c5
+ (CGSize)defaultSize;	// 0x33b97ccd
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x339f226d
+ (CGSize)defaultSizeForOrientation:(int)orientation;	// 0x33ae1f6d
+ (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x33b97cf1
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x33b9c591
+ (BOOL)isSplit;	// 0x339fc369
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x33a00255
+ (void)markElapsed:(id)elapsed;	// 0x339fa8a9
+ (void)markPerformance:(id)performance;	// 0x339f27c1
+ (id)normalizedInputModesFromPreference;	// 0x33b97d29
+ (int)orientationForSize:(CGSize)size;	// 0x33a65b01
+ (CGPoint)persistentOffset;	// 0x339fd989
+ (float)persistentSplitProgress;	// 0x33b982d9
+ (void)refreshRivenStateWithTraits:(id)traits;	// 0x339f3729
+ (void)releaseSharedInstance;	// 0x339eebb5
+ (BOOL)rivenInstalled;	// 0x33a013ad
+ (BOOL)rivenPreference;	// 0x339ff6f1
+ (BOOL)rivenTranslationPreference;	// 0x33a8b1cd
+ (void)setParentTestForProfiling:(id)profiling;	// 0x33b9d515
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x33a9a919
+ (void)setPersistentSplitProgress:(float)progress;	// 0x33b9834d
+ (id)sharedInstance;	// 0x339f20e5
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x339fbf71
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x339fc105
+ (float)splitProgress;	// 0x33b9833d
+ (BOOL)supportsSplit;	// 0x33a6aef1
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x33b98419
- (id)initWithFrame:(CGRect)frame;	// 0x339f23e5
- (id)UILanguagePreference;	// 0x339f683d
- (CGRect)_autocorrectPromptRect;	// 0x33b1c069
- (id)_getAutocorrection;	// 0x33b9da65
- (id)_getCurrentKeyboardName;	// 0x33b9d975
- (id)_getCurrentKeyplaneName;	// 0x33b1a801
- (id)_getLocalizedInputMode;	// 0x33b9d9dd
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x33b9cf19
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x33b9d075
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x33b9cff9
- (BOOL)_hasCandidates;	// 0x339f73f1
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x33b9db75
- (id)_inputForAutocorrectionCandidate;	// 0x33ade51d
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x33b9d5b5
- (id)_layout;	// 0x339fc0e5
- (BOOL)_needsCandidates;	// 0x33b9db29
- (int)_positionInCandidateList:(id)candidateList;	// 0x33b9da85
- (id)_rangeForAutocorrection;	// 0x33b1c181
- (void)_releaseInputManager;	// 0x33b9db59
- (void)_resetInputLocation;	// 0x33b9db39
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x33b9da45
- (void)_setInputManager:(id)manager;	// 0x33b9d551
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x33b1a8e5
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x33b9d561
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x33aba5e1
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x33a65d8d
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x339fa9e5
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x33a65ec9
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x33a734c1
- (void)acceptAutocorrection;	// 0x33a9bc4d
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x33b9a459
- (void)acceptCurrentCandidate;	// 0x33b9a7bd
- (void)acceptCurrentCandidateIfSelected;	// 0x33a713a9
- (BOOL)acceptInputString:(id)string;	// 0x33a8b27d
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x33add131
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x33b9c199
- (void)addAutocorrectionRecord:(id)record forTyping:(id)typing;	// 0x33b9bb51
- (void)addInputObject:(id)object;	// 0x33b9aa1d
- (void)addInputString:(id)string;	// 0x33b99da1
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x33a95125
- (void)addTyping:(id)typing forAutocorrection:(id)autocorrection;	// 0x33b207f1
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x33b98f15
- (void)animateAutocorrection;	// 0x33b1fbc5
- (void)applicationResumedEventsOnly:(id)only;	// 0x33b97e01
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x33b97d95
// declared property getter: - (id)arrowKeyHistory;	// 0x33a94f71
- (void)autoDeleteTimerFired:(id)fired;	// 0x33b9c1f5
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x33a66435
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x33a9b9a9
// converted property getter: - (id)autocorrectPrompt;	// 0x33a094ed
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x33a869f5
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x33b20a19
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x339f9dcd
- (BOOL)autocorrectionPreferenceForTraits;	// 0x339f9d5d
- (id)autocorrectionRecordForWord:(id)word;	// 0x33a9b971
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x33b9866d
- (void)callChanged;	// 0x33a88585
- (void)callChangedSelection;	// 0x33a67bbd
- (BOOL)callLayoutIgnoresShiftState;	// 0x33abaaad
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x33a728b9
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x33a72869
- (void)callLayoutLongPressAction;	// 0x33b9d4d1
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x33a6827d
- (void)callLayoutSetShift:(BOOL)shift;	// 0x33a68229
- (BOOL)callLayoutShiftKeyRequiresImmediateUpdate;	// 0x33b1afe1
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x33a67ce9
- (void)callLayoutUpdateLocalizedKeys;	// 0x339f9d15
- (void)callLayoutUpdateReturnKey;	// 0x33a66239
- (BOOL)callLayoutUsesAutoShift;	// 0x33a680f1
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x33b1645d
- (BOOL)callShouldInsertText:(id)call;	// 0x33a96189
- (BOOL)canHandleKeyHitTest;	// 0x33a71e65
- (BOOL)canUseGeometryKeyTouch;	// 0x33a71e89
- (void)cancelAllKeyEvents;	// 0x3399f4c5
- (void)cancelSplitTransition;	// 0x33b98485
- (id)candidateList;	// 0x33b9a8cd
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x33b9a855
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x33b9a881
// converted property getter: - (BOOL)caretBlinks;	// 0x33b9d2bd
// converted property getter: - (BOOL)caretVisible;	// 0x33a9309d
// declared property getter: - (BOOL)centerFilled;	// 0x33b980a5
// converted property getter: - (int)changeCount;	// 0x33a65dfd
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x33b996e5
// declared property getter: - (id)changedDelegate;	// 0x33a87f89
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x33b9c1d5
- (BOOL)checkSpellingPreference;	// 0x339f9f19
- (BOOL)checkSpellingPreferenceForTraits;	// 0x339f9ea5
- (void)clearAnimations;	// 0x33a0addd
- (void)clearAutocorrectPromptTimer;	// 0x339f7b39
- (void)clearChangeTimeAndCount;	// 0x33a65e0d
- (void)clearDelegate;	// 0x33a0ada1
- (void)clearEmojiLayout;	// 0x33b9d769
- (void)clearInput;	// 0x339f702d
- (void)clearKeyAreas;	// 0x33a71eb1
- (void)clearLanguageIndicator;	// 0x33b98c1d
- (void)clearLayouts;	// 0x339fa59d
- (void)clearLongPressTimer;	// 0x33a0aeb5
- (void)clearSelection;	// 0x33b9d325
- (void)clearShiftState;	// 0x33a976a9
- (void)clearTimers;	// 0x33a0ae29
- (void)clearTransientState;	// 0x33a6608d
- (id)clientOverrideForKey:(id)key;	// 0x33b98525
- (id)clientVariantDelegate;	// 0x33a662fd
- (id)clientVariantsForKey:(id)key;	// 0x33b984cd
// declared property getter: - (BOOL)committingCandidate;	// 0x33b9d491
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x33b1c579
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x33a677f9
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x33a9bd7d
- (float)currentLandscapeHeight;	// 0x33b97b4d
- (float)currentLandscapeWidth;	// 0x33b97a59
- (float)currentPortraitHeight;	// 0x33a72df9
- (float)currentPortraitWidth;	// 0x33a72d05
// declared property getter: - (id)currentUsedInputMode;	// 0x33a96125
- (void)dealloc;	// 0x33a0b181
- (void)defaultsDidChange;	// 0x33b97e15
- (void)delayedInit;	// 0x33a057a5
// declared property getter: - (id)delegate;	// 0x339f2ac5
// declared property getter: - (id)delegateAsResponder;	// 0x33b99621
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x33a660bd
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x33b9bb8d
- (BOOL)delegateSupportsCorrectionUI;	// 0x33ade4ed
- (void)deleteBackward;	// 0x33b99d8d
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x33b169e1
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x33b99d49
- (void)deleteFromInput;	// 0x33b15ef9
- (void)detach;	// 0x33a0afb1
- (void)dismissKeyboard;	// 0x33b9c951
- (BOOL)displaysCandidates;	// 0x33a884a9
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x339f3aed
- (void)enable;	// 0x33b996d1
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x33b98ee1
- (void)fadeAutocorrectPrompt;	// 0x33b9b905
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x33b9d8fd
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x33b9c65d
- (BOOL)flushKeyplaneName:(id)name;	// 0x33a9be39
- (void)forceShiftUpdate;	// 0x33b1ac0d
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x33a89b29
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x33b981b9
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x33b9c001
- (void)generateCandidates;	// 0x33a76689
- (void)generateCandidatesWithOptions:(int)options;	// 0x33a7669d
- (void)geometryChangeDone:(BOOL)done;	// 0x33a76565
// declared property getter: - (id)geometryDelegate;	// 0x33a65ded
// declared property getter: - (BOOL)geometryIsChanging;	// 0x33b9d4b1
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x33b9c0fd
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x33b9c12d
- (void)handleDelete;	// 0x33b15e1d
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x33b15e31
- (void)handleDeleteWithNonZeroInputCount;	// 0x33b16759
- (void)handleDeleteWithZeroInputCount;	// 0x33b9a139
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x33a94121
- (void)handleKeyEvent:(GSEventRef)event;	// 0x33a93889
- (void)handleObserverCallback;	// 0x33a88511
- (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x33b9cb09
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x33a95079
- (void)hardwareAutoRepeat:(id)repeat;	// 0x33b9c63d
- (void)hardwareKeyboardAvailabilityChanged;	// 0x33b9c5c5
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x33b98b79
- (BOOL)hasAutoRepeat;	// 0x33b9d571
- (BOOL)hasEditableMarkedText;	// 0x33a6763d
- (BOOL)hasMarkedText;	// 0x339f711d
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x33b98429
- (void)hideKeyboard;	// 0x33b9c6f1
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x33a88d65
// declared property getter: - (id)inputDelegate;	// 0x339f714d
// declared property getter: - (id)inputManager;	// 0x339f97c1
- (id)inputModeFirstPreference;	// 0x33b9874d
// converted property getter: - (id)inputModeLastChosen;	// 0x33b99279
- (id)inputModeLastChosenPreference;	// 0x33b9879d
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x33b98909
- (id)inputModeLastUsedPreference;	// 0x339f6995
- (id)inputModePreference;	// 0x339f3b49
- (id)inputOverlayContainer;	// 0x33b1c369
- (void)insertText:(id)text;	// 0x33abab6d
- (void)installRecorder;	// 0x339fa68d
- (void)installTypology;	// 0x339fa745
- (BOOL)isAllowedInputMode:(id)mode;	// 0x339f6a21
- (BOOL)isAutoDeleteActive;	// 0x33b9d6a5
- (BOOL)isAutoFillMode;	// 0x33b1ecfd
- (BOOL)isAutoShifted;	// 0x33a6afd5
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x33a6f5e5
- (BOOL)isDesiredInputMode:(id)mode;	// 0x33a66f1d
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x339f7cb9
// converted property getter: - (BOOL)isLongPress;	// 0x33ab99d9
- (BOOL)isMinimized;	// 0x339f9819
// converted property getter: - (BOOL)isShiftLocked;	// 0x33a701a5
- (BOOL)isShifted;	// 0x33a8877d
- (BOOL)isUsingDictationLayout;	// 0x33b9af1d
- (BOOL)isValidKeyInput:(id)input;	// 0x33a94f81
- (void)keyActivated;	// 0x33b99d35
- (void)keyDeactivated;	// 0x33b99d45
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x33a8a709
- (BOOL)keySlidIntoSwipe;	// 0x33adc41d
// declared property getter: - (id)keyboardAlertView;	// 0x33b9d45d
- (BOOL)keyboardDrawsOpaque;	// 0x33a65a01
- (BOOL)keyboardRecordingEnabled;	// 0x339fa6cd
- (BOOL)keyboardsExpandedPreference;	// 0x33b98639
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x33b985c9
// declared property getter: - (id)lastUsedInputMode;	// 0x33b9d43d
- (void)launchTypologyApplication;	// 0x33b9d741
- (void)layoutHasChanged;	// 0x33b996c1
// declared property getter: - (id)legacyInputDelegate;	// 0x339f6aed
- (void)longPressAction;	// 0x33b9c51d
// converted property getter: - (id)markedTextOverlay;	// 0x33b99795
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x33b9c15d
- (void)mediaKeyDown:(GSEventRef)down;	// 0x33b9d1d5
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x33b9827d
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x33b99fc5
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x33b9ae3d
- (BOOL)noContent;	// 0x33ab9711
- (void)notifyShiftState;	// 0x33a68141
// converted property getter: - (int)orientation;	// 0x33a78229
- (void)performClientVariantActionNamed:(id)named;	// 0x33b9857d
- (BOOL)performanceLoggingPreference;	// 0x33a05899
// converted property getter: - (unsigned)phraseBoundary;	// 0x33b99fa5
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x33a77f25
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x33a88e51
- (void)postEmptyDelegateNotificationIfNeeded;	// 0x33a96135
- (void)prepareForGeometryChange;	// 0x33a7354d
- (void)prepareForSelectionChange;	// 0x33a7e025
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x33b99321
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x33a663ed
// declared property getter: - (id)privateInputDelegate;	// 0x339f2aa1
- (void)recomputeActiveInputModes;	// 0x33b99c05
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x33a66bdd
// declared property getter: - (id)recorder;	// 0x339fa58d
- (void)refreshRivenPreferences;	// 0x339f36fd
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x33a721cd
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x33a6aa15
- (void)releaseSuppressUpdateCandidateView;	// 0x33a76501
- (void)removeAutocorrectPrompt;	// 0x339f7a15
- (void)removeAutocorrection;	// 0x33b9a429
- (void)removeFromSuperview;	// 0x33a0af05
- (void)replaceText:(id)text;	// 0x33b9ab29
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x33b9af65
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x33a6b775
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x33a6aa61
- (id)returnKeyDisplayName;	// 0x33a723ad
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x33a72391
- (int)returnKeyType;	// 0x33a72421
// declared property getter: - (BOOL)rivenSplitLock;	// 0x33b981ed
- (void)saveInputModesPreference:(id)preference;	// 0x33b98715
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x33b9ad11
- (id)searchStringForMarkedText;	// 0x33b99809
- (void)selectionDidChange:(id)selection;	// 0x33a7ec29
- (id)selectionView;	// 0x33b9d849
- (void)selectionWillChange:(id)selection;	// 0x33a7dfe5
- (void)setAnotherTouchWaiting:(BOOL)waiting;	// 0x33b9c55d
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x33a7ed51
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x339f9e01
- (void)setAutocorrection:(id)autocorrection;	// 0x339f7171
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x33b986a1
- (void)setCandidates:(id)candidates;	// 0x339f7321
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x33a679ad
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x33a67a15
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x33b996f5
- (void)setChanged;	// 0x33a87fb9
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x33a0b3f9
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x33b9d4a1
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x33a0b441
- (void)setDefaultTextInputTraits:(id)traits;	// 0x33a73431
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x3399d895
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x3399d8a9
- (void)setFrame:(CGRect)frame;	// 0x339f2829
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x33a65a51
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x33b9d4c1
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x33b98bb1
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x33a94009
- (void)setInitialDirection;	// 0x33a67a7d
// declared property setter: - (void)setInputManager:(id)manager;	// 0x339f979d
- (void)setInputMode:(id)mode;	// 0x339f6b21
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x339f6b35
- (void)setInputModeFromPreferences;	// 0x339f68d1
- (void)setInputModeLastChosenPreference;	// 0x33b987f9
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x33b9922d
- (void)setInputModeToNextInPreferredList;	// 0x33b99105
- (void)setInputObject:(id)object;	// 0x33b9a8dd
- (void)setInputPoint:(CGPoint)point;	// 0x33a8b2bd
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x33b9d46d
- (void)setLastUsedInputMode;	// 0x33a960c9
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x33a0b41d
- (void)setLearnsCorrections:(int)corrections;	// 0x33b99515
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x33b9d839
- (void)setMarkedText;	// 0x33b99705
- (void)setOrientationForSize:(CGSize)size;	// 0x339f2891
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x33b99f1d
- (void)setPreviousInputString:(id)string;	// 0x33a87d09
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x33a0b11d
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x33a6620d
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x33b98221
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x33b99841
- (void)setShift:(BOOL)shift;	// 0x33a87dd1
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x33a87de5
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x33b25bd9
- (void)setShiftLockedForced:(BOOL)forced;	// 0x33b99c51
- (void)setShiftNeedsUpdate;	// 0x33a87eed
- (void)setShiftOffIfNeeded;	// 0x33a87d49
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x33a87f99
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x33a661d9
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x33b9d42d
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x33a68ae5
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x33b98b69
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x33b9d40d
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x339faad5
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x339fa911
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x33b9d8a1
- (void)setSplitProgress:(float)progress;	// 0x33b98281
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x33a0b15d
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x33a6b435
- (unsigned)shiftFlagsForInputString;	// 0x33abaa35
- (BOOL)shiftLockPreference;	// 0x339f38c5
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x33b25d25
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x33b9c1c5
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x33b16be1
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x33b9d41d
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x339fa9cd
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x33aba521
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x33b9d3d9
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x33a67011
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x33b98f9d
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x33b9d3fd
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x33b990f1
- (void)showKeyboard;	// 0x33b9c79d
- (void)showNextCandidates;	// 0x33b9a835
// declared property getter: - (BOOL)showsCandidateBar;	// 0x339faced
// declared property getter: - (BOOL)showsCandidateInline;	// 0x33b9d44d
- (id)sortingMethods;	// 0x33b9c0a9
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x339ff661
- (void)startAutoDeleteTimer;	// 0x33b16c55
- (void)startCaretBlinkIfNeeded;	// 0x33b9d259
- (void)startKeyboardRecording;	// 0x33c6a465
- (void)stopAutoDelete;	// 0x33a65f9d
- (void)stopKeyboardRecording;	// 0x33c6a571
- (void)storeDelegateConformance;	// 0x33a65e31
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x33a64a7d
- (BOOL)suppliesCompletions;	// 0x33b99c85
- (BOOL)supportsNumberKeySelection;	// 0x33b99d11
- (BOOL)swipeToTabPreference;	// 0x33a68aa1
- (void)takeTextInputTraitsFromDelegate;	// 0x339f2931
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x33b9d681
- (void)textChanged:(id)changed;	// 0x33a87a79
- (void)textDidChange:(id)text;	// 0x33a87a69
- (int)textInputChangingCount;	// 0x33b9d671
- (id)textInputTraits;	// 0x339fc0f5
- (void)textWillChange:(id)text;	// 0x33a879c1
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x33a8b45d
- (void)timeMark:(unsigned)mark;	// 0x33a8b2d1
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x33a8b1dd
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x33b9c0d1
- (void)toggleShift;	// 0x33b99c29
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x33b16cc9
- (void)touchAutocorrectPromptTimer;	// 0x33a719c5
- (void)touchLongPressTimer;	// 0x33a8b0c9
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x33a8b0e1
- (BOOL)typologyEnabled;	// 0x339fa875
// declared property getter: - (id)typologyRecorder;	// 0x339f97d1
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x339f75d5
- (void)updateAutocorrectPromptAction;	// 0x33a77dc5
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x33b1f95d
- (void)updateCandidateDisplay;	// 0x339f7461
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x33b9ad79
- (void)updateChangeTimeAndIncrementCount;	// 0x33aba94d
- (void)updateForChangedSelection;	// 0x33a6705d
- (void)updateFromTextInputTraits;	// 0x33b9d585
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x33b998a9
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x33b98ecd
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x33b98c65
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x33a93f95
- (void)updateKeysWithDelegates;	// 0x33a72ed1
- (void)updateLayout;	// 0x339f9855
- (void)updateLayoutAndSetShift;	// 0x33b9a109
- (void)updateLayoutIfNeeded;	// 0x33a73689
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x33b993d5
- (void)updateObserverState;	// 0x33a87f0d
- (void)updateReturnKey;	// 0x33abbf31
- (void)updateReturnKey:(BOOL)key;	// 0x33a7224d
- (void)updateShiftState;	// 0x33a67d31
- (void)updateTextCandidateView;	// 0x33b9b109
@end

