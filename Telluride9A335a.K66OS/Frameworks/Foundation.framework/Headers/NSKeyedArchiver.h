/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSCoder.h"


@interface NSKeyedArchiver : NSCoder {
@private
	void *_stream;	// 4 = 0x4
	unsigned _flags;	// 8 = 0x8
	id _delegate;	// 12 = 0xc
	id _containers;	// 16 = 0x10
	id _objects;	// 20 = 0x14
	id _objRefMap;	// 24 = 0x18
	id _replacementMap;	// 28 = 0x1c
	id _classNameMap;	// 32 = 0x20
	id _conditionals;	// 36 = 0x24
	id _classes;	// 40 = 0x28
	unsigned _genericKey;	// 44 = 0x2c
	void *_cache;	// 48 = 0x30
	unsigned _cacheSize;	// 52 = 0x34
	unsigned _estimatedCount;	// 56 = 0x38
	void *_reserved2;	// 60 = 0x3c
	id _visited;	// 64 = 0x40
	void *_reserved0;	// 68 = 0x44
}
@property(assign) id delegate;	// G=0x3208807d; S=0x3208806d; converted property
@property(assign) unsigned outputFormat;	// G=0x3201d615; S=0x3208808d; converted property
+ (BOOL)archiveRootObject:(id)object toFile:(id)file;	// 0x32087e05
+ (id)archivedDataWithRootObject:(id)rootObject;	// 0x3201c339
+ (id)classNameForClass:(Class)aClass;	// 0x3201d255
+ (void)initialize;	// 0x320365a1
+ (void)setClassName:(id)name forClass:(Class)aClass;	// 0x32036635
- (id)init;	// 0x32087dad
- (id)initForWritingWithMutableData:(id)mutableData;	// 0x3201c3f9
- (id)_blobForCurrentObject;	// 0x32087d85
- (void)_encodeArrayOfObjects:(id)objects forKey:(id)key;	// 0x32036935
- (void)_encodePropertyList:(id)list forKey:(id)key;	// 0x32040f7d
- (id)_initWithOutput:(id)output;	// 0x3201c409
- (void)_setBlobForCurrentObject:(id)currentObject;	// 0x32087d29
- (BOOL)allowsKeyedCoding;	// 0x3201d2e1
- (id)classNameForClass:(Class)aClass;	// 0x3201d231
- (void)dealloc;	// 0x3201dacd
// converted property getter: - (id)delegate;	// 0x3208807d
- (id)description;	// 0x32088041
- (void)encodeArrayOfObjCType:(const char *)objCType count:(unsigned)count at:(const void *)at;	// 0x32088bad
- (void)encodeBool:(BOOL)aBool forKey:(id)key;	// 0x32036b81
- (void)encodeBycopyObject:(id)object;	// 0x32088579
- (void)encodeByrefObject:(id)object;	// 0x32088589
- (void)encodeBytes:(const void *)bytes length:(unsigned)length;	// 0x320885b9
- (void)encodeBytes:(const char *)bytes length:(unsigned)length forKey:(id)key;	// 0x32088295
- (void)encodeConditionalObject:(id)object;	// 0x320884d5
- (void)encodeConditionalObject:(id)object forKey:(id)key;	// 0x320880f5
- (void)encodeDataObject:(id)object;	// 0x320885a9
- (void)encodeDouble:(double)aDouble forKey:(id)key;	// 0x32040ce5
- (void)encodeFloat:(float)aFloat forKey:(id)key;	// 0x320881a5
- (void)encodeInt32:(int)a32 forKey:(id)key;	// 0x32036f81
- (void)encodeInt64:(long long)a64 forKey:(id)key;	// 0x3204db41
- (void)encodeInt:(int)int forKey:(id)key;	// 0x32040b79
- (void)encodeObject:(id)object;	// 0x320883dd
- (void)encodeObject:(id)object forKey:(id)key;	// 0x3201c641
- (void)encodeRootObject:(id)object;	// 0x32088599
- (void)encodeValueOfObjCType:(const char *)objCType at:(const void *)at;	// 0x320887b1
- (void)encodeValuesOfObjCTypes:(const char *)objCTypes;	// 0x3208865d
- (void)finalize;	// 0x32087f21
- (void)finishEncoding;	// 0x3201d39d
// converted property getter: - (unsigned)outputFormat;	// 0x3201d615
- (void)replaceObject:(id)object withObject:(id)object2;	// 0x3201cfe5
- (void)setClassName:(id)name forClass:(Class)aClass;	// 0x3204e105
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x3208806d
// converted property setter: - (void)setOutputFormat:(unsigned)format;	// 0x3208808d
- (unsigned)systemVersion;	// 0x32088db1
- (int)versionForClassName:(id)className;	// 0x32088d89
@end

