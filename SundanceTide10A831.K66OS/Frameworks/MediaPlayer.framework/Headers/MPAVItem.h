/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class MPImageCache, MPAlternateTracks, MPQueueFeeder, MPAVController, AVPlayerItem, NSString, NSData, AVAsset, NSArray, NSURL, MPMediaItem;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x36ec7611; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x36ec7619; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x36ec7621; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x36ec761d; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x36ec7811; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x36eca8f5; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x36ec7615; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x36ec7629; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x36ec762d; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x36ec8bbd; S=0x36eca905; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x36ec6e99; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x36ec7631; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x36ec8b95; S=0x36eca915; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x36ec8c89; S=0x36ec8c0d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x36ec7635; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x36ec7659; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x36ec7681; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x36ec780d; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x36eca945; S=0x36eca955; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x36ec763d; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x36ec7639; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x36ec76e1; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x36ec7699; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x36ec91a9; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x36ec91f1; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x36ec9291; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x36ec9209; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x36eca925; S=0x36eca935; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x36ec7961; S=0x36ec79a5; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x36ec7655; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x36ec7779; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x36ec777d; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x36ec7781; S=0x36ec7a49; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x36ec7af5; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x36eca965; S=0x36eca975; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x36eca985; S=0x36eca99d; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x36f9689d; 
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x36ec76f1; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x36ec7831; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x36f75795; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x36ec7835; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x36ec9069; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x36ec93d1; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x36ec93e9; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x36ec7391; S=0x36ec73a9; 
@property(assign, nonatomic) MPAVController *player;	// G=0x36eca9b5; S=0x36eca9c5; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x36ec7089; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x36ec788d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x36ec7925; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x36eca9d5; S=0x36ec7a81; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x36ec72fd; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x36ec7795; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x36ec73c9; S=0x36ec73cd; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x36ec7ab9; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x36ec94e1; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x36ec9401; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x36ec9055; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x36ec8be5; S=0x36eca9e5; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x36ec7c05; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x36ec9065; 
@property(assign) BOOL userSkippedPlayback;	// G=0x36ec7439; S=0x36ec7415; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x36ec9155; S=0x36ec917d; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x36ec9075; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x36f96955; 
+ (id)URLFromPath:(id)path;	// 0x36ec67fd
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x36ec7625
+ (unsigned)defaultScaleMode;	// 0x36ec67e9
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x36ec67ed
- (id)init;	// 0x36ec68ad
- (id)initWithAsset:(id)asset;	// 0x36ec6939
- (id)initWithURL:(id)url;	// 0x36ec68c1
- (id)initWithURL:(id)url options:(id)options;	// 0x36ec68fd
- (void)_applicationDidBecomeActive:(id)_application;	// 0x36ec9849
- (void)_checkAllowsBlockingDurationCall;	// 0x36eca3a9
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x36ec9829
- (double)_durationFromExternalMetadataIfAvailable;	// 0x36ec9231
- (double)_durationInSeconds;	// 0x36ec744d
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x36ec8ef1
- (void)_itemAttributeAvailableKey:(id)key;	// 0x36ec9621
- (void)_loadAssetAndPlayerItem;	// 0x36ec6d85
- (void)_loadAssetProperties;	// 0x36ec9a99
- (void)_loadTimeMarkersAsync;	// 0x36ec8a75
- (void)_loadTimeMarkersBlocking;	// 0x36ec7c09
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x36ec99a9
- (void)_realoadEmbeddedTimeMarkers;	// 0x36ec7abd
- (void)_releaseAllTimeMarkers;	// 0x36ec6b31
- (id)_seekableTimeRanges;	// 0x36ec98e9
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x36ec8c99
- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;	// 0x36ec9af5
// declared property getter: - (id)album;	// 0x36ec7611
// declared property getter: - (id)albumArtist;	// 0x36ec7619
// declared property getter: - (unsigned)albumTrackCount;	// 0x36ec7621
// declared property getter: - (unsigned)albumTrackNumber;	// 0x36ec761d
// declared property getter: - (BOOL)allowsEQ;	// 0x36ec7811
// declared property getter: - (id)alternateTracks;	// 0x36eca8f5
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x36ec7755
// declared property getter: - (id)artist;	// 0x36ec7615
// declared property getter: - (id)artworkImageData;	// 0x36ec7629
// declared property getter: - (id)artworkMIMEType;	// 0x36ec762d
- (id)artworkTimeMarkerForTime:(double)time;	// 0x36ec8e3d
// declared property getter: - (id)artworkTimeMarkers;	// 0x36ec8bbd
// declared property getter: - (id)asset;	// 0x36ec6e99
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x36ec9b45
// declared property getter: - (BOOL)canSeedGenius;	// 0x36ec7631
- (id)chapterTimeMarkerForTime:(double)time;	// 0x36ec8e01
// declared property getter: - (id)chapterTimeMarkers;	// 0x36ec8b95
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x36ec8eb5
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x36ec8c89
// declared property getter: - (id)composer;	// 0x36ec7635
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x36ec7659
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x36ec7681
// declared property getter: - (int)customAVEQPreset;	// 0x36ec780d
- (void)dealloc;	// 0x36ec6bb1
// declared property getter: - (float)defaultPlaybackRate;	// 0x36eca945
// declared property getter: - (unsigned)discCount;	// 0x36ec763d
// declared property getter: - (unsigned)discNumber;	// 0x36ec7639
// declared property getter: - (id)displayableText;	// 0x36ec76e1
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x36ec7699
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x36ec91a9
// declared property getter: - (double)durationFromExternalMetadata;	// 0x36ec91f1
// declared property getter: - (double)durationIfAvailable;	// 0x36ec9291
- (double)durationInSeconds;	// 0x36ec74a1
// declared property getter: - (BOOL)durationIsValid;	// 0x36ec9209
// declared property getter: - (id)feeder;	// 0x36eca925
- (void)flushNowPlayingCaches;	// 0x36ec6d55
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x36ec7961
// declared property getter: - (id)genre;	// 0x36ec7655
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x36ec7731
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x36ec7779
// declared property getter: - (BOOL)hasDisplayableText;	// 0x36ec777d
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x36ec7781
// declared property getter: - (id)imageCache;	// 0x36ec7af5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x36ec7af9
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x36ec7b25
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x36eca965
// declared property getter: - (BOOL)isAssetLoaded;	// 0x36eca985
- (BOOL)isAssetURLValid;	// 0x36ec7651
- (BOOL)isPlaceholderForItem:(id)item;	// 0x36ec764d
// declared property getter: - (BOOL)isStreamable;	// 0x36ec7795
// declared property getter: - (BOOL)isStreamingQuality;	// 0x36f9689d
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x36ec67f1
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x36ec7641
- (void)loadAssetAndPlayerItem;	// 0x36ec6d81
- (id)localeForAssetTrack:(id)assetTrack;	// 0x36eca4dd
- (id)localizedPositionInPlaylistString;	// 0x36ec9079
// declared property getter: - (id)lyrics;	// 0x36ec76f1
// declared property getter: - (id)mainTitle;	// 0x36ec7831
// declared property getter: - (id)mediaItem;	// 0x36f75795
// declared property getter: - (CGSize)naturalSize;	// 0x36ec7835
- (void)notePlaybackFinishedByHittingEnd;	// 0x36ec7379
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x36ec9869
- (id)path;	// 0x36ec7511
// declared property getter: - (unsigned long long)persistentID;	// 0x36ec9069
// declared property getter: - (double)playableDuration;	// 0x36ec93d1
// declared property getter: - (double)playableDurationIfAvailable;	// 0x36ec93e9
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x36ec7391
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x36ec7891
// declared property getter: - (id)player;	// 0x36eca9b5
// declared property getter: - (id)playerItem;	// 0x36ec7089
// declared property getter: - (id)podcastURL;	// 0x36ec788d
// declared property getter: - (CGSize)presentationSize;	// 0x36ec7925
- (BOOL)prioritizeDownloadSession;	// 0x36f9f939
- (void)reevaluateType;	// 0x36eca53d
- (void)replacePlayerItemWithPlayerItem:(id)playerItem;	// 0x36eca801
- (void)resetBookkeeping;	// 0x36ec731d
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x36ec79ed
- (void)setAlternateAudioTrackID:(int)anId;	// 0x36ec7371
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x36eca905
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x36eca915
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x36ec8c0d
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x36eca955
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x36eca935
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x36ec79a5
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x36ec7a49
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x36eca975
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x36eca99d
- (void)setOverrideDuration:(double)duration;	// 0x36ec7a6d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x36ec73a9
- (void)setPlaybackFinishedTime:(double)time;	// 0x36ec73ad
- (void)setPlaybackStoppedTime:(double)time;	// 0x36ec7375
// declared property setter: - (void)setPlayer:(id)player;	// 0x36eca9c5
- (void)setPlayerItem:(id)item;	// 0x36ec7265
- (void)setRating:(float)rating;	// 0x36ec73c5
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x36ec7a81
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x36ec73cd
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x36eca9e5
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x36ec73d1
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x36ec73e9
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x36ec7415
// declared property setter: - (void)setVideoID:(id)anId;	// 0x36ec917d
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x36ec9cf9
- (void)setupPlaybackInfo;	// 0x36ec9d61
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x36eca9d5
// declared property getter: - (int)status;	// 0x36ec72fd
// declared property getter: - (int)subtitleTrackID;	// 0x36ec73c9
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x36ec7ab9
// declared property getter: - (double)timeOfSeekableEnd;	// 0x36ec94e1
// declared property getter: - (double)timeOfSeekableStart;	// 0x36ec9401
- (id)titlesForTime:(double)time;	// 0x36ec7c01
// declared property getter: - (unsigned)type;	// 0x36ec9055
- (id)url;	// 0x36ec759d
- (id)urlTimeMarkerForTime:(double)time;	// 0x36ec8e79
// declared property getter: - (id)urlTimeMarkers;	// 0x36ec8be5
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x36ec7c05
// declared property getter: - (float)userRating;	// 0x36ec9065
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x36ec7439
// declared property getter: - (id)videoID;	// 0x36ec9155
// declared property getter: - (BOOL)wantsSubtitles;	// 0x36ec9075
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x36f96955
@end

