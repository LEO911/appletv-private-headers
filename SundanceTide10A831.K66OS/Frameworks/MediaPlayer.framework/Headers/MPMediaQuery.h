/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"

@class NSSet, MPMediaItemCollection, NSArray, MPMediaQuerySectionInfo, MPMediaLibrary;

@interface MPMediaQuery : NSObject <NSCoding, NSCopying> {
	MPMediaQueryInternal _internal;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) unsigned _countOfCollections;	// G=0x36f074b1; 
@property(readonly, assign, nonatomic) unsigned _countOfItems;	// G=0x36f0748d; 
@property(readonly, assign, nonatomic) BOOL _hasCollections;	// G=0x36f07461; 
@property(readonly, assign, nonatomic) BOOL _hasItems;	// G=0x36f07435; 
@property(assign, nonatomic) MPMediaQueryInternal _internal;	// G=0x36f084d5; S=0x36f084fd; @synthesize
@property(readonly, assign, nonatomic) MPMediaItemCollection *collectionByJoiningCollections;	// G=0x36f4a2f1; 
@property(readonly, assign, nonatomic) NSArray *collectionPersistentIdentifiers;	// G=0x36f074f9; 
@property(copy, nonatomic) NSSet *collectionPropertiesToFetch;	// G=0x36f07399; S=0x36f073e1; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *collectionSectionInfo;	// G=0x36f07545; 
@property(readonly, assign, nonatomic) NSArray *collectionSections;	// G=0x36f07ab1; 
@property(readonly, assign, nonatomic) NSArray *collections;	// G=0x36f06bdd; 
@property(retain) id criteria;	// G=0x36f0847d; S=0x36f08491; converted property
@property(readonly, assign, nonatomic) BOOL excludesEntitiesWithBlankNames;	// G=0x36f076ad; 
@property(retain, nonatomic) NSSet *filterPredicates;	// G=0x36f068ed; S=0x36f06935; 
@property(assign, nonatomic) int groupingType;	// G=0x36f06c15; S=0x36f06c39; 
@property(readonly, assign, nonatomic) NSArray *itemPersistentIdentifiers;	// G=0x36f074d5; 
@property(copy, nonatomic) NSSet *itemPropertiesToFetch;	// G=0x36f07321; S=0x36f07345; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *itemSectionInfo;	// G=0x36f0751d; 
@property(readonly, assign, nonatomic) NSArray *itemSections;	// G=0x36f07a89; 
@property(readonly, assign, nonatomic) NSArray *items;	// G=0x36f06af1; 
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary;	// G=0x36f06a9d; S=0x36f06aad; 
@property(copy, nonatomic, getter=_orderingProperties, setter=_setOrderingProperties:) NSArray *orderingProperties;	// G=0x36f075c1; S=0x36f0756d; 
@property(assign, nonatomic) BOOL sortItems;	// G=0x36f07639; S=0x36f07609; 
@property(readonly, assign, nonatomic) BOOL specifiesPlaylistItems;	// G=0x36f079e9; 
@property(assign, nonatomic) BOOL useSections;	// G=0x36f07689; S=0x36f07665; 
@property(readonly, assign, nonatomic) BOOL willGroupEntities;	// G=0x36f07a15; 
+ (void)initFilteringDisabled;	// 0x36f06c89
+ (id)ITunesUAudioQuery;	// 0x36f063e9
+ (id)activeGeniusPlaylist;	// 0x36f49ca5
+ (id)albumsQuery;	// 0x36f06045
+ (id)artistsQuery;	// 0x36f06115
+ (id)audibleAudiobooksQuery;	// 0x36f066e9
+ (id)audiobooksQuery;	// 0x36f06631
+ (id)compilationsQuery;	// 0x36f06765
+ (id)composersQuery;	// 0x36f06835
+ (id)geniusMixesQuery;	// 0x36f07221
+ (id)genresQuery;	// 0x36f06891
+ (void)initialize;	// 0x36f05459
+ (BOOL)isFilteringDisabled;	// 0x36f06d59
+ (id)movieRentalsQuery;	// 0x36f070ed
+ (id)moviesQuery;	// 0x36f07035
+ (id)musicVideosQuery;	// 0x36f06ec5
+ (id)playlistsQuery;	// 0x36f062bd
+ (id)podcastsQuery;	// 0x36f06319
+ (void)setFilteringDisabled:(BOOL)disabled;	// 0x36f06cd9
+ (id)songsQuery;	// 0x36f061e5
+ (id)tvShowsQuery;	// 0x36f06f7d
+ (id)videoITunesUAudioQuery;	// 0x36f0650d
+ (id)videoPodcastsQuery;	// 0x36f07169
+ (id)videosQuery;	// 0x36f06e0d
- (id)init;	// 0x36f054a9
- (id)initWithCoder:(id)coder;	// 0x36f05a45
- (id)initWithCriteria:(id)criteria library:(id)library;	// 0x36f054bd
- (id)initWithEntities:(id)entities entityType:(int)type;	// 0x36f05639
- (id)initWithFilterPredicates:(id)filterPredicates;	// 0x36f055c5
- (id)initWithFilterPredicatesInternal:(id)filterPredicatesInternal;	// 0x36f05531
// declared property getter: - (unsigned)_countOfCollections;	// 0x36f074b1
// declared property getter: - (unsigned)_countOfItems;	// 0x36f0748d
- (void)_enumerateCollectionsUsingBlock:(id)block;	// 0x36f08115
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x36f07f95
// declared property getter: - (BOOL)_hasCollections;	// 0x36f07461
// declared property getter: - (BOOL)_hasItems;	// 0x36f07435
// declared property getter: - (MPMediaQueryInternal)_internal;	// 0x36f084d5
- (BOOL)_isFilteringDisabled;	// 0x36f07f59
// declared property getter: - (id)_orderingProperties;	// 0x36f075c1
- (id)_sanitizedQuery;	// 0x36f07ad9
// declared property setter: - (void)_setOrderingProperties:(id)properties;	// 0x36f0756d
- (BOOL)_updatePredicateForProperty:(id)property withPropertyPredicate:(id)propertyPredicate;	// 0x36f4a145
- (id)_valueForAggregateFunction:(id)aggregateFunction onProperty:(id)property entityType:(int)type;	// 0x36f07b4d
- (void)addFilterPredicate:(id)predicate;	// 0x36f06989
// declared property getter: - (id)collectionByJoiningCollections;	// 0x36f4a2f1
// declared property getter: - (id)collectionPersistentIdentifiers;	// 0x36f074f9
// declared property getter: - (id)collectionPropertiesToFetch;	// 0x36f07399
// declared property getter: - (id)collectionSectionInfo;	// 0x36f07545
// declared property getter: - (id)collectionSections;	// 0x36f07ab1
// declared property getter: - (id)collections;	// 0x36f06bdd
- (id)copyByRemovingStaticEntities;	// 0x36f05fed
- (id)copyWithZone:(NSZone *)zone;	// 0x36f05e71
// converted property getter: - (id)criteria;	// 0x36f0847d
- (void)dealloc;	// 0x36f05689
- (id)description;	// 0x36f056e1
- (void)encodeWithCoder:(id)coder;	// 0x36f05cb1
// declared property getter: - (BOOL)excludesEntitiesWithBlankNames;	// 0x36f076ad
// declared property getter: - (id)filterPredicates;	// 0x36f068ed
- (unsigned)groupingThreshold;	// 0x36f07a11
// declared property getter: - (int)groupingType;	// 0x36f06c15
- (BOOL)hasDownloadableEntities;	// 0x36f9ed01
- (BOOL)hasDownloadingEntities;	// 0x36f9eebd
- (unsigned)hash;	// 0x36f05a05
- (BOOL)isEqual:(id)equal;	// 0x36f05949
// declared property getter: - (id)itemPersistentIdentifiers;	// 0x36f074d5
// declared property getter: - (id)itemPropertiesToFetch;	// 0x36f07321
// declared property getter: - (id)itemSectionInfo;	// 0x36f0751d
// declared property getter: - (id)itemSections;	// 0x36f07a89
// declared property getter: - (id)items;	// 0x36f06af1
// declared property getter: - (id)mediaLibrary;	// 0x36f06a9d
- (id)mediaQueryWithDownloadableEntities;	// 0x36f9eee5
- (id)mediaQueryWithDownloadingEntities;	// 0x36f9f1c9
- (id)predicateForProperty:(id)property;	// 0x36f49e51
- (void)removeFilterPredicate:(id)predicate;	// 0x36f06a11
- (void)removePredicatesForProperty:(id)property;	// 0x36f49f79
// declared property setter: - (void)setCollectionPropertiesToFetch:(id)fetch;	// 0x36f073e1
// converted property setter: - (void)setCriteria:(id)criteria;	// 0x36f08491
- (void)setFilterPredicate:(id)predicate forProperty:(id)property;	// 0x36f4a0b5
// declared property setter: - (void)setFilterPredicates:(id)predicates;	// 0x36f06935
- (void)setFilterPropertyPredicate:(id)predicate;	// 0x36f4a111
// declared property setter: - (void)setGroupingType:(int)type;	// 0x36f06c39
// declared property setter: - (void)setItemPropertiesToFetch:(id)fetch;	// 0x36f07345
// declared property setter: - (void)setMediaLibrary:(id)library;	// 0x36f06aad
// declared property setter: - (void)setSortItems:(BOOL)items;	// 0x36f07609
- (void)setStaticEntities:(id)entities entityType:(int)type;	// 0x36f08435
// declared property setter: - (void)setUseSections:(BOOL)sections;	// 0x36f07665
// declared property setter: - (void)set_internal:(MPMediaQueryInternal)internal;	// 0x36f084fd
// declared property getter: - (BOOL)sortItems;	// 0x36f07639
// declared property getter: - (BOOL)specifiesPlaylistItems;	// 0x36f079e9
- (BOOL)updateFilterPredicatesToHideUnreachableWhenOfflineCloudContent:(BOOL)hideUnreachableWhenOfflineCloudContent;	// 0x36f4a1c5
// declared property getter: - (BOOL)useSections;	// 0x36f07689
- (id)valueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property;	// 0x36f07f35
- (id)valueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property;	// 0x36f07f11
// declared property getter: - (BOOL)willGroupEntities;	// 0x36f07a15
@end

