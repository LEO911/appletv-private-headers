/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSString, NSArray, MPMediaItemArtwork, NSDate;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x36f0cf25; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x36f0cf81; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x36f0cf9d; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x36f0cfb9; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x36f0cfd5; S=0x36f0d009; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x36f0c6f5; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x36f0d04d; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x36f0cf41; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x36f0d249; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x36f0d069; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x36f0d655; S=0x36f0d685; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x36f0d149; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x36f0d085; 
@property(readonly, assign, nonatomic) BOOL isUsableAsRepresentativeItem;	// G=0x36f0dded; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x36f0d4bd; S=0x36f0d4d9; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x36f0d61d; S=0x36f0d639; 
@property(copy, nonatomic) NSDate *lastUsedDate;	// G=0x36f0d4f5; S=0x36f0d511; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x36f0d179; 
@property(readonly, assign, nonatomic) BOOL mediaTypeCanSeedGenius;	// G=0x36fa45e9; 
@property(assign, nonatomic) unsigned playCount;	// G=0x36f0d3cd; S=0x36f0d401; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x36f0d445; S=0x36f0d479; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x36f0d1ad; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x36f0d28d; 
@property(assign, nonatomic) unsigned rating;	// G=0x36f0d2a9; S=0x36f0d2dd; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x36f0d321; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x36f0d6c9; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x36f0d52d; S=0x36f0d561; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x36f0d5a5; S=0x36f0d5d9; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x36f0d1e1; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x36f0d215; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x36f0d33d; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x36f0d359; 
+ (void)_createFilterableDictionary;	// 0x36f0c711
+ (BOOL)_isValidItemProperty:(id)property;	// 0x36f0cee1
+ (BOOL)canFilterByProperty:(id)property;	// 0x36f0be65
+ (id)dynamicProperties;	// 0x36f0c5c9
+ (id)fallbackTitlePropertyForGroupingType:(int)groupingType;	// 0x36f0c5ad
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x36f0c4bd
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x36f0c529
- (id)initWithCoder:(id)coder;	// 0x36f0bd61
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x36f0bc55
- (id)_bestStoreURL;	// 0x36f0c405
- (id)_directStoreURL;	// 0x36f0ddf1
- (id)_libraryLinkArtist;	// 0x36f0df99
- (id)_libraryLinkKind;	// 0x36f0e00d
- (id)_libraryLinkPlaylistName;	// 0x36f0e0cd
- (id)_libraryLinkURL;	// 0x36f0e161
// declared property getter: - (id)albumArtist;	// 0x36f0cf25
// declared property getter: - (id)albumTitle;	// 0x36f0cf81
// declared property getter: - (id)artist;	// 0x36f0cf9d
// declared property getter: - (id)artwork;	// 0x36f0cfb9
// declared property getter: - (double)bookmarkTime;	// 0x36f0cfd5
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x36f0d82d
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x36f0d919
// declared property getter: - (id)chapters;	// 0x36f0c6f5
- (id)chaptersOfType:(int)type;	// 0x36f0d6f9
- (void)clearBookmarkTime;	// 0x36f0c385
// declared property getter: - (id)composer;	// 0x36f0d04d
- (unsigned)countOfChaptersOfType:(int)type;	// 0x36f0da4d
- (void)didReceiveMemoryWarning;	// 0x36f0c401
- (BOOL)didSkipWithPlayedToTime:(double)time;	// 0x36f0c019
// declared property getter: - (id)effectiveAlbumArtist;	// 0x36f0cf41
// declared property getter: - (double)effectiveStopTime;	// 0x36f0d249
- (void)encodeWithCoder:(id)coder;	// 0x36f0bde9
- (BOOL)existsInLibrary;	// 0x36f0c43d
- (void)gaplessHeuristicInfo:(unsigned *)info durationInSamples:(unsigned long long *)samples lastPacketsResync:(unsigned long long *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x36f0db2d
// declared property getter: - (id)genre;	// 0x36f0d069
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x36f0d655
- (unsigned)hash;	// 0x36f0bcb1
- (void)incrementPlayCountForPlayingToEnd;	// 0x36f0c20d
- (BOOL)incrementPlayCountForStopTime:(double)stopTime;	// 0x36f0c289
- (void)incrementSkipCount;	// 0x36f0c191
- (BOOL)isDownloadInProgress;	// 0x36f9f581
- (BOOL)isDownloadable;	// 0x36f9f361
- (BOOL)isEqual:(id)equal;	// 0x36f0bcc9
// declared property getter: - (BOOL)isITunesU;	// 0x36f0d149
// declared property getter: - (BOOL)isRental;	// 0x36f0d085
// declared property getter: - (BOOL)isUsableAsRepresentativeItem;	// 0x36f0dded
// declared property getter: - (id)lastPlayedDate;	// 0x36f0d4bd
// declared property getter: - (id)lastSkippedDate;	// 0x36f0d61d
// declared property getter: - (id)lastUsedDate;	// 0x36f0d4f5
- (void)markNominalAmountHasBeenPlayed;	// 0x36f0c099
// declared property getter: - (int)mediaType;	// 0x36f0d179
// declared property getter: - (BOOL)mediaTypeCanSeedGenius;	// 0x36fa45e9
- (void)noteWasPlayedToTime:(double)time skipped:(BOOL)skipped;	// 0x36f0c115
// declared property getter: - (unsigned)playCount;	// 0x36f0d3cd
// declared property getter: - (unsigned)playCountSinceSync;	// 0x36f0d445
// declared property getter: - (double)playbackDuration;	// 0x36f0d1ad
// declared property getter: - (id)podcastTitle;	// 0x36f0d28d
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x36f0c6c1
- (id)predicateForProperty:(id)property;	// 0x36f0d38d
// declared property getter: - (unsigned)rating;	// 0x36f0d2a9
// declared property getter: - (id)releaseDate;	// 0x36f0d321
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x36f0d6c9
- (id)representativeItem;	// 0x36f0c439
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x36f0d009
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x36f0d685
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x36f0d4d9
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x36f0d639
// declared property setter: - (void)setLastUsedDate:(id)date;	// 0x36f0d511
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x36f0d401
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x36f0d479
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x36f0d2dd
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x36f0d561
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x36f0d5d9
// declared property getter: - (unsigned)skipCount;	// 0x36f0d52d
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x36f0d5a5
// declared property getter: - (double)startTime;	// 0x36f0d1e1
// declared property getter: - (double)stopTime;	// 0x36f0d215
// declared property getter: - (id)title;	// 0x36f0d33d
- (void)updateLastUsedDateToCurrentDate;	// 0x36f0c309
- (id)valueForProperty:(id)property;	// 0x36f0bef1
- (id)valuesForProperties:(id)properties;	// 0x36f0bf99
// declared property getter: - (unsigned)year;	// 0x36f0d359
@end

