/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSMapTable.h"
#import "Foundation-Structs.h"


__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable {
	NSSlice keys;	// 4 = 0x4
	NSSlice values;	// 68 = 0x44
	unsigned count;	// 132 = 0x84
	unsigned capacity;	// 136 = 0x88
	unsigned keyOptions;	// 140 = 0x8c
	unsigned valueOptions;	// 144 = 0x90
	unsigned mutations;	// 148 = 0x94
	int growLock;	// 152 = 0x98
	bool shouldRehash;	// 156 = 0x9c
}
@property(readonly, assign) unsigned count;	// G=0x325091b9; converted property
- (id)init;	// 0x32593885
- (id)initWithCoder:(id)coder;	// 0x32593f91
- (id)initWithKeyOptions:(unsigned)keyOptions valueOptions:(unsigned)options capacity:(unsigned)capacity;	// 0x32506c09
- (id)initWithKeyPointerFunctions:(id)keyPointerFunctions valuePointerFunctions:(id)functions capacity:(unsigned)capacity;	// 0x32593d81
- (void)_initBlock;	// 0x32506d75
- (void)_setBackingStore;	// 0x32506d99
- (id)allKeys;	// 0x32594bb1
- (id)allValues;	// 0x32594c71
- (void)assign:(unsigned)assign key:(const void *)key value:(const void *)value isNew:(BOOL)aNew;	// 0x32506eb5
- (void)checkCount:(const char *)count;	// 0x32593985
- (Class)classForCoder;	// 0x32593f75
- (BOOL)containsKeys:(const void **)keys values:(const void **)values count:(unsigned)count;	// 0x325942d9
- (id)copy;	// 0x32593b21
// converted property getter: - (unsigned)count;	// 0x325091b9
- (unsigned)countByEnumeratingWithState:(XXStruct_kFm5bA *)state objects:(id *)objects count:(unsigned)count;	// 0x32536cc9
- (void)dealloc;	// 0x325075fd
- (id)description;	// 0x325948c9
- (id)dump;	// 0x325943bd
- (void)encodeWithCoder:(id)coder;	// 0x32594039
- (void *)existingItemForSetItem:(const void *)setItem forAbsentKey:(const void *)absentKey;	// 0x325945bd
- (void)finalize;	// 0x32594865
- (unsigned)getKeys:(const void **)keys values:(const void **)values;	// 0x3253754d
- (void)grow;	// 0x32536a95
- (unsigned)hash;	// 0x32594a45
- (BOOL)isEqual:(id)equal;	// 0x32594a7d
- (id)keyEnumerator;	// 0x325949e9
- (id)keyPointerFunctions;	// 0x32594211
- (BOOL)mapMember:(const void *)member originalKey:(const void **)key value:(const void **)value;	// 0x32594661
- (id)objectEnumerator;	// 0x3254bc31
- (id)objectForKey:(id)key;	// 0x32502e75
- (void)raiseCountUnderflowException;	// 0x325938a9
- (unsigned)realCount;	// 0x325938ed
- (void)rehash;	// 0x3259474d
- (unsigned)rehashAround:(unsigned)around;	// 0x32508fa5
- (void)removeAllItems;	// 0x325947cd
- (void)removeObjectForKey:(id)key;	// 0x32508edd
- (void)replaceItem:(const void *)item forExistingKey:(const void *)existingKey;	// 0x325946d9
- (void)setItem:(const void *)item forAbsentKey:(const void *)absentKey;	// 0x32594479
- (void)setItem:(const void *)item forKnownAbsentKey:(const void *)knownAbsentKey;	// 0x32594505
- (void)setObject:(id)object forKey:(id)key;	// 0x32506e21
- (id)valuePointerFunctions;	// 0x32594275
- (void)zeroPairedEntries;	// 0x32593a0d
@end

