/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x325c66a9; S=0x325161e1; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x325c685d; S=0x325c6925; converted property
@property(retain) id currencyCode;	// G=0x325c7be1; S=0x325c7ca1; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x325c69a9; S=0x325c6a69; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x325c9825; S=0x325c98e5; converted property
@property(retain) id currencySymbol;	// G=0x325c7d41; S=0x325c7e01; converted property
@property(retain) id decimalSeparator;	// G=0x325c66e9; S=0x325c67a9; converted property
@property(retain) id exponentSymbol;	// G=0x325c8581; S=0x325c8641; converted property
@property(assign) unsigned formatWidth;	// G=0x325c8979; S=0x325c8a45; converted property
@property(assign) unsigned formatterBehavior;	// G=0x325c5ff5; S=0x325c6035; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x325c5fad; S=0x3253ecb1; converted property
@property(retain) id groupingSeparator;	// G=0x325c6c55; S=0x325c6d15; converted property
@property(assign) unsigned groupingSize;	// G=0x325c86e1; S=0x325c87ad; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x325c7ea1; S=0x325c7f61; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x325c9985; S=0x325c9a61; converted property
@property(retain) id locale;	// G=0x325c5f05; S=0x3253ec45; converted property
@property(retain) id maximum;	// G=0x325c9769; S=0x325c9791; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x325c9561; S=0x325c962d; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x325c92c9; S=0x325c9395; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x325c9d91; S=0x325c9e5d; converted property
@property(retain) id minimum;	// G=0x325c96ad; S=0x325c96d5; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x325c9415; S=0x325c94e1; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x325c917d; S=0x325c9249; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x325c9c45; S=0x325c9d11; converted property
@property(retain) id minusSign;	// G=0x325c82c1; S=0x325c8381; converted property
@property(retain) id multiplier;	// G=0x325c8ac5; S=0x325c8b85; converted property
@property(retain) id negativeFormat;	// G=0x325c6099; S=0x325c616d; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x325c7501; S=0x32516189; converted property
@property(retain) id negativePrefix;	// G=0x325c7921; S=0x325c79e1; converted property
@property(retain) id negativeSuffix;	// G=0x325c7a81; S=0x325c7b41; converted property
@property(retain) id nilSymbol;	// G=0x325c7005; S=0x325160d9; converted property
@property(retain) id notANumberSymbol;	// G=0x325c7165; S=0x325c7225; converted property
@property(assign) unsigned numberStyle;	// G=0x325c5e65; S=0x32516261; converted property
@property(retain) id paddingCharacter;	// G=0x325c8c25; S=0x325c8ce5; converted property
@property(assign) unsigned paddingPosition;	// G=0x325c8d85; S=0x325c8e51; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x325c9edd; S=0x325c9f25; converted property
@property(retain) id perMillSymbol;	// G=0x325c8161; S=0x325c8221; converted property
@property(retain) id percentSymbol;	// G=0x325c8001; S=0x325c80c1; converted property
@property(retain) id plusSign;	// G=0x325c8421; S=0x325c84e1; converted property
@property(retain) id positiveFormat;	// G=0x325c63c9; S=0x325c6481; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x325c73a1; S=0x32516131; converted property
@property(retain) id positivePrefix;	// G=0x325c7661; S=0x325c7721; converted property
@property(retain) id positiveSuffix;	// G=0x325c77c1; S=0x325c7881; converted property
@property(retain) id roundingIncrement;	// G=0x325c901d; S=0x325c90dd; converted property
@property(assign) unsigned roundingMode;	// G=0x325c8ed1; S=0x325c8f9d; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x325c882d; S=0x325c88f9; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x325c7585; S=0x325c7609; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x325c62ed; S=0x325c6371; converted property
@property(retain) id textAttributesForNil;	// G=0x325c7089; S=0x325c710d; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x325c72c5; S=0x325c7349; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x325c7425; S=0x325c74a9; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x325c65cd; S=0x325c6651; converted property
@property(retain) id textAttributesForZero;	// G=0x325c6f29; S=0x325c6fad; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x325c6b09; S=0x325c6bd1; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x325c9ae5; S=0x325c9bc1; converted property
@property(retain) id zeroSymbol;	// G=0x325c6dc9; S=0x325c6e89; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x325160a5
+ (void)initialize;	// 0x32535f15
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x325c5ded
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x32535f39
- (id)init;	// 0x32515d25
- (id)initWithCoder:(id)coder;	// 0x325c53b1
- (void *)__Keynote_NOOP;	// 0x325c50e1
- (void)_clearFormatter;	// 0x3251623d
- (void)_regenerateFormatter;	// 0x3251640d
- (void)_reset;	// 0x325c50e5
- (void)_setUsesCharacterDirection:(BOOL)direction;	// 0x325ca05d
- (BOOL)_usesCharacterDirection;	// 0x325c9f81
// converted property getter: - (BOOL)allowsFloats;	// 0x325c66a9
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x325c685d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x325c5531
- (id)copyWithZone:(NSZone *)zone;	// 0x325c52a1
// converted property getter: - (id)currencyCode;	// 0x325c7be1
// converted property getter: - (id)currencyDecimalSeparator;	// 0x325c69a9
// converted property getter: - (id)currencyGroupingSeparator;	// 0x325c9825
// converted property getter: - (id)currencySymbol;	// 0x325c7d41
- (void)dealloc;	// 0x3253f831
// converted property getter: - (id)decimalSeparator;	// 0x325c66e9
- (void)encodeWithCoder:(id)coder;	// 0x325c5309
// converted property getter: - (id)exponentSymbol;	// 0x325c8581
- (void)finalize;	// 0x325c525d
// converted property getter: - (unsigned)formatWidth;	// 0x325c8979
// converted property getter: - (unsigned)formatterBehavior;	// 0x325c5ff5
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x325c5fad
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x325c5535
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x325c5d95
// converted property getter: - (id)groupingSeparator;	// 0x325c6c55
// converted property getter: - (unsigned)groupingSize;	// 0x325c86e1
// converted property getter: - (id)internationalCurrencySymbol;	// 0x325c7ea1
// converted property getter: - (BOOL)isLenient;	// 0x325c9985
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x325c9edd
// converted property getter: - (id)locale;	// 0x325c5f05
// converted property getter: - (id)maximum;	// 0x325c9769
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x325c9561
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x325c92c9
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x325c9d91
// converted property getter: - (id)minimum;	// 0x325c96ad
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x325c9415
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x325c917d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x325c9c45
// converted property getter: - (id)minusSign;	// 0x325c82c1
// converted property getter: - (id)multiplier;	// 0x325c8ac5
// converted property getter: - (id)negativeFormat;	// 0x325c6099
// converted property getter: - (id)negativeInfinitySymbol;	// 0x325c7501
// converted property getter: - (id)negativePrefix;	// 0x325c7921
// converted property getter: - (id)negativeSuffix;	// 0x325c7a81
// converted property getter: - (id)nilSymbol;	// 0x325c7005
// converted property getter: - (id)notANumberSymbol;	// 0x325c7165
- (id)numberFromString:(id)string;	// 0x325c5db5
// converted property getter: - (unsigned)numberStyle;	// 0x325c5e65
// converted property getter: - (id)paddingCharacter;	// 0x325c8c25
// converted property getter: - (unsigned)paddingPosition;	// 0x325c8d85
// converted property getter: - (id)perMillSymbol;	// 0x325c8161
// converted property getter: - (id)percentSymbol;	// 0x325c8001
// converted property getter: - (id)plusSign;	// 0x325c8421
// converted property getter: - (id)positiveFormat;	// 0x325c63c9
// converted property getter: - (id)positiveInfinitySymbol;	// 0x325c73a1
// converted property getter: - (id)positivePrefix;	// 0x325c7661
// converted property getter: - (id)positiveSuffix;	// 0x325c77c1
// converted property getter: - (id)roundingIncrement;	// 0x325c901d
// converted property getter: - (unsigned)roundingMode;	// 0x325c8ed1
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x325c882d
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x325161e1
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x325c6925
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x325c7ca1
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x325c6a69
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x325c98e5
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x325c7e01
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x325c67a9
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x325c8641
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x325c8a45
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x325c6035
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x3253ecb1
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x325c6d15
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x325c87ad
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x325c7f61
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x325c9a61
// converted property setter: - (void)setLocale:(id)locale;	// 0x3253ec45
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x325c9791
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x325c962d
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x325c9395
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x325c9e5d
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x325c96d5
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x325c94e1
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x325c9249
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x325c9d11
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x325c8381
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x325c8b85
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x325c616d
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x32516189
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x325c79e1
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x325c7b41
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x325160d9
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x325c7225
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x32516261
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x325c8ce5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x325c8e51
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x325c9f25
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x325c8221
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x325c80c1
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x325c84e1
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x325c6481
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x32516131
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x325c7721
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x325c7881
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x325c90dd
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x325c8f9d
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x325c88f9
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x325c7609
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x325c6371
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x325c710d
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x325c7349
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x325c74a9
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x325c6651
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x325c6fad
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x325c6bd1
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x325c9bc1
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x325c6e89
- (id)stringForObjectValue:(id)objectValue;	// 0x325162c5
- (id)stringFromNumber:(id)number;	// 0x3253ed0d
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x325c7585
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x325c62ed
// converted property getter: - (id)textAttributesForNil;	// 0x325c7089
// converted property getter: - (id)textAttributesForNotANumber;	// 0x325c72c5
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x325c7425
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x325c65cd
// converted property getter: - (id)textAttributesForZero;	// 0x325c6f29
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x325c6b09
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x325c9ae5
// converted property getter: - (id)zeroSymbol;	// 0x325c6dc9
@end

