/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardInput.h"

@class UITextRange, NSDictionary, UITextPosition, UITextInputTraits, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface UIDefaultKeyboardInput : UIView <UIKeyboardInput> {
	UITextInputTraits *m_traits;	// 84 = 0x54
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x31e23ccd; S=0x31e23cc9; @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign) BOOL becomesEditableWithGestures;	// G=0x31e23ce5; S=0x31e23ce9; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x31e23d1d; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x31e23d21; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x31e23dc9; S=0x31e23dcd; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x31e23cd5; 
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x31e23b91; S=0x31e23b89; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x31e23d79; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x31e23d7d; S=0x31e23d81; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, getter=isSecure) BOOL secure;	// G=0x31e23cc1; S=0x31e23cc5; converted property
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x31e23d15; S=0x31e23d19; 
@property(assign, nonatomic) int selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x31e23c79; S=0x31e23c75; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x31e23dc5; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (NSRange)_markedTextNSRange;	// 0x31e23c49
// declared property getter: - (BOOL)acceptsEmoji;	// 0x31e23ccd
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x31e23d99
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x31e23ce5
// declared property getter: - (id)beginningOfDocument;	// 0x31e23d1d
- (CGRect)caretRect;	// 0x31e23c81
- (CGRect)caretRectForPosition:(id)position;	// 0x31e23d55
- (unsigned short)characterAfterCaretSelection;	// 0x31e23b9d
- (unsigned short)characterBeforeCaretSelection;	// 0x31e23b99
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x31e23b95
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x31e23d8d
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x31e23d95
- (id)closestPositionToPoint:(CGPoint)point;	// 0x31e23d85
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x31e23d89
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x31e23da5
- (void)confirmMarkedText:(id)text;	// 0x31e23b8d
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x31e23ca5
- (void)dealloc;	// 0x31d40e49
- (id)delegate;	// 0x31e23b6d
- (void)deleteBackward;	// 0x31e23b71
// declared property getter: - (id)endOfDocument;	// 0x31e23d21
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x31e23c1d
- (void)extendCurrentSelection:(int)selection;	// 0x31e23c65
- (CGRect)firstRectForRange:(id)range;	// 0x31e23d31
- (id)fontForCaretSelection;	// 0x31e23ba1
- (void)forwardInvocation:(id)invocation;	// 0x31e23a69
- (BOOL)hasContent;	// 0x31e23c29
- (BOOL)hasSelection;	// 0x31e23c2d
- (BOOL)hasText;	// 0x31e23d11
// declared property getter: - (id)inputDelegate;	// 0x31e23dc9
- (void)insertText:(id)text;	// 0x31e23b75
// declared property getter: - (id)interactionAssistant;	// 0x31e23cd5
- (BOOL)isEditable;	// 0x31e23cd9
- (BOOL)isEditing;	// 0x31e23cdd
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x31e23db5
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x31e23dbd
// converted property getter: - (BOOL)isSecure;	// 0x31e23cc1
- (BOOL)isShowingPlaceholder;	// 0x31e23cb9
// converted property getter: - (id)markedText;	// 0x31e23b91
// declared property getter: - (id)markedTextRange;	// 0x31e23d79
// declared property getter: - (id)markedTextStyle;	// 0x31e23d7d
- (id)methodSignatureForSelector:(SEL)selector;	// 0x31e23af1
- (void)moveBackward:(unsigned)backward;	// 0x31e23c69
- (void)moveForward:(unsigned)forward;	// 0x31e23c6d
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x31e23c11
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x31e23da9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x31e23db1
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x31e23dad
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x31e23db9
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x31e23d91
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x31e23c0d
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x31e23c61
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x31e23c5d
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x31e23dc1
- (CGRect)rectContainingCaretSelection;	// 0x31e23be9
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x31e23bc1
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x31e23be5
- (void)replaceCurrentWordWithText:(id)text;	// 0x31e23b7d
- (void)replaceRange:(id)range withText:(id)text;	// 0x31e23d2d
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x31e23b79
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x31e23b81
- (void)selectAll;	// 0x31e23c71
- (id)selectedDOMRange;	// 0x31e23c55
// declared property getter: - (id)selectedTextRange;	// 0x31e23d15
- (BOOL)selectionAtDocumentStart;	// 0x31e23c35
- (BOOL)selectionAtWordStart;	// 0x31e23c39
- (NSRange)selectionRange;	// 0x31e23c3d
- (id)selectionRectsForRange:(id)range;	// 0x31e23dd1
- (int)selectionState;	// 0x31e23c31
- (id)selectionView;	// 0x31e23cd1
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x31e23cc9
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x31e23d9d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x31e23ce9
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x31e23dcd
// converted property setter: - (void)setMarkedText:(id)text;	// 0x31e23b89
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x31e23b85
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x31e23d81
// converted property setter: - (void)setSecure:(BOOL)secure;	// 0x31e23cc5
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x31e23c59
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x31e23d19
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x31e23c7d
// converted property setter: - (void)setText:(id)text;	// 0x31e23c75
- (void)setupPlaceholderTextIfNeeded;	// 0x31e23cbd
- (void)takeTraitsFrom:(id)from;	// 0x31e23b41
// converted property getter: - (id)text;	// 0x31e23c79
- (id)textColorForCaretSelection;	// 0x31e23ba5
- (id)textInRange:(id)range;	// 0x31e23d25
- (id)textInputTraits;	// 0x31e23a19
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x31e23d29
// declared property getter: - (id)tokenizer;	// 0x31e23dc5
- (void)unmarkText;	// 0x31e23da1
- (void)updateSelection;	// 0x31e23ce1
- (CGRect)visibleBounds;	// 0x31e23ced
- (id)wordContainingCaretSelection;	// 0x31e23c19
- (int)wordOffsetInRange:(id)range;	// 0x31e23c21
- (id)wordRangeContainingCaretSelection;	// 0x31e23c15
@end

