/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIWebTiledView.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "UIWebFileUploadPanelDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class _UITextServiceSession, UIWebFileUploadPanel, UIColor, UIImage, WebThreadSafeUndoManager, UITextInteractionAssistant, WebViewReachabilityObserver, UIWebRotatingSheet, NSMutableSet, NSArray, NSTimer, UITextChecker, DOMHTMLElement, UILongPressGestureRecognizer, UIAutoscroll, UITapGestureRecognizer, UIPanGestureRecognizer, CALayer, WebView, DOMNode, UITextInputTraits, DOMElement, DOMRange, UITextRange, NSDictionary, UITextPosition, UIView, UIWebSelectionAssistant;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	unsigned _previousScrollWasScrollToTop : 1;	// 545 = 0x221
	unsigned _skipResettingNeedsScrollNotifications : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	UIWebFileUploadPanel *_fileUploadPanel;	// 580 = 0x244
	int _selectionAffinity;	// 584 = 0x248
	DOMElement *_dictationResultPlaceholder;	// 588 = 0x24c
	id _dictationResultPlaceholderRemovalObserver;	// 592 = 0x250
	DOMRange *_rangeToRestoreAfterDictation;	// 596 = 0x254
	_UITextServiceSession *_definitionSession;	// 600 = 0x258
	_UITextServiceSession *_learnSession;	// 604 = 0x25c
	BOOL _suppressesIncrementalRendering;	// 608 = 0x260
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x31d48e61; S=0x31e39fd1; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x31eadcc1; S=0x31eadc51; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x31e3354d; S=0x31e33551; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x31cce945; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x31ead42d; S=0x31c5bea9; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x31c5a231; S=0x31c89d15; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x31d05451; S=0x31c8afe9; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x31e2df85; S=0x31e2df2d; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x31c8b841; converted property
@property(readonly, assign) int documentType;	// G=0x31c8b82d; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x31e302b5; S=0x31e30271; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x31e3052d; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x31cf19d9; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x31cbb6d5; S=0x31ccc875; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x31d052dd; 
@property(assign) id interactionDelegate;	// G=0x31e39e55; S=0x31c8aff9; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x31e30589; S=0x31d314c1; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x31e30605; S=0x31e305ed; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x31e2df15; S=0x31c59c89; converted property
@property(retain) id markedText;	// G=0x31d356d1; S=0x31d9a559; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x31c5acdd; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x31e3428d; S=0x31e34291; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x31d20c3d; S=0x31e30225; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x31e34821; S=0x31e34831; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x31cc38a9; S=0x31d059dd; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x31cc3935; S=0x31e344ed; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x31e344f1; S=0x31cf1d41; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x31cf9131; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x31e2e361; S=0x31d3d985; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x31e30211; S=0x31e301f9; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x31e2e34d; S=0x31e2e2e5; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x31e305dd; S=0x31e3059d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x31e34841; S=0x31d3dc39; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x31e323b9; S=0x31e3228d; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x31c5acb1; 
@property(retain) id typingAttributes;	// G=0x31e2d869; S=0x31e2d99d; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x31cbb721; converted property
@property(assign) BOOL updatesScrollView;	// G=0x31e2e8ad; S=0x31e2e895; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x31e33431; converted property
@property(readonly, retain) WebView *webView;	// G=0x31c597f9; converted property
+ (id)_createDefaultHighlightView;	// 0x31d2bb49
+ (id)_sharedHighlightView;	// 0x31d2bb11
+ (double)getTimestamp;	// 0x31e2d569
+ (BOOL)hasLandscapeOrientation;	// 0x31c907fd
+ (void)initialize;	// 0x31c446a1
+ (Class)layerClass;	// 0x31c580c9
+ (id)standardTextViewPreferences;	// 0x31c577e1
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x31c57979
- (id)initWithFrame:(CGRect)frame;	// 0x31c88861
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x31c57ad5
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x31d208e1
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x31d48e61
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x31e38bed
- (void)_addAdditionalSubview:(id)subview;	// 0x31e2f735
- (void)_addShortcut:(id)shortcut;	// 0x31e32f4d
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x31d2bf21
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x31c8c7b5
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x31e3b781
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x31e3ba25
- (void)_cancelLongPressGestureRecognizer;	// 0x31d2bd69
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x31d20095
- (void)_cleanupSheet;	// 0x31d3325d
- (void)_clearAllConsoleMessages;	// 0x31e3057d
- (void)_clearDoubleTapRect;	// 0x31c8e241
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x31e338d1
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x31e33b9d
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x31e3a7cd
- (BOOL)_dataDetectionIsActivated;	// 0x31c89dd1
- (void)_define:(id)define;	// 0x31e32e25
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x31e30d69
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x31c5c121
- (void)_didScroll;	// 0x31d2b749
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x31e2d645
- (float)_documentScale;	// 0x31d21c05
- (id)_documentUrl;	// 0x31e34505
- (CGRect)_documentViewVisibleRect;	// 0x31c8ac85
- (id)_doubleTapGestureRecognizer;	// 0x31e39fbd
- (void)_doubleTapRecognized:(id)recognized;	// 0x31e38b65
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x31e3c261
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x31d02cb1
- (void)_finishedUsingDictationPlaceholder;	// 0x31e313fd
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x31e33cdd
- (id)_focusedOrMainFrame;	// 0x31c59955
- (id)_groupName;	// 0x31d958c9
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x31e304b5
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x31e302d9
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x31e304f1
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x31e2fc1d
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x31e38d71
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x31e2d591
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x31e2d5a9
- (BOOL)_isInspectorSearchingForNode;	// 0x31d22165
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x31d46af9
- (CGRect)_lastRectForRange:(id)range;	// 0x31d432fd
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x31c8aa65
- (void)_longPressRecognized:(id)recognized;	// 0x31e38e51
- (NSRange)_markedTextNSRange;	// 0x31e31fc5
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x31e2f669
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x31e2f5fd
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x31c58361
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x31e2eb85
- (void)_notifyPlugInViewsOfDidZoom;	// 0x31e2ec99
- (void)_notifyPlugInViewsOfScaleChange;	// 0x31c8a901
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x31e2ea75
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x31e2fbdd
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x31e2fad9
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x31e2fa75
- (id)_parentTextView;	// 0x31cccb61
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31e341a1
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x31e2d5e1
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x31e3b379
- (Class)_printFormatterClass;	// 0x31f4cf21
- (void)_promptForReplace:(id)replace;	// 0x31e333d9
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x31c90bf9
- (void)_removeAdditionalSubview:(id)subview;	// 0x31e2f7a1
- (void)_removeDefinitionController:(BOOL)controller;	// 0x31cc3a11
- (void)_removeShortcutController:(BOOL)controller;	// 0x31e2d5c1
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x31e2fca5
- (void)_resetForNewPage;	// 0x31c900a5
- (void)_resetFormDataForFrame:(id)frame;	// 0x31e30579
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x31d47c99
- (void)_resetShowingTextStyle:(id)style;	// 0x31d52175
- (void)_reshapePlugInViews;	// 0x31c5c769
- (id)_responderForBecomeFirstResponder;	// 0x31e306c5
- (void)_restoreFlattenedContentLayers;	// 0x31e33e61
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x31c90351
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x31c59541
- (void)_runLoadBlock:(id)block;	// 0x31d20119
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x31c8f1b1
- (id)_scriptingInfoForForm:(id)form;	// 0x31e34ad1
- (id)_scriptingInfoForLink:(id)link;	// 0x31e34855
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x31e34229
- (CGRect)_selectionClipRect;	// 0x31e32899
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x31d02c6d
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x31e394bd
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x31e39fd1
- (void)_setDocumentScale:(float)scale;	// 0x31c8a5a1
- (void)_setDocumentType:(int)type;	// 0x31c89e0d
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x31c89e2d
- (void)_setFont:(id)font;	// 0x31e2d6a1
- (void)_setParentTextView:(id)view;	// 0x31c59ea9
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x31d21bed
- (void)_setTextColor:(id)color;	// 0x31e2d771
- (CGRect)_shortcutPresentationRect;	// 0x31e32d7d
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x31e33a89
- (BOOL)_shouldResetForNewPage;	// 0x31c90065
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x31c59ab1
- (BOOL)_shouldUseInitialScale;	// 0x31e33891
- (void)_showDataDetectorsSheet;	// 0x31e3afc5
- (void)_showImageSheet;	// 0x31e3aa81
- (void)_showLinkSheet;	// 0x31e3ad5d
- (void)_showPendingContentLayers;	// 0x31c906f1
- (void)_showTextStyleOptions:(id)options;	// 0x31e32bc1
- (void)_singleTapRecognized:(id)recognized;	// 0x31d47be9
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x31cea85d
- (id)_targetURL;	// 0x31e39a41
- (id)_textSelectingContainer;	// 0x31d05d01
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x31e38ba9
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x31e38ec9
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x31e30881
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x31e307d5
- (void)_updateFixedPositionContent;	// 0x31d2bea5
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x31e2eded
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x31c9069d
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x31c8aa4d
- (void)_updateScrollViewBoundaryZoomScales;	// 0x31c59f95
- (void)_updateSize;	// 0x31c8e4a1
- (void)_updateSubviewCaches;	// 0x31d21c15
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x31d2150d
- (float)_zoomedDocumentScale;	// 0x31c8df95
- (void)actionDidFinish;	// 0x31e3af75
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x31e39af1
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x31e39ba1
- (void)addInputString:(id)string;	// 0x31e30969
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x31e3092d
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x31d48911
- (id)asText;	// 0x31eae7dd
- (void)assistFormNode:(id)node;	// 0x31e30565
- (void)attemptClick:(id)click;	// 0x31d489c5
- (id)automaticallySelectedOverlay;	// 0x31d46885
- (CGRect)autoscrollContentFrame;	// 0x31e33525
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x31eadcc1
- (CGRect)autoscrollDragFrame;	// 0x31e33501
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x31e344c9
- (BOOL)becomeFirstResponder;	// 0x31d48cdd
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x31e3354d
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x31e3bf71
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x31e3bd6d
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x31e3bf09
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x31e3bce1
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x31e3bd11
- (void)beginSelectionChange;	// 0x31cc2825
// declared property getter: - (id)beginningOfDocument;	// 0x31cce945
- (BOOL)canBecomeFirstResponder;	// 0x31d48e49
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x31ce9c25
- (BOOL)canResignFirstResponder;	// 0x31e30691
- (void)cancelAutoscroll;	// 0x31eae54d
- (void)cancelInteraction;	// 0x31d47d19
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x31d2b921
- (BOOL)cancelMouseTracking;	// 0x31e2ea05
- (BOOL)cancelTouchTracking;	// 0x31e2ea3d
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x31ead42d
- (CGRect)caretRect;	// 0x31d06f41
- (CGRect)caretRectForPosition:(id)position;	// 0x31cc51bd
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x31cc5469
- (unsigned short)characterAfterCaretSelection;	// 0x31cf9195
- (unsigned short)characterBeforeCaretSelection;	// 0x31cf9165
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x31e31a29
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x31e34369
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x31e3445d
- (id)checkSpellingOfString:(id)string;	// 0x31d3fc3d
- (void)clearInteractionTimer;	// 0x31d2bad1
- (void)clearRangedSelectionInitialExtent;	// 0x31ead56d
- (void)clearSelection;	// 0x31ead1a9
- (BOOL)clearWKFirstResponder;	// 0x31d402f1
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x31ead249
- (id)closestPositionToPoint:(CGPoint)point;	// 0x31cf12cd
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x31e34299
- (void)collapseSelection;	// 0x31ead3d9
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x31cf167d
- (void)completeInteraction;	// 0x31d332ed
- (void)confirmMarkedText:(id)text;	// 0x31e319a1
- (BOOL)considerHeightForDoubleTap;	// 0x31e3470d
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x31e3c6e1
- (BOOL)containsOnlySelectableElements;	// 0x31e33ee1
- (CGRect)contentFrameForView:(id)view;	// 0x31eadd3d
- (id)contentView;	// 0x31e34579
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x31e388f1
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x31e32561
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x31e2e1e5
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x31e2e19d
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x31cf13ad
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x31e2e289
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x31e2e22d
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x31cc5565
- (void)copy:(id)copy;	// 0x31e32aad
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x31e2e98d
- (float)currentDocumentScale;	// 0x31e3458d
- (void)cut:(id)cut;	// 0x31e329e1
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x31c5a231
- (void)dealloc;	// 0x31d32d45
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x31e396fd
- (void)deferInteraction;	// 0x31e399f1
- (void)deferredBecomeFirstResponder;	// 0x31e30695
// converted property getter: - (id)delegate;	// 0x31d05451
- (void)deleteBackward;	// 0x31e309b5
- (void)deleteFromInput;	// 0x31e3097d
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x31e2df85
- (id)dictationInterpretations;	// 0x31e31731
- (id)dictationResultMetadataForRange:(id)range;	// 0x31e30d09
- (void)didEndScroll;	// 0x31e33651
- (void)didEndZoom;	// 0x31e337d5
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x31e2dc29
- (void)didMoveToSuperview;	// 0x31c59f81
- (void)didRemovePlugInView:(id)view;	// 0x31d22315
- (void)didRotateInteractionSheet;	// 0x31e30191
- (void)didZoom;	// 0x31e3377d
- (void)disableClearsOnInsertion;	// 0x31d3f301
// converted property getter: - (CGRect)documentBounds;	// 0x31c8b841
// converted property getter: - (int)documentType;	// 0x31c8b82d
// converted property getter: - (CGRect)doubleTapRect;	// 0x31e3052d
- (BOOL)doubleTapRectIsReplaced;	// 0x31e30551
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x31e346ad
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x31e3c49d
- (unsigned)effectiveDataDetectorTypes;	// 0x31d3ddc9
- (void)enableReachability;	// 0x31c88fb5
- (id)enclosingScrollView;	// 0x31e34569
// declared property getter: - (id)endOfDocument;	// 0x31cf19d9
- (void)endPrintMode;	// 0x31e3c0dd
- (void)endSelectionChange;	// 0x31cc3e15
- (void)ensureSelection;	// 0x31d3e5e5
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x31e31ea5
- (void)extendCurrentSelection:(int)selection;	// 0x31e32081
- (void)fileUploadPanelDidDismiss:(id)fileUploadPanel;	// 0x31e2e855
- (CGRect)firstRectForRange:(id)range;	// 0x31d42ce5
- (id)fontForCaretSelection;	// 0x31d44365
- (void)forceLayout;	// 0x31e2e8c1
- (id)formElement;	// 0x31cf1419
- (void)forwardInvocation:(id)invocation;	// 0x31c896b1
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x31e2f131
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x31e3136d
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x31d47a41
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x31d47901
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x31d46a91
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x31d47975
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x31d475d5
- (int)getPasteboardChangeCount;	// 0x31e2f45d
- (int)getPasteboardItemsCount;	// 0x31e2f0fd
- (void)handleKeyWebEvent:(id)event;	// 0x31e32621
- (BOOL)hasContent;	// 0x31c5c3a9
- (BOOL)hasDrawnTiles;	// 0x31c8c535
- (BOOL)hasEditableSelection;	// 0x31cea401
- (BOOL)hasMarkedText;	// 0x31ead1fd
- (BOOL)hasPlugInSubviews;	// 0x31e327f5
- (BOOL)hasRangedSelection;	// 0x31e30d49
- (BOOL)hasRichlyEditableSelection;	// 0x31cf8ff1
- (BOOL)hasSelection;	// 0x31c59919
- (BOOL)hasSimpleTextOnlyStructure;	// 0x31e33f1d
- (BOOL)hasText;	// 0x31d368a9
- (void)hideTapHighlight;	// 0x31e397b5
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x31e397f9
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x31d47d35
- (id)hostViewForSheet:(id)sheet;	// 0x31e3b3cd
- (id)implementationWebView;	// 0x31e32575
- (BOOL)inPopover;	// 0x31e33441
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x31e3b3dd
- (float)initialScale;	// 0x31c8a3d9
// declared property getter: - (id)inputDelegate;	// 0x31cbb6d5
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x31e30a91
- (id)insertDictationResultPlaceholder;	// 0x31e30dd1
- (void)insertText:(id)text;	// 0x31d3500d
- (void)installGestureRecognizers;	// 0x31c584d1
- (float)integralScaleForScale:(float)scale;	// 0x31c8a83d
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x31c8a855
// declared property getter: - (id)interactionAssistant;	// 0x31d052dd
// converted property getter: - (id)interactionDelegate;	// 0x31e39e55
- (id)interactionElement;	// 0x31e39e81
- (CGPoint)interactionLocation;	// 0x31e39e95
- (BOOL)isCaretInEmptyParagraph;	// 0x31cf90d1
- (BOOL)isClassicViewportMode;	// 0x31e2e375
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x31e302b5
- (BOOL)isEditable;	// 0x31d3cde5
- (BOOL)isEditing;	// 0x31d09b51
- (BOOL)isEditingSingleLineElement;	// 0x31e309f9
- (BOOL)isInInteraction;	// 0x31d80f79
- (BOOL)isInPrintMode;	// 0x31e3b62d
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x31d96299
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x31cf193d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x31cf1975
- (BOOL)isShowingFullScreenPlugInUI;	// 0x31c915f1
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x31e30589
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x31e2f491
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x31e30605
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x31d3e8a1
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x31d9a1f9
- (BOOL)keyboardInputChanged:(id)changed;	// 0x31d097dd
- (void)keyboardInputChangedSelection:(id)selection;	// 0x31d05371
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x31e3257d
- (void)layoutSubviews;	// 0x31c5c45d
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x31e2dde1
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x31d3cd2d
- (void)loadRequest:(id)request;	// 0x31d2003d
// converted property getter: - (BOOL)loadsSynchronously;	// 0x31e2df15
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x31e33421
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x31e33411
- (BOOL)makeWKFirstResponder;	// 0x31d05585
// converted property getter: - (id)markedText;	// 0x31d356d1
// declared property getter: - (id)markedTextRange;	// 0x31c5acdd
// declared property getter: - (id)markedTextStyle;	// 0x31e3428d
- (float)maximumDoubleTapScale;	// 0x31e33885
- (float)maximumScale;	// 0x31e2e189
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x31d20c3d
- (id)metadataDictionariesForDictationResults;	// 0x31d035f5
- (id)methodSignatureForSelector:(SEL)selector;	// 0x31c89661
- (float)minimumScale;	// 0x31c8a315
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x31e2dfb5
- (float)minimumScaleForSize:(CGSize)size;	// 0x31e345dd
- (BOOL)mouseEventsChangeSelection;	// 0x31e3c6c9
- (void)moveBackward:(unsigned)backward;	// 0x31e32161
- (void)moveForward:(unsigned)forward;	// 0x31e321cd
- (BOOL)needsScrollNotifications;	// 0x31e2e389
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x31e2e9b1
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x31e31df5
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x31d096d9
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x31ead30d
- (void)paste:(id)paste;	// 0x31e330fd
- (void)performClick:(id)click;	// 0x31e38f99
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x31e38859
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x31e2f181
- (BOOL)playsNicelyWithGestures;	// 0x31d3cf41
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x31eae7e1
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x31e34201
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x31d05fad
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x31cce8e9
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x31e343f1
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x31e3b459
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x31e31d8d
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x31e3204d
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x31e32019
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x31cce715
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x31e33ff9
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x31e34821
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x31e2f38d
- (CGRect)rectContainingCaretSelection;	// 0x31e31ce5
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x31e31a9d
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x31e345ed
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x31e31b31
- (void)redrawScaledDocument;	// 0x31e2fe51
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x31e31435
- (void)replace:(id)replace;	// 0x31e33305
- (void)replaceCurrentWordWithText:(id)text;	// 0x31e3183d
- (void)replaceRange:(id)range withText:(id)text;	// 0x31e340dd
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x31e31769
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x31d9a461
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x31e31f2d
- (BOOL)requiresKeyEvents;	// 0x31cdb76d
- (void)resetInteraction;	// 0x31d2ba99
- (void)resetTilingAfterLoadComplete;	// 0x31c8ef75
- (BOOL)resignFirstResponder;	// 0x31cbbde1
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x31cc3ddd
- (void)saveStateToCurrentHistoryItem;	// 0x31c8f15d
- (id)scriptingInfoWithChildren;	// 0x31d1eed1
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x31eae56d
- (void)scrollViewWasRemoved;	// 0x31d2ee05
- (void)select:(id)select;	// 0x31e33269
- (void)selectAll;	// 0x31e32239
- (void)selectAll:(id)all;	// 0x31e332b5
- (void)selectWord;	// 0x31ead155
- (id)selectedDOMRange;	// 0x31cc3901
// declared property getter: - (id)selectedTextRange;	// 0x31cc38a9
// declared property getter: - (int)selectionAffinity;	// 0x31cc3935
- (BOOL)selectionAtDocumentStart;	// 0x31e32101
- (BOOL)selectionAtWordStart;	// 0x31e32131
- (int)selectionBaseWritingDirection;	// 0x31d041c9
- (void)selectionChanged;	// 0x31cc2bad
- (void)selectionChanged:(id)changed;	// 0x31cc2aad
// declared property getter: - (int)selectionGranularity;	// 0x31e344f1
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x31eadbf1
- (NSRange)selectionRange;	// 0x31d9a1b9
- (id)selectionRects;	// 0x31ead909
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x31cf23f9
- (id)selectionRectsForRange:(id)range;	// 0x31d96069
// declared property getter: - (int)selectionState;	// 0x31cf9131
- (id)selectionView;	// 0x31e3284d
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x31d20985
- (void)sendScrollEventIfNecessary;	// 0x31e2e39d
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x31d2c001
- (void)sendScrollWheelEvents;	// 0x31e39bed
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x31d80909
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x31c8b0a9
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x31e39e69
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x31c59779
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x31c89df5
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x31eadc51
- (void)setBaseWritingDirection:(int)direction;	// 0x31ead4a9
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x31d06031
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x31e33551
- (void)setBottomBufferHeight:(float)height;	// 0x31e325f1
- (void)setCaretChangeListener:(id)listener;	// 0x31e32531
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x31c5bea9
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x31ccd639
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x31c89d15
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x31c8afe9
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x31e2df2d
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x31e30271
- (void)setDrawsBackground:(BOOL)background;	// 0x31c59efd
- (void)setFrame:(CGRect)frame;	// 0x31c58129
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x31c59bf1
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x31d3d969
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x31e2e6fd
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x31c596c5
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x31ccc875
- (void)setInteractionAssistantGestureRecognizers;	// 0x31e306f5
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x31c8aff9
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x31d314c1
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x31e305ed
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x31c59c89
// converted property setter: - (void)setMarkedText:(id)text;	// 0x31d9a559
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x31e31905
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x31e34291
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x31c5973d
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x31e30225
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x31c59701
- (void)setMinimumSize:(CGSize)size;	// 0x31c5951d
- (void)setMinimumSize:(CGSize)size updateCurrentViewportConfigurationSize:(BOOL)size2;	// 0x31e2e719
- (void)setOpaque:(BOOL)opaque;	// 0x31c59eb9
- (void)setPaused:(BOOL)paused;	// 0x31e3265d
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x31c91609
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x31e34831
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x31ead4dd
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x31ead53d
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x31ead50d
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x31ead5fd
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x31ead69d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x31ead5cd
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x31ead59d
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x31eadac5
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x31ead851
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x31d05aa9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x31d059dd
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31e33f59
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x31e344ed
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x31cf1d41
- (void)setSelectionToEnd;	// 0x31eadb49
- (void)setSelectionToStart;	// 0x31eadb9d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x31ead739
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x31eae571
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x31d3d985
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x31e301f9
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x31e2e2e5
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x31c8b011
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x31e3059d
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x31d3dc39
// converted property setter: - (void)setText:(id)text;	// 0x31e3228d
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x31c8c5b5
- (void)setTilingArea:(int)area;	// 0x31c8b321
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x31e2d99d
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x31e2e895
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x31e2df99
- (void)setUserStyleSheet:(id)sheet;	// 0x31d957d5
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x31c597b1
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x31e2e361
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x31e30211
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x31e34731
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x31e2e34d
- (void)smartExtendRangedSelection:(int)selection;	// 0x31eada91
// converted property getter: - (id)standaloneEditingElement;	// 0x31e305dd
- (BOOL)startActionSheet;	// 0x31e389c1
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x31eadd75
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x31e388bd
- (void)stopLoading:(id)loading;	// 0x31d3dbd9
- (id)subviews;	// 0x31c599e1
- (id)superviewForSheet;	// 0x31e39eb1
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x31cea825
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x31e39d55
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x31e34841
- (void)takeTraitsFrom:(id)from;	// 0x31e32821
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x31e38919
// converted property getter: - (id)text;	// 0x31e323b9
- (id)textColorForCaretSelection;	// 0x31e31a61
- (id)textFormElement;	// 0x31e30585
- (id)textInDOMRange:(id)domrange;	// 0x31ead8d5
- (id)textInRange:(id)range;	// 0x31cceaa5
- (id)textInputTraits;	// 0x31c59049
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x31ccea01
- (void)toggleBaseWritingDirection;	// 0x31ead455
- (void)toggleBoldface:(id)boldface;	// 0x31e32add
- (void)toggleItalics:(id)italics;	// 0x31e32b29
- (void)toggleUnderline:(id)underline;	// 0x31e32b75
// declared property getter: - (id)tokenizer;	// 0x31c5acb1
// converted property getter: - (id)typingAttributes;	// 0x31e2d869
// converted property getter: - (id)undoManager;	// 0x31cbb721
- (id)undoManagerForWebView:(id)webView;	// 0x31cbb745
- (void)unmarkText;	// 0x31d35819
- (void)updateInteractionElements;	// 0x31e30099
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x31e30619
- (void)updateSelection;	// 0x31e32895
// converted property getter: - (BOOL)updatesScrollView;	// 0x31e2e8ad
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x31c89155
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x31e38969
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x31c89fa1
- (float)viewportHeight;	// 0x31c8aef1
- (float)viewportWidth;	// 0x31c8a4ad
- (CGRect)visibleBounds;	// 0x31eae621
- (CGRect)visibleContentFrame;	// 0x31e334dd
- (CGRect)visibleContentRect;	// 0x31e3459d
- (CGRect)visibleFrame;	// 0x31e334b9
// converted property getter: - (id)webSelectionAssistant;	// 0x31e33431
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x31c59865
// converted property getter: - (id)webView;	// 0x31c597f9
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x31e2e6a9
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x31c8ce59
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x31e2f809
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x31e2e5e5
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x31c8ec1d
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x31c5980d
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x31e32779
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x31e396cd
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x31d207c9
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x31c8c759
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x31d2c0b1
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x31d209f1
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x31c8dfe9
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x31e2e535
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x31d20555
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x31cc3a91
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x31d2136d
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x31e2f9e5
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x31e32725
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x31c5c541
- (void)webViewDidDrawTiles:(id)webView;	// 0x31c5c841
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x31e2e4f5
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x31e396f5
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x31e2e5cd
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x31e2e4b5
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x31c57a51
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x31cf1319
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x31e38aa5
- (void)willMoveToSuperview:(id)superview;	// 0x31c59f61
- (void)willRotateInteractionSheet;	// 0x31e3012d
- (void)willStartScroll;	// 0x31e33559
- (void)willStartScrollToTop;	// 0x31e335dd
- (void)willStartZoom;	// 0x31e33711
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x31e347d1
- (void)willZoomToMinimumScale;	// 0x31e34721
- (id)wordAtPoint:(CGPoint)point;	// 0x31ead7f1
- (id)wordContainingCaretSelection;	// 0x31e31e5d
- (int)wordOffsetInRange:(id)range;	// 0x31e31ef9
- (id)wordRangeContainingCaretSelection;	// 0x31e31d5d
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x31e2f005
- (float)zoomedDocumentScale;	// 0x31e3457d
@end

