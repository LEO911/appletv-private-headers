/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <DOMNode.h> // Unknown library
#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"

@class UIResponder, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x31e10b21
- (id)createPickerCell;	// 0x31e10b29
- (id)createSelectedItem;	// 0x31e10b25
- (id)itemTitle;	// 0x31e10b31
- (void)populateCell:(id)cell;	// 0x31e10b2d
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x31e280b9
- (id)urlScheme;	// 0x31e28111
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x31e35171
- (BOOL)isSecure;	// 0x31e35281
- (BOOL)isTextControl;	// 0x31e3527d
- (int)keyboardType;	// 0x31e35285
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x31e36ebd; S=0x31e36ec1; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x31e370e9; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x31e36899; S=0x31e3689d; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x31e37121; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x31e368b1; S=0x31e368b5; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x31e37bd1; S=0x31e37c29; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x31e36e0d; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x31e35b11; S=0x31e357a5; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x31e377dd; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x31e37d69; S=0x31e37d6d; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x31e368a9; S=0x31e368ad; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x31e36f1d; S=0x31e37075; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x31e38175; S=0x31e381cd; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x31e365dd; S=0x31e36549; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x31e368a1; S=0x31e368a5; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x31e36891; S=0x31e36895; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x31e354f9; S=0x31e354fd; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x31e37bcd; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x31e374ed
- (NSRange)_markedTextNSRange;	// 0x31e3608d
- (id)_textSelectingContainer;	// 0x31e36ec5
- (void)acceptedAutoFillWord:(id)word;	// 0x31e36d59
- (id)automaticallySelectedOverlay;	// 0x31e368b9
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x31e37f81
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x31e36ebd
- (void)beginSelectionChange;	// 0x31e35499
// declared property getter: - (id)beginningOfDocument;	// 0x31e370e9
- (CGRect)caretRect;	// 0x31e366ed
- (CGRect)caretRectForPosition:(id)position;	// 0x31e37c85
- (unsigned short)characterAfterCaretSelection;	// 0x31e35d35
- (unsigned short)characterBeforeCaretSelection;	// 0x31e35765
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x31e35721
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x31e37e31
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x31e37f15
- (id)closestPositionToPoint:(CGPoint)point;	// 0x31e37d71
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x31e37dd1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x31e378f5
- (void)confirmMarkedText:(id)text;	// 0x31e35911
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x31e36d29
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x31e36449
- (id)content;	// 0x31e36eb1
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x31e36899
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x31e36801
- (id)delegate;	// 0x31e3544d
- (void)deleteBackward;	// 0x31e35501
- (BOOL)editable;	// 0x31e3816d
- (BOOL)editing;	// 0x31e38171
// declared property getter: - (id)endOfDocument;	// 0x31e37121
- (void)endSelectionChange;	// 0x31e354c9
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x31e35ff1
- (void)extendCurrentSelection:(int)selection;	// 0x31e36261
- (CGRect)firstRectForRange:(id)range;	// 0x31e373d5
- (id)fontForCaretSelection;	// 0x31e35d79
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x31e356dd
- (void)handleKeyWebEvent:(id)event;	// 0x31e35455
- (BOOL)hasContent;	// 0x31e352b5
- (BOOL)hasSelection;	// 0x31e362f1
- (BOOL)hasText;	// 0x31e378dd
// converted property getter: - (int)initialSelectionBehavior;	// 0x31e368b1
// declared property getter: - (id)inputDelegate;	// 0x31e37bd1
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x31e3562d
- (id)insertDictationResultPlaceholder;	// 0x31e35685
- (void)insertText:(id)text;	// 0x31e35575
// declared property getter: - (id)interactionAssistant;	// 0x31e36e0d
- (BOOL)isAutoFillMode;	// 0x31e36db5
- (BOOL)isEditable;	// 0x31e36eb5
- (BOOL)isEditing;	// 0x31e36eb9
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x31e37a39
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x31e37aed
- (BOOL)isShowingPlaceholder;	// 0x31e3688d
// converted property getter: - (id)markedText;	// 0x31e35b11
// declared property getter: - (id)markedTextRange;	// 0x31e377dd
// declared property getter: - (id)markedTextStyle;	// 0x31e37d69
- (id)metadataDictionariesForDictationResults;	// 0x31e3565d
- (void)moveBackward:(unsigned)backward;	// 0x31e363a1
- (void)moveDown;	// 0x31e37769
- (void)moveForward:(unsigned)forward;	// 0x31e363a5
- (void)moveLeft;	// 0x31e37681
- (void)moveRight;	// 0x31e3760d
- (void)moveUp;	// 0x31e376f5
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x31e35f2d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x31e37931
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x31e379d9
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x31e3796d
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x31e37a81
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x31e37ead
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x31e35f01
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x31e36225
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x31e361e9
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x31e37b35
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x31e37245
- (CGRect)rectContainingCaretSelection;	// 0x31e35e7d
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x31e35a01
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x31e35aad
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x31e356ad
- (void)replaceCurrentWordWithText:(id)text;	// 0x31e35c65
- (void)replaceRange:(id)range withText:(id)text;	// 0x31e3738d
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x31e37291
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x31e35b81
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x31e373b1
- (BOOL)requiresKeyEvents;	// 0x31e35451
// declared property getter: - (int)returnKeyType;	// 0x31e368a9
- (void)selectAll;	// 0x31e363a9
- (id)selectedDOMRange;	// 0x31e36139
// declared property getter: - (id)selectedTextRange;	// 0x31e36f1d
// declared property getter: - (int)selectionAffinity;	// 0x31e38175
- (BOOL)selectionAtDocumentStart;	// 0x31e36331
- (BOOL)selectionAtWordStart;	// 0x31e36369
- (NSRange)selectionRange;	// 0x31e360ed
- (id)selectionRectsForRange:(id)range;	// 0x31e37f89
- (int)selectionState;	// 0x31e36409
- (id)selectionView;	// 0x31e36e85
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x31e37f85
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x31e36ec1
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x31e3689d
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x31e368b5
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x31e37c29
// converted property setter: - (void)setMarkedText:(id)text;	// 0x31e357a5
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x31e35855
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x31e37d6d
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x31e368ad
- (void)setSecure:(BOOL)secure;	// 0x31e35449
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x31e36171
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x31e37075
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31e36f8d
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x31e381cd
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x31e366c9
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x31e3662d
// converted property setter: - (void)setText:(id)text;	// 0x31e36549
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x31e368a5
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x31e36895
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x31e354fd
- (void)setupPlaceholderTextIfNeeded;	// 0x31e352f5
- (void)takeTraitsFrom:(id)from;	// 0x31e35289
// converted property getter: - (id)text;	// 0x31e365dd
- (id)textColorForCaretSelection;	// 0x31e35e61
- (id)textDocument;	// 0x31e381d1
- (id)textInRange:(id)range;	// 0x31e37159
- (id)textInputTraits;	// 0x31e352f9
// declared property getter: - (int)textLoupeVisibility;	// 0x31e368a1
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x31e371ad
// declared property getter: - (id)textSuggestionDelegate;	// 0x31e36891
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x31e354f9
// declared property getter: - (id)tokenizer;	// 0x31e37bcd
- (id)uiWebDocumentView;	// 0x31e355e5
- (void)unmarkText;	// 0x31e37859
- (void)updateAutoscroll:(id)autoscroll;	// 0x31e36901
- (void)updateSelection;	// 0x31e36ead
- (id)wordContainingCaretSelection;	// 0x31e35f99
- (int)wordOffsetInRange:(id)range;	// 0x31e36051
- (id)wordRangeContainingCaretSelection;	// 0x31e35f59
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x31e991b9
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x31e99379
- (BOOL)alwaysAttemptToShowTapHighlight;	// 0x31e9931d
- (BOOL)isLikelyToBeginPageLoad;	// 0x31e99389
- (BOOL)nodeCanBecomeFirstResponder;	// 0x31e9938d
- (BOOL)showsTapHighlight;	// 0x31e99319
- (id)tapHighlightColor;	// 0x31e99335
- (BOOL)touchCalloutEnabled;	// 0x31e99375
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x31ec8d21
- (id)asDomRange;	// 0x31ec8d25
- (id)asElement;	// 0x31ec8a05
- (CGRect)boundingRect;	// 0x31ec904d
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x31ec90ad
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x31ec9035
- (BOOL)containsBlock:(id)block;	// 0x31ec8b71
- (BOOL)containsNode:(id)node;	// 0x31ec8971
- (BOOL)containsRange:(id)range;	// 0x31ec8e05
- (id)enclosingDocument;	// 0x31ec911d
- (id)enclosingElementIncludingSelf;	// 0x31ec8a29
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x31ec9329
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x31ec912d
- (BOOL)hasCustomLineHeight;	// 0x31ec8ae5
- (BOOL)isSameBlock:(id)block;	// 0x31ec8b21
- (id)largerParent;	// 0x31ec8c29
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x31ec93c9
- (id)parentBlock;	// 0x31ec8a89
- (id)rangeOfContents;	// 0x31ec8f0d
- (BOOL)rendersAsBlock;	// 0x31ec8d09
- (BOOL)selectable;	// 0x31ec8a99
- (BOOL)strictlyContainsBlock:(id)block;	// 0x31ec8be1
- (BOOL)strictlyContainsNode:(id)node;	// 0x31ec89c1
- (id)webFrame;	// 0x31ec8a61
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x31eda515; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
- (unsigned long)_characterAfterCaretSelection;	// 0x31eda659
- (unsigned long)_characterBeforeCaretSelection;	// 0x31eda66d
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x31eda681
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x31eda6f9
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x31edb7f9
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x31edb369
- (void)_deleteByWord;	// 0x31edb005
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x31edb391
- (void)_deleteToEndOfLine;	// 0x31edb20d
- (void)_deleteToStartOfLine;	// 0x31edb0b1
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x31edadf9
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x31edae0d
- (void)_extendCurrentSelection:(int)selection;	// 0x31edac45
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x31edb6b1
- (id)_fontForCaretSelection;	// 0x31edb91d
- (id)_fullRange;	// 0x31edb659
- (id)_fullText;	// 0x31eda961
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x31edabdd
- (int)_indexForTextPosition:(id)textPosition;	// 0x31eda585
- (BOOL)_isEmptySelection;	// 0x31edab69
- (id)_keyInput;	// 0x31eda525
- (void)_moveCurrentSelection:(int)selection;	// 0x31edad15
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x31edcca1
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x31edce95
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x31edcf91
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x31edc995
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x31edc379
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x31edc6ed
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x31edc08d
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x31edc8d9
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x31edc1f1
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x31edc501
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x31edbe19
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x31edcaad
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x31edd609
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x31eda5c9
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x31edd6f9
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31edd091
// declared property getter: - (id)_proxyTextInput;	// 0x31eda515
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x31edb565
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x31edb5d1
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x31edb615
- (void)_replaceCurrentWordWithText:(id)text;	// 0x31edb4ed
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x31edb561
- (id)_selectableText;	// 0x31eddc51
- (int)_selectionAffinity;	// 0x31edd135
- (NSRange)_selectionAsNSRange;	// 0x31eda529
- (BOOL)_selectionAtDocumentEnd;	// 0x31edaad5
- (BOOL)_selectionAtDocumentStart;	// 0x31edaa65
- (BOOL)_selectionAtWordStart;	// 0x31eda9cd
- (CGRect)_selectionClipRect;	// 0x31edab45
- (void)_setCaretSelectionAtEndOfSelection;	// 0x31edaf7d
- (void)_setGestureRecognizers;	// 0x31edd22d
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31edbc61
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x31edd475
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31edd0c1
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x31edba0d
- (id)_textColorForCaretSelection;	// 0x31edb85d
- (void)_unmarkText;	// 0x31edd5b1
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31edb9dd
- (id)_wordContainingCaretSelection;	// 0x31eda8c9
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x31edde39
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x31f1575d
- (id)_nextAssistedNode;	// 0x31f15761
- (id)_previousAssistedNode;	// 0x31f157a5
- (BOOL)_requiresAccessoryView;	// 0x31f15725
- (BOOL)_requiresInputView;	// 0x31f1573d
- (void)_startAssistingDocumentView:(id)view;	// 0x31f15699
- (void)_stopAssistingDocumentView:(id)view;	// 0x31f156cd
- (BOOL)_supportsAccessoryClear;	// 0x31f15759
- (BOOL)_supportsAutoFill;	// 0x31f15755
- (id)_textFormElement;	// 0x31f157e9
@end

