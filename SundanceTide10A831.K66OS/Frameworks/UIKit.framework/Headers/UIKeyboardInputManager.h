/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x31e841b5; S=0x31e841ad; converted property
@property(assign) unsigned phraseBoundary;	// G=0x31e841e5; S=0x31e841e1; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x31e841f1; S=0x31cd97e1; converted property
+ (id)activeInstance;	// 0x31cdaa25
+ (void)clearAllCentroids;	// 0x31cda9f1
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x31e8440d
+ (id)keyboardUserDirectory;	// 0x31e8438d
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x31cdab3d
+ (void)releaseSharedInstance;	// 0x31c5ecbd
+ (void)removeAllDynamicDictionaries;	// 0x31e8452d
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x31e8449d
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x31cc8ed5
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x31e843d9
- (void)acceptInput;	// 0x31e8419d
- (BOOL)acceptInputString:(id)string;	// 0x31cfd2e1
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x31e841c9
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x31e84275
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x31d34f65
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x31e84181
- (id)addInputObject:(id)object;	// 0x31e84685
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x31e84265
- (void)appendToInputContext:(id)inputContext;	// 0x31e841a1
- (id)autocorrection;	// 0x31e841d1
- (BOOL)canHandleKeyHitTest;	// 0x31e8471d
- (void)candidateRejected:(id)rejected;	// 0x31e8437d
- (id)candidates;	// 0x31e841d9
- (id)candidatesForString:(id)string;	// 0x31e841d5
- (CFArrayRef)chargeableKeys;	// 0x31e8467d
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x31e84681
- (void)clearAllCentroids;	// 0x31e84735
- (void)clearDynamicDictionary;	// 0x31e84389
- (void)clearInput;	// 0x31e84199
- (void)clearInputContext;	// 0x31e841a9
- (void)clearKeyAreas;	// 0x31e84721
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x31e84291
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x31ccb8ed
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x31e84295
- (id)defaultCandidate;	// 0x31e841f9
- (unsigned)defaultCandidateIndex;	// 0x31e841fd
- (id)deleteFromInput:(unsigned *)input;	// 0x31e84191
- (void)deleteFromStrokeHistory;	// 0x31e8472d
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x31e84269
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x31e8426d
- (BOOL)ignoresDeadKeys;	// 0x31e8436d
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x31e84271
- (unsigned)inputCount;	// 0x31e841b9
- (BOOL)inputEmpty;	// 0x31e841bd
// converted property getter: - (unsigned)inputIndex;	// 0x31e841b5
- (void)inputLocationChanged;	// 0x31e841c5
- (id)inputString;	// 0x31e841c1
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x31e84729
- (void)lastAcceptedCandidateCorrected;	// 0x31e84381
- (unsigned)maximumShortcutLengthAllowed;	// 0x31e84741
- (BOOL)nextInputWouldStartSentence;	// 0x31e84251
// converted property getter: - (unsigned)phraseBoundary;	// 0x31e841e5
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x31e84731
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x31e84725
- (id)remainingInput;	// 0x31e841dd
- (id)remapKeyWithString:(id)string stringWithoutModifiers:(id)modifiers modifierFlags:(unsigned)flags;	// 0x31d003a9
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x31e841a5
- (id)searchStringForMarkedText;	// 0x31e84205
- (void)setAutoCorrects:(BOOL)corrects;	// 0x31e8427d
- (void)setAutocapitalizationType:(int)type;	// 0x31e84281
- (void)setAutocorrectionHistory:(id)history;	// 0x31e84385
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x31e84679
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x31e84289
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x31e8428d
- (void)setInput:(id)input;	// 0x31e8418d
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x31e841ad
- (id)setInputObject:(id)object;	// 0x31e846d1
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x31e84285
- (void)setLearnsCorrection:(BOOL)correction;	// 0x31e84369
- (void)setOriginalInput:(id)input;	// 0x31e84371
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x31e841e1
- (void)setTypologyRecorder:(id)recorder;	// 0x31e84739
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x31cd97e1
- (id)shadowTyping;	// 0x31e84675
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x31e84745
- (BOOL)shouldAcceptCandidate:(id)candidate;	// 0x31e84379
- (BOOL)shouldExtendPriorWord;	// 0x31cf1105
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x31e84255
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x31e84259
- (id)sortingMethods;	// 0x31e8425d
- (BOOL)stringEndsWord:(id)word;	// 0x31d025a9
- (id)stringForDoubleKey:(id)doubleKey;	// 0x31e84219
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x31e841cd
- (BOOL)suppliesCompletions;	// 0x31e84211
- (BOOL)supportsNumberKeySelection;	// 0x31e84279
- (BOOL)supportsSetPhraseBoundary;	// 0x31e841ed
- (BOOL)supportsShortcutConversion;	// 0x31e8473d
- (BOOL)suppressCompletionsForFieldEditor;	// 0x31e84215
- (BOOL)suppressesCandidateDisplay;	// 0x31d02625
- (void)textAccepted:(id)accepted;	// 0x31e84375
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x31e84261
- (BOOL)usesAutoDeleteWord;	// 0x31e841f5
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x31e841f1
- (unsigned)wordHistoryDepth;	// 0x31e841b1
@end

