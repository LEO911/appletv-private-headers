/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardLayout.h"

@class UIKBBackgroundView, UIDelayedAction, NSMutableDictionary, UIKBTree, NSMutableSet, NSTimer, CADisplayLink, UISwipeGestureRecognizer, UIKBKeyplaneView, NSString;
@protocol UIKeyboardRivenTransitionView;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout {
	UIKBTree *_keyboard;	// 104 = 0x68
	UIKBTree *_keyplane;	// 108 = 0x6c
	NSString *_keyboardName;	// 112 = 0x70
	NSString *_keyplaneName;	// 116 = 0x74
	int _appearance;	// 120 = 0x78
	UIKBTree *_activeKey;	// 124 = 0x7c
	UIKBKeyplaneView *_keyplaneView;	// 128 = 0x80
	UIKBBackgroundView *_backgroundView;	// 132 = 0x84
	int _keyboardType;	// 136 = 0x88
	CGPoint _initialDragPoint;	// 140 = 0x8c
	CGPoint _dragPrevPoint;	// 148 = 0x94
	float _dragValues[4];	// 156 = 0x9c
	float _dragVelocity;	// 172 = 0xac
	double _prevTouchUpTime;	// 176 = 0xb0
	double _prevTouchDownTime;	// 184 = 0xb8
	int _prevUpActions;	// 192 = 0xc0
	NSMutableDictionary *_keyboards;	// 196 = 0xc4
	NSMutableDictionary *_allKeyplaneViews;	// 200 = 0xc8
	NSMutableSet *_allKeyplaneKeycaps;	// 204 = 0xcc
	NSMutableSet *_validInputStrings;	// 208 = 0xd0
	NSString *_localizedInputKey;	// 212 = 0xd4
	CFDictionaryRef _extendedTouchInfoMap;	// 216 = 0xd8
	int _preferredTrackingChangeCount;	// 220 = 0xdc
	int _shiftTrackingChangeCount;	// 224 = 0xe0
	NSMutableSet *_accentInfo;	// 228 = 0xe4
	NSMutableSet *_hasAccents;	// 232 = 0xe8
	NSMutableDictionary *_delegatesForKeyplaneKeys;	// 236 = 0xec
	id _spaceTarget;	// 240 = 0xf0
	SEL _spaceAction;	// 244 = 0xf4
	SEL _spaceLongAction;	// 248 = 0xf8
	id _returnTarget;	// 252 = 0xfc
	SEL _returnAction;	// 256 = 0x100
	SEL _returnLongAction;	// 260 = 0x104
	id _deleteTarget;	// 264 = 0x108
	SEL _deleteAction;	// 268 = 0x10c
	SEL _deleteLongAction;	// 272 = 0x110
	BOOL _secureTextEntry;	// 276 = 0x114
	BOOL _shift;	// 277 = 0x115
	BOOL _autoshift;	// 278 = 0x116
	BOOL _settingShift;	// 279 = 0x117
	BOOL _didLongPress;	// 280 = 0x118
	BOOL _dragged;	// 281 = 0x119
	BOOL _dragChangedKey;	// 282 = 0x11a
	BOOL _touchDownInMoreKey;	// 283 = 0x11b
	BOOL _touchDownInShiftKey;	// 284 = 0x11c
	BOOL _touchDownInDeleteKey;	// 285 = 0x11d
	BOOL _wasShifted;	// 286 = 0x11e
	BOOL _dragDismissStarted;	// 287 = 0x11f
	BOOL _swipeDetected;	// 288 = 0x120
	BOOL _previousTouchInMore;	// 289 = 0x121
	BOOL _showIntlKey;	// 290 = 0x122
	BOOL _showDictationKey;	// 291 = 0x123
	BOOL _shiftLockReady;	// 292 = 0x124
	double _shiftLockFirstTapTime;	// 296 = 0x128
	UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 304 = 0x130
	UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 308 = 0x134
	UISwipeGestureRecognizer *_upSwipeRecognizer;	// 312 = 0x138
	UIView<UIKeyboardRivenTransitionView> *_transitionView;	// 316 = 0x13c
	float _initialSplitProgress;	// 320 = 0x140
	float _finalSplitProgress;	// 324 = 0x144
	float _initialPinchSeparation;	// 328 = 0x148
	float _pinchSeparationValues[4];	// 332 = 0x14c
	BOOL _pinchDetected;	// 348 = 0x15c
	double _autoSplitLastUpdate;	// 352 = 0x160
	float _autoSplitElapsedTime;	// 360 = 0x168
	CADisplayLink *_displayLink;	// 364 = 0x16c
	BOOL _ghostKeysEnabled;	// 368 = 0x170
	UIDelayedAction *_delayedCentroidUpdate;	// 372 = 0x174
	BOOL _isRebuilding;	// 376 = 0x178
	BOOL _preRotateShift;	// 377 = 0x179
	NSString *_preRotateKeyplaneName;	// 380 = 0x17c
	CGPoint _keyPeripheralInset;	// 384 = 0x180
	int _lastFlickDirection;	// 392 = 0x188
	UIView *_flickPopupView;	// 396 = 0x18c
	NSMutableDictionary *_compositeImages;	// 400 = 0x190
	NSTimer *_flickPopuptimer;	// 404 = 0x194
	id _touchInfo;	// 408 = 0x198
	BOOL _popupViewIsShown;	// 412 = 0x19c
	UIView *_dimKeyboardImageView;	// 416 = 0x1a0
	BOOL _keyboardImageViewIsDim;	// 420 = 0x1a4
	BOOL _isOutOfBounds;	// 421 = 0x1a5
}
@property(retain, nonatomic) UIKBTree *activeKey;	// G=0x31d38779; S=0x31cd1d99; @synthesize=_activeKey
@property(assign, nonatomic) BOOL autoShift;	// G=0x31e97251; S=0x31e97261; @synthesize=_autoshift
@property(assign, nonatomic) BOOL didLongPress;	// G=0x31e97271; S=0x31e97281; @synthesize=_didLongPress
@property(readonly, assign, nonatomic) UIKBTree *keyboard;	// G=0x31d96519; @synthesize=_keyboard
@property(copy, nonatomic) NSString *keyboardName;	// G=0x31e97219; S=0x31e9722d; @synthesize=_keyboardName
@property(readonly, assign, nonatomic) UIKBTree *keyplane;	// G=0x31cd0bc1; @synthesize=_keyplane
@property(copy, nonatomic) NSString *keyplaneName;	// G=0x31cd0bd5; S=0x31cd0bed; @synthesize=_keyplaneName
@property(copy, nonatomic) NSString *localizedInputKey;	// G=0x31e972a1; S=0x31cd0bad; @synthesize=_localizedInputKey
@property(readonly, assign, nonatomic) NSString *localizedInputMode;	// G=0x31cd0b61; 
@property(readonly, assign) BOOL pinchDetected;	// G=0x31cdb839; converted property
@property(readonly, assign, nonatomic, getter=isRotating) BOOL rotating;	// G=0x31cd9641; 
@property(assign, nonatomic) BOOL shift;	// G=0x31e97241; S=0x31cdb141; @synthesize=_shift
@property(readonly, assign, nonatomic) BOOL showDictationKey;	// G=0x31cd6af9; @synthesize=_showDictationKey
@property(assign, nonatomic) BOOL showIntlKey;	// G=0x31cd6ae9; S=0x31e97291; @synthesize=_showIntlKey
- (id)initWithFrame:(CGRect)frame;	// 0x31ccf729
- (void)_autoSplit:(id)split;	// 0x31e95531
- (id)_keyplaneVariantsKeyForString:(id)string;	// 0x31e9357d
- (void)activateCompositeKey:(id)key direction:(int)direction flickString:(id)string popupInfo:(id)info;	// 0x31e98905
- (id)activationIndicatorView;	// 0x31e93ead
// declared property getter: - (id)activeKey;	// 0x31d38779
- (id)activeTouchForKey:(id)key;	// 0x31e95f01
- (CGPoint)applyError:(CGPoint)error toKey:(id)key;	// 0x31e96c75
// declared property getter: - (BOOL)autoShift;	// 0x31e97251
- (BOOL)backgroundNeedsRedraw;	// 0x31cdebd1
- (id)baseKeyForString:(id)string;	// 0x31e968f9
- (id)cacheIdentifierForKeyplaneNamed:(id)keyplaneNamed withVisualStyle:(int)visualStyle;	// 0x31cd6a25
- (id)cachedKeyplaneNameForKeyplane:(id)keyplane;	// 0x31cd65ed
- (BOOL)canProduceString:(id)string;	// 0x31e92029
- (BOOL)canReuseKeyplaneView;	// 0x31d09d01
- (void)cancelTouchIfNecessaryForInfo:(id)info;	// 0x31d02ab5
- (id)candidateList;	// 0x31cd1b35
- (void)changeToKeyplane:(id)keyplane;	// 0x31d96559
- (void)clearAllKeyDelegates;	// 0x31cd1dd5
- (void)clearAllTouchInfo;	// 0x31cd2211
- (void)clearHandwritingStrokesIfNeeded;	// 0x31cf9c39
- (void)clearInfoForTouch:(id)touch;	// 0x31d02a69
- (void)clearUnusedObjects:(BOOL)objects;	// 0x31d79b09
- (id)compositeImageForKey:(id)key;	// 0x31e97dad
- (void)confirmAction;	// 0x31e92f81
- (void)deactivateActiveKeys;	// 0x31d038b1
- (void)deactivateActiveKeysClearingTouchInfo:(BOOL)info clearingDimming:(BOOL)dimming;	// 0x31cd1ca5
- (void)dealloc;	// 0x31d7a13d
- (id)defaultNameForKeyplaneName:(id)keyplaneName;	// 0x31cd1dad
- (void)deleteAction;	// 0x31e92b1d
- (void)didClearInput;	// 0x31cf9bf5
// declared property getter: - (BOOL)didLongPress;	// 0x31e97271
- (void)didRotate;	// 0x31e96551
- (int)displayTypeHintForMoreKey;	// 0x31cd531d
- (int)displayTypeHintForShiftKey;	// 0x31cd510d
- (BOOL)doesKeyCharging;	// 0x31cdb531
- (unsigned)downActionFlagsForKey:(id)key;	// 0x31cfcdf5
- (void)downActionShiftWithKey:(id)key;	// 0x31e961e1
- (CGSize)dragGestureSize;	// 0x31e91b3d
- (void)finishSplit;	// 0x31e94dfd
- (void)finishSplitTransition;	// 0x31e95035
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x31e95151
- (id)flickPopupStringForKey:(id)key withString:(id)string;	// 0x31e978cd
- (id)flickStringForInputKey:(id)inputKey direction:(int)direction;	// 0x31e97909
- (void)flushKeyCache:(id)cache;	// 0x31e918e5
- (CGRect)frameForKeyWithRepresentedString:(id)representedString;	// 0x31e973ad
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x31e91cd9
- (CGRect)frameForKeylayoutName:(id)keylayoutName onKeyplaneName:(id)name;	// 0x31e91c71
- (CGRect)frameForLastKeyWithRepresentedString:(id)representedString;	// 0x31e97641
- (id)generateInfoForTouch:(id)touch;	// 0x31cfb8e9
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x31e95c79
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x31e95b69
- (id)getFlickCompositeImageForKey:(id)key direction:(int)direction rect:(CGRect)rect;	// 0x31e98011
- (id)getPopupBackgroundImageForKey:(id)key direction:(int)direction popupInfo:(id)info rect:(CGRect)rect;	// 0x31e97dcd
- (void)handleDismissFlickView:(id)view;	// 0x31d03bc1
- (void)handleFlick:(id)flick;	// 0x31e979b5
- (void)handlePopupView:(id)view;	// 0x31e98751
- (SEL)handlerForNotification:(id)notification;	// 0x31e91a31
- (BOOL)handwritingPlane;	// 0x31cf9cc5
- (BOOL)hasCandidateKeys;	// 0x31e92b81
- (float)hitBuffer;	// 0x31ceb121
- (BOOL)ignoresShiftState;	// 0x31d34f31
- (id)infoForTouch:(id)touch;	// 0x31cfee05
- (void)installGestureRecognizers;	// 0x31ccfac1
- (float)interpretPinchSeparationValues;	// 0x31e94a19
- (void)interpretTouchesForSplit;	// 0x31e95189
- (BOOL)isLongPressedKey:(id)key;	// 0x31cff8c5
// declared property getter: - (BOOL)isRotating;	// 0x31cd9641
- (BOOL)isShiftKeyBeingHeld;	// 0x31cdb0dd
- (BOOL)isShiftKeyPlaneChooser;	// 0x31cd1bb5
- (BOOL)keyHasAccentedVariants:(id)variants;	// 0x31e96015
- (id)keyHitTest:(CGPoint)test;	// 0x31cfbe3d
- (id)keyHitTestClosestToPoint:(CGPoint)point;	// 0x31d346b9
- (id)keyHitTestContainingPoint:(CGPoint)point;	// 0x31cfab99
- (id)keyHitTestForTouchInfo:(id)touchInfo touchStage:(int)stage;	// 0x31cfb9c9
- (id)keyHitTestWithoutCharging:(CGPoint)charging;	// 0x31cfc3d5
- (id)keyWithRepresentedString:(id)representedString;	// 0x31e972b5
// declared property getter: - (id)keyboard;	// 0x31d96519
// declared property getter: - (id)keyboardName;	// 0x31e97219
- (id)keyboardWithName:(id)name;	// 0x31cd0799
- (int)keycodeForKey:(id)key;	// 0x31cfeff5
// declared property getter: - (id)keyplane;	// 0x31cd0bc1
- (id)keyplaneForKey:(id)key;	// 0x31e96c49
// declared property getter: - (id)keyplaneName;	// 0x31cd0bd5
- (id)keyplaneNamed:(id)named;	// 0x31d9652d
- (double)lastTouchUpTimestamp;	// 0x31e92011
// declared property getter: - (id)localizedInputKey;	// 0x31e972a1
// declared property getter: - (id)localizedInputMode;	// 0x31cd0b61
- (void)longPressAction;	// 0x31e92fb9
- (void)nextCandidatesAction;	// 0x31e92f4d
- (id)overlayCharacterImageForKey:(id)key direction:(int)direction rect:(CGRect)rect flickString:(id)string popupInfo:(id)info;	// 0x31e98091
- (BOOL)performReturnAction;	// 0x31e95839
- (BOOL)performSpaceAction;	// 0x31e95875
// converted property getter: - (BOOL)pinchDetected;	// 0x31cdb839
- (BOOL)pinchSplitGestureEnabled;	// 0x31e95171
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x31cfb5d9
- (id)popupKeyViews;	// 0x31e97789
- (void)prepareForSplitTransition;	// 0x31e94b69
- (void)rebuildSplitTransitionView;	// 0x31e925d5
- (void)rebuildSplitTransitionViewFromKeyplane:(id)keyplane toKeyplane:(id)keyplane2;	// 0x31e922c9
- (void)refreshForDictationAvailablityDidChange;	// 0x31cd9f25
- (void)refreshForRivenPreferences;	// 0x31e91dd5
- (void)refreshGhostKeyState;	// 0x31cfee29
- (void)removeFromSuperview;	// 0x31d7a081
- (CGImageRef)renderedImageWithStateFallbacksForToken:(id)token;	// 0x31e925e9
- (CGImageRef)renderedImageWithToken:(id)token;	// 0x31e92701
- (CGImageRef)renderedKeyplaneWithToken:(id)token split:(BOOL)split;	// 0x31e928b1
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x31cd33b5
- (void)restoreDefaultsForAllKeys;	// 0x31cd97e9
- (void)restoreDefaultsForKey:(id)key;	// 0x31cd982d
- (id)scriptingInfoWithChildren;	// 0x31e965ed
- (void)sendStringAction:(id)action forKey:(id)key isPopupVariant:(BOOL)variant;	// 0x31cff6c9
- (void)setAction:(SEL)action forKey:(id)key;	// 0x31e92bfd
// declared property setter: - (void)setActiveKey:(id)key;	// 0x31cd1d99
// declared property setter: - (void)setAutoShift:(BOOL)shift;	// 0x31e97261
- (void)setAutoshift:(BOOL)autoshift;	// 0x31cdb4e9
- (void)setCompositeImage:(id)image forKey:(id)key;	// 0x31e97d81
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)currentLocaleOnKeyplane;	// 0x31cd62a9
- (void)setDelegate:(id)delegate forKey:(id)key;	// 0x31e92c85
// declared property setter: - (void)setDidLongPress:(BOOL)longPress;	// 0x31e97281
- (void)setKeyForTouchInfo:(id)touchInfo key:(id)key;	// 0x31e978b9
- (void)setKeyboardAppearance:(int)appearance;	// 0x31cd1e95
- (void)setKeyboardDim:(BOOL)dim;	// 0x31d03c0d
- (void)setKeyboardDim:(BOOL)dim amount:(float)amount withDuration:(float)duration;	// 0x31d03ca5
// declared property setter: - (void)setKeyboardName:(id)name;	// 0x31e9722d
- (void)setKeyboardName:(id)name appearance:(int)appearance;	// 0x31cd04b9
// declared property setter: - (void)setKeyplaneName:(id)name;	// 0x31cd0bed
- (void)setLabel:(id)label forKey:(id)key;	// 0x31cd98dd
// declared property setter: - (void)setLocalizedInputKey:(id)key;	// 0x31cd0bad
- (void)setLongPressAction:(SEL)action forKey:(id)key;	// 0x31e92c41
- (void)setReturnKeyEnabled:(BOOL)enabled withDisplayName:(id)displayName withType:(int)type;	// 0x31cda229
// declared property setter: - (void)setShift:(BOOL)shift;	// 0x31cdb141
// declared property setter: - (void)setShowIntlKey:(BOOL)key;	// 0x31e97291
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x31e956b1
- (void)setSplitProgress:(float)progress;	// 0x31e954d9
- (void)setState:(int)state forKey:(id)key;	// 0x31cd72a5
- (void)setTarget:(id)target forKey:(id)key;	// 0x31e92bb9
// declared property getter: - (BOOL)shift;	// 0x31e97241
- (BOOL)shouldHitTestKey:(id)key;	// 0x31cdaa35
- (BOOL)shouldPreventInputManagerHitTestingForKey:(id)key;	// 0x31cfc5f9
- (BOOL)shouldRetestKey:(id)key withKeyplane:(id)keyplane;	// 0x31cfef31
- (BOOL)shouldShowDictationKey;	// 0x31cd36ed
- (BOOL)shouldShowIndicator;	// 0x31e93e49
// declared property getter: - (BOOL)showDictationKey;	// 0x31cd6af9
- (void)showFlickView:(int)view withKey:(id)key flickString:(id)string;	// 0x31e97d41
// declared property getter: - (BOOL)showIntlKey;	// 0x31cd6ae9
- (void)showKeyboardType:(int)type appearance:(int)appearance orientation:(id)orientation withShift:(BOOL)shift;	// 0x31ccfe59
- (void)showPopupVariantsForKey:(id)key;	// 0x31e935c1
- (void)showPopupView:(int)view withKey:(id)key popupInfo:(id)info force:(BOOL)force;	// 0x31e98899
- (void)showSplitTransitionView:(BOOL)view;	// 0x31e94c51
- (id)simulateTouch:(CGPoint)touch;	// 0x31e96e91
- (id)simulateTouchForCharacter:(id)character errorVector:(CGPoint)vector shouldTypeVariants:(BOOL)variants baseKeyForVariants:(BOOL)variants4;	// 0x31e96fc1
- (id)splitNameForKeyplane:(id)keyplane;	// 0x31e91ae5
- (id)splitNameForKeyplaneName:(id)keyplaneName;	// 0x31e91a95
- (int)stateForKey:(id)key;	// 0x31e92afd
- (int)stateForKeyplaneSwitchKey:(id)keyplaneSwitchKey;	// 0x31e92981
- (int)stateForShiftKey:(id)shiftKey;	// 0x31cd82c5
- (void)swipeDetected:(id)detected;	// 0x31e95d01
- (void)touchCancelled:(id)cancelled;	// 0x31e95991
- (void)touchDown:(id)down;	// 0x31cfb289
- (void)touchDownWithKey:(id)key atPoint:(CGPoint)point;	// 0x31cfc6d9
- (void)touchDragged:(id)dragged;	// 0x31d36ce9
- (id)touchForKey:(id)key;	// 0x31e95e21
- (void)touchUp:(id)up;	// 0x31cfd789
- (void)uninstallGestureRecognizers;	// 0x31d7a381
- (unsigned)upActionFlagsForKey:(id)key;	// 0x31cff039
- (void)upActionShift;	// 0x31e96411
- (void)updateBackgroundIfNeeded;	// 0x31cd6e15
- (void)updateKeyCentroids;	// 0x31cda659
- (void)updateKeyboardForKeyplane:(id)keyplane;	// 0x31cd31e5
- (BOOL)updateKeysWithDelegates;	// 0x31cda53d
- (void)updateLocalizedKeys:(BOOL)keys;	// 0x31cd4711
- (void)updateLocalizedKeysOnKeyplane:(id)keyplane;	// 0x31cd48fd
- (void)updateMoreAndInternationalKeys;	// 0x31cd3601
- (void)updateShiftKeyState;	// 0x31cdb265
- (void)updateTransitionWithFlags:(int)flags;	// 0x31cda4e9
- (BOOL)usesAutoShift;	// 0x31cdb10d
- (int)visualStyleForKeyboardIfSplit:(BOOL)keyboardIfSplit;	// 0x31e91f89
- (void)willRotate;	// 0x31e96501
@end

