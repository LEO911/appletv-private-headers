/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "UITextInput_Internal.h"

@class NSString, UIView, NSUndoManager;
@protocol UITextInputPrivate, UITextInput;

@interface UIResponder : NSObject <UITextInput_Internal> {
}
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x31d3cf49; 
@property(readonly, assign, nonatomic) UIResponder *_editingDelegate;	// G=0x31cf8fcd; 
@property(readonly, assign, nonatomic) UIResponder *_responderForEditing;	// G=0x31cf8fa9; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x31cf1935; 
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;	// G=0x31eddca1; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x31eddc81; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x31eddc85; 
@property(readonly, assign) UIView *inputAccessoryView;	// G=0x31bd7a55; 
@property(readonly, assign) UIView *inputView;	// G=0x31bd79bd; 
@property(copy, nonatomic) NSString *restorationIdentifier;	// G=0x3201ce7d; S=0x31c68979; 
@property(readonly, assign, nonatomic) NSUndoManager *undoManager;	// G=0x31dea281; 
+ (void)_cleanupAllStateRestorationTables;	// 0x31c448f1
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;	// 0x31c44935
+ (void)_finishStateRestoration;	// 0x3201d3d5
+ (void)_prepareForSecondPassStateRestoration;	// 0x3201d3c5
+ (void)_setRestoredIdentifierPathForObject:(id)object identifierPath:(id)path;	// 0x3201d2d5
+ (void)_startTrackingObjectsWithIdentifiers;	// 0x31c31f99
+ (void)_stopTrackingObjectsWithIdentifiers;	// 0x31c44979
+ (void)_updateStateRestorationIdentifierMap;	// 0x3201d1f1
+ (id)objectWithRestorationIdentifierPath:(id)restorationIdentifierPath;	// 0x3201ce8d
- (id)_asTextSelection;	// 0x31eddc9d
- (void)_becomeFirstResponder;	// 0x31bd6f6d
- (void)_becomeFirstResponderAndMakeVisible;	// 0x31dea40d
- (BOOL)_becomeFirstResponderWhenPossible;	// 0x31c43509
- (void)_beginPinningInputViews;	// 0x31d2987d
- (BOOL)_canBecomeFirstResponderWhenPossible;	// 0x31dea585
- (BOOL)_canShowTextServices;	// 0x31dea50d
// declared property getter: - (CGRect)_caretRect;	// 0x31eddca1
- (unsigned long)_characterAfterCaretSelection;	// 0x31d0601d
- (unsigned long)_characterBeforeCaretSelection;	// 0x31d05d19
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x31d05d2d
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x31d05da5
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x31d3b295
- (void)_clearBecomeFirstResponderWhenCapable;	// 0x31cbafc1
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event;	// 0x31be5cd5
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event index:(unsigned)index;	// 0x31be5cf9
- (BOOL)_containedInAbsoluteResponderChain;	// 0x31c434e1
- (BOOL)_containsResponder:(id)responder;	// 0x31be90f1
- (void)_controlMouseDown:(GSEventRef)down;	// 0x31dea3a1
- (void)_controlMouseDragged:(GSEventRef)dragged;	// 0x31dea3a9
- (void)_controlMouseUp:(GSEventRef)up;	// 0x31dea3a5
- (void)_controlTouchBegan:(id)began withEvent:(id)event;	// 0x31cbcb7d
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;	// 0x31cdd7e5
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;	// 0x31d1dfa9
- (id)_deepestDefaultFirstResponder;	// 0x31c44831
- (id)_deepestDefaultFirstResponderMatching:(id)matching;	// 0x31dea41d
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x31ed7e4d
- (void)_deleteByWord;	// 0x31ed7ae9
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x31ed7e75
- (void)_deleteToEndOfLine;	// 0x31ed7cf1
- (void)_deleteToStartOfLine;	// 0x31ed7b95
// declared property getter: - (id)_editingDelegate;	// 0x31cf8fcd
- (void)_endPinningInputViews;	// 0x31cbb149
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x31ed78dd
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x31ed78f1
- (void)_extendCurrentSelection:(int)selection;	// 0x31ed7729
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x31cf17ed
- (void)_finishResignFirstResponder;	// 0x31be9429
- (id)_firstResponder;	// 0x31be93d5
- (id)_fontForCaretSelection;	// 0x31d442a1
- (id)_fullRange;	// 0x31ed80d5
- (id)_fullText;	// 0x31d962e5
- (void)_handleKeyEvent:(GSEventRef)event;	// 0x31cff96d
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x31ed76c1
- (int)_indexForTextPosition:(id)textPosition;	// 0x31d9a689
- (BOOL)_isEmptySelection;	// 0x31ed764d
- (BOOL)_isPinningInputViews;	// 0x31cbb0ed
- (BOOL)_isRootForKeyResponderCycle;	// 0x31dea27d
- (BOOL)_isTransitioningFromView:(id)view;	// 0x31d04e5d
- (BOOL)_isViewController;	// 0x31dea4c1
- (id)_keyInput;	// 0x31ed7471
- (id)_keyboardResponder;	// 0x31bd7b2d
- (CGRect)_lastRectForRange:(id)range;	// 0x31eda415
- (void)_moveCurrentSelection:(int)selection;	// 0x31ed77f9
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x31ed94b5
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x31ed96a9
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x31ed97a5
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x31ed91a9
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x31ed8b8d
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x31ed8f01
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x31ed88a1
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x31ed90ed
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x31ed8a05
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x31ed8d15
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x31ed862d
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x31ed92c1
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x31ed9dc9
- (id)_nextFirstResponderIfAllowed;	// 0x31be92e5
- (id)_nextKeyResponder;	// 0x31dea275
- (id)_nextViewControllerInResponderChain;	// 0x31dea4c5
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x31d9a5f5
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x31ed9eb9
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31ed98a5
- (id)_previousKeyResponder;	// 0x31dea279
- (BOOL)_promoteDeepestDefaultFirstResponder;	// 0x31c446dd
// declared property getter: - (id)_proxyTextInput;	// 0x31d3cf49
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x31cce669
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x31ed804d
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x31ed8091
- (void)_replaceCurrentWordWithText:(id)text;	// 0x31ed7fd1
- (BOOL)_requiresKeyboardResetOnReload;	// 0x31bd77e1
- (BOOL)_requiresKeyboardWhenFirstResponder;	// 0x31bd7aad
- (void)_resignFirstResponder;	// 0x31be955d
- (id)_responderForBecomeFirstResponder;	// 0x31be90ed
// declared property getter: - (id)_responderForEditing;	// 0x31cf8fa9
- (id)_restorationIdentifierPath;	// 0x3201cf25
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x31ed8045
- (id)_selectableText;	// 0x31cce6d9
- (int)_selectionAffinity;	// 0x31ed9949
- (NSRange)_selectionAsNSRange;	// 0x31ed7475
- (BOOL)_selectionAtDocumentEnd;	// 0x31ed75d9
- (BOOL)_selectionAtDocumentStart;	// 0x31ed7569
- (BOOL)_selectionAtWordStart;	// 0x31ed74d1
- (CGRect)_selectionClipRect;	// 0x31d063b1
- (void)_setCaretSelectionAtEndOfSelection;	// 0x31ed7a61
- (void)_setFirstResponder:(id)responder;	// 0x31bd6f81
- (void)_setGestureRecognizers;	// 0x31ed9a41
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31ed8475
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x31ed9c89
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31ed98d5
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x31ed8221
- (BOOL)_shouldUseDefaultFirstResponder;	// 0x31c448b9
- (BOOL)_shouldUseKeyWindowStack;	// 0x31be93fd
- (BOOL)_shouldUseNextFirstResponder;	// 0x31be9331
- (id)_showServiceForText:(id)text type:(int)type fromRect:(CGRect)rect inView:(id)view;	// 0x31dea535
- (id)_targetForAction:(SEL)action withSender:(id)sender;	// 0x31dea3ad
- (id)_textColorForCaretSelection;	// 0x31ed8131
// declared property getter: - (id)_textSelectingContainer;	// 0x31cf1935
- (void)_trackObjectWithIdentifier:(id)identifier;	// 0x31c689ad
- (void)_unmarkText;	// 0x31d3578d
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x31ed81f1
- (id)_window;	// 0x31c4ae59
- (void)_windowBecameKey;	// 0x31d04ded
- (void)_windowResignedKey;	// 0x31d04de9
- (id)_wordContainingCaretSelection;	// 0x31d8d79d
- (BOOL)becomeFirstResponder;	// 0x31bd6ae1
- (void)beginSelectionChange;	// 0x31eddd25
- (BOOL)canBecomeFirstResponder;	// 0x31be93d1
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x31cb5831
- (BOOL)canResignFirstResponder;	// 0x31be92e1
- (void)decodeRestorableStateWithCoder:(id)coder;	// 0x3201d3e9
- (id)defaultFirstResponder;	// 0x31c448b5
- (void)encodeRestorableStateWithCoder:(id)coder;	// 0x3201d3e5
- (void)endSelectionChange;	// 0x31eddd65
- (id)firstResponder;	// 0x31bd6e11
- (void)gestureChanged:(GSEventRef)changed;	// 0x31dea271
- (void)gestureEnded:(GSEventRef)ended;	// 0x31dea26d
- (void)gestureStarted:(GSEventRef)started;	// 0x31dea269
// declared property getter: - (id)inputAccessoryView;	// 0x31bd7a55
// declared property getter: - (id)inputView;	// 0x31bd79bd
- (id)interactionAssistant;	// 0x31eddc7d
// declared property getter: - (BOOL)isEditable;	// 0x31eddc81
// declared property getter: - (BOOL)isEditing;	// 0x31eddc85
- (BOOL)isFirstResponder;	// 0x31bd724d
- (void)motionBegan:(int)began withEvent:(id)event;	// 0x31dea255
- (void)motionCancelled:(int)cancelled withEvent:(id)event;	// 0x31dea25d
- (void)motionEnded:(int)ended withEvent:(id)event;	// 0x31dea259
- (void)mouseDown:(GSEventRef)down;	// 0x31dea1fd
- (void)mouseDragged:(GSEventRef)dragged;	// 0x31dea245
- (void)mouseEntered:(GSEventRef)entered;	// 0x31dea249
- (void)mouseExited:(GSEventRef)exited;	// 0x31dea24d
- (void)mouseMoved:(GSEventRef)moved;	// 0x31dea251
- (void)mouseUp:(GSEventRef)up;	// 0x31dea241
- (id)nextFirstResponder;	// 0x31be9365
- (id)nextResponder;	// 0x31bd7a51
- (void)reloadInputViews;	// 0x31bd71a1
- (void)reloadInputViewsWithoutReset;	// 0x31dea2b9
- (void)remoteControlReceivedWithEvent:(id)event;	// 0x31dea261
- (BOOL)resignFirstResponder;	// 0x31be9131
// declared property getter: - (id)restorationIdentifier;	// 0x3201ce7d
- (void)scrollWheel:(GSEventRef)wheel;	// 0x31dea265
- (int)selectionAffinity;	// 0x31eda411
// declared property setter: - (void)setRestorationIdentifier:(id)identifier;	// 0x31c68979
- (id)textInputView;	// 0x31eddc55
- (void)touchesBegan:(id)began withEvent:(id)event;	// 0x31d139e1
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;	// 0x31d3e89d
- (void)touchesEnded:(id)ended withEvent:(id)event;	// 0x31d15f45
- (void)touchesMoved:(id)moved withEvent:(id)event;	// 0x31d1e385
// declared property getter: - (id)undoManager;	// 0x31dea281
@end

