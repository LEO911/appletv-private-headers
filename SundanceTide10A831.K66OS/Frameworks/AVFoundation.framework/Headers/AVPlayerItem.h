/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSDate, NSArray, AVPlayerItemInternal, NSString, NSError;

@interface AVPlayerItem : NSObject <NSCopying> {
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x341e3709; S=0x341e37bd; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x341e3871; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x341e3985; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x341e3b3d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x341e3a29; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x341e3a99; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x341e38e1; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x341debb9; S=0x341ded65; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x341e3429; 
@property(retain) id audioMix;	// G=0x341dfac5; S=0x341dfd19; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x341e340d; 
@property(assign) double bufferingTargetMaximum;	// G=0x341de7d1; S=0x341de965; converted property
@property(assign) double bufferingTargetMinimum;	// G=0x341de989; S=0x341deb1d; converted property
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x341e476d; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x341e3481; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x341df841; S=0x341df9ed; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x341df529; S=0x341df6d5; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x341e4729; S=0x341e4691; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x341e4885; S=0x341e4801; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x341db3fd; 
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x341ddcb1; S=0x341dde8d; converted property
@property(retain) id gaplessInfo;	// G=0x341e146d; S=0x341e1829; converted property
@property(retain) id initialDate;	// G=0x341dd969; S=0x341dd9ad; converted property
@property(retain) id initialEstimatedDate;	// G=0x341dda8d; S=0x341ddad1; converted property
@property(assign) BOOL limitReadAhead;	// G=0x341de539; S=0x341de6e1; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x341e2901; S=0x341e2921; converted property
@property(readonly, assign, nonatomic) NSArray *outputs;	// G=0x341e4ff9; 
@property(assign) int playbackLikelyToKeepUpTrigger;	// G=0x341deefd; S=0x341df0a5; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x341de0a9; S=0x341de285; converted property
@property(assign) BOOL seekingWaitsForVideoCompositionRendering;	// G=0x341e03a5; S=0x341e0445; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x341e1a11; S=0x341e1971; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x341db3dd; 
@property(retain) id textStyleRules;	// G=0x341e04d5; S=0x341e059d; converted property
@property(retain) id variableSpeedAudioProcessor;	// G=0x341e0729; S=0x341e081d; converted property
@property(retain) id videoComposition;	// G=0x341dfddd; S=0x341dfe21; converted property
@property(assign) float volumeAdjustment;	// G=0x341e1b45; S=0x341e1aa5; converted property
@property(assign) BOOL willNeverSeekBackwardsHint;	// G=0x341df211; S=0x341df3bd; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x341d877d
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x341d8769
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x341e34d9
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x341e36a5
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x341dee39
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x341e33ed
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x341dfdd9
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;	// 0x341de969
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;	// 0x341deb21
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x341dfac1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x341df7a9
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x341ddfa5
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x341e18fd
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x341de7b5
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x341e3401
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x341e29ed
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x341e33f5
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x341e33f9
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x341e33f1
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;	// 0x341df179
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x341e3405
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x341de39d
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x341e33fd
+ (BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;	// 0x341e04d1
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x341e1a31
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x341e33e9
+ (BOOL)automaticallyNotifiesObserversOfTextStyleRules;	// 0x341e065d
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x341e3409
+ (BOOL)automaticallyNotifiesObserversOfVariableSpeedAudioProcessor;	// 0x341e0985
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x341e00b9
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x341e1b65
+ (BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;	// 0x341df491
+ (void)initialize;	// 0x341d8701
+ (id)playerItemWithAsset:(id)asset;	// 0x341d87d9
+ (id)playerItemWithURL:(id)url;	// 0x341d8791
- (id)init;	// 0x341d8ac5
- (id)initWithAsset:(id)asset;	// 0x341d8cd5
- (id)initWithURL:(id)url;	// 0x341d8c19
- (int)_CreateSeekID;	// 0x341dcfbd
- (id)_URL;	// 0x341dafa1
- (void)_addFPListeners;	// 0x341dbe65
- (void)_addSyncLayer:(id)layer;	// 0x341e2df5
- (BOOL)_alwaysMonitorsPlayability;	// 0x341deb25
- (void)_applyAudioMix;	// 0x341dfb09
- (void)_applyInitialAudioMix;	// 0x341dfcc5
- (void)_applyMediaSelectionOptions;	// 0x341e204d
- (void)_applySeekingWaitsForVideoCompositionRendering;	// 0x341e03c5
- (void)_applyTextStyleRules;	// 0x341e0519
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x341e1e25
- (void)_attachOutputs;	// 0x341e4c0d
- (void)_attachToFigPlayer;	// 0x341da635
- (void)_attachToPlayer:(id)player;	// 0x341da541
- (long long)_availableFileSize;	// 0x341e4605
- (double)_bufferingTargetMaximum;	// 0x341de7b9
- (double)_bufferingTargetMinimum;	// 0x341de971
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x341e21f9
- (id)_cachedValueForKey:(id)key;	// 0x341d98d9
- (BOOL)_canPlayFastForward;	// 0x341dc5c5
- (BOOL)_canPlayFastReverse;	// 0x341dc719
- (BOOL)_canPlayReverse;	// 0x341dc8c5
- (BOOL)_canPlaySlowForward;	// 0x341dc9b9
- (BOOL)_canPlaySlowReverse;	// 0x341dcaad
- (BOOL)_canStepBackward;	// 0x341dcc99
- (BOOL)_canStepForward;	// 0x341dcba1
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x341dd019
- (void)_changeStatusToFailedWithError:(id)error;	// 0x341db441
- (void)_configurePlaybackItem;	// 0x341d9b91
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x341df7ad
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x341df495
- (OpaqueCMTimebase *)_copyTimebase;	// 0x341de3a1
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x341da4a9
- (void)_createPlayerItemInternal;	// 0x341d8821
- (void)_dequeueFromPlayer;	// 0x341dae6d
- (void)_detachOutputs;	// 0x341e4d0d
- (void)_didAccessKVOForKey:(id)key;	// 0x341d9931
- (XXStruct_pwHToB)_duration;	// 0x341db5c1
- (void)_enqueueWithPlayer:(id)player shouldAppendItem:(BOOL)item;	// 0x341dadd5
- (void)_evaluateSuppression;	// 0x341e32c1
- (void)_evaluateVisualContexts;	// 0x341e49d5
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x341e29f1
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x341d9899
- (long long)_fileSize;	// 0x341e4579
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x341ddbb1
- (id)_fpNotificationNames;	// 0x341dbbfd
- (BOOL)_hasEnabledVideoMedia;	// 0x341e30b1
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x341db335
- (void)_insertAfterItem:(id)item;	// 0x341daed1
- (void)_invokeReadyForEnqueueingHandlers;	// 0x341dc299
- (BOOL)_isAFileBasedItemThatsReadyToPlay;	// 0x341dc86d
- (BOOL)_isCurrentPlayerItem;	// 0x341da2fd
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x341e3709
// declared property getter: - (BOOL)_isRental;	// 0x341e3871
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x341e3a29
- (void)_kickAssetObserversIfAppropriate;	// 0x341db299
- (BOOL)_limitReadAhead;	// 0x341de4a5
- (id)_loadedTimeRanges;	// 0x341e10ed
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x341db109
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x341dc3b5
- (id)_nextItem;	// 0x341dae91
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x341e304d
- (int)_playbackLikelyToKeepUpTrigger;	// 0x341dee3d
- (id)_playbackProperties;	// 0x341e14b1
- (id)_player;	// 0x341da2d1
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x341dae81
- (id)_playerConnection;	// 0x341da431
- (CGSize)_presentationSize;	// 0x341dcd8d
- (id)_previousItem;	// 0x341daeb1
- (id)_propertyStorage;	// 0x341d98b9
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x341dec95
- (void)_quietlySetBufferingTargetMaximum:(double)maximum;	// 0x341de8ad
- (void)_quietlySetBufferingTargetMinimum:(double)minimum;	// 0x341dea65
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x341df91d
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x341df605
- (void)_quietlySetEQPreset:(int)preset;	// 0x341e44a9
- (void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)algorithm;	// 0x341e07cd
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x341dddc9
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x341de615
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x341defd9
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x341e1555
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x341de1c1
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x341e1901
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x341e1a35
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)_quietlySet;	// 0x341df2ed
- (void)_removeFPListeners;	// 0x341dc061
- (void)_removeFromItems;	// 0x341daf39
- (void)_removeSyncLayer:(id)layer;	// 0x341e2be9
- (void)_renderingSuppressionDidChangeForOutput:(id)_renderingSuppression;	// 0x341e3399
// declared property getter: - (id)_rentalExpirationDate;	// 0x341e3985
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x341e3b3d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x341e3a99
// declared property getter: - (id)_rentalStartDate;	// 0x341e38e1
- (void)_respondToBecomingReadyForBasicInspection;	// 0x341dc1ad
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x341ddfa9
- (id)_seekableTimeRanges;	// 0x341e0d6d
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x341e24ed
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x341e2571
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x341e25c1
- (void)_selectMediaOption:(id)option usingFigSelectedMediaArrayObtainedFromGroup:(id)group;	// 0x341e22cd
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x341e1d35
- (void)_setAsset:(id)asset;	// 0x341db001
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x341db1c1
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x341db059
- (void)_setAudibleDRMInfo:(id)info;	// 0x341e4409
- (void)_setEQPreset:(int)preset;	// 0x341e4519
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x341e1cc1
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x341e37bd
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x341da31d
- (void)_setPlayerConnection:(id)connection;	// 0x341da451
- (void)_setRampInOutInfo:(id)outInfo;	// 0x341e4369
- (void)_setSyncLayersOnFigPlaybackItem:(id)item;	// 0x341e2b79
- (void)_setTimebaseOnOutputs:(OpaqueCMTimebase *)outputs;	// 0x341e4b3d
- (void)_setTimedMetadata:(id)metadata;	// 0x341e2b09
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x341db0b1
- (void)_setURL:(id)url;	// 0x341dafc1
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x341e00bd
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x341e0245
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x341e01c9
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x341e0159
- (void)_setVideoCompositor:(id)compositor;	// 0x341e0299
- (id)_stateDispatchQueue;	// 0x341d9879
- (BOOL)_suppressionForOutputs:(id)outputs;	// 0x341e31fd
- (id)_trackWithTrackID:(int)trackID;	// 0x341dbb15
- (id)_tracks;	// 0x341db7b9
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)seekID finished:(BOOL)finished;	// 0x341dd1f1
- (void)_updateTimebase;	// 0x341de419
- (id)_variableSpeedAudioProcessor;	// 0x341e0661
- (id)_weakReference;	// 0x341d9859
- (void)_willAccessKVOForKey:(id)key;	// 0x341d9905
- (BOOL)_willNeverSeekBackwardsHint;	// 0x341df17d
- (id)accessLog;	// 0x341e3be1
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x341d9a1d
- (void)addOutput:(id)output;	// 0x341e4ded
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x341debb9
- (id)asset;	// 0x341db57d
// converted property getter: - (id)audioMix;	// 0x341dfac5
// converted property getter: - (double)bufferingTargetMaximum;	// 0x341de7d1
// converted property getter: - (double)bufferingTargetMinimum;	// 0x341de989
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x341e476d
- (BOOL)canPlayFastForward;	// 0x341dc63d
- (BOOL)canPlayFastReverse;	// 0x341dc791
- (BOOL)canPlayReverse;	// 0x341dc8dd
- (BOOL)canPlaySlowForward;	// 0x341dc9d1
- (BOOL)canPlaySlowReverse;	// 0x341dcac5
- (BOOL)canStepBackward;	// 0x341dccb1
- (BOOL)canStepForward;	// 0x341dcbbd
- (void)cancelPendingSeeks;	// 0x341dd831
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x341df841
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x341df529
- (id)copyWithZone:(NSZone *)zone;	// 0x341d92dd
- (id)currentDate;	// 0x341dd845
- (id)currentEstimatedDate;	// 0x341dda05
- (XXStruct_pwHToB)currentTime;	// 0x341dcf15
// declared property getter: - (id)dataYouTubeID;	// 0x341e4729
- (void)dealloc;	// 0x341d8dbd
- (id)description;	// 0x341d96ed
- (void)didChangeValueForKey:(id)key;	// 0x341d99bd
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x341e48a5
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x341e4885
- (XXStruct_pwHToB)duration;	// 0x341db679
// declared property getter: - (id)error;	// 0x341db3fd
- (id)errorLog;	// 0x341e3ca9
- (void)finalize;	// 0x341d9179
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x341ddcb1
// converted property getter: - (id)gaplessInfo;	// 0x341e146d
// converted property getter: - (id)initialDate;	// 0x341dd969
// converted property getter: - (id)initialEstimatedDate;	// 0x341dda8d
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x341e3429
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x341e340d
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x341e3481
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x341e2901
- (BOOL)isPlaybackBufferEmpty;	// 0x341e0b79
- (BOOL)isPlaybackBufferFull;	// 0x341e0a81
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x341e0989
// converted property getter: - (BOOL)limitReadAhead;	// 0x341de539
- (id)loadedTimeRanges;	// 0x341e13d5
// declared property getter: - (id)outputs;	// 0x341e4ff9
- (id)playabilityMetrics;	// 0x341e0ce9
// converted property getter: - (int)playbackLikelyToKeepUpTrigger;	// 0x341deefd
- (CGSize)presentationSize;	// 0x341dce19
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x341e0c71
- (void)removeOutput:(id)output;	// 0x341e4f05
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x341de0a9
- (BOOL)seekToDate:(id)date;	// 0x341dd951
- (BOOL)seekToDate:(id)date completionHandler:(id)handler;	// 0x341dd8cd
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x341dd2a5
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x341dd361
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x341dd2dd
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x341dd3d9
- (id)seekableTimeRanges;	// 0x341e1055
// converted property getter: - (BOOL)seekingWaitsForVideoCompositionRendering;	// 0x341e03a5
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x341e2685
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x341e1f4d
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x341e26a9
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x341e1b69
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x341ded65
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x341dfd19
// converted property setter: - (void)setBufferingTargetMaximum:(double)maximum;	// 0x341de965
// converted property setter: - (void)setBufferingTargetMinimum:(double)minimum;	// 0x341deb1d
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x341df9ed
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x341df6d5
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x341e4691
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x341e4801
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x341dde8d
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x341e1829
// converted property setter: - (void)setInitialDate:(id)date;	// 0x341dd9ad
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x341ddad1
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x341de6e1
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x341e2921
// converted property setter: - (void)setPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x341df0a5
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x341de285
// converted property setter: - (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)videoCompositionRendering;	// 0x341e0445
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x341e1971
// converted property setter: - (void)setTextStyleRules:(id)rules;	// 0x341e059d
// converted property setter: - (void)setVariableSpeedAudioProcessor:(id)processor;	// 0x341e081d
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x341dfe21
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x341e1aa5
// converted property setter: - (void)setWillNeverSeekBackwardsHint:(BOOL)neverSeekBackwardsHint;	// 0x341df3bd
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x341e1a11
// declared property getter: - (int)status;	// 0x341db3dd
- (void)stepByCount:(int)count;	// 0x341ddb29
// converted property getter: - (id)textStyleRules;	// 0x341e04d5
- (OpaqueCMTimebase *)timebase;	// 0x341de3f9
- (id)timedMetadata;	// 0x341e2ac5
- (id)tracks;	// 0x341dba5d
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x341d97d1
// converted property getter: - (id)variableSpeedAudioProcessor;	// 0x341e0729
// converted property getter: - (id)videoComposition;	// 0x341dfddd
// converted property getter: - (float)volumeAdjustment;	// 0x341e1b45
- (void)willChangeValueForKey:(id)key;	// 0x341d995d
// converted property getter: - (BOOL)willNeverSeekBackwardsHint;	// 0x341df211
@end

