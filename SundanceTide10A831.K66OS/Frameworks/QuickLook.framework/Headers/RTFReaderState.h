/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/QuickLook.framework/QuickLook
 */

#import "QuickLook-Structs.h"
#import <NSObject.h> // Unknown library

@class NSArray, NSMutableDictionary, RTFTextTable, NSMutableArray, NSMutableData;

__attribute__((visibility("hidden")))
@interface RTFReaderState : NSObject {
	id _delegate;	// 4 = 0x4
	unsigned long _defaultToUniCharEncoding;	// 8 = 0x8
	NSMutableDictionary *_documentInfoDictionary;	// 12 = 0xc
	CGSize _paperSize;	// 16 = 0x10
	float _lMargin;	// 24 = 0x18
	float _rMargin;	// 28 = 0x1c
	float _bMargin;	// 32 = 0x20
	float _tMargin;	// 36 = 0x24
	CGSize _viewSize;	// 40 = 0x28
	int _viewScale;	// 48 = 0x30
	int _viewKind;	// 52 = 0x34
	NSMutableArray *_attributesStack;	// 56 = 0x38
	NSMutableDictionary *_curAttributes;	// 60 = 0x3c
	unsigned _level;	// 64 = 0x40
	NSAttributeInfo _attributeInfo;	// 68 = 0x44
	NSMutableData *_attributeInfoStack;	// 100 = 0x64
	int _tableNestingLevel;	// 104 = 0x68
	BOOL _isRTLDocument;	// 108 = 0x6c
	NSArray *_textBlocks;	// 112 = 0x70
	NSMutableArray *_nestedTables;	// 116 = 0x74
	RTFTextTable *_currentTable;	// 120 = 0x78
	RTFTextTable *_previousTable;	// 124 = 0x7c
	NSMutableArray *_currentRowArray;	// 128 = 0x80
	NSMutableArray *_previousRowArray;	// 132 = 0x84
	int _currentRow;	// 136 = 0x88
	int _currentColumn;	// 140 = 0x8c
	int _currentDefinitionColumn;	// 144 = 0x90
	BOOL _currentRowIsLast;	// 148 = 0x94
	BOOL _setTableCells;	// 149 = 0x95
	unsigned _currentBorderEdge;	// 152 = 0x98
	BOOL _currentBorderIsTable;	// 156 = 0x9c
	NSMutableDictionary *_listDefinitions;	// 160 = 0xa0
	int _currentListNumber;	// 164 = 0xa4
	int _currentListLevel;	// 168 = 0xa8
}
@property(assign) int baseWritingDirection;	// G=0x332a965d; S=0x332a9645; converted property
@property(assign) BOOL bold;	// G=0x332a957d; S=0x332a9565; converted property
@property(assign) float bottomMargin;	// G=0x332a93ad; S=0x332a939d; converted property
@property(assign) unsigned long codePageEncoding;	// G=0x332a94d9; S=0x332a94c5; converted property
@property(readonly, assign) unsigned currentBorderEdge;	// G=0x332a9de1; converted property
@property(readonly, assign) BOOL currentBorderIsTable;	// G=0x332a9df1; converted property
@property(assign) int currentListLevel;	// G=0x332aab1d; S=0x332aab2d; converted property
@property(assign) int currentListNumber;	// G=0x332aaafd; S=0x332aab0d; converted property
@property(readonly, retain) RTFTextTable *currentTable;	// G=0x332a9d75; converted property
@property(assign) unsigned long defaultToUniCharEncoding;	// G=0x332a9495; S=0x332a9485; converted property
@property(readonly, retain) NSMutableDictionary *documentInfoDictionary;	// G=0x332a92c1; converted property
@property(retain) id font;	// G=0x332a95d9; S=0x332a95c5; converted property
@property(assign) float fontSize;	// G=0x332a9601; S=0x332a95ed; converted property
@property(assign) BOOL hasWritingDirectionAttribute;	// G=0x332a962d; S=0x332a9615; converted property
@property(assign) BOOL italic;	// G=0x332a95ad; S=0x332a9595; converted property
@property(assign) float leftMargin;	// G=0x332a934d; S=0x332a933d; converted property
@property(readonly, assign) unsigned level;	// G=0x332a9475; converted property
@property(readonly, retain) NSMutableDictionary *listDefinitions;	// G=0x332aab3d; converted property
@property(assign) BOOL multiByteEncoding;	// G=0x332a9505; S=0x332a94ed; converted property
@property(assign) CGSize paperSize;	// G=0x332a9325; S=0x332a9311; converted property
@property(assign) float rightMargin;	// G=0x332a936d; S=0x332a935d; converted property
@property(assign) unsigned long toUniCharEncoding;	// G=0x332a94b5; S=0x332a94a5; converted property
@property(assign) float topMargin;	// G=0x332a938d; S=0x332a937d; converted property
@property(assign) unsigned unicodeAlternativeLength;	// G=0x332a9535; S=0x332a951d; converted property
@property(assign) CGSize viewSize;	// G=0x332a93d1; S=0x332a93bd; converted property
- (id)initWithDelegate:(id)delegate;	// 0x332a8e69
- (void)_beginTableRow;	// 0x332a9c45
- (void)_clearTableCells;	// 0x332aa439
- (BOOL)_currentTableCellIsPlaceholder;	// 0x332a9e01
- (void)_ensureTableCells;	// 0x332a9a69
- (void)_notifyEndParagraph;	// 0x332aadc5
- (void)_notifyEndTable;	// 0x332aae65
- (void)_notifyEndTableCellWithCell:(id)cell;	// 0x332aafa5
- (void)_notifyEndTableRow;	// 0x332aaf05
- (void)_notifyProcessString:(id)string;	// 0x332aad19
- (void)_notifyStartParagraph;	// 0x332aad75
- (void)_notifyStartTable;	// 0x332aae15
- (void)_notifyStartTableCell;	// 0x332aaf55
- (void)_notifyStartTableRow;	// 0x332aaeb5
- (void)_paragraphInTable;	// 0x332aa6a9
- (void)_popTableState;	// 0x332aa0bd
- (void)_pushTableState;	// 0x332a9ef5
- (void)_setCurrentBorderEdge:(unsigned)edge isTable:(BOOL)table;	// 0x332a9ed5
- (void)_setTableCells;	// 0x332aa271
- (void)_updateAttributes;	// 0x332a98ed
- (void)addListDefinition:(id)definition forKey:(int)key;	// 0x332aab4d
- (void)addOverride:(int)override forKey:(int)key;	// 0x332aabfd
- (id)attributeForKey:(id)key;	// 0x332a96a1
// converted property getter: - (int)baseWritingDirection;	// 0x332a965d
// converted property getter: - (BOOL)bold;	// 0x332a957d
// converted property getter: - (float)bottomMargin;	// 0x332a93ad
// converted property getter: - (unsigned long)codePageEncoding;	// 0x332a94d9
- (id)currentAttributes;	// 0x332a9465
// converted property getter: - (unsigned)currentBorderEdge;	// 0x332a9de1
// converted property getter: - (BOOL)currentBorderIsTable;	// 0x332a9df1
// converted property getter: - (int)currentListLevel;	// 0x332aab1d
// converted property getter: - (int)currentListNumber;	// 0x332aaafd
- (id)currentParagraphStyle;	// 0x332a97f5
// converted property getter: - (id)currentTable;	// 0x332a9d75
- (id)currentTableCell;	// 0x332a9d85
- (BOOL)currentTableCellIsPlaceholder;	// 0x332a9995
- (void)dealloc;	// 0x332a9075
- (id)defaultParagraphStyle;	// 0x332a9729
// converted property getter: - (unsigned long)defaultToUniCharEncoding;	// 0x332a9495
// converted property getter: - (id)documentInfoDictionary;	// 0x332a92c1
- (void)endParagraph;	// 0x332a985d
- (void)endTableCell;	// 0x332aa6f9
- (void)endTableCellDefinition;	// 0x332aa659
- (void)endTableRow;	// 0x332aa7dd
// converted property getter: - (id)font;	// 0x332a95d9
// converted property getter: - (float)fontSize;	// 0x332a9601
// converted property getter: - (BOOL)hasWritingDirectionAttribute;	// 0x332a962d
- (BOOL)isLastTableRow;	// 0x332aa7cd
// converted property getter: - (BOOL)italic;	// 0x332a95ad
- (void)lastTableRow;	// 0x332aa7b9
// converted property getter: - (float)leftMargin;	// 0x332a934d
// converted property getter: - (unsigned)level;	// 0x332a9475
// converted property getter: - (id)listDefinitions;	// 0x332aab3d
- (void)mergeTableCellsHorizontally;	// 0x332aa93d
- (void)mergeTableCellsVertically;	// 0x332aa9f1
// converted property getter: - (BOOL)multiByteEncoding;	// 0x332a9505
- (id)mutableAttributes;	// 0x332a9409
- (id)mutableParagraphStyle;	// 0x332a9771
// converted property getter: - (CGSize)paperSize;	// 0x332a9325
- (void)paragraphInTable;	// 0x332a9925
- (void)popState;	// 0x332a91b1
- (void)processString:(id)string;	// 0x332a986d
- (void)pushState;	// 0x332a9129
- (void)removeAttributeForKey:(id)key;	// 0x332a96fd
// converted property getter: - (float)rightMargin;	// 0x332a936d
- (void)setAttribute:(id)attribute forKey:(id)key;	// 0x332a96cd
// converted property setter: - (void)setBaseWritingDirection:(int)direction;	// 0x332a9645
// converted property setter: - (void)setBold:(BOOL)bold;	// 0x332a9565
// converted property setter: - (void)setBottomMargin:(float)margin;	// 0x332a939d
// converted property setter: - (void)setCodePageEncoding:(unsigned long)encoding;	// 0x332a94c5
- (void)setCurrentBorderEdge:(unsigned)edge isTable:(BOOL)table;	// 0x332aaadd
// converted property setter: - (void)setCurrentListLevel:(int)level;	// 0x332aab2d
// converted property setter: - (void)setCurrentListNumber:(int)number;	// 0x332aab0d
// converted property setter: - (void)setDefaultToUniCharEncoding:(unsigned long)uniCharEncoding;	// 0x332a9485
// converted property setter: - (void)setFont:(id)font;	// 0x332a95c5
- (void)setFontIsValid:(BOOL)valid;	// 0x332a954d
// converted property setter: - (void)setFontSize:(float)size;	// 0x332a95ed
// converted property setter: - (void)setHasWritingDirectionAttribute:(BOOL)attribute;	// 0x332a9615
// converted property setter: - (void)setItalic:(BOOL)italic;	// 0x332a9595
// converted property setter: - (void)setLeftMargin:(float)margin;	// 0x332a933d
// converted property setter: - (void)setMultiByteEncoding:(BOOL)encoding;	// 0x332a94ed
// converted property setter: - (void)setPaperSize:(CGSize)size;	// 0x332a9311
// converted property setter: - (void)setRightMargin:(float)margin;	// 0x332a935d
- (void)setTableFlags:(unsigned)flags;	// 0x332a9975
- (void)setTableNestingLevel:(int)level;	// 0x332aa495
- (void)setTextAlignment:(int)alignment;	// 0x332a9675
// converted property setter: - (void)setToUniCharEncoding:(unsigned long)uniCharEncoding;	// 0x332a94a5
// converted property setter: - (void)setTopMargin:(float)margin;	// 0x332a937d
// converted property setter: - (void)setUnicodeAlternativeLength:(unsigned)length;	// 0x332a951d
- (void)setViewKind:(int)kind;	// 0x332a93e9
- (void)setViewScale:(int)scale;	// 0x332a93f9
// converted property setter: - (void)setViewSize:(CGSize)size;	// 0x332a93bd
- (void)startParagraph;	// 0x332a9809
- (void)startTableRowDefinition;	// 0x332aa649
// converted property getter: - (unsigned long)toUniCharEncoding;	// 0x332a94b5
// converted property getter: - (float)topMargin;	// 0x332a938d
// converted property getter: - (unsigned)unicodeAlternativeLength;	// 0x332a9535
// converted property getter: - (CGSize)viewSize;	// 0x332a93d1
@end

