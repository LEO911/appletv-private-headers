/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

#import "CoreMotion-Structs.h"
#import <NSObject.h> // Unknown library

@class NSOperationQueue;

@interface CMMotionManagerInternal : NSObject {
	int fSampleLock;	// 4 = 0x4
	Dispatcher *fAccelerometerDispatcher;	// 8 = 0x8
	double fAccelerometerUpdateInterval;	// 12 = 0xc
	id fAccelerometerHandler;	// 20 = 0x14
	NSOperationQueue *fAccelerometerQueue;	// 24 = 0x18
	double fLastAccelerometerNotificationTimestamp;	// 28 = 0x1c
	Sample fLatestAccelerometerSample;	// 36 = 0x24
	Dispatcher *fGyroDispatcher;	// 56 = 0x38
	double fGyroUpdateInterval;	// 60 = 0x3c
	id fGyroHandler;	// 68 = 0x44
	NSOperationQueue *fGyroQueue;	// 72 = 0x48
	double fLastGyroNotificationTimestamp;	// 76 = 0x4c
	Sample fLatestGyroSample;	// 84 = 0x54
	Dispatcher *fDeviceMotionDispatcher;	// 108 = 0x6c
	double fDeviceMotionUpdateInterval;	// 112 = 0x70
	id fDeviceMotionHandler;	// 120 = 0x78
	NSOperationQueue *fDeviceMotionQueue;	// 124 = 0x7c
	double fLastDeviceMotionNotificationTimestamp;	// 128 = 0x80
	Sample fLatestDeviceMotionSample;	// 136 = 0x88
	int fAttitudeReferenceFrame;	// 224 = 0xe0
	void *fCompassCalibrationHud;	// 228 = 0xe4
	bool fShowCompassCalibrationHudOnResume;	// 232 = 0xe8
	bool fHaveSentDeviceRequiresMovementError;	// 233 = 0xe9
	int fGeomagneticModelProviderClient;	// 236 = 0xec
	XXStruct_01mbIB fGeomagneticModel;	// 240 = 0xf0
	bool fHaveSentTrueNorthUnavailableError;	// 304 = 0x130
	double fDeviceMotionStartTimestamp;	// 308 = 0x134
	Dispatcher *fMagnetometerDispatcher;	// 316 = 0x13c
	double fMagnetometerUpdateInterval;	// 320 = 0x140
	id fMagnetometerHandler;	// 328 = 0x148
	NSOperationQueue *fMagnetometerQueue;	// 332 = 0x14c
	double fLastMagnetometerNotificationTimestamp;	// 336 = 0x150
	Sample fLatestMagnetometerSample;	// 344 = 0x158
	bool fShowsDeviceMovementDisplay;	// 364 = 0x16c
	Dispatcher *fPrivateAccelerometerDataDispatcher;	// 368 = 0x170
	/*function-pointer*/ void *fPrivateAccelerometerDataCallback;	// 372 = 0x174
	void *fPrivateAccelerometerDataCallbackInfo;	// 376 = 0x178
	Dispatcher *fPrivateGyroDataDispatcher;	// 380 = 0x17c
	/*function-pointer*/ void *fPrivateGyroDataCallback;	// 384 = 0x180
	void *fPrivateGyroDataCallbackInfo;	// 388 = 0x184
	Dispatcher *fPrivateDeviceMotionDispatcher;	// 392 = 0x188
	/*function-pointer*/ void *fPrivateDeviceMotionCallback;	// 396 = 0x18c
	void *fPrivateDeviceMotionCallbackInfo;	// 400 = 0x190
	bool fPrivateDeviceMotionUse9Axis;	// 404 = 0x194
	bool fPrivateUseAccelerometer;	// 405 = 0x195
	bool fInactive;	// 406 = 0x196
}
- (id)initWithInfo:(id)info;	// 0x370b76b9
- (id).cxx_construct;	// 0x370b7a4d
- (void)dealloc;	// 0x370b7a21
@end

