/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import <DAAccount.h> // Unknown library
#import "DAEAS-Structs.h"

@class NSMutableSet, ASProtocol, NSLock, ASFolderHierarchy, ASTaskManager;

@interface ASAccount : DAAccount {
	ASFolderHierarchy *_folderHierarchy;	// 60 = 0x3c
	ASTaskManager *_taskManager;	// 64 = 0x40
	ASProtocol *_protocol;	// 68 = 0x44
	NSMutableSet *_searchTaskSet;	// 72 = 0x48
	NSMutableSet *_autodiscoveryTasks;	// 76 = 0x4c
	NSLock *_autodiscoverTaskLock;	// 80 = 0x50
	BOOL _useHTTPForTesting;	// 84 = 0x54
	BOOL _useLocalhostForAutodiscoveryTesting;	// 85 = 0x55
	BOOL _oneAutodiscoverAtATime;	// 86 = 0x56
	BOOL _isValidating;	// 87 = 0x57
}
@property(assign, setter=setASAccountVersion:) int asAccountVersion;	// G=0x36e34499; S=0x36e344cd; 
@property(retain) id emailAddress;	// G=0x36e34781; S=0x36e3479d; converted property
@property(retain) id emailAddresses;	// G=0x36e34819; S=0x36e34899; converted property
@property(retain) id encryptionIdentityPersistentReference;	// G=0x36e34e51; S=0x36e34e6d; converted property
@property(retain) id host;	// G=0x36e34629; S=0x36e34645; converted property
@property(retain) id lastKnownProtocolVersion;	// G=0x36e34c1d; S=0x36e34db9; converted property
@property(assign) int mailNumberOfPastDaysToSync;	// G=0x36e34b91; S=0x36e34c01; 
@property(readonly, assign) int mailNumberOfPastDaysToSyncUpperLimit;	// G=0x36e34ae5; 
@property(assign) int port;	// G=0x36e346c1; S=0x36e346dd; converted property
@property(readonly, retain) ASProtocol *protocol;	// G=0x36e34fe9; converted property
@property(retain) id savedFolderPathsThatClientsCareAbout;	// G=0x36e34cd1; S=0x36e34ced; converted property
@property(retain) id signingIdentityPersistentReference;	// G=0x36e34ded; S=0x36e34e09; converted property
@property(readonly, retain) ASTaskManager *taskManager;	// G=0x36e2df09; converted property
@property(assign) BOOL useSSL;	// G=0x36e346f9; S=0x36e34719; converted property
@property(retain) id username;	// G=0x36e34511; S=0x36e3452d; converted property
+ (Class)accountClass;	// 0x36e2dd1d
+ (void)cleanUpFilesForAccountWithId:(id)anId;	// 0x36e2df99
+ (Class)clientClass;	// 0x36e395d5
+ (id)defaultProperties;	// 0x36e2e1f5
+ (id)supportedDataclasses;	// 0x36e2e371
- (id)initWithProperties:(id)properties;	// 0x36e2dc4d
- (void *)_copyABAccount:(BOOL)account;	// 0x36e326c1
- (void *)_copyDefaultExchangeEventsCalendar:(BOOL)calendar;	// 0x36e32a5d
- (void *)_copyExchangeCalendarStore:(BOOL)store;	// 0x36e32785
- (id)_defaultMailFolderWithDefaultType:(int)defaultType fallbackType:(int)type fallbackName:(id)name;	// 0x36e3036d
- (void)_explodeEmailAddress:(id)address outUsername:(id *)username outEmailAddress:(id *)address3;	// 0x36e3361d
- (void)_fillOutActionsArray:(id)array responseArray:(id)array2 withTask:(id)task added:(id)added removed:(id)removed modified:(id)modified perserved:(id)perserved addedResponse:(id)response modifiedResponse:(id)response9 removedResponse:(id)response10 fetchedResponse:(id)response11;	// 0x36e30739
- (id)_folderHierarchy;	// 0x36e2f235
- (BOOL)_generateAutodiscoverURLsForEmailAddress:(id)emailAddress withConsumer:(id)consumer;	// 0x36e33705
- (void)_getContextElementsForItemChangeType:(int)itemChangeType dataclass:(int)dataclass nativeContext:(id)context outContext:(id *)context4 outServerId:(id *)anId;	// 0x36e306c1
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x36e2e855
- (id)_newPolicyManager;	// 0x36e2dc49
- (id)_oldURLsForKeychain;	// 0x36e2e5fd
- (void)_removeInvitationsForMailboxFolderID:(id)mailboxFolderID;	// 0x36e30efd
- (BOOL)_shouldSaveLastKnownProtocolVersion;	// 0x36e34db5
- (void)_silentlyTearDownAutodiscoveryTasks;	// 0x36e33ba9
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x36e2e861
- (id)_visibleASFolders;	// 0x36e2f2b5
- (void)accountDidUpdateProtocolVersion;	// 0x36e35119
- (BOOL)accountNeedsUpgrade;	// 0x36e2ee8d
- (id)addressBookConstraintsPath;	// 0x36e350f1
- (void)applyNewAccountProperties:(id)properties forceSave:(BOOL)save;	// 0x36e3243d
// declared property getter: - (int)asAccountVersion;	// 0x36e34499
- (id)asFolderHierarchyTaskManager:(id)manager;	// 0x36e305dd
- (id)asFolderWithId:(id)anId;	// 0x36e30585
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x36e33d8d
- (void)autodiscoverTask:(id)task completedWithStatus:(int)status accountInfo:(id)info shouldRetryWithEmail:(id)email error:(id)error;	// 0x36e33f89
- (void)blowAwayFolderCache;	// 0x36e3055d
- (id)calendarConstraintsPath;	// 0x36e350c9
- (void)cancelAllSearchQueries;	// 0x36e3314d
- (void)cancelSearchQuery:(id)query;	// 0x36e32fe9
- (void)cancelTaskWithID:(int)anId;	// 0x36e32695
- (void)checkValidityWithConsumer:(id)consumer;	// 0x36e2dfb5
- (void)cleanupAccountFiles;	// 0x36e2dec9
- (id)contactsFolders;	// 0x36e2f90d
- (void)dealloc;	// 0x36e2dd39
- (id)defaultContactsFolder;	// 0x36e2f75d
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x36e30641
- (id)defaultEventsFolder;	// 0x36e2fa61
- (id)defaultNotesFolder;	// 0x36e30069
- (id)defaultToDosFolder;	// 0x36e2fd65
- (id)deletedItemsFolder;	// 0x36e30509
- (id)displayName;	// 0x36e2e4dd
- (id)domainOnly;	// 0x36e3511d
// converted property getter: - (id)emailAddress;	// 0x36e34781
// converted property getter: - (id)emailAddresses;	// 0x36e34819
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x36e2ef89
// converted property getter: - (id)encryptionIdentityPersistentReference;	// 0x36e34e51
- (id)eventsFolders;	// 0x36e2fc11
- (id)existingTaskManager;	// 0x36e2df89
- (void)fetchAttachmentTask:(id)task completedWithStatus:(int)status dataWasBase64:(BOOL)a64 error:(id)error;	// 0x36e31ce1
- (void)fetchAttachmentTask:(id)task receivedData:(id)data ofContentType:(id)contentType;	// 0x36e31c75
- (id)folderIdsThatExternalClientsCareAbout;	// 0x36e305ed
- (id)folderIdsThatExternalClientsCareAboutForDataclasses:(int)dataclasses;	// 0x36e30615
- (void)folderItemsSyncTask:(id)task completedWithStatus:(int)status error:(id)error newSyncKey:(id)key added:(id)added removed:(id)removed modified:(id)modified addedResponse:(id)response modifiedResponse:(id)response9 removedResponse:(id)response10 fetchedResponse:(id)response11;	// 0x36e31059
- (BOOL)folderItemsSyncTask:(id)task handleStreamOperation:(int)operation forCodePage:(int)codePage tag:(int)tag withParentItem:(id)parentItem withData:(char *)data dataLength:(int)length;	// 0x36e31831
- (BOOL)folderItemsSyncTask:(id)task hasPartialAdded:(id)added removed:(id)removed modified:(id)modified addedResponse:(id)response modifiedResponse:(id)response6 removedResponse:(id)response7 fetchedResponse:(id)response8 moreAvailable:(BOOL)available;	// 0x36e31a5d
- (id)folderWithId:(id)anId;	// 0x36e305b1
- (id)foldersTag;	// 0x36e30535
- (void)getOptionsTask:(id)task completedWithStatus:(int)status supportedCommands:(id)commands supportedVersions:(id)versions error:(id)error;	// 0x36e2e061
// converted property getter: - (id)host;	// 0x36e34629
- (id)inboxFolder;	// 0x36e304b1
- (BOOL)isActiveSyncAccount;	// 0x36e35185
- (BOOL)isEqualToAccount:(id)account;	// 0x36e35259
- (BOOL)isGoogleAccount;	// 0x36e351f1
- (BOOL)isHotmailAccount;	// 0x36e35189
- (void)itemOperationsTask:(id)task completedWithStatus:(int)status error:(id)error responses:(id)responses;	// 0x36e31d4d
- (BOOL)itemOperationsTask:(id)task handleStreamOperation:(int)operation forCodePage:(int)codePage tag:(int)tag withParentItem:(id)parentItem withData:(char *)data dataLength:(int)length;	// 0x36e31f81
- (BOOL)itemOperationsTask:(id)task hasPartialResponses:(id)responses;	// 0x36e32191
// converted property getter: - (id)lastKnownProtocolVersion;	// 0x36e34c1d
- (id)localizedIdenticalAccountFailureMessage;	// 0x36e3547d
- (id)localizedInvalidPasswordMessage;	// 0x36e35519
// declared property getter: - (int)mailNumberOfPastDaysToSync;	// 0x36e34b91
// declared property getter: - (int)mailNumberOfPastDaysToSyncUpperLimit;	// 0x36e34ae5
- (void)moveItemsTask:(id)task completedWithStatus:(int)status error:(id)error movedItems:(id)items;	// 0x36e32be9
- (id)notesFolders;	// 0x36e30219
- (CFStringRef)passwordChangedNotificationName;	// 0x36e2e595
- (CFStringRef)passwordIsKnownGoodNotificationName;	// 0x36e2e5c9
- (void)performSearchQuery:(id)query;	// 0x36e33245
- (id)policyManager;	// 0x36e2de51
// converted property getter: - (int)port;	// 0x36e346c1
// converted property getter: - (id)protocol;	// 0x36e34fe9
- (void)resetAccountID;	// 0x36e2f1e5
- (void)saveAccountSettings;	// 0x36e2de79
// converted property getter: - (id)savedFolderPathsThatClientsCareAbout;	// 0x36e34cd1
- (BOOL)searchQueriesRunning;	// 0x36e33461
- (void)searchTask:(id)task finishedWithError:(id)error;	// 0x36e33541
- (void)searchTask:(id)task returnedResults:(id)results;	// 0x36e33489
- (void)searchTask:(id)task returnedTotalCount:(id)count;	// 0x36e334d1
- (void)sendMailTask:(id)task completedWithStatus:(int)status error:(id)error;	// 0x36e323f9
- (int)sendMessageWithRFC822Data:(id)rfc822Data messageID:(id)anId outgoingMessageType:(int)type originalMessageFolderID:(id)anId4 originalMessageItemID:(id)anId5 originalMessageLongID:(id)anId6 originalAccountID:(id)anId7 useSmartTasksIfPossible:(BOOL)possible consumer:(id)consumer context:(void *)context;	// 0x36e32481
- (id)sentItemsFolder;	// 0x36e304dd
// declared property setter: - (void)setASAccountVersion:(int)version;	// 0x36e344cd
// converted property setter: - (void)setEmailAddress:(id)address;	// 0x36e3479d
// converted property setter: - (void)setEmailAddresses:(id)addresses;	// 0x36e34899
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x36e2f061
// converted property setter: - (void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x36e34e6d
- (BOOL)setFolderIdsThatExternalClientsCareAboutAdded:(id)added deleted:(id)deleted foldersTag:(id)tag;	// 0x36e306bd
// converted property setter: - (void)setHost:(id)host;	// 0x36e34645
// converted property setter: - (void)setLastKnownProtocolVersion:(id)version;	// 0x36e34db9
- (void)setLastKnownProtocolVersion:(id)version save:(BOOL)save;	// 0x36e34c39
// declared property setter: - (void)setMailNumberOfPastDaysToSync:(int)sync;	// 0x36e34c01
- (void)setOneAutodiscoverAtATime:(BOOL)atime;	// 0x36e33b99
// converted property setter: - (void)setPort:(int)port;	// 0x36e346dd
- (void)setProtocolVersion:(id)version;	// 0x36e34efd
// converted property setter: - (void)setSavedFolderPathsThatClientsCareAbout:(id)about;	// 0x36e34ced
- (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x36e343f1
// converted property setter: - (void)setSigningIdentityPersistentReference:(id)reference;	// 0x36e34e09
- (void)setUseHTTPForTesting:(BOOL)testing;	// 0x36e33b79
- (void)setUseLocalhostForAutodiscoveryTesting:(BOOL)autodiscoveryTesting;	// 0x36e33b89
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x36e34719
// converted property setter: - (void)setUsername:(id)username;	// 0x36e3452d
- (id)shortTypeString;	// 0x36e2e541
- (BOOL)shouldFixOnDiskDeviceId;	// 0x36e30735
- (BOOL)shouldSavePropertiesForFolderPathsThatClientsCareAbout;	// 0x36e34ccd
// converted property getter: - (id)signingIdentityPersistentReference;	// 0x36e34ded
- (int)sniffableTypeForFolder:(id)folder;	// 0x36e2f5c1
- (id)stateString;	// 0x36e2e171
- (id)supportedDataclasses;	// 0x36e2e391
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x36e2e151
- (int)supportsEmailFlagging;	// 0x36e35081
- (int)supportsMailboxSearch;	// 0x36e35059
- (BOOL)syncDefaultFoldersOnly;	// 0x36e34cad
// converted property getter: - (id)taskManager;	// 0x36e2df09
- (id)toDosFolders;	// 0x36e2ff15
- (id)typeString;	// 0x36e2e4ed
- (BOOL)upgradeAccount;	// 0x36e2ee05
- (void)upgradeWithProtocolVersion:(id)protocolVersion;	// 0x36e34eb5
// converted property getter: - (BOOL)useSSL;	// 0x36e346f9
// converted property getter: - (id)username;	// 0x36e34511
- (id)usernameWithoutDomain;	// 0x36e345a9
- (id)visibleFolders;	// 0x36e2f299
@end

