/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "ASChangedCollectionLeaf.h"
#import "DADataElement.h"
#import "NSCoding.h"

@class ASRecurrence, ASEventUID, ASTimeZone, NSArray, NSNumber, NSString, NSDate;

@interface ASEvent : ASChangedCollectionLeaf <NSCoding, DADataElement> {
	void *_calRecord;	// 64 = 0x40
	ASTimeZone *_timeZone;	// 68 = 0x44
	NSNumber *_allDayEvent;	// 72 = 0x48
	NSString *_body;	// 76 = 0x4c
	NSNumber *_bodyTruncated;	// 80 = 0x50
	NSNumber *_busyStatus;	// 84 = 0x54
	NSArray *_categories;	// 88 = 0x58
	NSDate *_dTStamp;	// 92 = 0x5c
	NSDate *_endTime;	// 96 = 0x60
	NSString *_location;	// 100 = 0x64
	NSNumber *_meetingStatus;	// 104 = 0x68
	NSString *_organizerEmail;	// 108 = 0x6c
	NSString *_organizerName;	// 112 = 0x70
	NSNumber *_reminderMinsBefore;	// 116 = 0x74
	NSNumber *_sensitivity;	// 120 = 0x78
	NSString *_subject;	// 124 = 0x7c
	NSDate *_startTime;	// 128 = 0x80
	ASEventUID *_eventUID;	// 132 = 0x84
	NSArray *_attendees;	// 136 = 0x88
	NSArray *_attendeesPendingDeletion;	// 140 = 0x8c
	ASRecurrence *_recurrence;	// 144 = 0x90
	NSArray *_exceptions;	// 148 = 0x94
	NSNumber *_responseRequested;	// 152 = 0x98
	int _meetingResponseToEmailAbout;	// 156 = 0x9c
	BOOL _calculateNextStatusAsIfMeetingRequest;	// 160 = 0xa0
	BOOL _shouldUpdateStatus;	// 161 = 0xa1
	BOOL _cachedOrganizerIsSelf;	// 162 = 0xa2
	BOOL _haveCheckedOrganizerEmail;	// 163 = 0xa3
	BOOL _isAttendeeUpdateOnly;	// 164 = 0xa4
	BOOL _isDTStampUpdateOnly;	// 165 = 0xa5
	NSNumber *_responseType;	// 168 = 0xa8
}
@property(retain) NSNumber *allDayEvent;	// G=0x36e526d5; S=0x36e526e9; @synthesize=_allDayEvent
@property(retain) NSArray *attendees;	// G=0x36e528dd; S=0x36e528f1; @synthesize=_attendees
@property(retain) NSArray *attendeesPendingDeletion;	// G=0x36e52921; S=0x36e52935; @synthesize=_attendeesPendingDeletion
@property(retain, nonatomic) NSString *body;	// G=0x36e526f9; S=0x36e50cdd; @synthesize=_body
@property(retain) NSNumber *bodyTruncated;	// G=0x36e52709; S=0x36e5271d; @synthesize=_bodyTruncated
@property(retain) NSNumber *busyStatus;	// G=0x36e5272d; S=0x36e52741; @synthesize=_busyStatus
@property(assign) void *calEvent;	// G=0x36e4ff29; S=0x36e4fc85; converted property
@property(retain) NSArray *categories;	// G=0x36e52751; S=0x36e52765; @synthesize=_categories
@property(retain) NSDate *dTStamp;	// G=0x36e52775; S=0x36e52789; @synthesize=_dTStamp
@property(retain) NSDate *endTime;	// G=0x36e52799; S=0x36e527ad; @synthesize=_endTime
@property(retain) ASEventUID *eventUID;	// G=0x36e5033d; S=0x36e50375; @synthesize=_eventUID
@property(retain) id exceptionDate;	// G=0x36e50401; S=0x36e50405; converted property
@property(retain, nonatomic) NSArray *exceptions;	// G=0x36e52911; S=0x36e52569; @synthesize=_exceptions
@property(retain) NSString *location;	// G=0x36e527bd; S=0x36e527d1; @synthesize=_location
@property(assign) int meetingResponseForEmail;	// G=0x36e4cb01; S=0x36e4cb2d; converted property
@property(retain) NSNumber *meetingStatus;	// G=0x36e527e1; S=0x36e527f5; @synthesize=_meetingStatus
@property(retain) NSString *organizerEmail;	// G=0x36e52805; S=0x36e52819; @synthesize=_organizerEmail
@property(retain) NSString *organizerName;	// G=0x36e52829; S=0x36e5283d; @synthesize=_organizerName
@property(retain, nonatomic) ASRecurrence *recurrence;	// G=0x36e52901; S=0x36e52659; @synthesize=_recurrence
@property(retain) NSNumber *reminderMinsBefore;	// G=0x36e5284d; S=0x36e52861; @synthesize=_reminderMinsBefore
@property(retain) NSNumber *responseRequested;	// G=0x36e52945; S=0x36e52959; @synthesize=_responseRequested
@property(retain) NSNumber *responseType;	// G=0x36e52969; S=0x36e5297d; @synthesize=_responseType
@property(retain) NSNumber *sensitivity;	// G=0x36e52871; S=0x36e52885; @synthesize=_sensitivity
@property(retain) NSDate *startTime;	// G=0x36e528b9; S=0x36e528cd; @synthesize=_startTime
@property(retain) NSString *subject;	// G=0x36e52895; S=0x36e528a9; @synthesize=_subject
@property(retain) ASTimeZone *timeZone;	// G=0x36e526b1; S=0x36e526c5; @synthesize=_timeZone
+ (void)_setFakeDTStampDateForUnitTests:(id)unitTests;	// 0x36e4f3a9
+ (BOOL)acceptsTopLevelLeaves;	// 0x36e4aab1
+ (id)asParseRules;	// 0x36e4af05
+ (id)eventWithCalEvent:(void *)calEvent serverID:(id)anId account:(id)account;	// 0x36e4c555
+ (BOOL)frontingBasicTypes;	// 0x36e4abad
+ (BOOL)notifyOfUnknownTokens;	// 0x36e4ac01
+ (BOOL)parsingLeafNode;	// 0x36e4ab05
+ (BOOL)parsingWithSubItems;	// 0x36e4ab59
+ (void)setSystemTimeZoneNameForUnitTests:(id)unitTests;	// 0x36e4aa71
- (id)init;	// 0x36e4c41d
- (id)initWithCalEvent:(void *)calEvent serverID:(id)anId account:(id)account;	// 0x36e4c491
- (id)initWithCoder:(id)coder;	// 0x36e50409
- (int)CalCalendarItemStatus;	// 0x36e4c8bd
- (BOOL)_bailIfNotNewestDataForAccount:(id)account;	// 0x36e4cb3d
- (void)_determineSelfnessWithLocalEvent:(void *)localEvent forAccount:(id)account;	// 0x36e4e6b9
- (void)_loadAttributesFromCalEvent:(void *)calEvent forAccount:(id)account;	// 0x36e4b8c9
- (int)_meetingResponseShouldFilterForEmail:(BOOL)_meetingResponse;	// 0x36e4ca4d
- (int)_nextAttendeeStatusWithOldStatus:(int)oldStatus account:(id)account;	// 0x36e4ca05
- (int)_nextAttendeeStatusWithOldStatus:(int)oldStatus meetingClassType:(int)type account:(id)account;	// 0x36e4c975
- (int)_nextEventStatusWithOldStatus:(int)oldStatus account:(id)account;	// 0x36e4c92d
- (int)_nextEventStatusWithOldStatus:(int)oldStatus meetingClassType:(int)type account:(id)account;	// 0x36e4c8d9
- (void)_sanitizeLocalExceptionsForAccount:(id)account;	// 0x36e4e0e1
- (BOOL)_selfIsMoreCorrectThanOtherEvent:(id)event account:(id)account;	// 0x36e51325
- (id)_transformedEndDateForActiveSync:(id)activeSync isFloating:(BOOL)floating;	// 0x36e4adc9
- (id)_transformedEndDateForCalFramework:(id)calFramework startDate:(id)date;	// 0x36e4ac99
- (id)_transformedStartDateForActiveSync:(id)activeSync isFloating:(BOOL)floating;	// 0x36e4ad65
- (id)_transformedStartDateForCalFramework:(id)calFramework;	// 0x36e4ac55
// declared property getter: - (id)allDayEvent;	// 0x36e526d5
- (void)appendActiveSyncDataForTask:(id)task toWBXMLData:(id)wbxmldata;	// 0x36e4f3e9
// declared property getter: - (id)attendees;	// 0x36e528dd
// declared property getter: - (id)attendeesPendingDeletion;	// 0x36e52921
// declared property getter: - (id)body;	// 0x36e526f9
// declared property getter: - (id)bodyTruncated;	// 0x36e52709
// declared property getter: - (id)busyStatus;	// 0x36e5272d
- (BOOL)cachedOrganizerIsSelfWithAccount:(id)account;	// 0x36e50d31
- (int)calAttendeePendingStatus;	// 0x36e4c889
- (int)calAttendeeStatus;	// 0x36e4c855
// converted property getter: - (void *)calEvent;	// 0x36e4ff29
// declared property getter: - (id)categories;	// 0x36e52751
- (void *)copySelfAttendeeGeneratedIfNecessaryWithLocalEvent:(void *)localEvent forAccount:(id)account;	// 0x36e4b725
// declared property getter: - (id)dTStamp;	// 0x36e52775
- (int)dataclass;	// 0x36e4b5dd
- (void)dealloc;	// 0x36e4c59d
- (BOOL)deleteFromCalendar;	// 0x36e4f2cd
- (BOOL)deleteFromContainer:(void *)container;	// 0x36e512ed
- (id)description;	// 0x36e4c7bd
- (void)encodeWithCoder:(id)coder;	// 0x36e508d9
- (id)endDateForCalFramework;	// 0x36e50289
// declared property getter: - (id)endTime;	// 0x36e52799
- (id)eventByMergingInEvent:(id)event account:(id)account;	// 0x36e52525
- (id)eventByMergingInLosingEvent:(id)losingEvent account:(id)account;	// 0x36e51e9d
// declared property getter: - (id)eventUID;	// 0x36e5033d
// converted property getter: - (id)exceptionDate;	// 0x36e50401
// declared property getter: - (id)exceptions;	// 0x36e52911
- (id)fullOrganizerString;	// 0x36e50d79
- (BOOL)hasOccurrenceInTheFuture;	// 0x36e50f85
- (void)informExceptionsThatParentIsReadyForAccount:(id)account;	// 0x36e4e5f5
- (BOOL)isEqualToEvent:(id)event;	// 0x36e51721
- (BOOL)loadCalRecordForAccount:(id)account;	// 0x36e4fd89
- (void)loadClientIDs;	// 0x36e50119
- (BOOL)loadLocalItemWithAccount:(id)account;	// 0x36e512bd
// declared property getter: - (id)location;	// 0x36e527bd
- (int)meetingResponseForAccount:(id)account;	// 0x36e4cab9
// converted property getter: - (int)meetingResponseForEmail;	// 0x36e4cb01
// declared property getter: - (id)meetingStatus;	// 0x36e527e1
// declared property getter: - (id)organizerEmail;	// 0x36e52805
// declared property getter: - (id)organizerName;	// 0x36e52829
- (void)parseASParseContext:(id)context root:(id)root parent:(id)parent callbackDict:(id)dict streamCallbackDict:(id)dict5 account:(id)account;	// 0x36e4f205
- (void)postProcessApplicationData;	// 0x36e4e885
- (BOOL)purgeAttendeesPendingDeletion;	// 0x36e50dc5
// declared property getter: - (id)recurrence;	// 0x36e52901
// declared property getter: - (id)reminderMinsBefore;	// 0x36e5284d
// declared property getter: - (id)responseRequested;	// 0x36e52945
// declared property getter: - (id)responseType;	// 0x36e52969
- (BOOL)saveDetachedEventsWithExistingRecord:(void *)existingRecord intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x36e4e4ed
- (BOOL)saveServerIDToCalendar;	// 0x36e4ff39
- (BOOL)saveServerIDToExistingItem;	// 0x36e512d5
- (BOOL)saveToCalendarWithExistingRecord:(void *)existingRecord intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x36e4cb45
- (BOOL)saveWithLocalObject:(void *)localObject toContainer:(void *)container shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x36e51279
// declared property getter: - (id)sensitivity;	// 0x36e52871
// declared property setter: - (void)setAllDayEvent:(id)event;	// 0x36e526e9
// declared property setter: - (void)setAttendees:(id)attendees;	// 0x36e528f1
// declared property setter: - (void)setAttendeesPendingDeletion:(id)deletion;	// 0x36e52935
// declared property setter: - (void)setBody:(id)body;	// 0x36e50cdd
// declared property setter: - (void)setBodyTruncated:(id)truncated;	// 0x36e5271d
// declared property setter: - (void)setBusyStatus:(id)status;	// 0x36e52741
// converted property setter: - (void)setCalEvent:(void *)event;	// 0x36e4fc85
- (void)setCalculateNextStatusAsIfMeetingRequest:(BOOL)request;	// 0x36e51305
// declared property setter: - (void)setCategories:(id)categories;	// 0x36e52765
// declared property setter: - (void)setDTStamp:(id)stamp;	// 0x36e52789
// declared property setter: - (void)setEndTime:(id)time;	// 0x36e527ad
// declared property setter: - (void)setEventUID:(id)uid;	// 0x36e50375
// converted property setter: - (void)setExceptionDate:(id)date;	// 0x36e50405
// declared property setter: - (void)setExceptions:(id)exceptions;	// 0x36e52569
- (void)setLocalItem:(void *)item;	// 0x36e512ad
// declared property setter: - (void)setLocation:(id)location;	// 0x36e527d1
// converted property setter: - (void)setMeetingResponseForEmail:(int)email;	// 0x36e4cb2d
// declared property setter: - (void)setMeetingStatus:(id)status;	// 0x36e527f5
// declared property setter: - (void)setOrganizerEmail:(id)email;	// 0x36e52819
// declared property setter: - (void)setOrganizerName:(id)name;	// 0x36e5283d
// declared property setter: - (void)setRecurrence:(id)recurrence;	// 0x36e52659
// declared property setter: - (void)setReminderMinsBefore:(id)before;	// 0x36e52861
// declared property setter: - (void)setResponseRequested:(id)requested;	// 0x36e52959
// declared property setter: - (void)setResponseType:(id)type;	// 0x36e5297d
// declared property setter: - (void)setSensitivity:(id)sensitivity;	// 0x36e52885
- (void)setShouldUpdateStatus:(BOOL)updateStatus;	// 0x36e51315
// declared property setter: - (void)setStartTime:(id)time;	// 0x36e528cd
// declared property setter: - (void)setSubject:(id)subject;	// 0x36e528a9
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x36e526c5
- (BOOL)shouldUseInMemoryAttendeesForAccount:(id)account numExistingAttendees:(int)attendees;	// 0x36e4cb41
- (id)startDateForCalFramework;	// 0x36e5022d
// declared property getter: - (id)startTime;	// 0x36e528b9
// declared property getter: - (id)subject;	// 0x36e52895
// declared property getter: - (id)timeZone;	// 0x36e526b1
- (id)timeZoneNameForCalFramework;	// 0x36e4ae79
- (id)uidForCalFramework;	// 0x36e5031d
- (id)uidGeneratedIfNecessaryWithLocalEvent:(void *)localEvent;	// 0x36e4b5e1
- (BOOL)verifyExternalIds;	// 0x36e4ff6d
@end

