/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


@interface NSBezierPathStub : NSObject <NSCopying> {
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x36cad055; S=0x36cad059; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x36cab95d; converted property
@property(readonly, assign) int elementCount;	// G=0x36cabbc1; converted property
@property(assign) float flatness;	// G=0x36caad45; S=0x36caad55; converted property
@property(assign) unsigned lineCapStyle;	// G=0x36caac89; S=0x36caac9d; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x36caacbd; S=0x36caacd1; converted property
@property(assign) float lineWidth;	// G=0x36caac69; S=0x36caac79; converted property
@property(assign) float miterLimit;	// G=0x36caad25; S=0x36caad35; converted property
@property(assign) unsigned windingRule;	// G=0x36caacf1; S=0x36caad05; converted property
+ (id)bezierPath;	// 0x36ca9ee1
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x36ca9f59
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x36ca9f19
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x36ca9f99
+ (void)clipRect:(CGRect)rect;	// 0x36caa15d
+ (CGContextRef)currentCGContext;	// 0x36ca9e91
+ (float)defaultFlatness;	// 0x36caa2c9
+ (unsigned)defaultLineCapStyle;	// 0x36caa309
+ (unsigned)defaultLineJoinStyle;	// 0x36caa329
+ (float)defaultLineWidth;	// 0x36caa349
+ (float)defaultMiterLimit;	// 0x36caa2a9
+ (unsigned)defaultWindingRule;	// 0x36caa2e9
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x36caa245
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x36caa3a5
+ (void)fillRect:(CGRect)rect;	// 0x36ca9fed
+ (float)flatness;	// 0x36cad4c9
+ (void)initialize;	// 0x36ca9df9
+ (unsigned)lineCapStyle;	// 0x36cad509
+ (unsigned)lineJoinStyle;	// 0x36cad529
+ (float)lineWidth;	// 0x36cad549
+ (float)miterLimit;	// 0x36cad4a9
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x36ca9e3d
+ (void)setDefaultFlatness:(float)flatness;	// 0x36caa2b9
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x36caa2f9
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x36caa319
+ (void)setDefaultLineWidth:(float)width;	// 0x36caa339
+ (void)setDefaultMiterLimit:(float)limit;	// 0x36caa299
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x36caa2d9
+ (void)setFlatness:(float)flatness;	// 0x36cad4b9
+ (void)setLineCapStyle:(unsigned)style;	// 0x36cad4f9
+ (void)setLineJoinStyle:(unsigned)style;	// 0x36cad519
+ (void)setLineWidth:(float)width;	// 0x36cad539
+ (void)setMiterLimit:(float)limit;	// 0x36cad499
+ (void)setWindingRule:(unsigned)rule;	// 0x36cad4d9
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x36caa1bd
+ (void)strokeRect:(CGRect)rect;	// 0x36caa04d
+ (unsigned)windingRule;	// 0x36cad4e9
- (id)init;	// 0x36caa561
- (id).cxx_construct;	// 0x36cad05d
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x36cad061
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x36cac1d5
- (id)_copyFlattenedPath;	// 0x36cab5b9
- (void)_deviceClosePath;	// 0x36cad2ed
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x36cad269
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x36cad219
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x36cad141
- (void)_doPath;	// 0x36caaed1
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x36cad3ad
- (int)_locationOfPoint:(CGPoint)point;	// 0x36cacbbd
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x36cabc39
- (void)addClip;	// 0x36cab149
- (void)appendBezierPath:(id)path;	// 0x36cabe69
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x36cac619
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x36cac5d9
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x36cac359
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x36cac07d
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x36cac001
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x36cabf75
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x36cac939
- (id)bezierPathByFlatteningPath;	// 0x36cab521
- (id)bezierPathByReversingPath;	// 0x36cab60d
- (CGRect)bounds;	// 0x36cabae5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x36cad055
- (void)closePath;	// 0x36caaa59
- (BOOL)containsPoint:(CGPoint)point;	// 0x36cacfc5
// converted property getter: - (CGRect)controlPointBounds;	// 0x36cab95d
- (id)copyWithZone:(NSZone *)zone;	// 0x36caa7c1
- (CGPoint)currentPoint;	// 0x36cab8d9
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x36caa9c5
- (void)dealloc;	// 0x36caa6b1
- (id)description;	// 0x36cad559
- (unsigned)elementAtIndex:(int)index;	// 0x36cabc25
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x36cabd21
// converted property getter: - (int)elementCount;	// 0x36cabbc1
- (void)fill;	// 0x36cab0d1
- (void)finalize;	// 0x36caa739
// converted property getter: - (float)flatness;	// 0x36caad45
- (void)flattenIntoPath:(id)path;	// 0x36cab419
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x36caae4d
- (BOOL)isEmpty;	// 0x36cab8c1
- (BOOL)isHitByPath:(id)path;	// 0x36cad045
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x36cad029
- (BOOL)isHitByRect:(CGRect)rect;	// 0x36cad041
- (BOOL)isStrokeHitByPath:(id)path;	// 0x36cad051
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x36cad049
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x36cad04d
// converted property getter: - (unsigned)lineCapStyle;	// 0x36caac89
// converted property getter: - (unsigned)lineJoinStyle;	// 0x36caacbd
- (void)lineToPoint:(CGPoint)point;	// 0x36caa955
// converted property getter: - (float)lineWidth;	// 0x36caac69
// converted property getter: - (float)miterLimit;	// 0x36caad25
- (void)moveToPoint:(CGPoint)point;	// 0x36caa945
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x36caabb5
- (void)relativeLineToPoint:(CGPoint)point;	// 0x36caab4d
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x36caaae5
- (void)removeAllPoints;	// 0x36caaa69
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x36cabdb1
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x36cad059
- (void)setClip;	// 0x36cab1c9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x36caad55
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x36caac9d
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x36caad65
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x36caacd1
// converted property setter: - (void)setLineWidth:(float)width;	// 0x36caac79
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x36caad35
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x36caad05
- (void)stroke;	// 0x36caafe5
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x36cab221
- (void)transformUsingAffineTransform:(id)transform;	// 0x36cab801
// converted property getter: - (unsigned)windingRule;	// 0x36caacf1
@end

