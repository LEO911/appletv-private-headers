/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OADProperties.h"

@class OADTextBodyAutoFit, OADTextWarp;

@interface OADTextBodyProperties : OADProperties {
	OADTextBodyAutoFit *mAutoFit;	// 12 = 0xc
	OADTextWarp *mTextWarp;	// 16 = 0x10
	double mTopInset;	// 20 = 0x14
	double mLeftInset;	// 28 = 0x1c
	double mBottomInset;	// 36 = 0x24
	double mRightInset;	// 44 = 0x2c
	double mRotation;	// 52 = 0x34
	double mColumnSpacing;	// 60 = 0x3c
	unsigned short mColumnCount;	// 68 = 0x44
	unsigned short mTextBodyId;	// 70 = 0x46
	unsigned char mTextAnchorType;	// 72 = 0x48
	unsigned char mFlowType;	// 73 = 0x49
	unsigned char mWrapType;	// 74 = 0x4a
	unsigned char mVerticalOverflowType;	// 75 = 0x4b
	unsigned char mHorizontalOverflowType;	// 76 = 0x4c
	unsigned mRepectFirstLastParagraphSpacing : 1;	// 77 = 0x4d
	unsigned mIsUpright : 1;	// 77 = 0x4d
	unsigned mIsAnchorCenter : 1;	// 77 = 0x4d
	unsigned mIsLeftToRightColumns : 1;	// 77 = 0x4d
	unsigned mHasVerticalOverflowType : 1;	// 77 = 0x4d
	unsigned mHasHorizontalOverflowType : 1;	// 77 = 0x4d
	unsigned mHasTextBodyId : 1;	// 77 = 0x4d
	unsigned mHasFlowType : 1;	// 77 = 0x4d
	unsigned mHasWrapType : 1;	// 78 = 0x4e
	unsigned mHasTextAnchorType : 1;	// 78 = 0x4e
	unsigned mHasIsAnchorCenter : 1;	// 78 = 0x4e
	unsigned mHasIsUpright : 1;	// 78 = 0x4e
	unsigned mHasRotation : 1;	// 78 = 0x4e
	unsigned mHasColumnCount : 1;	// 78 = 0x4e
	unsigned mHasColumnSpacing : 1;	// 78 = 0x4e
	unsigned mHasIsLeftToRightColumns : 1;	// 78 = 0x4e
	unsigned mHasRepectFirstLastParagraphSpacing : 1;	// 79 = 0x4f
	unsigned mHasTopInset : 1;	// 79 = 0x4f
	unsigned mHasLeftInset : 1;	// 79 = 0x4f
	unsigned mHasRightInset : 1;	// 79 = 0x4f
	unsigned mHasBottomInset : 1;	// 79 = 0x4f
}
@property(retain) id autoFit;	// G=0x36a3680d; S=0x369e2f35; converted property
@property(assign) double bottomInset;	// G=0x36a36655; S=0x369e2e0d; converted property
@property(assign) int columnCount;	// G=0x36a366c5; S=0x369e2e65; converted property
@property(assign) double columnSpacing;	// G=0x36a36731; S=0x369e2e89; converted property
@property(assign) int flowType;	// G=0x36a368fd; S=0x369e2f75; converted property
@property(assign) int horizontalOverflowType;	// G=0x36c1cac9; S=0x369e2fe1; converted property
@property(assign) BOOL isAnchorCenter;	// G=0x36a36a8d; S=0x369e3049; converted property
@property(assign) BOOL isLeftToRightColumns;	// G=0x36a367a5; S=0x369e2eb9; converted property
@property(assign) BOOL isUpright;	// G=0x36a36b61; S=0x369e30ad; converted property
@property(assign) double leftInset;	// G=0x36a36569; S=0x369e2de1; converted property
@property(assign) BOOL respectLastFirstLineSpacing;	// G=0x36c1ca5d; S=0x369e2d81; converted property
@property(assign) double rightInset;	// G=0x36a365e1; S=0x369e2e39; converted property
@property(assign) double rotation;	// G=0x36a36bcd; S=0x369e30e5; converted property
@property(assign) int textAnchorType;	// G=0x36a36af9; S=0x369e3081; converted property
@property(assign) int textBodyId;	// G=0x36c1caf9; S=0x36c1cb09; converted property
@property(retain) id textWarp;	// G=0x36b73181; S=0x369e3009; converted property
@property(assign) double topInset;	// G=0x36a364f5; S=0x369e2db5; converted property
@property(assign) int verticalOverflowType;	// G=0x36a369d5; S=0x369e2fbd; converted property
@property(assign) int wrapType;	// G=0x36a36969; S=0x369e2f99; converted property
+ (id)defaultEscherWordArtProperties;	// 0x36a90e11
+ (id)defaultProperties;	// 0x369e2b0d
- (id)init;	// 0x369e2add
- (id)initWithDefaults;	// 0x369e2b59
// converted property getter: - (id)autoFit;	// 0x36a3680d
// converted property getter: - (double)bottomInset;	// 0x36a36655
// converted property getter: - (int)columnCount;	// 0x36a366c5
// converted property getter: - (double)columnSpacing;	// 0x36a36731
- (void)dealloc;	// 0x36a33471
// converted property getter: - (int)flowType;	// 0x36a368fd
- (BOOL)hasAutoFit;	// 0x36a367d9
- (BOOL)hasBottomInset;	// 0x36a3661d
- (BOOL)hasColumnCount;	// 0x36a3668d
- (BOOL)hasColumnSpacing;	// 0x36a366f9
- (BOOL)hasFlowType;	// 0x36a368c5
- (BOOL)hasHorizontalOverflowType;	// 0x36c1ca91
- (BOOL)hasIsAnchorCenter;	// 0x36a36a55
- (BOOL)hasIsLeftToRightColumns;	// 0x36a3676d
- (BOOL)hasIsUpright;	// 0x36a36b29
- (BOOL)hasLeftInset;	// 0x36a3652d
- (BOOL)hasRespectLastFirstLineSpacing;	// 0x36a36485
- (BOOL)hasRightInset;	// 0x36a365a5
- (BOOL)hasRotation;	// 0x36a36b95
- (BOOL)hasTextAnchorType;	// 0x36a36ac1
- (BOOL)hasTextBodyId;	// 0x36a36a05
- (BOOL)hasTextWarp;	// 0x36a36a1d
- (BOOL)hasTopInset;	// 0x36a364bd
- (BOOL)hasVerticalOverflowType;	// 0x36a3699d
- (BOOL)hasWrapType;	// 0x36a36931
- (unsigned)hash;	// 0x36c1cb31
// converted property getter: - (int)horizontalOverflowType;	// 0x36c1cac9
// converted property getter: - (BOOL)isAnchorCenter;	// 0x36a36a8d
- (BOOL)isEqual:(id)equal;	// 0x36c1cd19
// converted property getter: - (BOOL)isLeftToRightColumns;	// 0x36a367a5
// converted property getter: - (BOOL)isUpright;	// 0x36a36b61
// converted property getter: - (double)leftInset;	// 0x36a36569
- (void)removeUnnecessaryOverrides;	// 0x36a35ba9
// converted property getter: - (BOOL)respectLastFirstLineSpacing;	// 0x36c1ca5d
// converted property getter: - (double)rightInset;	// 0x36a365e1
// converted property getter: - (double)rotation;	// 0x36a36bcd
// converted property setter: - (void)setAutoFit:(id)fit;	// 0x369e2f35
// converted property setter: - (void)setBottomInset:(double)inset;	// 0x369e2e0d
// converted property setter: - (void)setColumnCount:(int)count;	// 0x369e2e65
// converted property setter: - (void)setColumnSpacing:(double)spacing;	// 0x369e2e89
// converted property setter: - (void)setFlowType:(int)type;	// 0x369e2f75
// converted property setter: - (void)setHorizontalOverflowType:(int)type;	// 0x369e2fe1
// converted property setter: - (void)setIsAnchorCenter:(BOOL)center;	// 0x369e3049
// converted property setter: - (void)setIsLeftToRightColumns:(BOOL)rightColumns;	// 0x369e2eb9
// converted property setter: - (void)setIsUpright:(BOOL)upright;	// 0x369e30ad
// converted property setter: - (void)setLeftInset:(double)inset;	// 0x369e2de1
// converted property setter: - (void)setRespectLastFirstLineSpacing:(BOOL)spacing;	// 0x369e2d81
// converted property setter: - (void)setRightInset:(double)inset;	// 0x369e2e39
// converted property setter: - (void)setRotation:(double)rotation;	// 0x369e30e5
// converted property setter: - (void)setTextAnchorType:(int)type;	// 0x369e3081
// converted property setter: - (void)setTextBodyId:(int)anId;	// 0x36c1cb09
// converted property setter: - (void)setTextWarp:(id)warp;	// 0x369e3009
// converted property setter: - (void)setTopInset:(double)inset;	// 0x369e2db5
// converted property setter: - (void)setVerticalOverflowType:(int)type;	// 0x369e2fbd
// converted property setter: - (void)setWrapType:(int)type;	// 0x369e2f99
// converted property getter: - (int)textAnchorType;	// 0x36a36af9
// converted property getter: - (int)textBodyId;	// 0x36c1caf9
// converted property getter: - (id)textWarp;	// 0x36b73181
// converted property getter: - (double)topInset;	// 0x36a364f5
// converted property getter: - (int)verticalOverflowType;	// 0x36a369d5
// converted property getter: - (int)wrapType;	// 0x36a36969
@end

