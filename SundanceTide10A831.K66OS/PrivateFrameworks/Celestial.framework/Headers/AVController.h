/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import <NSObject.h> // Unknown library


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x33ef6155; S=0x33f0a139; converted property
@property(assign) id delegate;	// G=0x33f0ac75; S=0x33ef5c31; converted property
@property(assign) BOOL muted;	// G=0x33f0a1e9; S=0x33f0a281; converted property
@property(retain) id outputQTESFilePath;	// G=0x33efa1a5; S=0x33f0a3c1; converted property
@property(retain) id queue;	// G=0x33f0961d; S=0x33ef3b1d; converted property
@property(retain) id queueFeeder;	// G=0x33f09cf1; S=0x33efd56d; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x33f0a405; S=0x33ef5d29; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x33f0901d; S=0x33f09035; converted property
@property(retain) id vibrationPattern;	// G=0x33f0910d; S=0x33f0908d; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x33f0a339; S=0x33f0a34d; converted property
@property(assign) float volume;	// G=0x33ef5bd1; S=0x33efd901; converted property
+ (id)avController;	// 0x33f09301
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x33f0933d
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x33f09149
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x33f09381
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x33efc769
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x33f092ad
+ (BOOL)isSupportedMimeType:(id)type;	// 0x33f09259
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x33efd985
- (id)init;	// 0x33ef3559
- (id)initForStreaming;	// 0x33f09485
- (id)initWithError:(id *)error;	// 0x33ef397d
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x33ef3571
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x33ef35a9
- (id)_figPlayerNotifications;	// 0x33f0acf5
- (BOOL)activate:(id *)activate;	// 0x33f0a029
- (id)addNextFeederItemToQueue;	// 0x33ef6449
- (void)applyDesiredRepeatMode;	// 0x33f0a851
- (id)attributeForKey:(id)key;	// 0x33ef543d
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x33ef4301
- (BOOL)beginInterruption:(id *)interruption;	// 0x33f09f01
- (BOOL)beginRepeatGap;	// 0x33efddb5
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x33ef7e15
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x33ef7e39
- (BOOL)canBeginInterruption;	// 0x33f09fb5
- (void)cancelAllCGImageRequests;	// 0x33f0a6f9
- (void)cancelContinueAfterRepeatGap;	// 0x33ef9981
- (void)checkQueueSpace;	// 0x33ef63b9
- (void)continueAfterRepeatGap;	// 0x33f09d1d
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x33f09611
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x33efa041
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x33ef61fd
- (id)currentItem;	// 0x33ef621d
- (void)currentItemHasChanged:(id)changed;	// 0x33ef85f1
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x33ef8195
// converted property getter: - (double)currentTime;	// 0x33ef6155
- (void)dealloc;	// 0x33f01fb9
// converted property getter: - (id)delegate;	// 0x33f0ac75
- (void)dequeueDeadItem;	// 0x33f0b32d
- (void)dequeueFirstItem;	// 0x33efca99
- (void)endInterruptionWithStatus:(id)status;	// 0x33f0a0dd
- (void)ensurePlaybackQueueImmed;	// 0x33f0b22d
- (int)eqPreset;	// 0x33f0a325
- (id)errorWithDescription:(id)description code:(long)code;	// 0x33f09e65
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x33f09b39
- (void)feederRangeWasInserted:(id)inserted;	// 0x33f09631
- (void)feederRangeWasRemoved:(id)removed;	// 0x33f098b1
- (void)figPlayerNotificationHandler:(id)handler;	// 0x33f0b355
- (void)fmpEffectiveVolumeDidChange;	// 0x33f0a739
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x33ef8a3d
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x33f01b7d
- (BOOL)havePlayedCurrentItem;	// 0x33f09d09
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x33efc841
- (BOOL)isCurrentItemReady;	// 0x33f0b1e1
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x33f0960d
- (BOOL)isValid;	// 0x33f0ac95
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x33efdd09
- (id)lkLayer;	// 0x33f0a3f1
- (void)logPerformanceDataForCurrentItem;	// 0x33f0af0d
- (void)makeCurrentItemReady;	// 0x33ef99bd
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x33efd525
// converted property getter: - (BOOL)muted;	// 0x33f0a1e9
- (BOOL)okToNotifyFromThisThread;	// 0x33ef84c1
// converted property getter: - (id)outputQTESFilePath;	// 0x33efa1a5
- (void)pause;	// 0x33efc82d
- (BOOL)play:(id *)play;	// 0x33f09d31
- (BOOL)playNextItem:(id *)item;	// 0x33efca29
- (AVControllerPrivate *)privateStorage;	// 0x33f095fd
// converted property getter: - (id)queue;	// 0x33f0961d
// converted property getter: - (id)queueFeeder;	// 0x33f09cf1
- (float)rate;	// 0x33ef8741
- (void)rateDidChangeToRate:(float)rate;	// 0x33efb8ed
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x33f0b075
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x33efd1c1
- (int)repeatMode;	// 0x33efd555
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x33f0a525
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x33f0a501
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x33f09d4d
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x33f0ac8d
- (void)scheduleQueueSpaceCheck;	// 0x33ef9799
- (void)scheduleUpdateTimeMarkerObservations;	// 0x33ef87a1
- (void)seekToDate:(id)date;	// 0x33f0a161
- (void)setAVItemClass:(Class)aClass;	// 0x33f0946d
- (void)setApplyVideoTrackMatrix;	// 0x33f0a419
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x33ef4599
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x33f0a139
- (void)setCurrentTime:(double)time options:(int)options;	// 0x33efd61d
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x33ef5c31
- (void)setEQPreset:(int)preset;	// 0x33ef5c81
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x33efc8a9
- (void)setLayer:(id)layer;	// 0x33ef5e2d
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x33f0a281
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x33f0a3c1
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x33f0b251
// converted property setter: - (void)setQueue:(id)queue;	// 0x33ef3b1d
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x33efd56d
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x33ef5ecd
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x33ef9829
- (BOOL)setRepeatMode:(int)mode;	// 0x33ef5e9d
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x33ef5d29
- (void)setSubtitleRecipient:(id)recipient;	// 0x33ef5ce5
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x33f09035
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x33f0908d
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x33f0a34d
// converted property setter: - (void)setVolume:(float)volume;	// 0x33efd901
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x33efac01
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x33f0a405
- (void)stepByCount:(int)count;	// 0x33f0a1b9
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x33efd03d
- (long)updateActionAtEnd;	// 0x33ef5d41
- (void)updateTimeMarkerObservations;	// 0x33efae1d
// converted property getter: - (BOOL)vibrationEnabled;	// 0x33f0901d
// converted property getter: - (id)vibrationPattern;	// 0x33f0910d
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x33f0a339
// converted property getter: - (float)volume;	// 0x33ef5bd1
@end

