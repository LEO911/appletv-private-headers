/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import "MZKeyValueStoreOperationDelegate.h"
#import "MZKeyValueStoreDeserializeOperationDelegate.h"
#import <NSObject.h> // Unknown library

@class NSString, NSMutableArray, MZKeyValueStoreAuthenticationController, NSOperationQueue, MZKeyValueStoreTransaction, MZTaskAssertion, MZKeyValueStoreDeserializer, NSURL;
@protocol MZKeyValueStoreControllerDelegate, OS_dispatch_queue;

@interface MZKeyValueStoreController : NSObject <MZKeyValueStoreOperationDelegate, MZKeyValueStoreDeserializeOperationDelegate> {
	id<MZKeyValueStoreControllerDelegate> _delegate;	// 4 = 0x4
	NSURL *_defaultGetURL;	// 8 = 0x8
	NSURL *_defaultSetURL;	// 12 = 0xc
	NSString *_defaultDomain;	// 16 = 0x10
	BOOL _enabled;	// 20 = 0x14
	MZKeyValueStoreAuthenticationController *_authenticationController;	// 24 = 0x18
	NSMutableArray *_pendingTransactions;	// 28 = 0x1c
	MZKeyValueStoreTransaction *_currentTransaction;	// 32 = 0x20
	NSOperationQueue *_operationQueue;	// 36 = 0x24
	BOOL _resolvingError;	// 40 = 0x28
	MZKeyValueStoreDeserializer *_currentDeserializer;	// 44 = 0x2c
	NSObject<OS_dispatch_queue> *_dispatchQueue;	// 48 = 0x30
	MZTaskAssertion *_backgroundTaskAssertion;	// 52 = 0x34
	id _networkTypeObserver;	// 56 = 0x38
}
@property(retain) MZKeyValueStoreAuthenticationController *authenticationController;	// G=0x364d1f51; S=0x364d1f65; @synthesize=_authenticationController
@property(retain, nonatomic) MZTaskAssertion *backgroundTaskAssertion;	// G=0x364d2065; S=0x364d2075; @synthesize=_backgroundTaskAssertion
@property(retain, nonatomic) MZKeyValueStoreDeserializer *currentDeserializer;	// G=0x364d2025; S=0x364d2035; @synthesize=_currentDeserializer
@property(retain, nonatomic) MZKeyValueStoreTransaction *currentTransaction;	// G=0x364d1fc5; S=0x364d1fd5; @synthesize=_currentTransaction
@property(copy) NSString *defaultDomain;	// G=0x364d1f2d; S=0x364d1f41; @synthesize=_defaultDomain
@property(retain) NSURL *defaultGetURL;	// G=0x364d1ee5; S=0x364d1ef9; @synthesize=_defaultGetURL
@property(retain) NSURL *defaultSetURL;	// G=0x364d1f09; S=0x364d1f1d; @synthesize=_defaultSetURL
@property(assign) id<MZKeyValueStoreControllerDelegate> delegate;	// G=0x364d1eb9; S=0x364d1ecd; @synthesize=_delegate
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;	// G=0x364d2045; S=0x364d2055; @synthesize=_dispatchQueue
@property(assign, getter=isEnabled) BOOL enabled;	// G=0x364d1f75; S=0x364d1f8d; @synthesize=_enabled
@property(assign, nonatomic) id networkTypeObserver;	// G=0x364d2085; S=0x364d2095; @synthesize=_networkTypeObserver
@property(retain, nonatomic) NSOperationQueue *operationQueue;	// G=0x364d1fe5; S=0x364d1ff5; @synthesize=_operationQueue
@property(retain, nonatomic) NSMutableArray *pendingTransactions;	// G=0x364d1fa5; S=0x364d1fb5; @synthesize=_pendingTransactions
@property(assign, nonatomic, getter=isResolvingError) BOOL resolvingError;	// G=0x364d2005; S=0x364d2015; @synthesize=_resolvingError
- (id)initWithDomain:(id)domain baseURLForGETAll:(id)getall baseURLForPUTAll:(id)putall;	// 0x364ce5c5
- (void)_addPendingTransaction:(id)transaction;	// 0x364d0195
- (BOOL)_authenticationCanProcessTransaction:(id)transaction error:(id *)error;	// 0x364d034d
- (void)_beginBackgroundTask;	// 0x364d157d
- (BOOL)_canScheduleTransaction:(id)transaction error:(id *)error;	// 0x364d01fd
- (void)_cancelAllTransactions:(id)transactions;	// 0x364cf9f1
- (void)_cancelTransaction:(id)transaction error:(id)error;	// 0x364cfb35
- (BOOL)_clampsCanScheduleTransaction:(id)transaction error:(id *)error;	// 0x364d031d
- (void)_currentTransactionDidFinish;	// 0x364d04c9
- (BOOL)_delegateShouldScheduleTransaction:(id)_delegate error:(id *)error;	// 0x364d11f1
- (void)_delegateTransactionDidCancel:(id)_delegateTransaction withError:(id)error;	// 0x364d1389
- (BOOL)_delegateTransactionDidFail:(id)_delegateTransaction withError:(id)error;	// 0x364d1289
- (void)_delegateTransactionDidFinish:(id)_delegateTransaction;	// 0x364d1485
- (void)_endBackgroundTask;	// 0x364d1801
- (void)_errorResolutionCancel:(id)cancel;	// 0x364d110d
- (void)_errorResolutionDefault:(id)aDefault;	// 0x364d1171
- (void)_errorResolutionRetry:(id)retry;	// 0x364d1001
- (BOOL)_isEnabledForTransaction:(id)transaction error:(id *)error;	// 0x364d0261
- (BOOL)_isTransactionValid:(id)valid error:(id *)error;	// 0x364d02ad
- (void)_processCurrentTransaction;	// 0x364cfe91
- (void)_processOperationOutput:(id)output operationAuthenticated:(BOOL)authenticated;	// 0x364d0929
- (void)_processPendingTransactions;	// 0x364cfced
- (id)_requestForTransaction:(id)transaction;	// 0x364cffe1
- (void)_resolveError:(id)error resolution:(int)resolution;	// 0x364d0f21
- (void)_scheduleTransaction:(id)transaction;	// 0x364d00b9
- (id)_scheduleTransactionWithType:(int)type sinceDomainVersion:(id)version URL:(id)url keys:(id)keys processor:(id)processor;	// 0x364d0411
- (void)_transactionDidCancel:(id)_transaction withError:(id)error;	// 0x364d07a1
- (void)_transactionDidFail:(id)_transaction withError:(id)error;	// 0x364d05f5
// declared property getter: - (id)authenticationController;	// 0x364d1f51
// declared property getter: - (id)backgroundTaskAssertion;	// 0x364d2065
- (void)cancelAllTransactions;	// 0x364cf34d
- (void)cancelAllTransactionsCancelCode:(int)code;	// 0x364cf505
- (void)cancelScheduledTransaction:(id)transaction;	// 0x364cf275
- (id)clampsController;	// 0x364cf0b5
- (void)clearWeakReferencesInOperation:(id)operation;	// 0x364ceff1
// declared property getter: - (id)currentDeserializer;	// 0x364d2025
// declared property getter: - (id)currentTransaction;	// 0x364d1fc5
- (void)dealloc;	// 0x364ce981
// declared property getter: - (id)defaultDomain;	// 0x364d1f2d
// declared property getter: - (id)defaultGetURL;	// 0x364d1ee5
// declared property getter: - (id)defaultSetURL;	// 0x364d1f09
// declared property getter: - (id)delegate;	// 0x364d1eb9
- (void)deserializeOperationDidFinish:(id)deserializeOperation shouldReschedule:(BOOL)reschedule;	// 0x364d1e31
// declared property getter: - (id)dispatchQueue;	// 0x364d2045
// declared property getter: - (BOOL)isEnabled;	// 0x364d1f75
- (BOOL)isIdle;	// 0x364cf811
// declared property getter: - (BOOL)isResolvingError;	// 0x364d2005
- (void)keyValueStoreOperation:(id)operation scheduleURLOperation:(id)operation2;	// 0x364d1dc5
- (void)keyValueStoreOperationOperationDidFinish:(id)keyValueStoreOperationOperation;	// 0x364d1e21
// declared property getter: - (id)networkTypeObserver;	// 0x364d2085
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x364cec39
- (void)operation:(id)operation didReceiveResponse:(id)response;	// 0x364d19b1
- (void)operation:(id)operation failedWithError:(id)error;	// 0x364d1ae1
- (void)operation:(id)operation finishedWithOutput:(id)output;	// 0x364d18d1
// declared property getter: - (id)operationQueue;	// 0x364d1fe5
- (void)operationQueue:(id)queue willAddOperation:(id)operation;	// 0x364cf049
- (void)operationQueue:(id)queue willRemoveOperation:(id)operation;	// 0x364cf0a1
// declared property getter: - (id)pendingTransactions;	// 0x364d1fa5
- (void)performBlock:(id)block;	// 0x364cf9b1
- (void)performBlockAndWait:(id)wait;	// 0x364cf9d1
- (void)reset;	// 0x364cf77d
- (void)resolveError:(id)error resolution:(int)resolution;	// 0x364cf6c9
- (id)scheduleGetAllTransactionWithSinceDomainVersion:(id)sinceDomainVersion processor:(id)processor;	// 0x364cf0d1
- (id)scheduleGetTransactionWithKeys:(id)keys processor:(id)processor;	// 0x364cf111
- (id)scheduleSetTransactionWithKeys:(id)keys processor:(id)processor;	// 0x364cf151
- (void)scheduleTransaction:(id)transaction;	// 0x364cf191
// declared property setter: - (void)setAuthenticationController:(id)controller;	// 0x364d1f65
// declared property setter: - (void)setBackgroundTaskAssertion:(id)assertion;	// 0x364d2075
// declared property setter: - (void)setCurrentDeserializer:(id)deserializer;	// 0x364d2035
// declared property setter: - (void)setCurrentTransaction:(id)transaction;	// 0x364d1fd5
// declared property setter: - (void)setDefaultDomain:(id)domain;	// 0x364d1f41
// declared property setter: - (void)setDefaultGetURL:(id)url;	// 0x364d1ef9
// declared property setter: - (void)setDefaultSetURL:(id)url;	// 0x364d1f1d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x364d1ecd
// declared property setter: - (void)setDispatchQueue:(id)queue;	// 0x364d2055
// declared property setter: - (void)setEnabled:(BOOL)enabled;	// 0x364d1f8d
// declared property setter: - (void)setNetworkTypeObserver:(id)observer;	// 0x364d2095
// declared property setter: - (void)setOperationQueue:(id)queue;	// 0x364d1ff5
// declared property setter: - (void)setPendingTransactions:(id)transactions;	// 0x364d1fb5
// declared property setter: - (void)setResolvingError:(BOOL)error;	// 0x364d2015
@end

