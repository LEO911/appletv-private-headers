/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import <NSObject.h> // Unknown library
#import "CorePDF-Structs.h"
#import "CPDisposable.h"


@interface CPCluster : NSObject <CPDisposable> {
	const XXStruct_lVmCAC *profile;	// 4 = 0x4
	unsigned xCount;	// 8 = 0x8
	double *x;	// 12 = 0xc
	double *dx;	// 16 = 0x10
	unsigned *dxOrderIndex;	// 20 = 0x14
	unsigned interClusterMinIndex;	// 24 = 0x18
	double *ddx;	// 28 = 0x1c
	unsigned *ddxOrderIndex;	// 32 = 0x20
	unsigned interLevelMinIndex;	// 36 = 0x24
	unsigned minClusterSize;	// 40 = 0x28
	double maxClusterSpread;	// 44 = 0x2c
	double minInterClusterDiff;	// 52 = 0x34
	double minInterLevel2ndDiff;	// 60 = 0x3c
	unsigned clusterCount;	// 68 = 0x44
	XXStruct_VnwizD *xStats;	// 72 = 0x48
	unsigned levels;	// 76 = 0x4c
	XXStruct_VnwizD *dxStats;	// 80 = 0x50
	BOOL ownData;	// 84 = 0x54
	BOOL ownDifferences;	// 85 = 0x55
}
@property(readonly, assign) unsigned clusterCount;	// G=0x3223f009; converted property
@property(readonly, assign) unsigned levels;	// G=0x3223f0a1; converted property
+ (void)clusterTextLine:(id)line;	// 0x3223f301
+ (unsigned *)createOrderIndexFor:(double *)aFor ofSize:(unsigned)size;	// 0x3223d491
+ (void)reclusterTextLine:(id)line fromWordIndex:(unsigned)wordIndex count:(unsigned *)count;	// 0x3223f579
- (id)init;	// 0x3223d1b1
- (id)initWithProfile:(const XXStruct_lVmCAC *)profile;	// 0x3223d1cd
- (void)analyzeDensities;	// 0x3223e8c9
- (void)analyzeDifferences;	// 0x3223e2a1
- (BOOL)applyDifferenceHints:(XXStruct_VnwizD *)hints count:(unsigned)count;	// 0x3223ed09
- (void)assembleDataStats;	// 0x3223e469
- (void)assembleDensityDifferenceStats;	// 0x3223e6e9
- (void)assembleDifferenceStats;	// 0x3223d851
// converted property getter: - (unsigned)clusterCount;	// 0x3223f009
- (XXStruct_VnwizD)clusterStatisticsAtIndex:(unsigned)index;	// 0x3223f0b1
- (BOOL)coalesceFrom:(unsigned)from to:(unsigned)to;	// 0x3223df39
- (void)computeDataFromDifferences;	// 0x3223d3fd
- (void)computeDifferencesFromData;	// 0x3223d371
- (void)dealloc;	// 0x3223d331
- (XXStruct_VnwizD)differenceClusterStatisticsAtIndex:(unsigned)index;	// 0x3223f119
- (void)dispose;	// 0x3223d231
- (void)finalize;	// 0x3223d2f1
- (void)findClusters:(double *)clusters count:(unsigned)count;	// 0x3223ec39
- (void)findClustersFromCharacterSequence:(id)characterSequence withSpaceHint:(BOOL)spaceHint;	// 0x3223fa11
- (void)findClustersFromDifferences:(double *)differences count:(unsigned)count;	// 0x3223ec89
- (void)findDensityClusters:(double *)clusters count:(unsigned)count;	// 0x3223ecb9
- (BOOL)joinClosestLevelPairFrom:(unsigned)from to:(unsigned)to;	// 0x3223db71
- (BOOL)joinLevelsFrom:(unsigned)from to:(unsigned)to;	// 0x3223da51
- (XXStruct_VnwizD)largestClusterStatistics;	// 0x3223f169
// converted property getter: - (unsigned)levels;	// 0x3223f0a1
- (void)makeWords:(XXStruct_iDweLB *)words count:(unsigned)count fromCharacterSequence:(id)characterSequence charOffset:(unsigned)offset;	// 0x32240131
- (void)setMaximumClusterSpread:(double)spread;	// 0x3223e6a9
- (void)setMinimumClusterSize:(unsigned)size;	// 0x3223e699
- (void)setMinimumRecognizedInterClusterDifference:(double)difference;	// 0x3223e6bd
- (void)setMinimumRecognizedInterLevel2ndDifference:(double)difference;	// 0x3223e6d1
- (BOOL)splitLevelAtIndex:(unsigned)index betweenValue:(double)value andValue:(double)value3;	// 0x3223dc31
- (void)splitSecondDifferences;	// 0x3223d4d1
- (void)tryLevel0SplitBetween:(double)between and:(double)anAnd usingHints:(XXStruct_VnwizD *)hints;	// 0x3223f9c9
@end

