/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, NSDate, MobileCalDAVPrincipal, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString, NSSet;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x348901c9; S=0x348901fd; 
@property(readonly, assign) NSSet *calendars;	// G=0x34890999; 
@property(retain) NSURL *collectionSetURL;	// G=0x348906b1; S=0x348906f5; 
@property(retain) id host;	// G=0x34894f5d; S=0x34894fd5; converted property
@property(assign) BOOL isRefreshing;	// G=0x34895351; S=0x34895369; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x34890785; S=0x348907f1; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x348953d5; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x348953fd; S=0x34895411; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x348953e9; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x348953a5; S=0x348953bd; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x348913ad; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x34891375; 
@property(assign) int overriddenPort;	// G=0x3489031d; S=0x348902bd; 
@property(retain) NSString *overriddenScheme;	// G=0x348903b1; S=0x34890351; 
@property(retain) NSString *overriddenServer;	// G=0x348902a1; S=0x34890241; 
@property(assign) int port;	// G=0x34895265; S=0x348951dd; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x34895435; S=0x34895449; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x34895461; S=0x34895475; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x348903cd; S=0x348903ed; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x34895421; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x34895381; S=0x34895395; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x3489509d; S=0x34895115; converted property
@property(retain) id searchPropertySet;	// G=0x34890731; S=0x34890741; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x3489548d; S=0x348954a5; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x34891191; S=0x34891209; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x348913e5; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x3489147d; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x34891431; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x348901a9; S=0x3489010d; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x348915a9; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x348914e5; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x348915fd; converted property
@property(assign) BOOL useSSL;	// G=0x34895321; S=0x348952f1; converted property
@property(retain) id username;	// G=0x34894e29; S=0x34894e91; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x34891359; 
@property(assign) BOOL wasMigrated;	// G=0x34890835; S=0x3489087d; 
+ (Class)accountClass;	// 0x3488f389
+ (Class)clientClass;	// 0x3488f3a5
+ (id)defaultProperties;	// 0x3488eaed
+ (id)supportedDataclasses;	// 0x3488f3c1
- (id)init;	// 0x3488ec31
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x3488eaa9
- (id)initWithProperties:(id)properties;	// 0x3488ea65
- (id)_calendarConstraintsPath;	// 0x34891751
- (id)_calendarConstraintsResource;	// 0x3489164d
- (void)_clearOrphanedCalendarItemChangesOfType:(int)type withContext:(id)context goodCalendarIds:(id)ids;	// 0x34891f29
- (void)_clearOrphanedChangesWithChangesCall:(/*function-pointer*/ void *)changesCall clearChanges:(/*function-pointer*/ void *)changes withContext:(id)context;	// 0x34892191
- (void)_clearOrphanedChangesWithContext:(id)context;	// 0x348923dd
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x34892d6d
- (void)_collectMoveActions;	// 0x34893281
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x3488fbad
- (id)_oldURLsForKeychain;	// 0x3488f955
- (id)_powerAssertionContext;	// 0x34894885
- (id)_powerAssertionGroupIdentifier;	// 0x34894889
- (void)_setSpinning:(BOOL)spinning;	// 0x34891ded
- (void)_updateCalendarStore:(BOOL)store;	// 0x34891c1d
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x34891b19
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x3489181d
- (void)_upgradeAccountToTelluride;	// 0x3488f459
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x3488fbb9
- (BOOL)accountNeedsUpgrade;	// 0x34890011
- (void)addCalendar:(id)calendar;	// 0x348908d5
- (void)addPrincipal:(id)principal;	// 0x348910fd
// declared property getter: - (int)calDAVAccountVersion;	// 0x348901c9
// declared property getter: - (id)calendars;	// 0x34890999
- (void)cancelAllSearchQueries;	// 0x34894139
- (void)cancelRefresh;	// 0x34891e51
- (void)cancelSearchQuery:(id)query;	// 0x34893fd5
- (void)checkValidityWithConsumer:(id)consumer;	// 0x3489463d
// declared property getter: - (id)collectionSetURL;	// 0x348906b1
- (void)configureAccount;	// 0x3488e5ad
- (void *)copyCalStore;	// 0x348917c9
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x34894d9d
- (int)coreDAVLogLevel;	// 0x34894d7d
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x34894e05
- (int)coreDAVOutputLevel;	// 0x34894d95
- (void)coreDAVTransmittedDataFinished;	// 0x34894e25
- (void)dealloc;	// 0x3488ec71
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x34894299
- (void)dropPowerAssertions;	// 0x348949a5
// converted property getter: - (id)host;	// 0x34894f5d
- (BOOL)isCalDAVAccount;	// 0x34894a45
- (BOOL)isEqualToAccount:(id)account;	// 0x34894a49
// declared property getter: - (BOOL)isRefreshing;	// 0x34895351
// declared property getter: - (BOOL)isWritable;	// 0x34890785
// declared property getter: - (id)itemIDsToMoveActions;	// 0x348953d5
- (id)localizedIdenticalAccountFailureMessage;	// 0x34894c55
- (id)localizedInvalidPasswordMessage;	// 0x34894ccd
// declared property getter: - (id)mainPrincipal;	// 0x348953fd
// declared property getter: - (id)movedItemURLStrings;	// 0x348953e9
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x348953a5
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x348913ad
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x34891375
// declared property getter: - (int)overriddenPort;	// 0x3489031d
// declared property getter: - (id)overriddenScheme;	// 0x348903b1
// declared property getter: - (id)overriddenServer;	// 0x348902a1
- (void)performSearchQuery:(id)query;	// 0x34893c49
// converted property getter: - (int)port;	// 0x34895265
// declared property getter: - (int)preferredEventDaysToSync;	// 0x34895435
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x34895461
- (void)prepareForAccountSave;	// 0x3488eec5
// converted property getter: - (id)principalURL;	// 0x348903cd
// declared property getter: - (id)principals;	// 0x34895421
- (id)properties;	// 0x3488f349
- (void)reattainPowerAssertions;	// 0x348949f5
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x348925e1
// declared property getter: - (id)refreshContext;	// 0x34895381
- (void)refreshWithContext:(id)context;	// 0x34893559
- (void)releasePowerAssertion;	// 0x348948fd
- (void)reloadCalendars;	// 0x3489102d
- (void)removeCalendar:(id)calendar;	// 0x3489092d
- (void)removePrincipal:(id)principal;	// 0x34891155
- (void)retainPowerAssertion;	// 0x34894899
// converted property getter: - (id)scheme;	// 0x3489509d
// declared property getter: - (id)searchPropertySet;	// 0x34890731
- (BOOL)searchQueriesRunning;	// 0x34894269
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x3489548d
- (id)serverBaseURL;	// 0x348905c9
// declared property getter: - (id)serverVersion;	// 0x34891191
- (void)setAccountDescription:(id)description;	// 0x3489066d
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x348901fd
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x348906f5
// converted property setter: - (void)setHost:(id)host;	// 0x34894fd5
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x34895369
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x348907f1
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x34895411
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x348953bd
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x348902bd
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x34890351
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x34890241
// converted property setter: - (void)setPort:(int)port;	// 0x348951dd
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x34895449
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x34895475
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x348903ed
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x34895395
// converted property setter: - (void)setScheme:(id)scheme;	// 0x34895115
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x34890741
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x348954a5
// declared property setter: - (void)setServerVersion:(id)version;	// 0x34891209
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x3489010d
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x348952f1
// converted property setter: - (void)setUsername:(id)username;	// 0x34894e91
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x3489087d
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x348913e5
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x3489147d
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x34891431
- (BOOL)shouldLogTransmittedData;	// 0x34894de1
- (void)shutdown;	// 0x34894295
- (id)spinnerIdentifiers;	// 0x34891d8d
- (id)stateString;	// 0x3488f3f1
// declared property getter: - (id)subscribedCalendars;	// 0x348901a9
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x3488f3e1
// declared property getter: - (BOOL)supportsEvents;	// 0x348915a9
// declared property getter: - (BOOL)supportsReminders;	// 0x348914e5
- (void)task:(id)task didFinishWithError:(id)error;	// 0x34893911
// converted property getter: - (id)taskManager;	// 0x348915fd
- (BOOL)upgradeAccount;	// 0x3488ff89
// converted property getter: - (BOOL)useSSL;	// 0x34895321
// converted property getter: - (id)username;	// 0x34894e29
- (BOOL)usesTokenAuth;	// 0x348915f9
// declared property getter: - (id)viewedTimeZone;	// 0x34891359
// declared property getter: - (BOOL)wasMigrated;	// 0x34890835
- (id)wellKnownPaths;	// 0x348944a5
@end

