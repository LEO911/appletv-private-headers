/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

#import "WebCore-Structs.h"
#import "DOMEventTarget.h"
#import "DOMObject.h"

@class DOMDocument, NSString, DOMElement, DOMNamedNodeMap, DOMNodeList;

@interface DOMNode : DOMObject <DOMEventTarget> {
}
@property(readonly, assign) DOMNamedNodeMap *attributes;	// G=0x354cf105; 
@property(readonly, assign) NSString *baseURI;	// G=0x354cf72d; 
@property(readonly, assign) DOMNodeList *childNodes;	// G=0x35390501; 
@property(readonly, assign) DOMNode *firstChild;	// G=0x35344721; 
@property(readonly, assign) BOOL isContentEditable;	// G=0x354cfd81; 
@property(readonly, assign) DOMNode *lastChild;	// G=0x354ceff9; 
@property(readonly, assign) NSString *localName;	// G=0x354cf611; 
@property(readonly, assign) NSString *namespaceURI;	// G=0x354cf21d; 
@property(readonly, assign) DOMNode *nextSibling;	// G=0x3535596d; 
@property(readonly, assign) NSString *nodeName;	// G=0x3538fc69; 
@property(readonly, assign) unsigned short nodeType;	// G=0x35355869; 
@property(copy) NSString *nodeValue;	// G=0x353bc831; S=0x354cee3d; 
@property(readonly, assign) DOMDocument *ownerDocument;	// G=0x3537e4ed; 
@property(readonly, assign) DOMElement *parentElement;	// G=0x354cfc65; 
@property(readonly, assign) DOMNode *parentNode;	// G=0x353b46cd; 
@property(copy) NSString *prefix;	// G=0x354cf339; S=0x354cf455; 
@property(readonly, assign) DOMNode *previousSibling;	// G=0x353be6ad; 
@property(copy) NSString *textContent;	// G=0x354cf8ed; S=0x354cfaad; 
- (Element *)_linkElement;	// 0x353a3371
- (RootObject *)_rootObject;	// 0x35460a45
- (WKQuad)absoluteQuad;	// 0x353a7f65
- (WKQuad)absoluteQuadAndInsideFixedPosition:(BOOL *)position;	// 0x353a7f95
- (id)absoluteQuads;	// 0x353a036d
- (void)addEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x354d1771
- (void)addEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x3537a895
- (id)appendChild:(id)child;	// 0x3538ed29
// declared property getter: - (id)attributes;	// 0x354cf105
// declared property getter: - (id)baseURI;	// 0x354cf72d
- (id)borderRadii;	// 0x353a0eb1
- (CGRect)boundingBox;	// 0x353a0559
- (CGRect)boundingBoxUsingTransforms;	// 0x35460a79
- (id)boundingBoxes;	// 0x354e27a9
- (CGRect)boundingFrame;	// 0x35460ead
// declared property getter: - (id)childNodes;	// 0x35390501
- (id)cloneNode:(BOOL)node;	// 0x354d0511
- (unsigned short)compareDocumentPosition:(id)position;	// 0x354d1455
- (float)computedFontSize;	// 0x35460ed1
- (BOOL)contains:(id)contains;	// 0x354d1565
- (BOOL)containsOnlyInlineObjects;	// 0x354e2921
- (void)dealloc;	// 0x351a75b9
- (id)description;	// 0x3546093d
- (BOOL)dispatchEvent:(id)event;	// 0x354d1e45
- (void)finalize;	// 0x354cede5
- (id)findExplodedTextNodeAtPoint:(CGPoint)point;	// 0x354e2f69
// declared property getter: - (id)firstChild;	// 0x35344721
- (BOOL)hasAttributes;	// 0x354d0bdd
- (BOOL)hasChildNodes;	// 0x353446e5
- (CGRect)hrefFrame;	// 0x35460ad1
- (id)hrefLabel;	// 0x35460b29
- (id)hrefTarget;	// 0x353a3325
- (id)hrefTitle;	// 0x35460c99
- (id)hrefURL;	// 0x353a3399
- (WKQuad)innerFrameQuad;	// 0x353ac871
- (id)insertBefore:(id)before :(id)arg2;	// 0x354d0025
- (id)insertBefore:(id)before refChild:(id)child;	// 0x354cfe81
- (void)inspect;	// 0x354d1675
// declared property getter: - (BOOL)isContentEditable;	// 0x354cfd81
- (BOOL)isDefaultNamespace:(id)aNamespace;	// 0x354d1051
- (BOOL)isEqualNode:(id)node;	// 0x354d0ce9
- (BOOL)isSameNode:(id)node;	// 0x353a9569
- (BOOL)isSelectableBlock;	// 0x354e296d
- (BOOL)isSupported:(id)supported :(id)arg2;	// 0x354d09ad
- (BOOL)isSupported:(id)supported version:(id)version;	// 0x354d077d
// declared property getter: - (id)lastChild;	// 0x354ceff9
- (id)lineBoxQuads;	// 0x353a0b59
- (id)lineBoxRects;	// 0x35460a69
// declared property getter: - (id)localName;	// 0x354cf611
- (id)lookupNamespaceURI:(id)uri;	// 0x354d11fd
- (id)lookupPrefix:(id)prefix;	// 0x354d0df9
// declared property getter: - (id)namespaceURI;	// 0x354cf21d
- (id)nextFocusNode;	// 0x353ab0e5
// declared property getter: - (id)nextSibling;	// 0x3535596d
// declared property getter: - (id)nodeName;	// 0x3538fc69
// declared property getter: - (unsigned short)nodeType;	// 0x35355869
// declared property getter: - (id)nodeValue;	// 0x353bc831
- (void)normalize;	// 0x354d0681
// declared property getter: - (id)ownerDocument;	// 0x3537e4ed
// declared property getter: - (id)parentElement;	// 0x354cfc65
// declared property getter: - (id)parentNode;	// 0x353b46cd
// declared property getter: - (id)prefix;	// 0x354cf339
- (id)previousFocusNode;	// 0x353ac0b9
// declared property getter: - (id)previousSibling;	// 0x353be6ad
- (id)rangeOfContainingParagraph;	// 0x354e29ad
- (id)removeChild:(id)child;	// 0x35390669
- (void)removeEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x354d1c21
- (void)removeEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x354d19fd
- (id)replaceChild:(id)child :(id)arg2;	// 0x354d036d
- (id)replaceChild:(id)child oldChild:(id)child2;	// 0x354d01c9
// declared property setter: - (void)setNodeValue:(id)value;	// 0x354cee3d
// declared property setter: - (void)setPrefix:(id)prefix;	// 0x354cf455
// declared property setter: - (void)setTextContent:(id)content;	// 0x354cfaad
// declared property getter: - (id)textContent;	// 0x354cf8ed
- (float)textHeight;	// 0x354e2f2d
- (id)textRects;	// 0x35460efd
@end

