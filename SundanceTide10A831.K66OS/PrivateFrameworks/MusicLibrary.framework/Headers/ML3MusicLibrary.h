/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, ML3DatabaseMetadata, ML3NondurableWriteSet, ML3UbiquitousDatabase, MLSQLiteConnection, ML3Container, NSCountedSet, NSMutableArray, ML3MusicLibrary_SQLiteDatabaseContext, NSArray, ML3SqliteDatabase;
@protocol OS_dispatch_queue;

@interface ML3MusicLibrary : NSObject {
	NSString *_path;	// 4 = 0x4
	BOOL _enableWrites;	// 8 = 0x8
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 12 = 0xc
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 16 = 0x10
	MLSQLiteConnection *_inMemoryDatabaseConnection;	// 20 = 0x14
	NSObject<OS_dispatch_queue> *_atomicityQueue;	// 24 = 0x18
	ML3UbiquitousDatabase *_ubiquitousDatabase;	// 28 = 0x1c
	ML3SqliteDatabase *_geniusDatabase;	// 32 = 0x20
	NSCountedSet *_notifyNamesToIgnore;	// 36 = 0x24
	NSMutableArray *_pendingNotifyPostNames;	// 40 = 0x28
	NSString *_notifyName;	// 44 = 0x2c
	int _notifyToken;	// 48 = 0x30
	NSString *_nonContentsNotifyName;	// 52 = 0x34
	int _nonContentsNotifyToken;	// 56 = 0x38
	NSString *_invisiblePropertyNotifyName;	// 60 = 0x3c
	int _invisiblePropertyNotifyToken;	// 64 = 0x40
	NSString *_displayValuesNotifyName;	// 68 = 0x44
	int _displayValuesNotifyToken;	// 72 = 0x48
	NSString *_syncGenerationNotifyName;	// 76 = 0x4c
	int _syncGenerationNotifyToken;	// 80 = 0x50
	NSString *_libraryUIDNotifyName;	// 84 = 0x54
	int _libraryUIDNotifyToken;	// 88 = 0x58
	BOOL _requiresProcessAssertion;	// 92 = 0x5c
	int _backupDisabledCount;	// 96 = 0x60
	BOOL _backupNeeded;	// 100 = 0x64
	BOOL _hasEverConnectedToDatabase;	// 101 = 0x65
	id _mcSettingsObserver;	// 104 = 0x68
	id _loggingObserver;	// 108 = 0x6c
	NSObject<OS_dispatch_queue> *_nondurableConcurrentQueue;	// 112 = 0x70
	ML3NondurableWriteSet *_nondurableWriteSet;	// 116 = 0x74
	NSString *_artworkDirectory;	// 120 = 0x78
	BOOL _artworkDirectoryFilesystemRepresentation[1024];	// 124 = 0x7c
	BOOL _hasEverConnectedTo;	// 1148 = 0x47c
	BOOL _keepPresignedValidyAfterVerification;	// 1149 = 0x47d
}
@property(readonly, assign) long long autoFilledTracksTotalSize;	// G=0x305b61ed; 
@property(readonly, assign) long long currentContentRevision;	// G=0x30592d79; 
@property(readonly, assign) long long currentRevision;	// G=0x3058b9ed; 
@property(readonly, assign) ML3DatabaseMetadata *databaseInfo;	// G=0x3058eb6d; 
@property(readonly, retain) ML3SqliteDatabase *geniusDatabase;	// G=0x3059d931; converted property
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x305ba211; @synthesize=_hasEverConnectedTo
@property(assign, nonatomic) BOOL keepPresignedValidyAfterVerification;	// G=0x305ba221; S=0x305ba231; @synthesize=_keepPresignedValidyAfterVerification
@property(retain) id libraryUID;	// G=0x30597351; S=0x305b4ec5; converted property
@property(readonly, assign) NSArray *localizedSectionIndexTitles;	// G=0x30595b61; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x30591841; 
@property(readonly, assign, nonatomic, getter=isNondurableWritingActive) BOOL nondurableWritingActive;	// G=0x3059bcc9; 
@property(readonly, assign) NSString *path;	// G=0x3058d4bd; @synthesize=_path
@property(readonly, assign) long long persistentID;	// G=0x305b4e31; 
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x3058eae5; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x30591091; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x305b2c61; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x3058d4d5; 
@property(assign) long long syncGenerationID;	// G=0x30597f89; S=0x305b4e4d; 
@property(readonly, retain) ML3UbiquitousDatabase *ubiquitousDatabase;	// G=0x3058dc05; converted property
@property(readonly, assign, nonatomic) BOOL writable;	// G=0x305b069d; 
+ (BOOL)_inTransactionUpdateSearchMapOnConnection:(id)transactionUpdateSearchMapOnConnection;	// 0x305e5ab1
+ (BOOL)_inTransactionUpdateSortMapOnConnection:(id)transactionUpdateSortMapOnConnection;	// 0x305e5091
+ (id)_newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes forLibrary:(id)library;	// 0x30585b8d
+ (id)_purgeableTrackPredicateWithUrgency:(int)urgency;	// 0x305b5a81
+ (void)_stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x305b0d69
+ (id)allArtworkFormatSizes;	// 0x305b678d
+ (id)allSchemaSQL;	// 0x305df005
+ (id)allTables;	// 0x305df2c5
+ (MLArtworkFormatSpec)artworkFormatSpecForArtworkFormatID:(unsigned)artworkFormatID;	// 0x30597a71
+ (void)beginDatabaseMigrationIfNecessary;	// 0x3058d3d5
+ (BOOL)buildDatabaseTablesUsingConnection:(id)connection;	// 0x305df669
+ (void)connection:(id)connection didOpenDBHandle:(sqlite3 *)handle;	// 0x305b092d
+ (void)connection:(id)connection willCloseDBHandle:(sqlite3 *)handle;	// 0x305b0961
+ (id)controlDirectoryPathWithBasePath:(id)basePath;	// 0x305fbec5
+ (BOOL)createIndexesUsingConnection:(id)connection;	// 0x305e2659
+ (int)currentUserVersion;	// 0x3058d869
+ (BOOL)dropIndexesUsingConnection:(id)connection;	// 0x305e2639
+ (BOOL)dropIndexesUsingConnection:(id)connection tableNames:(const char *)names;	// 0x305e23e1
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x305b4851
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x305b2535
+ (id)fallbackGeniusDatabaseFilePath;	// 0x305b0791
+ (id)geniusDatabaseFilePath;	// 0x3059da75
+ (BOOL)importationEnabled;	// 0x305affcd
+ (id)indexSchemaSQL;	// 0x305df52d
+ (void)initialize;	// 0x30583925
+ (id)itemIndexSchemaSQL;	// 0x305df4a5
+ (id)itemSchemaSQL;	// 0x305defed
+ (id)localizedSectionHeaderForSectionHeader:(id)sectionHeader;	// 0x305994a1
+ (id)localizedSectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x30599421
+ (id)mainDatabasePath;	// 0x3058510d
+ (id)mediaFolderPath;	// 0x305fbdcd
+ (id)mediaFolderRelativePath:(id)path;	// 0x305fbdf5
+ (BOOL)migrateToCurrentUserVersionUsingConnection:(id)currentUserVersionUsingConnection;	// 0x305dfa7d
+ (id)newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes;	// 0x30585b69
+ (unsigned)numberOfArtworkStyles;	// 0x305b6c7d
+ (BOOL)orderingLanguageMatchesSystemUsingConnection:(id)connection;	// 0x3058d875
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder;	// 0x305fc5a1
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base createParentFolderIfNecessary:(BOOL)necessary;	// 0x305fc5c5
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base isFolder:(BOOL *)folder;	// 0x305fbee1
+ (unsigned)readableArtworkFormatIDForArtworkFormatID:(unsigned)artworkFormatID;	// 0x305b69ad
+ (id)sectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x30599061
+ (id)sectionIndexTitles;	// 0x30598ff9
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x30583db9
+ (id)sharedLibrary;	// 0x30583f0d
+ (id)sortMapSchemaSQL;	// 0x305defd5
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x305b0d3d
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x305b0d15
+ (id)storeLinkSchemaSQL;	// 0x305defbd
+ (id)systemCurrentLanguage;	// 0x3058db65
+ (BOOL)updateSortMapOnConnection:(id)connection;	// 0x305e5b31
+ (BOOL)updateTrackIntegrityOnConnection:(id)connection;	// 0x305b065d
+ (BOOL)userVersionMatchesSystemUsingConnection:(id)connection;	// 0x3058d7c1
+ (int)userVersionUsingConnection:(id)connection;	// 0x3058d821
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x30584929
- (void).cxx_destruct;	// 0x305ba241
- (void)_accessAccountCacheDBForSQL:(id)sql usingBlock:(id)block;	// 0x305b9541
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x3058bbb1
- (id)_albumArtistGroupingNameFromDataSource:(id)dataSource;	// 0x305ef29d
- (long long)_albumArtistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingAlbumArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoAlbumArtistStatement:(id)statement;	// 0x305ef5fd
- (id)_albumGroupingIdentifierFromDataSource:(id)dataSource albumArtistPersistentID:(long long)anId groupingKeysForGroupingNames:(id)groupingNames;	// 0x305efb21
- (long long)_albumPIDFromDataSource:(id)dataSource sortableNames:(id)names albumArtistPID:(long long)pid existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers insertIntoAlbumStatement:(id)statement groupingKeysForGroupingNames:(id)groupingNames;	// 0x305eff4d
- (id)_artistGroupingNameFromDataSource:(id)dataSource;	// 0x305ee935
- (long long)_artistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoItemArtistStatement:(id)statement;	// 0x305eec4d
- (long long)_baseLocationPIDFromDataSource:(id)dataSource;	// 0x305f1535
- (BOOL)_commitNondurableWrites;	// 0x3059a61d
- (id)_composerGroupingNameFromDataSource:(id)dataSource;	// 0x305f0d25
- (long long)_composerPIDFromDataSource:(id)dataSource sortableNames:(id)names existingComposerPIDsForGroupingKeys:(id)groupingKeys insertIntoComposerStatement:(id)statement;	// 0x305f0f05
- (void)_delayableNotifyPost:(id)post localNotificationName:(id)name;	// 0x3059c3b1
- (BOOL)_drawAndWriteImage:(CGImageRef)image outputWidth:(unsigned long)width outputHeight:(unsigned long)height colorSpace:(CGColorSpaceRef)space cacheID:(id)anId formatID:(unsigned)anId6 artworkStyle:(XXStruct_$eUQoB *)style resultingImageSubRect:(CGRect *)rect resultingLength:(unsigned *)length;	// 0x305b1c61
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x305afd15
- (void)_enumeratePurgeableTracksForUrgency:(int)urgency respectSongMattress:(BOOL)mattress usingBlock:(id)block;	// 0x305b5c61
- (id)_existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers;	// 0x305f4af5
- (id)_existingCollectionPIDsForTable:(id)table groupingNames:(id)names groupingKeysForGroupingNames:(id)groupingNames;	// 0x305f42ed
- (id)_genreGroupingNameFromDataSource:(id)dataSource;	// 0x305f07c5
- (long long)_genrePIDFromDataSource:(id)dataSource sortableNames:(id)names existingGenrePIDsForGroupingKeys:(id)groupingKeys insertIntoGenreStatement:(id)statement;	// 0x305f098d
- (id)_insertIntoAlbumArtistStatement;	// 0x305ef429
- (id)_insertIntoAlbumStatement;	// 0x305efd05
- (id)_insertIntoChapterUsingVtabSQL;	// 0x305f3d61
- (id)_insertIntoComposerStatement;	// 0x305f0d45
- (id)_insertIntoGenreStatement;	// 0x305f07e5
- (id)_insertIntoItemArtistStatement;	// 0x305eea61
- (id)_insertIntoItemExtraUsingVtabSQL;	// 0x305f2815
- (id)_insertIntoItemSearchUsingVtabSQL;	// 0x305f37ed
- (id)_insertIntoItemStatsUsingVtabSQL;	// 0x305f3341
- (id)_insertIntoItemUsingVtabSQL;	// 0x305f1b51
- (id)_insertIntoPurgeableListUsingVtabSQL;	// 0x305f3a49
- (id)_insertStringsIntoSortMapOrFail:(id)fail;	// 0x305e3175
- (long long)_int64ValueForFirstRowAndColumnWithSQL:(id)sql;	// 0x3058ba0d
- (long long)_locationKindPIDFromDataSource:(id)dataSource;	// 0x305f135d
- (void)_migrateArtworkFrom:(unsigned)from to:(unsigned)to;	// 0x305b8bcd
- (BOOL)_mustProcessLanguageChange;	// 0x305b49b5
- (id)_newGeniusDBConnectionAtPath:(id)path;	// 0x3059da91
- (void)_onBackgroundQueuePerformDatabaseContextBlock:(id)block;	// 0x3058bdc1
- (void)_onMainQueuePerformDatabaseContextBlock:(id)block;	// 0x3058fc1d
- (void)_populateNameOrderForPID:(unordered_map<long long, ML3NameOrder, std::tr1::hash<long long>, std::equal_to<long long>, std::allocator<std::pair<const long long, ML3NameOrder>>, false> *)pid table:(id)table nameSQL:(id)sql;	// 0x305f3ee5
- (void)_postChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x305b472d
- (void)_postDisplayValuesChangeNotificationLocalOnly:(BOOL)only;	// 0x305b481d
- (void)_postInvisiblePropertyChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x305b47e9
- (void)_postLibraryNotification:(id)notification isSourceExternal:(BOOL)external userInfo:(id)info;	// 0x3059cb49
- (void)_postNonContentsChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x3059c37d
- (id)_replaceIntoPurgeableListUsingVtabSQL;	// 0x305f3be5
- (BOOL)_runStatementWithSQL:(id)sql bindingValue:(id)value :(id)arg3;	// 0x305b1a65
- (void)_scheduleCommitNondurableWritesAfterTimeInterval:(double)interval;	// 0x305b9b51
- (BOOL)_writeCGImage:(CGImageRef)image length:(unsigned long)length forCacheID:(id)cacheID formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x305b2069
- (BOOL)_writeImageBytes:(const void *)bytes length:(unsigned long)length formatID:(unsigned)anId cacheID:(id)anId4;	// 0x305b2151
- (void)accessConnectionUsingBlock:(id)block;	// 0x3058d61d
- (void)accessDatabaseUsingBlock:(id)block;	// 0x305b1169
- (void)accessSortKeyBuilder:(id)builder;	// 0x3059625d
- (long long)addStringToSortMap:(id)sortMap;	// 0x305b4a51
- (id)albumArtistForEffectiveAlbumArtistName:(id)effectiveAlbumArtistName;	// 0x305d4a15
- (id)albumForAlbumArtistPersistentID:(long long)albumArtistPersistentID albumName:(id)name feedURL:(id)url seasonNumber:(id)number compilation:(BOOL)compilation;	// 0x305c1b8d
- (id)appleIDForDSID:(unsigned long long)dsid;	// 0x305b9841
- (id)artistForArtistName:(id)artistName seriesName:(id)name;	// 0x305c0c29
- (id)artistGroupingKeyForArtistName:(id)artistName seriesName:(id)name;	// 0x305c0bbd
- (id)artworkDataForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x30597bbd
// declared property getter: - (long long)autoFilledTracksTotalSize;	// 0x305b61ed
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency;	// 0x305b6201
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency respectSongMattress:(BOOL)mattress;	// 0x305b6215
- (BOOL)buildDatabaseTables;	// 0x305df92d
- (BOOL)coerceValidDatabase;	// 0x305e2aa5
- (BOOL)compactArtwork;	// 0x305b80e5
- (id)composerForComposerName:(id)composerName;	// 0x305d3dad
- (BOOL)createIndexes;	// 0x305e28ad
// declared property getter: - (long long)currentContentRevision;	// 0x30592d79
// declared property getter: - (long long)currentRevision;	// 0x3058b9ed
// declared property getter: - (id)databaseInfo;	// 0x3058eb6d
- (void)dealloc;	// 0x305b0855
- (BOOL)deleteAllArtwork;	// 0x305b7701
- (BOOL)deleteAndRecreateDatabaseUsingConnection:(id)connection;	// 0x305e2a21
- (BOOL)deleteArtworkForCacheID:(id)cacheID;	// 0x305b7921
- (BOOL)deleteArtworkForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x305b7dad
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize;	// 0x305b6371
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency;	// 0x305b6395
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency respectSongMattress:(BOOL)mattress;	// 0x305b63b9
- (BOOL)deleteDatabase;	// 0x305b173d
- (void)deletePresignedValidity;	// 0x305b0279
- (BOOL)dropItemIndexes;	// 0x305e2751
- (void)enumeratePersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(unsigned)code usingBlock:(id)block;	// 0x305b4f15
- (void)enumeratePersistentIDsAfterRevision:(long long)revision usingBlock:(id)block;	// 0x305b5449
- (BOOL)executeSQL:(id)sql;	// 0x305b0cd5
// converted property getter: - (id)geniusDatabase;	// 0x3059d931
- (id)genreForGenre:(id)genre;	// 0x305c617d
- (void)getChangedPersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(int)code usingBlock:(id)block;	// 0x305b5679
- (id)groupingKeyForString:(id)string;	// 0x305b1231
- (id)groupingKeysForStrings:(id)strings;	// 0x305b1445
- (BOOL)handlePrepareDatabase;	// 0x305d5059
- (BOOL)hasArtworkForCacheID:(id)cacheID;	// 0x305b69f1
- (BOOL)hasArtworkForCacheID:(id)cacheID ensureArtworkFileExists:(BOOL)exists;	// 0x305b6a09
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x305ba211
- (BOOL)hasPresignedValidity;	// 0x305b02d5
- (BOOL)importTracksFromDataSource:(id)dataSource;	// 0x305f8035
- (BOOL)importTracksFromDataSource:(id)dataSource progressHandler:(id)handler;	// 0x305f8059
- (BOOL)insertArtworkWithImageData:(id)imageData forCacheID:(id)cacheID;	// 0x305b7579
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x305e4729
- (id)insertStringsIntoSortMap:(id)map;	// 0x305e4545
// declared property getter: - (BOOL)isNondurableWritingActive;	// 0x3059bcc9
- (BOOL)isReadable;	// 0x305b4a4d
// declared property getter: - (BOOL)keepPresignedValidyAfterVerification;	// 0x305ba221
// converted property getter: - (id)libraryUID;	// 0x30597351
- (void)loadArtworkForCacheID:(id)cacheID formatID:(unsigned)anId completionHandler:(id)handler;	// 0x30597b11
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x305960b9
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x30595b61
- (id)locationKindForKind:(id)kind;	// 0x305e877d
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x30591841
- (void)migrateAlbumGridBGRA1xToJPEG1x;	// 0x305b9381
- (void)migrateAlbumListJPEGToBGRA;	// 0x305b9439
- (BOOL)migrateLegacyArtworkFromArtworkBlobFilePath:(id)artworkBlobFilePath;	// 0x305b86bd
- (void)migratePresignedValidity;	// 0x305b05f9
- (XXStruct_Cy4r_A)nameOrderForString:(id)string;	// 0x305e2ee5
- (id)newDatabaseConnection;	// 0x305859f5
- (id)nondurableWriteSetForReading;	// 0x3059029d
- (id)nondurableWriteSetForWriting;	// 0x30599c95
- (void)notifyContentsDidChange;	// 0x305b2a09
- (void)notifyDisplayValuesPropertyDidChange;	// 0x305b2ba1
- (void)notifyInvisiblePropertyDidChange;	// 0x305b2ae1
- (void)notifyNonContentsPropertyDidChange;	// 0x3059c131
// declared property getter: - (id)path;	// 0x3058d4bd
- (void)performTransactionAllowingWrites:(BOOL)writes withBlock:(id)block;	// 0x30592f11
- (void)performTransactionKind:(int)kind waitIfBusy:(BOOL)busy withBlock:(id)block;	// 0x30592f3d
- (void)performTransactionKind:(int)kind withBlock:(id)block;	// 0x305b25cd
- (void)performTransactionWithBlock:(id)block;	// 0x3059af79
// declared property getter: - (long long)persistentID;	// 0x305b4e31
- (BOOL)persistentID:(long long)anId changedAfterRevision:(long long)revision revisionTrackingCode:(int)code;	// 0x305b54d5
- (BOOL)populateArtworkCacheWithArtworkData:(id)artworkData trackValues:(id)values;	// 0x305dba4d
- (BOOL)populateStaticItemsOfDynamicContainers;	// 0x305b0ced
// declared property getter: - (id)preferredAudioTracks;	// 0x3058eae5
// declared property getter: - (id)preferredSubtitleTracks;	// 0x30591091
- (void)prepareStatementForSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x305b2321
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x305b24fd
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x305b2c61
- (void)reconnectToDatabase;	// 0x305b0df1
- (void)reconnectToDatabaseWithCompletionHandler:(id)completionHandler;	// 0x305b0e05
- (BOOL)removeLocationsForItemsMissingAssets;	// 0x305e5bed
- (void)removeOrphanedTracks;	// 0x305b9cbd
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x3058d4d5
- (BOOL)resetAllContents;	// 0x305e6085
- (void)resetUbiquitousMetadata;	// 0x305b06ad
- (BOOL)runStatementWithSQL:(id)sql bindingValue:(id)value;	// 0x305b189d
- (void)savePlaylists;	// 0x305b3c05
- (void)savePlaylistsSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x305b3c29
- (void)saveTrackMetadata;	// 0x305b31c5
- (void)saveTrackMetadataSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x305b31e9
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x3059638d
- (BOOL)setAppleID:(id)anId forDSID:(unsigned long long)dsid;	// 0x305b9689
// declared property setter: - (void)setKeepPresignedValidyAfterVerification:(BOOL)verification;	// 0x305ba231
// converted property setter: - (void)setLibraryUID:(id)uid;	// 0x305b4ec5
// declared property setter: - (void)setSyncGenerationID:(long long)anId;	// 0x305b4e4d
- (BOOL)setValue:(id)value forDatabaseProperty:(id)databaseProperty;	// 0x305b9a3d
- (id)statementWithSQL:(id)sql;	// 0x305a0171
- (void)statementWithSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x3058bb25
- (void)statementWithSQL:(id)sql usingBlock:(id)block;	// 0x3058fb59
- (void)statementWithSQLPrefix:(id)sqlprefix inPersistentIDs:(const long long *)persistentIDs count:(unsigned)count usingBlock:(id)block;	// 0x305af60d
// declared property getter: - (long long)syncGenerationID;	// 0x30597f89
// converted property getter: - (id)ubiquitousDatabase;	// 0x3058dc05
- (BOOL)updateActivePlaylistNamesForCurrentLanguage;	// 0x305d5799
- (void)updateOrderingLanguagesForCurrentLanguage;	// 0x305d5945
- (BOOL)updateSortMap;	// 0x305b4c4d
- (void)updateTrackIntegrity;	// 0x305b0681
- (id)valueForDatabaseProperty:(id)databaseProperty;	// 0x3059736d
- (BOOL)verifyPresignedValidity;	// 0x305b0349
// declared property getter: - (BOOL)writable;	// 0x305b069d
- (BOOL)writeToDatabaseArtworkForCacheID:(id)cacheID length:(unsigned long)length formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x305b7259
- (BOOL)writeToDiskArtworkWithImageData:(id)imageData forCacheID:(id)cacheID resultingLengths:(unsigned **)lengths formatIDs:(unsigned **)ids imageSubRects:(CGRect **)rects count:(unsigned *)count;	// 0x305b6c81
@end

