/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3SqliteDatabaseContext, MLSQLiteConnectionQueue, NSString;

@interface ML3SqliteDatabase : NSObject {
	NSString *_identifier;	// 4 = 0x4
	ML3SqliteDatabaseContext *_mainDatabaseContext;	// 8 = 0x8
	ML3SqliteDatabaseContext *_backgroundDatabaseContext;	// 12 = 0xc
	MLSQLiteConnectionQueue *_backgroundConnectionQueue;	// 16 = 0x10
	NSString *_backgroundQueueIdentifier;	// 20 = 0x14
	NSString *_path;	// 24 = 0x18
	BOOL _enableWrites;	// 28 = 0x1c
}
@property(readonly, assign, nonatomic) NSString *path;	// G=0x305d7241; @synthesize=_path
+ (id)allSchemaSQL;	// 0x305d6a0d
+ (BOOL)attachAuxiliaryDatabases:(sqlite3 *)databases;	// 0x3058e365
+ (BOOL)buildDatabaseTablesUsingHandle:(sqlite3 *)handle usingTransaction:(BOOL)transaction;	// 0x305d6ab1
+ (void)closeDatabaseHandle:(sqlite3 *)handle;	// 0x3058e575
+ (int)currentUserVersion;	// 0x305d6aad
+ (id)databasePath;	// 0x305d5e0d
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x305d6629
+ (void)limitCacheSize:(sqlite3 *)size;	// 0x3058e369
+ (BOOL)migrateFromVersion:(int)version outUserVersion:(int *)version2 usingHandle:(sqlite3 *)handle;	// 0x305d7071
+ (BOOL)migrateToCurrentUserVersionUsingHandle:(sqlite3 *)currentUserVersionUsingHandle;	// 0x305d7075
+ (BOOL)orderingLanguageMatchesSystemUsingHandle:(sqlite3 *)handle;	// 0x305d6e95
+ (void)registerCustomCallbacksOnHandle:(sqlite3 *)handle;	// 0x3058e36d
+ (void)registerFunctionsOnHandle:(sqlite3 *)handle;	// 0x3058e37d
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x305d60c9
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x3059e0dd
+ (void)stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x3059e105
+ (id)systemCurrentLanguage;	// 0x305d6a11
+ (BOOL)userVersionMatchesSystemUsingHandle:(sqlite3 *)handle;	// 0x3058ea69
+ (int)userVersionUsingHandle:(sqlite3 *)handle;	// 0x3058e389
- (id)initWithIdentifier:(id)identifier path:(id)path backgroundConnectionQueue:(id)queue enableWrites:(BOOL)writes;	// 0x305d5c05
- (void).cxx_destruct;	// 0x305d7255
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x3058e741
- (void)_debugLoggingOptionsDidChangeNotification:(id)_debugLoggingOptions;	// 0x305d5e91
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x305d6165
- (id)_onBackgroundQueueDatabaseContext;	// 0x3058e87d
- (id)_onMainQueueDatabaseContext;	// 0x3059de09
- (BOOL)_openDatabaseWithOpenHandler:(id)openHandler;	// 0x3058e1dd
- (void)accessDatabaseContextUsingBlock:(id)block;	// 0x3058e731
- (void)accessDatabaseUsingBlock:(id)block;	// 0x3058e6d1
- (BOOL)buildDatabaseTables;	// 0x305d6c99
- (BOOL)canWriteToDatabase;	// 0x305d5ee5
- (BOOL)coerceValidDatabase;	// 0x3058dd8d
- (void)dealloc;	// 0x305d5e11
- (BOOL)deleteAndRecreateDatabaseUsingHandle:(sqlite3 **)handle;	// 0x305d718d
- (id)description;	// 0x305d5d85
- (void)didCommitInDatabaseContext:(id)databaseContext;	// 0x305d6735
- (void)didRollbackInDatabaseContext:(id)databaseContext;	// 0x305d6749
- (BOOL)executeSQL:(id)sql;	// 0x305d5f49
- (id)newDatabaseContext;	// 0x3058e8bd
- (BOOL)openDatabaseHandle:(sqlite3 **)handle;	// 0x3058e0c1
- (sqlite3 *)openedDatabaseHandle;	// 0x3058e09d
// declared property getter: - (id)path;	// 0x305d7241
- (void)performOperationInBackground:(id)background;	// 0x305d669d
- (void)performTransactionWithBlock:(id)block;	// 0x305d675d
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x3059dd65
- (void)reconnectBackgroundDatabaseContext;	// 0x305d610d
- (void)reconnectMainDatabaseContext;	// 0x305d60f5
- (void)reconnectToDatabaseWithCompletionHandler:(id)completionHandler;	// 0x305d637d
- (BOOL)requiresPostProcessing;	// 0x3058e5b9
@end

