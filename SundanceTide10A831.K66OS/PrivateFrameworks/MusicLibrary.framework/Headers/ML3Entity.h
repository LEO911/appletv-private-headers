/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import <NSObject.h> // Unknown library
#import "MusicLibrary-Structs.h"

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x30591169; 
@property(assign) __weak ML3MusicLibrary *library;	// G=0x3059af55; S=0x305af5c5; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x305af5d9; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x305ae809
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x30598a3d
+ (id)allProperties;	// 0x305af05d
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x3058eca9
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x305af059
+ (id)defaultOrderingProperties;	// 0x305ae74d
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x305aea21
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x305c01d9
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x3058ad91
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x305af471
+ (void)enumeratePersistentIDsInLibrary:(id)library matchingPredicate:(id)predicate orderingTerms:(id)terms persistentIDs:(const long long *)ids count:(unsigned)count usingBlock:(id)block;	// 0x305add8d
+ (id)extraTablesToDelete;	// 0x305af04d
+ (id)extraTablesToInsert;	// 0x305af051
+ (id)foreignColumnForProperty:(id)property;	// 0x305ae759
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x305ae755
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x30598fa1
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type revisionType:(int)type4;	// 0x3059ba3d
+ (id)indexableSQLForProperties:(id)properties;	// 0x305af061
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x305aca39
+ (BOOL)insertionChangesLibraryContents;	// 0x305ad9ed
+ (id)joinClausesForProperty:(id)property;	// 0x3058af41
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x305980c9
+ (BOOL)libraryDynamicChangeForProperty:(id)property;	// 0x305ae805
+ (id)newSelectSQLForProperties:(const id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x305908c1
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x305ae679
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x305ae6dd
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x30591115
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x305af1fd
+ (id)persistentIDColumnForTable:(id)table;	// 0x305af055
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x3058ac95
+ (id)predisambiguatedProperties;	// 0x305980cd
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x3059d535
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x305c00d1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x30591b91
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms;	// 0x305c02b9
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms propertyToCount:(id)count;	// 0x305c0345
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms usingSections:(BOOL)sections;	// 0x305c03e1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x305c0129
+ (id)replacerWithProperties:(id)properties databaseConnection:(id)connection;	// 0x305e793d
+ (int)revisionTrackingCode;	// 0x305af469
+ (id)sectionPropertyForProperty:(id)property;	// 0x305ae751
+ (id)subselectPropertyForProperty:(id)property;	// 0x305ae675
+ (id)subselectStatementForProperty:(id)property;	// 0x30598171
+ (id)unsettableProperties;	// 0x305acf95
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x305acfe5
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x3059051d
- (void).cxx_destruct;	// 0x30591461
- (id)copyInLibrary:(id)library;	// 0x305ad9f1
- (id)copyWithZone:(NSZone *)zone;	// 0x305adbd5
- (BOOL)deleteFromLibrary;	// 0x305aefed
- (id)description;	// 0x305add11
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x3059bfb1
// declared property getter: - (BOOL)existsInLibrary;	// 0x30591169
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x305906e5
- (unsigned)hash;	// 0x305add01
- (void)incrementRevision;	// 0x305af565
- (BOOL)isEqual:(id)equal;	// 0x305adc49
// declared property getter: - (id)library;	// 0x3059af55
- (BOOL)matchesPredicate:(id)predicate;	// 0x305ae40d
// declared property getter: - (long long)persistentID;	// 0x305af5d9
// declared property setter: - (void)setLibrary:(id)library;	// 0x305af5c5
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x3059957d
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x305995c5
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x3059ada5
- (id)valueForProperty:(id)property;	// 0x3059069d
@end

