/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import <NSObject.h> // Unknown library
#import "GEOResourceManifestServerProxyDelegate.h"

@class NSLock, NSDictionary, NSHashTable, NSMutableArray, GEOActiveTileGroup, GEOLocalizationRegionsInfo;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;	// 4 = 0x4
	NSHashTable *_serverProxyObservers;	// 8 = 0x8
	NSMutableArray *_pendingRegionalResourceLoads;	// 12 = 0xc
	GEOActiveTileGroup *_activeTileGroup;	// 16 = 0x10
	NSLock *_activeTileGroupLock;	// 20 = 0x14
	NSDictionary *_resourceNamesToPaths;	// 24 = 0x18
	GEOLocalizationRegionsInfo *_localizationRegionsInfo;	// 28 = 0x1c
	NSLock *_pendingRegionalResourceLoadsLock;	// 32 = 0x20
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup *activeTileGroup;	// G=0x302213fd; 
@property(assign) unsigned activeTileGroupIdentifier;	// G=0x3028d431; S=0x3028d459; converted property
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;	// G=0x3022177d; 
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// G=0x3028d501; @synthesize=_serverProxy
+ (void)disableServerConnection;	// 0x3028c389
+ (void)setCallerWillStartServer;	// 0x3028c3bd
+ (void)setHiDPI:(BOOL)dpi;	// 0x3028c3b9
+ (id)sharedManager;	// 0x3021f345
+ (void)useLocalProxy;	// 0x3028c3a9
+ (void)useRemoteProxy;	// 0x3028c399
- (id)init;	// 0x3021f371
- (id)_activeTileSetForKey:(const GEOTileKey *)key;	// 0x3028c6c9
- (void)_buildResourceNamesToPaths;	// 0x3022127d
- (id)_listenerForTileKeys:(id)tileKeys acquireLock:(BOOL)lock;	// 0x30228b69
- (void)_localeChanged:(id)changed;	// 0x3028c581
// declared property getter: - (id)activeTileGroup;	// 0x302213fd
// converted property getter: - (unsigned)activeTileGroupIdentifier;	// 0x3028d431
- (void)addServerProxyObserver:(id)observer;	// 0x3028c5a9
- (id)allResourceNames;	// 0x3028c8e1
- (id)authToken;	// 0x3028c561
- (id)baseURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x3028c6f5
- (void)cancelRegionalResourcesRequest:(id)request;	// 0x3028cb3d
- (void)closeServerConnection;	// 0x302282f9
- (void)dealloc;	// 0x3028c411
- (id)detailedDescription;	// 0x3028d29d
- (void)forceUpdate;	// 0x3028d4e1
- (void)getResourceManifestWithHandler:(id)handler;	// 0x3028d411
// declared property getter: - (BOOL)hasActiveTileGroup;	// 0x3022177d
- (BOOL)hasResourceManifest;	// 0x3028d3d5
- (BOOL)isAvailableForTileKey:(const GEOTileKey *)tileKey;	// 0x3028c889
- (id)languageForTileKey:(const GEOTileKey *)tileKey;	// 0x3028c8b5
- (void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;	// 0x30228999
- (void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;	// 0x3028cb11
- (id)localizationURLStringIfNecessaryForTileKey:(const GEOTileKey *)tileKey;	// 0x3028c751
- (int)mapMatchingTileSetStyle;	// 0x3028c63d
- (unsigned)mapMatchingZoomLevel;	// 0x3028c641
- (id)multiTileURLStringForTileKey:(const GEOTileKey *)tileKey useStatusCodes:(BOOL *)codes;	// 0x3028c721
- (void)openServerConnection;	// 0x302443d9
- (id)pathForResourceWithName:(id)name;	// 0x30221099
- (void)refreshActiveTileGroup;	// 0x3028d4c1
- (void)removeServerProxyObserver:(id)observer;	// 0x3028c61d
- (void)resetActiveTileGroup;	// 0x3028d4a1
// declared property getter: - (id)serverProxy;	// 0x3028d501
- (oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;	// 0x3028cb85
- (oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;	// 0x3022a011
- (oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;	// 0x3028cf51
- (oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;	// 0x30229d99
// converted property setter: - (void)setActiveTileGroupIdentifier:(unsigned)identifier;	// 0x3028d459
- (BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;	// 0x30221f61
- (double)timeToLiveForTileKey:(const GEOTileKey *)tileKey;	// 0x3028c85d
- (unsigned)versionForTileKey:(const GEOTileKey *)tileKey;	// 0x3028c831
@end

