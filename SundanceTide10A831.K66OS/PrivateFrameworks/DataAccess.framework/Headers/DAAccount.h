/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x321692dd; S=0x3216993d; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x3216ca15; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x3216d7dd; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x3216efe5; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x32168df1; S=0x3216cc8d; 
@property(copy) NSString *emailAddress;	// G=0x3216b031; S=0x3216b0b9; 
@property(copy) NSArray *emailAddresses;	// G=0x3216b191; S=0x3216b22d; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x3216d799; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x3216b485; 
@property(copy) NSString *host;	// G=0x3216ad81; S=0x3216ae09; 
@property(readonly, assign) NSData *identityPersist;	// G=0x3216c099; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x3216c355; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x3216bf59; 
@property(assign) BOOL needsRediscovery;	// G=0x3216ba0d; S=0x3216ba2d; 
@property(copy) NSString *password;	// G=0x3216a9bd; S=0x3216ab15; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x32168b55; 
@property(assign) int port;	// G=0x3216b599; S=0x3216b625; 
@property(copy) NSURL *principalURL;	// G=0x3216b7c5; S=0x3216b885; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x3216ba49; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x3216990d; 
@property(copy) NSString *scheme;	// G=0x3216b6b1; S=0x3216b739; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x3216d7f1; S=0x3216d805; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x3216b9d1; S=0x3216b9f1; 
@property(assign, nonatomic) BOOL shouldFailAllTasks;	// G=0x3216c55d; S=0x3216d829; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x3216d7ad; S=0x3216d7c5; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x3216d839; S=0x3216d851; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x3216b371; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x3216d815; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x3217a611; S=0x3217a615; converted property
@property(assign) BOOL useSSL;	// G=0x3216aee1; S=0x3216af69; 
@property(copy) NSString *user;	// G=0x3216c9a9; S=0x3216c9b9; 
@property(copy) NSString *username;	// G=0x32169a75; S=0x32169b65; 
@property(retain) id version;	// G=0x3216acd9; S=0x3216ad25; converted property
+ (Class)accountClass;	// 0x32169825
+ (Class)classForAccountType:(id)accountType;	// 0x3216cbfd
+ (Class)clientClass;	// 0x3216a249
+ (Class)daemonClass;	// 0x3216a295
+ (id)defaultProperties;	// 0x3216cbf9
+ (id)newAccountOfAccountType:(id)accountType;	// 0x3216cc35
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x32169725
- (id)initWithProperties:(id)properties;	// 0x321687d1
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x3216d869
- (id)_exceptionsDict;	// 0x3216c17d
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x3216ec85
- (BOOL)_isIdentityManagedByProfile;	// 0x3216c15d
- (void)_removeHostsToTrust;	// 0x3216cd9d
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x3216e4d9
- (id)_serverSuffixesToAlwaysFail;	// 0x3216d96d
- (void)_setPersistentUUID:(id)uuid;	// 0x32169921
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x3216cdcd
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x3216a4f1
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x3216b291
// declared property getter: - (id)accountDescription;	// 0x321692dd
- (id)accountID;	// 0x32168a59
- (int)accountIntPropertyForKey:(id)key;	// 0x3216a559
- (BOOL)accountNeedsUpgrade;	// 0x3216cca9
- (id)accountPropertyForKey:(id)key;	// 0x3216a2e1
- (id)addUsernameToURL:(id)url;	// 0x3216bfe5
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x3216ca15
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x3216b9cd
- (id)backingACAccountTypeIdentifier;	// 0x3216cf81
// declared property getter: - (id)backingAccountInfo;	// 0x3216d7dd
// declared property getter: - (id)backingCredentialAccount;	// 0x3216efe5
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x3216f255
- (void)cancelAllSearchQueries;	// 0x32178499
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x3216f2fd
- (void)cancelSearchQuery:(id)query;	// 0x32178495
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x3216f39d
- (void)checkValidityWithConsumer:(id)consumer;	// 0x3216b985
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x3216c6f5
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x3216c7b9
- (void)cleanupAccountFiles;	// 0x3216c2f5
- (id)consumerForTask:(id)task;	// 0x3216a7dd
- (id)contactsFolders;	// 0x3216f3cd
- (CFURLStorageSessionRef)copyStorageSession;	// 0x3216c7bd
// declared property getter: - (int)daAccountVersion;	// 0x32168df1
- (id)dataclassProperties;	// 0x3216a131
- (void)dealloc;	// 0x32168ced
- (id)defaultContactsFolder;	// 0x3216f3c9
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x3216bbc1
- (id)defaultEventsFolder;	// 0x3216f245
- (id)defaultNotesFolder;	// 0x32189b45
- (id)defaultToDosFolder;	// 0x3217a605
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x3216f435
- (id)deletedItemsFolder;	// 0x3216f42d
- (id)description;	// 0x3216c919
- (id)displayName;	// 0x32169a19
- (id)domainOnly;	// 0x3216ad7d
// declared property getter: - (id)emailAddress;	// 0x3216b031
// declared property getter: - (id)emailAddresses;	// 0x3216b191
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x3216d799
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x32169cb1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x3216b485
- (id)eventsFolders;	// 0x3216f249
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x3216c199
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x32190a75
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x3216d9f9
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x3216e199
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x3216c359
// declared property getter: - (id)host;	// 0x3216ad81
// declared property getter: - (id)identityPersist;	// 0x3216c099
- (id)inboxFolder;	// 0x3216f425
- (BOOL)isActiveSyncAccount;	// 0x3216c6d9
- (BOOL)isCalDAVAccount;	// 0x3216c6e1
- (BOOL)isCalDAVChildAccount;	// 0x3216c6ed
- (BOOL)isCardDAVAccount;	// 0x3216c6e9
// declared property getter: - (BOOL)isChildAccount;	// 0x3216c355
- (BOOL)isDAMMeAccount;	// 0x3216c6e5
- (BOOL)isDisabled;	// 0x321691e1
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x32169d79
- (BOOL)isEqualToAccount:(id)account;	// 0x3216c631
- (BOOL)isHotmailAccount;	// 0x3216c6f1
- (BOOL)isLDAPAccount;	// 0x3216c6dd
// declared property getter: - (int)keychainAccessibilityType;	// 0x3216bf59
- (id)localizedIdenticalAccountFailureMessage;	// 0x3216ee95
- (id)localizedInvalidPasswordMessage;	// 0x3216ef3d
- (BOOL)monitorFolderWithID:(id)anId;	// 0x3216bac1
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x3216babd
// declared property getter: - (BOOL)needsRediscovery;	// 0x3216ba0d
- (id)notesFolders;	// 0x32189b49
// declared property getter: - (id)password;	// 0x3216a9bd
- (id)passwordWithExpected:(BOOL)expected;	// 0x3216a815
- (void)performSearchQuery:(id)query;	// 0x321783f1
// declared property getter: - (id)persistentUUID;	// 0x32168b55
// declared property getter: - (int)port;	// 0x3216b599
- (void)prepareForAccountSave;	// 0x3216bc1d
// declared property getter: - (id)principalURL;	// 0x3216b7c5
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x3216f431
- (void)removeAccountPropertyForKey:(id)key;	// 0x3216a48d
- (void)removeClientCertificateData;	// 0x3216bbc5
- (void)removeConsumerForTask:(id)task;	// 0x3216a7f9
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x3216eff5
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x3216ba49
- (void)resetAccountID;	// 0x32169841
- (BOOL)resetCertWarnings;	// 0x3216c461
- (void)resetStatusReport;	// 0x3216c48d
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x3216f301
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x3216a5c1
- (void)saveAccountProperties;	// 0x3216bc21
- (void)saveAccountSettings;	// 0x3216cb41
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x3216caf1
// declared property getter: - (id)scheduleIdentifier;	// 0x3216990d
// declared property getter: - (id)scheme;	// 0x3216b6b1
- (BOOL)searchQueriesRunning;	// 0x3217849d
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x3216f251
- (id)sentItemsFolder;	// 0x3216f429
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x3216a519
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x3216993d
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x3216a581
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x3216a3b5
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x3216a781
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x3216cc8d
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x3216b0b9
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x3216b22d
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x32169e55
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x3216b50d
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x3216c1dd
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x3216c39d
// declared property setter: - (void)setHost:(id)host;	// 0x3216ae09
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x3216c0b5
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x3216ba2d
// declared property setter: - (void)setPassword:(id)password;	// 0x3216ab15
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x3216a9f5
// declared property setter: - (void)setPort:(int)port;	// 0x3216b625
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x3216b885
// declared property setter: - (void)setScheme:(id)scheme;	// 0x3216b739
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x3216d805
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x3216b9f1
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x3216d829
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x3216d7c5
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x3216d851
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x3216b3f9
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x3217a615
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x3216af69
// declared property setter: - (void)setUser:(id)user;	// 0x3216c9b9
// declared property setter: - (void)setUsername:(id)username;	// 0x32169b65
// converted property setter: - (void)setVersion:(id)version;	// 0x3216ad25
// declared property getter: - (id)settingsTemplate;	// 0x3216d7f1
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x3216b9d1
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x3216c55d
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x3216d7ad
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x3216d839
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x3216b371
- (id)spinnerIdentifiers;	// 0x3216a1fd
- (id)stateString;	// 0x3216a6d1
// declared property getter: - (id)statusReport;	// 0x3216d815
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x3216a66d
- (void)stopMonitoringFolders;	// 0x3216bb5d
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x3216baf9
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x32169c65
- (int)supportsEmailFlagging;	// 0x321784a5
- (int)supportsMailboxSearch;	// 0x321784a1
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x3216a609
- (id)syncStoreIdentifier;	// 0x32168cdd
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x32190a79
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x3216f3d1
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x3216f24d
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x32189b4d
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x3217a60d
- (void)tearDown;	// 0x3216ba59
- (id)toDosFolders;	// 0x3217a609
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x3217a611
- (BOOL)upgradeAccount;	// 0x3216cf21
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x3216cf7d
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x3216cf85
- (void)upgradeToHoodooAccountInfo;	// 0x3216cf79
- (id)urlForKeychain;	// 0x3216c9c9
// declared property getter: - (BOOL)useSSL;	// 0x3216aee1
// declared property getter: - (id)user;	// 0x3216c9a9
// declared property getter: - (id)username;	// 0x32169a75
- (id)usernameWithoutDomain;	// 0x3216ad6d
- (BOOL)usesLegacyAccountSettings;	// 0x3216c901
// converted property getter: - (id)version;	// 0x3216acd9
@end

