/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class ATVDataClient, NSArray, NSString;

__attribute__((visibility("hidden")))
@interface LTAVPlaylist : XXUnknownSuperclass {
	NSArray *_mediaList;	// 4 = 0x4
	int _sequentialIndex;	// 8 = 0x8
	unsigned _queueLength;	// 12 = 0xc
	BOOL _shuffleEnabled;	// 16 = 0x10
	BOOL _skipExplicit;	// 17 = 0x11
	BOOL _isPlaylistDynamic;	// 18 = 0x12
	int _repeatMode;	// 20 = 0x14
	ATVDataClient *_dataClient;	// 24 = 0x18
	NSString *_playlistName;	// 28 = 0x1c
	NSArray *_sourceTracks;	// 32 = 0x20
}
@property(assign) BOOL isPlaylistDynamic;	// G=0x3e95d; S=0x3e94d; converted property
@property(readonly, retain) NSArray *mediaList;	// G=0x3e3f1; converted property
@property(assign) unsigned queueLength;	// G=0x3edcd5; S=0x3edcc1; converted property
@property(assign) int repeatMode;	// G=0x3e91d; S=0x3e90d; converted property
@property(assign) BOOL shuffleEnabled;	// G=0x3e8fd; S=0x3e5a1; converted property
@property(assign) BOOL skipExplicit;	// G=0x3e93d; S=0x3e92d; converted property
- (id)initWithIndex:(long)index inMediaList:(id)mediaList;	// 0x3e25d
- (id)initWithIndex:(long)index inMediaList:(id)mediaList playlistName:(id)name;	// 0x3e1ed
- (void).cxx_destruct;	// 0x3f07d
- (id)_mediaForSequentialIndex:(long)sequentialIndex;	// 0x3eedd
- (long)_nextSequentialIndexInDirection:(int)direction;	// 0x3ef35
- (long)_sequentialIndex;	// 0x3eecd
- (void)appendMediaList:(id)list;	// 0x3e4cd
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x3e405
- (id)changeMedia:(int)media;	// 0x3eab1
- (void)clearBackToItems;	// 0x3ed6a9
- (void)clearHistory;	// 0x3ed8d5
- (long)count;	// 0x3e97d
- (id)currentMedia;	// 0x3e99d
- (void)demoteAssetAtIndex:(unsigned)index;	// 0x3ee129
- (void)enqueueItems:(id)items action:(int)action;	// 0x3edce9
- (BOOL)isEqual:(id)equal;	// 0x3ebd1
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x3e95d
- (BOOL)isQueueEnabled;	// 0x3ed241
- (BOOL)isQueueEstablishedForDataClient:(id)dataClient;	// 0x3ee69
- (BOOL)isValidForDataClient:(id)dataClient;	// 0x3ed225
- (long)mediaIndex;	// 0x3e96d
// converted property getter: - (id)mediaList;	// 0x3e3f1
- (BOOL)moreItemsAvailable:(int)available;	// 0x3ea39
- (void)moveObjectAtIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x3ee4e9
- (id)name;	// 0x3e8e9
- (id)nextMedia;	// 0x3ea05
- (void)playExistingAssetAtIndex:(unsigned)index;	// 0x3ee9e5
- (id)previouslyPlayedItems;	// 0x3ed381
- (void)promoteAssetAtIndex:(unsigned)index;	// 0x3edfe5
- (void)pruneHistory;	// 0x3eeb31
- (void)purge;	// 0x3ed48d
- (id)queueAssetAtIndex:(int)index;	// 0x3edbad
// converted property getter: - (unsigned)queueLength;	// 0x3edcd5
- (id)queuedItems;	// 0x3ed279
- (void)removeAssetAtIndex:(unsigned)index;	// 0x3ee781
- (void)removeAssetAtIndex:(unsigned)index suppressNotification:(BOOL)notification;	// 0x3ee795
// converted property getter: - (int)repeatMode;	// 0x3e91d
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x3e94d
// converted property setter: - (void)setQueueLength:(unsigned)length;	// 0x3edcc1
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x3e90d
// converted property setter: - (void)setShuffleEnabled:(BOOL)enabled;	// 0x3e5a1
- (void)setShuffleEnabled:(BOOL)enabled preservingNowPlaying:(BOOL)playing;	// 0x3e5b5
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x3e92d
// converted property getter: - (BOOL)shuffleEnabled;	// 0x3e8fd
// converted property getter: - (BOOL)skipExplicit;	// 0x3e93d
- (BOOL)supportsShufflePlayback;	// 0x3e8d1
- (void)swapObjectAtIndex:(unsigned)index withObjectAtIndex:(unsigned)index2;	// 0x3ee2a5
- (id)upNext:(unsigned *)next;	// 0x3eda4d
@end

