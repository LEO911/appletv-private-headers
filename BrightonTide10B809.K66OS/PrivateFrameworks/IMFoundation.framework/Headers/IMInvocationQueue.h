/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
 */

#import <NSObject.h> // Unknown library

@class NSMutableArray, NSProtocolChecker, Protocol;

@interface IMInvocationQueue : NSObject {
	id _delegate;	// 4 = 0x4
	id _target;	// 8 = 0x8
	double _dequeueRate;	// 12 = 0xc
	NSMutableArray *_queue;	// 20 = 0x14
	NSMutableArray *_options;	// 24 = 0x18
	NSProtocolChecker *_protocolChecker;	// 28 = 0x1c
	BOOL _holdQueue;	// 32 = 0x20
}
@property(readonly, assign, nonatomic) unsigned count;	// G=0x341a4509; 
@property(assign) id delegate;	// G=0x341a459d; S=0x341a45b1; @synthesize=_delegate
@property(assign, nonatomic) double dequeueRate;	// G=0x341a45f5; S=0x341a34fd; @synthesize=_dequeueRate
@property(readonly, assign, nonatomic) BOOL holdQueue;	// G=0x341a463d; @synthesize=_holdQueue
@property(readonly, assign, nonatomic) BOOL isEmpty;	// G=0x341a4529; 
@property(readonly, assign, nonatomic) NSMutableArray *options;	// G=0x341a461d; @synthesize=_options
@property(retain, nonatomic) Protocol *protocol;	// G=0x341a34dd; S=0x341a3479; 
@property(readonly, assign, nonatomic) NSProtocolChecker *protocolChecker;	// G=0x341a462d; @synthesize=_protocolChecker
@property(readonly, assign, nonatomic) NSMutableArray *queue;	// G=0x341a460d; @synthesize=_queue
@property(assign) id target;	// G=0x341a45c9; S=0x341a45dd; @synthesize=_target
- (id)init;	// 0x341a3255
- (BOOL)_acceptsOptions:(unsigned)options;	// 0x341a3ba9
- (void)_checkQueue;	// 0x341a37cd
- (id)_dequeueInvocation;	// 0x341a418d
- (int)_enqueueInvocation:(id)invocation options:(unsigned)options;	// 0x341a3fd1
- (void)_holdQueueNotification:(id)notification;	// 0x341a356d
- (BOOL)_insertInvocation:(id)invocation options:(unsigned)options;	// 0x341a3dcd
- (BOOL)_invokeInvocation:(id)invocation;	// 0x341a36f5
- (int)_maxQueueLimitSize;	// 0x341a3b75
- (int)_numberOfLimitedMessagesInQueue;	// 0x341a3a3d
- (unsigned)_optionsForInvocation:(id)invocation;	// 0x341a39d5
- (void)_releaseQueueNotification:(id)notification;	// 0x341a35e5
- (BOOL)_replaceSimilarInvocation:(id)invocation;	// 0x341a3c19
- (void)_setQueueTimer;	// 0x341a3641
- (void)_stepQueueNotification:(id)notification;	// 0x341a3521
// declared property getter: - (unsigned)count;	// 0x341a4509
- (void)dealloc;	// 0x341a32f5
// declared property getter: - (id)delegate;	// 0x341a459d
// declared property getter: - (double)dequeueRate;	// 0x341a45f5
- (void)forwardInvocation:(id)invocation;	// 0x341a336d
// declared property getter: - (BOOL)holdQueue;	// 0x341a463d
- (void)invokeAll;	// 0x341a44a1
// declared property getter: - (BOOL)isEmpty;	// 0x341a4529
- (id)methodSignatureForSelector:(SEL)selector;	// 0x341a342d
// declared property getter: - (id)options;	// 0x341a461d
- (id)peek;	// 0x341a4559
// declared property getter: - (id)protocol;	// 0x341a34dd
// declared property getter: - (id)protocolChecker;	// 0x341a462d
// declared property getter: - (id)queue;	// 0x341a460d
- (void)removeAllInvocations;	// 0x341a4335
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x341a45b1
// declared property setter: - (void)setDequeueRate:(double)rate;	// 0x341a34fd
// declared property setter: - (void)setProtocol:(id)protocol;	// 0x341a3479
// declared property setter: - (void)setTarget:(id)target;	// 0x341a45dd
// declared property getter: - (id)target;	// 0x341a45c9
@end

