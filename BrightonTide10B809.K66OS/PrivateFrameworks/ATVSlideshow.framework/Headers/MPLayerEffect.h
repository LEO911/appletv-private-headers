/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MPEffectSupport.h"
#import "MPLayer.h"
#import "MPEffectSupportPrivate.h"

@class MCContainerEffect, NSString, NSArray, NSMutableDictionary, NSMutableArray;
@protocol MZEffectTiming;

@interface MPLayerEffect : MPLayer <MPEffectSupportPrivate, MPEffectSupport> {
	MCContainerEffect *_layerEffect;	// 48 = 0x30
	NSString *_effectID;	// 52 = 0x34
	NSString *_presetID;	// 56 = 0x38
	NSMutableArray *_slides;	// 60 = 0x3c
	NSMutableArray *_secondarySlides;	// 64 = 0x40
	NSMutableArray *_texts;	// 68 = 0x44
	NSMutableDictionary *_effectAttributes;	// 72 = 0x48
	int _randomSeed;	// 76 = 0x4c
	NSObject<MZEffectTiming> *_effectTiming;	// 80 = 0x50
	BOOL _supportsEffectTiming;	// 84 = 0x54
	BOOL _skipEffectTiming;	// 85 = 0x55
	int _liveIndex;	// 88 = 0x58
}
@property(retain) NSMutableDictionary *effectAttributes;	// G=0x33147efd; S=0x33147f95; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x33147c45; S=0x33147c55; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x3314aaa5; @synthesize=_effectTiming
@property(assign) int liveIndex;	// G=0x3314aab5; S=0x3314aac5; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x33147d85; S=0x33147da9; 
@property(assign) int randomSeed;	// G=0x33147e5d; S=0x33147e6d; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x33149285; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x331482e1; 
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x331498fd; 
+ (id)layerEffectWithEffectID:(id)effectID;	// 0x33146ec9
+ (id)layerEffectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x33146f05
+ (id)layerEffectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x33146f45
+ (id)layerEffectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x33146f85
- (id)init;	// 0x33146df1
- (id)initWithCoder:(id)coder;	// 0x331474a5
- (id)initWithEffectID:(id)effectID;	// 0x33146fcd
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x33146fe1
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x331470f5
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x3314720d
- (id)_effectAttributes;	// 0x3314a67d
- (void)_updateEffectTiming;	// 0x3314a4f9
- (void)_updateTiming:(BOOL)timing;	// 0x3314a725
- (void)addSecondarySlide:(id)slide;	// 0x33149295
- (void)addSecondarySlides:(id)slides;	// 0x331492f5
- (void)addSlide:(id)slide;	// 0x331482f1
- (void)addSlides:(id)slides;	// 0x33148351
- (void)addText:(id)text;	// 0x3314990d
- (void)addTexts:(id)texts;	// 0x3314996d
- (id)allSlides:(BOOL)slides;	// 0x3314a8dd
- (void)applyFormattedAttributes;	// 0x3314b44d
- (id)container;	// 0x3314ab11
- (void)copySecondarySlides:(id)slides;	// 0x3314c175
- (void)copySlides:(id)slides;	// 0x3314c059
- (void)copyTexts:(id)texts;	// 0x3314c291
- (id)copyWithZone:(NSZone *)zone;	// 0x33147b31
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x3314b171
- (void)createSlidesWithPaths:(id)paths;	// 0x3314afbd
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x3314abd1
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x3314abf5
- (void)dealloc;	// 0x33147a0d
- (id)description;	// 0x3314795d
- (id)effectAttributeForKey:(id)key;	// 0x33148001
// converted property getter: - (id)effectAttributes;	// 0x33147efd
// declared property getter: - (id)effectID;	// 0x33147c45
// declared property getter: - (id)effectTiming;	// 0x3314aaa5
- (void)encodeWithCoder:(id)coder;	// 0x33147341
- (void)finalize;	// 0x331479cd
- (id)formattedAttributes;	// 0x3314b349
- (double)fullDuration;	// 0x3314abc1
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x33149339
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x33148395
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x331499b1
// converted property getter: - (int)liveIndex;	// 0x3314aab5
- (double)lowestDisplayTime;	// 0x3314aad9
- (double)mainDuration;	// 0x3314a031
- (int)maxNumberOfSecondarySlides;	// 0x3314ab71
- (int)maxNumberOfSlides;	// 0x3314ab21
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x331491b5
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x33149efd
// declared property getter: - (id)presetID;	// 0x33147d85
// converted property getter: - (int)randomSeed;	// 0x33147e5d
- (void)removeAllSecondarySlides;	// 0x33149fcd
- (void)removeAllSlides;	// 0x33149151
- (void)removeAllTexts;	// 0x33149e9d
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x33149779
- (void)removeSlidesAtIndices:(id)indices;	// 0x33148db1
- (void)removeTextsAtIndices:(id)indices;	// 0x33149d35
// converted property getter: - (id)secondarySlides;	// 0x33149285
- (void)setDuration:(double)duration;	// 0x3314a091
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x3314814d
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x33147f95
// declared property setter: - (void)setEffectID:(id)anId;	// 0x33147c55
- (void)setLayerEffect:(id)effect;	// 0x3314b855
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x3314aac5
- (void)setPhaseInDuration:(double)duration;	// 0x3314a209
- (void)setPhaseOutDuration:(double)duration;	// 0x3314a381
// declared property setter: - (void)setPresetID:(id)anId;	// 0x33147da9
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x33147e6d
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x3314b325
- (id)slideForMCSlide:(id)mcslide;	// 0x3314c3ad
- (id)slideInformation;	// 0x3314b525
// declared property getter: - (id)slides;	// 0x331482e1
// declared property getter: - (id)texts;	// 0x331498fd
- (void)updateTiming;	// 0x3314b335
@end

