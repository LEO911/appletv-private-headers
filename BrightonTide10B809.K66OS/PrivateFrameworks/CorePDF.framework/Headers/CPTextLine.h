/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import "CorePDF-Structs.h"
#import "CPTextObject.h"
#import "CPDisposable.h"

@class CPCharSequence, NSArray;

@interface CPTextLine : CPTextObject <CPDisposable> {
	CPCharSequence *charSequence;	// 76 = 0x4c
	XXStruct_iDweLB *wordArray;	// 80 = 0x50
	unsigned wordCount;	// 84 = 0x54
	CPInlineContainer *inlineList;	// 88 = 0x58
	int lineNumber;	// 92 = 0x5c
	int columnNumber;	// 96 = 0x60
	float baseline;	// 100 = 0x64
	BOOL baseLineIsNull;	// 104 = 0x68
	BOOL hasBeenSplit;	// 105 = 0x69
	BOOL hasBeenProcessed;	// 106 = 0x6a
	BOOL maySplit;	// 107 = 0x6b
	BOOL hasTabs;	// 108 = 0x6c
	NSArray *columnBreaks;	// 112 = 0x70
	NSArray *xsegments;	// 116 = 0x74
	int levels;	// 120 = 0x78
	float maximumLetterGap;	// 124 = 0x7c
	float maximumWordGap;	// 128 = 0x80
	int tabsBefore;	// 132 = 0x84
	BOOL irregular;	// 136 = 0x88
	unsigned leftSpacerIndex;	// 140 = 0x8c
	unsigned rightSpacerIndex;	// 144 = 0x90
	BOOL isListItem;	// 148 = 0x94
	unsigned listSpacerIndex;	// 152 = 0x98
	BOOL lineBreakAfter;	// 156 = 0x9c
	CPPDFStyle *uniformStyle;	// 160 = 0xa0
	unsigned short uniformStyleFlags;	// 164 = 0xa4
	float monospaceWidth;	// 168 = 0xa8
	unsigned *spacesBefore;	// 172 = 0xac
	BOOL disposed;	// 176 = 0xb0
}
@property(assign) float baseline;	// G=0x3384fc3d; S=0x3384fd09; converted property
@property(retain) CPCharSequence *charSequence;	// G=0x3384ef55; S=0x3384ef11; converted property
@property(retain) NSArray *columnBreaks;	// G=0x3384f8f1; S=0x3384f901; converted property
@property(assign) BOOL hasBeenProcessed;	// G=0x3384f8e1; S=0x3384f8d1; converted property
@property(assign) BOOL hasBeenSplit;	// G=0x3384f8c1; S=0x3384f8b1; converted property
@property(assign) BOOL hasTabs;	// G=0x3384f96d; S=0x3384f95d; converted property
@property(readonly, assign) CPInlineContainer *inlineList;	// G=0x3384f101; converted property
@property(assign) BOOL irregular;	// G=0x338503bd; S=0x338503cd; converted property
@property(assign, nonatomic) BOOL isListItem;	// G=0x338505f9; S=0x33850609; @synthesize
@property(assign, nonatomic) unsigned leftSpacerIndex;	// G=0x338505b9; S=0x338505c9; @synthesize
@property(assign) int levels;	// G=0x338502e9; S=0x338502f9; converted property
@property(assign, nonatomic) BOOL lineBreakAfter;	// G=0x33850639; S=0x33850649; @synthesize
@property(assign, nonatomic) unsigned listSpacerIndex;	// G=0x33850619; S=0x33850629; @synthesize
@property(assign) float maximumLetterGap;	// G=0x3385037d; S=0x3385038d; converted property
@property(assign) float maximumWordGap;	// G=0x3385039d; S=0x338503ad; converted property
@property(readonly, assign) float monospaceWidth;	// G=0x3385000d; converted property
@property(assign, nonatomic) unsigned rightSpacerIndex;	// G=0x338505d9; S=0x338505e9; @synthesize
@property(assign) int tabsBefore;	// G=0x3384f98d; S=0x3384f97d; converted property
@property(readonly, assign) XXStruct_iDweLB *wordArray;	// G=0x3384ef65; converted property
@property(readonly, assign) unsigned wordCount;	// G=0x3384efc5; converted property
- (id)init;	// 0x3384ec21
- (void)accept:(id)accept;	// 0x3384f945
- (int)align;	// 0x3384f2b9
- (CGPoint)anchor;	// 0x3384fbd5
- (void)anchorChunk:(id)chunk atWordIndex:(unsigned)wordIndex;	// 0x3384f111
- (id)attributes;	// 0x338503dd
- (int)baseLineAscending:(id)ascending;	// 0x3384fa61
- (int)baseLineDescending:(id)descending;	// 0x3384faa5
// converted property getter: - (float)baseline;	// 0x3384fc3d
- (CGRect)bounds;	// 0x3384f9a1
- (CGRect)boundsOfWordAtIndex:(unsigned)index;	// 0x3384efd5
- (BOOL)changesFontAt:(id)at;	// 0x3384f331
// converted property getter: - (id)charSequence;	// 0x3384ef55
// converted property getter: - (id)columnBreaks;	// 0x3384f8f1
- (id)copyWithZone:(NSZone *)zone;	// 0x3384ee35
- (void)dealloc;	// 0x3384edc1
- (void)dispose;	// 0x3384ecf5
- (void)finalize;	// 0x3384ed81
- (XXStruct_iDweLB *)firstWord;	// 0x3384f089
- (void)fitBoundsToChildren;	// 0x3384f99d
// converted property getter: - (BOOL)hasBeenProcessed;	// 0x3384f8e1
// converted property getter: - (BOOL)hasBeenSplit;	// 0x3384f8c1
- (BOOL)hasDropCap;	// 0x3385047d
- (BOOL)hasJustifiedAlignment;	// 0x3384f305
// converted property getter: - (BOOL)hasTabs;	// 0x3384f96d
- (BOOL)hyphenated;	// 0x3384fc39
- (unsigned)inlineCount;	// 0x3384f0d9
// converted property getter: - (CPInlineContainer *)inlineList;	// 0x3384f101
// converted property getter: - (BOOL)irregular;	// 0x338503bd
- (BOOL)isIndivisible;	// 0x3384fd2d
// declared property getter: - (BOOL)isListItem;	// 0x338505f9
- (BOOL)isMonospaced;	// 0x3384ffe1
- (XXStruct_iDweLB *)lastWord;	// 0x3384f0ad
// declared property getter: - (unsigned)leftSpacerIndex;	// 0x338505b9
// converted property getter: - (int)levels;	// 0x338502e9
// declared property getter: - (BOOL)lineBreakAfter;	// 0x33850639
// declared property getter: - (unsigned)listSpacerIndex;	// 0x33850619
- (BOOL)mapToWordPairs:(/*function-pointer*/ void *)wordPairs passing:(void *)passing;	// 0x3384f7d1
- (BOOL)mapToWordPairsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x3384f835
- (BOOL)mapToWords:(/*function-pointer*/ void *)words passing:(void *)passing;	// 0x3384f705
- (BOOL)mapToWordsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x3384f765
// converted property getter: - (float)maximumLetterGap;	// 0x3385037d
// converted property getter: - (float)maximumWordGap;	// 0x3385039d
- (float)medianFontSize;	// 0x33850531
// converted property getter: - (float)monospaceWidth;	// 0x3385000d
- (id)newTextLineFromWordAt:(unsigned)at lengthInWords:(unsigned)words;	// 0x3384f3c1
- (BOOL)overlapsHorizontally:(CGRect)horizontally;	// 0x3384fb39
- (BOOL)overlapsWith:(id)with;	// 0x3384fae9
- (id)properties;	// 0x3384f8a5
- (void)recomputeBaseline;	// 0x3384fd85
- (void)recomputeLevels;	// 0x33850309
- (BOOL)removeTextLines:(id)lines whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x3384f56d
// declared property getter: - (unsigned)rightSpacerIndex;	// 0x338505d9
// converted property setter: - (void)setBaseline:(float)baseline;	// 0x3384fd09
- (void)setBaselineToNull;	// 0x3384fd19
// converted property setter: - (void)setCharSequence:(id)sequence;	// 0x3384ef11
// converted property setter: - (void)setColumnBreaks:(id)breaks;	// 0x3384f901
// converted property setter: - (void)setHasBeenProcessed:(BOOL)processed;	// 0x3384f8d1
// converted property setter: - (void)setHasBeenSplit:(BOOL)split;	// 0x3384f8b1
// converted property setter: - (void)setHasTabs:(BOOL)tabs;	// 0x3384f95d
// converted property setter: - (void)setIrregular:(BOOL)irregular;	// 0x338503cd
// declared property setter: - (void)setIsListItem:(BOOL)item;	// 0x33850609
// declared property setter: - (void)setLeftSpacerIndex:(unsigned)index;	// 0x338505c9
// converted property setter: - (void)setLevels:(int)levels;	// 0x338502f9
// declared property setter: - (void)setLineBreakAfter:(BOOL)after;	// 0x33850649
// declared property setter: - (void)setListSpacerIndex:(unsigned)index;	// 0x33850629
// converted property setter: - (void)setMaximumLetterGap:(float)gap;	// 0x3385038d
// converted property setter: - (void)setMaximumWordGap:(float)gap;	// 0x338503ad
// declared property setter: - (void)setRightSpacerIndex:(unsigned)index;	// 0x338505e9
- (void)setSpaces:(unsigned)spaces beforeWordAtIndex:(unsigned)index;	// 0x33850241
// converted property setter: - (void)setTabsBefore:(int)before;	// 0x3384f97d
- (unsigned)spacesBeforeWordAtIndex:(unsigned)index;	// 0x33850209
- (BOOL)styleIsUniform:(CPPDFStyle **)uniform styleFlags:(unsigned short)flags;	// 0x3384fee9
// converted property getter: - (int)tabsBefore;	// 0x3384f98d
- (int)topIsAbove:(id)above;	// 0x338503e9
- (void)translateObjectYBy:(float)by;	// 0x3384fd31
// converted property getter: - (XXStruct_iDweLB *)wordArray;	// 0x3384ef65
- (XXStruct_iDweLB *)wordArrayOfSize:(unsigned)size;	// 0x3384ef75
- (XXStruct_iDweLB *)wordAtIndex:(unsigned)index;	// 0x3384f039
// converted property getter: - (unsigned)wordCount;	// 0x3384efc5
- (long)zOrder;	// 0x3384f261
@end

