/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import <NSObject.h> // Unknown library
#import "DATask.h"
#import "NSURLConnectionDelegate.h"
#import "DAEAS-Structs.h"

@class NSMutableSet, NSString, NSDate, NSError, ASTaskManager, NSHTTPURLResponse, ASItem, NSURLConnection, NSURLRequest, NSTimer, DATaskManager, ASParseContext;

@interface ASTask : NSObject <DATask, NSURLConnectionDelegate> {
	BOOL _haveSwitchedCodePage;	// 4 = 0x4
	BOOL _haveParsedCommand;	// 5 = 0x5
	ASItem *_currentlyParsingItem;	// 8 = 0x8
	id _delegate;	// 12 = 0xc
	NSHTTPURLResponse *_response;	// 16 = 0x10
	ASParseContext *_parseContext;	// 20 = 0x14
	NSURLConnection *_connection;	// 24 = 0x18
	NSURLRequest *_request;	// 28 = 0x1c
	NSMutableSet *_attemptedIdentities;	// 32 = 0x20
	BOOL _isFakingIt;	// 36 = 0x24
	BOOL _didSendRequest;	// 37 = 0x25
	BOOL _didFailWithError;	// 38 = 0x26
	BOOL _didCancel;	// 39 = 0x27
	BOOL _didReceiveResponse;	// 40 = 0x28
	BOOL _didReceiveData;	// 41 = 0x29
	BOOL _didFinishLoading;	// 42 = 0x2a
	BOOL _didReset;	// 43 = 0x2b
	BOOL _finished;	// 44 = 0x2c
	BOOL _inDelegateCallout;	// 45 = 0x2d
	BOOL _finishedByTimeoutEnforcer;	// 46 = 0x2e
	int _interfaceBinding;	// 48 = 0x30
	void *_context;	// 52 = 0x34
	BOOL _isExclusive;	// 56 = 0x38
	int _numBadPasswordResponses;	// 60 = 0x3c
	BOOL _askedToCancelWhileModal;	// 64 = 0x40
	BOOL _haveCheckedForTopLevelError;	// 65 = 0x41
	BOOL _handledTopLevelError;	// 66 = 0x42
	int _taskID;	// 68 = 0x44
	ASTaskManager *_taskManager;	// 72 = 0x48
	int _modalReason;	// 76 = 0x4c
	int _modalPushCount;	// 80 = 0x50
	NSString *_lastKnownPolicyKey;	// 84 = 0x54
	NSError *_passwordNotificationError;	// 88 = 0x58
	NSString *_lastKnownPassword;	// 92 = 0x5c
	NSDate *_dateConnectionWentOut;	// 96 = 0x60
	NSTimer *_timeoutEnforcer;	// 100 = 0x64
	BOOL _retry;	// 104 = 0x68
}
@property(assign, nonatomic) BOOL askedToCancelWhileModal;	// G=0x33a326fd; S=0x33a3270d; @synthesize=_askedToCancelWhileModal
@property(assign, nonatomic) void *context;	// G=0x33a3267d; S=0x33a3268d; @synthesize=_context
@property(retain, nonatomic) ASItem *currentlyParsingItem;	// G=0x33a326dd; S=0x33a326ed; @synthesize=_currentlyParsingItem
@property(assign, nonatomic) id delegate;	// G=0x33a3265d; S=0x33a3266d; @synthesize=_delegate
@property(assign, nonatomic) int interfaceBinding;	// G=0x33a3269d; S=0x33a326ad; @synthesize=_interfaceBinding
@property(assign, nonatomic) BOOL isExclusive;	// G=0x33a326bd; S=0x33a326cd; @synthesize=_isExclusive
@property(retain, nonatomic) NSString *lastKnownPassword;	// G=0x33a3271d; S=0x33a3272d; @synthesize=_lastKnownPassword
@property(readonly, assign) int taskID;	// G=0x33a2cab1; converted property
@property(assign, nonatomic) DATaskManager *taskManager;	// G=0x33a3264d; S=0x33a32529; @synthesize=_taskManager
@property(retain, nonatomic) NSTimer *timeoutEnforcer;	// G=0x33a3273d; S=0x33a325f9; @synthesize=_timeoutEnforcer
+ (void)_restoreDefaultTaskTimeout;	// 0x33a2caf9
+ (void)_setDefaultTaskTimeout:(double)timeout;	// 0x33a2cae5
- (id)init;	// 0x33a2c559
- (id)_HTTPMethodForRequest:(id)request;	// 0x33a2cad5
- (void)_addAuthToRequest:(id)request;	// 0x33a2e729
- (id)_applyAuthenticationChain:(CFArrayRef)chain toRequest:(id)request;	// 0x33a2f925
- (void)_continuePerformTask;	// 0x33a2e9d9
- (id)_easVersion;	// 0x33a2cba5
- (void)_failImmediately;	// 0x33a2e159
- (void)_handleBadPasswordResponse;	// 0x33a2fa6d
- (BOOL)_handleCertificateError:(id)error;	// 0x33a2fcc5
- (BOOL)_handleRedirect:(id)redirect;	// 0x33a2fd85
- (void)_initFakeParseContext;	// 0x33a322e1
- (BOOL)_isWBXML;	// 0x33a2cbe5
- (id)_policyKey;	// 0x33a2cbc5
- (void)_popModal;	// 0x33a2e349
- (void)_pushModalForReason:(int)reason;	// 0x33a2e2e1
- (void)_setHTTPParametersOnRequest:(id)request outBodyStream:(id *)stream outBodyData:(id *)data;	// 0x33a2e83d
- (BOOL)_shouldRedirectToHTTPForRequest:(id)request;	// 0x33a2cad1
- (BOOL)_shouldSendAuthForRequest:(id)request;	// 0x33a2cacd
- (void)_timeoutEnforcerFired:(id)fired;	// 0x33a2d405
- (id)_url;	// 0x33a2cb69
// declared property getter: - (BOOL)askedToCancelWhileModal;	// 0x33a326fd
- (BOOL)attemptRetryWithStatus:(int)status error:(id)error;	// 0x33a2f1d1
- (void)cancelTaskWithReason:(int)reason underlyingError:(id)error;	// 0x33a2f7cd
- (BOOL)checkForErrorInContext:(id)context;	// 0x33a2cd65
- (id)command;	// 0x33a2cc19
- (int)commandCode;	// 0x33a2cc35
- (BOOL)connection:(id)connection canAuthenticateAgainstProtectionSpace:(id)space;	// 0x33a31081
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x33a31a01
- (void)connection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;	// 0x33a31119
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x33a30115
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x33a316c1
- (void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;	// 0x33a30079
- (id)connection:(id)connection needNewBodyStream:(id)stream;	// 0x33a30a6d
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;	// 0x33a30ac9
- (int)connectionActionForResponse:(id)response;	// 0x33a2d319
- (void)connectionDidFinishLoading:(id)connection;	// 0x33a31309
- (id)contentType;	// 0x33a2d2e9
// declared property getter: - (void *)context;	// 0x33a3267d
// declared property getter: - (id)currentlyParsingItem;	// 0x33a326dd
- (void)dealloc;	// 0x33a2c69d
// declared property getter: - (id)delegate;	// 0x33a3265d
- (id)description;	// 0x33a2c8c9
- (void)didCallOutToDelegate;	// 0x33a2f435
- (void)didProcessContext:(id)context;	// 0x33a2d2f9
- (BOOL)expectsWBXML;	// 0x33a2cc15
- (void)finishWithError:(id)error;	// 0x33a2f4b9
- (BOOL)getTopLevelToken:(char *)token outStatusCodePage:(char *)page outStatusToken:(char *)token3;	// 0x33a2ccd5
- (void)handleTopLevelErrorStatus:(id)status;	// 0x33a32095
- (id)httpMethod;	// 0x33a2cac1
// declared property getter: - (int)interfaceBinding;	// 0x33a3269d
// declared property getter: - (BOOL)isExclusive;	// 0x33a326bd
- (BOOL)isInCallOutToDelegate;	// 0x33a2f4a9
// declared property getter: - (id)lastKnownPassword;	// 0x33a3271d
- (void)loadRequest:(id)request;	// 0x33a2d4d9
- (int)numDownloadedElements;	// 0x33a32495
- (id)parameterData;	// 0x33a2cc81
- (double)percentComplete;	// 0x33a2d155
- (void)performTask;	// 0x33a2e205
- (BOOL)processContext:(id)context;	// 0x33a2ccd1
- (void)reportStatusWithError:(id)error;	// 0x33a32499
- (id)requestBody;	// 0x33a2cc89
- (id)requestBodyStreamOutKnownSize:(int *)size;	// 0x33a2cc85
- (BOOL)requiresEASVersionInformaton;	// 0x33a2d311
- (void)reset;	// 0x33a3235d
- (id)responseContentType;	// 0x33a2ca71
// declared property setter: - (void)setAskedToCancelWhileModal:(BOOL)cancelWhileModal;	// 0x33a3270d
// declared property setter: - (void)setContext:(void *)context;	// 0x33a3268d
// declared property setter: - (void)setCurrentlyParsingItem:(id)item;	// 0x33a326ed
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x33a3266d
// declared property setter: - (void)setInterfaceBinding:(int)binding;	// 0x33a326ad
// declared property setter: - (void)setIsExclusive:(BOOL)exclusive;	// 0x33a326cd
// declared property setter: - (void)setLastKnownPassword:(id)password;	// 0x33a3272d
// declared property setter: - (void)setTaskManager:(id)manager;	// 0x33a32529
// declared property setter: - (void)setTimeoutEnforcer:(id)enforcer;	// 0x33a325f9
- (BOOL)shouldHandlePasswordErrors;	// 0x33a30075
- (BOOL)shouldHoldPowerAssertion;	// 0x33a2d315
- (BOOL)shouldLogIncomingData;	// 0x33a2d30d
- (BOOL)shouldReportTimeInNetwork;	// 0x33a3248d
- (BOOL)shouldStallAfterCannotFindHost;	// 0x33a32491
- (void)startModal;	// 0x33a2e38d
// converted property getter: - (int)taskID;	// 0x33a2cab1
// declared property getter: - (id)taskManager;	// 0x33a3264d
- (void)taskManagerDidFailToUpdatePolicyKey;	// 0x33a2e6e9
- (void)taskManagerDidFindEASVersion;	// 0x33a2e5b9
- (void)taskManagerDidUpdatePolicyKey;	// 0x33a2e651
- (int)taskStatusForError:(id)error;	// 0x33a2d165
- (int)taskStatusForExchangeStatus:(int)exchangeStatus;	// 0x33a2d161
- (void)tearDownResources;	// 0x33a2e089
// declared property getter: - (id)timeoutEnforcer;	// 0x33a3273d
- (double)timeoutInterval;	// 0x33a2cb11
- (void)willCallOutToDelegate;	// 0x33a2f291
- (void)willProcessContext;	// 0x33a2d2f5
@end

