/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import <NSObject.h> // Unknown library

@class NSError, GEOTileUsageInfo, NSLock, GEOTileKeyList;

__attribute__((visibility("hidden")))
@interface _GEOTileLoadListener : NSObject {
	id _progress;	// 4 = 0x4
	id _finished;	// 8 = 0x8
	id _error;	// 12 = 0xc
	GEOTileKeyList *_originalList;	// 16 = 0x10
	GEOTileKeyList *_networkLoadList;	// 20 = 0x14
	GEOTileKeyList *_satisfiedList;	// 24 = 0x18
	CFRunLoopRef _runloop;	// 28 = 0x1c
	BOOL _finishWhenDecoded;	// 32 = 0x20
	int _tilesDecoding;	// 36 = 0x24
	NSError *_finishError;	// 40 = 0x28
	NSLock *_callbacksLock;	// 44 = 0x2c
	BOOL _checkDiskAllowed;	// 48 = 0x30
	BOOL _preload;	// 49 = 0x31
	GEOTileUsageInfo *_usageInfo;	// 52 = 0x34
}
@property(assign, nonatomic) BOOL checkDiskAllowed;	// G=0x33f7ddb5; S=0x33f52715; @synthesize=_checkDiskAllowed
@property(copy, nonatomic) id error;	// G=0x33f7dd91; S=0x33f5261d; @synthesize=_error
@property(copy, nonatomic) id finished;	// G=0x33f7dd7d; S=0x33f52609; @synthesize=_finished
@property(retain, nonatomic) GEOTileKeyList *networkLoadList;	// G=0x33f52725; S=0x33f5263d; @synthesize=_networkLoadList
@property(retain, nonatomic) GEOTileKeyList *originalList;	// G=0x33f52735; S=0x33f5262d; @synthesize=_originalList
@property(assign, nonatomic, getter=isPreload) BOOL preload;	// G=0x33f52885; S=0x33f7ddc5; @synthesize=_preload
@property(copy, nonatomic) id progress;	// G=0x33f54329; S=0x33f525f5; @synthesize=_progress
@property(readonly, assign) CFRunLoopRef runloop;	// G=0x33f7db3d; converted property
@property(retain, nonatomic) GEOTileKeyList *satisfiedList;	// G=0x33f7dda5; S=0x33f5264d; @synthesize=_satisfiedList
- (id)init;	// 0x33f523fd
- (void)_tryFinish;	// 0x33f548d9
- (void)addSatisfiedKey:(const GEOTileKey *)key fromDisk:(BOOL)disk dataLength:(unsigned)length;	// 0x33f54255
- (void)beginDecode;	// 0x33f53c9d
// declared property getter: - (BOOL)checkDiskAllowed;	// 0x33f7ddb5
- (void)dealloc;	// 0x33f55085
- (void)endDecode;	// 0x33f548b1
// declared property getter: - (id)error;	// 0x33f7dd91
- (void)finishDecodingAndSendError:(id)error;	// 0x33f7db4d
- (void)finishWhenDecoded;	// 0x33f54bcd
// declared property getter: - (id)finished;	// 0x33f7dd7d
// declared property getter: - (BOOL)isPreload;	// 0x33f52885
- (void)lockCallbacks;	// 0x33f54309
// declared property getter: - (id)networkLoadList;	// 0x33f52725
// declared property getter: - (id)originalList;	// 0x33f52735
// declared property getter: - (id)progress;	// 0x33f54329
// converted property getter: - (CFRunLoopRef)runloop;	// 0x33f7db3d
// declared property getter: - (id)satisfiedList;	// 0x33f7dda5
// declared property setter: - (void)setCheckDiskAllowed:(BOOL)allowed;	// 0x33f52715
// declared property setter: - (void)setError:(id)error;	// 0x33f5261d
// declared property setter: - (void)setFinished:(id)finished;	// 0x33f52609
// declared property setter: - (void)setNetworkLoadList:(id)list;	// 0x33f5263d
// declared property setter: - (void)setOriginalList:(id)list;	// 0x33f5262d
// declared property setter: - (void)setPreload:(BOOL)preload;	// 0x33f7ddc5
// declared property setter: - (void)setProgress:(id)progress;	// 0x33f525f5
// declared property setter: - (void)setSatisfiedList:(id)list;	// 0x33f5264d
- (void)unlockCallbacks;	// 0x33f54341
@end

