/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import <PBCodable.h> // Unknown library

@class NSString, NSMutableArray, GEOMapRegion, GEOLatLng, GEOAddress;

@interface GEOPlace : PBCodable {
	long long _geoId;	// 4 = 0x4
	long long _uID;	// 12 = 0xc
	GEOAddress *_address;	// 20 = 0x14
	int _addressGeocodeAccuracy;	// 24 = 0x18
	NSMutableArray *_business;	// 28 = 0x1c
	GEOLatLng *_center;	// 32 = 0x20
	NSMutableArray *_entryPoints;	// 36 = 0x24
	int _localSearchProviderID;	// 40 = 0x28
	GEOMapRegion *_mapRegion;	// 44 = 0x2c
	NSString *_name;	// 48 = 0x30
	GEOAddress *_phoneticAddress;	// 52 = 0x34
	NSString *_phoneticName;	// 56 = 0x38
	int _type;	// 60 = 0x3c
	int _version;	// 64 = 0x40
	BOOL _isDisputed;	// 68 = 0x44
	struct {
		unsigned geoId : 1;
		unsigned uID : 1;
		unsigned addressGeocodeAccuracy : 1;
		unsigned localSearchProviderID : 1;
		unsigned type : 1;
		unsigned version : 1;
		unsigned isDisputed : 1;
	} _has;	// 69 = 0x45
}
@property(retain, nonatomic) GEOAddress *address;	// G=0x33f6c0b9; S=0x33f4cb21; @synthesize=_address
@property(assign, nonatomic) int addressGeocodeAccuracy;	// G=0x33f727ed; S=0x33f90511; @synthesize=_addressGeocodeAccuracy
@property(retain, nonatomic) NSMutableArray *business;	// G=0x33f71c89; S=0x33f6c025; @synthesize=_business
@property(retain, nonatomic) GEOLatLng *center;	// G=0x33f6c051; S=0x33f4cd51; @synthesize=_center
@property(retain, nonatomic) NSMutableArray *entryPoints;	// G=0x33f91885; S=0x33f6c035; @synthesize=_entryPoints
@property(assign, nonatomic) long long geoId;	// G=0x33f72831; S=0x33f90719; @synthesize=_geoId
@property(readonly, assign, nonatomic) BOOL hasAddress;	// G=0x33f90405; 
@property(assign, nonatomic) BOOL hasAddressGeocodeAccuracy;	// G=0x33f90559; S=0x33f90539; 
@property(readonly, assign, nonatomic) BOOL hasCenter;	// G=0x33f9044d; 
@property(assign, nonatomic) BOOL hasGeoId;	// G=0x33f90769; S=0x33f9074d; 
@property(assign, nonatomic) BOOL hasIsDisputed;	// G=0x33f906a9; S=0x33f90689; 
@property(assign, nonatomic) BOOL hasLocalSearchProviderID;	// G=0x33f90705; S=0x33f906e5; 
@property(readonly, assign, nonatomic) BOOL hasMapRegion;	// G=0x33f903ed; 
@property(readonly, assign, nonatomic) BOOL hasName;	// G=0x33f903d5; 
@property(readonly, assign, nonatomic) BOOL hasPhoneticAddress;	// G=0x33f90435; 
@property(readonly, assign, nonatomic) BOOL hasPhoneticName;	// G=0x33f9041d; 
@property(assign, nonatomic) BOOL hasType;	// G=0x33f903c1; S=0x33f903a1; 
@property(assign, nonatomic) BOOL hasUID;	// G=0x33f90309; S=0x33f902e9; 
@property(assign, nonatomic) BOOL hasVersion;	// G=0x33f90365; S=0x33f90345; 
@property(assign, nonatomic) BOOL isDisputed;	// G=0x33f90639; S=0x33f90661; @synthesize=_isDisputed
@property(assign, nonatomic) int localSearchProviderID;	// G=0x33f91895; S=0x33f906bd; @synthesize=_localSearchProviderID
@property(retain, nonatomic) GEOMapRegion *mapRegion;	// G=0x33f708bd; S=0x33f4ccc1; @synthesize=_mapRegion
@property(retain, nonatomic) NSString *name;	// G=0x33f6c0a9; S=0x33f55fc5; @synthesize=_name
@property(retain, nonatomic) GEOAddress *phoneticAddress;	// G=0x33f91875; S=0x33f6c015; @synthesize=_phoneticAddress
@property(retain, nonatomic) NSString *phoneticName;	// G=0x33f91865; S=0x33f6c005; @synthesize=_phoneticName
@property(assign, nonatomic) int type;	// G=0x33f91855; S=0x33f90379; @synthesize=_type
@property(assign, nonatomic) long long uID;	// G=0x33f9182d; S=0x33f902b5; @synthesize=_uID
@property(assign, nonatomic) int version;	// G=0x33f91845; S=0x33f9031d; @synthesize=_version
- (void)addBusiness:(id)business;	// 0x33f90485
- (void)addEntryPoint:(id)point;	// 0x33f9058d
// declared property getter: - (id)address;	// 0x33f6c0b9
- (id)addressDictionary;	// 0x33f7bf99
// declared property getter: - (int)addressGeocodeAccuracy;	// 0x33f727ed
// declared property getter: - (id)business;	// 0x33f71c89
- (id)businessAtIndex:(unsigned)index;	// 0x33f904f1
- (unsigned)businessCount;	// 0x33f6c0c9
// declared property getter: - (id)center;	// 0x33f6c051
- (void)clearBusiness;	// 0x33f90465
- (void)clearEntryPoints;	// 0x33f9056d
- (void)copyTo:(id)to;	// 0x33f90e59
- (void)dealloc;	// 0x33f6bf35
- (id)description;	// 0x33f9077d
- (id)dictionaryRepresentation;	// 0x33f907ed
- (id)entryPointAtIndex:(unsigned)index;	// 0x33f90619
// declared property getter: - (id)entryPoints;	// 0x33f91885
- (unsigned)entryPointsCount;	// 0x33f905f9
// declared property getter: - (long long)geoId;	// 0x33f72831
// declared property getter: - (BOOL)hasAddress;	// 0x33f90405
// declared property getter: - (BOOL)hasAddressGeocodeAccuracy;	// 0x33f90559
// declared property getter: - (BOOL)hasCenter;	// 0x33f9044d
// declared property getter: - (BOOL)hasGeoId;	// 0x33f90769
// declared property getter: - (BOOL)hasIsDisputed;	// 0x33f906a9
// declared property getter: - (BOOL)hasLocalSearchProviderID;	// 0x33f90705
// declared property getter: - (BOOL)hasMapRegion;	// 0x33f903ed
// declared property getter: - (BOOL)hasName;	// 0x33f903d5
// declared property getter: - (BOOL)hasPhoneticAddress;	// 0x33f90435
// declared property getter: - (BOOL)hasPhoneticName;	// 0x33f9041d
// declared property getter: - (BOOL)hasType;	// 0x33f903c1
// declared property getter: - (BOOL)hasUID;	// 0x33f90309
// declared property getter: - (BOOL)hasVersion;	// 0x33f90365
- (unsigned)hash;	// 0x33f915ed
// declared property getter: - (BOOL)isDisputed;	// 0x33f90639
- (BOOL)isEqual:(id)equal;	// 0x33f91275
// declared property getter: - (int)localSearchProviderID;	// 0x33f91895
// declared property getter: - (id)mapRegion;	// 0x33f708bd
// declared property getter: - (id)name;	// 0x33f6c0a9
// declared property getter: - (id)phoneticAddress;	// 0x33f91875
// declared property getter: - (id)phoneticName;	// 0x33f91865
- (BOOL)readFrom:(id)from;	// 0x33f6c045
// declared property setter: - (void)setAddress:(id)address;	// 0x33f4cb21
// declared property setter: - (void)setAddressGeocodeAccuracy:(int)accuracy;	// 0x33f90511
// declared property setter: - (void)setBusiness:(id)business;	// 0x33f6c025
// declared property setter: - (void)setCenter:(id)center;	// 0x33f4cd51
// declared property setter: - (void)setEntryPoints:(id)points;	// 0x33f6c035
// declared property setter: - (void)setGeoId:(long long)anId;	// 0x33f90719
// declared property setter: - (void)setHasAddressGeocodeAccuracy:(BOOL)accuracy;	// 0x33f90539
// declared property setter: - (void)setHasGeoId:(BOOL)anId;	// 0x33f9074d
// declared property setter: - (void)setHasIsDisputed:(BOOL)disputed;	// 0x33f90689
// declared property setter: - (void)setHasLocalSearchProviderID:(BOOL)anId;	// 0x33f906e5
// declared property setter: - (void)setHasType:(BOOL)type;	// 0x33f903a1
// declared property setter: - (void)setHasUID:(BOOL)uid;	// 0x33f902e9
// declared property setter: - (void)setHasVersion:(BOOL)version;	// 0x33f90345
// declared property setter: - (void)setIsDisputed:(BOOL)disputed;	// 0x33f90661
// declared property setter: - (void)setLocalSearchProviderID:(int)anId;	// 0x33f906bd
// declared property setter: - (void)setMapRegion:(id)region;	// 0x33f4ccc1
// declared property setter: - (void)setName:(id)name;	// 0x33f55fc5
// declared property setter: - (void)setPhoneticAddress:(id)address;	// 0x33f6c015
// declared property setter: - (void)setPhoneticName:(id)name;	// 0x33f6c005
// declared property setter: - (void)setType:(int)type;	// 0x33f90379
// declared property setter: - (void)setUID:(long long)uid;	// 0x33f902b5
// declared property setter: - (void)setVersion:(int)version;	// 0x33f9031d
// declared property getter: - (int)type;	// 0x33f91855
// declared property getter: - (long long)uID;	// 0x33f9182d
// declared property getter: - (int)version;	// 0x33f91845
- (void)writeTo:(id)to;	// 0x33f70fc1
@end

