/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OADProperties.h"

@class OADTextBodyAutoFit, OADTextWarp;

@interface OADTextBodyProperties : OADProperties {
	OADTextBodyAutoFit *mAutoFit;	// 12 = 0xc
	OADTextWarp *mTextWarp;	// 16 = 0x10
	double mTopInset;	// 20 = 0x14
	double mLeftInset;	// 28 = 0x1c
	double mBottomInset;	// 36 = 0x24
	double mRightInset;	// 44 = 0x2c
	double mRotation;	// 52 = 0x34
	double mColumnSpacing;	// 60 = 0x3c
	unsigned short mColumnCount;	// 68 = 0x44
	unsigned short mTextBodyId;	// 70 = 0x46
	unsigned char mTextAnchorType;	// 72 = 0x48
	unsigned char mFlowType;	// 73 = 0x49
	unsigned char mWrapType;	// 74 = 0x4a
	unsigned char mVerticalOverflowType;	// 75 = 0x4b
	unsigned char mHorizontalOverflowType;	// 76 = 0x4c
	unsigned mRepectFirstLastParagraphSpacing : 1;	// 77 = 0x4d
	unsigned mIsUpright : 1;	// 77 = 0x4d
	unsigned mIsAnchorCenter : 1;	// 77 = 0x4d
	unsigned mIsLeftToRightColumns : 1;	// 77 = 0x4d
	unsigned mHasVerticalOverflowType : 1;	// 77 = 0x4d
	unsigned mHasHorizontalOverflowType : 1;	// 77 = 0x4d
	unsigned mHasTextBodyId : 1;	// 77 = 0x4d
	unsigned mHasFlowType : 1;	// 77 = 0x4d
	unsigned mHasWrapType : 1;	// 78 = 0x4e
	unsigned mHasTextAnchorType : 1;	// 78 = 0x4e
	unsigned mHasIsAnchorCenter : 1;	// 78 = 0x4e
	unsigned mHasIsUpright : 1;	// 78 = 0x4e
	unsigned mHasRotation : 1;	// 78 = 0x4e
	unsigned mHasColumnCount : 1;	// 78 = 0x4e
	unsigned mHasColumnSpacing : 1;	// 78 = 0x4e
	unsigned mHasIsLeftToRightColumns : 1;	// 78 = 0x4e
	unsigned mHasRepectFirstLastParagraphSpacing : 1;	// 79 = 0x4f
	unsigned mHasTopInset : 1;	// 79 = 0x4f
	unsigned mHasLeftInset : 1;	// 79 = 0x4f
	unsigned mHasRightInset : 1;	// 79 = 0x4f
	unsigned mHasBottomInset : 1;	// 79 = 0x4f
}
@property(retain) id autoFit;	// G=0x3486f80d; S=0x3481bf35; converted property
@property(assign) double bottomInset;	// G=0x3486f655; S=0x3481be0d; converted property
@property(assign) int columnCount;	// G=0x3486f6c5; S=0x3481be65; converted property
@property(assign) double columnSpacing;	// G=0x3486f731; S=0x3481be89; converted property
@property(assign) int flowType;	// G=0x3486f8fd; S=0x3481bf75; converted property
@property(assign) int horizontalOverflowType;	// G=0x34a55ac9; S=0x3481bfe1; converted property
@property(assign) BOOL isAnchorCenter;	// G=0x3486fa8d; S=0x3481c049; converted property
@property(assign) BOOL isLeftToRightColumns;	// G=0x3486f7a5; S=0x3481beb9; converted property
@property(assign) BOOL isUpright;	// G=0x3486fb61; S=0x3481c0ad; converted property
@property(assign) double leftInset;	// G=0x3486f569; S=0x3481bde1; converted property
@property(assign) BOOL respectLastFirstLineSpacing;	// G=0x34a55a5d; S=0x3481bd81; converted property
@property(assign) double rightInset;	// G=0x3486f5e1; S=0x3481be39; converted property
@property(assign) double rotation;	// G=0x3486fbcd; S=0x3481c0e5; converted property
@property(assign) int textAnchorType;	// G=0x3486faf9; S=0x3481c081; converted property
@property(assign) int textBodyId;	// G=0x34a55af9; S=0x34a55b09; converted property
@property(retain) id textWarp;	// G=0x349ac181; S=0x3481c009; converted property
@property(assign) double topInset;	// G=0x3486f4f5; S=0x3481bdb5; converted property
@property(assign) int verticalOverflowType;	// G=0x3486f9d5; S=0x3481bfbd; converted property
@property(assign) int wrapType;	// G=0x3486f969; S=0x3481bf99; converted property
+ (id)defaultEscherWordArtProperties;	// 0x348c9e11
+ (id)defaultProperties;	// 0x3481bb0d
- (id)init;	// 0x3481badd
- (id)initWithDefaults;	// 0x3481bb59
// converted property getter: - (id)autoFit;	// 0x3486f80d
// converted property getter: - (double)bottomInset;	// 0x3486f655
// converted property getter: - (int)columnCount;	// 0x3486f6c5
// converted property getter: - (double)columnSpacing;	// 0x3486f731
- (void)dealloc;	// 0x3486c471
// converted property getter: - (int)flowType;	// 0x3486f8fd
- (BOOL)hasAutoFit;	// 0x3486f7d9
- (BOOL)hasBottomInset;	// 0x3486f61d
- (BOOL)hasColumnCount;	// 0x3486f68d
- (BOOL)hasColumnSpacing;	// 0x3486f6f9
- (BOOL)hasFlowType;	// 0x3486f8c5
- (BOOL)hasHorizontalOverflowType;	// 0x34a55a91
- (BOOL)hasIsAnchorCenter;	// 0x3486fa55
- (BOOL)hasIsLeftToRightColumns;	// 0x3486f76d
- (BOOL)hasIsUpright;	// 0x3486fb29
- (BOOL)hasLeftInset;	// 0x3486f52d
- (BOOL)hasRespectLastFirstLineSpacing;	// 0x3486f485
- (BOOL)hasRightInset;	// 0x3486f5a5
- (BOOL)hasRotation;	// 0x3486fb95
- (BOOL)hasTextAnchorType;	// 0x3486fac1
- (BOOL)hasTextBodyId;	// 0x3486fa05
- (BOOL)hasTextWarp;	// 0x3486fa1d
- (BOOL)hasTopInset;	// 0x3486f4bd
- (BOOL)hasVerticalOverflowType;	// 0x3486f99d
- (BOOL)hasWrapType;	// 0x3486f931
- (unsigned)hash;	// 0x34a55b31
// converted property getter: - (int)horizontalOverflowType;	// 0x34a55ac9
// converted property getter: - (BOOL)isAnchorCenter;	// 0x3486fa8d
- (BOOL)isEqual:(id)equal;	// 0x34a55d19
// converted property getter: - (BOOL)isLeftToRightColumns;	// 0x3486f7a5
// converted property getter: - (BOOL)isUpright;	// 0x3486fb61
// converted property getter: - (double)leftInset;	// 0x3486f569
- (void)removeUnnecessaryOverrides;	// 0x3486eba9
// converted property getter: - (BOOL)respectLastFirstLineSpacing;	// 0x34a55a5d
// converted property getter: - (double)rightInset;	// 0x3486f5e1
// converted property getter: - (double)rotation;	// 0x3486fbcd
// converted property setter: - (void)setAutoFit:(id)fit;	// 0x3481bf35
// converted property setter: - (void)setBottomInset:(double)inset;	// 0x3481be0d
// converted property setter: - (void)setColumnCount:(int)count;	// 0x3481be65
// converted property setter: - (void)setColumnSpacing:(double)spacing;	// 0x3481be89
// converted property setter: - (void)setFlowType:(int)type;	// 0x3481bf75
// converted property setter: - (void)setHorizontalOverflowType:(int)type;	// 0x3481bfe1
// converted property setter: - (void)setIsAnchorCenter:(BOOL)center;	// 0x3481c049
// converted property setter: - (void)setIsLeftToRightColumns:(BOOL)rightColumns;	// 0x3481beb9
// converted property setter: - (void)setIsUpright:(BOOL)upright;	// 0x3481c0ad
// converted property setter: - (void)setLeftInset:(double)inset;	// 0x3481bde1
// converted property setter: - (void)setRespectLastFirstLineSpacing:(BOOL)spacing;	// 0x3481bd81
// converted property setter: - (void)setRightInset:(double)inset;	// 0x3481be39
// converted property setter: - (void)setRotation:(double)rotation;	// 0x3481c0e5
// converted property setter: - (void)setTextAnchorType:(int)type;	// 0x3481c081
// converted property setter: - (void)setTextBodyId:(int)anId;	// 0x34a55b09
// converted property setter: - (void)setTextWarp:(id)warp;	// 0x3481c009
// converted property setter: - (void)setTopInset:(double)inset;	// 0x3481bdb5
// converted property setter: - (void)setVerticalOverflowType:(int)type;	// 0x3481bfbd
// converted property setter: - (void)setWrapType:(int)type;	// 0x3481bf99
// converted property getter: - (int)textAnchorType;	// 0x3486faf9
// converted property getter: - (int)textBodyId;	// 0x34a55af9
// converted property getter: - (id)textWarp;	// 0x349ac181
// converted property getter: - (double)topInset;	// 0x3486f4f5
// converted property getter: - (int)verticalOverflowType;	// 0x3486f9d5
// converted property getter: - (int)wrapType;	// 0x3486f969
@end

