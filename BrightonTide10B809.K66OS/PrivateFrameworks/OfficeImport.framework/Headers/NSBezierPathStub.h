/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


@interface NSBezierPathStub : NSObject <NSCopying> {
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x34ae6055; S=0x34ae6059; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x34ae495d; converted property
@property(readonly, assign) int elementCount;	// G=0x34ae4bc1; converted property
@property(assign) float flatness;	// G=0x34ae3d45; S=0x34ae3d55; converted property
@property(assign) unsigned lineCapStyle;	// G=0x34ae3c89; S=0x34ae3c9d; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x34ae3cbd; S=0x34ae3cd1; converted property
@property(assign) float lineWidth;	// G=0x34ae3c69; S=0x34ae3c79; converted property
@property(assign) float miterLimit;	// G=0x34ae3d25; S=0x34ae3d35; converted property
@property(assign) unsigned windingRule;	// G=0x34ae3cf1; S=0x34ae3d05; converted property
+ (id)bezierPath;	// 0x34ae2ee1
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x34ae2f59
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x34ae2f19
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x34ae2f99
+ (void)clipRect:(CGRect)rect;	// 0x34ae315d
+ (CGContextRef)currentCGContext;	// 0x34ae2e91
+ (float)defaultFlatness;	// 0x34ae32c9
+ (unsigned)defaultLineCapStyle;	// 0x34ae3309
+ (unsigned)defaultLineJoinStyle;	// 0x34ae3329
+ (float)defaultLineWidth;	// 0x34ae3349
+ (float)defaultMiterLimit;	// 0x34ae32a9
+ (unsigned)defaultWindingRule;	// 0x34ae32e9
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x34ae3245
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x34ae33a5
+ (void)fillRect:(CGRect)rect;	// 0x34ae2fed
+ (float)flatness;	// 0x34ae64c9
+ (void)initialize;	// 0x34ae2df9
+ (unsigned)lineCapStyle;	// 0x34ae6509
+ (unsigned)lineJoinStyle;	// 0x34ae6529
+ (float)lineWidth;	// 0x34ae6549
+ (float)miterLimit;	// 0x34ae64a9
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x34ae2e3d
+ (void)setDefaultFlatness:(float)flatness;	// 0x34ae32b9
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x34ae32f9
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x34ae3319
+ (void)setDefaultLineWidth:(float)width;	// 0x34ae3339
+ (void)setDefaultMiterLimit:(float)limit;	// 0x34ae3299
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x34ae32d9
+ (void)setFlatness:(float)flatness;	// 0x34ae64b9
+ (void)setLineCapStyle:(unsigned)style;	// 0x34ae64f9
+ (void)setLineJoinStyle:(unsigned)style;	// 0x34ae6519
+ (void)setLineWidth:(float)width;	// 0x34ae6539
+ (void)setMiterLimit:(float)limit;	// 0x34ae6499
+ (void)setWindingRule:(unsigned)rule;	// 0x34ae64d9
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x34ae31bd
+ (void)strokeRect:(CGRect)rect;	// 0x34ae304d
+ (unsigned)windingRule;	// 0x34ae64e9
- (id)init;	// 0x34ae3561
- (id).cxx_construct;	// 0x34ae605d
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x34ae6061
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x34ae51d5
- (id)_copyFlattenedPath;	// 0x34ae45b9
- (void)_deviceClosePath;	// 0x34ae62ed
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34ae6269
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x34ae6219
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x34ae6141
- (void)_doPath;	// 0x34ae3ed1
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x34ae63ad
- (int)_locationOfPoint:(CGPoint)point;	// 0x34ae5bbd
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x34ae4c39
- (void)addClip;	// 0x34ae4149
- (void)appendBezierPath:(id)path;	// 0x34ae4e69
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x34ae5619
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x34ae55d9
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x34ae5359
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x34ae507d
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x34ae5001
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x34ae4f75
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x34ae5939
- (id)bezierPathByFlatteningPath;	// 0x34ae4521
- (id)bezierPathByReversingPath;	// 0x34ae460d
- (CGRect)bounds;	// 0x34ae4ae5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x34ae6055
- (void)closePath;	// 0x34ae3a59
- (BOOL)containsPoint:(CGPoint)point;	// 0x34ae5fc5
// converted property getter: - (CGRect)controlPointBounds;	// 0x34ae495d
- (id)copyWithZone:(NSZone *)zone;	// 0x34ae37c1
- (CGPoint)currentPoint;	// 0x34ae48d9
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34ae39c5
- (void)dealloc;	// 0x34ae36b1
- (id)description;	// 0x34ae6559
- (unsigned)elementAtIndex:(int)index;	// 0x34ae4c25
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x34ae4d21
// converted property getter: - (int)elementCount;	// 0x34ae4bc1
- (void)fill;	// 0x34ae40d1
- (void)finalize;	// 0x34ae3739
// converted property getter: - (float)flatness;	// 0x34ae3d45
- (void)flattenIntoPath:(id)path;	// 0x34ae4419
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x34ae3e4d
- (BOOL)isEmpty;	// 0x34ae48c1
- (BOOL)isHitByPath:(id)path;	// 0x34ae6045
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x34ae6029
- (BOOL)isHitByRect:(CGRect)rect;	// 0x34ae6041
- (BOOL)isStrokeHitByPath:(id)path;	// 0x34ae6051
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x34ae6049
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x34ae604d
// converted property getter: - (unsigned)lineCapStyle;	// 0x34ae3c89
// converted property getter: - (unsigned)lineJoinStyle;	// 0x34ae3cbd
- (void)lineToPoint:(CGPoint)point;	// 0x34ae3955
// converted property getter: - (float)lineWidth;	// 0x34ae3c69
// converted property getter: - (float)miterLimit;	// 0x34ae3d25
- (void)moveToPoint:(CGPoint)point;	// 0x34ae3945
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34ae3bb5
- (void)relativeLineToPoint:(CGPoint)point;	// 0x34ae3b4d
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x34ae3ae5
- (void)removeAllPoints;	// 0x34ae3a69
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x34ae4db1
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x34ae6059
- (void)setClip;	// 0x34ae41c9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x34ae3d55
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x34ae3c9d
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x34ae3d65
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x34ae3cd1
// converted property setter: - (void)setLineWidth:(float)width;	// 0x34ae3c79
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x34ae3d35
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x34ae3d05
- (void)stroke;	// 0x34ae3fe5
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x34ae4221
- (void)transformUsingAffineTransform:(id)transform;	// 0x34ae4801
// converted property getter: - (unsigned)windingRule;	// 0x34ae3cf1
@end

