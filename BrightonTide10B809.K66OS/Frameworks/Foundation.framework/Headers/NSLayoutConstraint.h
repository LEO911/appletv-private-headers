/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISConstraint.h"

@class NSString;

@interface NSLayoutConstraint : NSObject <NSISConstraint> {
	id _container;	// 4 = 0x4
	id _firstItem;	// 8 = 0x8
	id _secondItem;	// 12 = 0xc
	float _constant;	// 16 = 0x10
	float _loweredConstant;	// 20 = 0x14
	id _markerAndPositiveExtraVar;	// 24 = 0x18
	id _negativeExtraVar;	// 28 = 0x1c
	float _coefficient;	// 32 = 0x20
	float _priority;	// 36 = 0x24
	unsigned long long _layoutConstraintFlags;	// 40 = 0x28
	id _flange;	// 48 = 0x30
}
@property(retain) id animations;	// G=0x319fd101; S=0x319fd111; converted property
@property(assign) float constant;	// G=0x319fdbe9; S=0x319fdca5; 
@property(assign) id container;	// G=0x319fd4f5; S=0x319fd519; 
@property(assign) int firstAttribute;	// G=0x319fc811; 
@property(assign) id firstItem;	// G=0x31a01075; @synthesize=_firstItem
@property(readonly, assign) BOOL hasBeenLowered;	// G=0x319fced9; 
@property(copy) NSString *identifier;	// G=0x319fd0e1; S=0x319fd0f1; 
@property(assign) float multiplier;	// G=0x319fc995; 
@property(assign) float priority;	// G=0x319fcbe1; S=0x319fcbf1; 
@property(assign) int relation;	// G=0x319fc8cd; 
@property(assign) int secondAttribute;	// G=0x319fcaf1; 
@property(assign) id secondItem;	// G=0x31a010a1; @synthesize=_secondItem
@property(assign) BOOL shouldBeArchived;	// G=0x319fcbb5; S=0x319fcbc9; 
@property(copy) NSString *symbolicConstant;	// G=0x319fde95; S=0x319fdea5; 
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by constant:(float)constant;	// 0x31a01039
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5;	// 0x31a01001
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 constant:(float)constant;	// 0x31a00fc1
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier;	// 0x31a00f89
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier constant:(float)constant;	// 0x31a00c81
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant;	// 0x31a00979
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant theme:(id)theme;	// 0x31a00969
+ (id)constraintsWithVisualFormat:(id)visualFormat options:(unsigned)options metrics:(id)metrics views:(id)views;	// 0x31a0094d
- (id)init;	// 0x319fdeb9
- (id)initWithCoder:(id)coder;	// 0x319ff16d
- (void)_addToEngine:(id)engine;	// 0x319ffcb9
- (BOOL)_addToEngine:(id)engine integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x319ffa35
- (float)_allowedMagnitudeForIntegralizationAdjustment;	// 0x319fd161
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)markerScaling;	// 0x319fd2d1
- (void)_clearWeakContainerReference;	// 0x319fd531
- (id)_constantDescriptionForDTrace;	// 0x319fdb71
- (id)_constraintByReplacingItem:(id)item withItem:(id)item2;	// 0x319ff4ed
- (id)_constraintByReplacingView:(id)view withView:(id)view2;	// 0x319ff6ed
- (int)_constraintType;	// 0x319fdf99
- (void)_containerGeometryDidChange;	// 0x319fd691
- (BOOL)_deferDTraceLogging;	// 0x319fd469
- (BOOL)_describesSameRestrictionAsConstraint:(id)constraint;	// 0x319ff6fd
- (id)_descriptionforSymbolicConstant;	// 0x319fdae9
- (BOOL)_effectiveConstant:(float *)constant error:(id *)error;	// 0x319fd7b5
- (CGSize)_engineToContainerScalingCoefficients;	// 0x31a00015
- (float)_fudgeIncrement;	// 0x319fd151
- (id)_identifier;	// 0x319fcf05
- (BOOL)_isFudgeable;	// 0x319fd125
- (BOOL)_loweredConstantIsRounded;	// 0x319fd505
- (id)_loweredExpression;	// 0x31a00321
- (id)_loweredExpressionReportingConstantIsRounded:(BOOL *)rounded;	// 0x31a00055
- (void)_makeExtraVars;	// 0x319ffe1d
- (id)_markerAndPositiveExtraVar;	// 0x319fd3c1
- (id)_negativeExtraVar;	// 0x319fd415
- (BOOL)_nsib_isRedundant;	// 0x31a0090d
- (BOOL)_nsib_isRedundantInEngine:(id)engine;	// 0x31a004f1
- (int)_primitiveConstraintType;	// 0x319fd495
- (id)_priorityDescription;	// 0x319fe6dd
- (void)_removeFromEngine:(id)engine;	// 0x319ffcd9
- (void)_setDeferDTraceLogging:(BOOL)logging;	// 0x319fd47d
- (void)_setFirstAttribute:(int)attribute;	// 0x319fc821
- (void)_setFirstItem:(id)item;	// 0x31a01089
- (void)_setIdentifier:(id)identifier;	// 0x319fcf91
- (void)_setMarkerAndPositiveErrorVar:(id)var;	// 0x319fd3d1
- (void)_setMultiplier:(float)multiplier;	// 0x319fc9a5
- (void)_setNegativeExtraVar:(id)var;	// 0x319fd425
- (void)_setPrimitiveConstraintType:(int)type;	// 0x319fd4c1
- (void)_setRelation:(int)relation;	// 0x319fc8e5
- (void)_setSecondAttribute:(int)attribute;	// 0x319fcb05
- (void)_setSecondItem:(id)item;	// 0x31a010b5
- (void)_setSymbolicConstant:(id)constant;	// 0x319fdd59
- (void)_setSymbolicConstant:(id)constant constant:(float)constant2;	// 0x319fd859
- (id)_symbolicConstant;	// 0x319fdcb9
- (BOOL)_tryToChangeContainerGeometryWithUndoHandler:(id)undoHandler;	// 0x319fd545
// converted property getter: - (id)animations;	// 0x319fd101
- (id)asciiArtDescription;	// 0x319fe29d
// declared property getter: - (float)constant;	// 0x319fdbe9
// declared property getter: - (id)container;	// 0x319fd4f5
- (void)dealloc;	// 0x319fdf0d
- (id)description;	// 0x319feb25
- (id)descriptionAccessory;	// 0x319fe75d
- (void)encodeWithCoder:(id)coder;	// 0x319feeb9
- (id)equationDescription;	// 0x319fe761
// declared property getter: - (int)firstAttribute;	// 0x319fc811
// declared property getter: - (id)firstItem;	// 0x31a01075
// declared property getter: - (BOOL)hasBeenLowered;	// 0x319fced9
// declared property getter: - (id)identifier;	// 0x319fd0e1
// declared property getter: - (float)multiplier;	// 0x319fc995
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)marker;	// 0x319fd3a5
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x31a00375
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x319fd3b9
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x319fd3b5
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x319fd3bd
// declared property getter: - (float)priority;	// 0x319fcbe1
- (float)priorityForVariable:(id)variable;	// 0x319ffa25
// declared property getter: - (int)relation;	// 0x319fc8cd
// declared property getter: - (int)secondAttribute;	// 0x319fcaf1
// declared property getter: - (id)secondItem;	// 0x31a010a1
// converted property setter: - (void)setAnimations:(id)animations;	// 0x319fd111
// declared property setter: - (void)setConstant:(float)constant;	// 0x319fdca5
// declared property setter: - (void)setContainer:(id)container;	// 0x319fd519
- (void)setHasBeenLowered:(BOOL)lowered;	// 0x319fceed
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x319fd0f1
// declared property setter: - (void)setPriority:(float)priority;	// 0x319fcbf1
// declared property setter: - (void)setShouldBeArchived:(BOOL)beArchived;	// 0x319fcbc9
// declared property setter: - (void)setSymbolicConstant:(id)constant;	// 0x319fdea5
// declared property getter: - (BOOL)shouldBeArchived;	// 0x319fcbb5
// declared property getter: - (id)symbolicConstant;	// 0x319fde95
@end

