/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFileAccessArbiter.h"
#import "NSObject.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSFileAccessNode;
@protocol OS_dispatch_queue, OS_xpc_object;

@protocol NSFileAccessArbiter <NSObject>
- (void)cancelAccessClaimForID:(id)anId;
- (id)grantAccessClaim:(id)claim synchronouslyIfPossible:(BOOL)possible;
- (void)grantSubarbitrationClaim:(id)claim withServer:(id)server;
- (void)revokeAccessClaimForID:(id)anId;
- (void)revokeSubarbitrationClaimForID:(id)anId;
- (void)tiePresenterForID:(id)anId toItemAtURL:(id)url;
- (void)writerWithPurposeID:(id)purposeID didDisconnectItemAtURL:(id)url;
- (void)writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;
- (void)writerWithPurposeID:(id)purposeID didReconnectItemAtURL:(id)url;
- (void)writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;
@end

@interface NSFileAccessArbiter : NSObject <NSFileAccessArbiter> {
	NSObject<OS_dispatch_queue> *_queue;	// 4 = 0x4
	BOOL _isSubarbiter;	// 8 = 0x8
	NSMutableDictionary *_accessClaimsByID;	// 12 = 0xc
	NSMutableDictionary *_subarbitrationClaimsByID;	// 16 = 0x10
	NSMutableDictionary *_reactorsByID;	// 20 = 0x14
	NSMutableDictionary *_watchersByPresenterID;	// 24 = 0x18
	NSFileAccessNode *_rootNode;	// 28 = 0x1c
	NSObject<OS_xpc_object> *_superarbitrationServer;	// 32 = 0x20
}
@property(readonly, retain) NSFileAccessNode *rootNode;	// G=0x319c0195; converted property
- (id)initWithQueue:(id)queue isSubarbiter:(BOOL)subarbiter listener:(id)listener;	// 0x319bd605
- (void)_addPresenter:(id)presenter ofItemAtURL:(id)url withLastEventID:(id)lastEventID;	// 0x319bfe11
- (void)_addProvider:(id)provider ofItemsAtURL:(id)url;	// 0x319bfecd
- (void)_cancelAccessClaimForID:(id)anId;	// 0x319be3f5
- (void)_grantAccessClaim:(id)claim;	// 0x319bdc41
- (void)_grantSubarbitrationClaim:(id)claim withServer:(id)server;	// 0x319be0d1
- (void)_handleCanceledClient:(id)client;	// 0x319c149d
- (void)_handleMessage:(id)message forSubarbitrationClaim:(id)subarbitrationClaim server:(id)server;	// 0x319c1079
- (void)_handleMessage:(id)message fromClient:(id)client;	// 0x319c0ab9
- (BOOL)_handleMessage:(id)message ofKind:(id)kind withParameters:(id)parameters embeddedServer:(id)server fromClient:(id)client;	// 0x319c02b5
- (void)_removeReactorForID:(id)anId;	// 0x319bff55
- (void)_revokeAccessClaim:(id)claim;	// 0x319bdee9
- (void)_revokeAccessClaimForID:(id)anId fromLocal:(BOOL)local;	// 0x319bdfb1
- (void)_sendSubarbitersMessageWithKind:(id)kind parameters:(id)parameters;	// 0x319c01cd
- (void)_startArbitratingItemsAtURLs:(id)urls withSuperarbitrationServer:(id)superarbitrationServer;	// 0x319bffd5
- (void)_startWatchingItemAtURL:(id)url forPresenter:(id)presenter withLastEventID:(id)lastEventID;	// 0x319bf681
- (void)_stopWatchingItemForPresenterForID:(id)anId;	// 0x319bfdbd
- (void)_tiePresenter:(id)presenter toItemAtURL:(id)url;	// 0x319bdbb5
- (void)_tiePresenterForID:(id)anId toItemAtURL:(id)url;	// 0x319bf639
- (void)_writerWithPurposeID:(id)purposeID didDisconnectItemAtURL:(id)url;	// 0x319bf285
- (void)_writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;	// 0x319be4c1
- (void)_writerWithPurposeID:(id)purposeID didReconnectItemAtURL:(id)url;	// 0x319bf3b5
- (void)_writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;	// 0x319bf50d
- (void)cancelAccessClaimForID:(id)anId;	// 0x319c1c0d
- (void)dealloc;	// 0x319bdaad
- (void)finalize;	// 0x319bdb75
- (id)grantAccessClaim:(id)claim synchronouslyIfPossible:(BOOL)possible;	// 0x319c1955
- (void)grantSubarbitrationClaim:(id)claim withServer:(id)server;	// 0x319c1bcd
- (void)revokeAccessClaimForID:(id)anId;	// 0x319c1b19
- (void)revokeSubarbitrationClaimForID:(id)anId;	// 0x319c1c09
// converted property getter: - (id)rootNode;	// 0x319c0195
- (void)stopArbitrating;	// 0x319c0105
- (void)tiePresenterForID:(id)anId toItemAtURL:(id)url;	// 0x319c208d
- (void)writerWithPurposeID:(id)purposeID didDisconnectItemAtURL:(id)url;	// 0x319c1ea9
- (void)writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;	// 0x319c1d25
- (void)writerWithPurposeID:(id)purposeID didReconnectItemAtURL:(id)url;	// 0x319c1ead
- (void)writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;	// 0x319c1eb1
@end

