/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"
#import "NSMutableCopying.h"

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x317fb18d; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x317ed869
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x317eef79
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x317eb86d
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x317fbb91
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x318540f5
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x317ed8b1
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x317eefbd
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x317eb8ad
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x317ecf89
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x317fbbe5
- (double)absoluteTime;	// 0x317ed155
- (id)calendarDateByAddingDays:(int)days;	// 0x317ec411
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x317ec441
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x3185449d
- (id)calendarDateForDay;	// 0x317ec291
- (id)calendarDateForEndOfDay;	// 0x317ed021
- (id)calendarDateForEndOfMonth;	// 0x317f3651
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x317f378d
- (id)calendarDateForMonth;	// 0x317f33a5
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x317f3489
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x317f349d
- (id)calendarDateForYear;	// 0x31854875
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x318544cd
- (id)calendarDateWithDate:(id)date;	// 0x31854529
- (int)compare:(id)compare;	// 0x317fb98d
- (id)components;	// 0x31854321
- (id)copyWithZone:(NSZone *)zone;	// 0x317ef021
- (id)date;	// 0x317ed119
- (unsigned)day;	// 0x31854669
- (unsigned)dayOfWeek;	// 0x31854749
- (unsigned)dayOfYear;	// 0x31854779
- (unsigned)daysInMonth;	// 0x317f3759
- (unsigned)daysInYear;	// 0x318547dd
- (void)dealloc;	// 0x317ed96d
- (id)description;	// 0x31854215
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x317f2605
- (int)differenceInDays:(id)days;	// 0x317f3369
- (int)differenceInMonths:(id)months;	// 0x318545a5
- (int)differenceInYears:(id)years;	// 0x31854569
- (id)earlierDate:(id)date;	// 0x31854965
- (XXStruct_lQVxyC)gregorianDate;	// 0x317ec36d
- (unsigned)hour;	// 0x3185469d
- (BOOL)isEqual:(id)equal;	// 0x317fb8cd
- (id)laterDate:(id)date;	// 0x318549ad
- (unsigned)minute;	// 0x318546d1
- (unsigned)month;	// 0x31854635
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x31854171
- (double)second;	// 0x31854709
- (int)secondsFromGMT;	// 0x3185445d
// converted property getter: - (id)timeZone;	// 0x317fb18d
- (unsigned)weekOfYear;	// 0x318547a9
- (unsigned)weeksInYear;	// 0x31854825
- (unsigned)year;	// 0x31854605
@end

