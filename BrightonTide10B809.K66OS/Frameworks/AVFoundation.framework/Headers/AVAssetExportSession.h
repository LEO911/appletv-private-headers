/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, AVAudioMix, NSURL, NSArray, AVVideoComposition, NSString, NSError, AVAssetExportSessionInternal;

@interface AVAssetExportSession : NSObject {
	AVAssetExportSessionInternal *_exportSession;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x30286efd; 
@property(copy, nonatomic) AVAudioMix *audioMix;	// G=0x302888ad; S=0x302888cd; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x30287b15; 
@property(readonly, assign, nonatomic) long long estimatedOutputFileLength;	// G=0x302886b9; 
@property(assign, nonatomic) long long fileLengthLimit;	// G=0x30288809; S=0x3028882d; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB maxDuration;	// G=0x3028863d; 
@property(copy, nonatomic) NSArray *metadata;	// G=0x3028873d; S=0x3028875d; 
@property(copy, nonatomic) NSString *outputFileType;	// G=0x302876a1; S=0x302876c1; 
@property(copy, nonatomic) NSURL *outputURL;	// G=0x30287891; S=0x302878b1; 
@property(readonly, assign, nonatomic) NSString *presetName;	// G=0x30286f1d; 
@property(readonly, assign, nonatomic) float progress;	// G=0x30287d9d; 
@property(assign, nonatomic) BOOL shouldOptimizeForNetworkUse;	// G=0x30288b6d; S=0x30288b8d; 
@property(readonly, assign, nonatomic) int status;	// G=0x30287995; 
@property(readonly, assign, nonatomic) NSArray *supportedFileTypes;	// G=0x30287179; 
@property(assign, nonatomic) XXStruct_yD8eWC timeRange;	// G=0x30288515; S=0x30288571; 
@property(assign) BOOL usesHardwareVideoEncoderIfAvailable;	// G=0x30288c09; S=0x30288c29; converted property
@property(copy, nonatomic) AVVideoComposition *videoComposition;	// G=0x30288979; S=0x30288999; 
+ (id)_audioOnlyPresets;	// 0x30288ca5
+ (id)_audioVideoPresets;	// 0x30288d39
+ (BOOL)_canWriteMediaOfAsset:(id)asset toFileType:(id)fileType;	// 0x3028654d
+ (long long)_estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x3028a321
+ (id)_figRemakerNotificationNames;	// 0x30289f5d
+ (int)_getPassthroughExportPolicyForAssetTrack:(id)assetTrack fileType:(id)type asChapterTrack:(BOOL)track;	// 0x30286f3d
+ (BOOL)_isCompositionWithMultipleNonEmptyEdits:(id)multipleNonEmptyEdits;	// 0x30287065
+ (BOOL)_isExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302897f5
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x30289799
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAssetContainingPlayableAudio:(BOOL)assetContainingPlayableAudio playableVideo:(BOOL)video outputFileType:(id)type;	// 0x302895e1
+ (BOOL)_isPassthroughExportPresetCompatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302892f5
+ (BOOL)_isPassthroughSupportedForAsset:(id)asset;	// 0x3028651d
+ (XXStruct_pwHToB)_maximumDurationForPreset:(id)preset fileSizeBytesLimit:(long long)limit properties:(id)properties;	// 0x30289ffd
+ (id)_settingForPreset:(id)preset;	// 0x3028985d
+ (id)_utTypesForAudioOnly;	// 0x30289211
+ (id)_utTypesForDefaultPassthroughPreset;	// 0x302890d5
+ (id)_utTypesForPresets;	// 0x30288e0d
+ (id)allExportPresets;	// 0x302861f9
+ (void)determineCompatibilityOfExportPreset:(id)exportPreset withAsset:(id)asset outputFileType:(id)type completionHandler:(id)handler;	// 0x30286669
+ (long long)estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x302868a5
+ (id)exportPresetsCompatibleWithAsset:(id)asset;	// 0x302863e5
+ (id)exportSessionWithAsset:(id)asset presetName:(id)name;	// 0x302867d9
+ (XXStruct_pwHToB)maximumDurationForPreset:(id)preset properties:(id)properties;	// 0x30286825
- (id)init;	// 0x302868e9
- (id)initWithAsset:(id)asset presetName:(id)name;	// 0x302868fd
- (id)_actualPresetName;	// 0x3028a749
- (id)_actualSettingForPreset:(id)preset;	// 0x302898a1
- (void)_addListeners;	// 0x3028ad9d
- (BOOL)_canPassThroughAudio:(id)audio checkEnabled:(BOOL)enabled checkProtected:(BOOL)aProtected;	// 0x3028b4b1
- (BOOL)_canPassThroughVideo:(id)video checkEnabled:(BOOL)enabled checkAll:(BOOL)all checkProtected:(BOOL)aProtected;	// 0x3028bea9
- (OpaqueFigRemaker *)_createFigRemaker;	// 0x3028c7a9
- (id)_determineCompatibleFileTypes;	// 0x302871e9
- (CGSize)_getSourceDimension;	// 0x3028aef5
- (int)_getTrackCountOfType:(id)type checkEnabled:(BOOL)enabled;	// 0x3028b099
- (void)_handleFigRemakerNotification:(id)notification payload:(id)payload;	// 0x3028a4c5
- (void)_handleFigRemakerNotificationAsync:(id)async payload:(id)payload;	// 0x3028a671
- (BOOL)_hasProtectedNonAudioVideoTracks;	// 0x3028b1cd
- (BOOL)_isAudioMixdownRequired:(CFStringRef)required error:(id *)error;	// 0x3028c771
- (void)_removeListeners;	// 0x3028abe5
- (id)_retrieveChannelSpecificAudioSettingForAudioTrack:(id)audioTrack fromAudioSetting:(id)audioSetting;	// 0x3028bc19
- (id)_settingForFigRemaker;	// 0x3028bd85
- (BOOL)_totalSizeOfTracksIsWithinFileLengthLimit:(id)tracksIsWithinFileLengthLimit forSetting:(id)setting;	// 0x3028b359
- (void)_transitionToStatus:(int)status error:(id)error;	// 0x3028a77d
- (void)_updateProgress;	// 0x30287cf5
- (BOOL)_validateSettablePropertiesReturningError:(id *)error;	// 0x30287f3d
// declared property getter: - (id)asset;	// 0x30286efd
// declared property getter: - (id)audioMix;	// 0x302888ad
- (void)cancelExport;	// 0x30288501
- (void)dealloc;	// 0x30286b81
- (id)description;	// 0x30286e59
- (void)determineCompatibleFileTypesWithCompletionHandler:(id)completionHandler;	// 0x30287585
// declared property getter: - (id)error;	// 0x30287b15
// declared property getter: - (long long)estimatedOutputFileLength;	// 0x302886b9
- (void)exportAsynchronouslyWithCompletionHandler:(id)completionHandler;	// 0x3028815d
// declared property getter: - (long long)fileLengthLimit;	// 0x30288809
- (void)finalize;	// 0x30286d79
// declared property getter: - (XXStruct_pwHToB)maxDuration;	// 0x3028863d
// declared property getter: - (id)metadata;	// 0x3028873d
// declared property getter: - (id)outputFileType;	// 0x302876a1
// declared property getter: - (id)outputURL;	// 0x30287891
// declared property getter: - (id)presetName;	// 0x30286f1d
// declared property getter: - (float)progress;	// 0x30287d9d
// declared property setter: - (void)setAudioMix:(id)mix;	// 0x302888cd
// declared property setter: - (void)setFileLengthLimit:(long long)limit;	// 0x3028882d
// declared property setter: - (void)setMetadata:(id)metadata;	// 0x3028875d
// declared property setter: - (void)setOutputFileType:(id)type;	// 0x302876c1
// declared property setter: - (void)setOutputURL:(id)url;	// 0x302878b1
// declared property setter: - (void)setShouldOptimizeForNetworkUse:(BOOL)optimizeForNetworkUse;	// 0x30288b8d
// declared property setter: - (void)setTimeRange:(XXStruct_yD8eWC)range;	// 0x30288571
// converted property setter: - (void)setUsesHardwareVideoEncoderIfAvailable:(BOOL)available;	// 0x30288c29
// declared property setter: - (void)setVideoComposition:(id)composition;	// 0x30288999
// declared property getter: - (BOOL)shouldOptimizeForNetworkUse;	// 0x30288b6d
// declared property getter: - (int)status;	// 0x30287995
// declared property getter: - (id)supportedFileTypes;	// 0x30287179
// declared property getter: - (XXStruct_yD8eWC)timeRange;	// 0x30288515
// converted property getter: - (BOOL)usesHardwareVideoEncoderIfAvailable;	// 0x30288c09
// declared property getter: - (id)videoComposition;	// 0x30288979
@end

