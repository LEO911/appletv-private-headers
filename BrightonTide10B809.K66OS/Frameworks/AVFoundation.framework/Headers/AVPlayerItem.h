/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSDate, NSArray, AVPlayerItemInternal, NSString, NSError;

@interface AVPlayerItem : NSObject <NSCopying> {
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x302634a1; S=0x30263555; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x30263609; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x3026371d; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x302638d5; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x302637c1; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x30263831; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x30263679; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x3025e951; S=0x3025eafd; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x302631c1; 
@property(retain) id audioMix;	// G=0x3025f85d; S=0x3025fab1; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x302631a5; 
@property(assign) double bufferingTargetMaximum;	// G=0x3025e569; S=0x3025e6fd; converted property
@property(assign) double bufferingTargetMinimum;	// G=0x3025e721; S=0x3025e8b5; converted property
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x30264505; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x30263219; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x3025f5d9; S=0x3025f785; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x3025f2c1; S=0x3025f46d; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x302644c1; S=0x30264429; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x3026461d; S=0x30264599; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x3025b18d; 
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x3025da45; S=0x3025dc21; converted property
@property(retain) id gaplessInfo;	// G=0x30261205; S=0x302615c1; converted property
@property(retain) id initialDate;	// G=0x3025d6fd; S=0x3025d741; converted property
@property(retain) id initialEstimatedDate;	// G=0x3025d821; S=0x3025d865; converted property
@property(assign) BOOL limitReadAhead;	// G=0x3025e2cd; S=0x3025e475; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x30262699; S=0x302626b9; converted property
@property(readonly, assign, nonatomic) NSArray *outputs;	// G=0x30264d91; 
@property(assign) int playbackLikelyToKeepUpTrigger;	// G=0x3025ec95; S=0x3025ee3d; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x3025de3d; S=0x3025e019; converted property
@property(assign) BOOL seekingWaitsForVideoCompositionRendering;	// G=0x3026013d; S=0x302601dd; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x302617a9; S=0x30261709; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x3025b16d; 
@property(retain) id textStyleRules;	// G=0x3026026d; S=0x30260335; converted property
@property(retain) id variableSpeedAudioProcessor;	// G=0x302604c1; S=0x302605b5; converted property
@property(retain) id videoComposition;	// G=0x3025fb75; S=0x3025fbb9; converted property
@property(assign) float volumeAdjustment;	// G=0x302618dd; S=0x3026183d; converted property
@property(assign) BOOL willNeverSeekBackwardsHint;	// G=0x3025efa9; S=0x3025f155; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x302584c5
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x302584b1
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x30263271
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x3026343d
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x3025ebd1
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x30263185
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x3025fb71
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;	// 0x3025e701
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;	// 0x3025e8b9
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x3025f859
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x3025f541
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x3025dd39
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x30261695
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x3025e549
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x30263199
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x30262785
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x3026318d
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x30263191
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x30263189
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;	// 0x3025ef11
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x3026319d
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x3025e131
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x30263195
+ (BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;	// 0x30260269
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x302617c9
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x30263181
+ (BOOL)automaticallyNotifiesObserversOfTextStyleRules;	// 0x302603f5
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x302631a1
+ (BOOL)automaticallyNotifiesObserversOfVariableSpeedAudioProcessor;	// 0x3026071d
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x3025fe51
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x302618fd
+ (BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;	// 0x3025f229
+ (void)initialize;	// 0x30258449
+ (id)playerItemWithAsset:(id)asset;	// 0x30258521
+ (id)playerItemWithURL:(id)url;	// 0x302584d9
- (id)init;	// 0x302587e5
- (id)initWithAsset:(id)asset;	// 0x302589f5
- (id)initWithURL:(id)url;	// 0x30258939
- (int)_CreateSeekID;	// 0x3025cd51
- (id)_URL;	// 0x3025ad31
- (void)_addFPListeners;	// 0x3025bbf9
- (void)_addSyncLayer:(id)layer;	// 0x30262b8d
- (BOOL)_alwaysMonitorsPlayability;	// 0x3025e8bd
- (void)_applyAudioMix;	// 0x3025f8a1
- (void)_applyInitialAudioMix;	// 0x3025fa5d
- (void)_applyMediaSelectionOptions;	// 0x30261de5
- (void)_applySeekingWaitsForVideoCompositionRendering;	// 0x3026015d
- (void)_applyTextStyleRules;	// 0x302602b1
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x30261bbd
- (void)_attachOutputs;	// 0x302649a5
- (void)_attachToFigPlayer;	// 0x3025a355
- (void)_attachToPlayer:(id)player;	// 0x3025a261
- (long long)_availableFileSize;	// 0x3026439d
- (double)_bufferingTargetMaximum;	// 0x3025e551
- (double)_bufferingTargetMinimum;	// 0x3025e709
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30261f91
- (id)_cachedValueForKey:(id)key;	// 0x302595f9
- (BOOL)_canPlayFastForward;	// 0x3025c359
- (BOOL)_canPlayFastReverse;	// 0x3025c4ad
- (BOOL)_canPlayReverse;	// 0x3025c659
- (BOOL)_canPlaySlowForward;	// 0x3025c74d
- (BOOL)_canPlaySlowReverse;	// 0x3025c841
- (BOOL)_canStepBackward;	// 0x3025ca2d
- (BOOL)_canStepForward;	// 0x3025c935
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x3025cdad
- (void)_changeStatusToFailedWithError:(id)error;	// 0x3025b1d1
- (void)_configurePlaybackItem;	// 0x302598b1
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x3025f545
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x3025f22d
- (OpaqueCMTimebase *)_copyTimebase;	// 0x3025e135
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x3025a1c9
- (void)_createPlayerItemInternal;	// 0x30258569
- (void)_dequeueFromPlayer;	// 0x3025abfd
- (void)_detachOutputs;	// 0x30264aa5
- (void)_didAccessKVOForKey:(id)key;	// 0x30259651
- (XXStruct_pwHToB)_duration;	// 0x3025b351
- (void)_enqueueWithPlayer:(id)player shouldAppendItem:(BOOL)item;	// 0x3025ab65
- (void)_evaluateSuppression;	// 0x30263059
- (void)_evaluateVisualContexts;	// 0x3026476d
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x30262789
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x302595b9
- (long long)_fileSize;	// 0x30264311
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x3025d945
- (id)_fpNotificationNames;	// 0x3025b991
- (BOOL)_hasEnabledVideoMedia;	// 0x30262e49
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x3025b0c5
- (void)_insertAfterItem:(id)item;	// 0x3025ac61
- (void)_invokeReadyForEnqueueingHandlers;	// 0x3025c02d
- (BOOL)_isAFileBasedItemThatsReadyToPlay;	// 0x3025c601
- (BOOL)_isCurrentPlayerItem;	// 0x3025a01d
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x302634a1
// declared property getter: - (BOOL)_isRental;	// 0x30263609
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x302637c1
- (void)_kickAssetObserversIfAppropriate;	// 0x3025b029
- (BOOL)_limitReadAhead;	// 0x3025e239
- (id)_loadedTimeRanges;	// 0x30260e85
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x3025ae99
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x3025c149
- (id)_nextItem;	// 0x3025ac21
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x30262de5
- (int)_playbackLikelyToKeepUpTrigger;	// 0x3025ebd5
- (id)_playbackProperties;	// 0x30261249
- (id)_player;	// 0x30259ff1
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x3025ac11
- (id)_playerConnection;	// 0x3025a151
- (CGSize)_presentationSize;	// 0x3025cb21
- (id)_previousItem;	// 0x3025ac41
- (id)_propertyStorage;	// 0x302595d9
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x3025ea2d
- (void)_quietlySetBufferingTargetMaximum:(double)maximum;	// 0x3025e645
- (void)_quietlySetBufferingTargetMinimum:(double)minimum;	// 0x3025e7fd
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x3025f6b5
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x3025f39d
- (void)_quietlySetEQPreset:(int)preset;	// 0x30264241
- (void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)algorithm;	// 0x30260565
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3025db5d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x3025e3a9
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x3025ed71
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x302612ed
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3025df55
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x30261699
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x302617cd
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)_quietlySet;	// 0x3025f085
- (void)_removeFPListeners;	// 0x3025bdf5
- (void)_removeFromItems;	// 0x3025acc9
- (void)_removeSyncLayer:(id)layer;	// 0x30262981
- (void)_renderingSuppressionDidChangeForOutput:(id)_renderingSuppression;	// 0x30263131
// declared property getter: - (id)_rentalExpirationDate;	// 0x3026371d
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x302638d5
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x30263831
// declared property getter: - (id)_rentalStartDate;	// 0x30263679
- (void)_respondToBecomingReadyForBasicInspection;	// 0x3025bf41
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x3025dd3d
- (id)_seekableTimeRanges;	// 0x30260b05
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30262285
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30262309
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30262359
- (void)_selectMediaOption:(id)option usingFigSelectedMediaArrayObtainedFromGroup:(id)group;	// 0x30262065
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x30261acd
- (void)_setAsset:(id)asset;	// 0x3025ad91
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x3025af51
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3025ade9
- (void)_setAudibleDRMInfo:(id)info;	// 0x302641a1
- (void)_setEQPreset:(int)preset;	// 0x302642b1
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x30261a59
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x30263555
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x3025a03d
- (void)_setPlayerConnection:(id)connection;	// 0x3025a171
- (void)_setRampInOutInfo:(id)outInfo;	// 0x30264101
- (void)_setSyncLayersOnFigPlaybackItem:(id)item;	// 0x30262911
- (void)_setTimebaseOnOutputs:(OpaqueCMTimebase *)outputs;	// 0x302648d5
- (void)_setTimedMetadata:(id)metadata;	// 0x302628a1
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3025ae41
- (void)_setURL:(id)url;	// 0x3025ad51
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x3025fe55
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x3025ffdd
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x3025ff61
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x3025fef1
- (void)_setVideoCompositor:(id)compositor;	// 0x30260031
- (id)_stateDispatchQueue;	// 0x30259599
- (BOOL)_suppressionForOutputs:(id)outputs;	// 0x30262f95
- (id)_trackWithTrackID:(int)trackID;	// 0x3025b8a9
- (id)_tracks;	// 0x3025b54d
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)seekID finished:(BOOL)finished;	// 0x3025cf85
- (void)_updateTimebase;	// 0x3025e1ad
- (id)_variableSpeedAudioProcessor;	// 0x302603f9
- (id)_weakReference;	// 0x30259579
- (void)_willAccessKVOForKey:(id)key;	// 0x30259625
- (BOOL)_willNeverSeekBackwardsHint;	// 0x3025ef15
- (id)accessLog;	// 0x30263979
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x3025973d
- (void)addOutput:(id)output;	// 0x30264b85
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x3025e951
- (id)asset;	// 0x3025b30d
// converted property getter: - (id)audioMix;	// 0x3025f85d
// converted property getter: - (double)bufferingTargetMaximum;	// 0x3025e569
// converted property getter: - (double)bufferingTargetMinimum;	// 0x3025e721
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x30264505
- (BOOL)canPlayFastForward;	// 0x3025c3d1
- (BOOL)canPlayFastReverse;	// 0x3025c525
- (BOOL)canPlayReverse;	// 0x3025c671
- (BOOL)canPlaySlowForward;	// 0x3025c765
- (BOOL)canPlaySlowReverse;	// 0x3025c859
- (BOOL)canStepBackward;	// 0x3025ca45
- (BOOL)canStepForward;	// 0x3025c951
- (void)cancelPendingSeeks;	// 0x3025d5c5
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x3025f5d9
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x3025f2c1
- (id)copyWithZone:(NSZone *)zone;	// 0x30258ffd
- (id)currentDate;	// 0x3025d5d9
- (id)currentEstimatedDate;	// 0x3025d799
- (XXStruct_pwHToB)currentTime;	// 0x3025cca9
// declared property getter: - (id)dataYouTubeID;	// 0x302644c1
- (void)dealloc;	// 0x30258add
- (id)description;	// 0x3025940d
- (void)didChangeValueForKey:(id)key;	// 0x302596dd
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x3026463d
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x3026461d
- (XXStruct_pwHToB)duration;	// 0x3025b409
// declared property getter: - (id)error;	// 0x3025b18d
- (id)errorLog;	// 0x30263a41
- (void)finalize;	// 0x30258e99
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x3025da45
// converted property getter: - (id)gaplessInfo;	// 0x30261205
// converted property getter: - (id)initialDate;	// 0x3025d6fd
// converted property getter: - (id)initialEstimatedDate;	// 0x3025d821
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x302631c1
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x302631a5
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x30263219
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x30262699
- (BOOL)isPlaybackBufferEmpty;	// 0x30260911
- (BOOL)isPlaybackBufferFull;	// 0x30260819
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x30260721
// converted property getter: - (BOOL)limitReadAhead;	// 0x3025e2cd
- (id)loadedTimeRanges;	// 0x3026116d
// declared property getter: - (id)outputs;	// 0x30264d91
- (id)playabilityMetrics;	// 0x30260a81
// converted property getter: - (int)playbackLikelyToKeepUpTrigger;	// 0x3025ec95
- (CGSize)presentationSize;	// 0x3025cbad
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x30260a09
- (void)removeOutput:(id)output;	// 0x30264c9d
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x3025de3d
- (BOOL)seekToDate:(id)date;	// 0x3025d6e5
- (BOOL)seekToDate:(id)date completionHandler:(id)handler;	// 0x3025d661
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x3025d039
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x3025d0f5
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x3025d071
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x3025d16d
- (id)seekableTimeRanges;	// 0x30260ded
// converted property getter: - (BOOL)seekingWaitsForVideoCompositionRendering;	// 0x3026013d
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3026241d
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x30261ce5
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30262441
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x30261901
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x3025eafd
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x3025fab1
// converted property setter: - (void)setBufferingTargetMaximum:(double)maximum;	// 0x3025e6fd
// converted property setter: - (void)setBufferingTargetMinimum:(double)minimum;	// 0x3025e8b5
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x3025f785
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x3025f46d
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x30264429
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x30264599
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3025dc21
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x302615c1
// converted property setter: - (void)setInitialDate:(id)date;	// 0x3025d741
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x3025d865
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x3025e475
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x302626b9
// converted property setter: - (void)setPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x3025ee3d
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3025e019
// converted property setter: - (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)videoCompositionRendering;	// 0x302601dd
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x30261709
// converted property setter: - (void)setTextStyleRules:(id)rules;	// 0x30260335
// converted property setter: - (void)setVariableSpeedAudioProcessor:(id)processor;	// 0x302605b5
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x3025fbb9
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x3026183d
// converted property setter: - (void)setWillNeverSeekBackwardsHint:(BOOL)neverSeekBackwardsHint;	// 0x3025f155
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x302617a9
// declared property getter: - (int)status;	// 0x3025b16d
- (void)stepByCount:(int)count;	// 0x3025d8bd
// converted property getter: - (id)textStyleRules;	// 0x3026026d
- (OpaqueCMTimebase *)timebase;	// 0x3025e18d
- (id)timedMetadata;	// 0x3026285d
- (id)tracks;	// 0x3025b7f1
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x302594f1
// converted property getter: - (id)variableSpeedAudioProcessor;	// 0x302604c1
// converted property getter: - (id)videoComposition;	// 0x3025fb75
// converted property getter: - (float)volumeAdjustment;	// 0x302618dd
- (void)willChangeValueForKey:(id)key;	// 0x3025967d
// converted property getter: - (BOOL)willNeverSeekBackwardsHint;	// 0x3025efa9
@end

