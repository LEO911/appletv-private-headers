/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, MPMediaItem, MPImageCache, NSURL, MPAlternateTracks, MPQueueFeeder, MPAVController, NSString, NSArray, AVPlayerItem, NSData;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x31cc58e1; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x31cc58e9; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x31cc58f1; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x31cc58ed; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x31cc5ae1; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x31cc8c5d; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x31cc58e5; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x31cc58f9; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x31cc58fd; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x31cc6e8d; S=0x31cc8c6d; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x31cc5169; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x31cc5901; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x31cc6e65; S=0x31cc8c7d; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x31cc6f59; S=0x31cc6edd; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x31cc5905; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x31cc5929; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x31cc5951; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x31cc5add; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x31cc8cad; S=0x31cc8cbd; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x31cc590d; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x31cc5909; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x31cc59b1; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x31cc5969; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x31cc7479; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x31cc74c1; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x31cc7561; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x31cc74d9; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x31cc8c8d; S=0x31cc8c9d; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x31cc5c31; S=0x31cc5c75; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x31cc5925; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x31cc5a49; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x31cc5a4d; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x31cc5a51; S=0x31cc5d19; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x31cc5dc5; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x31cc8ccd; S=0x31cc8cdd; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x31cc8ced; S=0x31cc8d05; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x31d99c39; 
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x31cc59c1; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x31cc5b01; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x31d78065; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x31cc5b05; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x31cc7339; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x31cc76a1; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x31cc76b9; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x31cc5661; S=0x31cc5679; 
@property(assign, nonatomic) MPAVController *player;	// G=0x31cc8d1d; S=0x31cc8d2d; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x31cc5359; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x31cc5b5d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x31cc5bf5; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x31cc8d3d; S=0x31cc5d51; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x31cc55cd; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x31cc5a65; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x31cc5699; S=0x31cc569d; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x31cc5d89; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x31cc77b1; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x31cc76d1; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x31cc7325; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x31cc6eb5; S=0x31cc8d4d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x31cc5ed5; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x31cc7335; 
@property(assign) BOOL userSkippedPlayback;	// G=0x31cc5709; S=0x31cc56e5; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x31cc7425; S=0x31cc744d; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x31cc7345; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x31d99cf1; 
+ (id)URLFromPath:(id)path;	// 0x31cc4acd
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x31cc58f5
+ (unsigned)defaultScaleMode;	// 0x31cc4ab9
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x31cc4abd
- (id)init;	// 0x31cc4b7d
- (id)initWithAsset:(id)asset;	// 0x31cc4c09
- (id)initWithURL:(id)url;	// 0x31cc4b91
- (id)initWithURL:(id)url options:(id)options;	// 0x31cc4bcd
- (void)_applicationDidBecomeActive:(id)_application;	// 0x31cc7b19
- (void)_checkAllowsBlockingDurationCall;	// 0x31cc8711
- (void)_clearAsset;	// 0x31cc7fc9
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x31cc7af9
- (double)_durationFromExternalMetadataIfAvailable;	// 0x31cc7501
- (double)_durationInSeconds;	// 0x31cc571d
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x31cc71c1
- (void)_itemAttributeAvailableKey:(id)key;	// 0x31cc78f1
- (void)_loadAssetAndPlayerItem;	// 0x31cc5055
- (void)_loadAssetProperties;	// 0x31cc7d69
- (void)_loadTimeMarkersAsync;	// 0x31cc6d45
- (void)_loadTimeMarkersBlocking;	// 0x31cc5ed9
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x31cc7c79
- (void)_realoadEmbeddedTimeMarkers;	// 0x31cc5d8d
- (void)_releaseAllTimeMarkers;	// 0x31cc4e01
- (id)_seekableTimeRanges;	// 0x31cc7bb9
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x31cc6f69
- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;	// 0x31cc7dc5
// declared property getter: - (id)album;	// 0x31cc58e1
// declared property getter: - (id)albumArtist;	// 0x31cc58e9
// declared property getter: - (unsigned)albumTrackCount;	// 0x31cc58f1
// declared property getter: - (unsigned)albumTrackNumber;	// 0x31cc58ed
// declared property getter: - (BOOL)allowsEQ;	// 0x31cc5ae1
// declared property getter: - (id)alternateTracks;	// 0x31cc8c5d
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x31cc5a25
// declared property getter: - (id)artist;	// 0x31cc58e5
// declared property getter: - (id)artworkImageData;	// 0x31cc58f9
// declared property getter: - (id)artworkMIMEType;	// 0x31cc58fd
- (id)artworkTimeMarkerForTime:(double)time;	// 0x31cc710d
// declared property getter: - (id)artworkTimeMarkers;	// 0x31cc6e8d
// declared property getter: - (id)asset;	// 0x31cc5169
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x31cc7e15
// declared property getter: - (BOOL)canSeedGenius;	// 0x31cc5901
- (id)chapterTimeMarkerForTime:(double)time;	// 0x31cc70d1
// declared property getter: - (id)chapterTimeMarkers;	// 0x31cc6e65
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x31cc7185
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x31cc6f59
// declared property getter: - (id)composer;	// 0x31cc5905
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x31cc5929
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x31cc5951
// declared property getter: - (int)customAVEQPreset;	// 0x31cc5add
- (void)dealloc;	// 0x31cc4e81
// declared property getter: - (float)defaultPlaybackRate;	// 0x31cc8cad
// declared property getter: - (unsigned)discCount;	// 0x31cc590d
// declared property getter: - (unsigned)discNumber;	// 0x31cc5909
// declared property getter: - (id)displayableText;	// 0x31cc59b1
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x31cc5969
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x31cc7479
// declared property getter: - (double)durationFromExternalMetadata;	// 0x31cc74c1
// declared property getter: - (double)durationIfAvailable;	// 0x31cc7561
- (double)durationInSeconds;	// 0x31cc5771
// declared property getter: - (BOOL)durationIsValid;	// 0x31cc74d9
// declared property getter: - (id)feeder;	// 0x31cc8c8d
- (void)flushNowPlayingCaches;	// 0x31cc5025
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x31cc5c31
// declared property getter: - (id)genre;	// 0x31cc5925
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x31cc5a01
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x31cc5a49
// declared property getter: - (BOOL)hasDisplayableText;	// 0x31cc5a4d
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x31cc5a51
// declared property getter: - (id)imageCache;	// 0x31cc5dc5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x31cc5dc9
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x31cc5df5
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x31cc8ccd
// declared property getter: - (BOOL)isAssetLoaded;	// 0x31cc8ced
- (BOOL)isAssetURLValid;	// 0x31cc5921
- (BOOL)isPlaceholderForItem:(id)item;	// 0x31cc591d
// declared property getter: - (BOOL)isStreamable;	// 0x31cc5a65
// declared property getter: - (BOOL)isStreamingQuality;	// 0x31d99c39
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x31cc4ac1
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x31cc5911
- (void)loadAssetAndPlayerItem;	// 0x31cc5051
- (id)localeForAssetTrack:(id)assetTrack;	// 0x31cc8845
- (id)localizedPositionInPlaylistString;	// 0x31cc7349
// declared property getter: - (id)lyrics;	// 0x31cc59c1
// declared property getter: - (id)mainTitle;	// 0x31cc5b01
// declared property getter: - (id)mediaItem;	// 0x31d78065
// declared property getter: - (CGSize)naturalSize;	// 0x31cc5b05
- (void)notePlaybackFinishedByHittingEnd;	// 0x31cc5649
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x31cc7b39
- (id)path;	// 0x31cc57e1
// declared property getter: - (unsigned long long)persistentID;	// 0x31cc7339
// declared property getter: - (double)playableDuration;	// 0x31cc76a1
// declared property getter: - (double)playableDurationIfAvailable;	// 0x31cc76b9
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x31cc5661
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x31cc5b61
// declared property getter: - (id)player;	// 0x31cc8d1d
// declared property getter: - (id)playerItem;	// 0x31cc5359
// declared property getter: - (id)podcastURL;	// 0x31cc5b5d
// declared property getter: - (CGSize)presentationSize;	// 0x31cc5bf5
- (BOOL)prioritizeDownloadSession;	// 0x31da3de1
- (void)reevaluateType;	// 0x31cc88a5
- (void)replacePlayerItemWithPlayerItem:(id)playerItem;	// 0x31cc8b69
- (void)resetBookkeeping;	// 0x31cc55ed
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x31cc5cbd
- (void)setAlternateAudioTrackID:(int)anId;	// 0x31cc5641
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x31cc8c6d
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x31cc8c7d
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x31cc6edd
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x31cc8cbd
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x31cc8c9d
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x31cc5c75
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x31cc5d19
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x31cc8cdd
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x31cc8d05
- (void)setOverrideDuration:(double)duration;	// 0x31cc5d3d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x31cc5679
- (void)setPlaybackFinishedTime:(double)time;	// 0x31cc567d
- (void)setPlaybackStoppedTime:(double)time;	// 0x31cc5645
// declared property setter: - (void)setPlayer:(id)player;	// 0x31cc8d2d
- (void)setPlayerItem:(id)item;	// 0x31cc5535
- (void)setRating:(float)rating;	// 0x31cc5695
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x31cc5d51
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x31cc569d
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x31cc8d4d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x31cc56a1
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x31cc56b9
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x31cc56e5
// declared property setter: - (void)setVideoID:(id)anId;	// 0x31cc744d
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x31cc8061
- (void)setupPlaybackInfo;	// 0x31cc80c9
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x31cc8d3d
// declared property getter: - (int)status;	// 0x31cc55cd
// declared property getter: - (int)subtitleTrackID;	// 0x31cc5699
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x31cc5d89
// declared property getter: - (double)timeOfSeekableEnd;	// 0x31cc77b1
// declared property getter: - (double)timeOfSeekableStart;	// 0x31cc76d1
- (id)titlesForTime:(double)time;	// 0x31cc5ed1
// declared property getter: - (unsigned)type;	// 0x31cc7325
- (id)url;	// 0x31cc586d
- (id)urlTimeMarkerForTime:(double)time;	// 0x31cc7149
// declared property getter: - (id)urlTimeMarkers;	// 0x31cc6eb5
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x31cc5ed5
// declared property getter: - (float)userRating;	// 0x31cc7335
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x31cc5709
// declared property getter: - (id)videoID;	// 0x31cc7425
// declared property getter: - (BOOL)wantsSubtitles;	// 0x31cc7345
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x31d99cf1
@end

