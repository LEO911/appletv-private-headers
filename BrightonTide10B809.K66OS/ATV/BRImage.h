/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSURL, NSString, NSData;

__attribute__((visibility("hidden")))
@interface BRImage : XXUnknownSuperclass {
	CGImageRef _image;	// 4 = 0x4
	CGImageSourceRef _imageSource;	// 8 = 0x8
	float _imageWidth;	// 12 = 0xc
	float _imageHeight;	// 16 = 0x10
	int _imageOrientation;	// 20 = 0x14
	BOOL _enableCache;	// 24 = 0x18
	NSURL *_imageURL;	// 28 = 0x1c
	NSData *_imageData;	// 32 = 0x20
	NSString *_imageType;	// 36 = 0x24
	BOOL _imageBufferInMemory;	// 40 = 0x28
	BOOL _rotationEnabled;	// 41 = 0x29
}
@property(assign) BOOL enableCache;	// G=0x28c015; S=0x28bfe5; converted property
@property(readonly, assign) CGImageRef image;	// G=0x28bdf5; converted property
@property(readonly, assign, getter=isImageBufferInMemory) BOOL imageBufferInMemory;	// G=0x28c799; converted property
@property(readonly, retain) NSString *imageType;	// G=0x28bec9; converted property
@property(readonly, assign, nonatomic) int orientation;	// G=0x28c7a9; @synthesize=_imageOrientation
@property(readonly, assign, nonatomic) BOOL rotationEnabled;	// G=0x28c7b9; @synthesize=_rotationEnabled
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef;	// 0x28b5a5
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x28b5b9
+ (id)imageWithData:(id)data;	// 0x28b561
+ (id)imageWithName:(id)name ofType:(id)type inBundle:(id)bundle;	// 0x28b6e9
+ (id)imageWithPDFURL:(id)pdfurl;	// 0x28b601
+ (id)imageWithPath:(id)path;	// 0x28b4f5
+ (id)imageWithRotationFromData:(id)data;	// 0x28b7dd
+ (id)imageWithRotationFromPath:(id)path;	// 0x28b799
+ (id)imageWithRotationFromURL:(id)url;	// 0x28b741
+ (id)imageWithURL:(id)url;	// 0x28b4b1
- (id)initWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x28b835
- (id)initWithData:(id)data;	// 0x28bb39
- (id)initWithURL:(id)url;	// 0x28b965
- (id)_initWithCGImageSourceRotationEnabled:(CGImageSourceRef)cgimageSourceRotationEnabled;	// 0x28c7c9
- (void)_initializeCGImageWithRotation;	// 0x28c919
- (float)aspectRatio;	// 0x28bf41
- (id)croppedImageForSize:(CGSize)size;	// 0x28c3d1
- (void)dealloc;	// 0x28bd1d
- (id)deletterboxedImage;	// 0x28c025
- (void)drawImageInContext:(CGContextRef)context rect:(CGRect)rect;	// 0x28bdc1
// converted property getter: - (BOOL)enableCache;	// 0x28c015
- (BOOL)hasAlpha;	// 0x28bed9
// converted property getter: - (CGImageRef)image;	// 0x28bdf5
// converted property getter: - (id)imageType;	// 0x28bec9
- (BOOL)isAccessibilityElement;	// 0x28c2e1
// converted property getter: - (BOOL)isImageBufferInMemory;	// 0x28c799
- (BOOL)isPowerOfTwo;	// 0x28bf7d
- (CGRect)largestSquareRect;	// 0x28c5f1
- (id)mapImageWithSourceRect:(CGRect)sourceRect toSize:(CGSize)size;	// 0x28c2fd
// declared property getter: - (int)orientation;	// 0x28c7a9
- (CGSize)pixelBounds;	// 0x28bf0d
- (void)purgeRawData;	// 0x3ae13d
- (id)rawData;	// 0x3ae139
// declared property getter: - (BOOL)rotationEnabled;	// 0x28c7b9
// converted property setter: - (void)setEnableCache:(BOOL)cache;	// 0x28bfe5
- (BOOL)sourceRequiresRotation;	// 0x28bfc9
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)aspectRatioLimit;	// 0x28c6b5
@end

