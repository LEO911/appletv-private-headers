/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSNumber.h"
#import "Foundation-Structs.h"


@interface NSDecimalNumber : NSNumber {
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x319665ad
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x31966725
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x319666b5
+ (id)decimalNumberWithString:(id)string;	// 0x319667a1
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x319667f5
+ (id)defaultBehavior;	// 0x319674d5
+ (id)maximumDecimalNumber;	// 0x31966a2d
+ (id)minimumDecimalNumber;	// 0x319669c1
+ (id)notANumber;	// 0x31966b49
+ (id)numberWithBool:(BOOL)aBool;	// 0x31968b71
+ (id)numberWithChar:(BOOL)aChar;	// 0x3196873d
+ (id)numberWithDouble:(double)aDouble;	// 0x31968b21
+ (id)numberWithFloat:(float)aFloat;	// 0x31968ad5
+ (id)numberWithInt:(int)int;	// 0x3196886d
+ (id)numberWithInteger:(int)integer;	// 0x319688b9
+ (id)numberWithLong:(long)aLong;	// 0x3196899d
+ (id)numberWithLongLong:(long long)longLong;	// 0x31968a35
+ (id)numberWithShort:(short)aShort;	// 0x319687d5
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x31968789
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x31968905
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x31968951
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x319689e9
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x31968a85
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x31968821
+ (id)one;	// 0x31966ad9
+ (void)setDefaultBehavior:(id)behavior;	// 0x31967481
+ (id)zero;	// 0x31966a99
- (id)initWithCoder:(id)coder;	// 0x3196693d
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x31966889
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x3196684d
- (id)initWithString:(id)string;	// 0x319668c5
- (id)initWithString:(id)string locale:(id)locale;	// 0x31966901
- (bool)_getCString:(char *)string length:(int)length multiplier:(double)multiplier;	// 0x319678f9
- (BOOL)boolValue;	// 0x319678d5
- (BOOL)charValue;	// 0x31967759
- (Class)classForCoder;	// 0x31967545
- (int)compare:(id)compare;	// 0x31966bb9
- (id)copy;	// 0x3196660d
- (id)copyWithZone:(NSZone *)zone;	// 0x3196661d
- (id)decimalNumberByAdding:(id)adding;	// 0x31966d85
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x31966dd5
- (id)decimalNumberByDividingBy:(id)by;	// 0x31967139
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x31967189
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x31967061
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x319670b1
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x319672e9
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x31967339
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x31967211
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x31967261
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x319673c1
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x31966f39
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x31966f79
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x31966f89
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x31966fd9
- (XXStruct_9isexA)decimalValue;	// 0x31966995
- (id)description;	// 0x31966979
- (id)descriptionWithLocale:(id)locale;	// 0x3196698d
- (double)doubleValue;	// 0x31966c91
- (void)encodeWithCoder:(id)coder;	// 0x31967561
- (float)floatValue;	// 0x319678b1
- (void)getValue:(void *)value;	// 0x31966d69
- (int)intValue;	// 0x319677e9
- (BOOL)isEqual:(id)equal;	// 0x31966c39
- (long long)longLongValue;	// 0x31967879
- (long)longValue;	// 0x31967831
- (const char *)objCType;	// 0x31966c81
- (short)shortValue;	// 0x319677a1
- (unsigned char)unsignedCharValue;	// 0x3196777d
- (unsigned)unsignedIntValue;	// 0x3196780d
- (unsigned long long)unsignedLongLongValue;	// 0x31967895
- (unsigned long)unsignedLongValue;	// 0x31967855
- (unsigned short)unsignedShortValue;	// 0x319677c5
@end

