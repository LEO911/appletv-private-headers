/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "ML3Entity.h"
#import "MusicLibrary-Structs.h"

@class NSArray, NSString, ML3Predicate;

@interface ML3Container : ML3Entity {
}
@property(readonly, assign) NSArray *cloudDisplayOrderingTerms;	// G=0x346dc899; 
@property(readonly, assign) NSArray *displayOrderingTerms;	// G=0x346dc915; 
@property(readonly, assign) ML3Predicate *dynamicPredicate;	// G=0x346dc465; 
@property(readonly, assign, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;	// G=0x346dc565; 
@property(readonly, assign) NSArray *limitOrderingTerms;	// G=0x346dc755; 
@property(readonly, assign) long long limitValue;	// G=0x346dc7d1; 
@property(readonly, assign, getter=isLimitedByCount) BOOL limitedByCount;	// G=0x346dc519; 
@property(readonly, assign) NSString *limitingProperty;	// G=0x346dc651; 
@property(readonly, assign) ML3Predicate *staticPredicate;	// G=0x346dc409; 
+ (void)_insertNewSmartPlaylist:(id)playlist criteriaBlob:(id)blob evaluationOrder:(unsigned long)order limited:(BOOL)limited trackOrder:(unsigned long)order5 distinguishedKind:(int)kind inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x346db221
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs;	// 0x346dbdf9
+ (BOOL)createMissingBuiltInSmartPlaylists:(id)smartPlaylists;	// 0x346db64d
+ (id)databaseTable;	// 0x346a8f95
+ (id)defaultOrderingProperties;	// 0x346ae4bd
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs inLibrary:(id)library;	// 0x346dc141
+ (id)extraTablesToDelete;	// 0x346d9d69
+ (id)foreignColumnForProperty:(id)property;	// 0x346d9d4d
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x346d9d31
+ (BOOL)hasCriterionInCriteriaList:(SearchCriteriaList *)criteriaList forITDBTrackField:(int)itdbtrackField;	// 0x346dae91
+ (void)initialize;	// 0x346a7469
+ (id)joinClausesForProperty:(id)property;	// 0x346a8f0d
+ (id)nextFilepathForPlaylistType:(int)playlistType withPersistentID:(unsigned long long)persistentID inLibrary:(id)library;	// 0x346d9d95
+ (id)persistentIDColumnForTable:(id)table;	// 0x346d9d79
+ (void)populateDynamicContainersInLibrary:(id)library;	// 0x346dd645
+ (void)populateDynamicContainersInLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x346dd669
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library;	// 0x346dd68d
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x346dd6c5
+ (void)populateSortOrdersOfPropertyValues:(id)propertyValues inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x346d9f81
+ (void)populateStaticItemsOfDynamicContainersInLibrary:(id)library;	// 0x346dcd9d
+ (id)predicateForCriteriaList:(SearchCriteriaList *)criteriaList dynamicCriteria:(BOOL)criteria;	// 0x346daf41
+ (int)revisionTrackingCode;	// 0x346d9d11
+ (id)sectionPropertyForProperty:(id)property;	// 0x346d9d15
+ (BOOL)smartCriteriaCanBeEvaluated:(id)evaluated;	// 0x346d9edd
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x346da1d1
- (void)_accessCurrentSwappedPersisentIDsUsingBlock:(id)block;	// 0x346de185
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size;	// 0x346de13d
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size notify:(BOOL)notify;	// 0x346dde51
- (BOOL)addTrackWithPersistentID:(long long)persistentID;	// 0x346deec9
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count;	// 0x346deef5
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x346def19
- (void)bindPopulateStatement:(id)statement withStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x346dcd11
// declared property getter: - (id)cloudDisplayOrderingTerms;	// 0x346dc899
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x346dad09
// declared property getter: - (id)displayOrderingTerms;	// 0x346dc915
// declared property getter: - (id)dynamicPredicate;	// 0x346dc465
- (id)evaluationOrderingTerms;	// 0x346dc6d9
- (SearchCriteriaList *)importedCriteriaList;	// 0x346dc375
- (BOOL)isCustomContainerOrderingDescending;	// 0x346dc605
- (BOOL)isEvaluationOrderingDescending;	// 0x346dc4c1
// declared property getter: - (BOOL)isLimitOrderingDescending;	// 0x346dc565
// declared property getter: - (BOOL)isLimitedByCount;	// 0x346dc519
// declared property getter: - (id)limitOrderingTerms;	// 0x346dc755
// declared property getter: - (long long)limitValue;	// 0x346dc7d1
// declared property getter: - (id)limitingProperty;	// 0x346dc651
- (BOOL)moveTrackFromIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x346df2e5
- (id)populateSQLWithStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x346dcb19
- (BOOL)removeAllTracks;	// 0x346de161
- (BOOL)removeTracksAtIndexes:(id)indexes;	// 0x346ded3d
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify;	// 0x346ded19
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify indexesTransformBlock:(id)block;	// 0x346de4f5
- (BOOL)removeTracksWithPersistentIDs:(const long long *)persistentIDs atFilteredIndexes:(id)filteredIndexes;	// 0x346ded5d
- (BOOL)setContainsTrack:(BOOL)track forPersistentID:(long long)persistentID notify:(BOOL)notify;	// 0x346dea19
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count;	// 0x346df725
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x346df749
- (BOOL)setTracksWithSwappedPersistentIDData:(id)swappedPersistentIDData;	// 0x346dfac1
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x346da829
// declared property getter: - (id)staticPredicate;	// 0x346dc409
@end

