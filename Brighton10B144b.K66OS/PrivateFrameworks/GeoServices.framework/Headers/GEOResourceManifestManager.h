/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import <NSObject.h> // Unknown library
#import "GEOResourceManifestServerProxyDelegate.h"

@class NSLock, NSDictionary, GEOActiveTileGroup, NSHashTable, NSMutableArray, GEOLocalizationRegionsInfo;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;	// 4 = 0x4
	NSHashTable *_serverProxyObservers;	// 8 = 0x8
	NSMutableArray *_pendingRegionalResourceLoads;	// 12 = 0xc
	GEOActiveTileGroup *_activeTileGroup;	// 16 = 0x10
	NSLock *_activeTileGroupLock;	// 20 = 0x14
	NSDictionary *_resourceNamesToPaths;	// 24 = 0x18
	GEOLocalizationRegionsInfo *_localizationRegionsInfo;	// 28 = 0x1c
	NSLock *_pendingRegionalResourceLoadsLock;	// 32 = 0x20
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup *activeTileGroup;	// G=0x33f4eb7d; 
@property(assign) unsigned activeTileGroupIdentifier;	// G=0x33fbb909; S=0x33fbb931; converted property
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;	// G=0x33f4ec45; 
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// G=0x33fbb9d9; @synthesize=_serverProxy
+ (void)disableServerConnection;	// 0x33fba5a9
+ (void)setCallerWillStartServer;	// 0x33fba5dd
+ (void)setHiDPI:(BOOL)dpi;	// 0x33fba5d9
+ (id)sharedManager;	// 0x33f4cac5
+ (void)useLocalProxy;	// 0x33fba5c9
+ (void)useRemoteProxy;	// 0x33fba5b9
- (id)init;	// 0x33f4caf1
- (id)_activeTileSetForKey:(const GEOTileKey *)key;	// 0x33fba8e9
- (void)_buildResourceNamesToPaths;	// 0x33f4e9fd
- (id)_listenerForTileKeys:(id)tileKeys acquireLock:(BOOL)lock;	// 0x33f55b11
- (void)_localeChanged:(id)changed;	// 0x33fba7a1
// declared property getter: - (id)activeTileGroup;	// 0x33f4eb7d
// converted property getter: - (unsigned)activeTileGroupIdentifier;	// 0x33fbb909
- (void)addServerProxyObserver:(id)observer;	// 0x33fba7c9
- (id)allResourceNames;	// 0x33fbadb9
- (id)authToken;	// 0x33fba781
- (id)baseURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x33fba915
- (void)cancelRegionalResourcesRequest:(id)request;	// 0x33fbb015
- (void)closeServerConnection;	// 0x33f552a1
- (void)dealloc;	// 0x33fba631
- (id)detailedDescription;	// 0x33fbb775
- (void)forceUpdate;	// 0x33fbb9b9
- (void)getResourceManifestWithHandler:(id)handler;	// 0x33fbb8e9
// declared property getter: - (BOOL)hasActiveTileGroup;	// 0x33f4ec45
- (BOOL)hasResourceManifest;	// 0x33fbb8ad
- (BOOL)isAvailableForTileKey:(const GEOTileKey *)tileKey;	// 0x33fbaaa9
- (id)languageForTileKey:(const GEOTileKey *)tileKey;	// 0x33fbaad5
- (void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;	// 0x33f55941
- (void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;	// 0x33fbafe9
- (id)localizationURLStringIfNecessaryForTileKey:(const GEOTileKey *)tileKey;	// 0x33fba971
- (int)mapMatchingTileSetStyle;	// 0x33fba85d
- (unsigned)mapMatchingZoomLevel;	// 0x33fba861
- (id)multiTileURLStringForTileKey:(const GEOTileKey *)tileKey useStatusCodes:(BOOL *)codes;	// 0x33fba941
- (void)openServerConnection;	// 0x33f71389
- (id)pathForResourceWithName:(id)name;	// 0x33f4e819
- (void)refreshActiveTileGroup;	// 0x33fbb999
- (void)removeServerProxyObserver:(id)observer;	// 0x33fba83d
- (void)resetActiveTileGroup;	// 0x33fbb979
// declared property getter: - (id)serverProxy;	// 0x33fbb9d9
- (oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;	// 0x33fbb05d
- (oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;	// 0x33f56fb9
- (oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;	// 0x33fbb429
- (oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;	// 0x33f56d41
// converted property setter: - (void)setActiveTileGroupIdentifier:(unsigned)identifier;	// 0x33fbb931
- (BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;	// 0x33f4f429
- (double)timeToLiveForTileKey:(const GEOTileKey *)tileKey;	// 0x33fbaa7d
- (unsigned)versionForTileKey:(const GEOTileKey *)tileKey;	// 0x33fbaa51
@end

