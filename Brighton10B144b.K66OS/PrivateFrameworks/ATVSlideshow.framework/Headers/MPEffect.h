/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "NSCoding.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import "MPFilterSupport.h"
#import "ATVSlideshow-Structs.h"
#import "MPAudioSupport.h"
#import "MPActionableSupport.h"
#import "MPGeometrySupport.h"
#import "MPEffectSupport.h"
#import "MPActionableSupportInternal.h"
#import <NSObject.h> // Unknown library

@class MPEffectContainer, MCContainerEffect, NSString, NSArray, NSMutableDictionary, NSMutableArray, MPAudioPlaylist, MCPlugParallel;
@protocol MZEffectTiming;

@interface MPEffect : NSObject <MPActionableSupportInternal, NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport, MPAudioSupport, MPActionableSupport, MPGeometrySupport, MPEffectSupport> {
	NSMutableArray *_slides;	// 4 = 0x4
	NSMutableArray *_secondarySlides;	// 8 = 0x8
	NSMutableArray *_texts;	// 12 = 0xc
	NSMutableArray *_filters;	// 16 = 0x10
	NSMutableDictionary *_attributes;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCContainerEffect *_container;	// 28 = 0x1c
	MCPlugParallel *_plug;	// 32 = 0x20
	MPAudioPlaylist *_audioPlaylist;	// 36 = 0x24
	MPEffectContainer *_parentContainer;	// 40 = 0x28
	BOOL _replaceSlides;	// 44 = 0x2c
	BOOL _supportsEffectTiming;	// 45 = 0x2d
	BOOL _skipEffectTiming;	// 46 = 0x2e
	NSObject<MZEffectTiming> *_effectTiming;	// 48 = 0x30
	float _opacity;	// 52 = 0x34
	CGPoint _position;	// 56 = 0x38
	float _zPosition;	// 64 = 0x40
	CGSize _size;	// 68 = 0x44
	float _rotationAngle;	// 76 = 0x4c
	float _xRotationAngle;	// 80 = 0x50
	float _yRotationAngle;	// 84 = 0x54
	float _scale;	// 88 = 0x58
	double _timeIn;	// 92 = 0x5c
	double _phaseInDuration;	// 100 = 0x64
	double _phaseOutDuration;	// 108 = 0x6c
	double _mainDuration;	// 116 = 0x74
	NSString *_effectID;	// 124 = 0x7c
	NSString *_presetID;	// 128 = 0x80
	int _audioPriority;	// 132 = 0x84
	int _randomSeed;	// 136 = 0x88
	NSString *_uuid;	// 140 = 0x8c
	int _liveIndex;	// 144 = 0x90
	BOOL _cleaningUp;	// 148 = 0x94
}
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x3312c545; converted property
@property(retain) MPAudioPlaylist *audioPlaylist;	// G=0x3312c7b5; S=0x3312c7c5; converted property
@property(assign) int audioPriority;	// G=0x3312c8f1; S=0x3312c901; converted property
@property(retain) MCContainerEffect *container;	// G=0x3312caa5; S=0x3312f3e1; converted property
@property(retain) id effectAttributes;	// G=0x33128539; S=0x33128549; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x33128309; S=0x33128319; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x3312c9d5; @synthesize=_effectTiming
@property(readonly, retain) NSMutableArray *filters;	// G=0x3312be7d; converted property
@property(assign) double fullDuration;	// G=0x33128e79; S=0x33128ed9; converted property
@property(assign) float height;	// G=0x33130ac1; S=0x33130af5; converted property
@property(assign) int liveIndex;	// G=0x3312ca85; S=0x3312ca95; converted property
@property(assign, nonatomic) double mainDuration;	// G=0x33129469; S=0x33129481; 
@property(assign) float opacity;	// G=0x33128669; S=0x33128679; converted property
@property(retain) MPEffectContainer *parentContainer;	// G=0x3312c925; S=0x3312fc6d; converted property
@property(assign, nonatomic) double phaseInDuration;	// G=0x33128f45; S=0x33128f5d; 
@property(assign, nonatomic) double phaseOutDuration;	// G=0x331291d5; S=0x331291ed; 
@property(retain) MCPlugParallel *plug;	// G=0x3312cab5; S=0x3312ee41; converted property
@property(assign) CGPoint position;	// G=0x33128859; S=0x33128871; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x33128471; S=0x33128495; 
@property(assign) int randomSeed;	// G=0x3312c935; S=0x3312c945; converted property
@property(assign, nonatomic) BOOL replaceSlides;	// G=0x3312b345; S=0x3312b355; 
@property(assign) float rotationAngle;	// G=0x33128a7d; S=0x33128a8d; converted property
@property(assign) float scale;	// G=0x33128761; S=0x33128771; converted property
@property(retain) id scriptingAnimations;	// G=0x33130b91; S=0x33130efd; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x3312aac1; converted property
@property(assign) CGSize size;	// G=0x33128b6d; S=0x33128b85; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x33129775; 
@property(readonly, assign) BOOL supportsEffectTiming;	// G=0x3312dfb1; converted property
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x3312b6d1; 
@property(readonly, retain) NSString *uuid;	// G=0x3312e41d; converted property
@property(assign) float width;	// G=0x33130b29; S=0x33130b5d; converted property
@property(assign) float xPosition;	// G=0x331309f1; S=0x33130a25; converted property
@property(assign) float xRotationAngle;	// G=0x33128c99; S=0x33128ca9; converted property
@property(assign) float yPosition;	// G=0x33130a59; S=0x33130a8d; converted property
@property(assign) float yRotationAngle;	// G=0x33128d89; S=0x33128d99; converted property
@property(assign) float zPosition;	// G=0x3312898d; S=0x3312899d; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x33126199
+ (id)effectWithEffectID:(id)effectID;	// 0x331261e9
+ (id)effectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x33126225
+ (id)effectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x33126265
+ (id)effectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x331262a5
- (id)init;	// 0x33126711
- (id)initWithCoder:(id)coder;	// 0x331274a9
- (id)initWithEffectID:(id)effectID;	// 0x331262ed
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x33126301
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x33126451
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x331265a5
- (id)_effectAttributes;	// 0x3312dd2d
- (void)_updateEffectTimingWithDocument:(id)document;	// 0x3312b365
- (void)_updateTiming:(BOOL)timing;	// 0x3312b4f9
- (void)addFilter:(id)filter;	// 0x3312be8d
- (void)addFilters:(id)filters;	// 0x3312beed
- (void)addSecondarySlide:(id)slide;	// 0x3312aad1
- (void)addSecondarySlides:(id)slides;	// 0x3312ab5d
- (void)addSlide:(id)slide;	// 0x33129785
- (void)addSlides:(id)slides;	// 0x33129811
- (void)addText:(id)text;	// 0x3312b6e1
- (void)addTexts:(id)texts;	// 0x3312b76d
- (id)animationPathForKey:(id)key;	// 0x3312c555
// converted property getter: - (id)animationPaths;	// 0x3312c545
- (void)applyFormattedAttributes;	// 0x3312ded9
// converted property getter: - (id)audioPlaylist;	// 0x3312c7b5
// converted property getter: - (int)audioPriority;	// 0x3312c8f1
- (void)cleanup;	// 0x3312ecd9
// converted property getter: - (id)container;	// 0x3312caa5
- (void)copyAnimationPaths:(id)paths;	// 0x3312eb8d
- (void)copyAudioPlaylist:(id)playlist;	// 0x3312ec95
- (void)copyFilters:(id)filters;	// 0x3312ea4d
- (void)copySecondarySlides:(id)slides;	// 0x3312e7cd
- (void)copySlides:(id)slides;	// 0x3312e68d
- (void)copyTexts:(id)texts;	// 0x3312e90d
- (void)copyVars:(id)vars;	// 0x3312e4a5
- (id)copyWithZone:(NSZone *)zone;	// 0x33128005
- (int)countOfFilters;	// 0x331308c1
- (int)countOfSlides;	// 0x33130661
- (int)countOfTexts;	// 0x33130791
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x3312d451
- (void)createSlidesWithPaths:(id)paths;	// 0x3312d29d
- (void)createTextsWithDefaultStrings;	// 0x3312cac5
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x3312ceb1
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x3312ced5
- (void)dealloc;	// 0x3312815d
- (id)description;	// 0x33126941
- (void)dump;	// 0x3312d8ad
- (id)effectAttributeForKey:(id)key;	// 0x331285a1
// converted property getter: - (id)effectAttributes;	// 0x33128539
// declared property getter: - (id)effectID;	// 0x33128309
- (id)effectPresetID;	// 0x3312dca9
// declared property getter: - (id)effectTiming;	// 0x3312c9d5
- (void)encodeWithCoder:(id)coder;	// 0x33126d69
// converted property getter: - (id)filters;	// 0x3312be7d
- (void)finalize;	// 0x3312811d
- (id)formattedAttributes;	// 0x3312ddd5
- (id)fullDebugLog;	// 0x3312d8d5
// converted property getter: - (double)fullDuration;	// 0x33128e79
- (BOOL)hasBreaksInDocument:(id)document;	// 0x33130361
- (BOOL)hasMovies;	// 0x33130291
// converted property getter: - (float)height;	// 0x33130ac1
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x3312bf31
- (void)insertObject:(id)object inFiltersAtIndex:(int)index;	// 0x33130901
- (void)insertObject:(id)object inSlidesAtIndex:(int)index;	// 0x331306a1
- (void)insertObject:(id)object inTextsAtIndex:(int)index;	// 0x331307d1
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x3312aba1
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x33129855
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x3312b7b1
- (BOOL)isTextOnly;	// 0x3312be31
// converted property getter: - (int)liveIndex;	// 0x3312ca85
- (double)lowestDisplayTime;	// 0x3312b699
// declared property getter: - (double)mainDuration;	// 0x33129469
- (int)maxNumberOfSecondarySlides;	// 0x3312ca35
- (int)maxNumberOfSlides;	// 0x3312c9e5
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x3312c451
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x3312a9c9
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x3312bd39
- (id)nearestLayerGroup;	// 0x33130431
- (id)nearestPlug;	// 0x3312e465
- (BOOL)needsParallelizer;	// 0x3312fccd
- (id)objectID;	// 0x3312e3f5
- (id)objectInFiltersAtIndex:(int)index;	// 0x331308e1
- (id)objectInSlidesAtIndex:(int)index;	// 0x33130681
- (id)objectInTextsAtIndex:(int)index;	// 0x331307b1
// converted property getter: - (float)opacity;	// 0x33128669
// converted property getter: - (id)parentContainer;	// 0x3312c925
- (id)parentDocument;	// 0x3312e42d
// declared property getter: - (double)phaseInDuration;	// 0x33128f45
// declared property getter: - (double)phaseOutDuration;	// 0x331291d5
// converted property getter: - (id)plug;	// 0x3312cab5
- (id)plugID;	// 0x3312e3cd
// converted property getter: - (CGPoint)position;	// 0x33128859
// declared property getter: - (id)presetID;	// 0x33128471
// converted property getter: - (int)randomSeed;	// 0x3312c935
- (void)reconfigureSlides;	// 0x3312d605
- (void)removeAllFilters;	// 0x3312c3b1
- (void)removeAllSecondarySlides;	// 0x3312b249
- (void)removeAllSlides;	// 0x3312a749
- (void)removeAllTexts;	// 0x3312bc99
- (void)removeAnimationPathForKey:(id)key;	// 0x3312c70d
- (void)removeFiltersAtIndices:(id)indices;	// 0x3312c21d
- (void)removeObjectFromFiltersAtIndex:(int)index;	// 0x33130941
- (void)removeObjectFromSlidesAtIndex:(int)index;	// 0x331306e1
- (void)removeObjectFromTextsAtIndex:(int)index;	// 0x33130811
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x3312b009
- (void)removeSlidesAtIndices:(id)indices;	// 0x3312a2ad
- (void)removeTextsAtIndices:(id)indices;	// 0x3312bb31
- (void)replaceObjectInFiltersAtIndex:(int)index withObject:(id)object;	// 0x3313097d
- (void)replaceObjectInSlidesAtIndex:(int)index withObject:(id)object;	// 0x3313071d
- (void)replaceObjectInTextsAtIndex:(int)index withObject:(id)object;	// 0x3313084d
- (void)replaceSlide:(id)slide atIndex:(int)index;	// 0x3312a9b1
- (void)replaceSlideAtIndex:(int)index withSlide:(id)slide;	// 0x3312a7ed
// declared property getter: - (BOOL)replaceSlides;	// 0x3312b345
- (void)replaceTextsWitStrings:(id)strings;	// 0x3312cc29
// converted property getter: - (float)rotationAngle;	// 0x33128a7d
// converted property getter: - (float)scale;	// 0x33128761
- (void)scaleMainDuration;	// 0x3312fee1
// converted property getter: - (id)scriptingAnimations;	// 0x33130b91
// converted property getter: - (id)secondarySlides;	// 0x3312aac1
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x3312c581
// converted property setter: - (void)setAudioPlaylist:(id)playlist;	// 0x3312c7c5
// converted property setter: - (void)setAudioPriority:(int)priority;	// 0x3312c901
// converted property setter: - (void)setContainer:(id)container;	// 0x3312f3e1
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x331285cd
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x33128549
// declared property setter: - (void)setEffectID:(id)anId;	// 0x33128319
// converted property setter: - (void)setFullDuration:(double)duration;	// 0x33128ed9
// converted property setter: - (void)setHeight:(float)height;	// 0x33130af5
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x3312ca95
// declared property setter: - (void)setMainDuration:(double)duration;	// 0x33129481
// converted property setter: - (void)setOpacity:(float)opacity;	// 0x33128679
// converted property setter: - (void)setParentContainer:(id)container;	// 0x3312fc6d
// declared property setter: - (void)setPhaseInDuration:(double)duration;	// 0x33128f5d
// declared property setter: - (void)setPhaseOutDuration:(double)duration;	// 0x331291ed
// converted property setter: - (void)setPlug:(id)plug;	// 0x3312ee41
// converted property setter: - (void)setPosition:(CGPoint)position;	// 0x33128871
// declared property setter: - (void)setPresetID:(id)anId;	// 0x33128495
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x3312c945
// declared property setter: - (void)setReplaceSlides:(BOOL)slides;	// 0x3312b355
// converted property setter: - (void)setRotationAngle:(float)angle;	// 0x33128a8d
// converted property setter: - (void)setScale:(float)scale;	// 0x33128771
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x33130efd
// converted property setter: - (void)setSize:(CGSize)size;	// 0x33128b85
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x3312dd09
// converted property setter: - (void)setWidth:(float)width;	// 0x33130b5d
// converted property setter: - (void)setXPosition:(float)position;	// 0x33130a25
// converted property setter: - (void)setXRotationAngle:(float)angle;	// 0x33128ca9
// converted property setter: - (void)setYPosition:(float)position;	// 0x33130a8d
// converted property setter: - (void)setYRotationAngle:(float)angle;	// 0x33128d99
// converted property setter: - (void)setZPosition:(float)position;	// 0x3312899d
// converted property getter: - (CGSize)size;	// 0x33128b6d
- (id)slideForMCSlide:(id)mcslide;	// 0x33130459
- (id)slideInformationWithDocument:(id)document;	// 0x3312dfc1
// declared property getter: - (id)slides;	// 0x33129775
// converted property getter: - (BOOL)supportsEffectTiming;	// 0x3312dfb1
- (BOOL)supportsUnlimitedSlides;	// 0x3312b2ed
// declared property getter: - (id)texts;	// 0x3312b6d1
- (void)updateEffectAttributes;	// 0x3312e32d
- (void)updateTiming;	// 0x3312dd19
// converted property getter: - (id)uuid;	// 0x3312e41d
- (id)videoPaths;	// 0x3312dba9
// converted property getter: - (float)width;	// 0x33130b29
// converted property getter: - (float)xPosition;	// 0x331309f1
// converted property getter: - (float)xRotationAngle;	// 0x33128c99
// converted property getter: - (float)yPosition;	// 0x33130a59
// converted property getter: - (float)yRotationAngle;	// 0x33128d89
- (int)zIndex;	// 0x33129701
// converted property getter: - (float)zPosition;	// 0x3312898d
@end

