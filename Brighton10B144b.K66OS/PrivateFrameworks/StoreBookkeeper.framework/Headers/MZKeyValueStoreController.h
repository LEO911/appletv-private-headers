/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import "MZKeyValueStoreOperationDelegate.h"
#import "MZKeyValueStoreDeserializeOperationDelegate.h"
#import <NSObject.h> // Unknown library

@class NSString, NSMutableArray, MZKeyValueStoreAuthenticationController, NSOperationQueue, MZKeyValueStoreTransaction, MZTaskAssertion, MZKeyValueStoreDeserializer, NSURL;
@protocol MZKeyValueStoreControllerDelegate, OS_dispatch_queue;

@interface MZKeyValueStoreController : NSObject <MZKeyValueStoreOperationDelegate, MZKeyValueStoreDeserializeOperationDelegate> {
	id<MZKeyValueStoreControllerDelegate> _delegate;	// 4 = 0x4
	NSURL *_defaultGetURL;	// 8 = 0x8
	NSURL *_defaultSetURL;	// 12 = 0xc
	NSString *_defaultDomain;	// 16 = 0x10
	BOOL _enabled;	// 20 = 0x14
	MZKeyValueStoreAuthenticationController *_authenticationController;	// 24 = 0x18
	NSMutableArray *_pendingTransactions;	// 28 = 0x1c
	MZKeyValueStoreTransaction *_currentTransaction;	// 32 = 0x20
	NSOperationQueue *_operationQueue;	// 36 = 0x24
	BOOL _resolvingError;	// 40 = 0x28
	MZKeyValueStoreDeserializer *_currentDeserializer;	// 44 = 0x2c
	NSObject<OS_dispatch_queue> *_dispatchQueue;	// 48 = 0x30
	MZTaskAssertion *_backgroundTaskAssertion;	// 52 = 0x34
	id _networkTypeObserver;	// 56 = 0x38
}
@property(retain) MZKeyValueStoreAuthenticationController *authenticationController;	// G=0x3548eed5; S=0x3548eee9; @synthesize=_authenticationController
@property(retain, nonatomic) MZTaskAssertion *backgroundTaskAssertion;	// G=0x3548efe9; S=0x3548eff9; @synthesize=_backgroundTaskAssertion
@property(retain, nonatomic) MZKeyValueStoreDeserializer *currentDeserializer;	// G=0x3548efa9; S=0x3548efb9; @synthesize=_currentDeserializer
@property(retain, nonatomic) MZKeyValueStoreTransaction *currentTransaction;	// G=0x3548ef49; S=0x3548ef59; @synthesize=_currentTransaction
@property(copy) NSString *defaultDomain;	// G=0x3548eeb1; S=0x3548eec5; @synthesize=_defaultDomain
@property(retain) NSURL *defaultGetURL;	// G=0x3548ee69; S=0x3548ee7d; @synthesize=_defaultGetURL
@property(retain) NSURL *defaultSetURL;	// G=0x3548ee8d; S=0x3548eea1; @synthesize=_defaultSetURL
@property(assign) id<MZKeyValueStoreControllerDelegate> delegate;	// G=0x3548ee3d; S=0x3548ee51; @synthesize=_delegate
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;	// G=0x3548efc9; S=0x3548efd9; @synthesize=_dispatchQueue
@property(assign, getter=isEnabled) BOOL enabled;	// G=0x3548eef9; S=0x3548ef11; @synthesize=_enabled
@property(assign, nonatomic) id networkTypeObserver;	// G=0x3548f009; S=0x3548f019; @synthesize=_networkTypeObserver
@property(retain, nonatomic) NSOperationQueue *operationQueue;	// G=0x3548ef69; S=0x3548ef79; @synthesize=_operationQueue
@property(retain, nonatomic) NSMutableArray *pendingTransactions;	// G=0x3548ef29; S=0x3548ef39; @synthesize=_pendingTransactions
@property(assign, nonatomic, getter=isResolvingError) BOOL resolvingError;	// G=0x3548ef89; S=0x3548ef99; @synthesize=_resolvingError
- (id)initWithDomain:(id)domain baseURLForGETAll:(id)getall baseURLForPUTAll:(id)putall;	// 0x3548b2dd
- (void)_addPendingTransaction:(id)transaction;	// 0x3548d119
- (BOOL)_authenticationCanProcessTransaction:(id)transaction error:(id *)error;	// 0x3548d2d1
- (void)_beginBackgroundTask;	// 0x3548e501
- (BOOL)_canScheduleTransaction:(id)transaction error:(id *)error;	// 0x3548d181
- (void)_cancelAllTransactions:(id)transactions;	// 0x3548c975
- (void)_cancelTransaction:(id)transaction error:(id)error;	// 0x3548cab9
- (BOOL)_clampsCanScheduleTransaction:(id)transaction error:(id *)error;	// 0x3548d2a1
- (void)_currentTransactionDidFinish;	// 0x3548d44d
- (BOOL)_delegateShouldScheduleTransaction:(id)_delegate error:(id *)error;	// 0x3548e175
- (void)_delegateTransactionDidCancel:(id)_delegateTransaction withError:(id)error;	// 0x3548e30d
- (BOOL)_delegateTransactionDidFail:(id)_delegateTransaction withError:(id)error;	// 0x3548e20d
- (void)_delegateTransactionDidFinish:(id)_delegateTransaction;	// 0x3548e409
- (void)_endBackgroundTask;	// 0x3548e785
- (void)_errorResolutionCancel:(id)cancel;	// 0x3548e091
- (void)_errorResolutionDefault:(id)aDefault;	// 0x3548e0f5
- (void)_errorResolutionRetry:(id)retry;	// 0x3548df85
- (BOOL)_isEnabledForTransaction:(id)transaction error:(id *)error;	// 0x3548d1e5
- (BOOL)_isTransactionValid:(id)valid error:(id *)error;	// 0x3548d231
- (void)_processCurrentTransaction;	// 0x3548ce15
- (void)_processOperationOutput:(id)output operationAuthenticated:(BOOL)authenticated;	// 0x3548d8ad
- (void)_processPendingTransactions;	// 0x3548cc71
- (id)_requestForTransaction:(id)transaction;	// 0x3548cf65
- (void)_resolveError:(id)error resolution:(int)resolution;	// 0x3548dea5
- (void)_scheduleTransaction:(id)transaction;	// 0x3548d03d
- (id)_scheduleTransactionWithType:(int)type sinceDomainVersion:(id)version URL:(id)url keys:(id)keys processor:(id)processor;	// 0x3548d395
- (void)_transactionDidCancel:(id)_transaction withError:(id)error;	// 0x3548d725
- (void)_transactionDidFail:(id)_transaction withError:(id)error;	// 0x3548d579
// declared property getter: - (id)authenticationController;	// 0x3548eed5
// declared property getter: - (id)backgroundTaskAssertion;	// 0x3548efe9
- (void)cancelAllTransactions;	// 0x3548c065
- (void)cancelAllTransactionsCancelCode:(int)code;	// 0x3548c355
- (void)cancelScheduledTransaction:(id)transaction;	// 0x3548bf8d
- (id)clampsController;	// 0x3548bdcd
- (void)clearWeakReferencesInOperation:(id)operation;	// 0x3548bd09
// declared property getter: - (id)currentDeserializer;	// 0x3548efa9
// declared property getter: - (id)currentTransaction;	// 0x3548ef49
- (void)dealloc;	// 0x3548b699
// declared property getter: - (id)defaultDomain;	// 0x3548eeb1
// declared property getter: - (id)defaultGetURL;	// 0x3548ee69
// declared property getter: - (id)defaultSetURL;	// 0x3548ee8d
// declared property getter: - (id)delegate;	// 0x3548ee3d
- (void)deserializeOperationDidFinish:(id)deserializeOperation shouldReschedule:(BOOL)reschedule;	// 0x3548edb5
// declared property getter: - (id)dispatchQueue;	// 0x3548efc9
// declared property getter: - (BOOL)isEnabled;	// 0x3548eef9
- (BOOL)isIdle;	// 0x3548c795
// declared property getter: - (BOOL)isResolvingError;	// 0x3548ef89
- (void)keyValueStoreOperation:(id)operation scheduleURLOperation:(id)operation2;	// 0x3548ed49
- (void)keyValueStoreOperationOperationDidFinish:(id)keyValueStoreOperationOperation;	// 0x3548eda5
// declared property getter: - (id)networkTypeObserver;	// 0x3548f009
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x3548b951
- (void)operation:(id)operation didReceiveResponse:(id)response;	// 0x3548e935
- (void)operation:(id)operation failedWithError:(id)error;	// 0x3548ea65
- (void)operation:(id)operation finishedWithOutput:(id)output;	// 0x3548e855
// declared property getter: - (id)operationQueue;	// 0x3548ef69
- (void)operationQueue:(id)queue willAddOperation:(id)operation;	// 0x3548bd61
- (void)operationQueue:(id)queue willRemoveOperation:(id)operation;	// 0x3548bdb9
// declared property getter: - (id)pendingTransactions;	// 0x3548ef29
- (void)performBlock:(id)block;	// 0x3548c935
- (void)performBlockAndWait:(id)wait;	// 0x3548c955
- (void)reset;	// 0x3548c701
- (void)resolveError:(id)error resolution:(int)resolution;	// 0x3548c64d
- (id)scheduleGetAllTransactionWithSinceDomainVersion:(id)sinceDomainVersion processor:(id)processor;	// 0x3548bde9
- (id)scheduleGetTransactionWithKeys:(id)keys processor:(id)processor;	// 0x3548be29
- (id)scheduleSetTransactionWithKeys:(id)keys processor:(id)processor;	// 0x3548be69
- (void)scheduleTransaction:(id)transaction;	// 0x3548bea9
// declared property setter: - (void)setAuthenticationController:(id)controller;	// 0x3548eee9
// declared property setter: - (void)setBackgroundTaskAssertion:(id)assertion;	// 0x3548eff9
// declared property setter: - (void)setCurrentDeserializer:(id)deserializer;	// 0x3548efb9
// declared property setter: - (void)setCurrentTransaction:(id)transaction;	// 0x3548ef59
// declared property setter: - (void)setDefaultDomain:(id)domain;	// 0x3548eec5
// declared property setter: - (void)setDefaultGetURL:(id)url;	// 0x3548ee7d
// declared property setter: - (void)setDefaultSetURL:(id)url;	// 0x3548eea1
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x3548ee51
// declared property setter: - (void)setDispatchQueue:(id)queue;	// 0x3548efd9
// declared property setter: - (void)setEnabled:(BOOL)enabled;	// 0x3548ef11
// declared property setter: - (void)setNetworkTypeObserver:(id)observer;	// 0x3548f019
// declared property setter: - (void)setOperationQueue:(id)queue;	// 0x3548ef79
// declared property setter: - (void)setPendingTransactions:(id)transactions;	// 0x3548ef39
// declared property setter: - (void)setResolvingError:(BOOL)error;	// 0x3548ef99
@end

