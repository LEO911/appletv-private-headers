/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import "MSCupidStateMachine.h"
#import "MSSubscriber.h"
#import "MSSubscribeStreamsProtocolDelegate.h"
#import "MSSubscribeStorageProtocolDelegate.h"
#import "MSReauthorizationProtocolDelegate.h"

@class NSMutableArray, NSMutableDictionary, MSMediaStreamDaemon, MSReauthorizationProtocol, MSSubscribeStreamsProtocol, MSObjectQueue;
@protocol MSSubscribeStorageProtocol, MSSubscriberDelegate;

@protocol MSSubscriber
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;
- (void)abort;
- (void)checkForNewAssetCollections;
- (void)checkForOutstandingActivities;
// declared property getter: - (id)delegate;
- (id)ownSubscribedStream;
- (void)resetSync;
- (void)retrieveAssets:(id)assets;
// declared property setter: - (void)setDelegate:(id)delegate;
- (void)stop;
- (id)subscribedStreams;
@end

@interface MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate> {
	id<MSSubscriberDelegate> _delegate;	// 32 = 0x20
	MSMediaStreamDaemon *_daemon;	// 36 = 0x24
	BOOL _checkOneMoreTime;	// 40 = 0x28
	int _state;	// 44 = 0x2c
	MSSubscribeStreamsProtocol *_protocol;	// 48 = 0x30
	NSMutableDictionary *_newSubscriptionsByStreamID;	// 52 = 0x34
	int _retrievalState;	// 56 = 0x38
	id<MSSubscribeStorageProtocol> _storageProtocol;	// 60 = 0x3c
	MSReauthorizationProtocol *_reauthProtocol;	// 64 = 0x40
	MSObjectQueue *_retrievalQueue;	// 68 = 0x44
	NSMutableArray *_assetsBeingRetrieved;	// 72 = 0x48
	long long _targetRetrievalByteCount;	// 76 = 0x4c
	int _retrievalBatchSize;	// 84 = 0x54
	int _maxErrorCount;	// 88 = 0x58
}
@property(assign, nonatomic) MSMediaStreamDaemon *daemon;	// G=0x33750779; S=0x33750789; @synthesize=_daemon
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;	// G=0x33750759; S=0x33750769; @synthesize=_delegate
@property(assign, nonatomic) int retrievalBatchSize;	// G=0x337507c5; S=0x337507d5; @synthesize=_retrievalBatchSize
@property(assign, nonatomic) long long targetRetrievalByteCount;	// G=0x33750799; S=0x337507b1; @synthesize=_targetRetrievalByteCount
+ (id)_clearInstantiatedSubscribersByPersonID;	// 0x3374c135
+ (void)_setMasterNextActivityDate:(id)date forPersonID:(id)personID;	// 0x3374c1b5
+ (id)existingSubscriberForPersonID:(id)personID;	// 0x3374c119
+ (void)forgetPersonID:(id)anId;	// 0x3374c149
+ (BOOL)isInRetryState;	// 0x3374c789
+ (id)nextActivityDate;	// 0x3374c509
+ (id)nextActivityDateForPersonID:(id)personID;	// 0x3374c61d
+ (id)personIDsWithOutstandingActivities;	// 0x3374c66d
+ (void)stopAllActivities;	// 0x3374c6a9
+ (id)subscriberForPersonID:(id)personID;	// 0x3374bffd
- (id)initWithPersonID:(id)personID baseURL:(id)url;	// 0x3374ca39
- (void).cxx_destruct;	// 0x337507e5
- (void)_abort;	// 0x3374f23d
- (void)_checkForNewAssetCollections;	// 0x3374d76d
- (void)_didFinishRetrievingSubscriptionUpdate;	// 0x3374d981
- (void)_didReceiveAuthenticationError:(id)error;	// 0x3374e485
- (void)_finishedRetrievingAsset:(id)asset;	// 0x3374f59d
- (void)_forget;	// 0x3374f521
- (BOOL)_hasOutstandingPoll;	// 0x3374d1a5
- (BOOL)_isAllowedToDownload;	// 0x3374d491
- (BOOL)_isInRetryState;	// 0x3374f569
- (void)_reauthorizeAssets;	// 0x3374efd1
- (void)_refreshServerSideConfigurationParameters;	// 0x3374ce01
- (void)_retrieveAssets;	// 0x3374ebed
- (void)_retrieveNextAssets;	// 0x3374edb5
- (void)_serverSideConfigurationDidChange:(id)_serverSideConfiguration;	// 0x3374cf1d
- (void)_setHasOutstandingPoll:(BOOL)poll;	// 0x3374d209
- (void)_setSubscriptionsByStreamID:(id)anId;	// 0x3374d39d
- (void)_stopOutSubscriberState:(int *)state outRetrievalState:(int *)state2;	// 0x3374f0e9
- (id)_subscriptionsByStreamID;	// 0x3374d2f1
- (void)_updateMasterManifest;	// 0x3374d0c1
- (void)abort;	// 0x3374f511
- (void)checkForNewAssetCollections;	// 0x3374d5e5
- (void)checkForOutstandingActivities;	// 0x3374eaf9
// declared property getter: - (id)daemon;	// 0x33750779
- (void)deactivate;	// 0x3374cc81
- (void)dealloc;	// 0x3374cdc1
// declared property getter: - (id)delegate;	// 0x33750759
- (id)ownSubscribedStream;	// 0x3374c9cd
- (void)reauthorizationProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x337500cd
- (void)reauthorizationProtocol:(id)protocol reauthorizedAssets:(id)assets rejectedAssets:(id)assets3 error:(id)error;	// 0x337501d1
- (void)resetSync;	// 0x3374d411
// declared property getter: - (int)retrievalBatchSize;	// 0x337507c5
- (void)retrieveAssets:(id)assets;	// 0x3374e691
// declared property setter: - (void)setDaemon:(id)daemon;	// 0x33750789
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x33750769
// declared property setter: - (void)setRetrievalBatchSize:(int)size;	// 0x337507d5
// declared property setter: - (void)setTargetRetrievalByteCount:(long long)count;	// 0x337507b1
- (void)stop;	// 0x3374f229
- (void)subscribeStorageProtocol:(id)protocol didFinishRetrievingAsset:(id)asset error:(id)error;	// 0x3374f6e9
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)subscribeStorageProtocol;	// 0x3374f811
- (void)subscribeStreamsProtocol:(id)protocol didFindDisappearedSubscriptionForPersonID:(id)personID;	// 0x3374e179
- (void)subscribeStreamsProtocol:(id)protocol didFindShareState:(id)state;	// 0x3374e615
- (void)subscribeStreamsProtocol:(id)protocol didFindTemporarilyUnavailableSubscriptionForPersonID:(id)personID;	// 0x3374e59d
- (void)subscribeStreamsProtocol:(id)protocol didFinishError:(id)error;	// 0x3374e251
- (void)subscribeStreamsProtocol:(id)protocol didFinishReceivingUpdatesForPersonID:(id)personID ctag:(id)ctag;	// 0x3374df65
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAssetCollections:(id)collections forPersonID:(id)personID;	// 0x3374dce1
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x3374e589
- (void)subscribeStreamsProtocol:(id)protocol willReceiveUpdatesForPersonID:(id)personID wasReset:(BOOL)reset metadata:(id)metadata;	// 0x3374da7d
- (id)subscribedStreams;	// 0x3374c879
// declared property getter: - (long long)targetRetrievalByteCount;	// 0x33750799
@end

