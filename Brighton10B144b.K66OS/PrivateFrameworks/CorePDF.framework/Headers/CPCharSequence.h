/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import <NSObject.h> // Unknown library
#import "CorePDF-Structs.h"
#import "CPDisposable.h"
#import "NSCopying.h"
#import "CPCopying.h"

@class CPMemoryOwner;

@interface CPCharSequence : NSObject <NSCopying, CPCopying, CPDisposable> {
	unsigned length;	// 4 = 0x4
	CPPDFChar **charArray;	// 8 = 0x8
	unsigned previousSize;	// 12 = 0xc
	unsigned size;	// 16 = 0x10
	CPMemoryOwner *sharedMemory;	// 20 = 0x14
	BOOL wasMerged;	// 24 = 0x18
}
@property(readonly, assign) CPPDFChar **charArray;	// G=0x33864165; converted property
@property(readonly, assign) unsigned length;	// G=0x33864105; converted property
@property(readonly, assign) BOOL wasMerged;	// G=0x338647f9; converted property
- (id)initSuper;	// 0x33863df5
- (id)initWithChars:(CPPDFChar *)chars length:(unsigned)length;	// 0x33863d9d
- (id)initWithSizeFor:(unsigned)aFor;	// 0x33863d35
- (void)addChar:(CPPDFChar *)aChar;	// 0x33864175
- (void)addChars:(CPPDFChar *)chars length:(unsigned)length;	// 0x338641dd
- (void)addChars:(CPPDFChar *)chars length:(unsigned)length ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x3386424d
- (void)addCharsFromSequence:(id)sequence;	// 0x338642e5
- (CGRect)bounds;	// 0x33865059
- (CGRect)boundsFrom:(unsigned)from length:(unsigned)length;	// 0x33865095
// converted property getter: - (CPPDFChar **)charArray;	// 0x33864165
- (CPPDFChar *)charAtIndex:(unsigned)index;	// 0x33864115
- (void)copyToSubsequence:(id)subsequence from:(unsigned)from length:(unsigned)length;	// 0x33864b71
- (void)copyToSubsequence:(id)subsequence ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x33864c0d
- (id)copyWithZone:(NSZone *)zone;	// 0x33863ef9
- (void)dealloc;	// 0x33863e99
- (void)dispose;	// 0x33863e21
- (void)finalize;	// 0x33863e59
// converted property getter: - (unsigned)length;	// 0x33864105
- (BOOL)map:(/*function-pointer*/ void *)map passing:(void *)passing;	// 0x33864da1
- (BOOL)map:(/*function-pointer*/ void *)map whereNeighborsWith:(id)with passing:(void *)passing;	// 0x33864f6d
- (BOOL)mapToPairs:(/*function-pointer*/ void *)pairs passing:(void *)passing;	// 0x33864ec1
- (BOOL)mapToPairsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x33864f11
- (BOOL)mapWithIndex:(/*function-pointer*/ void *)index from:(unsigned)from length:(unsigned)length passing:(void *)passing;	// 0x33864e41
- (BOOL)mapWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x33864ded
- (void)merge:(id)merge by:(/*function-pointer*/ void *)by;	// 0x33864729
- (void)mergeByAnchorXIncreasingYDecreasing:(id)decreasing;	// 0x3386470d
- (void)mergeByAnchorYDecreasingXIncreasing:(id)increasing;	// 0x338646f1
- (id)newSubsequenceFrom:(unsigned)from length:(unsigned)length;	// 0x33864809
- (void)removeAllChars;	// 0x33864389
- (void)removeChar;	// 0x33864345
- (void)removeCharAtIndex:(unsigned)index;	// 0x3386447d
- (void)removeFrom:(unsigned)from;	// 0x33864529
- (BOOL)removeSubsequences:(id)subsequences whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x33864a55
- (BOOL)removeToSubsequence:(id)subsequence ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x33864ca9
- (void)replaceCharAtIndex:(unsigned)index withChar:(CPPDFChar *)aChar;	// 0x33864405
- (void)resize:(unsigned)resize;	// 0x33863fdd
- (void)sortBy:(/*function-pointer*/ void *)by;	// 0x33864691
- (void)sortByAnchorXIncreasingYDecreasing;	// 0x33864609
- (void)sortByAnchorYDecreasingXIncreasing;	// 0x33864581
- (void)splitToSubsequences:(id)subsequences whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x33864949
// converted property getter: - (BOOL)wasMerged;	// 0x338647f9
@end

