/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import <NSObject.h> // Unknown library

@class MFDeviceContext, MFObjectTable, NSMutableArray, NSDictionary;
@protocol MFDeviceDriver;

@interface MFGraphicsDevice : NSObject {
	MFDeviceContext *m_currentDC;	// 4 = 0x4
	NSMutableArray *m_savedDC;	// 8 = 0x8
	NSObject<MFDeviceDriver> *m_deviceDriver;	// 12 = 0xc
	MFObjectTable *m_objectTable;	// 16 = 0x10
	MFObjectTable *m_stockObjects;	// 20 = 0x14
	NSDictionary *m_colorMap;	// 24 = 0x18
	NSDictionary *m_fillMap;	// 28 = 0x1c
}
- (id)initWithCanvas:(CGRect)canvas;	// 0x348c9709
- (int)abortPath;	// 0x34af47a1
- (int)angleArc:(int)arc :(int)arg2 :(unsigned long)arg3 :(double)arg4 :(double)arg5;	// 0x34af44a5
- (int)arc:(int)arc :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x34af4451
- (int)arcTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x34af44fd
- (int)beginPath;	// 0x349a4ab9
- (int)bezier:(int)bezier :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x349a59b9
- (int)bezierTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6;	// 0x349a4c25
- (int)bitBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(unsigned long)arg8 :(CGAffineTransform *)arg9 :(unsigned long)arg10;	// 0x3498d2b5
- (int)chord:(int)chord :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x34af4551
- (int)closeCurrentPath:(bool)path;	// 0x349a5541
- (int)comment:(id)comment;	// 0x34af4449
- (id)createBitmap:(unsigned)bitmap :(unsigned)arg2 :(unsigned)arg3 :(unsigned)arg4 :(const char *)arg5 :(unsigned)arg6;	// 0x34af4bcd
- (int)createBrush:(int)brush :(id)arg2 :(int)arg3 :(unsigned)arg4;	// 0x34951c49
- (id)createColorWithRGBBytes:(unsigned char)rgbbytes :(unsigned char)arg2 :(unsigned char)arg3 :(unsigned char)arg4;	// 0x34951bdd
- (id)createDIBitmap:(const char *)bitmap :(unsigned)arg2 :(int)arg3;	// 0x34953fb5
- (id)createDIBitmap:(const char *)bitmap :(unsigned)arg2 :(const char *)arg3 :(unsigned)arg4 :(int)arg5;	// 0x348cc435
- (int)createFontIndirect:(long)indirect :(long)arg2 :(long)arg3 :(long)arg4 :(long)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15;	// 0x34952c71
- (int)createFontIndirectW:(long)w :(long)arg2 :(long)arg3 :(long)arg4 :(long)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15 :(id)arg16 :(id)arg17 :(unsigned)arg18 :(unsigned)arg19 :(unsigned)arg20 :(unsigned)arg21 :(unsigned)arg22 :(unsigned)arg23;	// 0x34957691
- (int)createPalette:(id)palette :(unsigned)arg2;	// 0x349b3b8d
- (int)createPatternBrush:(id)brush :(unsigned)arg2 usePaletteForBilevel:(BOOL)bilevel;	// 0x349a5d4d
- (int)createPen:(int)pen :(long)arg2 :(id)arg3 :(double *)arg4 :(unsigned)arg5;	// 0x34951ec1
- (int)createRegion:(id)region;	// 0x349d4025
- (void)createStockObjects;	// 0x348cd46d
- (void)dealloc;	// 0x348ce45d
- (int)deleteObject:(int)object;	// 0x349525a5
- (int)description:(id)description;	// 0x349d2a1d
- (void)done;	// 0x348ce1a1
- (int)ellipse:(int)ellipse :(int)arg2 :(int)arg3 :(int)arg4;	// 0x3498e9f9
- (int)endPath;	// 0x349a5659
- (int)excludeClipRect:(CGRect)rect;	// 0x349592f5
- (int)extTextOut:(int)anOut :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int *)arg9 :(int)arg10;	// 0x34958569
- (int)extTextOutEncoded:(int)encoded :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int *)arg9 :(int)arg10;	// 0x349b3795
- (int)fillRgn:(unsigned)rgn :(unsigned)arg2;	// 0x34af4a05
- (int)fillRgnWithRects:(id)rects :(unsigned)arg2;	// 0x34af4981
- (int)frameRegion:(unsigned)region :(unsigned)arg2 :(int)arg3 :(int)arg4;	// 0x34af4b59
- (int)frameRegionWithRects:(id)rects :(unsigned)arg2 :(int)arg3 :(int)arg4;	// 0x34af4ad5
- (CGRect)getCanvas;	// 0x348ca881
- (id)getCurrentFont;	// 0x349c73c1
- (int)getStockObject:(unsigned)object;	// 0x348cd3ed
- (int)intersectClipRect:(CGRect)rect;	// 0x34957979
- (int)invertRgn:(unsigned)rgn;	// 0x34af4931
- (int)invertRgnWithRects:(id)rects;	// 0x34af48e1
- (int)lineTo:(double)to :(double)arg2;	// 0x34957e41
- (int)maskBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(id)arg8 :(int)arg9 :(int)arg10 :(unsigned long)arg11 :(CGAffineTransform *)arg12 :(unsigned long)arg13;	// 0x34af4c1d
- (int)modifyWorldTransform:(const CGAffineTransform *)transform :(int)arg2;	// 0x34989619
- (int)moveTo:(double)to :(double)arg2;	// 0x34957da1
- (int)offsetViewportOrg:(int)org :(int)arg2;	// 0x34af4721
- (int)offsetWindowOrg:(int)org :(int)arg2;	// 0x34af46e1
- (int)paintRgn:(unsigned)rgn;	// 0x34af487d
- (int)paintRgnWithRects:(id)rects;	// 0x34af4815
- (int)patBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(unsigned long)arg5;	// 0x349bf81d
- (int)pie:(int)pie :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x349c747d
- (int)plgBlt:(CGPoint *)blt :(id)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(id)arg7 :(int)arg8 :(int)arg9 :(CGAffineTransform *)arg10 :(unsigned long)arg11;	// 0x34af4cb9
- (int)polyPolygon:(CGPoint *)polygon :(int *)arg2 :(int)arg3;	// 0x3498cc09
- (int)polyPolyline:(CGPoint *)polyline :(int *)arg2 :(int)arg3;	// 0x349b3305
- (int)polygon:(CGPoint *)polygon :(int)arg2;	// 0x349520ad
- (int)polyline:(CGPoint *)polyline :(int)arg2;	// 0x349527e1
- (int)realizePalette;	// 0x349b5835
- (id)recolor:(unsigned char)recolor :(unsigned char)arg2 :(unsigned char)arg3 fill:(BOOL)fill;	// 0x348cd7fd
- (id)recolor:(id)recolor fill:(BOOL)fill;	// 0x348cd845
- (int)rectangle:(int)rectangle :(int)arg2 :(int)arg3 :(int)arg4;	// 0x3495947d
- (int)resizePalette:(unsigned)palette :(unsigned)arg2;	// 0x34af4671
- (int)restoreDC:(int)dc;	// 0x349543f1
- (int)roundRect:(int)rect :(int)arg2 :(int)arg3 :(int)arg4 :(double)arg5 :(double)arg6;	// 0x34af45a5
- (int)saveDC;	// 0x34952f25
- (int)scaleViewportExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;	// 0x349c0bf9
- (int)scaleWindowExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;	// 0x34af4761
- (int)selectClipPath:(int)path;	// 0x349a5719
- (int)selectClipRegion:(unsigned)region :(int)arg2;	// 0x349c4de1
- (int)selectClipRegionWithRects:(id)rects :(int)arg2;	// 0x348ce019
- (int)selectObject:(int)object;	// 0x34951e05
- (int)setArcDirection:(int)direction;	// 0x34af444d
- (int)setBkColour:(id)colour;	// 0x34953e0d
- (int)setBkMode:(int)mode;	// 0x34952ec5
- (int)setBrushOrg:(double)org :(double)arg2;	// 0x34989305
- (void)setColorMap:(id)map fillMap:(id)map2;	// 0x348ca67d
- (int)setMapMode:(int)mode;	// 0x348cbc7d
- (int)setMetaRgn;	// 0x349891c1
- (int)setMiterLimit:(double)limit;	// 0x349893ad
- (int)setPaletteEntries:(unsigned)entries :(id)arg2 :(unsigned)arg3;	// 0x34af45fd
- (int)setPolyFillMode:(int)mode;	// 0x34951fb1
- (int)setRop2:(int)a2;	// 0x34951f75
- (int)setStretchBltMode:(int)mode;	// 0x34954785
- (int)setTextAlign:(bool)align :(int)arg2 :(int)arg3 :(int)arg4;	// 0x34953c51
- (int)setTextCharExtra:(int)extra;	// 0x349c0b2d
- (int)setTextColour:(id)colour;	// 0x34953d69
- (int)setTextJustification:(int)justification :(int)arg2;	// 0x34953d01
- (int)setViewBox:(double)box :(double)arg2 :(double)arg3 :(double)arg4;	// 0x348cb8e1
- (int)setViewportExt:(int)ext :(int)arg2;	// 0x348cbdf5
- (int)setViewportOrg:(int)org :(int)arg2;	// 0x34951111
- (int)setWindowExt:(int)ext :(int)arg2;	// 0x348cc07d
- (int)setWindowOrg:(int)org :(int)arg2;	// 0x348cc189
- (int)setWorldTransform:(const CGAffineTransform *)transform;	// 0x34989489
- (int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned long)arg10 :(CGAffineTransform *)arg11 :(unsigned long)arg12;	// 0x34954151
- (int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned long)arg10 :(CGAffineTransform *)arg11 :(unsigned long)arg12 usePaletteForBilevel:(BOOL)bilevel;	// 0x348ccb49
- (int)strokeAndFillPath:(bool)path :(bool)arg2;	// 0x349a5b05
- (int)textOut:(int)anOut :(int)arg2 :(id)arg3;	// 0x349b9189
- (int)textOutEncoded:(int)encoded :(int)arg2 :(id)arg3;	// 0x349b90f9
- (int)widenPath;	// 0x34af47d9
@end

