/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SettingsPINEntryViewDelegate.h"
#import "BRViewController.h"

@class NSMutableSet, NSArray, NSMutableArray, BRMediaMenuView, BluetoothDevice, SettingsPINEntryView, NSTimer;

__attribute__((visibility("hidden")))
@interface SettingsBluetoothController : BRViewController <SettingsPINEntryViewDelegate> {
	BRMediaMenuView *_mediaMenuView;	// 104 = 0x68
	NSMutableArray *_availableDevices;	// 108 = 0x6c
	NSTimer *_scanForDevicesTimer;	// 112 = 0x70
	BluetoothDevice *_deviceWithPINChallengeActive;	// 116 = 0x74
	BRViewController *_pairingController;	// 120 = 0x78
	NSArray *_devicesInDisplayOrder;	// 124 = 0x7c
	int _previousPlaybackState;	// 128 = 0x80
	BOOL _pairingRequested;	// 132 = 0x84
	SettingsPINEntryView *_pinView;	// 136 = 0x88
	BOOL _isSSP;	// 140 = 0x8c
	NSMutableSet *_pairingRequestedByDeviceSet;	// 144 = 0x90
}
@property(retain, nonatomic) NSMutableArray *_availableDevices;	// G=0xbfe6d; S=0xbfe7d; @synthesize
@property(retain, nonatomic) BluetoothDevice *_deviceWithPINChallengeActive;	// G=0xbfed9; S=0xbfee9; @synthesize
@property(readonly, assign, nonatomic) NSArray *_devicesInDisplayOrder;	// G=0xbfad1; @synthesize
@property(assign, nonatomic) BOOL _isSSP;	// G=0xbffc1; S=0xbffd1; @synthesize
@property(retain, nonatomic) BRMediaMenuView *_mediaMenuView;	// G=0xbfe35; S=0xbfe45; @synthesize
@property(retain, nonatomic) BRViewController *_pairingController;	// G=0xbff11; S=0xbff21; @synthesize
@property(assign, nonatomic) BOOL _pairingRequested;	// G=0xbff69; S=0xbff79; @synthesize
@property(retain, nonatomic) NSMutableSet *_pairingRequestedByDeviceSet;	// G=0xbffe1; S=0xbfff1; @synthesize
@property(retain, nonatomic) SettingsPINEntryView *_pinView;	// G=0xbff89; S=0xbff99; @synthesize
@property(assign, nonatomic) int _previousPlaybackState;	// G=0xbff49; S=0xbff59; @synthesize
@property(assign, nonatomic) __weak NSTimer *_scanForDevicesTimer;	// G=0xbfea5; S=0xbfec5; @synthesize
- (id)init;	// 0xbe7a1
- (void).cxx_destruct;	// 0xc0019
- (void)_addToAvailableDevicesIfNecessary:(id)availableDevicesIfNecessary forceReload:(BOOL)reload;	// 0xc0405
// declared property getter: - (id)_availableDevices;	// 0xbfe6d
- (void)_bluetoothAvailabilityChanged:(id)changed;	// 0xc05ad
- (void)_bluetoothConnectionFailed:(id)failed;	// 0xc0a9d
- (void)_bluetoothConnectionStatusChanged:(id)changed;	// 0xc0c01
- (void)_bluetoothConnectionSuccess:(id)success;	// 0xc0a89
- (void)_bluetoothDeviceChanged:(id)changed;	// 0xc0a29
- (void)_bluetoothDeviceDiscovered:(id)discovered;	// 0xc0909
- (void)_bluetoothDeviceRemoved:(id)removed;	// 0xc0989
- (void)_bluetoothDeviceUpdated:(id)updated;	// 0xc0949
- (void)_bluetoothDisconnectFailed:(id)failed;	// 0xc0c19
- (void)_bluetoothDisconnectSuccess:(id)success;	// 0xc0c05
- (void)_bluetoothDiscoveryStateChanged:(id)changed;	// 0xc0a69
- (void)_bluetoothDiscoveryStopped:(id)stopped;	// 0xc0a79
- (void)_bluetoothIsAvailable:(BOOL)available;	// 0xc0659
- (void)_bluetoothPairingPINRequest:(id)request;	// 0xc0c1d
- (void)_bluetoothPairingPINResultFailed:(id)failed;	// 0xc1021
- (void)_bluetoothPairingPINResultSuccess:(id)success;	// 0xc0f69
- (void)_bluetoothPairingUserNumericComparisonRequest:(id)request;	// 0xc124d
- (void)_bluetoothPowerStateChanged:(id)changed;	// 0xc15ed
- (void)_bluetoothdeviceUnpaired:(id)unpaired;	// 0xc15b1
- (id)_devicePairingAction:(id)action;	// 0xc034d
- (id)_deviceProductName:(id)name isForTitle:(BOOL)title;	// 0xc0299
// declared property getter: - (id)_deviceWithPINChallengeActive;	// 0xbfed9
// declared property getter: - (id)_devicesInDisplayOrder;	// 0xbfad1
- (void)_generatedPinPairWithDevice:(id)device;	// 0xc0cad
// declared property getter: - (BOOL)_isSSP;	// 0xbffc1
// declared property getter: - (id)_mediaMenuView;	// 0xbfe35
// declared property getter: - (id)_pairingController;	// 0xbff11
- (void)_pairingFailedOptionSelected:(id)selected;	// 0xc0b51
// declared property getter: - (BOOL)_pairingRequested;	// 0xbff69
// declared property getter: - (id)_pairingRequestedByDeviceSet;	// 0xbffe1
- (void)_pauseAudioIfNeeded;	// 0xc00c1
// declared property getter: - (id)_pinView;	// 0xbff89
// declared property getter: - (int)_previousPlaybackState;	// 0xbff49
- (void)_reloadListIfAppropriate;	// 0xc01e1
- (void)_removeDeviceOptionSelected:(id)selected;	// 0xc04a9
// declared property getter: - (id)_scanForDevicesTimer;	// 0xbfea5
- (void)_scanForDevicesTimerFired:(id)devicesTimerFired;	// 0xc0399
- (void)dealloc;	// 0xbed95
- (void)list:(id)list didSelectItemAtIndexPath:(id)indexPath;	// 0xbf5a5
- (float)list:(id)list heightForItemAtIndexPath:(id)indexPath;	// 0xbf56d
- (float)list:(id)list heightForSectionHeader:(long)sectionHeader;	// 0xbf51d
- (id)list:(id)list menuItemForRowAtIndexPath:(id)indexPath;	// 0xbf1cd
- (long)list:(id)list numberOfRowsInSection:(long)section;	// 0xbf0d5
- (id)list:(id)list sectionHeaderForSection:(long)section;	// 0xbf11d
- (long)numberOfSectionsInList:(id)list;	// 0xbf0d1
- (void)pinEntryComplete:(id)complete;	// 0xbf01d
- (void)pinEntryVerifiedByUser:(BOOL)user;	// 0xbf021
- (void)resetPairingStateIfNecessary:(id)necessary;	// 0xbf099
// declared property setter: - (void)set_availableDevices:(id)devices;	// 0xbfe7d
// declared property setter: - (void)set_deviceWithPINChallengeActive:(id)pinchallengeActive;	// 0xbfee9
// declared property setter: - (void)set_isSSP:(BOOL)ssp;	// 0xbffd1
// declared property setter: - (void)set_mediaMenuView:(id)view;	// 0xbfe45
// declared property setter: - (void)set_pairingController:(id)controller;	// 0xbff21
// declared property setter: - (void)set_pairingRequested:(BOOL)requested;	// 0xbff79
// declared property setter: - (void)set_pairingRequestedByDeviceSet:(id)set;	// 0xbfff1
// declared property setter: - (void)set_pinView:(id)view;	// 0xbff99
// declared property setter: - (void)set_previousPlaybackState:(int)state;	// 0xbff59
// declared property setter: - (void)set_scanForDevicesTimer:(id)devicesTimer;	// 0xbfec5
- (void)wasExhumed;	// 0xbef65
- (void)wasPopped;	// 0xbee79
@end

