/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class ATVDataClient, NSArray, NSString;

__attribute__((visibility("hidden")))
@interface LTAVPlaylist : XXUnknownSuperclass {
	NSArray *_mediaList;	// 4 = 0x4
	int _sequentialIndex;	// 8 = 0x8
	unsigned _queueLength;	// 12 = 0xc
	BOOL _shuffleEnabled;	// 16 = 0x10
	BOOL _skipExplicit;	// 17 = 0x11
	BOOL _isPlaylistDynamic;	// 18 = 0x12
	int _repeatMode;	// 20 = 0x14
	ATVDataClient *_dataClient;	// 24 = 0x18
	NSString *_playlistName;	// 28 = 0x1c
	NSArray *_sourceTracks;	// 32 = 0x20
}
@property(assign) BOOL isPlaylistDynamic;	// G=0x411a5; S=0x41195; converted property
@property(readonly, retain) NSArray *mediaList;	// G=0x40b05; converted property
@property(assign) unsigned queueLength;	// G=0x403c8d; S=0x403c79; converted property
@property(assign) int repeatMode;	// G=0x41165; S=0x41155; converted property
@property(assign) BOOL shuffleEnabled;	// G=0x41145; S=0x40de9; converted property
@property(assign) BOOL skipExplicit;	// G=0x41185; S=0x41175; converted property
- (id)initWithIndex:(long)index inMediaList:(id)mediaList;	// 0x40971
- (id)initWithIndex:(long)index inMediaList:(id)mediaList playlistName:(id)name;	// 0x40901
- (void).cxx_destruct;	// 0x418c5
- (id)_mediaForSequentialIndex:(long)sequentialIndex;	// 0x41725
- (long)_nextSequentialIndexInDirection:(int)direction;	// 0x4177d
- (long)_sequentialIndex;	// 0x41715
- (void)appendMediaList:(id)list;	// 0x40be1
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x40b19
- (id)changeMedia:(int)media;	// 0x412f9
- (void)clearBackToItems;	// 0x403661
- (void)clearHistory;	// 0x40388d
- (long)count;	// 0x411c5
- (id)currentMedia;	// 0x411e5
- (void)demoteAssetAtIndex:(unsigned)index;	// 0x4040e5
- (void)enqueueItems:(id)items action:(int)action;	// 0x403ca1
- (void)insertMedia:(id)media atIndex:(long)index;	// 0x40cb5
- (BOOL)isEqual:(id)equal;	// 0x41419
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x411a5
- (BOOL)isQueueEnabled;	// 0x4031f9
- (BOOL)isQueueEstablishedForDataClient:(id)dataClient;	// 0x416b1
- (BOOL)isValidForDataClient:(id)dataClient;	// 0x4031dd
- (long)mediaIndex;	// 0x411b5
// converted property getter: - (id)mediaList;	// 0x40b05
- (BOOL)moreItemsAvailable:(int)available;	// 0x41281
- (void)moveObjectAtIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x4044a5
- (id)name;	// 0x41131
- (id)nextMedia;	// 0x4124d
- (void)playExistingAssetAtIndex:(unsigned)index;	// 0x4049a1
- (id)previouslyPlayedItems;	// 0x403339
- (void)promoteAssetAtIndex:(unsigned)index;	// 0x403fa1
- (void)pruneHistory;	// 0x404aed
- (void)purge;	// 0x403445
- (void)purgeTrackList;	// 0x40d4d
- (id)queueAssetAtIndex:(int)index;	// 0x403b65
// converted property getter: - (unsigned)queueLength;	// 0x403c8d
- (id)queuedItems;	// 0x403231
- (void)removeAssetAtIndex:(unsigned)index;	// 0x40473d
- (void)removeAssetAtIndex:(unsigned)index suppressNotification:(BOOL)notification;	// 0x404751
// converted property getter: - (int)repeatMode;	// 0x41165
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x41195
// converted property setter: - (void)setQueueLength:(unsigned)length;	// 0x403c79
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x41155
// converted property setter: - (void)setShuffleEnabled:(BOOL)enabled;	// 0x40de9
- (void)setShuffleEnabled:(BOOL)enabled preservingNowPlaying:(BOOL)playing;	// 0x40dfd
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x41175
// converted property getter: - (BOOL)shuffleEnabled;	// 0x41145
// converted property getter: - (BOOL)skipExplicit;	// 0x41185
- (BOOL)supportsShufflePlayback;	// 0x41119
- (void)swapObjectAtIndex:(unsigned)index withObjectAtIndex:(unsigned)index2;	// 0x404261
- (id)upNext:(unsigned *)next;	// 0x403a05
@end

