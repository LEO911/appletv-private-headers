/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "BRControl.h"
#import "BRTabControlDelegate.h"
#import "AppleTV-Structs.h"
#import "BRTextFieldCharacterInputDelegate.h"

@class BRTextEntryPlayPauseMessage, BRScrollControl, BRTabControl, BRKeyboardControl, BRTextFieldControl, NSMutableSet, NSString, BRCursorControl, BRTextControl, BRDeviceKeyboardMessage, NSAttributedString, BRInputMethod, BRKeyboard, NSArray, BRDropShadowControl, BRTextFieldBackgroundLayer;

__attribute__((visibility("hidden")))
@interface BRTextEntryControl : BRControl <BRTabControlDelegate, BRTextFieldCharacterInputDelegate> {
	int _textEntryStyle;	// 84 = 0x54
	BRInputMethod *_inputMethod;	// 88 = 0x58
	BRKeyboard *_activeKeyboard;	// 92 = 0x5c
	NSMutableSet *_validInputCharacterSet;	// 96 = 0x60
	BOOL _displayTextEntryHistory;	// 100 = 0x64
	NSString *_textEntryHistoryClient;	// 104 = 0x68
	NSString *_textEntryHistoryBehavior;	// 108 = 0x6c
	BRTextEntryPlayPauseMessage *_playPauseMessage;	// 112 = 0x70
	BRControl *_candidatesBackground;	// 116 = 0x74
	BRScrollControl *_candidatesKeysContainer;	// 120 = 0x78
	BRKeyboardControl *_keyboardControl;	// 124 = 0x7c
	BRScrollControl *_keyboardContainer;	// 128 = 0x80
	BRControl *_actionKeysContainer;	// 132 = 0x84
	BRTextFieldBackgroundLayer *_textFieldBackground;	// 136 = 0x88
	BRTextControl *_textFieldLabel;	// 140 = 0x8c
	NSAttributedString *_textFieldLabelString;	// 144 = 0x90
	BRTextFieldControl *_textField;	// 148 = 0x94
	BRTabControl *_tabControl;	// 152 = 0x98
	BRCursorControl *_cursor;	// 156 = 0x9c
	BOOL _providesOwnCursor;	// 160 = 0xa0
	NSArray *_customizedTextFieldControls;	// 164 = 0xa4
	BRDeviceKeyboardMessage *_deviceKeyboardMessage;	// 168 = 0xa8
	BRKeyboard *_popupKeyboard;	// 172 = 0xac
	CGPoint _focusedMainKeyRemembery;	// 176 = 0xb0
	BOOL _displayPopupKeyboardAfterKeyboardSwitch;	// 184 = 0xb8
	CGColorRef _popupBackgroundColor;	// 188 = 0xbc
	CGColorRef _popupBorderColor;	// 192 = 0xc0
	int _popupShadowStyle;	// 196 = 0xc4
	BOOL _constrainCursorToPopupKeyboard;	// 200 = 0xc8
	BRKeyboardControl *_popupKeyboardControl;	// 204 = 0xcc
	CGPoint _previousKeyboardFocus;	// 208 = 0xd0
	int _textLengthLimit;	// 216 = 0xd8
	BOOL _showUserEnteredText;	// 220 = 0xdc
	BOOL _textFieldIsInternal;	// 221 = 0xdd
	BOOL _shouldWrapHorizontally;	// 222 = 0xde
	BOOL _shouldWrapVertically;	// 223 = 0xdf
	BOOL _clientHasSpecifiedHorizontalWrapping;	// 224 = 0xe0
	BOOL _clientHasSpecifiedVerticalWrapping;	// 225 = 0xe1
	BOOL _displayPlayPauseMessage;	// 226 = 0xe2
	NSString *_uniqueIDForPlayPauseRegistration;	// 228 = 0xe4
	NSString *_lastStringSetIntoTextField;	// 232 = 0xe8
	BRDropShadowControl *_popupKeyboardContainerControl;	// 236 = 0xec
	BOOL _isFromBTTriggeredPopUp;	// 240 = 0xf0
	BOOL _squelchDeleteCharacterFromBTAppend;	// 241 = 0xf1
}
@property(assign) BOOL canWrapHorizontally;	// G=0x316a21; S=0x316a45; converted property
@property(assign) BOOL canWrapVertically;	// G=0x316a8d; S=0x316ab1; converted property
@property(assign) CGPoint keyboardFocus;	// G=0x316f79; S=0x316fa9; converted property
@property(assign) BOOL providesOwnFocusCursor;	// G=0x316dd5; S=0x316de5; converted property
@property(retain) BRTabControl *tabControl;	// G=0x317155; S=0x317165; converted property
@property(assign) int textEntryStyle;	// G=0x316491; S=0x31605d; converted property
@property(retain) BRTextFieldControl *textField;	// G=0x316829; S=0x316839; converted property
@property(assign) id textFieldDelegate;	// G=0x316b75; S=0x316b55; converted property
@property(assign) int textLengthLimit;	// G=0x3167e5; S=0x3167f5; converted property
- (id)init;	// 0x314ced
- (id)initWithTextEntryStyle:(int)textEntryStyle;	// 0x315045
- (void)_addCursor;	// 0x317701
- (void)_addCustomizedTextFieldControls;	// 0x317fdd
- (void)_addMainKeyboardContainerForKeyboard:(id)keyboard;	// 0x317c3d
- (void)_addOrRemoveCandidatesContainer:(id)container;	// 0x317d41
- (void)_addOrRemoveTabControl;	// 0x3177d1
- (id)_bestKeyboardLanguage:(int)language;	// 0x3180fd
- (void)_customizeTextEntryControls;	// 0x317d45
- (void)_finalizeControlWasFocused;	// 0x318291
- (void)_generateKeyEventWithCharacters:(id)characters immediatelyObscureCharacters:(BOOL)characters2;	// 0x3192b9
- (void)_handleDisplayPopupKeyboardEvent:(id)event withAudioFeedback:(BOOL)audioFeedback;	// 0x319405
- (void)_inputActionAppendCandidate:(id)candidate;	// 0x3186d9
- (void)_inputActionAppendText:(id)text;	// 0x318409
- (void)_inputActionClearText:(id)text;	// 0x318745
- (void)_inputActionDeleteText:(id)text;	// 0x3187cd
- (void)_inputActionEscape:(id)escape;	// 0x319221
- (void)_inputActionSwitchInputMethod:(id)method;	// 0x319011
- (void)_inputActionSwitchKeyboard:(id)keyboard;	// 0x3188d5
- (void)_invokeInputActionWithDictionary:(id)dictionary;	// 0x3182f1
- (id)_keyboardMappingData;	// 0x31758d
- (void)_registerAsTextFieldCharacterInputDelegate;	// 0x319cdd
- (void)_removeActionKeysRow;	// 0x317d05
- (void)_removeCursor;	// 0x317795
- (void)_removeCustomizedTextFieldControls;	// 0x318091
- (void)_removePopupKeyboard;	// 0x319add
- (void)_saveTextEntryHistory;	// 0x319be1
- (void)_setActiveKeyboard:(id)keyboard;	// 0x317bdd
- (BOOL)_shouldIgnoreKey:(id)key forTextField:(id)textField;	// 0x3174f5
- (id)_stringFromRect:(CGRect)rect;	// 0x319ec5
- (void)_stripTrailingDotIfNecessary:(id)necessary;	// 0x31858d
- (void)_swapPopupkeyboard;	// 0x3193c1
- (void)_textDidChangeNotification:(id)_text;	// 0x319f2d
- (void)_textDidEndEditingNotification:(id)_text;	// 0x319fb9
- (void)_unregisterAsTextFieldCharacterInputDelegate;	// 0x319e79
- (void)_wrapAroundEdge:(int)edge;	// 0x3180f9
- (id)accessibilityLabel;	// 0x3152f1
- (id)accessibilityScreenContent;	// 0x315331
- (id)accessibilityValue;	// 0x315311
- (BOOL)brEventAction:(id)action;	// 0x315a51
// converted property getter: - (BOOL)canWrapHorizontally;	// 0x316a21
// converted property getter: - (BOOL)canWrapVertically;	// 0x316a8d
- (void)completeTextEntry;	// 0x3169cd
- (void)controlWasActivated;	// 0x315591
- (void)controlWasDeactivated;	// 0x31561d
- (void)controlWasFocused;	// 0x315911
- (void)controlWasUnfocused;	// 0x3159c1
- (void)dealloc;	// 0x31507d
- (void)deleteAllHistoryItemsForClients:(id)clients;	// 0x316775
- (void)deleteTextEntryHistoryItem:(id)item forTextEntryHistoryClients:(id)textEntryHistoryClients textEntryBehaviors:(id)behaviors;	// 0x3166c1
- (void)deviceKeyboardClose;	// 0x319fc9
- (void)deviceKeyboardMessageHandler:(id)handler;	// 0x31a1dd
- (void)deviceKeyboardUpdate:(BOOL)update;	// 0x31a051
- (void)dismissPopupKeyboard;	// 0x317291
- (void)displayTextEntryHistoryForClients:(id)clients textEntryBehaviors:(id)behaviors;	// 0x3164f5
- (BOOL)focusIsAtRightEdge;	// 0x316ecd
- (void)invokeInputActionWithDictionary:(id)dictionary;	// 0x3174e5
- (BOOL)isPopupKeyboardActive;	// 0x3172b1
- (BOOL)isPopupKeyboardAtRightmostControl;	// 0x3172c9
- (BOOL)isRecentsActive;	// 0x316d9d
// converted property getter: - (CGPoint)keyboardFocus;	// 0x316f79
- (void)layoutSubcontrols;	// 0x315695
// converted property getter: - (BOOL)providesOwnFocusCursor;	// 0x316dd5
- (void)reset;	// 0x316c71
- (void)saveTextEntryHistory;	// 0x31669d
- (void)saveTextEntryHistoryUsingClient:(id)client textEntryBehavior:(id)behavior;	// 0x316659
// converted property setter: - (void)setCanWrapHorizontally:(BOOL)horizontally;	// 0x316a45
// converted property setter: - (void)setCanWrapVertically:(BOOL)vertically;	// 0x316ab1
- (void)setConstrainCursorToPopupKeyboard:(BOOL)popupKeyboard;	// 0x317281
- (void)setDeviceKeyboardTitle:(id)title subText:(id)text;	// 0x317101
- (void)setDisplayPlayPauseMessage:(BOOL)message;	// 0x31730d
- (void)setDisplayTextEntryHistory:(BOOL)history;	// 0x3164a1
- (void)setFocusToGlyphNamed:(id)glyphNamed;	// 0x316e25
- (void)setInitialText:(id)text;	// 0x316b95
// converted property setter: - (void)setKeyboardFocus:(CGPoint)focus;	// 0x316fa9
- (void)setPopupBackgroundColor:(CGColorRef)color;	// 0x317221
- (void)setPopupOutlineColor:(CGColorRef)color;	// 0x317259
- (void)setPopupShadowStyle:(int)style;	// 0x317249
// converted property setter: - (void)setProvidesOwnFocusCursor:(BOOL)cursor;	// 0x316de5
- (void)setShowUserEnteredText:(BOOL)text;	// 0x316af9
// converted property setter: - (void)setTabControl:(id)control;	// 0x317165
- (void)setTextEntryHistoryClient:(id)client textEntryBehavior:(id)behavior;	// 0x3165e9
// converted property setter: - (void)setTextEntryStyle:(int)style;	// 0x31605d
// converted property setter: - (void)setTextField:(id)field;	// 0x316839
// converted property setter: - (void)setTextFieldDelegate:(id)delegate;	// 0x316b55
- (void)setTextFieldLabel:(id)label;	// 0x316cd9
// converted property setter: - (void)setTextLengthLimit:(int)limit;	// 0x3167f5
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x315351
- (void)startSpinning;	// 0x3169e1
- (void)stopSpinning;	// 0x316a01
- (void)switchToKeyboardNamed:(id)keyboardNamed focusOnKeyboardAfterSwitch:(BOOL)aSwitch;	// 0x317031
// converted property getter: - (id)tabControl;	// 0x317155
- (void)tabControl:(id)control didSelectTabItem:(id)item;	// 0x317525
- (void)tabControl:(id)control willSelectTabItem:(id)item;	// 0x317585
- (void)tabControlDidChangeNumberOfTabItems:(id)tabControl;	// 0x317589
// converted property getter: - (int)textEntryStyle;	// 0x316491
// converted property getter: - (id)textField;	// 0x316829
// converted property getter: - (id)textFieldDelegate;	// 0x316b75
// converted property getter: - (int)textLengthLimit;	// 0x3167e5
@end

