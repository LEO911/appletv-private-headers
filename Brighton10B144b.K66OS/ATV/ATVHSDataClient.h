/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import "ATVDataClient.h"

@class NSURL, NSString, ATVHSConnectionStream, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface ATVHSDataClient : ATVDataClient {
	FPSAPContextOpaque_Ref _fpsapContext;	// 4 = 0x4
	ATVHSConnectionStream *_connectionStream;	// 8 = 0x8
	unsigned long long _pairingID;	// 12 = 0xc
	unsigned long long _machineID;	// 20 = 0x14
	unsigned long _sessionID;	// 28 = 0x1c
	NSString *_homeShareGroupID;	// 32 = 0x20
	NSURL *_serverURL;	// 36 = 0x24
	NSURL *_serverIPURL;	// 40 = 0x28
	int _serverPort;	// 44 = 0x2c
	NSString *_databaseName;	// 48 = 0x30
	unsigned long _databaseID;	// 52 = 0x34
	unsigned long long _databasePersistentID;	// 56 = 0x38
	unsigned long _dpapDatabaseID;	// 64 = 0x40
	unsigned long long _dpapDatabasePersistentID;	// 68 = 0x44
	unsigned long _basePlaylistID;	// 76 = 0x4c
	unsigned long long _basePlaylistPersistentID;	// 80 = 0x50
	unsigned short _daapProtocolMajorVersion;	// 88 = 0x58
	unsigned short _daapProtocolMinorVersion;	// 90 = 0x5a
	unsigned short _dpapProtocolMajorVersion;	// 92 = 0x5c
	unsigned short _dpapProtocolMinorVersion;	// 94 = 0x5e
	BOOL _enhancedClient;	// 96 = 0x60
	BOOL _supportsDRMTokenEncryption;	// 97 = 0x61
	unsigned long _databaseRevision;	// 100 = 0x64
	unsigned long _drmRevision;	// 104 = 0x68
	unsigned long _photoDBRevision;	// 108 = 0x6c
	BOOL _dpapImportInProgress;	// 112 = 0x70
	NSMutableDictionary *_artworkRequestMap;	// 116 = 0x74
}
@property(retain, nonatomic) NSMutableDictionary *artworkRequestMap;	// G=0xea99d; S=0xea9ad; @synthesize=_artworkRequestMap
@property(assign, nonatomic) unsigned long basePlaylistID;	// G=0xea811; S=0xea821; @synthesize=_basePlaylistID
@property(assign, nonatomic) unsigned long long basePlaylistPersistentID;	// G=0xea831; S=0xea849; @synthesize=_basePlaylistPersistentID
@property(assign, nonatomic) unsigned short daapProtocolMajorVersion;	// G=0xea85d; S=0xea86d; @synthesize=_daapProtocolMajorVersion
@property(assign, nonatomic) unsigned short daapProtocolMinorVersion;	// G=0xea87d; S=0xea88d; @synthesize=_daapProtocolMinorVersion
@property(assign, nonatomic) unsigned long databaseID;	// G=0xea779; S=0xea789; @synthesize=_databaseID
@property(retain, nonatomic) NSString *databaseName;	// G=0xea759; S=0xea769; @synthesize=_databaseName
@property(assign, nonatomic) unsigned long long databasePersistentID;	// G=0xea799; S=0xea7b1; @synthesize=_databasePersistentID
@property(assign, nonatomic) unsigned long databaseRevision;	// G=0xea91d; S=0xea92d; @synthesize=_databaseRevision
@property(assign, nonatomic) unsigned long dpapDatabaseID;	// G=0xea7c5; S=0xea7d5; @synthesize=_dpapDatabaseID
@property(assign, nonatomic) unsigned long long dpapDatabasePersistentID;	// G=0xea7e5; S=0xea7fd; @synthesize=_dpapDatabasePersistentID
@property(assign, nonatomic) BOOL dpapImportInProgress;	// G=0xea97d; S=0xea98d; @synthesize=_dpapImportInProgress
@property(assign, nonatomic) unsigned short dpapProtocolMajorVersion;	// G=0xea89d; S=0xea8ad; @synthesize=_dpapProtocolMajorVersion
@property(assign, nonatomic) unsigned short dpapProtocolMinorVersion;	// G=0xea8bd; S=0xea8cd; @synthesize=_dpapProtocolMinorVersion
@property(assign, nonatomic) unsigned long drmRevision;	// G=0xea93d; S=0xea94d; @synthesize=_drmRevision
@property(assign, nonatomic) BOOL enhancedClient;	// G=0xea8dd; S=0xea8ed; @synthesize=_enhancedClient
@property(retain, nonatomic) NSString *homeShareGroupID;	// G=0xea6e1; S=0xea6f1; @synthesize=_homeShareGroupID
@property(assign, nonatomic) unsigned long long machineID;	// G=0xea695; S=0xea6ad; @synthesize=_machineID
@property(assign, nonatomic) unsigned long long pairingID;	// G=0xea669; S=0xea681; @synthesize=_pairingID
@property(assign, nonatomic) unsigned long photoDBRevision;	// G=0xea95d; S=0xea96d; @synthesize=_photoDBRevision
@property(copy) NSURL *serverIPURL;	// G=0xea715; S=0xea729; @synthesize=_serverIPURL
@property(assign, nonatomic) int serverPort;	// G=0xea739; S=0xea749; @synthesize=_serverPort
@property(copy, nonatomic) NSURL *serverURL;	// G=0xea701; S=0xe9ba9; @synthesize=_serverURL
@property(assign, nonatomic) unsigned long sessionID;	// G=0xea6c1; S=0xea6d1; @synthesize=_sessionID
@property(assign, nonatomic) BOOL supportsDRMTokenEncryption;	// G=0xea8fd; S=0xea90d; @synthesize=_supportsDRMTokenEncryption
+ (id)hsDataClientWithServerURL:(id)serverURL serverName:(id)name hsGroupID:(id)anId machineID:(unsigned long long)anId4 pairingID:(unsigned long long)anId5 clientType:(unsigned long)type;	// 0xe9859
- (id)initWithServerURL:(id)serverURL hsGroupID:(id)anId machineID:(unsigned long long)anId3 pairingID:(unsigned long long)anId4 clientName:(id)name clientType:(unsigned long)type;	// 0xe98c5
- (void)_dataClientConnectionHandler:(id)handler;	// 0xea5a1
- (void)artworkRequestCompletedForIdentifier:(id)identifier;	// 0xf9d25
// declared property getter: - (id)artworkRequestMap;	// 0xea99d
// declared property getter: - (unsigned long)basePlaylistID;	// 0xea811
// declared property getter: - (unsigned long long)basePlaylistPersistentID;	// 0xea831
- (id)baseURL;	// 0xe9d65
- (id)browseRequestWithQuery:(id)query;	// 0xf7675
- (void)cancelArtworkRequestForIdentifier:(id)identifier;	// 0xf9c11
- (void)cancelImageRequest:(id)request;	// 0xea371
- (void)concreteDataClientConnect;	// 0xe9d99
- (void)concreteDataClientDisconnect;	// 0xe9f41
// declared property getter: - (unsigned short)daapProtocolMajorVersion;	// 0xea85d
// declared property getter: - (unsigned short)daapProtocolMinorVersion;	// 0xea87d
// declared property getter: - (unsigned long)databaseID;	// 0xea779
// declared property getter: - (id)databaseName;	// 0xea759
// declared property getter: - (unsigned long long)databasePersistentID;	// 0xea799
// declared property getter: - (unsigned long)databaseRevision;	// 0xea91d
- (void)dealloc;	// 0xe9a19
- (id)description;	// 0xe9aad
- (void)determineBasePlaylist;	// 0xf2089
- (void)determineDAAPDatabase;	// 0xf1c81
- (void)determineDPAPDatabase;	// 0xf1eb9
- (void)determineDPAPDatabaseOnUpdate;	// 0xf3b51
- (void)determinePhotoDatabase;	// 0xf4165
- (void)disconnectClient;	// 0xf30d5
// declared property getter: - (unsigned long)dpapDatabaseID;	// 0xea7c5
// declared property getter: - (unsigned long long)dpapDatabasePersistentID;	// 0xea7e5
// declared property getter: - (BOOL)dpapImportInProgress;	// 0xea97d
// declared property getter: - (unsigned short)dpapProtocolMajorVersion;	// 0xea89d
// declared property getter: - (unsigned short)dpapProtocolMinorVersion;	// 0xea8bd
// declared property getter: - (unsigned long)drmRevision;	// 0xea93d
- (id)drmTokenRequestWithQuery:(id)query;	// 0xf7145
- (void)drmUpdate;	// 0xf3179
// declared property getter: - (BOOL)enhancedClient;	// 0xea8dd
- (void)establishFairPlayContextWithServerFPVer:(unsigned long)serverFPVer withSelector:(SEL)selector;	// 0xf16f5
- (void)executeQuery:(id)query withCompletionQueue:(id)completionQueue completionHandler:(id)handler;	// 0xea269
- (FPSAPContextOpaque_Ref)fairPlayContext;	// 0xe9d55
- (BOOL)groupingSupportsProperty:(id)property;	// 0xea1e9
- (id)groupsRequestWithQuery:(id)query;	// 0xf77cd
- (void)handleDAAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xf7d2d
- (void)handleDPAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xf87f1
- (unsigned)hash;	// 0xe9b31
// declared property getter: - (id)homeShareGroupID;	// 0xea6e1
- (void)homeShareVerify;	// 0xf17d9
- (void)iTunesDPAPDatabaseUpdate;	// 0xf3831
- (void)iTunesDatabaseUpdate;	// 0xf2cf1
- (void)iTunesPhotoDatabaseUpdate;	// 0xf3499
- (id)imageRequestWithAsset:(id)asset artworkIdentifier:(id)identifier requestedSize:(CGSize)size crop:(BOOL)crop withContext:(void *)context;	// 0xf9309
- (id)imageRequestWithAsset:(id)asset imageID:(id)anId size:(CGSize)size crop:(BOOL)crop context:(id)context;	// 0xea33d
- (BOOL)isEqual:(id)equal;	// 0xe9b01
- (id)itemsRequestWithQuery:(id)query;	// 0xf666d
- (void)logErrorWithRequest:(id)request httpStatus:(long)status;	// 0xf2c99
- (void)loginToITunes;	// 0xf0fe9
- (void)loginToPhotoApp;	// 0xf3e69
// declared property getter: - (unsigned long long)machineID;	// 0xea695
- (void)machineVerify;	// 0xf1a3d
- (void)mediaItemPropertyUpdateHandler:(id)handler;	// 0xf835d
- (id)networkTestURLWithOptions:(id)options headers:(id *)headers;	// 0xea389
// declared property getter: - (unsigned long long)pairingID;	// 0xea669
- (void)photoAppDatabaseUpdate;	// 0xf4319
- (id)photoDBRequestWithQuery:(id)query;	// 0xf798d
// declared property getter: - (unsigned long)photoDBRevision;	// 0xea95d
- (BOOL)photosShared;	// 0xe9cf9
- (id)playbackURLWithItemID:(unsigned long)itemID;	// 0xe9c55
- (id)playlistRequestWithQuery:(id)query;	// 0xf7b9d
- (BOOL)processQueryAsync:(id)async;	// 0xea265
- (void)processSAPExchange:(unsigned long)exchange hwInfo:(FairPlayHWInfo_)info sapContext:(FPSAPContextOpaque_Ref)context sapBuffer:(char *)buffer bufferLength:(unsigned long)length withSelector:(SEL)selector;	// 0xf1349
- (BOOL)queryFilterSupportsProperty:(id)property;	// 0xea16d
- (id)rentalRequestWithQuery:(id)query;	// 0xf74d1
// declared property getter: - (id)serverIPURL;	// 0xea715
- (void)serverInfo;	// 0xf24d9
// declared property getter: - (int)serverPort;	// 0xea739
// declared property getter: - (id)serverURL;	// 0xea701
- (id)serverURLStr;	// 0xe9c2d
// declared property getter: - (unsigned long)sessionID;	// 0xea6c1
// declared property setter: - (void)setArtworkRequestMap:(id)map;	// 0xea9ad
// declared property setter: - (void)setBasePlaylistID:(unsigned long)anId;	// 0xea821
// declared property setter: - (void)setBasePlaylistPersistentID:(unsigned long long)anId;	// 0xea849
// declared property setter: - (void)setDaapProtocolMajorVersion:(unsigned short)version;	// 0xea86d
// declared property setter: - (void)setDaapProtocolMinorVersion:(unsigned short)version;	// 0xea88d
// declared property setter: - (void)setDatabaseID:(unsigned long)anId;	// 0xea789
// declared property setter: - (void)setDatabaseName:(id)name;	// 0xea769
// declared property setter: - (void)setDatabasePersistentID:(unsigned long long)anId;	// 0xea7b1
// declared property setter: - (void)setDatabaseRevision:(unsigned long)revision;	// 0xea92d
- (BOOL)setDatabaseWithResponse:(id)response daapResponse:(BOOL)response2;	// 0xf2915
// declared property setter: - (void)setDpapDatabaseID:(unsigned long)anId;	// 0xea7d5
// declared property setter: - (void)setDpapDatabasePersistentID:(unsigned long long)anId;	// 0xea7fd
// declared property setter: - (void)setDpapImportInProgress:(BOOL)progress;	// 0xea98d
// declared property setter: - (void)setDpapProtocolMajorVersion:(unsigned short)version;	// 0xea8ad
// declared property setter: - (void)setDpapProtocolMinorVersion:(unsigned short)version;	// 0xea8cd
// declared property setter: - (void)setDrmRevision:(unsigned long)revision;	// 0xea94d
// declared property setter: - (void)setEnhancedClient:(BOOL)client;	// 0xea8ed
// declared property setter: - (void)setHomeShareGroupID:(id)anId;	// 0xea6f1
// declared property setter: - (void)setMachineID:(unsigned long long)anId;	// 0xea6ad
// declared property setter: - (void)setPairingID:(unsigned long long)anId;	// 0xea681
// declared property setter: - (void)setPhotoDBRevision:(unsigned long)revision;	// 0xea96d
// declared property setter: - (void)setServerIPURL:(id)ipurl;	// 0xea729
// declared property setter: - (void)setServerPort:(int)port;	// 0xea749
// declared property setter: - (void)setServerURL:(id)url;	// 0xe9ba9
// declared property setter: - (void)setSessionID:(unsigned long)anId;	// 0xea6d1
// declared property setter: - (void)setSupportsDRMTokenEncryption:(BOOL)encryption;	// 0xea90d
- (void)submitPropertyUpdateQueryWithURLStr:(id)urlstr property:(id)property propertyValue:(unsigned long)value itemID:(id)anId;	// 0xf862d
// declared property getter: - (BOOL)supportsDRMTokenEncryption;	// 0xea8fd
- (BOOL)supportsProperty:(id)property;	// 0xea139
@end

