/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSString, NSDate, MPMediaItemArtwork, NSArray;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) BOOL _hasDownloadProgress;	// G=0x348d1de9; 
@property(readonly, assign, nonatomic) BOOL _isDownloadable;	// G=0x348d1e15; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x34869805; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x34869861; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x3486987d; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x34869899; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x348698b5; S=0x348698e9; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x34868fc5; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x3486992d; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x34869821; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x34869b29; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x34869949; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x34869f35; S=0x34869f65; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x34869a29; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x34869965; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x34869d9d; S=0x34869db9; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x34869efd; S=0x34869f19; 
@property(copy, nonatomic) NSDate *lastUsedDate;	// G=0x34869dd5; S=0x34869df1; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x34869a59; 
@property(assign, nonatomic) unsigned playCount;	// G=0x34869cad; S=0x34869ce1; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x34869d25; S=0x34869d59; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x34869a8d; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x34869b6d; 
@property(assign, nonatomic) unsigned rating;	// G=0x34869b89; S=0x34869bbd; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x34869c01; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x34869fa9; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x34869e0d; S=0x34869e41; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x34869e85; S=0x34869eb9; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x34869ac1; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x34869af5; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x34869c1d; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x34869c39; 
+ (void)_createFilterableDictionary;	// 0x34868fe1
+ (BOOL)_hasDownloadProgressForDownloadStatus:(int)downloadStatus downloadIdentifier:(id)identifier isTemporaryCloudDownload:(BOOL)download isStreamingQuality:(BOOL)quality mediaItemPersistentID:(id)anId storeItemID:(unsigned long long)anId6;	// 0x348d1a31
+ (BOOL)_isDownloadableForRedownloadParameters:(id)redownloadParameters filePath:(id)path downloadStatus:(int)status isTemporaryCloudDownload:(BOOL)download isStreamingQuality:(BOOL)quality;	// 0x348d1af9
+ (BOOL)_isValidItemProperty:(id)property;	// 0x348697c1
+ (BOOL)canFilterByProperty:(id)property;	// 0x34868735
+ (id)dynamicProperties;	// 0x34868e99
+ (id)fallbackTitlePropertyForGroupingType:(int)groupingType;	// 0x34868e7d
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x34868d8d
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x34868df9
- (id)initWithCoder:(id)coder;	// 0x34868631
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x34868525
- (id)_bestStoreURL;	// 0x34868cd5
- (id)_directStoreURL;	// 0x3486a6cd
- (void)_getIsDownloadable:(BOOL *)downloadable hasDownloadProgress:(BOOL *)progress preloadedProperties:(id)properties;	// 0x348d1b39
// declared property getter: - (BOOL)_hasDownloadProgress;	// 0x348d1de9
// declared property getter: - (BOOL)_isDownloadable;	// 0x348d1e15
- (id)_libraryLinkArtist;	// 0x3486a875
- (id)_libraryLinkKind;	// 0x3486a8e9
- (id)_libraryLinkPlaylistName;	// 0x3486a9a9
- (id)_libraryLinkURL;	// 0x3486aa3d
// declared property getter: - (id)albumArtist;	// 0x34869805
// declared property getter: - (id)albumTitle;	// 0x34869861
// declared property getter: - (id)artist;	// 0x3486987d
// declared property getter: - (id)artwork;	// 0x34869899
// declared property getter: - (double)bookmarkTime;	// 0x348698b5
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x3486a10d
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x3486a1f9
// declared property getter: - (id)chapters;	// 0x34868fc5
- (id)chaptersOfType:(int)type;	// 0x34869fd9
- (void)clearBookmarkTime;	// 0x34868c55
// declared property getter: - (id)composer;	// 0x3486992d
- (unsigned)countOfChaptersOfType:(int)type;	// 0x3486a32d
- (void)didReceiveMemoryWarning;	// 0x34868cd1
- (BOOL)didSkipWithPlayedToTime:(double)time;	// 0x348688e9
// declared property getter: - (id)effectiveAlbumArtist;	// 0x34869821
// declared property getter: - (double)effectiveStopTime;	// 0x34869b29
- (void)encodeWithCoder:(id)coder;	// 0x348686b9
- (BOOL)existsInLibrary;	// 0x34868d0d
- (void)gaplessHeuristicInfo:(unsigned *)info durationInSamples:(unsigned long long *)samples lastPacketsResync:(unsigned long long *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x3486a40d
// declared property getter: - (id)genre;	// 0x34869949
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x34869f35
- (unsigned)hash;	// 0x34868581
- (void)incrementPlayCountForPlayingToEnd;	// 0x34868add
- (BOOL)incrementPlayCountForStopTime:(double)stopTime;	// 0x34868b59
- (void)incrementSkipCount;	// 0x34868a61
- (BOOL)isDownloadable;	// 0x348d1e41
- (BOOL)isEqual:(id)equal;	// 0x34868599
// declared property getter: - (BOOL)isITunesU;	// 0x34869a29
// declared property getter: - (BOOL)isRental;	// 0x34869965
// declared property getter: - (id)lastPlayedDate;	// 0x34869d9d
// declared property getter: - (id)lastSkippedDate;	// 0x34869efd
// declared property getter: - (id)lastUsedDate;	// 0x34869dd5
- (void)markNominalAmountHasBeenPlayed;	// 0x34868969
// declared property getter: - (int)mediaType;	// 0x34869a59
- (void)noteWasPlayedToTime:(double)time skipped:(BOOL)skipped;	// 0x348689e5
// declared property getter: - (unsigned)playCount;	// 0x34869cad
// declared property getter: - (unsigned)playCountSinceSync;	// 0x34869d25
// declared property getter: - (double)playbackDuration;	// 0x34869a8d
// declared property getter: - (id)podcastTitle;	// 0x34869b6d
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x34868f91
- (id)predicateForProperty:(id)property;	// 0x34869c6d
// declared property getter: - (unsigned)rating;	// 0x34869b89
// declared property getter: - (id)releaseDate;	// 0x34869c01
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x34869fa9
- (id)representativeItem;	// 0x34868d09
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x348698e9
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x34869f65
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x34869db9
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x34869f19
// declared property setter: - (void)setLastUsedDate:(id)date;	// 0x34869df1
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x34869ce1
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x34869d59
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x34869bbd
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x34869e41
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x34869eb9
// declared property getter: - (unsigned)skipCount;	// 0x34869e0d
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x34869e85
// declared property getter: - (double)startTime;	// 0x34869ac1
// declared property getter: - (double)stopTime;	// 0x34869af5
// declared property getter: - (id)title;	// 0x34869c1d
- (void)updateLastUsedDateToCurrentDate;	// 0x34868bd9
- (id)valueForProperty:(id)property;	// 0x348687c1
- (id)valuesForProperties:(id)properties;	// 0x34868869
// declared property getter: - (unsigned)year;	// 0x34869c39
@end

