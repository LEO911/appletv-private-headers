/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library

@class MPMediaItem, NSArray, MPAVController, MPImageCache, NSData, AVPlayerItem, MPAlternateTracks, AVAsset, MPQueueFeeder, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
@private
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
@protected
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x348254a1; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x348254a9; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x348254b1; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x348254ad; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x348256a1; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x34827ac1; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x348254a5; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x348254b9; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x348254bd; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x34826a45; S=0x34827ad1; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x34824dc5; 
@property(retain, nonatomic) AVPlayerItem *avPlayerItem;	// G=0x34828629; S=0x34828639; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x34826a1d; S=0x34827ae1; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x34826b11; S=0x34826a95; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x348254c1; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x348254e5; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x34825511; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x3482569d; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x34827b11; S=0x34827b21; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x348254c9; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x348254c5; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x34825571; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x34825529; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x34826ffd; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x34827041; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x348270e1; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x34827059; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x34827af1; S=0x34827b01; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x34825799; S=0x348257dd; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x348254e1; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x34825609; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x3482560d; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x34825611; S=0x34825881; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x34825965; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x34827b31; S=0x34827b41; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x34827b51; S=0x34827b69; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x34825581; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x348256c1; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x348d3e81; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x34826ebd; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x34827221; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x34827239; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x34825229; S=0x34825241; 
@property(assign, nonatomic) MPAVController *player;	// G=0x34827b81; S=0x34827b91; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x34824fb5; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x348256c5; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x3482575d; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x34827ba1; S=0x348258b9; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x34825191; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x34825625; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x34825929; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x34827331; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x34827251; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x34826ea9; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x34826a6d; S=0x34827bb1; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x34825a75; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x34826eb9; 
@property(assign) BOOL userSkippedPlayback;	// G=0x348252cd; S=0x348252a9; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x34826fa9; S=0x34826fd1; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x34826ec9; 
+ (id)URLFromPath:(id)path;	// 0x34824745
+ (unsigned)defaultScaleMode;	// 0x34824731
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x34824735
- (id)init;	// 0x348247f5
- (id)initWithAsset:(id)asset;	// 0x34824881
- (id)initWithURL:(id)url;	// 0x34824809
- (id)initWithURL:(id)url options:(id)options;	// 0x34824845
- (void)_applicationDidBecomeActive:(id)_application;	// 0x34827699
- (void)_checkAllowsBlockingDurationCall;	// 0x34828211
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x34827679
- (double)_durationFromExternalMetadataIfAvailable;	// 0x34827081
- (double)_durationInSeconds;	// 0x348252e1
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x34826d79
- (void)_itemAttributeAvailableKey:(id)key;	// 0x34827471
- (void)_loadAssetAndPlayerItem;	// 0x34824ca9
- (void)_loadTimeMarkersAsync;	// 0x348268fd
- (void)_loadTimeMarkersBlocking;	// 0x34825a79
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x348279d1
- (void)_realoadEmbeddedTimeMarkers;	// 0x3482592d
- (void)_releaseAllTimeMarkers;	// 0x34824a61
- (id)_seekableTimeRanges;	// 0x34827911
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x34826b21
// declared property getter: - (id)album;	// 0x348254a1
// declared property getter: - (id)albumArtist;	// 0x348254a9
// declared property getter: - (unsigned)albumTrackCount;	// 0x348254b1
// declared property getter: - (unsigned)albumTrackNumber;	// 0x348254ad
// declared property getter: - (BOOL)allowsEQ;	// 0x348256a1
// declared property getter: - (id)alternateTracks;	// 0x34827ac1
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x348255e5
- (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x348254b5
// declared property getter: - (id)artist;	// 0x348254a5
// declared property getter: - (id)artworkImageData;	// 0x348254b9
// declared property getter: - (id)artworkMIMEType;	// 0x348254bd
- (id)artworkTimeMarkerForTime:(double)time;	// 0x34826cc5
// declared property getter: - (id)artworkTimeMarkers;	// 0x34826a45
// declared property getter: - (id)asset;	// 0x34824dc5
// declared property getter: - (id)avPlayerItem;	// 0x34828629
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x34827759
- (id)chapterTimeMarkerForTime:(double)time;	// 0x34826c89
// declared property getter: - (id)chapterTimeMarkers;	// 0x34826a1d
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x34826d3d
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x34826b11
// declared property getter: - (id)composer;	// 0x348254c1
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x348254e5
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x34825511
// declared property getter: - (int)customAVEQPreset;	// 0x3482569d
- (void)dealloc;	// 0x34824ae1
// declared property getter: - (float)defaultPlaybackRate;	// 0x34827b11
// declared property getter: - (unsigned)discCount;	// 0x348254c9
// declared property getter: - (unsigned)discNumber;	// 0x348254c5
// declared property getter: - (id)displayableText;	// 0x34825571
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x34825529
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x34826ffd
// declared property getter: - (double)durationFromExternalMetadata;	// 0x34827041
// declared property getter: - (double)durationIfAvailable;	// 0x348270e1
- (double)durationInSeconds;	// 0x34825331
// declared property getter: - (BOOL)durationIsValid;	// 0x34827059
// declared property getter: - (id)feeder;	// 0x34827af1
- (void)flushNowPlayingCaches;	// 0x34824c79
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x34825799
// declared property getter: - (id)genre;	// 0x348254e1
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x348255c1
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x34825609
// declared property getter: - (BOOL)hasDisplayableText;	// 0x3482560d
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x34825611
// declared property getter: - (id)imageCache;	// 0x34825965
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x34825969
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x34825995
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x34827b31
// declared property getter: - (BOOL)isAssetLoaded;	// 0x34827b51
- (BOOL)isAssetURLValid;	// 0x348254dd
- (BOOL)isPlaceholderForItem:(id)item;	// 0x348254d9
// declared property getter: - (BOOL)isStreamable;	// 0x34825625
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x34824739
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x348254cd
- (void)loadAssetAndPlayerItem;	// 0x34824ca5
- (id)localeForAssetTrack:(id)assetTrack;	// 0x34828345
- (id)localizedPositionInPlaylistString;	// 0x34826ecd
// declared property getter: - (id)lyrics;	// 0x34825581
// declared property getter: - (id)mainTitle;	// 0x348256c1
// declared property getter: - (id)mediaItem;	// 0x348d3e81
- (CGSize)naturalSize;	// 0x3482771d
- (void)notePlaybackFinishedByHittingEnd;	// 0x3482520d
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x348276b9
- (id)path;	// 0x348253a1
// declared property getter: - (unsigned long long)persistentID;	// 0x34826ebd
// declared property getter: - (double)playableDuration;	// 0x34827221
// declared property getter: - (double)playableDurationIfAvailable;	// 0x34827239
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x34825229
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x348256c9
// declared property getter: - (id)player;	// 0x34827b81
// declared property getter: - (id)playerItem;	// 0x34824fb5
// declared property getter: - (id)podcastURL;	// 0x348256c5
// declared property getter: - (CGSize)presentationSize;	// 0x3482575d
- (void)reevaluateType;	// 0x348283a5
- (void)resetBookkeeping;	// 0x348251b1
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x34825825
- (void)setAlternateAudioTrackID:(int)anId;	// 0x34825205
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x34827ad1
// declared property setter: - (void)setAvPlayerItem:(id)item;	// 0x34828639
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x34827ae1
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x34826a95
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x34827b21
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x34827b01
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x348257dd
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x34825881
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x34827b41
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x34827b69
- (void)setOverrideDuration:(double)duration;	// 0x348258a5
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x34825241
- (void)setPlaybackFinishedTime:(double)time;	// 0x34825245
- (void)setPlaybackStoppedTime:(double)time;	// 0x34825209
// declared property setter: - (void)setPlayer:(id)player;	// 0x34827b91
- (void)setRating:(float)rating;	// 0x3482525d
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x348258b9
- (void)setSubtitleTrackID:(int)anId;	// 0x34825261
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x34827bb1
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x34825265
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x3482527d
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x348252a9
// declared property setter: - (void)setVideoID:(id)anId;	// 0x34826fd1
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x34827bc1
- (void)setupPlaybackInfo;	// 0x34827c29
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x34827ba1
// declared property getter: - (int)status;	// 0x34825191
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x34825929
// declared property getter: - (double)timeOfSeekableEnd;	// 0x34827331
// declared property getter: - (double)timeOfSeekableStart;	// 0x34827251
- (id)titlesForTime:(double)time;	// 0x34825a71
// declared property getter: - (unsigned)type;	// 0x34826ea9
- (void)updateAttributesForDefaultsChange:(id)defaultsChange;	// 0x3482820d
- (id)url;	// 0x3482542d
- (id)urlTimeMarkerForTime:(double)time;	// 0x34826d01
// declared property getter: - (id)urlTimeMarkers;	// 0x34826a6d
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x34825a75
// declared property getter: - (float)userRating;	// 0x34826eb9
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x348252cd
// declared property getter: - (id)videoID;	// 0x34826fa9
// declared property getter: - (BOOL)wantsSubtitles;	// 0x34826ec9
@end

