/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "NSCoding.h"

@class NSString, NSDate, NSCache, NSURL, NSHashTable, CADisplayLink;
@protocol MPMediaLibraryDataProviderPrivate, OS_dispatch_queue;

@interface MPMediaLibrary : NSObject <NSCoding> {
@private
	id<MPMediaLibraryDataProviderPrivate> _libraryDataProvider;	// 4 = 0x4
	int _libraryChangeObservers;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_entityCacheQueue;	// 12 = 0xc
	NSCache *_itemsForCriteriaCache;	// 16 = 0x10
	NSCache *_hasItemsForCriteriaCache;	// 20 = 0x14
	NSCache *_itemResultSetsForCriteriaCache;	// 24 = 0x18
	NSCache *_collectionsForCriteriaCache;	// 28 = 0x1c
	NSCache *_hasCollectionsForCriteriaCache;	// 32 = 0x20
	NSHashTable *_connectionAssertions;	// 36 = 0x24
	BOOL _disconnectAfterReleasingAssertions;	// 40 = 0x28
	float _connectionProgress;	// 44 = 0x2c
	CADisplayLink *_connectionProgressDisplayLink;	// 48 = 0x30
	double _connectionProgressStartTime;	// 52 = 0x34
	int _removalReason;	// 60 = 0x3c
	unsigned _filteringDisabled : 1;	// 64 = 0x40
	unsigned _determinedHasMedia : 1;	// 64 = 0x40
	unsigned _hasMedia : 1;	// 64 = 0x40
	unsigned _determinedHasSongs : 1;	// 64 = 0x40
	unsigned _hasSongs : 1;	// 64 = 0x40
	unsigned _determinedHasGeniusMixes : 1;	// 64 = 0x40
	unsigned _hasGeniusMixes : 1;	// 64 = 0x40
	unsigned _determinedHasPlaylists : 1;	// 64 = 0x40
	unsigned _hasPlaylists : 1;	// 65 = 0x41
	unsigned _determinedHasComposers : 1;	// 65 = 0x41
	unsigned _hasComposers : 1;	// 65 = 0x41
	unsigned _determinedHasPodcasts : 1;	// 65 = 0x41
	unsigned _hasPodcasts : 1;	// 65 = 0x41
	unsigned _determinedHasUniversalBookmarkableItems : 1;	// 65 = 0x41
	unsigned _hasUniversalBookmarkableContent : 1;	// 65 = 0x41
	unsigned _determinedHasAudiobooks : 1;	// 65 = 0x41
	unsigned _hasAudiobooks : 1;	// 66 = 0x42
	BOOL _hasVideos;	// 67 = 0x43
	BOOL _determinedHasVideos;	// 68 = 0x44
	BOOL _hasMusicVideos;	// 69 = 0x45
	BOOL _determinedHasMusicVideos;	// 70 = 0x46
	BOOL _hasAudibleAudioBooks;	// 71 = 0x47
	BOOL _determinedHasAudibleAudioBooks;	// 72 = 0x48
	BOOL _hasMovies;	// 73 = 0x49
	BOOL _determinedHasMovies;	// 74 = 0x4a
	BOOL _hasCompilations;	// 75 = 0x4b
	BOOL _determinedHasCompilations;	// 76 = 0x4c
	BOOL _hasITunesU;	// 77 = 0x4d
	BOOL _determinedHasITunesU;	// 78 = 0x4e
	BOOL _hasMovieRentals;	// 79 = 0x4f
	BOOL _determinedHasMovieRentals;	// 80 = 0x50
	BOOL _hasTVShows;	// 81 = 0x51
	BOOL _determinedHasTVShows;	// 82 = 0x52
	BOOL _hasVideoPodcasts;	// 83 = 0x53
	BOOL _determinedHasVideoPodcasts;	// 84 = 0x54
}
@property(readonly, assign, nonatomic) NSString *_syncValidity;	// G=0x348704a1; 
@property(readonly, assign) float connectionProgress;	// G=0x3486e7ed; converted property
@property(assign, getter=isFilteringDisabled) BOOL filteringDisabled;	// G=0x3486eaad; S=0x3486eac1; converted property
@property(readonly, assign) BOOL hasAudibleAudioBooks;	// G=0x3486d891; converted property
@property(readonly, assign) BOOL hasCompilations;	// G=0x3486d985; converted property
@property(readonly, assign) BOOL hasMovieRentals;	// G=0x3486da79; converted property
@property(readonly, assign) BOOL hasMovies;	// G=0x3486d909; converted property
@property(readonly, assign) BOOL hasMusicVideos;	// G=0x3486d815; converted property
@property(readonly, assign) BOOL hasTVShows;	// G=0x3486daf1; converted property
@property(readonly, assign) BOOL hasVideoPodcasts;	// G=0x3486db6d; converted property
@property(readonly, assign) BOOL hasVideos;	// G=0x3486d799; converted property
@property(readonly, assign, nonatomic) NSDate *lastModifiedDate;	// G=0x3486cbb9; 
@property(readonly, assign, nonatomic) NSURL *protectedContentSupportStorageURL;	// G=0x348701c9; 
@property(assign, nonatomic) int removalReason;	// G=0x3486cde1; S=0x3486cdf1; 
@property(retain) id ubiquitousBookmarkDomainVersionAnchorToken;	// G=0x3486e439; S=0x3486e3a5; converted property
@property(assign) unsigned long long ubiquitousBookmarkEntityRevisionAnchor;	// G=0x3486e3ed; S=0x3486e34d; converted property
+ (id)_libraryDataProviders;	// 0x3486fe11
+ (id)_libraryForDataProvider:(id)dataProvider;	// 0x3486fd39
+ (id)_mediaLibraries;	// 0x3486fbb1
+ (void)addLibraryDataProvider:(id)provider;	// 0x3486fe91
+ (void)beginDiscoveringMediaLibraries;	// 0x3486c531
+ (id)defaultMediaLibrary;	// 0x3486b5c9
+ (id)deviceMediaLibrary;	// 0x3486b6f9
+ (void)endDiscoveringMediaLibraries;	// 0x3486c54d
+ (BOOL)isLibraryServerDisabled;	// 0x3486e81d
+ (id)libraryDataProviders;	// 0x3486fe59
+ (id)mediaLibraries;	// 0x3486fc15
+ (id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x3486fc4d
+ (void)reloadDisplayValuesForLibraryDataProvider:(id)libraryDataProvider;	// 0x348700f9
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x348700a1
+ (void)reloadInvisiblePropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x348700cd
+ (void)reloadLibraryDataProvider:(id)provider;	// 0x34870075
+ (void)removeLibraryDataProvider:(id)provider removalReason:(int)reason;	// 0x3486ff89
+ (void)setDefaultMediaLibrary:(id)library;	// 0x3486b5ed
+ (void)setLibraryServerDisabled:(BOOL)disabled;	// 0x3486e821
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x3486e825
+ (void)syncGenerationDidChangeForLibraryDataProvider:(id)syncGeneration;	// 0x34870175
- (id)init;	// 0x3486b741
- (id)initWithCoder:(id)coder;	// 0x3486bca5
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined mediaType:(int)type queryHasEntitiesBlock:(id)block;	// 0x3486d729
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined queryHasEntitiesBlock:(id)block;	// 0x3486d709
- (void)_clearCachedContentDataWithCompletionBlock:(id)completionBlock;	// 0x3486bffd
- (void)_clearCachedEntitiesIncludingResultSets:(BOOL)sets completionBlock:(id)block;	// 0x3486becd
- (void)_clearPendingDisconnection;	// 0x3486f3e5
- (id)_collectionsForQueryCriteria:(id)queryCriteria;	// 0x3486f3f9
- (void)_connectionProgressDisplayLinkCallback:(id)callback;	// 0x3486f891
- (void)_didReceiveMemoryWarning:(id)warning;	// 0x3486c4c1
- (void)_displayValuesDidChangeNotification:(id)_displayValues;	// 0x3486c4d5
- (BOOL)_hasCollectionsForQueryCriteria:(id)queryCriteria;	// 0x3486f389
- (BOOL)_hasEntitiesForQueryCritiera:(id)queryCritiera hasEntitiesForCriteriaCache:(id)criteriaCache entitiesForCriteriaCache:(id)criteriaCache3 loadBlock:(id)block;	// 0x3486f031
- (BOOL)_hasItemsForQueryCriteria:(id)queryCriteria;	// 0x3486f32d
- (id)_initWithLibraryDataProvider:(id)libraryDataProvider;	// 0x3486fa79
- (id)_itemsForQueryCriteria:(id)queryCriteria immediate:(BOOL)immediate;	// 0x3486ed01
- (unsigned long long)_persistentIDForAssetURL:(id)assetURL;	// 0x3486e8b9
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;	// 0x3486c149
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x3486c2d5
- (void)_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x3486c465
- (void)_removeConnectionAssertion:(id)assertion;	// 0x3486f951
- (void)_stopConnectionProgressDisplayLink;	// 0x3486f9d1
// declared property getter: - (id)_syncValidity;	// 0x348704a1
- (id)addPlaylistWithName:(id)name;	// 0x3486de4d
- (id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;	// 0x3486de61
- (void)beginGeneratingLibraryChangeNotifications;	// 0x3486c569
- (void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;	// 0x3486e5fd
- (void)connectWithCompletionHandler:(id)completionHandler;	// 0x3486c57d
- (id)connectionAssertionWithIdentifier:(id)identifier;	// 0x3486e67d
// converted property getter: - (float)connectionProgress;	// 0x3486e7ed
- (unsigned long long)currentEntityRevision;	// 0x3486cc1d
- (void)dealloc;	// 0x3486b945
- (id)description;	// 0x3486bab5
- (void)disconnect;	// 0x3486cb01
- (void)downloadAsset:(id)asset completionHandler:(id)handler;	// 0x3486e191
- (void)downloadItem:(id)item completionHandler:(id)handler;	// 0x3486e109
- (void)encodeWithCoder:(id)coder;	// 0x3486bbc1
- (void)endGeneratingLibraryChangeNotifications;	// 0x3486cba1
- (void)enumerateEntityChangesAfterSyncAnchor:(id)anchor usingBlock:(id)block;	// 0x348704c1
- (id)errorResolverForMediaItem:(id)mediaItem;	// 0x34895545
- (BOOL)hasAlbums;	// 0x3486d369
- (BOOL)hasArtists;	// 0x3486d351
// converted property getter: - (BOOL)hasAudibleAudioBooks;	// 0x3486d891
- (BOOL)hasAudiobooks;	// 0x3486d645
// converted property getter: - (BOOL)hasCompilations;	// 0x3486d985
- (BOOL)hasComposers;	// 0x3486d5cd
- (BOOL)hasGeniusMixes;	// 0x3486d22d
- (BOOL)hasGenres;	// 0x3486d5b5
- (BOOL)hasITunesUContent;	// 0x3486d9fd
- (BOOL)hasMedia;	// 0x3486d145
- (BOOL)hasMediaOfType:(int)type;	// 0x3486d0d5
// converted property getter: - (BOOL)hasMovieRentals;	// 0x3486da79
// converted property getter: - (BOOL)hasMovies;	// 0x3486d909
// converted property getter: - (BOOL)hasMusicVideos;	// 0x3486d815
- (BOOL)hasPlaylists;	// 0x3486d2d9
- (BOOL)hasPodcasts;	// 0x3486d445
- (BOOL)hasSongs;	// 0x3486d381
// converted property getter: - (BOOL)hasTVShows;	// 0x3486daf1
- (BOOL)hasUniversalBookmarkableItems;	// 0x3486d509
// converted property getter: - (BOOL)hasVideoPodcasts;	// 0x3486db6d
// converted property getter: - (BOOL)hasVideos;	// 0x3486d799
- (unsigned)hash;	// 0x3486bb99
- (BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;	// 0x3486e071
- (BOOL)isEqual:(id)equal;	// 0x3486bb29
// converted property getter: - (BOOL)isFilteringDisabled;	// 0x3486eaad
- (BOOL)isGeniusEnabled;	// 0x3486e4dd
- (BOOL)isValidAssetURL:(id)url;	// 0x3486e829
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;	// 0x3486eae1
- (id)itemWithPersistentID:(unsigned long long)persistentID;	// 0x3486dbe9
- (id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;	// 0x3486dc0d
// declared property getter: - (id)lastModifiedDate;	// 0x3486cbb9
- (id)libraryDataProvider;	// 0x3486fba1
- (BOOL)libraryHasBeenModifiedWithToken:(id)token;	// 0x3486cf9d
- (id)modificationToken;	// 0x3486ce21
- (id)name;	// 0x3486cdc1
- (id)newPlaylistWithPersistentID:(unsigned long long)persistentID;	// 0x3486dc8d
- (id)pathForAssetURL:(id)assetURL;	// 0x3486e845
- (void)performReadTransactionWithBlock:(id)block;	// 0x3486e789
- (BOOL)performTransactionWithBlock:(id)block;	// 0x3486e72d
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;	// 0x3486ebf1
- (long long)playlistGeneration;	// 0x3486ccb5
- (id)playlistWithPersistentID:(unsigned long long)persistentID;	// 0x3486de25
- (void)populateLocationPropertiesOfItem:(id)item withPath:(id)path;	// 0x3486e2dd
- (id)preferredAudioLanguages;	// 0x3486e525
- (id)preferredSubtitleLanguages;	// 0x3486e56d
// declared property getter: - (id)protectedContentSupportStorageURL;	// 0x348701c9
// declared property getter: - (int)removalReason;	// 0x3486cde1
- (BOOL)removeItems:(id)items;	// 0x3486df41
- (BOOL)removePlaylist:(id)playlist;	// 0x3486e009
- (BOOL)requiresAuthentication;	// 0x3486e5b5
// converted property setter: - (void)setFilteringDisabled:(BOOL)disabled;	// 0x3486eac1
// declared property setter: - (void)setRemovalReason:(int)reason;	// 0x3486cdf1
// converted property setter: - (void)setUbiquitousBookmarkDomainVersionAnchorToken:(id)token;	// 0x3486e3a5
// converted property setter: - (void)setUbiquitousBookmarkEntityRevisionAnchor:(unsigned long long)anchor;	// 0x3486e34d
- (int)status;	// 0x3486cd4d
- (unsigned long long)syncGenerationID;	// 0x3486cc69
- (id)syncValidity;	// 0x3486e7fd
// converted property getter: - (id)ubiquitousBookmarkDomainVersionAnchorToken;	// 0x3486e439
// converted property getter: - (unsigned long long)ubiquitousBookmarkEntityRevisionAnchor;	// 0x3486e3ed
- (id)uniqueIdentifier;	// 0x3486ce01
- (void)updateUbiquitousValuesForTrackWithKey:(id)key mediaPropertyValues:(id)values timestamp:(double)timestamp;	// 0x3486e481
- (BOOL)writable;	// 0x3486cd05
@end

