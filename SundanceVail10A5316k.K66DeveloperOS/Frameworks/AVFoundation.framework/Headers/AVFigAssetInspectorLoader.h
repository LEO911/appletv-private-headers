/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "AVAssetInspectorLoader.h"

@class AVAssetInspector, NSMutableArray, NSDictionary, NSURL, AVAssetCache;
@protocol OS_dispatch_queue;

@interface AVFigAssetInspectorLoader : AVAssetInspectorLoader {
@private
	OpaqueFigAsset *_figAsset;	// 8 = 0x8
	OpaqueFigFormatReader *_formatReader;	// 12 = 0xc
	BOOL _formatReaderObtained;	// 16 = 0x10
	long _figAssetCreationStatus;	// 20 = 0x14
	NSObject<OS_dispatch_queue> *_completionHandlerQueue;	// 24 = 0x18
	OpaqueFigSimpleMutex *_loadingMutex;	// 28 = 0x1c
	OpaqueFigSemaphore *_playabilityValidationSemaphore;	// 32 = 0x20
	int _playableStatus;	// 36 = 0x24
	long _playableResult;	// 40 = 0x28
	BOOL _playable;	// 44 = 0x2c
	OpaqueFigSemaphore *_cameraRollValidationSemaphor;	// 48 = 0x30
	int _compatibleWithSavedPhotosAlbumStatus;	// 52 = 0x34
	long _compatibleWithSavedPhotosAlbumResult;	// 56 = 0x38
	BOOL _compatibleWithSavedPhotosAlbum;	// 60 = 0x3c
	NSMutableArray *_loadingBatches;	// 64 = 0x40
	BOOL _loadingCanceled;	// 68 = 0x44
	AVAssetInspector *_assetInspector;	// 72 = 0x48
	AVAssetCache *_assetCache;	// 76 = 0x4c
	BOOL _shouldMatchDataInCacheByURLPathComponentOnly;	// 80 = 0x50
	BOOL _shouldMatchDataInCacheByURLWithoutQueryComponent;	// 81 = 0x51
	NSURL *_downloadDestinationURL;	// 84 = 0x54
	NSDictionary *_validationPlist;	// 88 = 0x58
	unsigned _referenceRestrictions;	// 92 = 0x5c
	NSURL *_URL;	// 96 = 0x60
}
@property(readonly, retain) NSURL *URL;	// G=0x3678081d; converted property
@property(readonly, retain) AVAssetCache *assetCache;	// G=0x36780929; converted property
@property(readonly, retain) AVAssetInspector *assetInspector;	// G=0x3677ee6d; converted property
@property(readonly, assign, getter=isCompatibleWithSavedPhotosAlbum) BOOL compatibleWithSavedPhotosAlbum;	// G=0x367805f1; converted property
@property(readonly, retain) NSURL *downloadDestinationURL;	// G=0x36780959; converted property
@property(readonly, assign, getter=isPlayable) BOOL playable;	// G=0x36780219; converted property
@property(readonly, assign) unsigned referenceRestrictions;	// G=0x36780919; converted property
@property(readonly, assign) BOOL shouldMatchDataInCacheByURLPathComponentOnly;	// G=0x36780939; converted property
@property(readonly, assign) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;	// G=0x36780949; converted property
@property(readonly, assign, nonatomic) NSDictionary *validationPlist;	// G=0x36780969; @synthesize=_validationPlist
+ (id)_figAssetPropertiesForKeys;	// 0x3677d265
+ (id)_figAssetTrackPropertiesForKeys;	// 0x3677d291
- (id)initWithURL:(id)url options:(id)options;	// 0x3677d2bd
// converted property getter: - (id)URL;	// 0x3678081d
- (void)_addFigAssetNotifications;	// 0x3677dcfd
- (OpaqueFigSemaphore *)_cameraRollValidationSemaphor;	// 0x3677ef21
- (id)_completionHandlerQueue;	// 0x3677eee1
- (void)_ensureAllDependenciesOfKeyAreLoaded:(id)keyAreLoaded;	// 0x36780099
- (OpaqueFigAsset *)_figAsset;	// 0x3677eed1
- (OpaqueFigFormatReader *)_formatReader;	// 0x3677ede1
- (id)_initWithDownloadToken:(unsigned long long)downloadToken;	// 0x3677dbbd
- (id)_initWithFigAsset:(OpaqueFigAsset *)figAsset options:(id)options;	// 0x3677da9d
- (BOOL)_isStreaming;	// 0x367808a5
- (int)_loadStatusForProperty:(id)property returningError:(int *)error;	// 0x3677ef31
- (id)_loadingBatches;	// 0x3677ef01
- (OpaqueFigSimpleMutex *)_loadingMutex;	// 0x3677eef1
- (OpaqueFigSemaphore *)_playabilityValidationSemaphore;	// 0x3677ef11
- (void)_removeFigAssetNotifications;	// 0x3677ea81
// converted property getter: - (id)assetCache;	// 0x36780929
// converted property getter: - (id)assetInspector;	// 0x3677ee6d
- (void)cancelLoading;	// 0x3677ff45
- (id)chapterGroupInfo;	// 0x367807f5
- (void)dealloc;	// 0x3677eb71
// converted property getter: - (id)downloadDestinationURL;	// 0x36780959
- (unsigned long long)downloadToken;	// 0x36780855
- (XXStruct_pwHToB)duration;	// 0x3678016d
- (void)finalize;	// 0x3677ec8d
- (BOOL)hasProtectedContent;	// 0x3678087d
- (unsigned)hash;	// 0x3677ed99
// converted property getter: - (BOOL)isCompatibleWithSavedPhotosAlbum;	// 0x367805f1
- (BOOL)isComposable;	// 0x36780535
- (BOOL)isEqual:(id)equal;	// 0x3677ed25
- (BOOL)isExportable;	// 0x3678043d
// converted property getter: - (BOOL)isPlayable;	// 0x36780219
- (BOOL)isReadable;	// 0x367804b9
- (void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id)handler;	// 0x3677f29d
- (void)loadValuesAsynchronouslyForKeys:(id)keys keysForCollectionKeys:(id)collectionKeys completionHandler:(id)handler;	// 0x3677f2bd
- (id)lyrics;	// 0x367801b1
// converted property getter: - (unsigned)referenceRestrictions;	// 0x36780919
- (id)resolvedURL;	// 0x3678082d
- (void)setIsCompatibleWithSavedPhotosAlbum:(BOOL)savedPhotosAlbum result:(long)result;	// 0x367805b1
- (void)setIsPlayable:(BOOL)playable result:(long)result;	// 0x367801d9
// converted property getter: - (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;	// 0x36780939
// converted property getter: - (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;	// 0x36780949
- (int)statusOfValueForKey:(id)key error:(id *)error;	// 0x3677f04d
// declared property getter: - (id)validationPlist;	// 0x36780969
@end

