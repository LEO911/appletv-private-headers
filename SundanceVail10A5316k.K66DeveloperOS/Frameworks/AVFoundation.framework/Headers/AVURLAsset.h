/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "AVAsset.h"

@class NSString, AVURLAssetInternal, NSURL, AVAssetCache, AVAssetResourceLoader;
@protocol AVURLAssetFailedURLRequestHandling;

@interface AVURLAsset : AVAsset {
@private
	AVURLAssetInternal *_asset;	// 8 = 0x8
}
@property(readonly, assign, nonatomic) NSURL *URL;	// G=0x36702339; 
@property(readonly, assign, nonatomic) AVAssetCache *assetCache;	// G=0x36703849; 
@property(readonly, assign, nonatomic) NSString *cacheKey;	// G=0x367038dd; 
@property(assign, nonatomic, setter=setFailedURLRequestDelegate:) id<AVURLAssetFailedURLRequestHandling> failedURLRequestDelegate;	// G=0x36703fa1; S=0x36703e25; 
@property(readonly, assign, nonatomic) AVAssetResourceLoader *resourceLoader;	// G=0x367039d5; 
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLPathComponentOnly;	// G=0x36703875; 
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;	// G=0x367038a9; 
+ (id)URLAssetWithURL:(id)url options:(id)options;	// 0x367012b1
+ (id)_UTTypes;	// 0x36700f6d
+ (id)_avfValidationPlist;	// 0x36700d29
+ (id)_figMIMETypes;	// 0x36700e61
+ (id)audiovisualMIMETypes;	// 0x36701249
+ (id)audiovisualTypes;	// 0x3670122d
+ (BOOL)isPlayableExtendedMIMEType:(id)type;	// 0x36701265
- (id)init;	// 0x367012fd
- (id)initWithURL:(id)url options:(id)options;	// 0x36701311
// declared property getter: - (id)URL;	// 0x36702339
- (id)_absoluteURL;	// 0x367022f9
- (unsigned)_addChapterMetadataItem:(id)item withDuration:(XXStruct_pwHToB)duration timeRange:(XXStruct_yD8eWC)range toChapters:(id)chapters fromIndex:(unsigned)index;	// 0x367027ad
- (void)_addFigAssetNotifications;	// 0x36701791
- (id)_assetInspector;	// 0x36701e7d
- (id)_assetInspectorLoader;	// 0x36701e05
- (id)_chapterGroupInfo;	// 0x367023b1
- (id)_errorForFigNotificationPayload:(CFDictionaryRef)figNotificationPayload key:(CFStringRef)key;	// 0x3670172d
- (void)_finishHandlingFailedURLRequestWithResponseProperties:(id)responseProperties context:(id)context;	// 0x36703fc1
- (OpaqueFigFormatReader *)_formatReader;	// 0x36701ea9
- (void)_handleURLRequest:(id)request;	// 0x36703ac5
- (void)_removeFigAssetNotifications;	// 0x36701b31
- (void)_setAssetInspectorLoader:(id)loader;	// 0x36701e25
- (id)_tracks;	// 0x36701ed5
- (void)_tracksDidChange;	// 0x36702241
// declared property getter: - (id)assetCache;	// 0x36703849
- (id)availableChapterLocales;	// 0x36702625
// declared property getter: - (id)cacheKey;	// 0x367038dd
- (void)cancelLoading;	// 0x36702359
- (id)chapterMetadataGroupsBestMatchingPreferredLanguages:(id)languages;	// 0x36703659
- (id)chapterMetadataGroupsWithTitleLocale:(id)titleLocale containingItemsWithCommonKeys:(id)commonKeys;	// 0x36702a35
- (void)dealloc;	// 0x36701c39
- (id)description;	// 0x36701d9d
- (id)downloadDestinationURL;	// 0x3670397d
- (unsigned long long)downloadToken;	// 0x367039a9
// declared property getter: - (id)failedURLRequestDelegate;	// 0x36703fa1
- (void)finalize;	// 0x36701d2d
- (void)finishHandlingFailedURLRequestWithResponseProperties:(id)responseProperties;	// 0x367041bd
- (id)lyrics;	// 0x36702385
- (id)requestForStreamingKeyForContext:(id)context appID:(id)anId assetID:(id)anId3 errorOut:(id *)anOut;	// 0x367041d1
- (id)requestForStreamingKeyForContext:(id)context appID:(id)anId assetID:(id)anId3 options:(id)options errorOut:(id *)anOut;	// 0x36703dd1
- (id)resolvedURL;	// 0x36703951
// declared property getter: - (id)resourceLoader;	// 0x367039d5
// declared property setter: - (void)setFailedURLRequestDelegate:(id)delegate;	// 0x36703e25
// declared property getter: - (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;	// 0x36703875
// declared property getter: - (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;	// 0x367038a9
- (id)tracks;	// 0x36702021
@end

