/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"

@class NSString, NSError, AVPlayerItemInternal, NSDate, NSArray;

@interface AVPlayerItem : NSObject <NSCopying> {
@private
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x36720261; S=0x36720315; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x367203c9; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x367204dd; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x36720695; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x36720581; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x367205f1; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x36720439; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x3671b991; S=0x3671bb3d; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x3671ff81; 
@property(retain) id audioMix;	// G=0x3671c89d; S=0x3671caf1; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x3671ff65; 
@property(assign) double bufferingTargetMaximum;	// G=0x3671b5a9; S=0x3671b73d; converted property
@property(assign) double bufferingTargetMinimum;	// G=0x3671b761; S=0x3671b8f5; converted property
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x36721819; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x3671ffd9; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x3671c619; S=0x3671c7c5; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x3671c301; S=0x3671c4ad; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x36721711; S=0x36721679; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x36721931; S=0x367218ad; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x367179e1; 
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x3671aa89; S=0x3671ac65; converted property
@property(retain) id gaplessInfo;	// G=0x3671e32d; S=0x3671e6e9; converted property
@property(retain) id initialDate;	// G=0x3671a741; S=0x3671a785; converted property
@property(retain) id initialEstimatedDate;	// G=0x3671a865; S=0x3671a8a9; converted property
@property(assign) BOOL limitReadAhead;	// G=0x3671b311; S=0x3671b4b9; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x3671f7c1; S=0x3671f7e1; converted property
@property(readonly, assign, nonatomic) NSArray *outputs;	// G=0x36722149; 
@property(assign) int playbackLikelyToKeepUpTrigger;	// G=0x3671bcd5; S=0x3671be7d; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x3671ae81; S=0x3671b05d; converted property
@property(assign) BOOL seekingWaitsForVideoCompositionRendering;	// G=0x3671d265; S=0x3671d305; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x3671e8d1; S=0x3671e831; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x367179c1; 
@property(retain) id textStyleRules;	// G=0x3671d395; S=0x3671d45d; converted property
@property(retain) id variableSpeedAudioProcessor;	// G=0x3671d5e9; S=0x3671d6dd; converted property
@property(retain) id videoComposition;	// G=0x3671cbb5; S=0x3671cbf9; converted property
@property(assign) float volumeAdjustment;	// G=0x3671ea05; S=0x3671e965; converted property
@property(assign) BOOL willNeverSeekBackwardsHint;	// G=0x3671bfe9; S=0x3671c195; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x36714d4d
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x36714d39
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x36720031
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x367201fd
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x3671bc11
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x3671ff45
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x3671cbb1
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;	// 0x3671b741
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;	// 0x3671b8f9
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x3671c899
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x3671c581
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x3671ad7d
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x3671e7bd
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x3671b58d
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x3671ff59
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x3671f8ad
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x3671ff4d
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x3671ff51
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x3671ff49
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;	// 0x3671bf51
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x3671ff5d
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x3671b175
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x3671ff55
+ (BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;	// 0x3671d391
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x3671e8f1
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x3671ff41
+ (BOOL)automaticallyNotifiesObserversOfTextStyleRules;	// 0x3671d51d
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x3671ff61
+ (BOOL)automaticallyNotifiesObserversOfVariableSpeedAudioProcessor;	// 0x3671d845
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x3671ce91
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x3671ea25
+ (BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;	// 0x3671c269
+ (void)initialize;	// 0x36714cd1
+ (id)playerItemWithAsset:(id)asset;	// 0x36714da9
+ (id)playerItemWithURL:(id)url;	// 0x36714d61
- (id)init;	// 0x36715095
- (id)initWithAsset:(id)asset;	// 0x36715375
- (id)initWithURL:(id)url;	// 0x367151e9
- (int)_CreateSeekID;	// 0x36719a95
- (id)_URL;	// 0x36717585
- (void)_addFPListeners;	// 0x367184ed
- (void)_addSyncLayer:(id)layer;	// 0x3671fb0d
- (BOOL)_alwaysMonitorsPlayability;	// 0x3671b8fd
- (void)_applyAudioMix;	// 0x3671c8e1
- (void)_applyInitialAudioMix;	// 0x3671ca9d
- (void)_applyMediaSelectionOptions;	// 0x3671ef0d
- (void)_applySeekingWaitsForVideoCompositionRendering;	// 0x3671d285
- (void)_applyTextStyleRules;	// 0x3671d3d9
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x3671ece5
- (void)_attachOutputs;	// 0x36721d5d
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x36716ba9
- (long long)_availableFileSize;	// 0x367215ed
- (double)_bufferingTargetMaximum;	// 0x3671b591
- (double)_bufferingTargetMinimum;	// 0x3671b749
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3671f0b9
- (id)_cachedValueForKey:(id)key;	// 0x36716011
- (BOOL)_canPlayFastForward;	// 0x3671909d
- (BOOL)_canPlayFastReverse;	// 0x367191f1
- (BOOL)_canPlayReverse;	// 0x3671939d
- (BOOL)_canPlaySlowForward;	// 0x36719491
- (BOOL)_canPlaySlowReverse;	// 0x36719585
- (BOOL)_canStepBackward;	// 0x36719771
- (BOOL)_canStepForward;	// 0x36719679
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x36719af1
- (void)_changeStatusToFailedWithError:(id)error;	// 0x36717a25
- (void)_configurePlaybackItem;	// 0x367162c9
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x3671c585
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x3671c26d
- (OpaqueCMTimebase *)_copyTimebase;	// 0x3671b179
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x36716b11
- (void)_createPlayerItemInternal;	// 0x36714df1
- (void)_detachFromPlayer;	// 0x36717451
- (void)_detachOutputs;	// 0x36721e5d
- (void)_didAccessKVOForKey:(id)key;	// 0x36716069
- (XXStruct_pwHToB)_duration;	// 0x36717c75
- (void)_evaluateSuppression;	// 0x3671fe19
- (void)_evaluateVisualContexts;	// 0x36721a81
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x3671f8b1
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x36715fd1
- (long long)_fileSize;	// 0x36721561
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x3671a989
- (id)_fpNotificationNames;	// 0x367182b1
- (BOOL)_hasEnabledVideoMedia;	// 0x3671fc09
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x36717919
- (void)_insertAfterItem:(id)item;	// 0x367174b5
- (void)_invokeReadyForEnqueueingHandlers;	// 0x36718921
- (BOOL)_isAFileBasedItemThatsReadyToPlay;	// 0x36719345
- (BOOL)_isCurrentPlayerItem;	// 0x36716965
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x36720261
// declared property getter: - (BOOL)_isRental;	// 0x367203c9
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x36720581
- (void)_kickAssetObserversIfAppropriate;	// 0x3671787d
- (BOOL)_limitReadAhead;	// 0x3671b27d
- (id)_loadedTimeRanges;	// 0x3671dfad
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x367176ed
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x36718af1
- (id)_nextItem;	// 0x36717475
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x3671fba5
- (int)_playbackLikelyToKeepUpTrigger;	// 0x3671bc15
- (id)_playbackProperties;	// 0x3671e371
- (id)_player;	// 0x36716939
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x36717465
- (id)_playerConnection;	// 0x36716a99
- (CGSize)_presentationSize;	// 0x36719865
- (id)_previousItem;	// 0x36717495
- (id)_propertyStorage;	// 0x36715ff1
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x3671ba6d
- (void)_quietlySetBufferingTargetMaximum:(double)maximum;	// 0x3671b685
- (void)_quietlySetBufferingTargetMinimum:(double)minimum;	// 0x3671b83d
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x3671c6f5
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x3671c3dd
- (void)_quietlySetEQPreset:(int)preset;	// 0x36721491
- (void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)algorithm;	// 0x3671d68d
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3671aba1
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x3671b3ed
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x3671bdb1
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x3671e415
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3671af99
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x3671e7c1
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x3671e8f5
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)_quietlySet;	// 0x3671c0c5
- (void)_removeFPListeners;	// 0x367186e9
- (void)_removeFromItems;	// 0x3671751d
- (void)_removeSyncLayer:(id)layer;	// 0x3671fac5
- (void)_renderingSuppressionDidChangeForOutput:(id)_renderingSuppression;	// 0x3671fef1
// declared property getter: - (id)_rentalExpirationDate;	// 0x367204dd
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x36720695
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x367205f1
// declared property getter: - (id)_rentalStartDate;	// 0x36720439
- (void)_respondToBecomingReadyForBasicInspection;	// 0x36718835
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x3671ad81
- (id)_seekableTimeRanges;	// 0x3671dc2d
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x3671f3ad
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x3671f431
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x3671f481
- (void)_selectMediaOption:(id)option usingFigSelectedMediaArrayObtainedFromGroup:(id)group;	// 0x3671f18d
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x3671ebf5
- (void)_setAsset:(id)asset;	// 0x367175e5
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x367177a5
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3671763d
- (void)_setAudibleDRMInfo:(id)info;	// 0x367213f1
- (void)_setEQPreset:(int)preset;	// 0x36721501
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x3671eb81
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x36720315
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x36716985
- (void)_setPlayerConnection:(id)connection;	// 0x36716ab9
- (void)_setRampInOutInfo:(id)outInfo;	// 0x36721351
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x3671fa39
- (void)_setTimebaseOnOutputs:(OpaqueCMTimebase *)outputs;	// 0x36721c8d
- (void)_setTimedMetadata:(id)metadata;	// 0x3671f9c9
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x36717695
- (void)_setURL:(id)url;	// 0x367175a5
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x3671ce95
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x3671d01d
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x3671cfa1
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x3671cf31
- (void)_setVideoCompositor:(id)compositor;	// 0x3671d159
- (id)_stateDispatchQueue;	// 0x36715fb1
- (BOOL)_suppressionForOutputs:(id)outputs;	// 0x3671fd55
- (id)_trackWithTrackID:(int)trackID;	// 0x367181c9
- (id)_tracks;	// 0x36717e6d
- (id)_unregisterAndReturnRetainedSeekCompletionHandler;	// 0x36719c9d
- (void)_updateTimebase;	// 0x3671b1f1
- (id)_variableSpeedAudioProcessor;	// 0x3671d521
- (id)_weakReference;	// 0x36715f91
- (void)_willAccessKVOForKey:(id)key;	// 0x3671603d
- (BOOL)_willNeverSeekBackwardsHint;	// 0x3671bf55
- (id)accessLog;	// 0x36720739
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x36716155
- (void)addOutput:(id)output;	// 0x36721f3d
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x3671b991
- (id)asset;	// 0x36717c31
// converted property getter: - (id)audioMix;	// 0x3671c89d
// converted property getter: - (double)bufferingTargetMaximum;	// 0x3671b5a9
// converted property getter: - (double)bufferingTargetMinimum;	// 0x3671b761
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x36721819
- (BOOL)canPlayFastForward;	// 0x36719115
- (BOOL)canPlayFastReverse;	// 0x36719269
- (BOOL)canPlayReverse;	// 0x367193b5
- (BOOL)canPlaySlowForward;	// 0x367194a9
- (BOOL)canPlaySlowReverse;	// 0x3671959d
- (BOOL)canStepBackward;	// 0x36719789
- (BOOL)canStepForward;	// 0x36719695
- (void)cancelPendingSeeks;	// 0x3671a47d
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x3671c619
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x3671c301
- (id)copyWithZone:(NSZone *)zone;	// 0x36715a15
- (id)currentDate;	// 0x3671a505
- (id)currentEstimatedDate;	// 0x3671a7dd
- (XXStruct_pwHToB)currentTime;	// 0x367199ed
// declared property getter: - (id)dataYouTubeID;	// 0x36721711
- (void)dealloc;	// 0x36715529
- (id)description;	// 0x36715e25
- (void)didChangeValueForKey:(id)key;	// 0x367160f5
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x36721951
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x36721931
- (XXStruct_pwHToB)duration;	// 0x36717d2d
// declared property getter: - (id)error;	// 0x367179e1
- (id)errorLog;	// 0x36720801
- (void)finalize;	// 0x367158cd
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x3671aa89
// converted property getter: - (id)gaplessInfo;	// 0x3671e32d
// converted property getter: - (id)initialDate;	// 0x3671a741
// converted property getter: - (id)initialEstimatedDate;	// 0x3671a865
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x3671ff81
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x3671ff65
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x3671ffd9
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x3671f7c1
- (BOOL)isPlaybackBufferEmpty;	// 0x3671da39
- (BOOL)isPlaybackBufferFull;	// 0x3671d941
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x3671d849
// converted property getter: - (BOOL)limitReadAhead;	// 0x3671b311
- (id)loadedTimeRanges;	// 0x3671e295
// declared property getter: - (id)outputs;	// 0x36722149
- (id)playabilityMetrics;	// 0x3671dba9
// converted property getter: - (int)playbackLikelyToKeepUpTrigger;	// 0x3671bcd5
- (CGSize)presentationSize;	// 0x367198f1
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x3671db31
- (void)removeOutput:(id)output;	// 0x36722055
- (id)requestForStreamingKey:(id)streamingKey appID:(id)anId assetID:(id)anId3 errorOut:(id *)anOut;	// 0x36721755
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x3671ae81
- (BOOL)seekToDate:(id)date;	// 0x3671a729
- (BOOL)seekToDate:(id)date completionHandler:(id)handler;	// 0x3671a58d
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x36719ce1
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x36719d9d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x36719d19
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x36719e15
- (id)seekableTimeRanges;	// 0x3671df15
// converted property getter: - (BOOL)seekingWaitsForVideoCompositionRendering;	// 0x3671d265
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3671f545
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x3671ee0d
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3671f569
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x3671ea29
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x3671bb3d
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x3671caf1
// converted property setter: - (void)setBufferingTargetMaximum:(double)maximum;	// 0x3671b73d
// converted property setter: - (void)setBufferingTargetMinimum:(double)minimum;	// 0x3671b8f5
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x3671c7c5
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x3671c4ad
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x36721679
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x367218ad
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3671ac65
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x3671e6e9
// converted property setter: - (void)setInitialDate:(id)date;	// 0x3671a785
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x3671a8a9
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x3671b4b9
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x3671f7e1
// converted property setter: - (void)setPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x3671be7d
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3671b05d
// converted property setter: - (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)videoCompositionRendering;	// 0x3671d305
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x3671e831
// converted property setter: - (void)setTextStyleRules:(id)rules;	// 0x3671d45d
// converted property setter: - (void)setVariableSpeedAudioProcessor:(id)processor;	// 0x3671d6dd
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x3671cbf9
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x3671e965
// converted property setter: - (void)setWillNeverSeekBackwardsHint:(BOOL)neverSeekBackwardsHint;	// 0x3671c195
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x3671e8d1
// declared property getter: - (int)status;	// 0x367179c1
- (void)stepByCount:(int)count;	// 0x3671a901
// converted property getter: - (id)textStyleRules;	// 0x3671d395
- (OpaqueCMTimebase *)timebase;	// 0x3671b1d1
- (id)timedMetadata;	// 0x3671f985
- (id)tracks;	// 0x36718111
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x36715f09
// converted property getter: - (id)variableSpeedAudioProcessor;	// 0x3671d5e9
// converted property getter: - (id)videoComposition;	// 0x3671cbb5
// converted property getter: - (float)volumeAdjustment;	// 0x3671ea05
- (void)willChangeValueForKey:(id)key;	// 0x36716095
// converted property getter: - (BOOL)willNeverSeekBackwardsHint;	// 0x3671bfe9
@end

