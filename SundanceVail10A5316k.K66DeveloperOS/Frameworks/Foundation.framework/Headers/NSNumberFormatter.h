/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x31aa2b7d; S=0x31a0fabd; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x31aa2d19; S=0x31a30875; converted property
@property(retain) id currencyCode;	// G=0x31aa3e95; S=0x31aa3f55; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x31aa2dcd; S=0x31aa2e8d; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x31aa58d9; S=0x31aa5999; converted property
@property(retain) id currencySymbol;	// G=0x31aa3ff5; S=0x31aa40b5; converted property
@property(retain) id decimalSeparator;	// G=0x31aa2bbd; S=0x31aa2c7d; converted property
@property(retain) id exponentSymbol;	// G=0x31aa4835; S=0x31aa48f5; converted property
@property(assign) unsigned formatWidth;	// G=0x31aa4bad; S=0x31aa4c79; converted property
@property(assign) unsigned formatterBehavior;	// G=0x31aa2585; S=0x31a30689; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x31aa253d; S=0x31a1f7a9; converted property
@property(retain) id groupingSeparator;	// G=0x31aa2fe1; S=0x31aa30a1; converted property
@property(assign) unsigned groupingSize;	// G=0x31aa4995; S=0x31a2b09d; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x31aa4155; S=0x31aa4215; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x31aa5a39; S=0x31aa5aed; converted property
@property(retain) id locale;	// G=0x31aa24ad; S=0x31a1f73d; converted property
@property(retain) id maximum;	// G=0x31aa581d; S=0x31aa5845; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x31aa5695; S=0x31a256a1; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x31aa547d; S=0x31aa5549; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x31aa5df5; S=0x31aa5ec1; converted property
@property(retain) id minimum;	// G=0x31aa5761; S=0x31aa5789; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x31aa55c9; S=0x31a308f9; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x31aa53b1; S=0x31a30979; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x31aa5ca9; S=0x31aa5d75; converted property
@property(retain) id minusSign;	// G=0x31aa4575; S=0x31aa4635; converted property
@property(retain) id multiplier;	// G=0x31aa4cf9; S=0x31aa4db9; converted property
@property(retain) id negativeFormat;	// G=0x31aa25c5; S=0x31aa2685; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x31aa37b5; S=0x31a0fa65; converted property
@property(retain) id negativePrefix;	// G=0x31aa3bd5; S=0x31aa3c95; converted property
@property(retain) id negativeSuffix;	// G=0x31aa3d35; S=0x31aa3df5; converted property
@property(retain) id nilSymbol;	// G=0x31aa32b9; S=0x31a0f9b5; converted property
@property(retain) id notANumberSymbol;	// G=0x31aa3419; S=0x31aa34d9; converted property
@property(assign) unsigned numberStyle;	// G=0x31aa2421; S=0x31a14b65; converted property
@property(retain) id paddingCharacter;	// G=0x31aa4e59; S=0x31aa4f19; converted property
@property(assign) unsigned paddingPosition;	// G=0x31aa4fb9; S=0x31aa5085; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x31aa5f41; S=0x31aa5f89; converted property
@property(retain) id perMillSymbol;	// G=0x31aa4415; S=0x31aa44d5; converted property
@property(retain) id percentSymbol;	// G=0x31aa42b5; S=0x31aa4375; converted property
@property(retain) id plusSign;	// G=0x31aa46d5; S=0x31aa4795; converted property
@property(retain) id positiveFormat;	// G=0x31aa28c9; S=0x31aa296d; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x31aa3655; S=0x31a0fa0d; converted property
@property(retain) id positivePrefix;	// G=0x31aa3915; S=0x31aa39d5; converted property
@property(retain) id positiveSuffix;	// G=0x31aa3a75; S=0x31aa3b35; converted property
@property(retain) id roundingIncrement;	// G=0x31aa5251; S=0x31aa5311; converted property
@property(assign) unsigned roundingMode;	// G=0x31aa5105; S=0x31aa51d1; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x31aa4a61; S=0x31aa4b2d; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x31aa3839; S=0x31aa38bd; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x31aa27ed; S=0x31aa2871; converted property
@property(retain) id textAttributesForNil;	// G=0x31aa333d; S=0x31aa33c1; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x31aa3579; S=0x31aa35fd; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x31aa36d9; S=0x31aa375d; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x31aa2aa1; S=0x31aa2b25; converted property
@property(retain) id textAttributesForZero;	// G=0x31aa31dd; S=0x31aa3261; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x31aa2f2d; S=0x31a13181; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x31aa5b71; S=0x31aa5c25; converted property
@property(retain) id zeroSymbol;	// G=0x31a282c5; S=0x31aa313d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x31a0f9a5
+ (void)initialize;	// 0x31a0f5e9
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x31a30a75
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x31a0f60d
- (id)init;	// 0x31a0f625
- (id)initWithCoder:(id)coder;	// 0x31aa19fd
- (void *)__Keynote_NOOP;	// 0x31aa172d
- (void)_regenerateFormatter;	// 0x31a0fb19
- (void)_reset;	// 0x31aa1731
// converted property getter: - (BOOL)allowsFloats;	// 0x31aa2b7d
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x31aa2d19
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x31aa1b7d
- (id)copyWithZone:(NSZone *)zone;	// 0x31aa18ed
// converted property getter: - (id)currencyCode;	// 0x31aa3e95
// converted property getter: - (id)currencyDecimalSeparator;	// 0x31aa2dcd
// converted property getter: - (id)currencyGroupingSeparator;	// 0x31aa58d9
// converted property getter: - (id)currencySymbol;	// 0x31aa3ff5
- (void)dealloc;	// 0x31a1f87d
// converted property getter: - (id)decimalSeparator;	// 0x31aa2bbd
- (void)encodeWithCoder:(id)coder;	// 0x31aa1955
// converted property getter: - (id)exponentSymbol;	// 0x31aa4835
- (void)finalize;	// 0x31aa18a9
// converted property getter: - (unsigned)formatWidth;	// 0x31aa4bad
// converted property getter: - (unsigned)formatterBehavior;	// 0x31aa2585
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x31aa253d
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x31aa1b81
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x31aa23c9
// converted property getter: - (id)groupingSeparator;	// 0x31aa2fe1
// converted property getter: - (unsigned)groupingSize;	// 0x31aa4995
// converted property getter: - (id)internationalCurrencySymbol;	// 0x31aa4155
// converted property getter: - (BOOL)isLenient;	// 0x31aa5a39
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x31aa5f41
// converted property getter: - (id)locale;	// 0x31aa24ad
// converted property getter: - (id)maximum;	// 0x31aa581d
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x31aa5695
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x31aa547d
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x31aa5df5
// converted property getter: - (id)minimum;	// 0x31aa5761
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x31aa55c9
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x31aa53b1
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x31aa5ca9
// converted property getter: - (id)minusSign;	// 0x31aa4575
// converted property getter: - (id)multiplier;	// 0x31aa4cf9
// converted property getter: - (id)negativeFormat;	// 0x31aa25c5
// converted property getter: - (id)negativeInfinitySymbol;	// 0x31aa37b5
// converted property getter: - (id)negativePrefix;	// 0x31aa3bd5
// converted property getter: - (id)negativeSuffix;	// 0x31aa3d35
// converted property getter: - (id)nilSymbol;	// 0x31aa32b9
// converted property getter: - (id)notANumberSymbol;	// 0x31aa3419
- (id)numberFromString:(id)string;	// 0x31aa23e9
// converted property getter: - (unsigned)numberStyle;	// 0x31aa2421
// converted property getter: - (id)paddingCharacter;	// 0x31aa4e59
// converted property getter: - (unsigned)paddingPosition;	// 0x31aa4fb9
// converted property getter: - (id)perMillSymbol;	// 0x31aa4415
// converted property getter: - (id)percentSymbol;	// 0x31aa42b5
// converted property getter: - (id)plusSign;	// 0x31aa46d5
// converted property getter: - (id)positiveFormat;	// 0x31aa28c9
// converted property getter: - (id)positiveInfinitySymbol;	// 0x31aa3655
// converted property getter: - (id)positivePrefix;	// 0x31aa3915
// converted property getter: - (id)positiveSuffix;	// 0x31aa3a75
// converted property getter: - (id)roundingIncrement;	// 0x31aa5251
// converted property getter: - (unsigned)roundingMode;	// 0x31aa5105
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x31aa4a61
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x31a0fabd
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x31a30875
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x31aa3f55
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x31aa2e8d
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x31aa5999
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x31aa40b5
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x31aa2c7d
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x31aa48f5
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x31aa4c79
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x31a30689
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x31a1f7a9
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x31aa30a1
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x31a2b09d
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x31aa4215
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x31aa5aed
// converted property setter: - (void)setLocale:(id)locale;	// 0x31a1f73d
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x31aa5845
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x31a256a1
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x31aa5549
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x31aa5ec1
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x31aa5789
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x31a308f9
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x31a30979
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x31aa5d75
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x31aa4635
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x31aa4db9
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x31aa2685
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x31a0fa65
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x31aa3c95
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x31aa3df5
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x31a0f9b5
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x31aa34d9
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x31a14b65
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x31aa4f19
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x31aa5085
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x31aa5f89
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x31aa44d5
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x31aa4375
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x31aa4795
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x31aa296d
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x31a0fa0d
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x31aa39d5
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x31aa3b35
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x31aa5311
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x31aa51d1
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x31aa4b2d
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x31aa38bd
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x31aa2871
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x31aa33c1
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x31aa35fd
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x31aa375d
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x31aa2b25
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x31aa3261
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x31a13181
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x31aa5c25
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x31aa313d
- (id)stringForObjectValue:(id)objectValue;	// 0x31a1321d
- (id)stringFromNumber:(id)number;	// 0x31a13205
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x31aa3839
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x31aa27ed
// converted property getter: - (id)textAttributesForNil;	// 0x31aa333d
// converted property getter: - (id)textAttributesForNotANumber;	// 0x31aa3579
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x31aa36d9
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x31aa2aa1
// converted property getter: - (id)textAttributesForZero;	// 0x31aa31dd
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x31aa2f2d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x31aa5b71
// converted property getter: - (id)zeroSymbol;	// 0x31a282c5
@end

