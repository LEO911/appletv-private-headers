/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISConstraint.h"

@class NSString;

@interface NSLayoutConstraint : NSObject <NSISConstraint> {
@private
	id _container;	// 4 = 0x4
	id _firstItem;	// 8 = 0x8
	id _secondItem;	// 12 = 0xc
	float _constant;	// 16 = 0x10
	float _loweredConstant;	// 20 = 0x14
	id _markerAndPositiveExtraVar;	// 24 = 0x18
	id _negativeExtraVar;	// 28 = 0x1c
	float _coefficient;	// 32 = 0x20
	float _priority;	// 36 = 0x24
	unsigned long long _layoutConstraintFlags;	// 40 = 0x28
	id _flange;	// 48 = 0x30
}
@property(retain) id animations;	// G=0x31b2c629; S=0x31b2c639; converted property
@property(assign) float constant;	// G=0x31b2cee1; S=0x31b2cf9d; 
@property(assign) id container;	// G=0x31b2ca1d; S=0x31b2ca41; 
@property(assign) int firstAttribute;	// G=0x31b2bd39; 
@property(assign) id firstItem;	// G=0x31b302f9; @synthesize=_firstItem
@property(readonly, assign) BOOL hasBeenLowered;	// G=0x31b2c401; 
@property(copy) NSString *identifier;	// G=0x31b2c609; S=0x31b2c619; 
@property(assign) float multiplier;	// G=0x31b2bebd; 
@property(assign) float priority;	// G=0x31b2c109; S=0x31b2c119; 
@property(assign) int relation;	// G=0x31b2bdf5; 
@property(assign) int secondAttribute;	// G=0x31b2c019; 
@property(assign) id secondItem;	// G=0x31b30325; @synthesize=_secondItem
@property(assign) BOOL shouldBeArchived;	// G=0x31b2c0dd; S=0x31b2c0f1; 
@property(copy) NSString *symbolicConstant;	// G=0x31b2d18d; S=0x31b2d19d; 
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by constant:(float)constant;	// 0x31b302bd
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5;	// 0x31b30285
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 constant:(float)constant;	// 0x31b30245
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier;	// 0x31b3020d
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier constant:(float)constant;	// 0x31b2ff05
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant;	// 0x31b2fbfd
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant theme:(id)theme;	// 0x31b2fbed
+ (id)constraintsWithVisualFormat:(id)visualFormat options:(unsigned)options metrics:(id)metrics views:(id)views;	// 0x31b2fbd1
- (id)init;	// 0x31b2d1b1
- (id)initWithCoder:(id)coder;	// 0x31b2e465
- (void)_addToEngine:(id)engine;	// 0x31b2ef3d
- (BOOL)_addToEngine:(id)engine integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x31b2ed2d
- (float)_allowedMagnitudeForIntegralizationAdjustment;	// 0x31b2c689
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)markerScaling;	// 0x31b2c7f9
- (void)_clearWeakContainerReference;	// 0x31b2ca59
- (id)_constantDescriptionForDTrace;	// 0x31b2ce69
- (id)_constraintByReplacingItem:(id)item withItem:(id)item2;	// 0x31b2e7e5
- (id)_constraintByReplacingView:(id)view withView:(id)view2;	// 0x31b2e9e5
- (int)_constraintType;	// 0x31b2d291
- (void)_containerGeometryDidChange;	// 0x31b2ca6d
- (BOOL)_deferDTraceLogging;	// 0x31b2c991
- (BOOL)_describesSameRestrictionAsConstraint:(id)constraint;	// 0x31b2e9f5
- (id)_descriptionforSymbolicConstant;	// 0x31b2cddd
- (BOOL)_effectiveConstant:(float *)constant error:(id *)error;	// 0x31b2cb91
- (CGSize)_engineToContainerScalingCoefficients;	// 0x31b2f299
- (float)_fudgeIncrement;	// 0x31b2c679
- (id)_identifier;	// 0x31b2c42d
- (BOOL)_isFudgeable;	// 0x31b2c64d
- (BOOL)_loweredConstantIsRounded;	// 0x31b2ca2d
- (id)_loweredExpression;	// 0x31b2f5a5
- (id)_loweredExpressionReportingConstantIsRounded:(BOOL *)rounded;	// 0x31b2f2d9
- (void)_makeExtraVars;	// 0x31b2f0a1
- (id)_markerAndPositiveExtraVar;	// 0x31b2c8e9
- (id)_negativeExtraVar;	// 0x31b2c93d
- (BOOL)_nsib_isRedundant;	// 0x31b2fb91
- (BOOL)_nsib_isRedundantInEngine:(id)engine;	// 0x31b2f775
- (int)_primitiveConstraintType;	// 0x31b2c9bd
- (id)_priorityDescription;	// 0x31b2d9d5
- (void)_removeFromEngine:(id)engine;	// 0x31b2ef5d
- (void)_setDeferDTraceLogging:(BOOL)logging;	// 0x31b2c9a5
- (void)_setFirstAttribute:(int)attribute;	// 0x31b2bd49
- (void)_setFirstItem:(id)item;	// 0x31b3030d
- (void)_setIdentifier:(id)identifier;	// 0x31b2c4b9
- (void)_setMarkerAndPositiveErrorVar:(id)var;	// 0x31b2c8f9
- (void)_setMultiplier:(float)multiplier;	// 0x31b2becd
- (void)_setNegativeExtraVar:(id)var;	// 0x31b2c94d
- (void)_setPrimitiveConstraintType:(int)type;	// 0x31b2c9e9
- (void)_setRelation:(int)relation;	// 0x31b2be0d
- (void)_setSecondAttribute:(int)attribute;	// 0x31b2c02d
- (void)_setSecondItem:(id)item;	// 0x31b30339
- (void)_setSymbolicConstant:(id)constant;	// 0x31b2d051
- (void)_setSymbolicConstant:(id)constant constant:(float)constant2;	// 0x31b2cc35
- (id)_symbolicConstant;	// 0x31b2cfb1
// converted property getter: - (id)animations;	// 0x31b2c629
- (id)asciiArtDescription;	// 0x31b2d595
// declared property getter: - (float)constant;	// 0x31b2cee1
// declared property getter: - (id)container;	// 0x31b2ca1d
- (void)dealloc;	// 0x31b2d205
- (id)description;	// 0x31b2de1d
- (id)descriptionAccessory;	// 0x31b2da55
- (void)encodeWithCoder:(id)coder;	// 0x31b2e1b1
- (id)equationDescription;	// 0x31b2da59
// declared property getter: - (int)firstAttribute;	// 0x31b2bd39
// declared property getter: - (id)firstItem;	// 0x31b302f9
// declared property getter: - (BOOL)hasBeenLowered;	// 0x31b2c401
// declared property getter: - (id)identifier;	// 0x31b2c609
// declared property getter: - (float)multiplier;	// 0x31b2bebd
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)marker;	// 0x31b2c8cd
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x31b2f5f9
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x31b2c8e1
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x31b2c8dd
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x31b2c8e5
// declared property getter: - (float)priority;	// 0x31b2c109
- (float)priorityForVariable:(id)variable;	// 0x31b2ed1d
// declared property getter: - (int)relation;	// 0x31b2bdf5
// declared property getter: - (int)secondAttribute;	// 0x31b2c019
// declared property getter: - (id)secondItem;	// 0x31b30325
// converted property setter: - (void)setAnimations:(id)animations;	// 0x31b2c639
// declared property setter: - (void)setConstant:(float)constant;	// 0x31b2cf9d
// declared property setter: - (void)setContainer:(id)container;	// 0x31b2ca41
- (void)setHasBeenLowered:(BOOL)lowered;	// 0x31b2c415
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x31b2c619
// declared property setter: - (void)setPriority:(float)priority;	// 0x31b2c119
// declared property setter: - (void)setShouldBeArchived:(BOOL)beArchived;	// 0x31b2c0f1
// declared property setter: - (void)setSymbolicConstant:(id)constant;	// 0x31b2d19d
// declared property getter: - (BOOL)shouldBeArchived;	// 0x31b2c0dd
// declared property getter: - (id)symbolicConstant;	// 0x31b2d18d
@end

