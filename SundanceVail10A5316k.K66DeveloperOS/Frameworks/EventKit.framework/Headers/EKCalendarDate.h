/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"
#import "NSMutableCopying.h"

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x30dfba45; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x30dee879
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x30df15c1
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x30deff4d
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x30dfd399
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x30e549e5
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x30dee8c1
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x30df1605
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x30deff8d
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x30defeb1
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x30dfd3ed
- (double)absoluteTime;	// 0x30def26d
- (id)calendarDateByAddingDays:(int)days;	// 0x30df02a1
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x30df02d1
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x30e54bb5
- (id)calendarDateForDay;	// 0x30df0121
- (id)calendarDateForEndOfDay;	// 0x30df03c9
- (id)calendarDateForEndOfMonth;	// 0x30df5249
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x30df5085
- (id)calendarDateForMonth;	// 0x30df5165
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x30def1c1
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x30def1d5
- (id)calendarDateForYear;	// 0x30e54dc5
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x30e07195
- (id)calendarDateWithDate:(id)date;	// 0x30e54be9
- (int)compare:(id)compare;	// 0x30df25cd
- (id)components;	// 0x30e07299
- (id)copyWithZone:(NSZone *)zone;	// 0x30def1b1
- (id)date;	// 0x30df04c1
- (unsigned)day;	// 0x30e0bae9
- (unsigned)dayOfWeek;	// 0x30e0ae09
- (unsigned)dayOfYear;	// 0x30e54cc9
- (unsigned)daysInMonth;	// 0x30df5351
- (unsigned)daysInYear;	// 0x30e54d2d
- (void)dealloc;	// 0x30df1815
- (id)description;	// 0x30e54a65
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x30df1fcd
- (int)differenceInDays:(id)days;	// 0x30df5049
- (int)differenceInMonths:(id)months;	// 0x30e0ba8d
- (int)differenceInYears:(id)years;	// 0x30e54c29
- (id)earlierDate:(id)date;	// 0x30e0be9d
- (XXStruct_lQVxyC)gregorianDate;	// 0x30df01fd
- (unsigned)hour;	// 0x30e0a5ad
- (BOOL)isEqual:(id)equal;	// 0x30dfc6e5
- (id)laterDate:(id)date;	// 0x30e54eb5
- (unsigned)minute;	// 0x30e0a5e1
- (unsigned)month;	// 0x30e54c95
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x30e0ad61
- (double)second;	// 0x30e0a619
- (int)secondsFromGMT;	// 0x30e54b75
// converted property getter: - (id)timeZone;	// 0x30dfba45
- (unsigned)weekOfYear;	// 0x30e54cf9
- (unsigned)weeksInYear;	// 0x30e54d75
- (unsigned)year;	// 0x30e54c65
@end

