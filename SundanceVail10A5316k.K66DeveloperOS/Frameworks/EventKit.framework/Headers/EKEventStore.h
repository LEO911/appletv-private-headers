/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSMutableSet, EKDaemonConnection, EKCalendar, NSNumber, NSString, NSTimeZone, NSArray;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject {
@private
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKCalendar *_defaultCalendarForNewEvents;	// 32 = 0x20
	EKCalendar *_defaultCalendarForNewReminders;	// 36 = 0x24
	EKDaemonConnection *_database;	// 40 = 0x28
	double _lastDatabaseNotificationTimestamp;	// 44 = 0x2c
	unsigned long _flags;	// 52 = 0x34
	NSTimeZone *_timeZone;	// 56 = 0x38
	NSMutableDictionary *_calendars;	// 60 = 0x3c
	NSMutableDictionary *_sources;	// 64 = 0x40
	NSMutableSet *_objectsPendingCommit;	// 68 = 0x44
	NSObject<OS_dispatch_queue> *_calendarQueue;	// 72 = 0x48
	NSObject<OS_dispatch_queue> *_registeredQueue;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *_unsavedChangesQueue;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_dbChangedQueue;	// 84 = 0x54
	NSMutableDictionary *_cachedValidatedEmails;	// 88 = 0x58
}
@property(retain, nonatomic) NSMutableDictionary *_cachedValidatedEmails;	// G=0x30e384ed; S=0x30e384fd; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x30e3840d; S=0x30e3841d; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewEvents;	// G=0x30e38361; S=0x30e38371; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewReminders;	// G=0x30e38381; S=0x30e38391; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x30e3842d; S=0x30e3843d; @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *calendarQueue;	// G=0x30e3846d; S=0x30e3847d; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x30e06c71; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x30e383a1; S=0x30e383b1; @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;	// G=0x30e384cd; S=0x30e384dd; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x30dfc005; S=0x30e381b1; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x30dfcf91; 
@property(retain) EKCalendar *defaultCalendarForNewReminders;	// G=0x30e32b45; S=0x30e32cc5; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x30dfac91; S=0x30e3816d; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x30e38321; S=0x30e38331; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x30e3018d; 
@property(assign, nonatomic) unsigned long flags;	// G=0x30e383ed; S=0x30e383fd; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x30e38301; S=0x30e38311; @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// G=0x30e383c1; S=0x30e383d9; @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x30e3844d; S=0x30e3845d; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x30e382e1; S=0x30e382f1; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x30e382c1; S=0x30e382d1; @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;	// G=0x30e3848d; S=0x30e3849d; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x30deaf59; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x30de99ed; S=0x30ded781; @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;	// G=0x30e384ad; S=0x30e384bd; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x30e38341; S=0x30e38351; @synthesize=_updatedObjects
+ (int)authorizationStatusForEntityType:(unsigned)entityType;	// 0x30e2ed9d
+ (Class)classForEntityName:(id)entityName;	// 0x30deb4b1
+ (Class)publicClassForEntityName:(id)entityName;	// 0x30df4ac9
- (id)init;	// 0x30de9885
- (id)initWithAccessToEntityTypes:(unsigned)entityTypes;	// 0x30e2eaa1
- (id)initWithAccessToEntityTypes:(unsigned)entityTypes options:(unsigned long)options path:(id)path;	// 0x30e2eac1
- (void)_accessStatusChanged;	// 0x30e2ef5d
- (id)_addFetchedObjectWithID:(id)anId;	// 0x30deb209
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x30e02b79
- (id)_allCalendars;	// 0x30df5ae5
// declared property getter: - (id)_cachedValidatedEmails;	// 0x30e384ed
- (BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;	// 0x30df5cfd
- (id)_calendarItemsMatchingPredicate:(id)predicate;	// 0x30e33195
- (id)_calendarWithID:(id)anId;	// 0x30e30f79
// declared property getter: - (id)_calendars;	// 0x30e3840d
- (void)_databaseChangedExternally;	// 0x30e04a71
// declared property getter: - (id)_defaultCalendarForNewEvents;	// 0x30e38361
// declared property getter: - (id)_defaultCalendarForNewReminders;	// 0x30e38381
- (void)_deleteObject:(id)object;	// 0x30e06935
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x30e31851
- (void)_forgetRegisteredObjects;	// 0x30e35855
- (void)_insertObject:(id)object;	// 0x30dfebed
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x30e31511
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x30df5fd1
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x30df6661
- (void)_protectedDataDidBecomeAvailable;	// 0x30e38165
- (void)_protectedDataWillBecomeUnavailable;	// 0x30e38161
- (void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;	// 0x30e352e1
- (void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;	// 0x30e35071
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x30e3551d
- (void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x30e351ad
- (void)_registerObject:(id)object;	// 0x30dfa6ad
- (void)_registerObjectImmediate:(id)immediate;	// 0x30deb90d
- (void)_requestAuthorizationStatusForEntityType:(unsigned)entityType;	// 0x30e2ede9
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x30e0446d
- (void)_saveWithoutNotify;	// 0x30e301ed
// declared property getter: - (id)_sources;	// 0x30e3842d
- (void)_trackModifiedObject:(id)object;	// 0x30e0911d
- (void)_unregisterObject:(id)object;	// 0x30e06b8d
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x30e04d1d
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x30e37931
- (id)alarmWithUUID:(id)uuid;	// 0x30e37845
- (void)cacheValidationStatusForEmail:(id)email status:(int)status;	// 0x30e381f5
- (id)calendarItemWithIdentifier:(id)identifier;	// 0x30e32f11
- (id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;	// 0x30e33031
// declared property getter: - (id)calendarQueue;	// 0x30e3846d
- (id)calendarWithExternalURI:(id)externalURI;	// 0x30e33cf5
- (id)calendarWithID:(id)anId;	// 0x30df097d
- (id)calendarWithIdentifier:(id)identifier;	// 0x30df64c9
// declared property getter: - (id)calendars;	// 0x30e06c71
- (id)calendarsForEntityType:(unsigned)entityType;	// 0x30e309e1
- (void)cancelFetchRequest:(id)request;	// 0x30e377e9
- (id)changesSinceSequenceNumber:(int)number;	// 0x30e2f011
- (id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;	// 0x30e33c09
- (BOOL)commit:(id *)commit;	// 0x30e02be9
- (id)connection;	// 0x30dea6e1
- (CGColorRef)copyCGColorForNewCalendar;	// 0x30e32805
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x30df67e1
- (void)daemonRestarted;	// 0x30e30141
// declared property getter: - (id)database;	// 0x30e383a1
// declared property getter: - (id)dbChangedQueue;	// 0x30e384cd
- (void)dealloc;	// 0x30deaaed
- (id)defaultAllDayAlarm;	// 0x30dfbf91
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x30dfc005
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x30dfcf91
// converted property getter: - (id)defaultCalendarForNewReminders;	// 0x30e32b45
- (id)defaultTimedAlarm;	// 0x30dfac1d
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x30dfac91
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x30e312e9
// declared property getter: - (id)deletedObjects;	// 0x30e38321
- (id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x30e34421
- (int)emailAddressValidationStatus:(id)status;	// 0x30e38289
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x30e3757d
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x30df9555
- (id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;	// 0x30e31a81
// declared property getter: - (id)eventStoreIdentifier;	// 0x30e3018d
- (id)eventWithIdentifier:(id)identifier;	// 0x30e31419
- (id)eventWithUUID:(id)uuid;	// 0x30e33b19
- (id)eventWithUniqueId:(id)uniqueId;	// 0x30e31b8d
- (id)eventsMatchingPredicate:(id)predicate;	// 0x30de9e75
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x30dea031
- (BOOL)fetchProperties:(id)properties forReminders:(id)reminders;	// 0x30e33809
- (id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x30e0bc95
// declared property getter: - (unsigned long)flags;	// 0x30e383ed
- (BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id *)error;	// 0x30e30735
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x30e32065
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x30e325c1
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x30e3215d
- (id)insertNewEvent;	// 0x30e33dd5
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x30e33e31
- (id)insertNewReminder;	// 0x30e33355
// declared property getter: - (id)insertedObjects;	// 0x30e38301
- (id)inviteReplyNotifications;	// 0x30e34b59
- (int)inviteReplyNotificationsCount;	// 0x30e34b31
- (BOOL)isDataProtected;	// 0x30de99e9
// declared property getter: - (double)lastDatabaseNotificationTimestamp;	// 0x30e383c1
- (id)localSource;	// 0x30e30521
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x30df5f49
- (BOOL)markCalendarAlerted:(id)alerted;	// 0x30e308fd
- (void)markEventAlerted:(id)alerted;	// 0x30e31fe1
- (BOOL)markInviteReplyNotificationAlerted:(id)alerted;	// 0x30e34de9
- (void)markNotificationsAlertedAndSave:(id)save;	// 0x30e341f5
- (BOOL)markResourceChangeAlerted:(id)alerted error:(id *)error;	// 0x30e34899
- (int)notifiableEventCount;	// 0x30e343f5
- (id)objectWithObjectID:(id)objectID;	// 0x30df0a19
// declared property getter: - (id)objectsPendingCommit;	// 0x30e3844d
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;	// 0x30e34059
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;	// 0x30e33e9d
- (BOOL)occurrenceCacheOccurrencesAreBeingGenerated;	// 0x30e33e71
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x30e33635
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x30df74c9
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x30e336c9
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;	// 0x30e33511
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x30df6629
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x30df6e79
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x30df0c35
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;	// 0x30e37ea1
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x30e37fad
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;	// 0x30e335fd
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x30e335c5
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;	// 0x30e33461
- (id)predicateForNotifiableEvents;	// 0x30e380ed
- (id)predicateForNotificationCenterVisibleEvents;	// 0x30e38109
- (id)predicateForRemindersInCalendars:(id)calendars;	// 0x30e33419
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x30e0bc55
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x30e3366d
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x30e336ed
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;	// 0x30e33729
- (id)predicateForUnacknowledgedEvents;	// 0x30e38125
- (id)predicateForUnalertedEvents;	// 0x30de9e21
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x30e38145
- (id)publicObjectWithObjectID:(id)objectID;	// 0x30e35c79
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x30df4289
// declared property getter: - (id)publicRegisteredObjects;	// 0x30e382e1
- (int)readWriteCalendarCountForEntityType:(unsigned)entityType;	// 0x30dfb6d1
- (id)readWriteCalendarsForEntityType:(unsigned)entityType;	// 0x30df59ad
- (void)refreshSourcesIfNecessary;	// 0x30e35651
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x30dece09
- (id)registerFetchedObjectWithID:(id)anId;	// 0x30deb1bd
- (id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;	// 0x30e35949
// declared property getter: - (id)registeredObjects;	// 0x30e382c1
// declared property getter: - (id)registeredQueue;	// 0x30e3848d
- (oneway void)release;	// 0x30de9da5
- (id)reminderWithExternalURI:(id)externalURI;	// 0x30e32dd5
- (id)remindersMatchingPredicate:(id)predicate;	// 0x30df6eb1
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x30e3122d
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x30e31139
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x30e05da5
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x30e05d7d
- (BOOL)removeInviteReplyNotification:(id)notification error:(id *)error;	// 0x30e34ed9
- (BOOL)removeInviteReplyNotifications:(id)notifications error:(id *)error;	// 0x30e34f15
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x30e0bdc5
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x30e0bda5
- (BOOL)removeResourceChange:(id)change error:(id *)error;	// 0x30e34999
- (BOOL)removeResourceChanges:(id)changes error:(id *)error;	// 0x30e349d5
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x30e306a9
- (void)reset;	// 0x30e36601
- (id)resourceChangesForEntityTypes:(unsigned)entityTypes;	// 0x30e346ad
- (void)rollback;	// 0x30e36301
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x30e31159
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x30e31119
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x30dfea39
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x30dfea11
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x30e07cb9
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x30e090e1
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x30e30601
- (int)sequenceNumber;	// 0x30e2efb9
- (unsigned)serverPort;	// 0x30de9a6d
// declared property setter: - (void)setCalendarQueue:(id)queue;	// 0x30e3847d
// declared property setter: - (void)setDatabase:(id)database;	// 0x30e383b1
// declared property setter: - (void)setDbChangedQueue:(id)queue;	// 0x30e384dd
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x30e381b1
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x30e32a39
// converted property setter: - (void)setDefaultCalendarForNewReminders:(id)newReminders;	// 0x30e32cc5
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x30e3816d
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x30e38331
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x30e383fd
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x30e38311
- (BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id *)error;	// 0x30e31c79
- (BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id *)error;	// 0x30e31d9d
// declared property setter: - (void)setLastDatabaseNotificationTimestamp:(double)timestamp;	// 0x30e383d9
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x30e3845d
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x30e382f1
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x30e382d1
// declared property setter: - (void)setRegisteredQueue:(id)queue;	// 0x30e3849d
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x30ded781
// declared property setter: - (void)setUnsavedChangesQueue:(id)queue;	// 0x30e384bd
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x30e38351
// declared property setter: - (void)set_cachedValidatedEmails:(id)emails;	// 0x30e384fd
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x30e3841d
// declared property setter: - (void)set_defaultCalendarForNewEvents:(id)newEvents;	// 0x30e38371
// declared property setter: - (void)set_defaultCalendarForNewReminders:(id)newReminders;	// 0x30e38391
// declared property setter: - (void)set_sources:(id)sources;	// 0x30e3843d
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;	// 0x30e34521
- (id)sourceWithIdentifier:(id)identifier;	// 0x30df49bd
// converted property getter: - (id)sources;	// 0x30deaf59
// declared property getter: - (id)timeZone;	// 0x30de99ed
- (int)unacknowledgedEventCount;	// 0x30e343c9
// declared property getter: - (id)unsavedChangesQueue;	// 0x30e384ad
// declared property getter: - (id)updatedObjects;	// 0x30e38341
@end

