/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardLayout.h"

@class NSMutableDictionary, UIKBKeyplaneView, UISwipeGestureRecognizer, NSString, UIKBBackgroundView, NSMutableSet, UIDelayedAction, NSTimer, CADisplayLink, UIKBTree;
@protocol UIKeyboardRivenTransitionView;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout {
@private
	UIKBTree *_keyboard;	// 104 = 0x68
	UIKBTree *_keyplane;	// 108 = 0x6c
	NSString *_keyboardName;	// 112 = 0x70
	NSString *_keyplaneName;	// 116 = 0x74
	int _appearance;	// 120 = 0x78
	UIKBTree *_activeKey;	// 124 = 0x7c
	UIKBKeyplaneView *_keyplaneView;	// 128 = 0x80
	UIKBBackgroundView *_backgroundView;	// 132 = 0x84
	int _keyboardType;	// 136 = 0x88
	CGPoint _initialDragPoint;	// 140 = 0x8c
	CGPoint _dragPrevPoint;	// 148 = 0x94
	float _dragValues[4];	// 156 = 0x9c
	float _dragVelocity;	// 172 = 0xac
	double _prevTouchUpTime;	// 176 = 0xb0
	double _prevTouchDownTime;	// 184 = 0xb8
	int _prevUpActions;	// 192 = 0xc0
	NSMutableDictionary *_keyboards;	// 196 = 0xc4
	NSMutableDictionary *_allKeyplaneViews;	// 200 = 0xc8
	NSMutableSet *_allKeyplaneKeycaps;	// 204 = 0xcc
	NSMutableSet *_validInputStrings;	// 208 = 0xd0
	NSString *_localizedInputKey;	// 212 = 0xd4
	CFDictionaryRef _extendedTouchInfoMap;	// 216 = 0xd8
	int _preferredTrackingChangeCount;	// 220 = 0xdc
	int _shiftTrackingChangeCount;	// 224 = 0xe0
	NSMutableSet *_accentInfo;	// 228 = 0xe4
	NSMutableSet *_hasAccents;	// 232 = 0xe8
	NSMutableDictionary *_delegatesForKeyplaneKeys;	// 236 = 0xec
	id _spaceTarget;	// 240 = 0xf0
	SEL _spaceAction;	// 244 = 0xf4
	SEL _spaceLongAction;	// 248 = 0xf8
	id _returnTarget;	// 252 = 0xfc
	SEL _returnAction;	// 256 = 0x100
	SEL _returnLongAction;	// 260 = 0x104
	id _deleteTarget;	// 264 = 0x108
	SEL _deleteAction;	// 268 = 0x10c
	SEL _deleteLongAction;	// 272 = 0x110
	BOOL _secureTextEntry;	// 276 = 0x114
	BOOL _shift;	// 277 = 0x115
	BOOL _autoshift;	// 278 = 0x116
	BOOL _settingShift;	// 279 = 0x117
	BOOL _didLongPress;	// 280 = 0x118
	BOOL _dragged;	// 281 = 0x119
	BOOL _dragChangedKey;	// 282 = 0x11a
	BOOL _touchDownInMoreKey;	// 283 = 0x11b
	BOOL _touchDownInShiftKey;	// 284 = 0x11c
	BOOL _touchDownInDeleteKey;	// 285 = 0x11d
	BOOL _wasShifted;	// 286 = 0x11e
	BOOL _dragDismissStarted;	// 287 = 0x11f
	BOOL _swipeDetected;	// 288 = 0x120
	BOOL _previousTouchInMore;	// 289 = 0x121
	BOOL _showIntlKey;	// 290 = 0x122
	BOOL _showDictationKey;	// 291 = 0x123
	BOOL _shiftLockReady;	// 292 = 0x124
	double _shiftLockFirstTapTime;	// 296 = 0x128
	UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 304 = 0x130
	UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 308 = 0x134
	UISwipeGestureRecognizer *_upSwipeRecognizer;	// 312 = 0x138
	UIView<UIKeyboardRivenTransitionView> *_transitionView;	// 316 = 0x13c
	float _initialSplitProgress;	// 320 = 0x140
	float _finalSplitProgress;	// 324 = 0x144
	float _initialPinchSeparation;	// 328 = 0x148
	float _pinchSeparationValues[4];	// 332 = 0x14c
	BOOL _pinchDetected;	// 348 = 0x15c
	double _autoSplitLastUpdate;	// 352 = 0x160
	float _autoSplitElapsedTime;	// 360 = 0x168
	CADisplayLink *_displayLink;	// 364 = 0x16c
	BOOL _ghostKeysEnabled;	// 368 = 0x170
	UIDelayedAction *_delayedCentroidUpdate;	// 372 = 0x174
	BOOL _isRebuilding;	// 376 = 0x178
	BOOL _preRotateShift;	// 377 = 0x179
	NSString *_preRotateKeyplaneName;	// 380 = 0x17c
	CGPoint _keyPeripheralInset;	// 384 = 0x180
	int _lastFlickDirection;	// 392 = 0x188
	UIView *_flickPopupView;	// 396 = 0x18c
	NSMutableDictionary *_compositeImages;	// 400 = 0x190
	NSTimer *_flickPopuptimer;	// 404 = 0x194
	id _touchInfo;	// 408 = 0x198
	BOOL _popupViewIsShown;	// 412 = 0x19c
	UIView *_dimKeyboardImageView;	// 416 = 0x1a0
	BOOL _keyboardImageViewIsDim;	// 420 = 0x1a4
	BOOL _isOutOfBounds;	// 421 = 0x1a5
}
@property(retain, nonatomic) UIKBTree *activeKey;	// G=0x301d864d; S=0x30189bdd; @synthesize=_activeKey
@property(assign, nonatomic) BOOL autoShift;	// G=0x3031ed45; S=0x3031ed55; @synthesize=_autoshift
@property(assign, nonatomic) BOOL didLongPress;	// G=0x3031ed65; S=0x3031ed75; @synthesize=_didLongPress
@property(readonly, assign, nonatomic) UIKBTree *keyboard;	// G=0x3020dddd; @synthesize=_keyboard
@property(copy, nonatomic) NSString *keyboardName;	// G=0x3031ed0d; S=0x3031ed21; @synthesize=_keyboardName
@property(readonly, assign, nonatomic) UIKBTree *keyplane;	// G=0x3016baf5; @synthesize=_keyplane
@property(copy, nonatomic) NSString *keyplaneName;	// G=0x3016bb09; S=0x3016bb21; @synthesize=_keyplaneName
@property(copy, nonatomic) NSString *localizedInputKey;	// G=0x3031eda5; S=0x3016bae1; @synthesize=_localizedInputKey
@property(readonly, assign, nonatomic) NSString *localizedInputMode;	// G=0x3016ba95; 
@property(readonly, assign) BOOL pinchDetected;	// G=0x301740e1; converted property
@property(readonly, assign, nonatomic, getter=isRotating) BOOL rotating;	// G=0x30172459; 
@property(assign, nonatomic) BOOL shift;	// G=0x3031ed35; S=0x30173a71; @synthesize=_shift
@property(readonly, assign, nonatomic) BOOL showDictationKey;	// G=0x3031ed95; @synthesize=_showDictationKey
@property(assign, nonatomic) BOOL showIntlKey;	// G=0x301702e5; S=0x3031ed85; @synthesize=_showIntlKey
- (id)initWithFrame:(CGRect)frame;	// 0x3016a651
- (void)_autoSplit:(id)split;	// 0x3031df19
- (id)_keyplaneVariantsKeyForString:(id)string;	// 0x3031c08d
- (void)activateCompositeKey:(id)key direction:(int)direction flickString:(id)string popupInfo:(id)info;	// 0x30320741
- (id)activationIndicatorView;	// 0x3031c8f5
// declared property getter: - (id)activeKey;	// 0x301d864d
- (id)activeTouchForKey:(id)key;	// 0x3020998d
- (CGPoint)applyError:(CGPoint)error toKey:(id)key;	// 0x3020e479
// declared property getter: - (BOOL)autoShift;	// 0x3031ed45
- (BOOL)backgroundNeedsRedraw;	// 0x3031ae89
- (id)baseKeyForString:(id)string;	// 0x3020da8d
- (id)cacheIdentifierForKeyplaneNamed:(id)keyplaneNamed withVisualStyle:(int)visualStyle;	// 0x30170225
- (id)cachedKeyplaneNameForKeyplane:(id)keyplane;	// 0x3017008d
- (BOOL)canProduceString:(id)string;	// 0x3020d7f1
- (BOOL)canReuseKeyplaneView;	// 0x3019b01d
- (void)cancelTouchIfNecessaryForInfo:(id)info;	// 0x30195ce5
- (id)candidateList;	// 0x3016ca5d
- (void)changeToKeyplane:(id)keyplane;	// 0x3020e385
- (void)clearAllKeyDelegates;	// 0x3016cbf5
- (void)clearAllTouchInfo;	// 0x3016d025
- (void)clearHandwritingStrokesIfNeeded;	// 0x30187139
- (void)clearInfoForTouch:(id)touch;	// 0x30195c9d
- (void)clearUnusedObjects:(BOOL)objects;	// 0x30319eb9
- (id)compositeImageForKey:(id)key;	// 0x3031f8b1
- (void)confirmAction;	// 0x3031ba91
- (void)deactivateActiveKeys;	// 0x30196c19
- (void)deactivateActiveKeysClearingTouchInfo:(BOOL)info clearingDimming:(BOOL)dimming;	// 0x3031b285
- (void)dealloc;	// 0x30319c75
- (id)defaultNameForKeyplaneName:(id)keyplaneName;	// 0x3016cbc9
- (void)deleteAction;	// 0x30209aa5
- (void)didClearInput;	// 0x301870f5
// declared property getter: - (BOOL)didLongPress;	// 0x3031ed65
- (void)didRotate;	// 0x3031eb15
- (int)displayTypeHintForMoreKey;	// 0x3016f955
- (int)displayTypeHintForShiftKey;	// 0x3016f7a5
- (BOOL)doesKeyCharging;	// 0x30173e61
- (unsigned)downActionFlagsForKey:(id)key;	// 0x3018a2f1
- (void)downActionShiftWithKey:(id)key;	// 0x30217991
- (void)finishSplit;	// 0x3031d825
- (void)finishSplitTransition;	// 0x3031da1d
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x3031db39
- (id)flickPopupStringForKey:(id)key withString:(id)string;	// 0x3031f3d1
- (id)flickStringForInputKey:(id)inputKey direction:(int)direction;	// 0x3031f40d
- (void)flushKeyCache:(id)cache;	// 0x3031a1e5
- (CGRect)frameForKeyWithRepresentedString:(id)representedString;	// 0x3031eeb1
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x3031a491
- (CGRect)frameForKeylayoutName:(id)keylayoutName onKeyplaneName:(id)name;	// 0x3031a429
- (CGRect)frameForLastKeyWithRepresentedString:(id)representedString;	// 0x3031f145
- (id)generateInfoForTouch:(id)touch;	// 0x30188f49
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x3031e661
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x3031e551
- (id)getFlickCompositeImageForKey:(id)key direction:(int)direction rect:(CGRect)rect;	// 0x3031fb15
- (id)getPopupBackgroundImageForKey:(id)key direction:(int)direction popupInfo:(id)info rect:(CGRect)rect;	// 0x3031f8d1
- (void)handleDismissFlickView:(id)view;	// 0x3032030d
- (void)handleFlick:(id)flick;	// 0x3031f4b9
- (void)handlePopupView:(id)view;	// 0x30320255
- (SEL)handlerForNotification:(id)notification;	// 0x3031a31d
- (BOOL)handwritingPlane;	// 0x301871c5
- (BOOL)hasCandidateKeys;	// 0x3031b6b9
- (float)hitBuffer;	// 0x30179501
- (BOOL)ignoresShiftState;	// 0x301b9261
- (id)infoForTouch:(id)touch;	// 0x301928d5
- (void)installGestureRecognizers;	// 0x3016a9e9
- (float)interpretPinchSeparationValues;	// 0x3031d459
- (void)interpretTouchesForSplit;	// 0x3031db71
- (BOOL)isLongPressedKey:(id)key;	// 0x3019315d
// declared property getter: - (BOOL)isRotating;	// 0x30172459
- (BOOL)isShiftKeyBeingHeld;	// 0x30173a0d
- (BOOL)isShiftKeyPlaneChooser;	// 0x3016cadd
- (BOOL)keyHasAccentedVariants:(id)variants;	// 0x3031e8f9
- (id)keyHitTest:(CGPoint)test;	// 0x301894ed
- (id)keyHitTestClosestToPoint:(CGPoint)point;	// 0x301d8461
- (id)keyHitTestContainingPoint:(CGPoint)point;	// 0x3031b379
- (id)keyHitTestForTouchInfo:(id)touchInfo touchStage:(int)stage;	// 0x30189029
- (id)keyHitTestWithoutCharging:(CGPoint)charging;	// 0x301884ed
- (id)keyWithRepresentedString:(id)representedString;	// 0x3031edb9
// declared property getter: - (id)keyboard;	// 0x3020dddd
// declared property getter: - (id)keyboardName;	// 0x3031ed0d
- (id)keyboardWithName:(id)name;	// 0x3016b6cd
- (int)keycodeForKey:(id)key;	// 0x30189b15
// declared property getter: - (id)keyplane;	// 0x3016baf5
- (id)keyplaneForKey:(id)key;	// 0x3020de35
// declared property getter: - (id)keyplaneName;	// 0x3016bb09
- (id)keyplaneNamed:(id)named;	// 0x3031ebb1
- (double)lastTouchUpTimestamp;	// 0x3031a7c9
// declared property getter: - (id)localizedInputKey;	// 0x3031eda5
// declared property getter: - (id)localizedInputMode;	// 0x3016ba95
- (void)longPressAction;	// 0x3031bac9
- (void)nextCandidatesAction;	// 0x3031ba5d
- (id)overlayCharacterImageForKey:(id)key direction:(int)direction rect:(CGRect)rect flickString:(id)string popupInfo:(id)info;	// 0x3031fb95
- (BOOL)performReturnAction;	// 0x3031e221
- (BOOL)performSpaceAction;	// 0x3031e25d
// converted property getter: - (BOOL)pinchDetected;	// 0x301740e1
- (BOOL)pinchSplitGestureEnabled;	// 0x3031db59
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x30188d79
- (id)popupKeyViews;	// 0x3031f28d
- (void)prepareForSplitTransition;	// 0x3031d5a9
- (void)rebuildSplitTransitionView;	// 0x3031aaed
- (void)rebuildSplitTransitionViewFromKeyplane:(id)keyplane toKeyplane:(id)keyplane2;	// 0x3031a7e1
- (void)refreshForDictationAvailablityDidChange;	// 0x3031b1b5
- (void)refreshForRivenPreferences;	// 0x3031a58d
- (void)refreshGhostKeyState;	// 0x301928e9
- (void)removeFromSuperview;	// 0x3031a129
- (CGImageRef)renderedImageWithStateFallbacksForToken:(id)token;	// 0x3031ab01
- (CGImageRef)renderedImageWithToken:(id)token;	// 0x3031ac19
- (CGImageRef)renderedKeyplaneWithToken:(id)token split:(BOOL)split;	// 0x3031adb9
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x3016d861
- (void)restoreDefaultsForAllKeys;	// 0x30172509
- (void)restoreDefaultsForKey:(id)key;	// 0x3017254d
- (id)scriptingInfoWithChildren;	// 0x3020d459
- (void)sendStringAction:(id)action forKey:(id)key isPopupVariant:(BOOL)variant;	// 0x3031b4c1
- (void)setAction:(SEL)action forKey:(id)key;	// 0x3031b735
// declared property setter: - (void)setActiveKey:(id)key;	// 0x30189bdd
// declared property setter: - (void)setAutoShift:(BOOL)shift;	// 0x3031ed55
- (void)setAutoshift:(BOOL)autoshift;	// 0x30173e19
- (void)setCompositeImage:(id)image forKey:(id)key;	// 0x3031f885
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)currentLocaleOnKeyplane;	// 0x3016fd49
- (void)setDelegate:(id)delegate forKey:(id)key;	// 0x3031b7bd
// declared property setter: - (void)setDidLongPress:(BOOL)longPress;	// 0x3031ed75
- (void)setKeyForTouchInfo:(id)touchInfo key:(id)key;	// 0x3031f3bd
- (void)setKeyboardAppearance:(int)appearance;	// 0x3016ccb5
- (void)setKeyboardDim:(BOOL)dim;	// 0x30320641
- (void)setKeyboardDim:(BOOL)dim amount:(float)amount withDuration:(float)duration;	// 0x30320359
// declared property setter: - (void)setKeyboardName:(id)name;	// 0x3031ed21
- (void)setKeyboardName:(id)name appearance:(int)appearance;	// 0x3016b3e9
// declared property setter: - (void)setKeyplaneName:(id)name;	// 0x3016bb21
- (void)setLabel:(id)label forKey:(id)key;	// 0x301725fd
// declared property setter: - (void)setLocalizedInputKey:(id)key;	// 0x3016bae1
- (void)setLongPressAction:(SEL)action forKey:(id)key;	// 0x3031b779
- (void)setReturnKeyEnabled:(BOOL)enabled withDisplayName:(id)displayName withType:(int)type;	// 0x30173561
// declared property setter: - (void)setShift:(BOOL)shift;	// 0x30173a71
// declared property setter: - (void)setShowIntlKey:(BOOL)key;	// 0x3031ed85
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x3031e099
- (void)setSplitProgress:(float)progress;	// 0x3031dec1
- (void)setState:(int)state forKey:(id)key;	// 0x301708b5
- (void)setTarget:(id)target forKey:(id)key;	// 0x3031b6f1
// declared property getter: - (BOOL)shift;	// 0x3031ed35
- (BOOL)shouldHitTestKey:(id)key;	// 0x3017317d
- (BOOL)shouldPreventInputManagerHitTestingForKey:(id)key;	// 0x30189a81
- (BOOL)shouldRetestKey:(id)key withKeyplane:(id)keyplane;	// 0x30192a05
- (BOOL)shouldShowDictationKey;	// 0x3031afa9
- (BOOL)shouldShowIndicator;	// 0x3031c891
// declared property getter: - (BOOL)showDictationKey;	// 0x3031ed95
- (void)showFlickView:(int)view withKey:(id)key flickString:(id)string;	// 0x3031f845
// declared property getter: - (BOOL)showIntlKey;	// 0x301702e5
- (void)showKeyboardType:(int)type appearance:(int)appearance orientation:(id)orientation withShift:(BOOL)shift;	// 0x3016ad89
- (void)showPopupVariantsForKey:(id)key;	// 0x3031c0d1
- (void)showPopupView:(int)view withKey:(id)key popupInfo:(id)info force:(BOOL)force;	// 0x303206d5
- (void)showSplitTransitionView:(BOOL)view;	// 0x3031d691
- (id)simulateTouch:(CGPoint)touch;	// 0x3031ebdd
- (id)simulateTouchForCharacter:(id)character errorVector:(CGPoint)vector shouldTypeVariants:(BOOL)variants baseKeyForVariants:(BOOL)variants4;	// 0x3020e12d
- (id)splitNameForKeyplane:(id)keyplane;	// 0x3031a3d1
- (id)splitNameForKeyplaneName:(id)keyplaneName;	// 0x3031a381
- (int)stateForKey:(id)key;	// 0x3031b265
- (int)stateForKeyplaneSwitchKey:(id)keyplaneSwitchKey;	// 0x3031b039
- (int)stateForShiftKey:(id)shiftKey;	// 0x301711a5
- (void)swipeDetected:(id)detected;	// 0x3031e7d9
- (void)touchCancelled:(id)cancelled;	// 0x3031e379
- (void)touchDown:(id)down;	// 0x30188a29
- (void)touchDownWithKey:(id)key atPoint:(CGPoint)point;	// 0x30189bf1
- (void)touchDragged:(id)dragged;	// 0x301d7521
- (id)touchForKey:(id)key;	// 0x302178ad
- (void)touchUp:(id)up;	// 0x30191251
- (void)uninstallGestureRecognizers;	// 0x3031e6e9
- (unsigned)upActionFlagsForKey:(id)key;	// 0x30192ac5
- (void)upActionShift;	// 0x30217c01
- (void)updateBackgroundIfNeeded;	// 0x301705bd
- (void)updateKeyCentroids;	// 0x30172b79
- (void)updateKeyboardForKeyplane:(id)keyplane;	// 0x3016d5ad
- (BOOL)updateKeysWithDelegates;	// 0x301729ad
- (void)updateLocalizedKeys:(BOOL)keys;	// 0x3016e4a1
- (void)updateLocalizedKeysOnKeyplane:(id)keyplane;	// 0x3016e68d
- (void)updateMoreAndInternationalKeys;	// 0x3016df11
- (void)updateShiftKeyState;	// 0x30173b95
- (void)updateTransitionWithFlags:(int)flags;	// 0x30173821
- (BOOL)usesAutoShift;	// 0x30173a3d
- (int)visualStyleForKeyboardIfSplit:(BOOL)keyboardIfSplit;	// 0x3031a741
- (void)willRotate;	// 0x3031eac5
@end

