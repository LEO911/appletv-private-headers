/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UIWebTiledView.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class DOMHTMLElement, UITextChecker, UIViewController, UIReferenceLibraryViewController, CALayer, WebView, UILongPressGestureRecognizer, DOMNode, UIAutoscroll, UIPopoverController, DOMElement, DOMRange, UITapGestureRecognizer, UIPanGestureRecognizer, UITextInputTraits, UITextRange, NSMutableSet, NSDictionary, NSArray, UITextPosition, NSTimer, UIWebSelectionAssistant, UIView, WebThreadSafeUndoManager, UIColor, UIImage, WebViewReachabilityObserver, UITextInteractionAssistant, UIWebRotatingSheet;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	int _selectionAffinity;	// 580 = 0x244
	UIPopoverController *_definePopoverController;	// 584 = 0x248
	UIReferenceLibraryViewController *_defineViewController;	// 588 = 0x24c
	UIPopoverController *_shortcutPopoverController;	// 592 = 0x250
	UIViewController *_shortcutViewController;	// 596 = 0x254
	DOMElement *_dictationResultPlaceholder;	// 600 = 0x258
	id _dictationResultPlaceholderRemovalObserver;	// 604 = 0x25c
	DOMRange *_rangeToRestoreAfterDictation;	// 608 = 0x260
@private
	BOOL _suppressesIncrementalRendering;	// 612 = 0x264
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x30215f81; S=0x302bd819; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x303393a1; S=0x30339331; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x302b6f79; S=0x302b6f7d; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x30212d65; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x303389b5; S=0x30110b85; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x30110301; S=0x3012b86d; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x30198331; S=0x3012bdf1; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x302b181d; S=0x3021464d; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x3012c565; converted property
@property(readonly, assign) int documentType;	// G=0x3012c515; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x302b3985; S=0x30113871; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x302b3bfd; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30162b71; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30159e05; S=0x3016829d; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x302b6001; 
@property(assign) id interactionDelegate;	// G=0x302bd69d; S=0x3012be01; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x302b3c51; S=0x30115979; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x302b3c8d; S=0x302b3c75; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x302b1805; S=0x3010f319; converted property
@property(retain) id markedText;	// G=0x301ba7dd; S=0x30212bed; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30169a6d; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x302b7b95; S=0x302b7b99; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x302b393d; S=0x302b38f5; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x302b81d1; S=0x302b81e1; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x30165df1; S=0x30162d9d; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30165e45; S=0x302b7df5; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x302b7df9; S=0x3017ec81; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x30186685; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x302b1b11; S=0x302b1af9; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x302b38e1; S=0x302b38c9; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x302b1ae1; S=0x302b1a79; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x302b3c65; S=0x30115afd; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x302b81f1; S=0x302b8201; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x302b5b25; S=0x302b59f9; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30169b89; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x301678e1; converted property
@property(assign) BOOL updatesScrollView;	// G=0x302b1e55; S=0x302b1e3d; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x302b6ed5; converted property
@property(readonly, retain) WebView *webView;	// G=0x300b6211; converted property
+ (id)_createDefaultHighlightView;	// 0x301c9999
+ (id)_sharedHighlightView;	// 0x301c9961
+ (double)getTimestamp;	// 0x301cc649
+ (BOOL)hasLandscapeOrientation;	// 0x302b1f1d
+ (void)initialize;	// 0x302b1249
+ (Class)layerClass;	// 0x3010ded1
+ (id)standardTextViewPreferences;	// 0x3010d6b9
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x3010d7c1
- (id)initWithFrame:(CGRect)frame;	// 0x30113841
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x3010d91d
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x301c6981
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x30215f81
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x302bc5bd
- (void)_addAdditionalSubview:(id)subview;	// 0x302b2cd5
- (void)_addShortcut:(id)shortcut;	// 0x302b68d5
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x302b241d
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x301c5ded
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x302bef79
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x302bf21d
- (void)_cancelLongPressGestureRecognizer;	// 0x301c9bb9
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x30113dcd
- (void)_clearAllConsoleMessages;	// 0x301154ed
- (void)_clearDoubleTapRect;	// 0x30115485
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x302b71a1
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x302b746d
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x302be015
- (BOOL)_dataDetectionIsActivated;	// 0x30113e89
- (void)_define:(id)define;	// 0x302b65b1
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x302b4529
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x30110f21
- (void)_didScroll;	// 0x301c9599
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x302b14b9
- (float)_documentScale;	// 0x301c8031
- (id)_documentUrl;	// 0x302b7e65
- (CGRect)_documentViewVisibleRect;	// 0x301151e5
- (id)_doubleTapGestureRecognizer;	// 0x302bd805
- (void)_doubleTapRecognized:(id)recognized;	// 0x302bc535
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x302bfa59
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x3011055d
- (void)_finishedUsingDictationPlaceholder;	// 0x302b4b55
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x302b75ad
- (id)_focusedOrMainFrame;	// 0x300b4e6d
- (id)_groupName;	// 0x3020b839
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x302b3b85
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x302b39a9
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x302b3bc1
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x302b31bd
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x301cdef1
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x302b1421
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x302b1439
- (BOOL)_isInspectorSearchingForNode;	// 0x302b7f05
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x301cb901
- (CGRect)_lastRectForRange:(id)range;	// 0x302b7ae5
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x30114fc5
- (void)_longPressRecognized:(id)recognized;	// 0x301cdb39
- (NSRange)_markedTextNSRange;	// 0x302b56c9
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x302b2c35
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x302b2bc9
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x3010e169
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x302b2165
- (void)_notifyPlugInViewsOfDidZoom;	// 0x302b2279
- (void)_notifyPlugInViewsOfScaleChange;	// 0x30114d49
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x302b2055
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x302b317d
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x302b3079
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x302b3015
- (id)_parentTextView;	// 0x30168551
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x302b79f9
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x302b1455
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x302beb71
- (Class)_printFormatterClass;	// 0x303da209
- (void)_promptForReplace:(id)replace;	// 0x302b6e7d
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x3012dae9
- (void)_removeAdditionalSubview:(id)subview;	// 0x302b2d41
- (void)_removeDefinitionController:(BOOL)controller;	// 0x301d8e81
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x302b3375
- (void)_resetForNewPage;	// 0x30115b99
- (void)_resetFormDataForFrame:(id)frame;	// 0x30114339
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x301ce029
- (void)_resetShowingTextStyle:(id)style;	// 0x302b126d
- (void)_reshapePlugInViews;	// 0x30111771
- (id)_responderForBecomeFirstResponder;	// 0x30216149
- (void)_restoreFlattenedContentLayers;	// 0x302b7731
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x301c6b49
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x3010ee89
- (void)_runLoadBlock:(id)block;	// 0x30113e51
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x301c8a39
- (id)_scriptingInfoForForm:(id)form;	// 0x302b8491
- (id)_scriptingInfoForLink:(id)link;	// 0x302b8215
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x302b7a81
- (CGRect)_selectionClipRect;	// 0x302b6145
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x301104e1
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x302bcd05
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x302bd819
- (void)_setDocumentScale:(float)scale;	// 0x301149f9
- (void)_setDocumentType:(int)type;	// 0x3012b941
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x30114449
- (void)_setParentTextView:(id)view;	// 0x3010f511
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x301c8015
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x302b7359
- (BOOL)_shouldResetForNewPage;	// 0x302b7ec5
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x302b3249
- (BOOL)_shouldUseInitialScale;	// 0x302b7161
- (void)_showDataDetectorsSheet;	// 0x302be7bd
- (void)_showImageSheet;	// 0x302be2c9
- (void)_showLinkSheet;	// 0x302be5a5
- (void)_showPendingContentLayers;	// 0x30115e09
- (void)_showTextStyleOptions:(id)options;	// 0x302b63f5
- (void)_singleTapRecognized:(id)recognized;	// 0x302153e9
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x30196179
- (id)_targetURL;	// 0x302bd249
- (id)_textSelectingContainer;	// 0x30198719
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x302bc579
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x302bc741
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x302b3ed1
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x302b3e25
- (void)_updateFixedPositionContent;	// 0x301c9cf1
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;	// 0x30114e5d
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x301d0569
- (void)_updateScrollViewBoundaryZoomScales;	// 0x3010f5f9
- (void)_updateSize;	// 0x301c64f5
- (void)_updateSubviewCaches;	// 0x301c819d
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x301c7b01
- (float)_zoomedDocumentScale;	// 0x301c6491
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x302bd2f9
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x302bd3e9
- (void)addInputString:(id)string;	// 0x302b3fb9
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x302b3f7d
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x301cde39
- (id)asText;	// 0x30339ce5
- (void)assistFormNode:(id)node;	// 0x302b3c35
- (void)attemptClick:(id)click;	// 0x30215b0d
- (id)automaticallySelectedOverlay;	// 0x3020f139
- (CGRect)autoscrollContentFrame;	// 0x302b6f51
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x303393a1
- (CGRect)autoscrollDragFrame;	// 0x302b6f2d
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x302b7dd1
- (BOOL)becomeFirstResponder;	// 0x30215e25
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x302b6f79
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x302bf769
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x302bf565
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x302bf701
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x302bf4d9
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x302bf509
- (void)beginSelectionChange;	// 0x30162b41
// declared property getter: - (id)beginningOfDocument;	// 0x30212d65
- (BOOL)canBecomeFirstResponder;	// 0x30215f69
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x30185e3d
- (BOOL)canResignFirstResponder;	// 0x30216179
- (void)cancelAutoscroll;	// 0x30339c11
- (void)cancelInteraction;	// 0x301cc611
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x301c9771
- (BOOL)cancelMouseTracking;	// 0x302b1fcd
- (BOOL)cancelTouchTracking;	// 0x302b2005
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x303389b5
- (CGRect)caretRect;	// 0x3010ff31
- (CGRect)caretRectForPosition:(id)position;	// 0x30167535
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x301677e1
- (unsigned short)characterAfterCaretSelection;	// 0x301866e9
- (unsigned short)characterBeforeCaretSelection;	// 0x301866b9
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x302b512d
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x302b7c71
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x302b7d65
- (id)checkSpellingOfString:(id)string;	// 0x301da585
- (void)clearInteractionTimer;	// 0x301c9921
- (void)clearRangedSelectionInitialExtent;	// 0x30338af5
- (void)clearSelection;	// 0x3033877d
- (BOOL)clearWKFirstResponder;	// 0x301dd701
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x303387d1
- (id)closestPositionToPoint:(CGPoint)point;	// 0x3017e4d5
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x302b7ba1
- (void)collapseSelection;	// 0x30338961
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x301b8ffd
- (void)completeInteraction;	// 0x301d0935
- (void)confirmMarkedText:(id)text;	// 0x302b50a5
- (BOOL)considerHeightForDoubleTap;	// 0x302b80bd
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x302c0021
- (BOOL)containsOnlySelectableElements;	// 0x302151d9
- (CGRect)contentFrameForView:(id)view;	// 0x3033941d
- (id)contentView;	// 0x302b7f29
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x302bc2a1
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x302b5ccd
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x301cd549
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x301cd4d9
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x3017e5b5
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x301cd41d
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x302b1a19
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x30110029
- (void)copy:(id)copy;	// 0x302b62e1
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x302b1f55
- (float)currentDocumentScale;	// 0x302b7f3d
- (void)cut:(id)cut;	// 0x302b6215
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x30110301
- (void)dealloc;	// 0x301d89ad
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x302bcf45
- (void)deferInteraction;	// 0x302bd1f9
- (void)deferredBecomeFirstResponder;	// 0x302b3d19
// converted property getter: - (id)delegate;	// 0x30198331
- (void)deleteBackward;	// 0x3020a7cd
- (void)deleteFromInput;	// 0x302b3fcd
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x302b181d
- (id)dictationInterpretations;	// 0x302b4e35
- (id)dictationResultMetadataForRange:(id)range;	// 0x302b44c9
- (void)didEndScroll;	// 0x301d045d
- (void)didEndZoom;	// 0x302b70b9
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x302b1519
- (void)didMoveToSuperview;	// 0x3010f5e9
- (void)didRemovePlugInView:(id)view;	// 0x301c8841
- (void)didRotateInteractionSheet;	// 0x302b3861
- (void)didZoom;	// 0x302b7061
- (void)disableClearsOnInsertion;	// 0x302b4001
// converted property getter: - (CGRect)documentBounds;	// 0x3012c565
// converted property getter: - (int)documentType;	// 0x3012c515
// converted property getter: - (CGRect)doubleTapRect;	// 0x302b3bfd
- (BOOL)doubleTapRectIsReplaced;	// 0x302b3c21
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x302b805d
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x302bfc95
- (unsigned)effectiveDataDetectorTypes;	// 0x3020b6a1
- (void)enableReachability;	// 0x3012ac8d
- (id)enclosingScrollView;	// 0x302b7f19
// declared property getter: - (id)endOfDocument;	// 0x30162b71
- (void)endPrintMode;	// 0x302bf8d5
- (void)endSelectionChange;	// 0x30163081
- (void)ensureSelection;	// 0x301d9b55
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x302b55a9
- (void)extendCurrentSelection:(int)selection;	// 0x302b57b5
- (CGRect)firstRectForRange:(id)range;	// 0x3020ef3d
- (id)fontForCaretSelection;	// 0x30210361
- (void)forceLayout;	// 0x302b1e69
- (id)formElement;	// 0x3017e621
- (void)forwardInvocation:(id)invocation;	// 0x3012b33d
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x302b26c5
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x302b4ac5
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x301cda79
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x301cd931
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x301cb899
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x301cd9a5
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x301cd62d
- (int)getPasteboardChangeCount;	// 0x302b2a29
- (int)getPasteboardItemsCount;	// 0x302b25c9
- (void)handleKeyWebEvent:(id)event;	// 0x302b5d8d
- (BOOL)hasContent;	// 0x300b4e15
- (BOOL)hasDrawnTiles;	// 0x301c3775
- (BOOL)hasEditableSelection;	// 0x30110525
- (BOOL)hasMarkedText;	// 0x30110321
- (BOOL)hasPlugInSubviews;	// 0x302b5fa9
- (BOOL)hasRangedSelection;	// 0x302b4509
- (BOOL)hasRichlyEditableSelection;	// 0x302b2645
- (BOOL)hasSelection;	// 0x302b5835
- (BOOL)hasSimpleTextOnlyStructure;	// 0x302150c5
- (BOOL)hasText;	// 0x301b7ea1
- (void)hideTapHighlight;	// 0x301d0155
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x302bd001
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x301ce0a5
- (id)hostViewForSheet:(id)sheet;	// 0x302bebc5
- (id)implementationWebView;	// 0x302b5ce1
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x302bebd5
- (float)initialScale;	// 0x30114925
// declared property getter: - (id)inputDelegate;	// 0x30159e05
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x302b40e9
- (id)insertDictationResultPlaceholder;	// 0x302b4591
- (void)insertText:(id)text;	// 0x301b9345
- (void)installGestureRecognizers;	// 0x3010e1e9
- (float)integralScaleForScale:(float)scale;	// 0x30114c85
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x30114c9d
// declared property getter: - (id)interactionAssistant;	// 0x302b6001
// converted property getter: - (id)interactionDelegate;	// 0x302bd69d
- (id)interactionElement;	// 0x302bd6c9
- (CGPoint)interactionLocation;	// 0x302bd6dd
- (BOOL)isCaretInEmptyParagraph;	// 0x30186625
- (BOOL)isClassicViewportMode;	// 0x302b1b25
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x302b3985
- (BOOL)isEditable;	// 0x302b6091
- (BOOL)isEditing;	// 0x301847cd
- (BOOL)isEditingSingleLineElement;	// 0x302b4051
- (BOOL)isInInteraction;	// 0x302bc451
- (BOOL)isInPrintMode;	// 0x302bee25
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x302b25fd
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3017e8dd
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x3017e915
- (BOOL)isShowingFullScreenPlugInUI;	// 0x301c158d
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x302b3c51
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x302b2a5d
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x302b3c8d
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x301d9dc5
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x301da4ad
- (BOOL)keyboardInputChanged:(id)changed;	// 0x3019ac11
- (void)keyboardInputChangedSelection:(id)selection;	// 0x30198255
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x302b5ce9
- (void)layoutSubviews;	// 0x30111465
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x302b16d1
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x30113d75
- (void)loadRequest:(id)request;	// 0x301c37f5
// converted property getter: - (BOOL)loadsSynchronously;	// 0x302b1805
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x302b6ec5
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x302b6eb5
- (BOOL)makeWKFirstResponder;	// 0x30198481
// converted property getter: - (id)markedText;	// 0x301ba7dd
// declared property getter: - (id)markedTextRange;	// 0x30169a6d
// declared property getter: - (id)markedTextStyle;	// 0x302b7b95
- (float)maximumDoubleTapScale;	// 0x302b7155
- (float)maximumScale;	// 0x302b1a05
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x302b393d
- (id)metadataDictionariesForDictationResults;	// 0x302b435d
- (id)methodSignatureForSelector:(SEL)selector;	// 0x3011048d
- (float)minimumScale;	// 0x301153c1
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x302b1831
- (float)minimumScaleForSize:(CGSize)size;	// 0x302b7f8d
- (BOOL)mouseEventsChangeSelection;	// 0x302bfec1
- (void)moveBackward:(unsigned)backward;	// 0x302b58cd
- (void)moveForward:(unsigned)forward;	// 0x302b5939
- (BOOL)needsScrollNotifications;	// 0x302b1b39
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x302b1f79
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x302b54f9
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x3019aa99
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x30338895
- (void)paste:(id)paste;	// 0x302b6ba5
- (void)performClick:(id)click;	// 0x302bc7e1
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x302bc209
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x302b2715
- (BOOL)playsNicelyWithGestures;	// 0x302b6f75
- (void)popoverControllerDidDismissPopover:(id)popoverController;	// 0x302b6891
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x30339ce9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x302b7a59
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30198105
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x3017e949
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x302b7cf9
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x302bec51
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x302b5491
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x302b5781
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x302b574d
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x30169b8d
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x302b7851
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x302b81d1
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x302b2959
- (CGRect)rectContainingCaretSelection;	// 0x302b53e9
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x302b51a1
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x302b7f9d
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x302b5235
- (void)redrawScaledDocument;	// 0x302b3521
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x302b4b8d
- (void)replace:(id)replace;	// 0x302b6da9
- (void)replaceCurrentWordWithText:(id)text;	// 0x302b4f41
- (void)replaceRange:(id)range withText:(id)text;	// 0x302b7935
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x302b4e6d
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30212af5
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x302b5631
- (BOOL)requiresKeyEvents;	// 0x30174099
- (void)resetInteraction;	// 0x301c98e9
- (void)resetTilingAfterLoadComplete;	// 0x301158dd
- (BOOL)resignFirstResponder;	// 0x30115995
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x30166501
- (void)saveStateToCurrentHistoryItem;	// 0x301c89e5
- (id)scriptingInfoWithChildren;	// 0x3020d0a9
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x30339c31
- (void)scrollViewWasRemoved;	// 0x302b6fe1
- (void)select:(id)select;	// 0x302b6d11
- (void)selectAll;	// 0x302b59a5
- (void)selectAll:(id)all;	// 0x302b6d5d
- (void)selectWord;	// 0x30338729
- (id)selectedDOMRange;	// 0x302b571d
// declared property getter: - (id)selectedTextRange;	// 0x30165df1
// declared property getter: - (int)selectionAffinity;	// 0x30165e45
- (BOOL)selectionAtDocumentStart;	// 0x302b586d
- (BOOL)selectionAtWordStart;	// 0x302b589d
- (int)selectionBaseWritingDirection;	// 0x30197185
- (void)selectionChanged;	// 0x3010f855
- (void)selectionChanged:(id)changed;	// 0x3010f7d5
// declared property getter: - (int)selectionGranularity;	// 0x302b7df9
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x303392d1
- (NSRange)selectionRange;	// 0x301da46d
- (id)selectionRects;	// 0x30338fe9
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x30338e5d
- (id)selectionRectsForRange:(id)range;	// 0x302b7e09
// declared property getter: - (int)selectionState;	// 0x30186685
- (id)selectionView;	// 0x3010f911
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x301c6dcd
- (void)sendScrollEventIfNecessary;	// 0x301c9d95
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x302b1b51
- (void)sendScrollWheelEvents;	// 0x302bd435
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x3020b619
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x3012beb1
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x302bd6b1
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x3010f0c1
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x3012b929
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x30339331
- (void)setBaseWritingDirection:(int)direction;	// 0x30338a31
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30198221
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x302b6f7d
- (void)setBottomBufferHeight:(float)height;	// 0x302b5d5d
- (void)setCaretChangeListener:(id)listener;	// 0x302b5c9d
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x30110b85
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x30168f99
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x3012b86d
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x3012bdf1
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x3021464d
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x30113871
- (void)setDrawsBackground:(BOOL)background;	// 0x3010f565
- (void)setFrame:(CGRect)frame;	// 0x3010df31
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x3010f281
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x302b2039
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x302b1e21
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x3010f00d
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x3016829d
- (void)setInteractionAssistantGestureRecognizers;	// 0x302b3d45
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x3012be01
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x30115979
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x302b3c75
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x3010f319
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30212bed
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x302b5009
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x302b7b99
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x3010f085
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x302b38f5
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x3010f049
- (void)setMinimumSize:(CGSize)size;	// 0x3010edb9
- (void)setOpaque:(BOOL)opaque;	// 0x3010f521
- (void)setPaused:(BOOL)paused;	// 0x302b5dc9
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x302b5ddd
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x302b81e1
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x30338a65
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x30338ac5
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x30338a95
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x30338b85
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x30338c25
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x30338b55
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x30338b25
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x303391a5
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x30338dd9
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x30162fcd
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30162d9d
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x302b77b1
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x302b7df5
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x3017ec81
- (void)setSelectionToEnd;	// 0x30339229
- (void)setSelectionToStart;	// 0x3033927d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x30338cc1
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30339c35
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x302b1af9
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x302b38c9
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x302b1a79
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x3012be19
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x30115afd
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x302b8201
// converted property setter: - (void)setText:(id)text;	// 0x302b59f9
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x301c5805
- (void)setTilingArea:(int)area;	// 0x30114341
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x302b1e3d
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x30213e41
- (void)setUserStyleSheet:(id)sheet;	// 0x3020b745
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x3010f0f9
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x302b1b11
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x302b38e1
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x302b80e1
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x302b1ae1
- (void)smartExtendRangedSelection:(int)selection;	// 0x30339171
// converted property getter: - (id)standaloneEditingElement;	// 0x302b3c65
- (BOOL)startActionSheet;	// 0x302bc371
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x30339455
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x302bc26d
- (void)stopLoading:(id)loading;	// 0x301d08d1
- (id)subviews;	// 0x3010f199
- (id)superviewForSheet;	// 0x302bd6f9
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x302b2921
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x302bd59d
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x302b81f1
- (void)takeTraitsFrom:(id)from;	// 0x302b5fd5
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x302bc2c9
// converted property getter: - (id)text;	// 0x302b5b25
- (id)textColorForCaretSelection;	// 0x302b5165
- (id)textFormElement;	// 0x302b3c4d
- (id)textInDOMRange:(id)domrange;	// 0x30198731
- (id)textInRange:(id)range;	// 0x30178b05
- (id)textInputTraits;	// 0x3010ed35
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30162c49
- (void)toggleBaseWritingDirection;	// 0x303389dd
- (void)toggleBoldface:(id)boldface;	// 0x302b6311
- (void)toggleItalics:(id)italics;	// 0x302b635d
- (void)toggleUnderline:(id)underline;	// 0x302b63a9
// declared property getter: - (id)tokenizer;	// 0x30169b89
// converted property getter: - (id)undoManager;	// 0x301678e1
- (id)undoManagerForWebView:(id)webView;	// 0x30167905
- (void)unmarkText;	// 0x301d9a41
- (void)updateInteractionElements;	// 0x302b3769
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x302b3ca1
- (void)updateSelection;	// 0x302b6141
// converted property getter: - (BOOL)updatesScrollView;	// 0x302b1e55
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x3012ae31
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x302bc319
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x301145bd
- (float)viewportHeight;	// 0x3012bcfd
- (float)viewportWidth;	// 0x3012b961
- (CGRect)visibleBounds;	// 0x3018460d
- (CGRect)visibleContentFrame;	// 0x302b6f09
- (CGRect)visibleContentRect;	// 0x302b7f4d
- (CGRect)visibleFrame;	// 0x302b6ee5
- (CGRect)visibleRectForSelecting;	// 0x302bfed9
// converted property getter: - (id)webSelectionAssistant;	// 0x302b6ed5
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x300b6159
// converted property getter: - (id)webView;	// 0x300b6211
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x302b1dd1
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x30113ea9
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x302b2da9
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x301c9479
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x3011560d
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x3010f141
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x302b5f2d
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x302bcf15
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x301154f1
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x301c94f1
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x301c9411
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x301c6e3d
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x301d1289
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x302b1d65
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x301c917d
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x30166201
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x301c78c1
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x302b2f85
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x302b5ed9
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x30111549
- (void)webViewDidDrawTiles:(id)webView;	// 0x30111849
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x302b1d25
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x302bcf3d
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x302b1ce5
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x3010d899
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x3017e521
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x302bc475
- (void)willMoveToSuperview:(id)superview;	// 0x3010f5c9
- (void)willRotateInteractionSheet;	// 0x302b37fd
- (void)willStartScroll;	// 0x301d01e5
- (void)willStartScrollToTop;	// 0x302b6f85
- (void)willStartZoom;	// 0x302b6ff5
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x302b8181
- (void)willZoomToMinimumScale;	// 0x302b80d1
- (id)wordAtPoint:(CGPoint)point;	// 0x30338d79
- (id)wordContainingCaretSelection;	// 0x302b5561
- (int)wordOffsetInRange:(id)range;	// 0x302b55fd
- (id)wordRangeContainingCaretSelection;	// 0x302b5461
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x302b24d1
- (float)zoomedDocumentScale;	// 0x302b7f2d
@end

