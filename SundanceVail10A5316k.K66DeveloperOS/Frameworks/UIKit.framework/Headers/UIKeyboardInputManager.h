/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UIKit-Structs.h"


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x3030bcc5; S=0x3030bcbd; converted property
@property(assign) unsigned phraseBoundary;	// G=0x3030bcf5; S=0x3030bcf1; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x3030bd01; S=0x3016d5a5; converted property
+ (id)activeInstance;	// 0x30172b69
+ (void)clearAllCentroids;	// 0x30172f59
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x3030bf09
+ (id)keyboardUserDirectory;	// 0x300b5fe9
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x30173281
+ (void)releaseSharedInstance;	// 0x300f8a35
+ (void)removeAllDynamicDictionaries;	// 0x3030c029
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x3030bf99
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x30100a65
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x300b5fb5
- (void)acceptInput;	// 0x3030bcad
- (BOOL)acceptInputString:(id)string;	// 0x3018a7ed
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x3030bcd9
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x3030bdf5
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x301b9295
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x3030bc91
- (id)addInputObject:(id)object;	// 0x3030c181
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x3030bd75
- (void)appendToInputContext:(id)inputContext;	// 0x3030bcb1
- (id)autocorrection;	// 0x3030bce1
- (BOOL)canHandleKeyHitTest;	// 0x3030c21d
- (BOOL)canUseGeometryKeyTouch;	// 0x30172f31
- (void)candidateAccepted:(id)accepted;	// 0x3030bef5
- (void)candidateRejected:(id)rejected;	// 0x3030bef9
- (id)candidates;	// 0x3030bce9
- (id)candidatesForString:(id)string;	// 0x3030bce5
- (CFArrayRef)chargeableKeys;	// 0x3030c179
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x3030c17d
- (void)clearAllCentroids;	// 0x3030c235
- (void)clearDynamicDictionary;	// 0x3030bf05
- (void)clearInput;	// 0x3030bca9
- (void)clearInputContext;	// 0x3030bcb9
- (void)clearKeyAreas;	// 0x3030c221
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x3030be11
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x301032a9
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x3030be15
- (id)defaultCandidate;	// 0x3030bd09
- (unsigned)defaultCandidateIndex;	// 0x3030bd0d
- (id)deleteFromInput:(unsigned *)input;	// 0x3030bca1
- (void)deleteFromStrokeHistory;	// 0x3030c22d
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x3030bd79
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x3030bd7d
- (BOOL)ignoresDeadKeys;	// 0x3030beed
- (unsigned)inputCount;	// 0x3030bcc9
- (BOOL)inputEmpty;	// 0x3030bccd
// converted property getter: - (unsigned)inputIndex;	// 0x3030bcc5
- (void)inputLocationChanged;	// 0x3030bcd5
- (id)inputString;	// 0x3030bcd1
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x3030c229
- (void)lastAcceptedCandidateCorrected;	// 0x3030befd
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x3030bd81
- (unsigned)maximumShortcutLengthAllowed;	// 0x3030c241
- (BOOL)nextInputWouldStartSentence;	// 0x3030bd61
// converted property getter: - (unsigned)phraseBoundary;	// 0x3030bcf5
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x3030c231
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x3030c225
- (id)remainingInput;	// 0x3030bced
- (id)remapKeyWithString:(id)string stringWithoutModifiers:(id)modifiers modifierFlags:(unsigned)flags;	// 0x3030c219
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x3030bcb5
- (id)searchStringForMarkedText;	// 0x3030bd15
- (void)setAutoCorrects:(BOOL)corrects;	// 0x3030bdfd
- (void)setAutocapitalizationType:(int)type;	// 0x3030be01
- (void)setAutocorrectionHistory:(id)history;	// 0x3030bf01
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x3030c175
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x3030be09
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x3030be0d
- (void)setInput:(id)input;	// 0x3030bc9d
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x3030bcbd
- (id)setInputObject:(id)object;	// 0x3030c1cd
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x3030be05
- (void)setLearnsCorrection:(BOOL)correction;	// 0x3030bee9
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x3030bcf1
- (void)setTypologyRecorder:(id)recorder;	// 0x3030c239
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x3016d5a5
- (id)shadowTyping;	// 0x3030c171
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x3030c245
- (BOOL)shouldExtendPriorWord;	// 0x3019aa91
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x3030bd65
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x3030bd69
- (id)sortingMethods;	// 0x3030bd6d
- (BOOL)stringEndsWord:(id)word;	// 0x301b90d5
- (id)stringForDoubleKey:(id)doubleKey;	// 0x3030bd29
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x3030bcdd
- (BOOL)suppliesCompletions;	// 0x3030bd21
- (BOOL)supportsNumberKeySelection;	// 0x3030bdf9
- (BOOL)supportsSetPhraseBoundary;	// 0x3030bcfd
- (BOOL)supportsShortcutConversion;	// 0x3030c23d
- (BOOL)suppressCompletionsForFieldEditor;	// 0x3030bd25
- (BOOL)suppressesCandidateDisplay;	// 0x301d92c9
- (void)textAccepted:(id)accepted;	// 0x3030bef1
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x3030bd71
- (BOOL)usesAutoDeleteWord;	// 0x3030bd05
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x3030bd01
- (unsigned)wordHistoryDepth;	// 0x3030bcc1
@end

