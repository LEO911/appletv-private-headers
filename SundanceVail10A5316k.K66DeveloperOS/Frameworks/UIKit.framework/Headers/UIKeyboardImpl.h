/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class UITextInputTraits, UITextInputArrowKeyHistory, UIAlertView, UIKeyboardCandidate, NSMutableArray, NSString, UIKeyboardInputManager, UIAutocorrectInlinePrompt, UIKeyboardLayout, NSArray, NSTimer, NSMutableDictionary, UIDelayedAction;
@protocol UIKeyInput, UIKeyboardRecording, UITextInput, UIApplicationEventRecording, UIKeyboardTypology, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 84 = 0x54
	UIView *m_languageIndicator;	// 88 = 0x58
	NSString *m_previousInputString;	// 92 = 0x5c
	UIKeyboardInputManager *m_inputManager;	// 96 = 0x60
	UIKeyboardCandidate *m_autocorrection;	// 100 = 0x64
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 104 = 0x68
	UIDelayedAction *m_autocorrectPromptAction;	// 108 = 0x6c
	NSMutableDictionary *m_autocorrectHistoryLists;	// 112 = 0x70
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 116 = 0x74
	NSArray *m_candidates;	// 120 = 0x78
	id<UIKeyboardCandidateList> m_candidateList;	// 124 = 0x7c
	UIView *m_markedTextOverlay;	// 128 = 0x80
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 132 = 0x84
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 136 = 0x88
	UIKeyboardLayout *m_layout;	// 140 = 0x8c
	NSMutableDictionary *m_keyedLayouts;	// 144 = 0x90
	NSString *m_inputModeLastChosen;	// 148 = 0x94
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 152 = 0x98
	NSTimer *m_autoDeleteTimer;	// 164 = 0xa4
	unsigned m_autoDeleteCount;	// 168 = 0xa8
	double m_autoDeleteLastDelete;	// 172 = 0xac
	double m_autoDeleteInterval;	// 180 = 0xb4
	unsigned long m_autoDeleteShiftCharacter;	// 188 = 0xbc
	UIDelayedAction *m_longPressAction;	// 192 = 0xc0
	int m_orientation;	// 196 = 0xc4
	int m_originalOrientation;	// 200 = 0xc8
	CGPoint m_inputPoint;	// 204 = 0xcc
	int m_changeCount;	// 212 = 0xd4
	double m_changeTime;	// 216 = 0xd8
	id m_changedDelegate;	// 224 = 0xe0
	CFRunLoopObserverRef m_observer;	// 228 = 0xe4
	unsigned m_textInputChangingCount;	// 232 = 0xe8
	BOOL m_textInputChangingText;	// 236 = 0xec
	BOOL m_textInputChangingDirection;	// 237 = 0xed
	BOOL m_textInputChangesIgnored;	// 238 = 0xee
	BOOL m_insideKeyInputDelegateCall;	// 239 = 0xef
	UITextInputTraits *m_defaultTraits;	// 240 = 0xf0
	UITextInputTraits *m_traits;	// 244 = 0xf4
	int m_returnKeyState;	// 248 = 0xf8
	int m_currentDirection;	// 252 = 0xfc
	int m_contextWordDepth;	// 256 = 0x100
	BOOL m_autoDeleteOK;	// 260 = 0x104
	BOOL m_autocapitalizationPreference;	// 261 = 0x105
	BOOL m_autocorrectPromptTimerFired;	// 262 = 0x106
	BOOL m_autocorrectionPreference;	// 263 = 0x107
	BOOL m_autoshift;	// 264 = 0x108
	BOOL m_caretShowingNow;	// 265 = 0x109
	BOOL m_changeNotificationDisabled;	// 266 = 0x10a
	BOOL m_correctionLearningAllowed;	// 267 = 0x10b
	BOOL m_delegateIsSMSTextView;	// 268 = 0x10c
	BOOL m_delegateRequiresKeyEvents;	// 269 = 0x10d
	BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;	// 270 = 0x10e
	BOOL m_doubleSpacePeriodPreference;	// 271 = 0x10f
	BOOL m_hardwareKeyboardAttached;	// 272 = 0x110
	BOOL m_inDealloc;	// 273 = 0x111
	BOOL m_inHardwareKeyboardMode;	// 274 = 0x112
	BOOL m_initializationDone;	// 275 = 0x113
	BOOL m_performDecomposingDelete;	// 276 = 0x114
	BOOL m_performanceLoggingEnabled;	// 277 = 0x115
	BOOL m_selecting;	// 278 = 0x116
	BOOL m_shift;	// 279 = 0x117
	BOOL m_shiftLocked;	// 280 = 0x118
	BOOL m_shiftLockedEnabled;	// 281 = 0x119
	BOOL m_settingShift;	// 282 = 0x11a
	BOOL m_shouldSkipCandidateSelection;	// 283 = 0x11b
	BOOL m_originalShouldSkipCandidateSelection;	// 284 = 0x11c
	BOOL m_updatingPreferences;	// 285 = 0x11d
	BOOL m_changingGeometryWithSameOrientation;	// 286 = 0x11e
	BOOL m_suppressGeometryChangeNotifications;	// 287 = 0x11f
	BOOL m_acceptingCandidate;	// 288 = 0x120
	BOOL m_userChangedSelection;	// 289 = 0x121
	BOOL m_shouldChargeKeys;	// 290 = 0x122
	BOOL m_longPress;	// 291 = 0x123
	BOOL m_syntheticInput;	// 292 = 0x124
	BOOL m_replacingWord;	// 293 = 0x125
	BOOL m_shiftNeedsUpdate;	// 294 = 0x126
	BOOL m_shiftPreventAutoshift;	// 295 = 0x127
	BOOL m_shiftHeldDownNeedsUpdated;	// 296 = 0x128
	BOOL m_delegateAdoptsTextInput;	// 297 = 0x129
	BOOL m_delegateAdoptsTextInputPrivate;	// 298 = 0x12a
	BOOL m_delegateAdoptsKeyboardInput;	// 299 = 0x12b
	BOOL m_clientVariantSupportEnabled;	// 300 = 0x12c
	BOOL m_clientVariantSupportEnabledEver;	// 301 = 0x12d
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 304 = 0x130
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 308 = 0x134
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 312 = 0x138
	BOOL m_preRotateShift;	// 316 = 0x13c
	BOOL m_preRotateShiftLocked;	// 317 = 0x13d
	BOOL m_showInputModeIndicator;	// 318 = 0x13e
	BOOL m_suppressUpdateCandidateView;	// 319 = 0x13f
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 320 = 0x140
	BOOL m_shouldSetInputModeInNextRun;	// 321 = 0x141
	BOOL m_rivenCenterFilled;	// 322 = 0x142
	float m_splitProgress;	// 324 = 0x144
	NSString *m_currentUsedInputMode;	// 328 = 0x148
	NSString *m_lastUsedInputMode;	// 332 = 0x14c
	BOOL m_needsCandidates;	// 336 = 0x150
	BOOL m_shouldSkipCandidateGeneration;	// 337 = 0x151
	BOOL m_updateLayoutOnShowKeyboard;	// 338 = 0x152
	BOOL m_receivedCandidatesInCurrentInputMode;	// 339 = 0x153
	int _currentAlertReason;	// 340 = 0x154
@private
	id<UIKeyboardTypology> typologyRecorder;	// 344 = 0x158
	BOOL m_showsCandidateBar;	// 348 = 0x15c
	BOOL m_showsCandidateInline;	// 349 = 0x15d
	UIAlertView *keyboardAlertView;	// 352 = 0x160
	BOOL committingCandidate;	// 356 = 0x164
	BOOL geometryIsChanging;	// 357 = 0x165
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x30194c79; S=0x3017ee19; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x301687f9; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x301105e5; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x30185e21; S=0x30102a4d; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x30102a15; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x3029b825; S=0x3029b859; converted property
@property(assign) BOOL caretBlinks;	// G=0x302a164d; S=0x30169d5d; converted property
@property(assign) BOOL caretVisible;	// G=0x30192a8d; S=0x30169d89; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x3029ad35; 
@property(readonly, assign) int changeCount;	// G=0x301681dd; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x3029cfd1; S=0x3029cfe1; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x301874a9; S=0x301126f1; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x30170779; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x302a1961; S=0x302a1971; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x30195981; S=0x30112711; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x300fba01; S=0x300abe65; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x3029cb95; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x301684a9; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x300fc8e9; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x301681c9; S=0x301680b9; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x302a1981; S=0x302a1991; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x3029bd61; S=0x3029bd99; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x30100a55; S=0x30193a71; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x300ffee9; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x30102449; S=0x30102439; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x3029c55d; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x302a1941; S=0x302a1951; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x302a1921; S=0x30112701; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x300ff909; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x301b8159; S=0x302a1dad; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x3029d331; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x3029b0e5; 
@property(assign) unsigned phraseBoundary;	// G=0x3029defd; S=0x3029de75; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x300fb9dd; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x301031b1; S=0x3011242d; 
@property(assign) BOOL returnKeyEnabled;	// G=0x30173445; S=0x301685f5; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x3029b055; S=0x3029b089; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x30171315; S=0x30217bc5; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x30217ced; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x302a0909; S=0x301685c1; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x302a1901; S=0x302a1911; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x301035c5; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x301b8cd9; S=0x3016ad09; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x302a18e1; S=0x302a18f1; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x30103959; S=0x30103715; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x302a1931; S=0x30103541; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x30106f89; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x30102459; S=0x30112469; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x302a1bcd
+ (id)activeInstance;	// 0x300abe55
+ (float)additionalInstanceHeight;	// 0x30103909
+ (float)additionalInstanceHeightLoading;	// 0x3029a98d
+ (void)applicationDidEnterBackground:(id)application;	// 0x3029a68d
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x3029a709
+ (void)applicationWillEnterForeground:(id)application;	// 0x3029a6cd
+ (void)applicationWillResignActive:(id)application;	// 0x301118a9
+ (void)applicationWillSuspend:(id)application;	// 0x30111b6d
+ (CGSize)defaultSize;	// 0x3029a931
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x300fb265
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x302a0cad
+ (int)interfaceOrientationForSize:(CGSize)size;	// 0x3029c609
+ (BOOL)isSplit;	// 0x30104431
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x30107c29
+ (void)markElapsed:(id)elapsed;	// 0x301034d1
+ (void)markPerformance:(id)performance;	// 0x300fb765
+ (id)normalizedInputModesFromPreference;	// 0x3029a955
+ (int)persistentDictationTargetZone;	// 0x3029b295
+ (CGPoint)persistentDictationWindowOffset;	// 0x3029b491
+ (CGPoint)persistentOffset;	// 0x30105699
+ (float)persistentSplitProgress;	// 0x3029b149
+ (void)refreshRivenStateWithTraits:(id)traits isKeyboard:(BOOL)keyboard;	// 0x3029ae81
+ (void)releaseSharedInstance;	// 0x300f8965
+ (BOOL)rivenInstalled;	// 0x30109155
+ (BOOL)rivenPreference;	// 0x3010701d
+ (BOOL)rivenTranslationPreference;	// 0x3018a6e5
+ (void)setParentTestForProfiling:(id)profiling;	// 0x302a19f1
+ (void)setPersistentDictationTargetZone:(int)zone;	// 0x3029b2dd
+ (void)setPersistentDictationWindowOffset:(CGPoint)offset;	// 0x3029b339
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x30199a81
+ (void)setPersistentSplitProgress:(float)progress;	// 0x3029b1b5
+ (id)sharedInstance;	// 0x300fb07d
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x30104069
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x301041e5
+ (float)splitProgress;	// 0x3029b1a5
+ (BOOL)supportsSplit;	// 0x3016cfa1
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x3029b281
- (id)initWithFrame:(CGRect)frame;	// 0x300fb3a1
- (id)UILanguagePreference;	// 0x300ff4cd
- (id)_autocorrectPromptRects;	// 0x3029fa85
- (int)_clipCornersOfView:(id)view;	// 0x3029d009
- (id)_getAutocorrection;	// 0x302a2011
- (id)_getCurrentKeyboardName;	// 0x302a1f29
- (id)_getCurrentKeyplaneName;	// 0x3020e035
- (id)_getLocalizedInputMode;	// 0x302a1f8d
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x302a1221
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x302a1379
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x302a12fd
- (BOOL)_hasCandidates;	// 0x30100169
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x302a2131
- (id)_inputForAutocorrectionCandidate;	// 0x301da40d
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x302a1a91
- (id)_layout;	// 0x301041c5
- (BOOL)_needsCandidates;	// 0x302a20e1
- (int)_positionInCandidateList:(id)candidateList;	// 0x302a2031
- (id)_rangeForAutocorrectionText:(id)autocorrectionText;	// 0x3029f8c5
- (void)_releaseInputManager;	// 0x302a2111
- (void)_remapKeyEvent:(GSEventRef)event;	// 0x302a1501
- (void)_resetInputLocation;	// 0x302a20f1
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x302a1ff1
- (void)_setInputManager:(id)manager;	// 0x302a1a2d
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x3020e119
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x302a1a3d
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x301b8d99
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x30168199
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x301035e1
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x301682ad
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x30174659
- (void)acceptAutocorrection;	// 0x3019ad99
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x3029e3b9
- (void)acceptCurrentCandidate;	// 0x3029e731
- (void)acceptCurrentCandidateIfSelected;	// 0x30172475
- (BOOL)acceptInputString:(id)string;	// 0x3018a7b5
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x301d92cd
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x302a08dd
- (void)addInputObject:(id)object;	// 0x3029e99d
- (void)addInputString:(id)string;	// 0x3029d9dd
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x30194e41
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x3029c0e5
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x302a0815
- (void)animateAutocorrection;	// 0x30212839
- (void)applicationResumedEventsOnly:(id)only;	// 0x3029aad1
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x3029aa65
- (void)applyAutocorrection;	// 0x3029fcf9
// declared property getter: - (id)arrowKeyHistory;	// 0x30194c79
- (void)autoDeleteTimerFired:(id)fired;	// 0x302a0939
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x301687f9
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x3019ab19
// converted property getter: - (id)autocorrectPrompt;	// 0x301105e5
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x30185e21
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x30213471
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x30102a15
- (BOOL)autocorrectionPreferenceForTraits;	// 0x301029a1
- (id)autocorrectionRecordForWord:(id)word;	// 0x3019aae1
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x3029b825
- (void)callChanged;	// 0x30187a95
- (void)callChangedSelection;	// 0x30169ef5
- (BOOL)callLayoutIgnoresShiftState;	// 0x301b920d
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x301739c5
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x30173975
- (void)callLayoutLongPressAction;	// 0x302a19a5
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x3016a4fd
- (void)callLayoutSetShift:(BOOL)shift;	// 0x3016a4a5
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x3016a03d
- (void)callLayoutUpdateLocalizedKeys;	// 0x30102955
- (void)callLayoutUpdateReturnKey;	// 0x30168621
- (BOOL)callLayoutUsesAutoShift;	// 0x3016a38d
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x3020a079
- (BOOL)callShouldInsertText:(id)call;	// 0x30195991
- (BOOL)callShouldReplaceExtendedRange:(unsigned)call withText:(id)text includeMarkedText:(BOOL)text3;	// 0x3029cc61
- (BOOL)canHandleKeyHitTest;	// 0x30172ee5
- (BOOL)canUseGeometryKeyTouch;	// 0x30172f0d
- (void)cancelAllKeyEvents;	// 0x300ad981
- (void)cancelSplitTransition;	// 0x3029b639
- (id)candidateList;	// 0x3029e861
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x3029e7f9
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x3029e81d
// converted property getter: - (BOOL)caretBlinks;	// 0x302a164d
// converted property getter: - (BOOL)caretVisible;	// 0x30192a8d
// declared property getter: - (BOOL)centerFilled;	// 0x3029ad35
// converted property getter: - (int)changeCount;	// 0x301681dd
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x3029cfd1
// declared property getter: - (id)changedDelegate;	// 0x301874a9
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x302a0919
- (BOOL)checkSpellingPreference;	// 0x30102b65
- (BOOL)checkSpellingPreferenceForTraits;	// 0x30102af1
- (void)clearAnimations;	// 0x30112115
- (void)clearAutocorrectPromptTimer;	// 0x30100939
- (void)clearChangeTimeAndCount;	// 0x301681f1
- (void)clearDelegate;	// 0x301120d9
- (void)clearExcessKeyboardMemory;	// 0x302a1c55
- (void)clearInput;	// 0x300ffe21
- (void)clearKeyAreas;	// 0x30172f39
- (void)clearLanguageIndicator;	// 0x302a1dbd
- (void)clearLayouts;	// 0x301031c1
- (void)clearLongPressTimer;	// 0x301121ed
- (void)clearSelection;	// 0x302a1675
- (void)clearShiftState;	// 0x30196f25
- (void)clearTimers;	// 0x30112161
- (void)clearTransientState;	// 0x30168475
- (id)clientOverrideForKey:(id)key;	// 0x3029b6d9
- (id)clientVariantDelegate;	// 0x301686b9
- (id)clientVariantsForKey:(id)key;	// 0x3029b681
// declared property getter: - (BOOL)committingCandidate;	// 0x302a1961
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x3020f2e5
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x30169c0d
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x3019af15
- (float)currentLandscapeHeight;	// 0x3029a7bd
- (float)currentLandscapeWidth;	// 0x3029a711
- (float)currentPortraitHeight;	// 0x30173fa5
- (float)currentPortraitWidth;	// 0x30173ebd
// declared property getter: - (id)currentUsedInputMode;	// 0x30195981
- (void)dealloc;	// 0x3011247d
- (void)defaultsDidChange;	// 0x3029aae5
- (void)delayedInit;	// 0x3010caad
// declared property getter: - (id)delegate;	// 0x300fba01
// declared property getter: - (id)delegateAsResponder;	// 0x3029cb95
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x301684a9
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x302a03a9
- (BOOL)delegateSupportsCorrectionUI;	// 0x301da3e1
- (void)deleteBackward;	// 0x3029d9c9
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x3020a6d1
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x3029d959
- (void)deleteFromInput;	// 0x30209bed
- (void)detach;	// 0x301122e9
- (void)dismissKeyboard;	// 0x302a106d
- (BOOL)displaysCandidates;	// 0x301879b9
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x300fc8e9
- (void)enable;	// 0x3029cc4d
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x3029c0b1
- (void)fadeAutocorrectPrompt;	// 0x3029fe91
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x302a1e95
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x302a0d89
- (BOOL)flushKeyplaneName:(id)name;	// 0x3019afcd
- (void)forceShiftUpdate;	// 0x3020e449
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x30188f05
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x3029ae4d
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x302a0799
- (void)generateCandidates;	// 0x301778f9
- (void)generateCandidatesWithOptions:(int)options;	// 0x3017790d
- (void)geometryChangeDone:(BOOL)done;	// 0x30177825
// declared property getter: - (id)geometryDelegate;	// 0x301681c9
// declared property getter: - (BOOL)geometryIsChanging;	// 0x302a1981
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x302a0841
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x302a0871
- (void)handleDelete;	// 0x30209b09
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x30209b1d
- (void)handleDeleteWithNonZeroInputCount;	// 0x3020a475
- (void)handleDeleteWithZeroInputCount;	// 0x3029e09d
- (BOOL)handleDoubleSpacePeriodForInputString:(id)inputString afterSpace:(BOOL)space elapsedTime:(double)time;	// 0x3029dac9
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x30193b95
- (void)handleKeyEvent:(GSEventRef)event;	// 0x30193269
- (void)handleObserverCallback;	// 0x30187a21
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x30194d85
- (void)hardwareAutoRepeat:(id)repeat;	// 0x302a0d65
- (void)hardwareKeyboardAvailabilityChanged;	// 0x302a0ce1
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x3029bd61
- (BOOL)hasAutoRepeat;	// 0x302a1a4d
- (BOOL)hasEditableMarkedText;	// 0x30169a1d
- (BOOL)hasMarkedText;	// 0x300ffeb9
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x3029b5dd
- (void)hideKeyboard;	// 0x302a0e11
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x3018834d
// declared property getter: - (id)inputDelegate;	// 0x300ffee9
// declared property getter: - (id)inputManager;	// 0x30102449
- (id)inputModeFirstPreference;	// 0x3029b90d
// converted property getter: - (id)inputModeLastChosen;	// 0x3029c55d
- (id)inputModeLastChosenPreference;	// 0x3029b95d
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x3029bac9
- (id)inputModeLastUsedPreference;	// 0x300ff785
- (id)inputModePreference;	// 0x300fc931
- (id)inputOverlayContainer;	// 0x3020efe1
- (id)inputStringFromPhraseBoundary;	// 0x3029d3dd
- (void)insertText:(id)text;	// 0x301b92d5
- (void)installRecorder;	// 0x301032ad
- (void)installTypology;	// 0x30103365
- (int)interfaceOrientation;	// 0x3029cff5
- (BOOL)isAllowedInputMode:(id)mode;	// 0x300ff811
- (BOOL)isAutoDeleteActive;	// 0x302a1b8d
- (BOOL)isAutoFillMode;	// 0x30211a9d
- (BOOL)isAutoShifted;	// 0x3016d08d
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x30170779
- (BOOL)isDesiredInputMode:(id)mode;	// 0x30169329
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x30100a55
// converted property getter: - (BOOL)isLongPress;	// 0x301b8159
- (BOOL)isMinimized;	// 0x301024a1
// converted property getter: - (BOOL)isShiftLocked;	// 0x30171315
- (BOOL)isShifted;	// 0x30187cdd
- (BOOL)isUsingDictationLayout;	// 0x3029eead
- (BOOL)isValidKeyInput:(id)input;	// 0x30194c89
- (void)keyActivated;	// 0x3029d945
- (void)keyDeactivated;	// 0x3029d955
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x30189b59
// declared property getter: - (id)keyboardAlertView;	// 0x302a1941
- (void)keyboardDidHide:(id)keyboard;	// 0x3029aa15
- (BOOL)keyboardDrawsOpaque;	// 0x30168065
- (BOOL)keyboardRecordingEnabled;	// 0x301032ed
- (BOOL)keyboardsExpandedPreference;	// 0x3029b7f1
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x3029b785
// declared property getter: - (id)lastUsedInputMode;	// 0x302a1921
- (void)launchTypologyApplication;	// 0x302a1c2d
- (void)layoutHasChanged;	// 0x3029cc3d
// declared property getter: - (id)legacyInputDelegate;	// 0x300ff909
- (void)longPressAction;	// 0x302a0c69
// converted property getter: - (id)markedTextOverlay;	// 0x3029d331
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x302a08a1
- (void)mediaKeyDown:(GSEventRef)down;	// 0x302a159d
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x3029b0e5
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x3029df1d
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x3029edd1
- (BOOL)noContent;	// 0x301b7e69
- (void)notifyShiftState;	// 0x3016a3e1
- (void)performClientVariantActionNamed:(id)named;	// 0x3029b731
- (BOOL)performanceLoggingPreference;	// 0x3010cc09
// converted property getter: - (unsigned)phraseBoundary;	// 0x3029defd
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x30179311
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x30188431
- (void)prepareForGeometryChange;	// 0x301746e9
- (void)prepareForSelectionChange;	// 0x3017e279
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x3029c8a5
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x301687b1
// declared property getter: - (id)privateInputDelegate;	// 0x300fb9dd
- (void)pushRecentAutocorrectionSuggestion:(id)suggestion;	// 0x302a0229
- (id)recentAutocorrectionSuggestionForTypedString:(id)typedString;	// 0x302a02dd
- (void)recomputeActiveInputModes;	// 0x3029d7b9
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x30168fcd
- (void)recordAcceptedAutocorrection:(id)autocorrection;	// 0x302a00c1
- (void)recordRejectedAutocorrection:(id)autocorrection;	// 0x302a01d9
// declared property getter: - (id)recorder;	// 0x301031b1
- (void)refreshRivenPreferences;	// 0x300fc671
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x301732c1
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x3016cb01
- (void)releaseSuppressUpdateCandidateView;	// 0x301777bd
- (void)removeAutocorrectPrompt;	// 0x301007f5
- (void)removeAutocorrection;	// 0x3029e389
- (void)removeFromSuperview;	// 0x30112239
- (void)replaceText:(id)text;	// 0x3029ea95
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x3029eef5
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x3016d8b5
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x3016cb51
- (id)returnKeyDisplayName;	// 0x30173465
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x30173445
- (int)returnKeyType;	// 0x301734dd
// declared property getter: - (BOOL)rivenSplitLock;	// 0x3029b055
- (void)saveInputModesPreference:(id)preference;	// 0x3029b8d1
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x3029ec11
- (id)searchStringForMarkedText;	// 0x3029d3a5
- (void)selectionDidChange:(id)selection;	// 0x3017eced
- (id)selectionView;	// 0x302a1e01
- (void)selectionWillChange:(id)selection;	// 0x3017e239
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x3017ee19
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x30102a4d
- (void)setAutocorrection:(id)autocorrection;	// 0x300fff0d
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x3029b859
- (void)setCandidateList:(id)list updateCandidateView:(BOOL)view;	// 0x3029ec51
- (void)setCandidates:(id)candidates;	// 0x30100005
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x30169d5d
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x30169d89
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x3029cfe1
- (void)setChanged;	// 0x301874dd
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x301126f1
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x302a1971
- (void)setCorrectionLearningAllowed:(BOOL)allowed;	// 0x3029caa1
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x30112711
- (void)setDefaultTextInputTraits:(id)traits;	// 0x301745c5
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x300abe65
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x300abe79
- (void)setFrame:(CGRect)frame;	// 0x300fb7d1
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x301680b9
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x302a1991
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x3029bd99
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x30193a71
- (void)setInitialDirection;	// 0x30169db9
// declared property setter: - (void)setInputManager:(id)manager;	// 0x30102439
- (void)setInputMode:(id)mode;	// 0x300ff93d
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x300ff951
- (void)setInputModeFromPreferences;	// 0x300ff561
- (void)setInputModeLastChosenPreference;	// 0x3029b9b9
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x3029c511
- (void)setInputModeToNextInPreferredList;	// 0x3029c3d1
- (void)setInputObject:(id)object;	// 0x3029e875
- (void)setInputPoint:(CGPoint)point;	// 0x3018a7f1
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x302a1951
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x30112701
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x302a1dad
- (void)setMarkedText;	// 0x3029d245
- (void)setOrientation;	// 0x3029c7d9
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x3029de75
- (void)setPreviousInputString:(id)string;	// 0x30187285
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x3011242d
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x301685f5
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x3029b089
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x3029d465
- (void)setShift:(BOOL)shift;	// 0x30187355
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x30187369
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x30217bc5
- (void)setShiftLockedForced:(BOOL)forced;	// 0x3029d869
- (void)setShiftNeedsUpdate;	// 0x30187405
- (void)setShiftOffIfNeeded;	// 0x301872c9
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x301874bd
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x301685c1
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x302a1911
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x3016ad09
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x3029bd51
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x302a18f1
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x30103715
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x30103541
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x302a1e39
- (void)setSplitProgress:(float)progress;	// 0x3029b0ed
- (void)setTextInputChangesIgnored:(BOOL)ignored;	// 0x302a1f15
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x30112469
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x3016d52d
- (unsigned)shiftFlagsForInputString;	// 0x301b9191
- (BOOL)shiftLockPreference;	// 0x300fc6a1
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x30217ced
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x302a0909
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x3020a8ed
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x302a1901
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x301035c5
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x301b8cd9
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x302a171d
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x3016941d
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x3029c169
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x302a18e1
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x3029c2c5
- (void)showKeyboard;	// 0x302a0ebd
- (void)showNextCandidates;	// 0x3029e7d9
// declared property getter: - (BOOL)showsCandidateBar;	// 0x30103959
// declared property getter: - (BOOL)showsCandidateInline;	// 0x302a1931
- (id)sortingMethods;	// 0x302a07c1
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x30106f89
- (void)startAutoDeleteTimer;	// 0x3020a969
- (void)startCaretBlinkIfNeeded;	// 0x302a1621
- (void)startKeyboardRecording;	// 0x30363d21
- (void)stopAutoDelete;	// 0x30168385
- (void)stopKeyboardRecording;	// 0x30363e29
- (void)storeDelegateConformance;	// 0x30168215
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x30166ec5
- (BOOL)suppliesCompletions;	// 0x3029d895
- (BOOL)supportsNumberKeySelection;	// 0x3029d921
- (BOOL)swipeToTabPreference;	// 0x3016acbd
- (void)takeTextInputTraitsFromDelegate;	// 0x300fb875
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x302a1b69
- (void)textChanged:(id)changed;	// 0x30186ffd
- (void)textDidChange:(id)text;	// 0x30186fed
- (void)textFrameChanged:(id)changed;	// 0x3029ceb1
- (int)textInputChangingCount;	// 0x302a1b59
- (id)textInputTraits;	// 0x301041d5
- (void)textWillChange:(id)text;	// 0x30186f3d
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x3018a9a9
- (void)timeMark:(unsigned)mark;	// 0x3018a805
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x3018a6f5
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x302a07e9
- (void)toggleShift;	// 0x3029d83d
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x3020a9e1
- (void)touchAutocorrectPromptTimer;	// 0x30172ac9
- (void)touchLongPressTimer;	// 0x3018a5d5
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x3018a5ed
- (void)trackUsageForAcceptedAutocorrection:(id)acceptedAutocorrection promptWasShowing:(BOOL)showing;	// 0x302a1741
- (void)trackUsageForPromptedCorrection:(id)promptedCorrection inputString:(id)string previousCorrection:(id)correction;	// 0x302a17e1
- (BOOL)typologyEnabled;	// 0x30103499
// declared property getter: - (id)typologyRecorder;	// 0x30102459
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x30100359
- (void)updateAutocorrectPromptAction;	// 0x30179135
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x302125e9
- (void)updateCandidateDisplay;	// 0x301001dd
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x3029ed0d
- (void)updateChangeTimeAndIncrementCount;	// 0x301b90a5
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned long)character;	// 0x3029d9f1
- (void)updateDoubleSpacePeriodStateForString:(id)string;	// 0x3029da1d
- (void)updateForChangedSelection;	// 0x30169469
- (void)updateFromTextInputTraits;	// 0x302a1a61
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x3029d4c1
- (void)updateInputManagerAutocapitalizationType;	// 0x3029d7dd
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x3029c09d
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x3029be41
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x301939f9
- (void)updateKeysWithDelegates;	// 0x30174071
- (void)updateLastUsedInputMode:(id)mode;	// 0x3029c2d9
- (void)updateLayout;	// 0x301024dd
- (void)updateLayoutAndSetShift;	// 0x3029e06d
- (void)updateLayoutIfNeeded;	// 0x30174831
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x3029c955
- (void)updateObserverState;	// 0x30187429
- (void)updateReturnKey;	// 0x301ba7c9
- (void)updateReturnKey:(BOOL)key;	// 0x3017330d
- (void)updateShiftState;	// 0x3016a085
- (void)updateTextCandidateView;	// 0x3029f0c5
@end

