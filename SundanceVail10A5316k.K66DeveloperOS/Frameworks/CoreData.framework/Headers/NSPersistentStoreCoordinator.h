/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "NSLocking.h"
#import <NSObject.h> // Unknown library
#import "CoreData-Structs.h"

@class NSManagedObjectModel, NSMutableArray;

@interface NSPersistentStoreCoordinator : NSObject <NSLocking> {
@private
	persistentStoreCoordinatorFlags _flags;	// 4 = 0x4
	void *_reserved;	// 8 = 0x8
	NSMutableArray *_extendedStoreURLs;	// 12 = 0xc
	id _externalRecordsHelper;	// 16 = 0x10
	NSManagedObjectModel *_managedObjectModel;	// 20 = 0x14
	id _coreLock;	// 24 = 0x18
	NSMutableArray *_persistentStores;	// 28 = 0x1c
}
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x32d08e81; converted property
@property(readonly, retain) NSMutableArray *persistentStores;	// G=0x32d9cc69; converted property
+ (void)__Multithreading_Violation_AllThatIsLeftToUsIsHonor__;	// 0x32d9b675
+ (Class)_classForPersistentStoreAtURL:(id)url;	// 0x32d9b9d5
+ (BOOL)_melissaIsDebugging;	// 0x32d9ccc9
+ (void)_registerCoreDataStoreClass:(Class)aClass forStoreType:(id)storeType;	// 0x32d32bf9
+ (void)_registerDefaultStoreClassesAndTypes;	// 0x32d3297d
+ (Class)_storeClassForStoreType:(id)storeType;	// 0x32d08ef5
+ (id)_storeTypeForStore:(id)store;	// 0x32da0705
+ (BOOL)accessInstanceVariablesDirectly;	// 0x32d9b671
+ (void)initialize;	// 0x32d3206d
+ (id)metadataForPersistentStoreOfType:(id)type URL:(id)url error:(id *)error;	// 0x32d9bf31
+ (void)registerStoreClass:(Class)aClass forStoreType:(id)storeType;	// 0x32d9b679
+ (id)registeredStoreTypes;	// 0x32d9b8b5
+ (BOOL)setMetadata:(id)metadata forPersistentStoreOfType:(id)type URL:(id)url error:(id *)error;	// 0x32d9bad5
- (id)initWithManagedObjectModel:(id)managedObjectModel;	// 0x32d040e5
- (id)URLForPersistentStore:(id)persistentStore;	// 0x32d9d1f1
- (void)_addPersistentStore:(id)store identifier:(id)identifier;	// 0x32d14089
- (void)_assignObject:(id)object toPersistentStore:(id)persistentStore;	// 0x32da1271
- (void)_assignObject:(id)object toPersistentStore:(id)persistentStore forConfiguration:(id)configuration;	// 0x32da12d5
- (void)_assignObjects:(id)objects toStore:(id)store;	// 0x32d9e285
- (BOOL)_canSaveGraphRootedAtObject:(id)object intoStore:(id)store withPreviouslyChecked:(CFSetRef)previouslyChecked withAcceptableEntities:(CFSetRef)acceptableEntities;	// 0x32d9e925
- (BOOL)_checkForPostLionWriter:(id)postLionWriter;	// 0x32da1ad5
- (BOOL)_checkForSkewedEntityHashes:(id)skewedEntityHashes metadata:(id)metadata;	// 0x32d9cccd
- (id)_checkRequestForStore:(id)store originalRequest:(id)request andOptimisticLocking:(id)locking;	// 0x32d9f481
- (id)_conflictsWithRowCacheForObject:(id)object andStore:(id)store;	// 0x32d9f361
- (void)_copyMetadataFromStore:(id)store toStore:(id)store2 migrationManager:(id)manager;	// 0x32da1911
- (BOOL)_destroyPersistentStoreAtURL:(id)url withType:(id)type error:(id *)error;	// 0x32da268d
- (BOOL)_destroyPersistentStoreAtURL:(id)url withType:(id)type options:(id)options error:(id *)error;	// 0x32da2269
- (void)_doPreSaveAssignmentsForObjects:(id)objects;	// 0x32d9ecd1
- (id)_fetchAllInstancesFromStore:(id)store intoContext:(id)context underlyingException:(id *)exception;	// 0x32da0a75
- (void)_informAffectedStoresOfInterestByChildContextInObjectsWithObjectIDs:(id)objectIDs withSelector:(SEL)selector;	// 0x32d2ae8d
- (BOOL)_isRegisteredWithUbiquity;	// 0x32d2cc19
- (id)_newConflictRecordForObject:(id)object andOriginalRow:(id)row;	// 0x32d9f2b9
- (id)_newObjectGraphStyleRecordForRow:(id)row andObject:(id)object;	// 0x32d9f005
- (id)_persistentStoreForIdentifier:(id)identifier;	// 0x32d14299
- (void)_postStoresChangedNotificationsForStores:(id)stores changeKey:(id)key options:(id)options;	// 0x32d145b1
- (id)_realStoreTypeForStoreWithType:(id)type URL:(id)url error:(id *)error;	// 0x32da13c1
- (BOOL)_removePersistentStore:(id)store;	// 0x32d9ce21
- (BOOL)_replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url3 sourceOptions:(id)options4 storeType:(id)type error:(id *)error;	// 0x32da1b41
- (id)_retainedAllMigratedObjectsInStore:(id)store toStore:(id)store2;	// 0x32da1489
- (id)_saveRequestForStore:(id)store originalRequest:(id)request andOptimisticLocking:(id)locking;	// 0x32d9fdd5
- (void)_setIsRegisteredWithUbiquity:(BOOL)ubiquity;	// 0x32da1b21
- (id)addPersistentStoreWithType:(id)type configuration:(id)configuration URL:(id)url options:(id)options error:(id *)error;	// 0x32d07825
- (void)dealloc;	// 0x32d2c579
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;	// 0x32d15f89
- (void)finalize;	// 0x32d9c851
- (id *)knownKeyValuesForObjectID:(id)objectID withContext:(id)context;	// 0x32d9e209
- (void)lock;	// 0x32d08e91
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;	// 0x32d9e271
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;	// 0x32d2ae79
- (id)managedObjectIDForURIRepresentation:(id)urirepresentation;	// 0x32d9ddd1
- (id)managedObjectIDFromUTF8String:(const char *)utf8String length:(unsigned)length;	// 0x32d9de79
// converted property getter: - (id)managedObjectModel;	// 0x32d08e81
- (id)metadataForPersistentStore:(id)persistentStore;	// 0x32d9c731
- (id)migratePersistentStore:(id)store toURL:(id)url options:(id)options withType:(id)type error:(id *)error;	// 0x32d9d3a9
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x32d9e23d
- (id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x32d287d5
- (BOOL)obtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x32d9e385
- (id)persistentStoreCoordinator;	// 0x32d9e205
- (id)persistentStoreForIdentifier:(id)identifier;	// 0x32da26b1
- (id)persistentStoreForURL:(id)url;	// 0x32d14141
// converted property getter: - (id)persistentStores;	// 0x32d9cc69
- (BOOL)removePersistentStore:(id)store error:(id *)error;	// 0x32d9ce75
- (void)setMetadata:(id)metadata forPersistentStore:(id)persistentStore;	// 0x32d9c55d
- (BOOL)setURL:(id)url forPersistentStore:(id)persistentStore;	// 0x32d9d279
- (BOOL)tryLock;	// 0x32d2cc2d
- (void)unlock;	// 0x32d1423d
@end

