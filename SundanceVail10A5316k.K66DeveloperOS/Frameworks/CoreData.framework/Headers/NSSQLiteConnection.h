/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import "NSSQLConnection.h"

@class NSString, NSSQLiteStatement, NSMutableSet, NSSQLEntity, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface NSSQLiteConnection : NSSQLConnection {
@private
	sqlite3 *_db;	// 28 = 0x1c
	sqlite3_stmt *_vmstatement;	// 32 = 0x20
	int _rowsProcessedCount;	// 36 = 0x24
	unsigned _lastEntityKey;	// 40 = 0x28
	NSSQLEntity *_finalEntity;	// 44 = 0x2c
	NSSQLEntity *_lastEntity;	// 48 = 0x30
	sqlite3_stmt *_fetchPKStatement;	// 52 = 0x34
	sqlite3_stmt *_updatePKStatement;	// 56 = 0x38
	NSSQLiteStatement *_beginStatement;	// 60 = 0x3c
	NSSQLiteStatement *_commitStatement;	// 64 = 0x40
	NSSQLiteStatement *_rollbackStatement;	// 68 = 0x44
	NSMutableSet *_vmCachedStatements;	// 72 = 0x48
	NSMutableDictionary *_pragmaSettings;	// 76 = 0x4c
	CFDictionaryRef _cachedEntityUpdateStatements;	// 80 = 0x50
	double _timeOutOption;	// 84 = 0x54
	void *_extraBuffersForRegisteredFunctions[5];	// 92 = 0x5c
	NSString *_dbPathRegisteredWithBackupd;	// 112 = 0x70
	long long _vacuumTracker;	// 116 = 0x74
	sqliteConnectionFlags _sqliteConnectionFlags;	// 124 = 0x7c
	unsigned long long _debugInode;	// 128 = 0x80
}
+ (void)__INode_Changed_AllThatIsLeftToUsIsHonor__;	// 0x32dc6161
+ (const char *)_databaseOpenURLStringForURL:(id)url;	// 0x32dc79f9
+ (BOOL)_destroyPersistentStoreAtURL:(id)url options:(id)options error:(id *)error;	// 0x32dc83d5
+ (BOOL)_replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url3 sourceOptions:(id)options4 error:(id *)error;	// 0x32dc7ac9
+ (void)_setDebugFlags:(int)flags;	// 0x32dc615d
+ (void)initialize;	// 0x32d34569
+ (int)readMagicWordFromPath:(const char *)path;	// 0x32dc7419
- (id)initWithAdapter:(id)adapter;	// 0x32d0e6c5
- (id)_adapter;	// 0x32d0ea19
- (void)_bindVariablesWithDeletedRow:(id)deletedRow;	// 0x32dca28d
- (void)_bindVariablesWithInsertedRow:(id)insertedRow;	// 0x32dc94e1
- (void)_bindVariablesWithUpdatedRow:(id)updatedRow andOriginalRow:(id)row forDeltasMask:(CFBitVectorRef)deltasMask;	// 0x32dc9ac5
- (void **)_buffersForRegisteredFunctions;	// 0x32d0f7b1
- (void)_clearBindVariablesForInsertedRow;	// 0x32dc994d
- (void)_clearBindVariablesForUpdateStatement:(id)updateStatement forDeltasMask:(CFBitVectorRef)deltasMask;	// 0x32dc9f9d
- (void)_clearCachedStatements;	// 0x32d2d341
- (void)_clearOtherStatements;	// 0x32d2d435
- (void)_clearTransactionCaches;	// 0x32d2d1b9
- (void)_configureAutoVacuum;	// 0x32dcc679
- (void)_configureIntegrityCheck;	// 0x32d0f7e9
- (void)_configurePageSize;	// 0x32dcc89d
- (void)_configurePragmaOptions:(int)options;	// 0x32dc751d
- (void)_configureSynchronousMode;	// 0x32d0f7c1
- (void)_configureUbiquityMetadataTable;	// 0x32d10489
- (void)_ensureDatabaseOpen;	// 0x32d10371
- (void)_ensureNoFetchInProgress;	// 0x32d10429
- (void)_ensureNoStatementPrepared;	// 0x32d103cd
- (void)_ensureNoTransactionOpen;	// 0x32dc6291
- (void)_executeSQLString:(id)string;	// 0x32d0f919
- (long long)_fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x32dc6fc1
- (void)_finalizeStatement;	// 0x32d12fd9
- (void)_forceDisconnectOnError;	// 0x32dc9035
- (long long)_getCurrentAutoVacuumValue;	// 0x32dccd59
- (BOOL)_hasTableWithName:(id)name;	// 0x32dcbbf1
- (id)_newValueForColumn:(id)column atIndex:(unsigned)index inStatement:(sqlite3_stmt *)statement;	// 0x32d124b1
- (void)_performPostSaveTasks;	// 0x32dccaf9
- (void)_registerExtraFunctions;	// 0x32d0f3a1
- (int)_rowsChangedByLastExecute;	// 0x32dc94c5
- (void)_setupVacuumIfNecessary;	// 0x32dccdbd
- (sqlite3_stmt *)_vmstatement;	// 0x32dcb049
- (void)addPeerRange:(id)range;	// 0x32dcdd11
- (void)addPeerRangeForPeerID:(id)peerID entityName:(id)name rangeStart:(id)start rangeEnd:(id)end peerRangeStart:(id)start5 peerRangeEnd:(id)end6;	// 0x32dcddbd
- (id)allPeerRanges;	// 0x32dcdf35
- (void)beginTransaction;	// 0x32dc90c9
- (void)cacheCurrentDBStatementOn:(id)on;	// 0x32dcadc1
- (void)cacheUpdateStatement:(id)statement forEntity:(id)entity andDeltasMask:(CFBitVectorRef)mask;	// 0x32dca6b9
- (id)cachedUpdateStatementForEntity:(id)entity andDeltasMask:(CFBitVectorRef)mask;	// 0x32dca805
- (BOOL)canConnect;	// 0x32d0e97d
- (void)commitTransaction;	// 0x32dc91d5
- (void)connect;	// 0x32d0ea85
- (id)createMapOfEntityNameToPKMaxForEntities:(id)entities;	// 0x32dcf77d
- (id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)pktable;	// 0x32dce795
- (id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)ubrangeTable;	// 0x32dcef89
- (BOOL)databaseIsEmpty;	// 0x32d13fb9
- (void)dealloc;	// 0x32d2d595
- (void)deleteCorrelation:(id)correlation;	// 0x32dca63d
- (void)deleteRow:(id)row;	// 0x32dcab09
- (id)describeResults;	// 0x32dcada5
- (void)disconnect;	// 0x32d2d04d
- (void)endFetch;	// 0x32d12f35
- (void)endPrimaryKeyGeneration;	// 0x32dcbda5
- (void)execute;	// 0x32d11265
- (long long)fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x32dc7265
- (int)fetchResultSet:(void *)set usingFetchPlan:(id)plan;	// 0x32d20be1
- (id)fetchTableCreationSQL;	// 0x32dcb839
- (id)fetchTableNames;	// 0x32dcb4fd
- (id)fetchUbiqiutyKnowledgeVector;	// 0x32dccff9
- (void)finalize;	// 0x32dc6169
- (long long)generatePrimaryKeysForEntity:(id)entity batch:(unsigned)batch;	// 0x32dcbdb5
- (void)handleCorruptedDB:(id)db;	// 0x32dcae15
- (BOOL)hasMetadataTable;	// 0x32dcbd6d
- (BOOL)hasPrimaryKeyTable;	// 0x32dcc655
- (void)insertCorrelation:(id)correlation;	// 0x32dca545
- (void)insertRow:(id)row;	// 0x32dca32d
- (BOOL)isFetchInProgress;	// 0x32d21265
- (BOOL)isLocalFS;	// 0x32dccfdd
- (BOOL)isOpen;	// 0x32d0e9fd
- (id)newFetchedArray;	// 0x32d1235d
- (BOOL)performIntegrityCheck;	// 0x32dcb059
- (void)prepareForPrimaryKeyGeneration;	// 0x32dcbd95
- (void)prepareSQLStatement:(id)statement;	// 0x32d10b39
- (CFArrayRef)rawIntegerRowsForSQL:(id)sql;	// 0x32dc62f1
- (void)releaseSQLStatement;	// 0x32d12f95
- (void)resetSQLStatement;	// 0x32dcad59
- (void)rollbackTransaction;	// 0x32dc9349
- (void)setExclusiveLockingMode:(BOOL)mode;	// 0x32dcaf09
- (void)setUbiquityTableValue:(id)value forKey:(id)key;	// 0x32dcfcdd
- (id)ubiquityTableKeysAndValues;	// 0x32dcfe41
- (id)ubiquityTableValueForKey:(id)key;	// 0x32dd0425
- (void)updateCorrelation:(id)correlation;	// 0x32dca5c1
- (void)updateRow:(id)row;	// 0x32dca835
- (void)updateUbiquityKnowledgeForPeerWithID:(id)anId andTransactionNumber:(id)number;	// 0x32dcda95
- (void)updateUbiquityKnowledgeVector:(id)vector;	// 0x32dcd69d
- (void)willCreateSchema;	// 0x32dcc9e1
@end

