/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks
 */

#import "WebBookmarks-Structs.h"
#import <NSObject.h> // Unknown library

@class TIWordTokenizer, WebBookmark;

@interface WebBookmarkCollection : NSObject {
	sqlite3 *_db;	// 4 = 0x4
	CFLocaleRef _locale;	// 8 = 0x8
	TIWordTokenizer *_wordTokenizer;	// 12 = 0xc
	WebBookmark *_rootBookmark;	// 16 = 0x10
	BOOL _merging;	// 20 = 0x14
	BOOL _dirty;	// 21 = 0x15
}
@property(assign, nonatomic, getter=isMerging) BOOL merging;	// G=0x350ed1d9; S=0x350ed1e9; @synthesize=_merging
@property(readonly, retain) WebBookmark *rootBookmark;	// G=0x350eb0a1; converted property
+ (void)_postBookmarksChangedSyncNotification;	// 0x350eea95
+ (id)_uniqueExternalUUID;	// 0x350eeae9
+ (BOOL)lockSync;	// 0x350ee99d
+ (id)readingListArchivesDirectoryPath;	// 0x350ea7d9
+ (id)safariBookmarkCollection;	// 0x350eaa05
+ (id)safariBookmarkCollectionCheckingIntegrity:(BOOL)integrity;	// 0x350ea931
+ (id)safariDirectoryPath;	// 0x350ea89d
+ (void)unlockSync;	// 0x350eea41
- (id)initWithPath:(id)path;	// 0x350ea4a1
- (id)initWithPath:(id)path checkIntegrity:(BOOL)integrity;	// 0x350ea1b9
- (id)initWithPath:(id)path migratingBookmarksPlist:(id)plist syncAnchorPlist:(id)plist3;	// 0x350ea7b5
- (id)initWithPath:(id)path migratingBookmarksPlist:(id)plist syncAnchorPlist:(id)plist3 checkIntegrity:(BOOL)integrity;	// 0x350ea75d
- (int)_DAVGeneration;	// 0x350f5241
- (BOOL)_addBookmarkWithTitle:(id)title address:(id)address parentID:(unsigned)anId orderIndex:(unsigned)index isFolder:(BOOL)folder externalUUID:(id)uuid associatedBookmark:(id)bookmark reorderSiblings:(BOOL)siblings updateParentChildCount:(BOOL)count updateAncestorEntries:(BOOL)entries;	// 0x350f1ddd
- (BOOL)_addChildrenOfID:(unsigned)anId toCollection:(id)collection recursive:(BOOL)recursive error:(id *)error;	// 0x350ed6d5
- (id)_bookmarkDictionaryForSqliteRow:(sqlite3_stmt *)sqliteRow recursive:(BOOL)recursive error:(id *)error;	// 0x350ed481
- (unsigned)_bookmarkIDForServerID:(id)serverID;	// 0x350f311d
- (id)_bookmarkWithServerID:(id)serverID;	// 0x350f3265
- (id)_bookmarkWithSpecialID:(unsigned)specialID;	// 0x350eebe1
- (id)_bookmarksFromStatementSelectingIDs:(const char *)statementSelectingIDs withQuery:(id)query;	// 0x350ec461
- (id)_bookmarksInListWhere:(id)listWhere fromIndex:(unsigned)index toIndex:(unsigned)index3;	// 0x350ef211
- (id)_changeList;	// 0x350f4f51
- (BOOL)_clearAllDAVSyncData;	// 0x350f1a09
- (BOOL)_clearAllSyncKeys;	// 0x350f1929
- (BOOL)_clearAllTombstones;	// 0x350f17e5
- (void)_clearAndCreateAncestorTable;	// 0x350f5c75
- (void)_clearAndCreateBookmarksTables;	// 0x350ef615
- (void)_clearAndCreateBookmarksTitleWordTable;	// 0x350ef5a5
- (BOOL)_clearChangeList;	// 0x350f5021
- (BOOL)_clearSyncKeysUnderBookmarkID:(unsigned)anId isFolder:(BOOL)folder;	// 0x350f1815
- (BOOL)_clearTitleWordsForBookmarkID:(unsigned)bookmarkID;	// 0x350f47e1
- (void)_collectChangesOfType:(int)type withClause:(id)clause intoArray:(id)array;	// 0x350f4d65
- (void)_createSchema;	// 0x350ef411
- (id)_databaseTitleForSpecialID:(unsigned)specialID;	// 0x350f2439
- (BOOL)_deleteAncestorTableEntriesForBookmarkID:(unsigned)bookmarkID;	// 0x350f46ad
- (BOOL)_deleteBookmark:(id)bookmark leaveTombstone:(BOOL)tombstone;	// 0x350f1b55
- (BOOL)_deleteRecursively:(unsigned)recursively;	// 0x350f1cc9
- (BOOL)_deleteSyncPropertyForKey:(id)key;	// 0x350ee169
- (id)_errorForMostRecentSQLiteError;	// 0x350f1149
- (int)_executeSQL:(id)sql;	// 0x350f121d
- (int)_executeSQLWithCString:(const char *)cstring;	// 0x350f1235
- (int)_finalizeStatementIfNotNull:(sqlite3_stmt *)null;	// 0x350f1139
- (id)_firstBookmarkWithURLMatchingString:(id)urlmatchingString prefixMatch:(BOOL)match inParent:(unsigned)parent;	// 0x350eed29
- (BOOL)_importBookmarksPlist:(id)plist;	// 0x350f54c5
- (BOOL)_importSyncAnchorPlist:(id)plist;	// 0x350f5525
- (BOOL)_incrementDAVGeneration;	// 0x350f5261
- (BOOL)_incrementGeneration;	// 0x350f4d39
- (BOOL)_indexAllTitleWords;	// 0x350f4b9d
- (BOOL)_indexBookmarkID:(unsigned)anId title:(id)title;	// 0x350f4831
- (BOOL)_insertAncestorTableEntriesForBookmarkID:(unsigned)bookmarkID withAncestorIDs:(id)ancestorIDs;	// 0x350f5cf9
- (BOOL)_insertAncestorTableEntriesForBookmarkID:(unsigned)bookmarkID withParentID:(unsigned)parentID;	// 0x350f44ed
- (BOOL)_insertTombstoneWithServerID:(id)serverID;	// 0x350f16d1
- (int)_intFromExecutingSQL:(id)executingSQL;	// 0x350f124d
- (BOOL)_markBookmarkID:(unsigned)anId added:(BOOL)added;	// 0x350f513d
- (BOOL)_markBookmarkID:(unsigned)anId withSpecialID:(unsigned)specialID;	// 0x350f2f09
- (BOOL)_markSpecialBookmarks;	// 0x350edeb9
- (id)_mergeCandidateBookmarkWithAddress:(id)address parent:(unsigned)parent;	// 0x350ef095
- (id)_mergeCandidateFolderWithTitle:(id)title parent:(unsigned)parent;	// 0x350eef19
- (BOOL)_mergeChildrenOfID:(unsigned)anId referencingBase:(id)base error:(id *)error;	// 0x350edd1d
- (BOOL)_migrateBookmarksPlist:(id)plist syncAnchorPlist:(id)plist2;	// 0x350f0d65
- (void)_migrateSchemaVersion0ToVersion1;	// 0x350ef705
- (void)_migrateSchemaVersion10ToVersion11;	// 0x350efbe9
- (void)_migrateSchemaVersion11And12And13ToVersion14;	// 0x350efc49
- (void)_migrateSchemaVersion14ToVersion15;	// 0x350efcb9
- (void)_migrateSchemaVersion15ToVersion16;	// 0x350efe09
- (void)_migrateSchemaVersion16AndVersion17AndVersion18ToVersion19;	// 0x350efe69
- (void)_migrateSchemaVersion19And20ToVersion21;	// 0x350efec9
- (void)_migrateSchemaVersion1And2ToVersion3;	// 0x350ef7ad
- (void)_migrateSchemaVersion21ToVersion22;	// 0x350f0095
- (void)_migrateSchemaVersion22ToVersion23;	// 0x350f0591
- (void)_migrateSchemaVersion23ToVersion24;	// 0x350f06ed
- (void)_migrateSchemaVersion24ToVersion25;	// 0x350f075d
- (void)_migrateSchemaVersion25ToVersion26;	// 0x350f07cd
- (void)_migrateSchemaVersion26ToVersion27;	// 0x350f0805
- (void)_migrateSchemaVersion27ToVersion28;	// 0x350f0851
- (void)_migrateSchemaVersion3ToVersion4;	// 0x350ef855
- (void)_migrateSchemaVersion4ToVersion5;	// 0x350ef8e9
- (void)_migrateSchemaVersion5ToVersion6;	// 0x350ef99d
- (void)_migrateSchemaVersion6ToVersion7;	// 0x350ef9fd
- (void)_migrateSchemaVersion7ToVersion8;	// 0x350efaa5
- (void)_migrateSchemaVersion8ToVersion9;	// 0x350efb05
- (void)_migrateSchemaVersion9ToVersion10;	// 0x350efb89
- (void)_migrateToCurrentSchema;	// 0x350f0b5d
- (BOOL)_moveBookmark:(id)bookmark toFolderWithID:(unsigned)anId;	// 0x350f1265
- (BOOL)_moveBookmark:(id)bookmark toIndex:(unsigned)index;	// 0x350ebccd
- (void)_normalizeDatabaseURLs;	// 0x350f5591
- (void)_normalizeSearchString:(CFStringRef)string;	// 0x350f47b1
- (BOOL)_openDatabaseAtPath:(id)path checkIntegrity:(BOOL)integrity error:(id *)error;	// 0x350ea4b5
- (BOOL)_orderChildrenWithServerIDs:(id)serverIDs inFolderWithServerID:(id)serverID;	// 0x350f441d
- (int)_orderIndexForBookmarkInsertedIntoParent:(unsigned)bookmarkInsertedIntoParent insertAtBeginning:(BOOL)beginning;	// 0x350eeb29
- (void)_postBookmarksFolderContentsDidChangeNotification:(unsigned)_postBookmarksFolderContents;	// 0x350f5371
- (void)_postBookmarksSpecialFoldersDidChangeNotification;	// 0x350f5405
- (void)_postDistributedBookmarksDidReloadNotification;	// 0x350f530d
- (void)_postDistributedBookmarksDidReloadNotificationIfChangesWereMade;	// 0x350f5349
- (sqlite3_stmt *)_prefixSearch:(id)search usingColumns:(const char *)columns maxCount:(unsigned)count;	// 0x350ec0bd
- (BOOL)_rebuildAncestorTable;	// 0x350f44a5
- (void)_registerForSyncBookmarksFileChangedNotification;	// 0x350f5291
- (BOOL)_reindexBookmarkID:(unsigned)anId title:(id)title;	// 0x350f4b55
- (void)_rerunMigrationsIfNecessary;	// 0x350f088d
- (BOOL)_restoreBookmarkBarIfMissing;	// 0x350f0f35
- (BOOL)_restoreMissingSpecialBookmarks;	// 0x350f103d
- (void)_restoreOrMergeReadingListFolderWithChangeNotification:(BOOL)changeNotification;	// 0x350f57d9
- (BOOL)_saveBookmark:(id)bookmark withSpecialID:(unsigned)specialID updateGeneration:(BOOL)generation;	// 0x350f2495
- (sqlite3_stmt *)_selectBookmarksWhere:(id)where;	// 0x350f108d
- (sqlite3_stmt *)_selectBookmarksWhere:(id)where countOnly:(BOOL)only;	// 0x350f10a1
- (id)_serverIDAtOrderIndex:(int)orderIndex inFolderWithServerID:(id)serverID;	// 0x350f3c99
- (id)_serverIDForBookmarkID:(unsigned)bookmarkID;	// 0x350f2fc5
- (id)_serverIDsInFolderWithServerID:(id)serverID;	// 0x350f3af5
- (BOOL)_setServerID:(id)anId forBookmark:(id)bookmark;	// 0x350f33fd
- (BOOL)_setSyncData:(id)data forBookmark:(id)bookmark;	// 0x350f36ed
- (BOOL)_setSyncKey:(id)key forBookmark:(id)bookmark;	// 0x350f3575
- (unsigned)_specialIDForBookmarkBeingSaved:(id)bookmarkBeingSaved;	// 0x350f2369
- (unsigned)_specialIDForBookmarkTitle:(id)bookmarkTitle;	// 0x350f2275
- (void)_startReadingListFetcher;	// 0x350f5451
- (BOOL)_syncAdd:(id)add toParent:(unsigned)parent withOrderIndex:(unsigned)orderIndex error:(id *)error;	// 0x350edbf5
- (id)_syncKeysForServerIDs:(id)serverIDs;	// 0x350f387d
- (BOOL)_syncPropertyExistsForKey:(id)key;	// 0x350ee039
- (BOOL)_unsafeOrderChildrenWithServerIDs:(id)serverIDs inFolderWithServerID:(id)serverID;	// 0x350f3e69
- (BOOL)_updateCachedChildCountForParentID:(unsigned)parentID inDirection:(int)direction;	// 0x350f2f61
- (BOOL)_updateHiddenAncestorCountForBookmarksUnderFolderID:(unsigned)bookmarksUnderFolderID addingOffset:(int)offset;	// 0x350f5fd9
- (int)_userVersion;	// 0x350ef3f5
- (BOOL)beginSyncTransaction;	// 0x350ee895
- (id)bookmarkAtPath:(id)path;	// 0x350eacb1
- (id)bookmarkWithID:(unsigned)anId;	// 0x350eaaf5
- (id)bookmarkWithUUID:(id)uuid;	// 0x350eabcd
- (id)bookmarksBarBookmark;	// 0x350eac89
- (id)bookmarksBarList;	// 0x350eb39d
- (id)bookmarksDictionary;	// 0x350ed8e9
- (id)bookmarksMatchingString:(id)string;	// 0x350ec2b1
- (id)bookmarksWithTitlesMatchingString:(id)titlesMatchingString;	// 0x350ec751
- (id)bookmarksWithURLsMatchingString:(id)urlsMatchingString;	// 0x350ec799
- (void)commitSyncTransaction;	// 0x350ee965
- (void)dealloc;	// 0x350eaa19
- (BOOL)deleteBookmark:(id)bookmark;	// 0x350eb935
- (id)firstReadingListBookmarkNotAvailableOffline;	// 0x350eca2d
- (id)firstReadingListBookmarkWithIconDataWithBaseURL:(id)baseURL;	// 0x350ec81d
- (id)firstReadingListBookmarkWithURLMatchingString:(id)urlmatchingString prefixMatch:(BOOL)match;	// 0x350ec7e1
- (unsigned)generation;	// 0x350ee01d
- (unsigned)indexOfReadingListBookmark:(id)readingListBookmark countingOnlyUnread:(BOOL)unread;	// 0x350ed019
// declared property getter: - (BOOL)isMerging;	// 0x350ed1d9
- (id)listWithID:(unsigned)anId;	// 0x350eb1e9
- (id)listWithID:(unsigned)anId skipOffset:(unsigned)offset;	// 0x350eb289
- (id)listWithID:(unsigned)anId skipOffset:(unsigned)offset includeHidden:(BOOL)hidden;	// 0x350eb2ad
- (id)listWithSpecialID:(unsigned)specialID;	// 0x350eb1fd
- (void)localeSettingsChanged;	// 0x350eaad5
- (BOOL)mergeWithBookmarksDictionary:(id)bookmarksDictionary clearHidden:(BOOL)hidden error:(id *)error;	// 0x350edefd
- (BOOL)moveBookmark:(id)bookmark toFolderWithID:(unsigned)anId;	// 0x350ebaf5
- (id)readingList;	// 0x350eb4d1
- (id)readingListBookmarksNotAvailableOffline;	// 0x350ece69
- (id)readingListBookmarksNotAvailableOfflineLimitingToVisibleItemCount:(unsigned)visibleItemCount;	// 0x350ecb89
- (id)readingListFolder;	// 0x350eac9d
- (unsigned)readingListFolderBookmarkID;	// 0x350eb4e5
- (id)readingListItemsWithIconData:(BOOL)iconData unreadOnly:(BOOL)only;	// 0x350eb551
- (id)readingListWithUnreadOnly:(BOOL)unreadOnly;	// 0x350eb3b1
- (BOOL)reorderBookmark:(id)bookmark toIndex:(unsigned)index;	// 0x350ebf4d
- (BOOL)reorderList:(id)list moveBookmarkAtIndex:(unsigned)index toIndex:(unsigned)index3;	// 0x350ebfed
- (void)rollbackSyncTransaction;	// 0x350ee981
// converted property getter: - (id)rootBookmark;	// 0x350eb0a1
- (id)rootList;	// 0x350eb389
- (BOOL)saveBookmark:(id)bookmark;	// 0x350eb761
// declared property setter: - (void)setMerging:(BOOL)merging;	// 0x350ed1e9
- (BOOL)setSyncData:(id)data forKey:(id)key;	// 0x350ee575
- (id)subfoldersOfID:(unsigned)anId;	// 0x350eb0e9
- (id)syncDataForKey:(id)key;	// 0x350ee735
- (BOOL)syncSetString:(id)string forKey:(id)key;	// 0x350ee285
- (id)syncStringForKey:(id)key;	// 0x350ee425
- (BOOL)vacuum;	// 0x350eaaa9
@end

