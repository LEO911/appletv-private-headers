/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import "StoreServices-Structs.h"
#import "SSXPCCoding.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSNumber, NSArray, NSLock, NSString, NSURL, NSDate, NSDictionary, NSData, SSItemImageCollection;

@interface SSDownloadMetadata : NSObject <SSXPCCoding, NSCoding, NSCopying> {
@private
	NSMutableDictionary *_dictionary;	// 4 = 0x4
	int _keyStyle;	// 8 = 0x8
	NSLock *_lock;	// 12 = 0xc
}
@property(readonly, assign) NSArray *MD5HashStrings;	// G=0x34e37395; 
@property(assign) unsigned long long artistIdentifier;	// G=0x34e34ddd; S=0x34e35d35; 
@property(copy) NSString *artistName;	// G=0x34e34e19; S=0x34e35d9d; 
@property(assign) BOOL artworkIsPrerendered;	// G=0x34e34e85; S=0x34e35de9; converted property
@property(assign, getter=isAutomaticDownload) BOOL automaticDownload;	// G=0x34e37271; S=0x34e3841d; 
@property(retain) id bundleIdentifier;	// G=0x34e34ee5; S=0x34e35e39; converted property
@property(retain) NSURL *cancelDownloadURL;	// G=0x34e36d41; S=0x34e38461; 
@property(retain) id collectionArtistName;	// G=0x34e34f51; S=0x34e35e55; converted property
@property(assign) unsigned long long collectionIdentifier;	// G=0x34e34fad; S=0x34e35e71; converted property
@property(retain) id collectionIndexInCollectionGroup;	// G=0x34e34fe9; S=0x34e35ed9; converted property
@property(retain) id collectionName;	// G=0x34e35055; S=0x34e35f25; converted property
@property(assign, getter=isCompilation) BOOL compilation;	// G=0x34e355ad; S=0x34e35f71; converted property
@property(assign) unsigned long long composerIdentifier;	// G=0x34e350c1; S=0x34e35fb5; converted property
@property(retain) id composerName;	// G=0x34e350fd; S=0x34e3601d; converted property
@property(retain) id contentRating;	// G=0x34e35159; S=0x34e36039; converted property
@property(readonly, assign, getter=isContentRestricted) BOOL contentRestricted;	// G=0x34e372c9; 
@property(retain) NSString *copyright;	// G=0x34e36dc1; S=0x34e3849d; 
@property(retain) NSDictionary *dictionary;	// G=0x34e370dd; S=0x34e384b9; 
@property(retain) id documentTargetIdentifier;	// G=0x34e351f9; S=0x34e36075; converted property
@property(retain) NSString *downloadKey;	// G=0x34e37115; S=0x34e38539; 
@property(retain) id durationInMilliseconds;	// G=0x34e35255; S=0x34e36091; converted property
@property(retain) id episodeIdentifier;	// G=0x34e352b1; S=0x34e360ad; converted property
@property(retain) id episodeSortIdentifier;	// G=0x34e352ed; S=0x34e360c9; converted property
@property(retain) NSData *epubRightsData;	// G=0x34e37171; S=0x34e38555; 
@property(assign, getter=isExplicitContent) BOOL explicitContent;	// G=0x34e35605; S=0x34e360e5; converted property
@property(retain) NSString *fileExtension;	// G=0x34e371cd; S=0x34e38571; 
@property(retain) NSURL *fullSizeImageURL;	// G=0x34e35361; S=0x34e36131; 
@property(retain) NSString *genre;	// G=0x34e3548d; S=0x34e3616d; 
@property(assign) unsigned long long genreIdentifier;	// G=0x34e35505; S=0x34e36189; 
@property(retain) id indexInCollection;	// G=0x34e35541; S=0x34e361f1; converted property
@property(assign) unsigned long long itemIdentifier;	// G=0x34e35715; S=0x34e3623d; 
@property(assign) int keyStyle;	// G=0x34e37229; S=0x34e3858d; 
@property(retain) NSString *kind;	// G=0x34e35759; S=0x34e362a5; 
@property(copy) NSString *longDescription;	// G=0x34e357b5; S=0x34e362c1; 
@property(retain) id longSeasonDescription;	// G=0x34e35cd9; S=0x34e365bd; converted property
@property(retain) id networkName;	// G=0x34e35821; S=0x34e3630d; converted property
@property(readonly, assign) NSNumber *numberOfBytesToHash;	// G=0x34e37fd9; 
@property(retain) id numberOfCollectionsInCollectionGroup;	// G=0x34e3587d; S=0x34e36329; converted property
@property(retain) id numberOfItemsInCollection;	// G=0x34e358e9; S=0x34e36375; converted property
@property(retain) id podcastEpisodeGUID;	// G=0x34e35955; S=0x34e363c1; converted property
@property(retain) id podcastFeedURL;	// G=0x34e359b1; S=0x34e363dd; converted property
@property(retain) id podcastType;	// G=0x34e359ed; S=0x34e36419; converted property
@property(assign) unsigned long long preOrderIdentifier;	// G=0x34e3814d; S=0x34e38881; 
@property(copy) NSString *preferredAssetFlavor;	// G=0x34e38085; S=0x34e3876d; 
@property(readonly, assign) NSDictionary *primaryAssetDictionary;	// G=0x34e35a49; 
@property(retain) NSURL *primaryAssetURL;	// G=0x34e381c1; S=0x34e388c5; 
@property(retain) id purchaseDate;	// G=0x34e35ab9; S=0x34e36435; converted property
@property(copy) NSString *redownloadActionParameters;	// G=0x34e3824d; S=0x34e38901; 
@property(assign, getter=isRedownloadDownload) BOOL redownloadDownload;	// G=0x34e3733d; S=0x34e3891d; 
@property(retain) NSDate *releaseDate;	// G=0x34e35af5; S=0x34e36451; 
@property(retain) NSString *releaseDateString;	// G=0x34e382d1; S=0x34e38961; 
@property(retain) NSNumber *releaseYear;	// G=0x34e35b25; S=0x34e3649d; 
@property(assign, getter=isRental) BOOL rental;	// G=0x34e35665; S=0x34e364b9; converted property
@property(copy) id requiredDeviceCapabilities;	// G=0x34e38391; S=0x34e389ad; 
@property(assign) unsigned long long sagaIdentifier;	// G=0x34e35b81; S=0x34e364fd; converted property
@property(assign, getter=isSample) BOOL sample;	// G=0x34e356bd; S=0x34e36541; converted property
@property(retain) id seasonNumber;	// G=0x34e35c09; S=0x34e36585; converted property
@property(retain) id seriesName;	// G=0x34e35c65; S=0x34e365a1; converted property
@property(copy) NSString *shortDescription;	// G=0x34e36781; S=0x34e365d9; 
@property(assign) BOOL shouldDownloadAutomatically;	// G=0x34e3946d; S=0x34e389c9; 
@property(retain) NSArray *sinfs;	// G=0x34e394c5; S=0x34e38a0d; 
@property(retain) NSString *sortArtistName;	// G=0x34e367dd; S=0x34e365f5; 
@property(retain) NSString *sortCollectionName;	// G=0x34e36851; S=0x34e36611; 
@property(retain) NSString *sortTitle;	// G=0x34e368c5; S=0x34e3662d; 
@property(retain) NSString *subtitle;	// G=0x34e36939; S=0x34e36649; 
@property(readonly, assign) SSItemImageCollection *thumbnailImageCollection;	// G=0x34e36949; 
@property(retain) NSURL *thumbnailImageURL;	// G=0x34e36bad; S=0x34e36691; 
@property(retain) NSString *thumbnailNewsstandBindingEdge;	// G=0x34e36a85; S=0x34e36659; 
@property(retain) NSString *thumbnailNewsstandBindingType;	// G=0x34e36b19; S=0x34e36675; 
@property(retain) NSString *title;	// G=0x34e36bd5; S=0x34e366cd; 
@property(retain) NSString *transactionIdentifier;	// G=0x34e36c4d; S=0x34e3670d; 
@property(copy) NSURL *transitMapDataURL;	// G=0x34e39521; S=0x34e38a29; 
@property(retain) id videoDetailsDictionary;	// G=0x34e36ca9; S=0x34e36729; converted property
@property(retain) id viewStoreItemURL;	// G=0x34e36d05; S=0x34e36745; converted property
- (id)init;	// 0x34e33e15
- (id)initWithCoder:(id)coder;	// 0x34e3491d
- (id)initWithDictionary:(id)dictionary;	// 0x34e33e29
- (id)initWithItem:(id)item;	// 0x34e33eb1
- (id)initWithItem:(id)item offer:(id)offer;	// 0x34e33ee5
- (id)initWithKind:(id)kind;	// 0x34e34789
- (id)initWithXPCEncoding:(id)xpcencoding;	// 0x34e34d39
// declared property getter: - (id)MD5HashStrings;	// 0x34e37395
- (id)_assetDictionary;	// 0x34e396cd
- (id)_dateValueForValue:(id)value;	// 0x34e39a85
- (id)_newDateFormatter;	// 0x34e39d6d
- (id)_newImageCollectionWithURLString:(id)urlstring;	// 0x34e39b35
- (id)_releaseDateValue;	// 0x34e39e05
- (void)_setValue:(id)value forTopLevelKey:(id)topLevelKey;	// 0x34e39e3d
- (void)_setValueCopy:(id)copy forMetadataKey:(id)metadataKey;	// 0x34e39ef9
- (id)_stringValueForValue:(id)value;	// 0x34e39f41
- (id)_thumbnailArtworkImage;	// 0x34e39fbd
- (id)_urlValueForValue:(id)value;	// 0x34e3a08d
- (id)_valueForFirstAvailableTopLevelKey:(id)firstAvailableTopLevelKey;	// 0x34e3a115
- (id)applicationIdentifier;	// 0x34e34d75
// declared property getter: - (unsigned long long)artistIdentifier;	// 0x34e34ddd
// declared property getter: - (id)artistName;	// 0x34e34e19
// converted property getter: - (BOOL)artworkIsPrerendered;	// 0x34e34e85
// converted property getter: - (id)bundleIdentifier;	// 0x34e34ee5
// declared property getter: - (id)cancelDownloadURL;	// 0x34e36d41
// converted property getter: - (id)collectionArtistName;	// 0x34e34f51
// converted property getter: - (unsigned long long)collectionIdentifier;	// 0x34e34fad
// converted property getter: - (id)collectionIndexInCollectionGroup;	// 0x34e34fe9
// converted property getter: - (id)collectionName;	// 0x34e35055
// converted property getter: - (unsigned long long)composerIdentifier;	// 0x34e350c1
// converted property getter: - (id)composerName;	// 0x34e350fd
// converted property getter: - (id)contentRating;	// 0x34e35159
- (id)copyWithZone:(NSZone *)zone;	// 0x34e34c85
- (id)copyWritableMetadata;	// 0x34e36e1d
- (id)copyXPCEncoding;	// 0x34e34d25
// declared property getter: - (id)copyright;	// 0x34e36dc1
- (void)dealloc;	// 0x34e347bd
// declared property getter: - (id)dictionary;	// 0x34e370dd
// converted property getter: - (id)documentTargetIdentifier;	// 0x34e351f9
// declared property getter: - (id)downloadKey;	// 0x34e37115
// converted property getter: - (id)durationInMilliseconds;	// 0x34e35255
- (void)encodeWithCoder:(id)coder;	// 0x34e34821
// converted property getter: - (id)episodeIdentifier;	// 0x34e352b1
// converted property getter: - (id)episodeSortIdentifier;	// 0x34e352ed
// declared property getter: - (id)epubRightsData;	// 0x34e37171
// declared property getter: - (id)fileExtension;	// 0x34e371cd
// declared property getter: - (id)fullSizeImageURL;	// 0x34e35361
// declared property getter: - (id)genre;	// 0x34e3548d
// declared property getter: - (unsigned long long)genreIdentifier;	// 0x34e35505
// converted property getter: - (id)indexInCollection;	// 0x34e35541
// declared property getter: - (BOOL)isAutomaticDownload;	// 0x34e37271
// converted property getter: - (BOOL)isCompilation;	// 0x34e355ad
// declared property getter: - (BOOL)isContentRestricted;	// 0x34e372c9
// converted property getter: - (BOOL)isExplicitContent;	// 0x34e35605
// declared property getter: - (BOOL)isRedownloadDownload;	// 0x34e3733d
// converted property getter: - (BOOL)isRental;	// 0x34e35665
// converted property getter: - (BOOL)isSample;	// 0x34e356bd
// declared property getter: - (unsigned long long)itemIdentifier;	// 0x34e35715
// declared property getter: - (int)keyStyle;	// 0x34e37229
// declared property getter: - (id)kind;	// 0x34e35759
// declared property getter: - (id)longDescription;	// 0x34e357b5
// converted property getter: - (id)longSeasonDescription;	// 0x34e35cd9
// converted property getter: - (id)networkName;	// 0x34e35821
- (id)newDownloadProperties;	// 0x34e3749d
// declared property getter: - (id)numberOfBytesToHash;	// 0x34e37fd9
// converted property getter: - (id)numberOfCollectionsInCollectionGroup;	// 0x34e3587d
// converted property getter: - (id)numberOfItemsInCollection;	// 0x34e358e9
// converted property getter: - (id)podcastEpisodeGUID;	// 0x34e35955
// converted property getter: - (id)podcastFeedURL;	// 0x34e359b1
// converted property getter: - (id)podcastType;	// 0x34e359ed
// declared property getter: - (unsigned long long)preOrderIdentifier;	// 0x34e3814d
// declared property getter: - (id)preferredAssetFlavor;	// 0x34e38085
// declared property getter: - (id)primaryAssetDictionary;	// 0x34e35a49
// declared property getter: - (id)primaryAssetURL;	// 0x34e381c1
// converted property getter: - (id)purchaseDate;	// 0x34e35ab9
// declared property getter: - (id)redownloadActionParameters;	// 0x34e3824d
// declared property getter: - (id)releaseDate;	// 0x34e35af5
// declared property getter: - (id)releaseDateString;	// 0x34e382d1
// declared property getter: - (id)releaseYear;	// 0x34e35b25
// declared property getter: - (id)requiredDeviceCapabilities;	// 0x34e38391
// converted property getter: - (unsigned long long)sagaIdentifier;	// 0x34e35b81
// converted property getter: - (id)seasonNumber;	// 0x34e35c09
// converted property getter: - (id)seriesName;	// 0x34e35c65
// declared property setter: - (void)setArtistIdentifier:(unsigned long long)identifier;	// 0x34e35d35
// declared property setter: - (void)setArtistName:(id)name;	// 0x34e35d9d
// converted property setter: - (void)setArtworkIsPrerendered:(BOOL)prerendered;	// 0x34e35de9
// declared property setter: - (void)setAutomaticDownload:(BOOL)download;	// 0x34e3841d
// converted property setter: - (void)setBundleIdentifier:(id)identifier;	// 0x34e35e39
// declared property setter: - (void)setCancelDownloadURL:(id)url;	// 0x34e38461
// converted property setter: - (void)setCollectionArtistName:(id)name;	// 0x34e35e55
// converted property setter: - (void)setCollectionIdentifier:(unsigned long long)identifier;	// 0x34e35e71
// converted property setter: - (void)setCollectionIndexInCollectionGroup:(id)collectionGroup;	// 0x34e35ed9
// converted property setter: - (void)setCollectionName:(id)name;	// 0x34e35f25
// converted property setter: - (void)setCompilation:(BOOL)compilation;	// 0x34e35f71
// converted property setter: - (void)setComposerIdentifier:(unsigned long long)identifier;	// 0x34e35fb5
// converted property setter: - (void)setComposerName:(id)name;	// 0x34e3601d
// converted property setter: - (void)setContentRating:(id)rating;	// 0x34e36039
// declared property setter: - (void)setCopyright:(id)copyright;	// 0x34e3849d
// declared property setter: - (void)setDictionary:(id)dictionary;	// 0x34e384b9
// converted property setter: - (void)setDocumentTargetIdentifier:(id)identifier;	// 0x34e36075
// declared property setter: - (void)setDownloadKey:(id)key;	// 0x34e38539
// converted property setter: - (void)setDurationInMilliseconds:(id)milliseconds;	// 0x34e36091
// converted property setter: - (void)setEpisodeIdentifier:(id)identifier;	// 0x34e360ad
// converted property setter: - (void)setEpisodeSortIdentifier:(id)identifier;	// 0x34e360c9
// declared property setter: - (void)setEpubRightsData:(id)data;	// 0x34e38555
// converted property setter: - (void)setExplicitContent:(BOOL)content;	// 0x34e360e5
// declared property setter: - (void)setFileExtension:(id)extension;	// 0x34e38571
// declared property setter: - (void)setFullSizeImageURL:(id)url;	// 0x34e36131
// declared property setter: - (void)setGenre:(id)genre;	// 0x34e3616d
// declared property setter: - (void)setGenreIdentifier:(unsigned long long)identifier;	// 0x34e36189
// converted property setter: - (void)setIndexInCollection:(id)collection;	// 0x34e361f1
// declared property setter: - (void)setItemIdentifier:(unsigned long long)identifier;	// 0x34e3623d
// declared property setter: - (void)setKeyStyle:(int)style;	// 0x34e3858d
// declared property setter: - (void)setKind:(id)kind;	// 0x34e362a5
// declared property setter: - (void)setLongDescription:(id)description;	// 0x34e362c1
// converted property setter: - (void)setLongSeasonDescription:(id)description;	// 0x34e365bd
- (void)setMD5HashStrings:(id)strings numberOfBytesToHash:(id)hash;	// 0x34e385d9
// converted property setter: - (void)setNetworkName:(id)name;	// 0x34e3630d
// converted property setter: - (void)setNumberOfCollectionsInCollectionGroup:(id)collectionGroup;	// 0x34e36329
// converted property setter: - (void)setNumberOfItemsInCollection:(id)collection;	// 0x34e36375
// converted property setter: - (void)setPodcastEpisodeGUID:(id)guid;	// 0x34e363c1
// converted property setter: - (void)setPodcastFeedURL:(id)url;	// 0x34e363dd
// converted property setter: - (void)setPodcastType:(id)type;	// 0x34e36419
// declared property setter: - (void)setPreOrderIdentifier:(unsigned long long)identifier;	// 0x34e38881
// declared property setter: - (void)setPreferredAssetFlavor:(id)flavor;	// 0x34e3876d
// declared property setter: - (void)setPrimaryAssetURL:(id)url;	// 0x34e388c5
// converted property setter: - (void)setPurchaseDate:(id)date;	// 0x34e36435
// declared property setter: - (void)setRedownloadActionParameters:(id)parameters;	// 0x34e38901
// declared property setter: - (void)setRedownloadDownload:(BOOL)download;	// 0x34e3891d
// declared property setter: - (void)setReleaseDate:(id)date;	// 0x34e36451
// declared property setter: - (void)setReleaseDateString:(id)string;	// 0x34e38961
// declared property setter: - (void)setReleaseYear:(id)year;	// 0x34e3649d
// converted property setter: - (void)setRental:(BOOL)rental;	// 0x34e364b9
// declared property setter: - (void)setRequiredDeviceCapabilities:(id)capabilities;	// 0x34e389ad
// converted property setter: - (void)setSagaIdentifier:(unsigned long long)identifier;	// 0x34e364fd
// converted property setter: - (void)setSample:(BOOL)sample;	// 0x34e36541
// converted property setter: - (void)setSeasonNumber:(id)number;	// 0x34e36585
// converted property setter: - (void)setSeriesName:(id)name;	// 0x34e365a1
// declared property setter: - (void)setShortDescription:(id)description;	// 0x34e365d9
// declared property setter: - (void)setShouldDownloadAutomatically:(BOOL)downloadAutomatically;	// 0x34e389c9
// declared property setter: - (void)setSinfs:(id)sinfs;	// 0x34e38a0d
// declared property setter: - (void)setSortArtistName:(id)name;	// 0x34e365f5
// declared property setter: - (void)setSortCollectionName:(id)name;	// 0x34e36611
// declared property setter: - (void)setSortTitle:(id)title;	// 0x34e3662d
// declared property setter: - (void)setSubtitle:(id)subtitle;	// 0x34e36649
// declared property setter: - (void)setThumbnailImageURL:(id)url;	// 0x34e36691
// declared property setter: - (void)setThumbnailNewsstandBindingEdge:(id)edge;	// 0x34e36659
// declared property setter: - (void)setThumbnailNewsstandBindingType:(id)type;	// 0x34e36675
// declared property setter: - (void)setTitle:(id)title;	// 0x34e366cd
// declared property setter: - (void)setTransactionIdentifier:(id)identifier;	// 0x34e3670d
// declared property setter: - (void)setTransitMapDataURL:(id)url;	// 0x34e38a29
- (void)setValue:(id)value forMetadataKey:(id)metadataKey;	// 0x34e38a65
- (void)setValuesFromDownload:(id)download;	// 0x34e38bdd
// converted property setter: - (void)setVideoDetailsDictionary:(id)dictionary;	// 0x34e36729
// converted property setter: - (void)setViewStoreItemURL:(id)url;	// 0x34e36745
// declared property getter: - (id)shortDescription;	// 0x34e36781
// declared property getter: - (BOOL)shouldDownloadAutomatically;	// 0x34e3946d
// declared property getter: - (id)sinfs;	// 0x34e394c5
// declared property getter: - (id)sortArtistName;	// 0x34e367dd
// declared property getter: - (id)sortCollectionName;	// 0x34e36851
// declared property getter: - (id)sortTitle;	// 0x34e368c5
// declared property getter: - (id)subtitle;	// 0x34e36939
// declared property getter: - (id)thumbnailImageCollection;	// 0x34e36949
// declared property getter: - (id)thumbnailImageURL;	// 0x34e36bad
// declared property getter: - (id)thumbnailNewsstandBindingEdge;	// 0x34e36a85
// declared property getter: - (id)thumbnailNewsstandBindingType;	// 0x34e36b19
// declared property getter: - (id)title;	// 0x34e36bd5
// declared property getter: - (id)transactionIdentifier;	// 0x34e36c4d
// declared property getter: - (id)transitMapDataURL;	// 0x34e39521
- (id)valueForFirstAvailableKey:(id)firstAvailableKey;	// 0x34e395a1
- (id)valueForMetadataKey:(id)metadataKey;	// 0x34e396b5
// converted property getter: - (id)videoDetailsDictionary;	// 0x34e36ca9
// converted property getter: - (id)viewStoreItemURL;	// 0x34e36d05
@end

