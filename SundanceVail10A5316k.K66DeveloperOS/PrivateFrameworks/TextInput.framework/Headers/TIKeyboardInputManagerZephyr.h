/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/TextInput.framework/TextInput
 */

#import "TextInput-Structs.h"
#import <UIKeyboardInputManager.h> // Unknown library

@class NSMutableString, NSMutableArray, TIWordTokenizer, CPLRUDictionary, TIKeyboardInputManagerConfig;

@interface TIKeyboardInputManagerZephyr : UIKeyboardInputManager {
	TIInputManagerZephyr *m_impl;	// 4 = 0x4
	NSMutableString *m_composedText;	// 8 = 0x8
	unsigned m_defaultCandidateIndex;	// 12 = 0xc
	TIWordTokenizer *m_wordTokenizer;	// 16 = 0x10
@private
	RefPtr<TIAutoshiftRegularExpression> m_autoshift_regex;	// 20 = 0x14
	TIKeyboardInputManagerConfig *_config;	// 24 = 0x18
	NSMutableArray *_inputHistory;	// 28 = 0x1c
	CPLRUDictionary *_autocorrectionHistory;	// 32 = 0x20
	int _autocapitalizationType;	// 36 = 0x24
}
@property(assign, nonatomic) int autocapitalizationType;	// G=0x31bef639; S=0x31bef649; @synthesize=_autocapitalizationType
@property(retain, nonatomic) CPLRUDictionary *autocorrectionHistory;	// G=0x31bef619; S=0x31bef629; @synthesize=_autocorrectionHistory
@property(readonly, assign, nonatomic) TIKeyboardInputManagerConfig *config;	// G=0x31bef5f9; @synthesize=_config
@property(readonly, assign) unsigned defaultCandidateIndex;	// G=0x31bef395; converted property
@property(assign) BOOL inHardwareKeyboardMode;	// G=0x31bed745; S=0x31bed721; converted property
@property(readonly, assign, nonatomic) NSMutableArray *inputHistory;	// G=0x31bef609; @synthesize=_inputHistory
@property(assign) unsigned inputIndex;	// G=0x31bee00d; S=0x31bedfb1; converted property
- (id)init;	// 0x31bed279
- (TIInputManagerZephyr *)initImplementation;	// 0x31bed489
- (id)initWithConfig:(id)config;	// 0x31becfe9
- (id).cxx_construct;	// 0x31bef675
- (void).cxx_destruct;	// 0x31bef659
- (void)acceptInput;	// 0x31bede69
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x31bef551
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x31bed785
- (void)appendToInputContext:(id)inputContext;	// 0x31bedf11
// declared property getter: - (int)autocapitalizationType;	// 0x31bef639
- (id)autocorrection;	// 0x31bee979
// declared property getter: - (id)autocorrectionHistory;	// 0x31bef619
- (BOOL)canHandleKeyHitTest;	// 0x31bef3f5
- (BOOL)canStartSentenceAfterString:(id)string;	// 0x31bee545
- (void)candidateRejected:(id)rejected;	// 0x31bee351
- (id)candidates;	// 0x31bef1bd
- (id)candidatesForString:(id)string;	// 0x31bef059
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x31bee7bd
- (void)checkAutocorrectionDictionaries;	// 0x31bee7c1
- (void)clearAllCentroids;	// 0x31bef3f1
- (void)clearDynamicDictionary;	// 0x31bed76d
- (void)clearInput;	// 0x31bedde5
- (void)clearInputContext;	// 0x31bedf9d
- (void)clearKeyAreas;	// 0x31bef3f9
// declared property getter: - (id)config;	// 0x31bef5f9
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x31bed765
- (void)dealloc;	// 0x31bed2b5
- (id)defaultCandidate;	// 0x31bee149
// converted property getter: - (unsigned)defaultCandidateIndex;	// 0x31bef395
- (id)deleteFromInput:(unsigned *)input;	// 0x31bedbfd
- (void)deleteFromStrokeHistory;	// 0x31bef539
- (unsigned)deleteLengthForString:(id)string;	// 0x31bedbe9
- (BOOL)doesComposeText;	// 0x31bed37d
- (unsigned)externalIndexToInternal:(unsigned)internal;	// 0x31bed405
- (id)externalStringToInternal:(id)internal;	// 0x31bed381
// converted property getter: - (BOOL)inHardwareKeyboardMode;	// 0x31bed745
- (void)increaseUserFrequency:(id)frequency usageFlags:(unsigned)flags;	// 0x31bee301
- (id)inputContext;	// 0x31beded9
- (unsigned)inputCount;	// 0x31bee035
- (BOOL)inputEmpty;	// 0x31bee06d
// declared property getter: - (id)inputHistory;	// 0x31bef609
// converted property getter: - (unsigned)inputIndex;	// 0x31bee00d
- (void)inputLocationChanged;	// 0x31bee3d5
- (id)inputString;	// 0x31bee08d
- (unsigned)internalIndexToExternal:(unsigned)external;	// 0x31bed389
- (id)internalStringToExternal:(id)external;	// 0x31bed385
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x31bef479
- (void)loadDictionaries;	// 0x31bed4b1
- (void)loadFavoniusLanguageModel;	// 0x31bed5c1
- (unsigned)maximumShortcutLengthAllowed;	// 0x31beea95
- (BOOL)nextInputWouldStartSentence;	// 0x31bee515
- (id)phraseCandidateCompletedByWord:(const Word *)word;	// 0x31bee7f1
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x31bef3a5
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x31bef415
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x31bedf55
- (id)sentenceDelimitingCharacters;	// 0x31bee4fd
- (id)sentencePrefixingCharacters;	// 0x31bee4f1
- (id)sentenceTrailingCharacters;	// 0x31bee509
- (void)setAutoCorrects:(BOOL)corrects;	// 0x31bed6c1
// declared property setter: - (void)setAutocapitalizationType:(int)type;	// 0x31bef649
// declared property setter: - (void)setAutocorrectionHistory:(id)history;	// 0x31bef629
- (void)setAutoshiftFromInputContext;	// 0x31bee74d
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x31bed769
- (void)setCollatorLocale;	// 0x31bed6b1
// converted property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x31bed721
- (void)setInput:(id)input;	// 0x31bed9f5
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x31bedfb1
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x31bed705
- (void)setLearnsCorrection:(BOOL)correction;	// 0x31bed6e1
- (void)setTypologyRecorder:(id)recorder;	// 0x31bef59d
- (id)shadowTyping;	// 0x31bee411
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x31beefe5
- (id)shortcutConversionForString:(id)string stringStartsInMiddleOfWord:(BOOL)word;	// 0x31beeab1
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x31beea39
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x31bee0f5
- (BOOL)supportsShortcutConversion;	// 0x31beea91
- (void)textAccepted:(id)accepted;	// 0x31bee1a9
- (id)textPrecedingNextInput;	// 0x31bee461
- (BOOL)usesCandidateSelection;	// 0x31bef041
- (unsigned)wordHistoryDepth;	// 0x31bedff1
@end

