/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import "MSSubscriber.h"
#import "MSSubscribeStreamsProtocolDelegate.h"
#import "MSSubscribeStorageProtocolDelegate.h"
#import "MSReauthorizationProtocolDelegate.h"
#import "MSCupidStateMachine.h"

@class MSMediaStreamDaemon, MSReauthorizationProtocol, MSObjectQueue, MSSubscribeStreamsProtocol, NSMutableArray, NSMutableDictionary;
@protocol MSSubscribeStorageProtocol, MSSubscriberDelegate;

@protocol MSSubscriber
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;
- (void)abort;
- (void)checkForNewAssetCollections;
- (void)checkForOutstandingActivities;
// declared property getter: - (id)delegate;
- (id)ownSubscribedStream;
- (void)resetSync;
- (void)retrieveAssets:(id)assets;
// declared property setter: - (void)setDelegate:(id)delegate;
- (void)stop;
- (id)subscribedStreams;
@end

@interface MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate> {
@private
	id<MSSubscriberDelegate> _delegate;	// 24 = 0x18
	MSMediaStreamDaemon *_daemon;	// 28 = 0x1c
	BOOL _checkOneMoreTime;	// 32 = 0x20
	int _state;	// 36 = 0x24
	MSSubscribeStreamsProtocol *_protocol;	// 40 = 0x28
	NSMutableDictionary *_newSubscriptionsByStreamID;	// 44 = 0x2c
	int _retrievalState;	// 48 = 0x30
	id<MSSubscribeStorageProtocol> _storageProtocol;	// 52 = 0x34
	MSReauthorizationProtocol *_reauthProtocol;	// 56 = 0x38
	MSObjectQueue *_retrievalQueue;	// 60 = 0x3c
	NSMutableArray *_assetsBeingRetrieved;	// 64 = 0x40
	long long _targetRetrievalByteCount;	// 68 = 0x44
	int _retrievalBatchSize;	// 76 = 0x4c
	int _maxErrorCount;	// 80 = 0x50
}
@property(assign, nonatomic) MSMediaStreamDaemon *daemon;	// G=0x33990f79; S=0x33990f89; @synthesize=_daemon
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;	// G=0x33990f59; S=0x33990f69; @synthesize=_delegate
@property(assign, nonatomic) int retrievalBatchSize;	// G=0x33990fc5; S=0x33990fd5; @synthesize=_retrievalBatchSize
@property(assign, nonatomic) long long targetRetrievalByteCount;	// G=0x33990f99; S=0x33990fb1; @synthesize=_targetRetrievalByteCount
+ (id)_clearInstantiatedSubscribersByPersonID;	// 0x3398cb0d
+ (void)_setMasterNextActivityDate:(id)date forPersonID:(id)personID;	// 0x3398cb8d
+ (id)existingSubscriberForPersonID:(id)personID;	// 0x3398caf1
+ (void)forgetPersonID:(id)anId;	// 0x3398cb21
+ (BOOL)isInRetryState;	// 0x3398d161
+ (id)nextActivityDate;	// 0x3398cee1
+ (id)nextActivityDateForPersonID:(id)personID;	// 0x3398cff5
+ (id)personIDsWithOutstandingActivities;	// 0x3398d045
+ (void)stopAllActivities;	// 0x3398d081
+ (id)subscriberForPersonID:(id)personID;	// 0x3398c9d5
- (id)initWithPersonID:(id)personID baseURL:(id)url;	// 0x3398d411
- (void).cxx_destruct;	// 0x33990fe5
- (void)_abort;	// 0x3398fa25
- (void)_checkForNewAssetCollections;	// 0x3398e05d
- (void)_didFinishRetrievingSubscriptionUpdate;	// 0x3398e271
- (void)_didReceiveAuthenticationError:(id)error;	// 0x3398ed59
- (void)_finishedRetrievingAsset:(id)asset;	// 0x3398fd85
- (void)_forget;	// 0x3398fd09
- (BOOL)_hasOutstandingPoll;	// 0x3398db59
- (BOOL)_isAllowedToDownload;	// 0x3398de45
- (BOOL)_isInRetryState;	// 0x3398fd51
- (void)_reauthorizeAssets;	// 0x3398f7b9
- (void)_refreshServerSideConfigurationParameters;	// 0x3398d7b5
- (void)_retrieveAssets;	// 0x3398f449
- (void)_retrieveNextAssets;	// 0x3398f59d
- (void)_serverSideConfigurationDidChange:(id)_serverSideConfiguration;	// 0x3398d8d1
- (void)_setHasOutstandingPoll:(BOOL)poll;	// 0x3398dbbd
- (void)_setSubscriptionsByStreamID:(id)anId;	// 0x3398dd51
- (void)_stopOutSubscriberState:(int *)state outRetrievalState:(int *)state2;	// 0x3398f8d1
- (id)_subscriptionsByStreamID;	// 0x3398dca5
- (void)_updateMasterManifest;	// 0x3398da75
- (void)abort;	// 0x3398fcf9
- (void)checkForNewAssetCollections;	// 0x3398df4d
- (void)checkForOutstandingActivities;	// 0x3398f3cd
// declared property getter: - (id)daemon;	// 0x33990f79
- (void)deactivate;	// 0x3398d659
- (void)dealloc;	// 0x3398d775
// declared property getter: - (id)delegate;	// 0x33990f59
- (id)ownSubscribedStream;	// 0x3398d3a5
- (void)reauthorizationProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x339908cd
- (void)reauthorizationProtocol:(id)protocol reauthorizedAssets:(id)assets rejectedAssets:(id)assets3 error:(id)error;	// 0x339909d1
- (void)resetSync;	// 0x3398ddc5
// declared property getter: - (int)retrievalBatchSize;	// 0x33990fc5
- (void)retrieveAssets:(id)assets;	// 0x3398ef65
// declared property setter: - (void)setDaemon:(id)daemon;	// 0x33990f89
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x33990f69
// declared property setter: - (void)setRetrievalBatchSize:(int)size;	// 0x33990fd5
// declared property setter: - (void)setTargetRetrievalByteCount:(long long)count;	// 0x33990fb1
- (void)stop;	// 0x3398fa11
- (void)subscribeStorageProtocol:(id)protocol didFinishRetrievingAsset:(id)asset error:(id)error;	// 0x3398fed1
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)subscribeStorageProtocol;	// 0x33990011
- (void)subscribeStreamsProtocol:(id)protocol didFindDisappearedSubscriptionForPersonID:(id)personID;	// 0x3398ea35
- (void)subscribeStreamsProtocol:(id)protocol didFindShareState:(id)state;	// 0x3398eee9
- (void)subscribeStreamsProtocol:(id)protocol didFindTemporarilyUnavailableSubscriptionForPersonID:(id)personID;	// 0x3398ee71
- (void)subscribeStreamsProtocol:(id)protocol didFinishError:(id)error;	// 0x3398eb0d
- (void)subscribeStreamsProtocol:(id)protocol didFinishReceivingUpdatesForPersonID:(id)personID ctag:(id)ctag;	// 0x3398e821
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAssetCollections:(id)collections forPersonID:(id)personID;	// 0x3398e59d
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x3398ee5d
- (void)subscribeStreamsProtocol:(id)protocol willReceiveUpdatesForPersonID:(id)personID wasReset:(BOOL)reset metadata:(id)metadata;	// 0x3398e36d
- (id)subscribedStreams;	// 0x3398d251
// declared property getter: - (long long)targetRetrievalByteCount;	// 0x33990f99
@end

