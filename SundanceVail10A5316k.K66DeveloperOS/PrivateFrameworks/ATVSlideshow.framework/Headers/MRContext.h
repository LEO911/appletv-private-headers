/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import <NSObject.h> // Unknown library

@class MRContextState, MRImage, MRImageManager, MRShader, EAGLContext, NSMutableDictionary;
@protocol MZMediaManagement;

@interface MRContext : NSObject {
	MRContext *mBaseContext;	// 4 = 0x4
	EAGLContext *mGLContext;	// 8 = 0x8
	CGPoint mPixelOffset;	// 12 = 0xc
	CGSize mPixelSize;	// 20 = 0x14
	int mVRAM;	// 28 = 0x1c
	float mFieldOfViewFactor;	// 32 = 0x20
	float mProjectionMatrix[16];	// 36 = 0x24
	int mOrientation;	// 100 = 0x64
	id<MZMediaManagement> mAssetManager;	// 104 = 0x68
	MRImageManager *mImageManager;	// 108 = 0x6c
	BOOL mIsLocalContext;	// 112 = 0x70
	BOOL mIsFlipped;	// 113 = 0x71
	BOOL mIsUsingIntelGPU;	// 114 = 0x72
	BOOL mIsUsingIntelGMA950;	// 115 = 0x73
	BOOL mPrefersSharedVRAM;	// 116 = 0x74
	MRContextState *mOuterState;	// 120 = 0x78
	MRContextState *mInnerState;	// 124 = 0x7c
	NSMutableDictionary *mVertexAttributes;	// 128 = 0x80
	BOOL mCurrentVBOWasUpdated;	// 132 = 0x84
	BOOL mForceShaderUpdate;	// 133 = 0x85
	float mLocalAspectRatio;	// 136 = 0x88
	int mScissorRect[4];	// 140 = 0x8c
	MRShader *mCurrentShader;	// 156 = 0x9c
	MRImage *mTextureUnitImages[4];	// 160 = 0xa0
	int mActiveTextureUnit;	// 176 = 0xb0
	int mRenderBuffer;	// 180 = 0xb4
	MRImage *mBlackImage;	// 184 = 0xb8
	int _dimensionalMode;	// 188 = 0xbc
}
@property(readonly, assign, nonatomic) float aspectRatio;	// G=0x3647d201; 
@property(retain) id<MZMediaManagement> assetManager;	// G=0x364806a1; S=0x364806b5; @synthesize=mAssetManager
@property(readonly, assign, nonatomic) const float *backColor;	// G=0x3647dd11; 
@property(readonly, assign) MRContext *baseContext;	// G=0x3648068d; @synthesize=mBaseContext
@property(readonly, assign) CGColorSpaceRef colorSpace;	// G=0x3647d221; 
@property(assign, nonatomic) int dimensionalMode;	// G=0x364807e9; S=0x3647ce3d; @synthesize=_dimensionalMode
@property(readonly, assign, nonatomic) const float *foreColor;	// G=0x3647da35; 
@property(readonly, assign, nonatomic) BOOL foreColorIsOpaqueWhite;	// G=0x3647da55; 
@property(readonly, assign) EAGLContext *glContext;	// G=0x364807c5; @synthesize=mGLContext
@property(readonly, assign) MRImageManager *imageManager;	// G=0x364806d9; @synthesize=mImageManager
@property(readonly, assign, nonatomic) BOOL isDoubleBuffered;	// G=0x3647d261; 
@property(assign, nonatomic) BOOL isFlipped;	// G=0x36480785; S=0x3647d679; @synthesize=mIsFlipped
@property(readonly, assign, nonatomic) BOOL isUsingIntelGMA950;	// G=0x364807a5; @synthesize=mIsUsingIntelGMA950
@property(readonly, assign, nonatomic) BOOL isUsingIntelGPU;	// G=0x36480795; @synthesize=mIsUsingIntelGPU
@property(assign, nonatomic) float localAspectRatio;	// G=0x36480745; S=0x36480755; @synthesize=mLocalAspectRatio
@property(readonly, assign, nonatomic) unsigned long maxDimension;	// G=0x3647d269; 
@property(readonly, assign, nonatomic) const float *modelViewMatrix;	// G=0x3647fd21; 
@property(readonly, assign) CGColorSpaceRef monochromaticColorSpace;	// G=0x3647d241; 
@property(assign, nonatomic) int orientation;	// G=0x36480765; S=0x36480775; @synthesize=mOrientation
@property(assign, nonatomic) CGPoint pixelOffset;	// G=0x364806ed; S=0x36480705; @synthesize=mPixelOffset
@property(assign, nonatomic) CGSize pixelSize;	// G=0x36480719; S=0x36480731; @synthesize=mPixelSize
@property(readonly, assign, nonatomic) BOOL prefersSharedVRAM;	// G=0x364807b5; @synthesize=mPrefersSharedVRAM
@property(readonly, assign, nonatomic) const float *projectionMatrix;	// G=0x3647fd11; 
@property(readonly, assign, nonatomic) CGSize size;	// G=0x3647d1b5; 
@property(readonly, assign, nonatomic) unsigned virtualScreen;	// G=0x3647d265; 
@property(readonly, assign, nonatomic) int vram;	// G=0x364807d9; @synthesize=mVRAM
- (id)initLocalWithContext:(id)context glContext:(id)context2 andSize:(CGSize)size;	// 0x3647c6a9
- (id)initWithEAGLContext:(id)eaglcontext andAssetManager:(id)manager;	// 0x3647c439
- (void)_commitOuterToInner;	// 0x3647e645
- (void)_updateTextureOnUnit:(unsigned)unit;	// 0x3647e051
// declared property getter: - (float)aspectRatio;	// 0x3647d201
// declared property getter: - (id)assetManager;	// 0x364806a1
// declared property getter: - (const float *)backColor;	// 0x3647dd11
// declared property getter: - (id)baseContext;	// 0x3648068d
- (id)beginLocalContextWithSize:(CGSize)size backgroundColor:(const float *)color state:(XXStruct_vue6hD *)state;	// 0x3647d3c9
- (void)blend:(int)blend;	// 0x3647d6b1
- (void)cleanup;	// 0x3647c9a9
- (void)clear:(int)clear;	// 0x3647d771
// declared property getter: - (CGColorSpaceRef)colorSpace;	// 0x3647d221
- (BOOL)commitShaderChange;	// 0x3647e291
- (void)composeForeColor:(const float *)color saveTo:(float *)to;	// 0x3647dbad
- (void)composeForeColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x3647dc49
- (void)composeModelViewMatrix:(float [16])matrix saveTo:(float *)to;	// 0x3647fd9d
- (unsigned)createVBO;	// 0x36480489
- (void)cull:(int)cull;	// 0x3647d6fd
- (void)dealloc;	// 0x3647c8e1
- (void)deleteVBO:(unsigned)vbo;	// 0x364804a1
- (void)depthTest:(BOOL)test;	// 0x3647d751
// declared property getter: - (int)dimensionalMode;	// 0x364807e9
- (void)drawLinesFromOffset:(unsigned)offset count:(unsigned)count;	// 0x36480611
- (void)drawTriangleStripFromOffset:(unsigned)offset count:(unsigned)count;	// 0x36480569
- (void)drawTrianglesFromOffset:(unsigned)offset count:(unsigned)count;	// 0x364805bd
- (void)finalize;	// 0x3647c969
- (void)flush;	// 0x3647d2a9
// declared property getter: - (const float *)foreColor;	// 0x3647da35
// declared property getter: - (BOOL)foreColorIsOpaqueWhite;	// 0x3647da55
// declared property getter: - (id)glContext;	// 0x364807c5
// declared property getter: - (id)imageManager;	// 0x364806d9
- (id)imageSetOnTextureUnit:(unsigned)unit;	// 0x3647e005
// declared property getter: - (BOOL)isDoubleBuffered;	// 0x3647d261
// declared property getter: - (BOOL)isFlipped;	// 0x36480785
// declared property getter: - (BOOL)isUsingIntelGMA950;	// 0x364807a5
// declared property getter: - (BOOL)isUsingIntelGPU;	// 0x36480795
// declared property getter: - (float)localAspectRatio;	// 0x36480745
- (void)lock;	// 0x3647cab1
// declared property getter: - (unsigned long)maxDimension;	// 0x3647d269
// declared property getter: - (const float *)modelViewMatrix;	// 0x3647fd21
// declared property getter: - (CGColorSpaceRef)monochromaticColorSpace;	// 0x3647d241
// declared property getter: - (int)orientation;	// 0x36480765
// declared property getter: - (CGPoint)pixelOffset;	// 0x364806ed
// declared property getter: - (CGSize)pixelSize;	// 0x36480719
// declared property getter: - (BOOL)prefersSharedVRAM;	// 0x364807b5
// declared property getter: - (const float *)projectionMatrix;	// 0x3647fd11
- (void)purgeResources:(BOOL)resources;	// 0x3647d3a9
- (void)restoreBackColor:(const float *)color;	// 0x3647de19
- (void)restoreForeColor:(const float *)color;	// 0x3647dcfd
- (void)restoreModelViewMatrix:(float [16])matrix;	// 0x3647fe0d
- (void)restoreScissorRect:(const int *)rect;	// 0x3647da21
- (id)retainedByUserBlackImage;	// 0x3647d659
- (id)retainedByUserImageByEndingLocalContext:(id)context andRestoreState:(const XXStruct_vue6hD *)state;	// 0x3647d555
// declared property setter: - (void)setAssetManager:(id)manager;	// 0x364806b5
- (void)setBackColor:(const float *)color saveTo:(float *)to;	// 0x3647dd31
- (void)setBackColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x3647dd85
- (void)setColorsPointer:(const float *)pointer;	// 0x364801d5
// declared property setter: - (void)setDimensionalMode:(int)mode;	// 0x3647ce3d
- (void)setForeColor:(const float *)color saveTo:(float *)to;	// 0x3647dac5
- (void)setForeColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x3647db19
- (void)setImage:(id)image onTextureUnit:(unsigned)unit withReferenceAspectRatio:(float)referenceAspectRatio state:(XXStruct_S04vsC *)state;	// 0x3647de2d
- (void)setInSpriteCoordinatesPointer:(const float *)spriteCoordinatesPointer;	// 0x36480251
// declared property setter: - (void)setIsFlipped:(BOOL)flipped;	// 0x3647d679
// declared property setter: - (void)setLocalAspectRatio:(float)ratio;	// 0x36480755
- (void)setModelViewMatrix:(float [16])matrix saveTo:(float *)to;	// 0x3647fd41
- (void)setNormal:(float)normal :(float)arg2 :(float)arg3;	// 0x3647fe21
- (void)setNormalsPointer:(const float *)pointer;	// 0x3648019d
// declared property setter: - (void)setOrientation:(int)orientation;	// 0x36480775
// declared property setter: - (void)setPixelOffset:(CGPoint)offset;	// 0x36480705
// declared property setter: - (void)setPixelSize:(CGSize)size;	// 0x36480731
- (void)setScissorRect:(const int *)rect saveTo:(int *)to;	// 0x3647d895
- (void)setShader:(id)shader;	// 0x3647f951
- (void)setShaderUniformFloat:(float)aFloat forKey:(id)key;	// 0x3647fad9
- (void)setShaderUniformInt:(int)int forKey:(id)key;	// 0x3647fa4d
- (void)setShaderUniformVec2:(float)a2 :(float)arg2 forKey:(id)key;	// 0x3647fb5d
- (void)setShaderUniformVec3:(float)a3 :(float)arg2 :(float)arg3 forKey:(id)key;	// 0x3647fbe1
- (void)setShaderUniformVec4:(float)a4 :(float)arg2 :(float)arg3 :(float)arg4 forKey:(id)key;	// 0x3647fc75
- (void)setTextureCoordinatesPointer:(const float *)pointer onTextureUnit:(unsigned)unit;	// 0x3648020d
- (void)setTextureMatrix:(float [16])matrix onTextureUnit:(unsigned)unit;	// 0x3647fe61
- (void)setVertex2DPointer:(const float *)pointer;	// 0x364800d5
- (void)setVertex3DPointer:(const float *)pointer;	// 0x36480139
- (void)setVertexAttributePointer:(const float *)pointer ofSize:(unsigned)size forKey:(id)key;	// 0x36480289
- (void)setVertexBuffer2D:(unsigned)d withFeatures:(unsigned)features;	// 0x3647ffc1
- (void)setVertexBuffer2D:(unsigned)d withStride:(unsigned)stride inSpriteCoordinatesOffset:(unsigned)spriteCoordinatesOffset texture0CoordinatesOffset:(unsigned)offset;	// 0x3647fe99
// declared property getter: - (CGSize)size;	// 0x3647d1b5
- (BOOL)supportsMirroredRepeatForImage:(id)image;	// 0x36480665
- (void)unlock;	// 0x3647cab5
- (void)unsetColorsPointer;	// 0x36480405
- (void)unsetImage:(id)image onTextureUnit:(unsigned)unit state:(const XXStruct_S04vsC *)state;	// 0x3647dfb1
- (void)unsetInSpriteCoordinatesPointer;	// 0x36480449
- (void)unsetNormalsPointer;	// 0x364803e5
- (void)unsetShader;	// 0x3647fa01
- (void)unsetTextureCoordinatesPointerOnTextureUnit:(unsigned)unit;	// 0x36480425
- (void)unsetVertexAttributePointerForKey:(id)key;	// 0x36480469
- (void)unsetVertexPointer;	// 0x3648036d
- (void)updateGeometry;	// 0x3647cab9
- (void)uploadBuffer:(void *)buffer withSize:(int)size toVertexBuffer2D:(unsigned)vertexBuffer2D;	// 0x364804f5
// declared property getter: - (unsigned)virtualScreen;	// 0x3647d265
// declared property getter: - (int)vram;	// 0x364807d9
@end

