/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRMarimbaPlayback.h"
#import "MRMarimbaHitBlobSupport.h"
#import "MRMarimbaBasicPlayback.h"
#import <NSObject.h> // Unknown library
#import "EAGLDrawable.h"

@class MPDocument, MRTexture, MRRenderer, NSDictionary, EAGLContext;

@interface MRMarimbaFBO : NSObject <MRMarimbaPlayback, MRMarimbaHitBlobSupport, EAGLDrawable, MRMarimbaBasicPlayback> {
@private
	BOOL _masterClockIsSet;	// 4 = 0x4
	BOOL _bailTimeWatcher;	// 5 = 0x5
	BOOL _stopWithVideo;	// 6 = 0x6
	BOOL _readOnly;	// 7 = 0x7
	EAGLContext *_context;	// 8 = 0x8
	MRTexture *_texture;	// 12 = 0xc
	MPDocument *_document;	// 16 = 0x10
	MRRenderer *_renderer;	// 20 = 0x14
	CGSize _size;	// 24 = 0x18
}
@property(assign) BOOL bailTimeWatcher;	// G=0x36597f3d; S=0x36597f4d; converted property
@property(assign, nonatomic) BOOL displaysFPS;	// G=0x36597009; S=0x3659702d; 
@property(retain, nonatomic) MPDocument *document;	// G=0x36597f05; S=0x36596a11; @synthesize=_document
@property(copy) NSDictionary *drawableProperties;	// G=0x36596551; S=0x365965d9; 
@property(readonly, assign, nonatomic) BOOL isPlaying;	// G=0x36596e11; 
@property(readonly, assign, nonatomic) MRRenderer *renderer;	// G=0x36597f15; @synthesize=_renderer
@property(assign, nonatomic) CGSize size;	// G=0x36597f25; S=0x365969a9; @synthesize=_size
@property(assign, nonatomic) BOOL stopWithVideo;	// G=0x36596f55; S=0x36596f69; 
@property(readonly, retain) MRTexture *texture;	// G=0x365965dd; converted property
@property(assign, nonatomic) double time;	// G=0x3659704d; S=0x3659706d; 
@property(readonly, assign, nonatomic) double timeRemaining;	// G=0x365970b1; 
@property(assign, nonatomic) float volume;	// G=0x36597111; S=0x36597131; 
+ (id)fboWithDocument:(id)document size:(CGSize)size;	// 0x365961b1
+ (id)fboWithDocument:(id)document size:(CGSize)size context:(id)context;	// 0x36596129
+ (void)releaseResources;	// 0x36596225
- (id)init;	// 0x36596361
- (id)_currentEffectContainer;	// 0x36592331
- (id)_currentEffectLayer;	// 0x3659225d
- (id)_effectContainerForTime:(double)time;	// 0x36592d0d
- (id)_firstEffectContainer;	// 0x36592c5d
- (int)_mainLayerIndex;	// 0x36592e55
- (void)_warmupRendererThreaded:(id)threaded;	// 0x36597441
- (void)aspectRatioChangedTo:(id)to;	// 0x36597da9
// converted property getter: - (BOOL)bailTimeWatcher;	// 0x36597f3d
- (void)beginGesture:(id)gesture;	// 0x36595665
- (BOOL)beginLiveUpdateForHitBlob:(id)hitBlob;	// 0x36594dd1
- (id)blobHitAtPoint:(CGPoint)point fromObjectsForObjectIDs:(id)objectIDs localPoint:(CGPoint *)point3;	// 0x365948f9
- (void)callbackThread:(id)thread;	// 0x36592f09
- (void)cancelGesture:(id)gesture;	// 0x36596061
- (void)cleanup;	// 0x36596439
- (CGPoint)convertPoint:(CGPoint)point toHitBlob:(id)hitBlob;	// 0x36594d01
- (id)currentSlide;	// 0x365932e1
- (id)currentSlides;	// 0x365930d9
- (void)dealloc;	// 0x365963b5
- (void)didAddEffects:(id)effects;	// 0x36597d31
- (void)didLiveChanged:(id)changed;	// 0x36596d69
- (id)displayedEffectContainers;	// 0x365918c9
// declared property getter: - (BOOL)displaysFPS;	// 0x36597009
- (void)doGesture:(id)gesture;	// 0x36595a79
// declared property getter: - (id)document;	// 0x36597f05
// declared property getter: - (id)drawableProperties;	// 0x36596551
- (BOOL)effect:(id)effect requestedNumberOfSlides:(unsigned)slides firstSlideIndexStillNeeded:(unsigned)needed;	// 0x365978b9
- (BOOL)effectRequestedSlidesAfterDelay:(id)delay;	// 0x36597c09
- (void)endGesture:(id)gesture;	// 0x3659600d
- (BOOL)endLiveUpdateForHitBlob:(id)hitBlob;	// 0x36595229
- (BOOL)getOnScreenVertices:(CGPoint [4])vertices forHitBlob:(id)hitBlob;	// 0x36594b11
- (void)goBack;	// 0x36597151
- (void)goForth;	// 0x36597171
- (void)gotoBeginning;	// 0x36597241
- (void)gotoEnd;	// 0x36597191
- (void)gotoNextSlide;	// 0x36593721
- (void)gotoPreviousSlide;	// 0x36593e31
- (void)gotoSlide:(id)slide;	// 0x36594541
- (BOOL)isInFade;	// 0x36592531
- (BOOL)isInTransition;	// 0x36592709
// declared property getter: - (BOOL)isPlaying;	// 0x36596e11
- (void)lockRendering;	// 0x365974b1
- (void)moveToEffectContainer:(id)effectContainer withStartOffset:(double)startOffset toStopOffset:(double)stopOffset blocking:(BOOL)blocking;	// 0x36591931
- (void)moveToNextEffectContainer;	// 0x36591b59
- (void)moveToPreviousEffectContainer;	// 0x36591c3d
- (void)moveToSubtitleForSlide:(id)slide;	// 0x36591fa9
- (void)moveToTitleSlide;	// 0x36591d0d
- (BOOL)nearingEndForSerializer:(id)serializer;	// 0x36597511
- (BOOL)nearingEndForSerializerAfterDelay:(id)serializerAfterDelay;	// 0x365977c9
- (void)nextFrame;	// 0x36597291
- (void)pause;	// 0x36596ef9
- (void)pauseWhenStill;	// 0x36596f35
- (void)play;	// 0x36596e39
- (void)prevFrame;	// 0x365972f9
- (double)relativeTime;	// 0x365916e9
- (double)relativeTimeForBackgroundAudio;	// 0x36591779
- (double)relativeTimeForLayer:(id)layer;	// 0x36591821
- (void)removeEffectContainersBeforeTime:(double)time;	// 0x365934f1
- (void)removeFadeIn;	// 0x36594799
// declared property getter: - (id)renderer;	// 0x36597f15
- (void)requestRendering:(BOOL)rendering;	// 0x36597361
// converted property setter: - (void)setBailTimeWatcher:(BOOL)watcher;	// 0x36597f4d
// declared property setter: - (void)setDisplaysFPS:(BOOL)fps;	// 0x3659702d
// declared property setter: - (void)setDocument:(id)document;	// 0x36596a11
// declared property setter: - (void)setDrawableProperties:(id)properties;	// 0x365965d9
- (void)setEAGLContext:(id)context;	// 0x365964c5
// declared property setter: - (void)setSize:(CGSize)size;	// 0x365969a9
- (void)setSlaveFrameMode:(BOOL)mode;	// 0x365974f1
// declared property setter: - (void)setStopWithVideo:(BOOL)video;	// 0x36596f69
// declared property setter: - (void)setTime:(double)time;	// 0x3659706d
// declared property setter: - (void)setVolume:(float)volume;	// 0x36597131
// declared property getter: - (CGSize)size;	// 0x36597f25
- (CGImageRef)snapshotAsCGImage;	// 0x36597e61
- (CGImageRef)snapshotAsCGImageForTime:(double)time withSize:(CGSize)size;	// 0x36597dad
// declared property getter: - (BOOL)stopWithVideo;	// 0x36596f55
- (void)switchToDirectInCALayer:(id)calayer;	// 0x36596689
- (void)switchToTexture;	// 0x36596815
// converted property getter: - (id)texture;	// 0x365965dd
- (unsigned)textureName;	// 0x365965ed
// declared property getter: - (double)time;	// 0x3659704d
// declared property getter: - (double)timeRemaining;	// 0x365970b1
- (void)togglePlayback;	// 0x36596dc5
- (void)touchesBegan:(id)began;	// 0x36597e81
- (void)touchesCancelled:(id)cancelled;	// 0x36597ee5
- (BOOL)touchesEnded:(id)ended;	// 0x36597ec1
- (void)touchesMoved:(id)moved;	// 0x36597ea1
- (void)unlockRendering;	// 0x365974d1
// declared property getter: - (float)volume;	// 0x36597111
- (void)warmupRenderer;	// 0x36597381
- (void)watcherThread:(id)thread;	// 0x36592ff5
- (void)whenTransitionIsFinishedSendAction:(SEL)action toTarget:(id)target;	// 0x36592925
@end

