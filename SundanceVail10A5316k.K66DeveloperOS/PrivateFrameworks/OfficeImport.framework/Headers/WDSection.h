/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import <NSObject.h> // Unknown library

@class WDDocument, WDText;

__attribute__((visibility("hidden")))
@interface WDSection : NSObject {
@private
	unsigned mOriginal : 1;	// 4 = 0x4
	unsigned mTracked : 1;	// 4 = 0x4
	unsigned mResolved : 1;	// 4 = 0x4
	WDDocument *mDocument;	// 8 = 0x8
	WDText *mText;	// 12 = 0xc
	WDText *mEvenPageHeader;	// 16 = 0x10
	WDText *mOddPageHeader;	// 20 = 0x14
	WDText *mFirstPageHeader;	// 24 = 0x18
	WDText *mEvenPageFooter;	// 28 = 0x1c
	WDText *mOddPageFooter;	// 32 = 0x20
	WDText *mFirstPageFooter;	// 36 = 0x24
	XXStruct_7a9KuD mOriginalProperties;	// 40 = 0x28
	XXStruct_7a9KuD mTrackedProperties;	// 180 = 0xb4
}
@property(assign) int borderDepth;	// G=0x312b8465; S=0x311b8ac5; converted property
@property(assign) int borderDisplay;	// G=0x312b8599; S=0x311b8b19; converted property
@property(assign) int borderOffset;	// G=0x312b86cd; S=0x311b8b6d; converted property
@property(assign) unsigned long bottomMargin;	// G=0x310fc85d; S=0x310f1de5; converted property
@property(assign) int breakType;	// G=0x310fd341; S=0x310f4b25; converted property
@property(assign) int chapterNumberSeparator;	// G=0x312b90d9; S=0x312b9169; converted property
@property(assign) unsigned short columnCount;	// G=0x31134991; S=0x3113480d; converted property
@property(assign) long columnSpace;	// G=0x312b9579; S=0x310f1b49; converted property
@property(assign) BOOL columnsEqualWidth;	// G=0x312b94e5; S=0x3114defd; converted property
@property(assign) unsigned long footerMargin;	// G=0x312b7d29; S=0x310f1e8d; converted property
@property(retain) id formattingChangeDate;	// G=0x312b9b15; S=0x312b9ba9; converted property
@property(assign) BOOL formattingChanged;	// G=0x312b97e5; S=0x312b9879; converted property
@property(assign) unsigned long gutterMargin;	// G=0x312b7e61; S=0x310f1ee1; converted property
@property(assign) unsigned long headerMargin;	// G=0x310fcdd5; S=0x310f1e39; converted property
@property(assign) unsigned short indexToAuthorIDOfFormattingChange;	// G=0x312b9985; S=0x312b9a19; converted property
@property(assign) unsigned long leftMargin;	// G=0x310fc6a1; S=0x310f1ce9; converted property
@property(assign) short lineNumberDistance;	// G=0x312b8ac9; S=0x31146be5; converted property
@property(assign) unsigned short lineNumberIncrement;	// G=0x312b8991; S=0x311d6c39; converted property
@property(assign) int lineNumberRestart;	// G=0x312b8c01; S=0x311d6c91; converted property
@property(assign) short lineNumberStart;	// G=0x312b8801; S=0x312b8895; converted property
@property(assign) unsigned long pageHeight;	// G=0x310fc445; S=0x310f1c95; converted property
@property(assign) int pageNumberFormat;	// G=0x312b8d35; S=0x31159291; converted property
@property(assign) BOOL pageNumberRestart;	// G=0x312b8fa1; S=0x310f4abd; converted property
@property(assign) unsigned short pageNumberStart;	// G=0x312b8e69; S=0x310f4a65; converted property
@property(assign) int pageOrientation;	// G=0x312b7b51; S=0x311594b9; converted property
@property(assign) unsigned long pageScale;	// G=0x312b7841; S=0x312b78d1; converted property
@property(assign) unsigned long pageWidth;	// G=0x310fc311; S=0x310f1c41; converted property
@property(assign) int resolveMode;	// G=0x311341ed; S=0x310f0db5; converted property
@property(assign) unsigned long rightMargin;	// G=0x310fc735; S=0x310f1d3d; converted property
@property(assign) int textDirection;	// G=0x312b79c9; S=0x312b7a59; converted property
@property(assign) BOOL titlePage;	// G=0x311475c5; S=0x311474b9; converted property
@property(assign) unsigned long topMargin;	// G=0x310fc7c9; S=0x310f1d91; converted property
@property(assign) int verticalJustification;	// G=0x312b96b1; S=0x31198cbd; converted property
- (id)initWithDocument:(id)document;	// 0x310eaa29
- (id).cxx_construct;	// 0x310eaa25
- (void)appendColumnSpace:(unsigned long)space;	// 0x3114e0d5
- (void)appendColumnWidth:(unsigned long)width;	// 0x3114dfbd
// converted property getter: - (int)borderDepth;	// 0x312b8465
// converted property getter: - (int)borderDisplay;	// 0x312b8599
// converted property getter: - (int)borderOffset;	// 0x312b86cd
- (id)bottomBorder;	// 0x312b81fd
// converted property getter: - (unsigned long)bottomMargin;	// 0x310fc85d
// converted property getter: - (int)breakType;	// 0x310fd341
// converted property getter: - (int)chapterNumberSeparator;	// 0x312b90d9
// converted property getter: - (unsigned short)columnCount;	// 0x31134991
// converted property getter: - (long)columnSpace;	// 0x312b9579
- (unsigned long)columnSpaceAt:(unsigned)at;	// 0x312b9409
- (unsigned long)columnWidthAt:(unsigned)at;	// 0x312b9261
// converted property getter: - (BOOL)columnsEqualWidth;	// 0x312b94e5
- (void)dealloc;	// 0x3110a08d
- (id)document;	// 0x312b7831
- (id)evenPageFooter;	// 0x310f4f59
- (id)evenPageHeader;	// 0x310f4a55
- (id)firstPageFooter;	// 0x31103f55
- (id)firstPageHeader;	// 0x310fcda5
// converted property getter: - (unsigned long)footerMargin;	// 0x312b7d29
// converted property getter: - (id)formattingChangeDate;	// 0x312b9b15
// converted property getter: - (BOOL)formattingChanged;	// 0x312b97e5
// converted property getter: - (unsigned long)gutterMargin;	// 0x312b7e61
// converted property getter: - (unsigned long)headerMargin;	// 0x310fcdd5
// converted property getter: - (unsigned short)indexToAuthorIDOfFormattingChange;	// 0x312b9985
- (BOOL)isBorderDepthOverridden;	// 0x312b84f5
- (BOOL)isBorderDisplayOverridden;	// 0x312b8629
- (BOOL)isBorderOffsetOverridden;	// 0x312b875d
- (BOOL)isBottomBorderOverridden;	// 0x312b828d
- (BOOL)isBottomMarginOverridden;	// 0x310fcf09
- (BOOL)isBreakTypeOverridden;	// 0x310fd29d
- (BOOL)isChapterNumberSeparatorOverridden;	// 0x312b91bd
- (BOOL)isColumnCountOverridden;	// 0x310f1aa5
- (BOOL)isColumnSpaceOverridden;	// 0x312b960d
- (BOOL)isColumnsEqualWidthOverridden;	// 0x310f1b9d
- (BOOL)isFooterMarginOverridden;	// 0x312b7dbd
- (BOOL)isFormattingChangeDateOverridden;	// 0x312b9c41
- (BOOL)isFormattingChangedOverridden;	// 0x312b98e1
- (BOOL)isGutterMarginOverridden;	// 0x312b7ef1
- (BOOL)isHeaderMarginOverridden;	// 0x312b7c85
- (BOOL)isIndexToAuthorIDOfFormattingChangeOverridden;	// 0x312b9a71
- (BOOL)isLastColumnWidthDefined;	// 0x312b933d
- (BOOL)isLeftBorderOverridden;	// 0x312b8159
- (BOOL)isLeftMarginOverridden;	// 0x310fc991
- (BOOL)isLineNumberDistanceOverridden;	// 0x312b8b5d
- (BOOL)isLineNumberIncrementOverridden;	// 0x312b8a25
- (BOOL)isLineNumberRestartOverridden;	// 0x312b8c91
- (BOOL)isLineNumberStartOverridden;	// 0x312b88ed
- (BOOL)isPageHeightOverridden;	// 0x310fc3a1
- (BOOL)isPageNumberFormatOverridden;	// 0x312b8dc5
- (BOOL)isPageNumberRestartOverridden;	// 0x312b9035
- (BOOL)isPageNumberStartOverridden;	// 0x312b8efd
- (BOOL)isPageOrientationOverridden;	// 0x312b7be1
- (BOOL)isPageScaleOverridden;	// 0x312b7925
- (BOOL)isPageWidthOverridden;	// 0x310fc26d
- (BOOL)isRightBorderOverridden;	// 0x312b83c1
- (BOOL)isRightMarginOverridden;	// 0x310fcad5
- (BOOL)isTextDirectionOverridden;	// 0x312b7aad
- (BOOL)isTitlePageOverridden;	// 0x310fd4f9
- (BOOL)isTopBorderOverridden;	// 0x312b8025
- (BOOL)isTopMarginOverridden;	// 0x310fcc19
- (BOOL)isVerticalJustificationOverridden;	// 0x312b9741
- (id)leftBorder;	// 0x312b80c9
// converted property getter: - (unsigned long)leftMargin;	// 0x310fc6a1
// converted property getter: - (short)lineNumberDistance;	// 0x312b8ac9
// converted property getter: - (unsigned short)lineNumberIncrement;	// 0x312b8991
// converted property getter: - (int)lineNumberRestart;	// 0x312b8c01
// converted property getter: - (short)lineNumberStart;	// 0x312b8801
- (id)mutableBottomBorder;	// 0x311c2d39
- (id)mutableLeftBorder;	// 0x311c2ca9
- (id)mutableRightBorder;	// 0x311c2dc9
- (id)mutableTopBorder;	// 0x311c2c19
- (id)oddPageFooter;	// 0x310f4f69
- (id)oddPageHeader;	// 0x310f110d
// converted property getter: - (unsigned long)pageHeight;	// 0x310fc445
// converted property getter: - (int)pageNumberFormat;	// 0x312b8d35
// converted property getter: - (BOOL)pageNumberRestart;	// 0x312b8fa1
// converted property getter: - (unsigned short)pageNumberStart;	// 0x312b8e69
// converted property getter: - (int)pageOrientation;	// 0x312b7b51
// converted property getter: - (unsigned long)pageScale;	// 0x312b7841
// converted property getter: - (unsigned long)pageWidth;	// 0x310fc311
// converted property getter: - (int)resolveMode;	// 0x311341ed
- (id)rightBorder;	// 0x312b8331
// converted property getter: - (unsigned long)rightMargin;	// 0x310fc735
// converted property setter: - (void)setBorderDepth:(int)depth;	// 0x311b8ac5
// converted property setter: - (void)setBorderDisplay:(int)display;	// 0x311b8b19
// converted property setter: - (void)setBorderOffset:(int)offset;	// 0x311b8b6d
// converted property setter: - (void)setBottomMargin:(unsigned long)margin;	// 0x310f1de5
// converted property setter: - (void)setBreakType:(int)type;	// 0x310f4b25
// converted property setter: - (void)setChapterNumberSeparator:(int)separator;	// 0x312b9169
// converted property setter: - (void)setColumnCount:(unsigned short)count;	// 0x3113480d
// converted property setter: - (void)setColumnSpace:(long)space;	// 0x310f1b49
// converted property setter: - (void)setColumnsEqualWidth:(BOOL)width;	// 0x3114defd
// converted property setter: - (void)setFooterMargin:(unsigned long)margin;	// 0x310f1e8d
// converted property setter: - (void)setFormattingChangeDate:(id)date;	// 0x312b9ba9
// converted property setter: - (void)setFormattingChanged:(BOOL)changed;	// 0x312b9879
// converted property setter: - (void)setGutterMargin:(unsigned long)margin;	// 0x310f1ee1
// converted property setter: - (void)setHeaderMargin:(unsigned long)margin;	// 0x310f1e39
// converted property setter: - (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)formattingChange;	// 0x312b9a19
// converted property setter: - (void)setLeftMargin:(unsigned long)margin;	// 0x310f1ce9
// converted property setter: - (void)setLineNumberDistance:(short)distance;	// 0x31146be5
// converted property setter: - (void)setLineNumberIncrement:(unsigned short)increment;	// 0x311d6c39
// converted property setter: - (void)setLineNumberRestart:(int)restart;	// 0x311d6c91
// converted property setter: - (void)setLineNumberStart:(short)start;	// 0x312b8895
// converted property setter: - (void)setPageHeight:(unsigned long)height;	// 0x310f1c95
// converted property setter: - (void)setPageNumberFormat:(int)format;	// 0x31159291
// converted property setter: - (void)setPageNumberRestart:(BOOL)restart;	// 0x310f4abd
// converted property setter: - (void)setPageNumberStart:(unsigned short)start;	// 0x310f4a65
// converted property setter: - (void)setPageOrientation:(int)orientation;	// 0x311594b9
// converted property setter: - (void)setPageScale:(unsigned long)scale;	// 0x312b78d1
// converted property setter: - (void)setPageWidth:(unsigned long)width;	// 0x310f1c41
// converted property setter: - (void)setResolveMode:(int)mode;	// 0x310f0db5
// converted property setter: - (void)setRightMargin:(unsigned long)margin;	// 0x310f1d3d
// converted property setter: - (void)setTextDirection:(int)direction;	// 0x312b7a59
// converted property setter: - (void)setTitlePage:(BOOL)page;	// 0x311474b9
// converted property setter: - (void)setTopMargin:(unsigned long)margin;	// 0x310f1d91
// converted property setter: - (void)setVerticalJustification:(int)justification;	// 0x31198cbd
- (id)text;	// 0x310eabc5
// converted property getter: - (int)textDirection;	// 0x312b79c9
// converted property getter: - (BOOL)titlePage;	// 0x311475c5
- (id)topBorder;	// 0x312b7f95
// converted property getter: - (unsigned long)topMargin;	// 0x310fc7c9
// converted property getter: - (int)verticalJustification;	// 0x312b96b1
@end

