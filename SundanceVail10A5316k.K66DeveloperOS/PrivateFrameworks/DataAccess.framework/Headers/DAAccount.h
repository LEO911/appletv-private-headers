/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x335546b5; S=0x33554e5d; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x33557d81; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x33558b49; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x3355a36d; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x335541cd; S=0x33557ff9; 
@property(copy) NSString *emailAddress;	// G=0x33556551; S=0x335565d9; 
@property(copy) NSArray *emailAddresses;	// G=0x335566b1; S=0x3355674d; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x33558b05; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x335569a5; 
@property(copy) NSString *host;	// G=0x335562a1; S=0x33556329; 
@property(readonly, assign) NSData *identityPersist;	// G=0x335574d9; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x33557795; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x3355744d; 
@property(assign) BOOL needsRediscovery;	// G=0x33556f01; S=0x33556f21; 
@property(copy) NSString *password;	// G=0x33555edd; S=0x33556035; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x33553f2d; 
@property(assign) int port;	// G=0x33556ab9; S=0x33556b45; 
@property(copy) NSURL *principalURL;	// G=0x33556ce5; S=0x33556d8d; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x33556f3d; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x33554e2d; 
@property(copy) NSString *scheme;	// G=0x33556bd1; S=0x33556c59; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x33558b5d; S=0x33558b71; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x33556ec5; S=0x33556ee5; 
@property(assign) BOOL shouldFailAllTasks;	// G=0x33558b95; S=0x33558bad; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x33558b19; S=0x33558b31; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x33558bc5; S=0x33558bdd; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x33556891; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x33558b81; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x33565a8d; S=0x33565a91; converted property
@property(assign) BOOL useSSL;	// G=0x33556401; S=0x33556489; 
@property(copy) NSString *user;	// G=0x33557d15; S=0x33557d25; 
@property(copy) NSString *username;	// G=0x33554f95; S=0x33555085; 
@property(retain) id version;	// G=0x335561f9; S=0x33556245; converted property
+ (Class)accountClass;	// 0x33554d45
+ (Class)classForAccountType:(id)accountType;	// 0x33557f69
+ (Class)clientClass;	// 0x33555769
+ (Class)daemonClass;	// 0x335557b5
+ (id)defaultProperties;	// 0x33557f65
+ (id)newAccountOfAccountType:(id)accountType;	// 0x33557fa1
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x33554c45
- (id)initWithProperties:(id)properties;	// 0x33553ba9
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x33558bf5
- (id)_exceptionsDict;	// 0x335575bd
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x3355a00d
- (BOOL)_isIdentityManagedByProfile;	// 0x3355759d
- (void)_removeHostsToTrust;	// 0x33558109
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x33559861
- (id)_serverSuffixesToAlwaysFail;	// 0x33558cf9
- (void)_setPersistentUUID:(id)uuid;	// 0x33554e41
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x33558139
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x33555a11
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x335567b1
// declared property getter: - (id)accountDescription;	// 0x335546b5
- (id)accountID;	// 0x33553e31
- (int)accountIntPropertyForKey:(id)key;	// 0x33555a79
- (BOOL)accountNeedsUpgrade;	// 0x33558015
- (id)accountPropertyForKey:(id)key;	// 0x33555801
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x33557d81
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x33556ec1
- (id)backingACAccountTypeIdentifier;	// 0x335582ed
// declared property getter: - (id)backingAccountInfo;	// 0x33558b49
// declared property getter: - (id)backingCredentialAccount;	// 0x3355a36d
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x3355a5dd
- (void)cancelAllSearchQueries;	// 0x33563a65
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x3355a685
- (void)cancelSearchQuery:(id)query;	// 0x33563a61
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x3355a725
- (void)checkValidityWithConsumer:(id)consumer;	// 0x33556e79
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x33557a61
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x33557b25
- (void)cleanupAccountFiles;	// 0x33557735
- (id)consumerForTask:(id)task;	// 0x33555cfd
- (id)contactsFolders;	// 0x3355a755
- (CFURLStorageSessionRef)copyStorageSession;	// 0x33557b29
// declared property getter: - (int)daAccountVersion;	// 0x335541cd
- (id)dataclassProperties;	// 0x33555651
- (void)dealloc;	// 0x335540c5
- (id)defaultContactsFolder;	// 0x3355a751
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x335570b5
- (id)defaultEventsFolder;	// 0x3355a5cd
- (id)defaultNotesFolder;	// 0x33574bfd
- (id)defaultToDosFolder;	// 0x33565a81
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x3355a7bd
- (id)deletedItemsFolder;	// 0x3355a7b5
- (id)description;	// 0x33557c85
- (id)displayName;	// 0x33554f39
- (id)domainOnly;	// 0x3355629d
// declared property getter: - (id)emailAddress;	// 0x33556551
// declared property getter: - (id)emailAddresses;	// 0x335566b1
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x33558b05
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x335551d1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x335569a5
- (id)eventsFolders;	// 0x3355a5d1
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x335575d9
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x3357baed
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x33558d85
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x33559525
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x33557799
// declared property getter: - (id)host;	// 0x335562a1
// declared property getter: - (id)identityPersist;	// 0x335574d9
- (id)inboxFolder;	// 0x3355a7ad
- (BOOL)isActiveSyncAccount;	// 0x33557a45
- (BOOL)isCalDAVAccount;	// 0x33557a4d
- (BOOL)isCalDAVChildAccount;	// 0x33557a59
- (BOOL)isCardDAVAccount;	// 0x33557a55
// declared property getter: - (BOOL)isChildAccount;	// 0x33557795
- (BOOL)isDAMMeAccount;	// 0x33557a51
- (BOOL)isDisabled;	// 0x335545b9
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x33555299
- (BOOL)isEqualToAccount:(id)account;	// 0x3355799d
- (BOOL)isHotmailAccount;	// 0x33557a5d
- (BOOL)isLDAPAccount;	// 0x33557a49
// declared property getter: - (int)keychainAccessibilityType;	// 0x3355744d
- (id)localizedIdenticalAccountFailureMessage;	// 0x3355a21d
- (id)localizedInvalidPasswordMessage;	// 0x3355a2c5
- (BOOL)monitorFolderWithID:(id)anId;	// 0x33556fb5
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x33556fb1
// declared property getter: - (BOOL)needsRediscovery;	// 0x33556f01
- (id)notesFolders;	// 0x33574c01
// declared property getter: - (id)password;	// 0x33555edd
- (id)passwordWithExpected:(BOOL)expected;	// 0x33555d35
- (void)performSearchQuery:(id)query;	// 0x335639bd
// declared property getter: - (id)persistentUUID;	// 0x33553f2d
// declared property getter: - (int)port;	// 0x33556ab9
- (void)prepareForAccountSave;	// 0x33557111
// declared property getter: - (id)principalURL;	// 0x33556ce5
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x3355a7b9
- (void)removeAccountPropertyForKey:(id)key;	// 0x335559ad
- (void)removeClientCertificateData;	// 0x335570b9
- (void)removeConsumerForTask:(id)task;	// 0x33555d19
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x3355a37d
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x33556f3d
- (void)resetAccountID;	// 0x33554d61
- (BOOL)resetCertWarnings;	// 0x335578a1
- (void)resetStatusReport;	// 0x335578cd
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x3355a689
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x33555ae1
- (void)saveAccountProperties;	// 0x33557115
- (void)saveAccountSettings;	// 0x33557ead
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x33557e5d
// declared property getter: - (id)scheduleIdentifier;	// 0x33554e2d
// declared property getter: - (id)scheme;	// 0x33556bd1
- (BOOL)searchQueriesRunning;	// 0x33563a69
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x3355a5d9
- (id)sentItemsFolder;	// 0x3355a7b1
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x33555a39
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x33554e5d
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x33555aa1
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x335558d5
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x33555ca1
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x33557ff9
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x335565d9
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x3355674d
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x33555375
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x33556a2d
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x3355761d
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x335577dd
// declared property setter: - (void)setHost:(id)host;	// 0x33556329
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x335574f5
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x33556f21
// declared property setter: - (void)setPassword:(id)password;	// 0x33556035
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x33555f15
// declared property setter: - (void)setPort:(int)port;	// 0x33556b45
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x33556d8d
// declared property setter: - (void)setScheme:(id)scheme;	// 0x33556c59
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x33558b71
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x33556ee5
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x33558bad
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x33558b31
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x33558bdd
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x33556919
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x33565a91
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x33556489
// declared property setter: - (void)setUser:(id)user;	// 0x33557d25
// declared property setter: - (void)setUsername:(id)username;	// 0x33555085
// converted property setter: - (void)setVersion:(id)version;	// 0x33556245
// declared property getter: - (id)settingsTemplate;	// 0x33558b5d
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x33556ec5
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x33558b95
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x33558b19
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x33558bc5
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x33556891
- (id)spinnerIdentifiers;	// 0x3355571d
- (id)stateString;	// 0x33555bf1
// declared property getter: - (id)statusReport;	// 0x33558b81
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x33555b8d
- (void)stopMonitoringFolders;	// 0x33557051
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x33556fed
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x33555185
- (int)supportsEmailFlagging;	// 0x33563a71
- (int)supportsMailboxSearch;	// 0x33563a6d
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x33555b29
- (id)syncStoreIdentifier;	// 0x335540b5
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x3357baf1
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x3355a759
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x3355a5d5
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33574c05
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33565a89
- (void)tearDown;	// 0x33556f4d
- (id)toDosFolders;	// 0x33565a85
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x33565a8d
- (BOOL)upgradeAccount;	// 0x3355828d
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x335582e9
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x335582f1
- (void)upgradeToHoodooAccountInfo;	// 0x335582e5
- (id)urlForKeychain;	// 0x33557d35
// declared property getter: - (BOOL)useSSL;	// 0x33556401
// declared property getter: - (id)user;	// 0x33557d15
// declared property getter: - (id)username;	// 0x33554f95
- (id)usernameWithoutDomain;	// 0x3355628d
- (BOOL)usesLegacyAccountSettings;	// 0x33557c6d
// converted property getter: - (id)version;	// 0x335561f9
@end

