/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GEOResourceManifestServerProxyDelegate.h"
#import <NSObject.h> // Unknown library
#import "GeoServices-Structs.h"

@class NSMutableArray, NSHashTable, GEOActiveTileGroup, NSLock, NSDictionary;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;	// 4 = 0x4
	NSHashTable *_serverProxyObservers;	// 8 = 0x8
	NSMutableArray *_pendingRegionalResourceLoads;	// 12 = 0xc
	GEOActiveTileGroup *_activeTileGroup;	// 16 = 0x10
	NSLock *_activeTileGroupLock;	// 20 = 0x14
	NSDictionary *_resourceNamesToPaths;	// 24 = 0x18
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup *activeTileGroup;	// G=0x34b331b5; 
@property(assign) unsigned activeTileGroupIdentifier;	// G=0x34b34965; S=0x34b3498d; converted property
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;	// G=0x34b33495; 
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// G=0x34b34a35; @synthesize=_serverProxy
+ (void)disableServerConnection;	// 0x34b32da9
+ (void)setCallerWillStartServer;	// 0x34b32de9
+ (void)setHiDPI:(BOOL)dpi;	// 0x34b32dd9
+ (id)sharedManager;	// 0x34b32df9
+ (void)useLocalProxy;	// 0x34b32dc9
+ (void)useRemoteProxy;	// 0x34b32db9
- (id)init;	// 0x34b32e65
- (id)_activeTileSetForKey:(const GEOTileKey *)key;	// 0x34b334b1
- (void)_buildResourceNamesToPaths;	// 0x34b339e1
- (id)_listenerForTileKeys:(id)tileKeys;	// 0x34b33ea1
- (void)_localeChanged:(id)changed;	// 0x34b33351
// declared property getter: - (id)activeTileGroup;	// 0x34b331b5
// converted property getter: - (unsigned)activeTileGroupIdentifier;	// 0x34b34965
- (void)addServerProxyObserver:(id)observer;	// 0x34b33379
- (id)allResourceNames;	// 0x34b33649
- (id)authToken;	// 0x34b33221
- (id)baseURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x34b334dd
- (void)cancelRegionalResourcesRequest:(id)request;	// 0x34b34121
- (void)closeServerConnection;	// 0x34b33331
- (void)dealloc;	// 0x34b33091
- (void)forceUpdate;	// 0x34b34a15
- (void)getResourceManifestWithHandler:(id)handler;	// 0x34b34945
// declared property getter: - (BOOL)hasActiveTileGroup;	// 0x34b33495
- (BOOL)hasResourceManifest;	// 0x34b34909
- (BOOL)isAvailableForTileKey:(const GEOTileKey *)tileKey;	// 0x34b335b9
- (id)languageForTileKey:(const GEOTileKey *)tileKey;	// 0x34b335e5
- (void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;	// 0x34b33f9d
- (void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;	// 0x34b33f75
- (id)localizationURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x34b33535
- (int)mapMatchingTileSetStyle;	// 0x34b3340d
- (unsigned)mapMatchingZoomLevel;	// 0x34b33411
- (id)multiTileURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x34b33509
- (void)openServerConnection;	// 0x34b33241
- (id)pathForResourceWithName:(id)name;	// 0x34b33cc1
- (void)refreshActiveTileGroup;	// 0x34b349f5
- (void)removeServerProxyObserver:(id)observer;	// 0x34b333ed
- (void)resetActiveTileGroup;	// 0x34b349d5
// declared property getter: - (id)serverProxy;	// 0x34b34a35
- (oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;	// 0x34b34185
- (oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;	// 0x34b3479d
- (oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;	// 0x34b34609
- (oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;	// 0x34b3448d
// converted property setter: - (void)setActiveTileGroupIdentifier:(unsigned)identifier;	// 0x34b3498d
- (BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;	// 0x34b33611
- (double)timeToLiveForTileKey:(const GEOTileKey *)tileKey;	// 0x34b3358d
- (unsigned)versionForTileKey:(const GEOTileKey *)tileKey;	// 0x34b33561
@end

