/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
 */

#import "BKSAccelerometerDelegate.h"
#import <NSObject.h> // Unknown library

@class BKSAccelerometer;
@protocol SBSAccelerometerDelegate;

@interface SBSAccelerometer : NSObject <BKSAccelerometerDelegate> {
	id<SBSAccelerometerDelegate> _delegate;	// 4 = 0x4
@private
	BKSAccelerometer *_bksMirror;	// 8 = 0x8
}
@property(assign, nonatomic) BOOL accelerometerEventsEnabled;	// G=0x34d12ffd; S=0x34d13021; 
@property(assign, nonatomic) id<SBSAccelerometerDelegate> delegate;	// G=0x34d13255; S=0x34d13265; @synthesize=_delegate
@property(assign, nonatomic) BOOL orientationEventsEnabled;	// G=0x34d13161; S=0x34d13141; 
@property(assign, nonatomic) double updateInterval;	// G=0x34d13041; S=0x34d13061; 
@property(assign, nonatomic) float xThreshold;	// G=0x34d13081; S=0x34d130a1; 
@property(assign, nonatomic) float yThreshold;	// G=0x34d130c1; S=0x34d130e1; 
@property(assign, nonatomic) float zThreshold;	// G=0x34d13101; S=0x34d13121; 
- (id)init;	// 0x34d12f25
- (void)accelerometer:(id)accelerometer didAccelerateWithTimeStamp:(double)timeStamp x:(float)x y:(float)y z:(float)z eventType:(int)type;	// 0x34d131a5
- (void)accelerometer:(id)accelerometer didChangeDeviceOrientation:(int)orientation;	// 0x34d131fd
// declared property getter: - (BOOL)accelerometerEventsEnabled;	// 0x34d12ffd
- (int)currentDeviceOrientation;	// 0x34d13185
- (void)dealloc;	// 0x34d12f9d
// declared property getter: - (id)delegate;	// 0x34d13255
// declared property getter: - (BOOL)orientationEventsEnabled;	// 0x34d13161
// declared property setter: - (void)setAccelerometerEventsEnabled:(BOOL)enabled;	// 0x34d13021
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x34d13265
// declared property setter: - (void)setOrientationEventsEnabled:(BOOL)enabled;	// 0x34d13141
// declared property setter: - (void)setUpdateInterval:(double)interval;	// 0x34d13061
// declared property setter: - (void)setXThreshold:(float)threshold;	// 0x34d130a1
// declared property setter: - (void)setYThreshold:(float)threshold;	// 0x34d130e1
// declared property setter: - (void)setZThreshold:(float)threshold;	// 0x34d13121
// declared property getter: - (double)updateInterval;	// 0x34d13041
// declared property getter: - (float)xThreshold;	// 0x34d13081
// declared property getter: - (float)yThreshold;	// 0x34d130c1
// declared property getter: - (float)zThreshold;	// 0x34d13101
@end

