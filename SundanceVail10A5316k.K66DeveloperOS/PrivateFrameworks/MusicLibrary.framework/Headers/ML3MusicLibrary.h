/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSArray, ML3DatabaseMetadata, ML3NondurableWriteSet, ML3UbiquitousDatabase, ML3Container, ML3MusicLibrary_SQLiteDatabaseContext, NSString, NSMutableArray;
@protocol OS_dispatch_queue;

@interface ML3MusicLibrary : NSObject {
@private
	NSString *_path;	// 4 = 0x4
	BOOL _enableWrites;	// 8 = 0x8
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 12 = 0xc
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 16 = 0x10
	NSObject<OS_dispatch_queue> *_atomicityQueue;	// 20 = 0x14
	ML3UbiquitousDatabase *_ubiquitousDatabase;	// 24 = 0x18
	NSObject<OS_dispatch_queue> *_backgroundQueue;	// 28 = 0x1c
	opaque_pthread_t *_backgroundQueueOwner;	// 32 = 0x20
	NSMutableArray *_pendingNotifyPostNames;	// 36 = 0x24
	NSString *_notifyName;	// 40 = 0x28
	int _notifyToken;	// 44 = 0x2c
	NSString *_nonContentsNotifyName;	// 48 = 0x30
	int _nonContentsNotifyToken;	// 52 = 0x34
	NSString *_invisiblePropertyNotifyName;	// 56 = 0x38
	int _invisiblePropertyNotifyToken;	// 60 = 0x3c
	NSString *_displayValuesNotifyName;	// 64 = 0x40
	int _displayValuesNotifyToken;	// 68 = 0x44
	NSString *_syncGenerationNotifyName;	// 72 = 0x48
	int _syncGenerationNotifyToken;	// 76 = 0x4c
	BOOL _requiresProcessAssertion;	// 80 = 0x50
	int _backupDisabledCount;	// 84 = 0x54
	BOOL _backupNeeded;	// 88 = 0x58
	BOOL _hasEverConnectedToDatabase;	// 89 = 0x59
	id _mcSettingsObserver;	// 92 = 0x5c
	id _loggingObserver;	// 96 = 0x60
	NSObject<OS_dispatch_queue> *_nondurableConcurrentQueue;	// 100 = 0x64
	ML3NondurableWriteSet *_nondurableWriteSet;	// 104 = 0x68
	NSString *_artworkDirectory;	// 108 = 0x6c
	BOOL _artworkDirectoryFilesystemRepresentation[1024];	// 112 = 0x70
	BOOL _hasEverConnectedTo;	// 1136 = 0x470
	BOOL _keepPresignedValidyAfterVerification;	// 1137 = 0x471
}
@property(readonly, assign) long long autoFilledTracksTotalSize;	// G=0x34608fdd; 
@property(readonly, assign) long long currentContentRevision;	// G=0x34608349; 
@property(readonly, assign) long long currentRevision;	// G=0x3460832d; 
@property(readonly, assign) ML3DatabaseMetadata *databaseInfo;	// G=0x345f1059; 
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x345ec269; @synthesize=_hasEverConnectedTo
@property(assign, nonatomic) BOOL keepPresignedValidyAfterVerification;	// G=0x3460d571; S=0x3460d581; @synthesize=_keepPresignedValidyAfterVerification
@property(readonly, assign) NSArray *localizedSectionIndexTitles;	// G=0x345ea4ad; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x345e9f19; 
@property(readonly, assign, nonatomic, getter=isNondurableWritingActive) BOOL nondurableWritingActive;	// G=0x345eeec9; 
@property(readonly, assign) NSString *path;	// G=0x345e2a55; @synthesize=_path
@property(readonly, assign) long long persistentID;	// G=0x34608311; 
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x345f0fd1; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x345f1195; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x34605fed; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x345e2a6d; 
@property(assign) long long syncGenerationID;	// G=0x345ebe21; S=0x34608365; 
@property(readonly, retain) ML3UbiquitousDatabase *ubiquitousDatabase;	// G=0x345e493d; converted property
@property(readonly, assign, nonatomic) BOOL writable;	// G=0x345e180d; 
+ (BOOL)_inTransactionUpdateSortMapOnConnection:(id)transactionUpdateSortMapOnConnection;	// 0x34636f05
+ (id)_newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes forLibrary:(id)library;	// 0x34603339
+ (id)_purgeableTrackPredicateWithUrgency:(int)urgency;	// 0x34608875
+ (void)_stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x345e4741
+ (id)allArtworkFormatSizes;	// 0x346096a5
+ (id)allSchemaSQL;	// 0x346325cd
+ (MLArtworkFormatSpec)artworkFormatSpecForArtworkFormatID:(unsigned)artworkFormatID;	// 0x345ed909
+ (void)beginDatabaseMigrationIfNecessary;	// 0x34628e29
+ (BOOL)buildDatabaseTablesUsingConnection:(id)connection;	// 0x34632a41
+ (void)connection:(id)connection didOpenDBHandle:(sqlite3 *)handle;	// 0x34603301
+ (void)connection:(id)connection willCloseDBHandle:(sqlite3 *)handle;	// 0x34603335
+ (id)controlDirectoryPathWithBasePath:(id)basePath;	// 0x3464cc35
+ (BOOL)createIndexesUsingConnection:(id)connection;	// 0x34634bfd
+ (int)currentUserVersion;	// 0x345e4891
+ (BOOL)dropIndexesUsingConnection:(id)connection;	// 0x34634bdd
+ (BOOL)dropIndexesUsingConnection:(id)connection tableNames:(const char *)names;	// 0x34634985
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x34607d49
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x345ea3f5
+ (BOOL)importationEnabled;	// 0x34602781
+ (id)indexSchemaSQL;	// 0x34632905
+ (void)initialize;	// 0x345e0c35
+ (id)itemIndexSchemaSQL;	// 0x3463287d
+ (id)itemSchemaSQL;	// 0x346325b5
+ (id)localizedSectionHeaderForSectionHeader:(id)sectionHeader;	// 0x345ebd15
+ (id)localizedSectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x345eb6cd
+ (id)mainDatabasePath;	// 0x345e17e5
+ (id)mediaFolderPath;	// 0x3464cb3d
+ (id)mediaFolderRelativePath:(id)path;	// 0x3464cb65
+ (BOOL)migrateToCurrentUserVersionUsingConnection:(id)currentUserVersionUsingConnection;	// 0x34632fa1
+ (id)newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes;	// 0x346032dd
+ (BOOL)orderingLanguageMatchesSystemUsingConnection:(id)connection;	// 0x34632efd
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder;	// 0x3464d311
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base createParentFolderIfNecessary:(BOOL)necessary;	// 0x3464d335
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base isFolder:(BOOL *)folder;	// 0x3464cc51
+ (unsigned)readableArtworkFormatIDForArtworkFormatID:(unsigned)artworkFormatID;	// 0x346098c1
+ (id)sectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x345eb30d
+ (id)sectionIndexTitles;	// 0x345eb2a5
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x345e0f55
+ (id)sharedLibrary;	// 0x345e10a9
+ (id)sortMapSchemaSQL;	// 0x3463259d
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x345f04a5
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x345e4715
+ (id)storeLinkSchemaSQL;	// 0x34632585
+ (id)systemCurrentLanguage;	// 0x345e489d
+ (BOOL)updateSortMapOnConnection:(id)connection;	// 0x34637915
+ (BOOL)updateTrackIntegrityOnConnection:(id)connection;	// 0x34603015
+ (BOOL)userVersionMatchesSystemUsingConnection:(id)connection;	// 0x34632e9d
+ (int)userVersionUsingConnection:(id)connection;	// 0x34632e55
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x345e10dd
- (void).cxx_destruct;	// 0x3460d591
- (void)_accessAccountCacheDBForSQL:(id)sql usingBlock:(id)block;	// 0x3460c825
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x345e3b59
- (id)_albumArtistGroupingNameFromDataSource:(id)dataSource;	// 0x34640db9
- (long long)_albumArtistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingAlbumArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoAlbumArtistStatement:(id)statement;	// 0x34641119
- (id)_albumGroupingIdentifierFromDataSource:(id)dataSource albumArtistPersistentID:(long long)anId groupingKeysForGroupingNames:(id)groupingNames;	// 0x3464163d
- (long long)_albumPIDFromDataSource:(id)dataSource sortableNames:(id)names albumArtistPID:(long long)pid existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers insertIntoAlbumStatement:(id)statement groupingKeysForGroupingNames:(id)groupingNames;	// 0x34641a69
- (id)_artistGroupingNameFromDataSource:(id)dataSource;	// 0x34640519
- (long long)_artistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoItemArtistStatement:(id)statement;	// 0x34640809
- (long long)_baseLocationPIDFromDataSource:(id)dataSource;	// 0x34642e91
- (BOOL)_commitNondurableWrites;	// 0x345efbd5
- (id)_composerGroupingNameFromDataSource:(id)dataSource;	// 0x3464271d
- (long long)_composerPIDFromDataSource:(id)dataSource sortableNames:(id)names existingComposerPIDsForGroupingKeys:(id)groupingKeys insertIntoComposerStatement:(id)statement;	// 0x346428fd
- (void)_delayableNotifyPost:(id)post;	// 0x345f0dbd
- (BOOL)_drawAndInsertImage:(CGImageRef)image outputWidth:(unsigned long)width outputHeight:(unsigned long)height colorSpace:(CGColorSpaceRef)space cacheID:(id)anId formatID:(unsigned)anId6 artworkStyle:(XXStruct_$eUQoB *)style;	// 0x346048b9
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x3460233d
- (void)_enumeratePurgeableTracksForUrgency:(int)urgency usingBlock:(id)block;	// 0x34608a19
- (id)_existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers;	// 0x34645e81
- (id)_existingCollectionPIDsForTable:(id)table groupingNames:(id)names groupingKeysForGroupingNames:(id)groupingNames;	// 0x34645679
- (id)_genreGroupingNameFromDataSource:(id)dataSource;	// 0x34642249
- (long long)_genrePIDFromDataSource:(id)dataSource sortableNames:(id)names existingGenrePIDsForGroupingKeys:(id)groupingKeys insertIntoGenreStatement:(id)statement;	// 0x34642411
- (BOOL)_insertCGImage:(CGImageRef)image length:(unsigned long)length forCacheID:(id)cacheID formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x34609fad
- (BOOL)_insertImageBytes:(const void *)bytes length:(unsigned long)length forCacheID:(id)cacheID formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x34609d65
- (id)_insertIntoAlbumArtistStatement;	// 0x34640f45
- (id)_insertIntoAlbumStatement;	// 0x34641821
- (id)_insertIntoComposerStatement;	// 0x3464273d
- (id)_insertIntoGenreStatement;	// 0x34642269
- (id)_insertIntoItemArtistStatement;	// 0x3464061d
- (id)_insertIntoItemExtraUsingVtabSQL;	// 0x34644171
- (id)_insertIntoItemStatsUsingVtabSQL;	// 0x34644c9d
- (id)_insertIntoItemUsingVtabSQL;	// 0x346434ad
- (id)_insertIntoPurgeableListUsingVtabSQL;	// 0x34644f9d
- (id)_insertStringsIntoSortMapOrFail:(id)fail;	// 0x346354f1
- (long long)_int64ValueForFirstRowAndColumnWithSQL:(id)sql;	// 0x346043c1
- (long long)_locationKindPIDFromDataSource:(id)dataSource;	// 0x34642cb9
- (BOOL)_migrateArtworkFrom:(unsigned)from to:(unsigned)to;	// 0x3460bdd1
- (BOOL)_mustProcessLanguageChange;	// 0x34607e95
- (void)_onBackgroundQueuePerformBlock:(id)block;	// 0x345e482d
- (void)_populateNameOrderForPID:(unordered_map<long long, ML3NameOrder, std::tr1::hash<long long>, std::equal_to<long long>, std::allocator<std::pair<const long long, ML3NameOrder>>, false> *)pid table:(id)table nameSQL:(id)sql;	// 0x34645281
- (void)_postChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x345f0cc5
- (void)_postDisplayValuesChangeNotificationLocalOnly:(BOOL)only;	// 0x34607ccd
- (void)_postInvisiblePropertyChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x34607c51
- (void)_postNonContentsChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x345f204d
- (id)_replaceIntoPurgeableListUsingVtabSQL;	// 0x34645139
- (BOOL)_runStatementWithSQL:(id)sql bindingValue:(id)value :(id)arg3;	// 0x346046cd
- (void)_scheduleCommitNondurableWritesAfterTimeInterval:(double)interval;	// 0x3460cec1
- (BOOL)_writeImageBytes:(const void *)bytes length:(unsigned long)length formatID:(unsigned)anId cacheID:(id)anId4;	// 0x34609c35
- (void)accessConnectionUsingBlock:(id)block;	// 0x34603c89
- (void)accessDatabaseUsingBlock:(id)block;	// 0x345e47cd
- (void)accessSortKeyBuilder:(id)builder;	// 0x345eac49
- (long long)addStringToSortMap:(id)sortMap;	// 0x34607f31
- (id)albumArtistForEffectiveAlbumArtistName:(id)effectiveAlbumArtistName;	// 0x346281a1
- (id)albumForAlbumArtistPersistentID:(long long)albumArtistPersistentID albumName:(id)name feedURL:(id)url seasonNumber:(id)number compilation:(BOOL)compilation;	// 0x34616919
- (id)appleIDForDSID:(unsigned long long)dsid;	// 0x3460cb25
- (id)artistForArtistName:(id)artistName seriesName:(id)name;	// 0x3461598d
- (id)artistGroupingKeyForArtistName:(id)artistName seriesName:(id)name;	// 0x3461591d
- (id)artworkDataForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x34609445
// declared property getter: - (long long)autoFilledTracksTotalSize;	// 0x34608fdd
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency;	// 0x34608ff1
- (BOOL)buildDatabaseTables;	// 0x34632d05
- (BOOL)coerceValidDatabase;	// 0x34635049
- (BOOL)compactArtwork;	// 0x3460b2f1
- (id)composerForComposerName:(id)composerName;	// 0x346274b1
- (BOOL)createIndexes;	// 0x34634e51
// declared property getter: - (long long)currentContentRevision;	// 0x34608349
// declared property getter: - (long long)currentRevision;	// 0x3460832d
// declared property getter: - (id)databaseInfo;	// 0x345f1059
- (void)dealloc;	// 0x346031c9
- (BOOL)deleteAllArtwork;	// 0x3460a90d
- (BOOL)deleteAndRecreateDatabaseUsingConnection:(id)connection;	// 0x34634fc5
- (BOOL)deleteArtworkForCacheID:(id)cacheID;	// 0x3460ab2d
- (BOOL)deleteArtworkForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x3460afb9
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize;	// 0x34609145
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency;	// 0x34609169
- (BOOL)deleteDatabase;	// 0x34604279
- (void)deletePresignedValidity;	// 0x34602c31
- (BOOL)dropItemIndexes;	// 0x34634cf5
- (void)enumeratePersistentIDsAfterRevision:(long long)revision usingBlock:(id)block;	// 0x346083d9
- (BOOL)executeSQL:(id)sql;	// 0x34603b5d
- (id)genreForGenre:(id)genre;	// 0x3461b72d
- (void)getChangedPersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(int)code usingBlock:(id)block;	// 0x34608619
- (id)groupingKeyForString:(id)string;	// 0x34603d6d
- (id)groupingKeysForStrings:(id)strings;	// 0x34603f81
- (BOOL)handlePrepareDatabase;	// 0x346287e5
- (BOOL)hasArtworkForCacheID:(id)cacheID;	// 0x34609905
- (BOOL)hasArtworkForCacheID:(id)cacheID ensureArtworkFileExists:(BOOL)exists;	// 0x3460991d
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x345ec269
- (BOOL)hasPresignedValidity;	// 0x34602c8d
- (BOOL)importTracksFromDataSource:(id)dataSource;	// 0x3464883d
- (BOOL)importTracksFromDataSource:(id)dataSource progressHandler:(id)handler;	// 0x34648861
- (BOOL)insertArtworkWithImageData:(id)imageData forCacheID:(id)cacheID;	// 0x3460a295
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x345effa9
- (id)insertStringsIntoSortMap:(id)map;	// 0x3463685d
// declared property getter: - (BOOL)isNondurableWritingActive;	// 0x345eeec9
- (BOOL)isReadable;	// 0x34607f2d
// declared property getter: - (BOOL)keepPresignedValidyAfterVerification;	// 0x3460d571
- (void)loadArtworkForCacheID:(id)cacheID formatID:(unsigned)anId completionHandler:(id)handler;	// 0x345f0f21
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x345eaaa5
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x345ea4ad
- (id)locationKindForKind:(id)kind;	// 0x34639a9d
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x345e9f19
- (void)migrateAlbumGridBGRA1xToJPEG1x;	// 0x3460c551
- (void)migrateAlbumListJPEGToBGRA;	// 0x3460c689
- (BOOL)migrateLegacyArtworkFromArtworkBlobFilePath:(id)artworkBlobFilePath;	// 0x3460b8c1
- (void)migratePresignedValidity;	// 0x34602fb1
- (XXStruct_Cy4r_A)nameOrderForString:(id)string;	// 0x345eed55
- (id)newDatabaseConnection;	// 0x346032a1
- (id)nondurableWriteSetForReading;	// 0x345e45c9
- (id)nondurableWriteSetForWriting;	// 0x345ef3c5
- (void)notifyContentsDidChange;	// 0x345f0c6d
- (void)notifyDisplayValuesPropertyDidChange;	// 0x34605f2d
- (void)notifyInvisiblePropertyDidChange;	// 0x34605e6d
- (void)notifyNonContentsPropertyDidChange;	// 0x345f1ff5
// declared property getter: - (id)path;	// 0x345e2a55
- (void)performTransactionAllowingWrites:(BOOL)writes withBlock:(id)block;	// 0x345ea111
- (void)performTransactionKind:(int)kind waitIfBusy:(BOOL)busy withBlock:(id)block;	// 0x345ea13d
- (void)performTransactionKind:(int)kind withBlock:(id)block;	// 0x346051e5
- (void)performTransactionWithBlock:(id)block;	// 0x345f0861
// declared property getter: - (long long)persistentID;	// 0x34608311
- (BOOL)populateArtworkCacheWithArtworkData:(id)artworkData trackValues:(id)values;	// 0x3462f049
- (BOOL)populateStaticItemsOfDynamicContainers;	// 0x34603b75
// declared property getter: - (id)preferredAudioTracks;	// 0x345f0fd1
// declared property getter: - (id)preferredSubtitleTracks;	// 0x345f1195
- (void)prepareStatementForSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x345e3ae5
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x345e3ac5
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x34605fed
- (void)reconnectToDatabase;	// 0x34603ba1
- (void)removeOrphanedTracks;	// 0x3460d02d
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x345e2a6d
- (BOOL)resetAllContents;	// 0x346379ad
- (void)resetUbiquitousMetadata;	// 0x34603055
- (BOOL)runStatementWithSQL:(id)sql bindingValue:(id)value;	// 0x34604511
- (void)savePlaylists;	// 0x34606f91
- (void)savePlaylistsSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x34606fb5
- (void)saveTrackMetadata;	// 0x34606551
- (void)saveTrackMetadataSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x34606575
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x345ead29
- (BOOL)setAppleID:(id)anId forDSID:(unsigned long long)dsid;	// 0x3460c96d
// declared property setter: - (void)setKeepPresignedValidyAfterVerification:(BOOL)verification;	// 0x3460d581
// declared property setter: - (void)setSyncGenerationID:(long long)anId;	// 0x34608365
- (BOOL)setValue:(id)value forDatabaseProperty:(id)databaseProperty;	// 0x3460cd89
- (id)statementWithSQL:(id)sql;	// 0x34604c89
- (void)statementWithSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x34604ff5
- (void)statementWithSQL:(id)sql usingBlock:(id)block;	// 0x34604f89
- (void)statementWithSQLPrefix:(id)sqlprefix inPersistentIDs:(const long long *)persistentIDs count:(unsigned)count usingBlock:(id)block;	// 0x34601a1d
// declared property getter: - (long long)syncGenerationID;	// 0x345ebe21
// converted property getter: - (id)ubiquitousDatabase;	// 0x345e493d
- (BOOL)updateActivePlaylistNamesForCurrentLanguage;	// 0x34629009
- (void)updateOrderingLanguagesForCurrentLanguage;	// 0x346291b5
- (BOOL)updateSortMap;	// 0x3460812d
- (void)updateTrackIntegrity;	// 0x34603039
- (id)valueForDatabaseProperty:(id)databaseProperty;	// 0x345ebe69
- (BOOL)verifyPresignedValidity;	// 0x34602d01
// declared property getter: - (BOOL)writable;	// 0x345e180d
@end

