/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import <NSObject.h> // Unknown library
#import "Notes-Structs.h"

@class NSNumber, NSManagedObjectModel, NSManagedObjectContext, NSPersistentStoreCoordinator, NSPredicate, CPExclusiveLock, NoteStoreObject, NoteAccountObject, NSMutableDictionary, NSString;

@interface NoteContext : NSObject {
@private
	NSManagedObjectModel *_managedObjectModel;	// 4 = 0x4
	NSManagedObjectContext *_managedObjectContext;	// 8 = 0x8
	NSPersistentStoreCoordinator *_persistentStoreCoordinator;	// 12 = 0xc
	NSPredicate *_searchPredicate;	// 16 = 0x10
	NoteStoreObject *_localStore;	// 20 = 0x14
	NoteAccountObject *_localAccount;	// 24 = 0x18
	CXIndexRef __SharedNoteStoreSearchIndex;	// 28 = 0x1c
	CPExclusiveLock *__SharedNoteStoreSearchIndexLock;	// 32 = 0x20
	int __SharedNoteStoreSearchIndexCount;	// 36 = 0x24
	BOOL _isIndexing;	// 40 = 0x28
	NSManagedObjectContext *_nextIdContext;	// 44 = 0x2c
	CPExclusiveLock *_nextIdLock;	// 48 = 0x30
	NSNumber *_nextId;	// 52 = 0x34
	CPExclusiveLock *_objectCreationLock;	// 56 = 0x38
	unsigned _notificationCount;	// 60 = 0x3c
	BOOL _logChanges;	// 64 = 0x40
	BOOL _indexInBatches;	// 65 = 0x41
	BOOL _hasPriorityInSaveConflicts;	// 66 = 0x42
	BOOL _inMigrator;	// 67 = 0x43
	NSString *_testingFilePrefix;	// 68 = 0x44
	NSString *_testingFilePath;	// 72 = 0x48
	NSMutableDictionary *_notePropertyObjectsRealized;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL isIndexing;	// G=0x33db3f2d; @synthesize=_isIndexing
@property(readonly, retain) NoteAccountObject *localAccount;	// G=0x33dac211; converted property
@property(readonly, retain) NoteStoreObject *localStore;	// G=0x33dac179; converted property
@property(readonly, assign, nonatomic) NSManagedObjectContext *managedObjectContext;	// G=0x33daee91; 
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x33daf039; converted property
@property(readonly, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;	// G=0x33daf259; converted property
+ (BOOL)databaseIsCorrupt:(id)corrupt;	// 0x33da6a89
+ (BOOL)shouldLogIndexing;	// 0x33da6a09
- (id)init;	// 0x33da8bf9
- (id)initForMigrator;	// 0x33da884d
- (id)initWithTestingFilePrefix:(id)testingFilePrefix;	// 0x33da88b1
- (id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;	// 0x33da8921
- (id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;	// 0x33da87c5
- (void).cxx_destruct;	// 0x33db3f4d
- (void)_createLocalAccount:(id *)account andStore:(id *)store;	// 0x33da6d69
- (id)_notePropertyObjectForKey:(id)key;	// 0x33daca91
- (id)accountForAccountId:(id)accountId;	// 0x33dabd45
- (id)allAccounts;	// 0x33dab9e5
- (id)allNotes;	// 0x33daac0d
- (id)allNotesInCollection:(id)collection;	// 0x33daad1d
- (id)allNotesMatchingPredicate:(id)predicate;	// 0x33daadf5
- (id)allNotesWithoutBodiesInCollection:(id)collection;	// 0x33dab161
- (id)allStores;	// 0x33dab4d1
- (id)allVisibleNotes;	// 0x33daa45d
- (id)allVisibleNotesInCollection:(id)collection;	// 0x33daa4a5
- (id)allVisibleNotesMatchingPredicate:(id)predicate;	// 0x33daa57d
- (void)cleanUpLocks;	// 0x33db3c49
- (void)clearCaches;	// 0x33da9325
- (id)collectionForInfo:(id)info;	// 0x33dab2b5
- (id)collectionForObjectID:(id)objectID;	// 0x33da956d
- (id)copyNotesForSearch:(void *)search complete:(char *)complete;	// 0x33db326d
- (id)copyNotesForSearch:(void *)search predicate:(id)predicate complete:(char *)complete;	// 0x33db32a5
- (unsigned)countOfNotes;	// 0x33daac9d
- (unsigned)countOfNotesInCollection:(id)collection;	// 0x33daad8d
- (unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;	// 0x33daaead
- (unsigned)countOfStores;	// 0x33dab7bd
- (unsigned)countOfVisibleNotes;	// 0x33daa481
- (unsigned)countOfVisibleNotesInCollection:(id)collection;	// 0x33daa515
- (unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;	// 0x33daa709
- (void)dealloc;	// 0x33da8c59
- (id)defaultStoreForNewNote;	// 0x33dac03d
- (BOOL)deleteAccount:(id)account;	// 0x33dac691
- (void)deleteChanges:(id)changes;	// 0x33da994d
- (BOOL)deleteIndexFile;	// 0x33db3eb1
- (void)deleteNote:(id)note;	// 0x33da969d
- (void)deleteNoteRegardlessOfConstraints:(id)constraints;	// 0x33da98f9
- (BOOL)deleteStore:(id)store;	// 0x33dac71d
- (void)destroySearchIndex;	// 0x33db0959
- (void)enableChangeLogging:(BOOL)logging;	// 0x33da9aa5
- (id)findNotesWithText:(id)text betweenDate:(id)date andDate:(id)date3;	// 0x33db3619
- (BOOL)forceDeleteAccount:(id)account;	// 0x33dac4ed
- (void)forceSetUpUniqueObjects;	// 0x33da790d
- (id)getNextIdObject;	// 0x33daddcd
- (void)handleMigration;	// 0x33dacfa9
- (BOOL)handleSaveErrors:(id)errors;	// 0x33da9cf1
- (BOOL)hasMultipleEnabledStores;	// 0x33dac9c1
- (void)indexInBatches:(BOOL)batches;	// 0x33db0e81
- (void)indexNotes:(id)notes;	// 0x33dafb69
- (void)invalidate;	// 0x33da9ac9
// declared property getter: - (BOOL)isIndexing;	// 0x33db3f2d
- (id)liveNotesNeedingBodiesPredicate;	// 0x33da8d61
// converted property getter: - (id)localAccount;	// 0x33dac211
// converted property getter: - (id)localStore;	// 0x33dac179
// declared property getter: - (id)managedObjectContext;	// 0x33daee91
// converted property getter: - (id)managedObjectModel;	// 0x33daf039
- (id)newFRCForCollection:(id)collection delegate:(id)delegate;	// 0x33da8de5
- (id)newFetchRequestForNotes;	// 0x33da9189
- (void *)newSearchContextWithText:(id)text;	// 0x33db31e1
- (id)newlyAddedAccount;	// 0x33dabcd1
- (id)newlyAddedNote;	// 0x33da940d
- (id)newlyAddedStore;	// 0x33dab45d
- (id)nextIndex;	// 0x33dae505
- (id)noteChangeWithType:(int)type store:(id)store;	// 0x33db1d99
- (id)noteForObjectID:(id)objectID;	// 0x33daaf55
- (BOOL)noteIsSafeToAccess:(id)access;	// 0x33db3cbd
- (id)notesForIntegerIds:(id)integerIds;	// 0x33daafed
- (id)notesToResumeIndexing;	// 0x33dafa5d
- (id)pathForIndex;	// 0x33daebd1
- (id)pathForPersistentStore;	// 0x33daea65
// converted property getter: - (id)persistentStoreCoordinator;	// 0x33daf259
- (id)propertyValueForKey:(id)key;	// 0x33dacf41
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;	// 0x33db0ea5
- (void)removeConflictingSqliteAndIdxFiles;	// 0x33da82f9
- (void)removeSqliteAndIdxFiles;	// 0x33da8079
- (void)resetNotificationCount;	// 0x33db0fd1
- (void)resumeIndexing;	// 0x33db0d45
- (id)rootDirectory;	// 0x33daea31
- (BOOL)save:(id *)save;	// 0x33da9b89
- (void)saveNotesToResumeIndexing:(id)resumeIndexing;	// 0x33daf78d
- (BOOL)saveOutsideApp:(id *)app;	// 0x33da9b61
- (BOOL)saveSilently:(id *)silently;	// 0x33daa2b9
- (CXIndexRef)searchIndex:(char *)index;	// 0x33db032d
- (void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;	// 0x33daeda5
- (void)setPropertyValue:(id)value forKey:(id)key;	// 0x33dace15
- (void)setUpCoreDataStack;	// 0x33da8429
- (BOOL)setUpLastIndexTid;	// 0x33da7419
- (BOOL)setUpLocalAccountAndStore;	// 0x33da6ee1
- (void)setUpUniqueObjects;	// 0x33da7a59
- (BOOL)shouldDisableLocalStore;	// 0x33dac915
- (BOOL)shouldResumeIndexing;	// 0x33daf9e1
- (void)sortNotes:(id)notes;	// 0x33da9351
- (id)storeForObjectID:(id)objectID;	// 0x33da9605
- (id)storeOptions;	// 0x33da6c1d
- (void)tearDownCoreDataStack;	// 0x33da86ad
- (void)trackChanges:(id)changes;	// 0x33db1f7d
- (void)updateSearchIndex:(id)index;	// 0x33db0ff5
- (id)urlForPersistentStore;	// 0x33daed3d
- (id)visibleNoteForObjectID:(id)objectID;	// 0x33daa885
- (id)visibleNotesForIntegerIds:(id)integerIds;	// 0x33daa9f1
- (id)visibleNotesPredicate;	// 0x33da8ca9
- (void)wrapUpIndexing;	// 0x33db0a49
@end

