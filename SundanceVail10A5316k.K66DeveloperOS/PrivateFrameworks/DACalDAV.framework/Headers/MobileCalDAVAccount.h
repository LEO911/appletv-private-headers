/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSSet, NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, NSDate, MobileCalDAVPrincipal, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
@private
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x34158a31; S=0x34158a65; 
@property(readonly, assign) NSSet *calendars;	// G=0x34159305; 
@property(retain) NSURL *collectionSetURL;	// G=0x34158f19; S=0x34158f5d; 
@property(retain) id host;	// G=0x3415d1c9; S=0x3415d241; converted property
@property(assign) BOOL isRefreshing;	// G=0x3415d5c1; S=0x3415d5d9; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x34158fed; S=0x34159059; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x3415d645; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x3415d66d; S=0x3415d681; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x3415d659; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x3415d615; S=0x3415d62d; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x34159cf9; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x34159cc1; 
@property(assign) int overriddenPort;	// G=0x34158b85; S=0x34158b25; 
@property(retain) NSString *overriddenScheme;	// G=0x34158c19; S=0x34158bb9; 
@property(retain) NSString *overriddenServer;	// G=0x34158b09; S=0x34158aa9; 
@property(assign) int port;	// G=0x3415d4d1; S=0x3415d449; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x3415d6a5; S=0x3415d6b9; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x3415d6d1; S=0x3415d6e5; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x34158c35; S=0x34158c55; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x3415d691; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x3415d5f1; S=0x3415d605; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x3415d309; S=0x3415d381; converted property
@property(retain) id searchPropertySet;	// G=0x34158f99; S=0x34158fa9; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x3415d6fd; S=0x3415d715; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x34159add; S=0x34159b55; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x34159d31; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x34159dc9; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x34159d7d; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x34158a11; S=0x34158975; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x34159ef5; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x34159e31; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x34159f49; converted property
@property(assign) BOOL useSSL;	// G=0x3415d58d; S=0x3415d55d; converted property
@property(retain) id username;	// G=0x3415d095; S=0x3415d0fd; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x34159ca5; 
@property(assign) BOOL wasMigrated;	// G=0x3415909d; S=0x3415916d; 
+ (Class)accountClass;	// 0x34157bf1
+ (Class)clientClass;	// 0x34157c0d
+ (id)defaultProperties;	// 0x34157355
+ (id)supportedDataclasses;	// 0x34157c29
- (id)init;	// 0x34157499
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x34157311
- (id)initWithProperties:(id)properties;	// 0x341572cd
- (id)_calendarConstraintsPath;	// 0x3415a09d
- (id)_calendarConstraintsResource;	// 0x34159f99
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x3415afe5
- (void)_collectMoveActions;	// 0x3415b4ed
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x34158415
- (id)_oldURLsForKeychain;	// 0x341581bd
- (id)_powerAssertionContext;	// 0x3415caf1
- (id)_powerAssertionGroupIdentifier;	// 0x3415caf5
- (void)_setSpinning:(BOOL)spinning;	// 0x3415a745
- (void)_updateCalendarStore:(BOOL)store;	// 0x3415a575
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x3415a471
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x3415a169
- (void)_upgradeAccountToTelluride;	// 0x34157cc1
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x34158421
- (BOOL)accountNeedsUpgrade;	// 0x34158879
- (void)addCalendar:(id)calendar;	// 0x34159241
- (void)addPrincipal:(id)principal;	// 0x34159a49
// declared property getter: - (int)calDAVAccountVersion;	// 0x34158a31
// declared property getter: - (id)calendars;	// 0x34159305
- (void)cancelAllSearchQueries;	// 0x3415c3a5
- (void)cancelRefresh;	// 0x3415a7a9
- (void)cancelSearchQuery:(id)query;	// 0x3415c241
- (void)checkValidityWithConsumer:(id)consumer;	// 0x3415c8a9
// declared property getter: - (id)collectionSetURL;	// 0x34158f19
- (void)configureAccount;	// 0x34156e15
- (void *)copyCalStore;	// 0x3415a115
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x3415d009
- (int)coreDAVLogLevel;	// 0x3415cfe9
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x3415d071
- (int)coreDAVOutputLevel;	// 0x3415d001
- (void)coreDAVTransmittedDataFinished;	// 0x3415d091
- (void)dealloc;	// 0x341574d9
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x3415c505
- (void)dropPowerAssertions;	// 0x3415cc11
// converted property getter: - (id)host;	// 0x3415d1c9
- (BOOL)isCalDAVAccount;	// 0x3415ccb1
- (BOOL)isEqualToAccount:(id)account;	// 0x3415ccb5
// declared property getter: - (BOOL)isRefreshing;	// 0x3415d5c1
// declared property getter: - (BOOL)isWritable;	// 0x34158fed
- (BOOL)isYahoo;	// 0x3415d5bd
// declared property getter: - (id)itemIDsToMoveActions;	// 0x3415d645
- (id)localizedIdenticalAccountFailureMessage;	// 0x3415cec1
- (id)localizedInvalidPasswordMessage;	// 0x3415cf39
// declared property getter: - (id)mainPrincipal;	// 0x3415d66d
// declared property getter: - (id)movedItemURLStrings;	// 0x3415d659
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x3415d615
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x34159cf9
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x34159cc1
// declared property getter: - (int)overriddenPort;	// 0x34158b85
// declared property getter: - (id)overriddenScheme;	// 0x34158c19
// declared property getter: - (id)overriddenServer;	// 0x34158b09
- (void)performSearchQuery:(id)query;	// 0x3415beb5
// converted property getter: - (int)port;	// 0x3415d4d1
// declared property getter: - (int)preferredEventDaysToSync;	// 0x3415d6a5
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x3415d6d1
- (void)prepareForAccountSave;	// 0x3415772d
// converted property getter: - (id)principalURL;	// 0x34158c35
// declared property getter: - (id)principals;	// 0x3415d691
- (id)properties;	// 0x34157bb1
- (void)reattainPowerAssertions;	// 0x3415cc61
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x3415a881
// declared property getter: - (id)refreshContext;	// 0x3415d5f1
- (void)refreshWithContext:(id)context;	// 0x3415b7c5
- (void)releasePowerAssertion;	// 0x3415cb69
- (void)reloadCalendars;	// 0x34159979
- (void)removeCalendar:(id)calendar;	// 0x34159299
- (void)removePrincipal:(id)principal;	// 0x34159aa1
- (void)retainPowerAssertion;	// 0x3415cb05
// converted property getter: - (id)scheme;	// 0x3415d309
// declared property getter: - (id)searchPropertySet;	// 0x34158f99
- (BOOL)searchQueriesRunning;	// 0x3415c4d5
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x3415d6fd
- (id)serverBaseURL;	// 0x34158e31
// declared property getter: - (id)serverVersion;	// 0x34159add
- (void)setAccountDescription:(id)description;	// 0x34158ed5
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x34158a65
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x34158f5d
// converted property setter: - (void)setHost:(id)host;	// 0x3415d241
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x3415d5d9
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x34159059
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x3415d681
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x3415d62d
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x34158b25
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x34158bb9
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x34158aa9
// converted property setter: - (void)setPort:(int)port;	// 0x3415d449
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x3415d6b9
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x3415d6e5
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x34158c55
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x3415d605
// converted property setter: - (void)setScheme:(id)scheme;	// 0x3415d381
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x34158fa9
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x3415d715
// declared property setter: - (void)setServerVersion:(id)version;	// 0x34159b55
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x34158975
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x3415d55d
// converted property setter: - (void)setUsername:(id)username;	// 0x3415d0fd
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x3415916d
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x34159d31
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x34159dc9
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x34159d7d
- (BOOL)shouldLogTransmittedData;	// 0x3415d04d
- (void)shutdown;	// 0x3415c501
- (id)spinnerIdentifiers;	// 0x3415a6e5
- (id)stateString;	// 0x34157c59
// declared property getter: - (id)subscribedCalendars;	// 0x34158a11
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x34157c49
// declared property getter: - (BOOL)supportsEvents;	// 0x34159ef5
// declared property getter: - (BOOL)supportsReminders;	// 0x34159e31
- (void)task:(id)task didFinishWithError:(id)error;	// 0x3415bb7d
// converted property getter: - (id)taskManager;	// 0x34159f49
- (BOOL)upgradeAccount;	// 0x341587f1
// converted property getter: - (BOOL)useSSL;	// 0x3415d58d
// converted property getter: - (id)username;	// 0x3415d095
- (BOOL)usesTokenAuth;	// 0x34159f45
// declared property getter: - (id)viewedTimeZone;	// 0x34159ca5
// declared property getter: - (BOOL)wasMigrated;	// 0x3415909d
- (id)wellKnownPaths;	// 0x3415c711
@end

