/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSCopying.h"
#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import "SSDownloadManagerObserver.h"
#import <NSObject.h> // Unknown library

@class MPMediaPlaylist, MPMediaQuery, NSString, NSArray;

@interface MPGeniusMix : NSObject <SSDownloadManagerObserver, NSCoding, NSCopying> {
	MPMediaPlaylist *_playlist;	// 4 = 0x4
	MPMediaQuery *_seedTracksQuery;	// 8 = 0x8
	NSArray *_representativeArtists;	// 12 = 0xc
	NSArray *_representativeImageItems;	// 16 = 0x10
}
@property(readonly, assign, nonatomic) float downloadProgress;	// G=0x31dceddd; 
@property(readonly, assign, nonatomic) BOOL isCloudMix;	// G=0x31dcf139; 
@property(readonly, assign, nonatomic) BOOL isDownloading;	// G=0x31dcf181; 
@property(readonly, assign, nonatomic) NSString *name;	// G=0x31dcf489; 
@property(readonly, assign, nonatomic) MPMediaPlaylist *playlist;	// G=0x31dd1119; @synthesize=_playlist
@property(readonly, assign, nonatomic) NSArray *representativeArtists;	// G=0x31dcf4b5; 
@property(readonly, assign, nonatomic) MPMediaQuery *seedTracksQuery;	// G=0x31dd0aa1; 
+ (id)artworkCacheDirectoryPath;	// 0x31dcddd1
+ (id)artworkImageForMediaItem:(id)mediaItem;	// 0x31dcddd5
+ (id)artworkImageForMediaItem:(id)mediaItem scaleMode:(int)mode;	// 0x31dce251
+ (id)mixQueue;	// 0x31dcd86d
- (id)initWithCoder:(id)coder;	// 0x31dcdbbd
- (id)initWithMPMediaPlaylist:(id)mpmediaPlaylist;	// 0x31dcd8d9
- (id)_cacheDirectoryPath;	// 0x31dd0b5d
- (id)_cachedRepresentativeImagePath;	// 0x31dd0c19
- (unsigned long long)_entityArtworkCacheHashForRepresentativeItems:(id)representativeItems ensureItemArtworkFilesExist:(BOOL)exist;	// 0x31dd0c4d
- (void)_generateMixImageWithTileLength:(float)tileLength imageDidLoadBlock:(id)image;	// 0x31dd04cd
- (CGImageRef)_getAlreadyLoadedRepresentativeImageWithTileLength:(float)tileLength loadCompletionBlock:(id)block;	// 0x31dd0671
- (BOOL)_observeMixImageLoadingWithImageDidLoadBlock:(id)_observeMixImageLoadingWithImage;	// 0x31dd03c5
- (void)_onQueueLoadRepresentativeImageWithTileLength:(float)tileLength;	// 0x31dcfd45
- (CGImageRef)_placeholderImageWithTileLength:(float)tileLength;	// 0x31dcf749
- (CGImageRef)_placeholderMixImageWithTileLength:(float)tileLength;	// 0x31dcf981
- (id)_representativeImageItemsWithMaxCount:(unsigned)maxCount;	// 0x31dd0e3d
- (BOOL)canPlayUsingNetworkType:(int)type;	// 0x31dce129
- (void)cancelDownload;	// 0x31dcde45
- (id)copyWithZone:(NSZone *)zone;	// 0x31dcdd8d
- (void)dealloc;	// 0x31dcd9a5
- (id)description;	// 0x31dcda31
- (void)downloadMixWithPermissionHandler:(id)permissionHandler completionHandler:(id)handler;	// 0x31dce3c9
// declared property getter: - (float)downloadProgress;	// 0x31dceddd
- (void)encodeWithCoder:(id)coder;	// 0x31dcdd21
- (unsigned)hash;	// 0x31dcdac1
// declared property getter: - (BOOL)isCloudMix;	// 0x31dcf139
// declared property getter: - (BOOL)isDownloading;	// 0x31dcf181
- (BOOL)isEqual:(id)equal;	// 0x31dcdb05
- (CGImageRef)loadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x31dd09c1
// declared property getter: - (id)name;	// 0x31dcf489
// declared property getter: - (id)playlist;	// 0x31dd1119
- (void)preloadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x31dd0871
// declared property getter: - (id)representativeArtists;	// 0x31dcf4b5
// declared property getter: - (id)seedTracksQuery;	// 0x31dd0aa1
@end

