/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library
#import "MPAVQueuePlayerFeederSource.h"

@class MPAVItem, NSString, MPQueuePlayer, MPAVQueuePlayerFeeder;
@protocol MPAVPlaylistFeeder;

@interface MPAVPlaylistManager : NSObject <MPAVQueuePlayerFeederSource> {
	NSString *_audioSessionModeOverride;	// 4 = 0x4
	MPAVItem *_currentItem;	// 8 = 0x8
	MPAVQueuePlayerFeeder *_feeder;	// 12 = 0xc
	BOOL _goToTargetIndex;	// 16 = 0x10
	int _isChangingPlaylistFeeder;	// 20 = 0x14
	int _lastSelectionDirection;	// 24 = 0x18
	MPQueuePlayer *_player;	// 28 = 0x1c
	id<MPAVPlaylistFeeder> _playlistFeeder;	// 32 = 0x20
	int _repeatMode;	// 36 = 0x24
	int _retainCount;	// 40 = 0x28
	int _targetIndex;	// 44 = 0x2c
	BOOL _updatedAudioSessionMode;	// 48 = 0x30
}
@property(retain, nonatomic) NSString *audioSessionModeOverride;	// G=0x31df8dcd; S=0x31df8ddd; @synthesize=_audioSessionModeOverride
@property(readonly, assign, nonatomic) BOOL canChangePlaylistFeeder;	// G=0x31df8495; 
@property(readonly, assign) int currentIndex;	// G=0x31df83b9; 
@property(readonly, assign) MPAVItem *currentItem;	// G=0x31df8ded; @synthesize=_currentItem
@property(assign, nonatomic) BOOL forceSynchronousQueueFilling;	// G=0x31df7eed; S=0x31df7f75; 
@property(readonly, assign, nonatomic) BOOL isChangingPlaylistFeeder;	// G=0x31df847d; 
@property(readonly, assign) int lastSelectionDirection;	// G=0x31df8e25; @synthesize=_lastSelectionDirection
@property(assign, nonatomic) BOOL managesSystemDownloads;	// G=0x31df7f11; S=0x31df7f95; 
@property(assign, nonatomic) unsigned maxQueueDepth;	// G=0x31df7f35; S=0x31df7fb5; 
@property(assign, nonatomic) unsigned minQueueDepth;	// G=0x31df7f55; S=0x31df7fd5; 
@property(readonly, assign) MPQueuePlayer *player;	// G=0x31df8e01; @synthesize=_player
@property(retain, nonatomic) id<MPAVPlaylistFeeder> playlistFeeder;	// G=0x31df8e15; S=0x31df84ad; @synthesize=_playlistFeeder
@property(assign) int repeatMode;	// G=0x31df83ed; S=0x31df83fd; 
- (id)init;	// 0x31df7289
- (void)_assetCancelNotification:(id)notification;	// 0x31df77b9
- (id)_audioSessionModeForMediaItem:(id)mediaItem;	// 0x31df8bc1
- (void)_downloadCancelledNotification:(id)notification;	// 0x31df79a1
- (id)_feeder;	// 0x31df8bb1
- (id)_feederItemForIndex:(int)index;	// 0x31df8055
- (BOOL)_isDeallocating;	// 0x31df725d
- (id)_itemToFollowItemIndex:(int)followItemIndex skipUnavailableContent:(BOOL)content;	// 0x31df89a9
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)_mediaLibraryDisplayValues;	// 0x31df7da1
- (void)_networkTypeDidChangeNotification:(id)_networkType;	// 0x31df7e1d
- (int)_nextItemIndex:(int)index repeatMode:(int)mode;	// 0x31df88b9
- (int)_prepareToQueuePlaybackIndex:(int)queuePlaybackIndex selectionDirection:(int)direction;	// 0x31df81b9
- (void)_reloadQueuedItemsIfPathBecameAvailable;	// 0x31df8635
- (BOOL)_tryRetain;	// 0x31df720d
- (void)_updateAudioSessionMode;	// 0x31df8c15
// declared property getter: - (id)audioSessionModeOverride;	// 0x31df8dcd
// declared property getter: - (BOOL)canChangePlaylistFeeder;	// 0x31df8495
- (void)contentInvalidated;	// 0x31df8859
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned)index;	// 0x31df8811
- (void)contentInvalidatedWithNewIndex:(unsigned)newIndex;	// 0x31df8879
- (void)contentsDidChangeByRemovingRange:(NSRange)contents;	// 0x31df8749
// declared property getter: - (int)currentIndex;	// 0x31df83b9
// declared property getter: - (id)currentItem;	// 0x31df8ded
- (void)dealloc;	// 0x31df74a5
// declared property getter: - (BOOL)forceSynchronousQueueFilling;	// 0x31df7eed
// declared property getter: - (BOOL)isChangingPlaylistFeeder;	// 0x31df847d
// declared property getter: - (int)lastSelectionDirection;	// 0x31df8e25
// declared property getter: - (BOOL)managesSystemDownloads;	// 0x31df7f11
// declared property getter: - (unsigned)maxQueueDepth;	// 0x31df7f35
// declared property getter: - (unsigned)minQueueDepth;	// 0x31df7f55
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x31df7641
// declared property getter: - (id)player;	// 0x31df8e01
// declared property getter: - (id)playlistFeeder;	// 0x31df8e15
- (id)queuePlayerFeeder:(id)feeder itemToFollowItem:(id)followItem;	// 0x31df8a8d
- (BOOL)queuePlayerFeeder:(id)feeder willInsertItem:(id)item;	// 0x31df8ac9
- (void)queuePlayerFeeder:(id)feeder willRemoveItem:(id)item;	// 0x31df8ac5
- (void)queuePlayerFeederDidUpdateQueue:(id)queuePlayerFeeder queuedItems:(id)items dequeuedItems:(id)items3;	// 0x31df8acd
- (void)queuePlayerFeederFailedToQueueAnyItems:(id)queueAnyItems;	// 0x31df8b45
- (oneway void)release;	// 0x31df7185
// declared property getter: - (int)repeatMode;	// 0x31df83ed
- (id)retain;	// 0x31df714d
- (unsigned)retainCount;	// 0x31df71f9
// declared property setter: - (void)setAudioSessionModeOverride:(id)override;	// 0x31df8ddd
- (void)setCurrentIndex:(int)index selectionDirection:(int)direction;	// 0x31df82dd
// declared property setter: - (void)setForceSynchronousQueueFilling:(BOOL)filling;	// 0x31df7f75
// declared property setter: - (void)setManagesSystemDownloads:(BOOL)downloads;	// 0x31df7f95
// declared property setter: - (void)setMaxQueueDepth:(unsigned)depth;	// 0x31df7fb5
// declared property setter: - (void)setMinQueueDepth:(unsigned)depth;	// 0x31df7fd5
// declared property setter: - (void)setPlaylistFeeder:(id)feeder;	// 0x31df84ad
- (BOOL)setPlaylistFeeder:(id)feeder startIndex:(int)index;	// 0x31df859d
// declared property setter: - (void)setRepeatMode:(int)mode;	// 0x31df83fd
- (void)updateForSoundCheckDefaultsChange;	// 0x31df7ff5
@end

