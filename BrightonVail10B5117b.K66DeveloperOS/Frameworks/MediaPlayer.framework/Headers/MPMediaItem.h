/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSString, NSDate, NSArray, MPMediaItemArtwork;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x31dab62d; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x31dab689; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x31dab6a5; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x31dab6c1; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x31dab6dd; S=0x31dab711; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x31daadfd; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x31dab755; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x31dab649; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x31dab951; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x31dab771; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x31dabd5d; S=0x31dabd8d; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x31dab851; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x31dab78d; 
@property(readonly, assign, nonatomic) BOOL isUsableAsRepresentativeItem;	// G=0x31dac4f5; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x31dabbc5; S=0x31dabbe1; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x31dabd25; S=0x31dabd41; 
@property(copy, nonatomic) NSDate *lastUsedDate;	// G=0x31dabbfd; S=0x31dabc19; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x31dab881; 
@property(readonly, assign, nonatomic) BOOL mediaTypeCanSeedGenius;	// G=0x31e47531; 
@property(assign, nonatomic) unsigned playCount;	// G=0x31dabad5; S=0x31dabb09; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x31dabb4d; S=0x31dabb81; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x31dab8b5; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x31dab995; 
@property(assign, nonatomic) unsigned rating;	// G=0x31dab9b1; S=0x31dab9e5; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x31daba29; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x31dabdd1; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x31dabc35; S=0x31dabc69; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x31dabcad; S=0x31dabce1; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x31dab8e9; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x31dab91d; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x31daba45; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x31daba61; 
+ (void)_createFilterableDictionary;	// 0x31daae19
+ (BOOL)_isValidItemProperty:(id)property;	// 0x31dab5e9
+ (BOOL)canFilterByProperty:(id)property;	// 0x31daa56d
+ (id)dynamicProperties;	// 0x31daacd1
+ (id)fallbackTitlePropertyForGroupingType:(int)groupingType;	// 0x31daacb5
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x31daabc5
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x31daac31
- (id)initWithCoder:(id)coder;	// 0x31daa469
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x31daa35d
- (id)_bestStoreURL;	// 0x31daab0d
- (id)_directStoreURL;	// 0x31dac4f9
- (id)_libraryLinkArtist;	// 0x31dac6a1
- (id)_libraryLinkKind;	// 0x31dac715
- (id)_libraryLinkPlaylistName;	// 0x31dac7d5
- (id)_libraryLinkURL;	// 0x31dac869
// declared property getter: - (id)albumArtist;	// 0x31dab62d
// declared property getter: - (id)albumTitle;	// 0x31dab689
// declared property getter: - (id)artist;	// 0x31dab6a5
// declared property getter: - (id)artwork;	// 0x31dab6c1
// declared property getter: - (double)bookmarkTime;	// 0x31dab6dd
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x31dabf35
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x31dac021
// declared property getter: - (id)chapters;	// 0x31daadfd
- (id)chaptersOfType:(int)type;	// 0x31dabe01
- (void)clearBookmarkTime;	// 0x31daaa8d
// declared property getter: - (id)composer;	// 0x31dab755
- (unsigned)countOfChaptersOfType:(int)type;	// 0x31dac155
- (void)didReceiveMemoryWarning;	// 0x31daab09
- (BOOL)didSkipWithPlayedToTime:(double)time;	// 0x31daa721
// declared property getter: - (id)effectiveAlbumArtist;	// 0x31dab649
// declared property getter: - (double)effectiveStopTime;	// 0x31dab951
- (void)encodeWithCoder:(id)coder;	// 0x31daa4f1
- (BOOL)existsInLibrary;	// 0x31daab45
- (void)gaplessHeuristicInfo:(unsigned *)info durationInSamples:(unsigned long long *)samples lastPacketsResync:(unsigned long long *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x31dac235
// declared property getter: - (id)genre;	// 0x31dab771
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x31dabd5d
- (unsigned)hash;	// 0x31daa3b9
- (void)incrementPlayCountForPlayingToEnd;	// 0x31daa915
- (BOOL)incrementPlayCountForStopTime:(double)stopTime;	// 0x31daa991
- (void)incrementSkipCount;	// 0x31daa899
- (BOOL)isDownloadInProgress;	// 0x31e42b3d
- (BOOL)isDownloadable;	// 0x31e428f1
- (BOOL)isEqual:(id)equal;	// 0x31daa3d1
// declared property getter: - (BOOL)isITunesU;	// 0x31dab851
// declared property getter: - (BOOL)isRental;	// 0x31dab78d
// declared property getter: - (BOOL)isUsableAsRepresentativeItem;	// 0x31dac4f5
// declared property getter: - (id)lastPlayedDate;	// 0x31dabbc5
// declared property getter: - (id)lastSkippedDate;	// 0x31dabd25
// declared property getter: - (id)lastUsedDate;	// 0x31dabbfd
- (void)markNominalAmountHasBeenPlayed;	// 0x31daa7a1
// declared property getter: - (int)mediaType;	// 0x31dab881
// declared property getter: - (BOOL)mediaTypeCanSeedGenius;	// 0x31e47531
- (void)noteWasPlayedToTime:(double)time skipped:(BOOL)skipped;	// 0x31daa81d
// declared property getter: - (unsigned)playCount;	// 0x31dabad5
// declared property getter: - (unsigned)playCountSinceSync;	// 0x31dabb4d
// declared property getter: - (double)playbackDuration;	// 0x31dab8b5
// declared property getter: - (id)podcastTitle;	// 0x31dab995
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x31daadc9
- (id)predicateForProperty:(id)property;	// 0x31daba95
// declared property getter: - (unsigned)rating;	// 0x31dab9b1
// declared property getter: - (id)releaseDate;	// 0x31daba29
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x31dabdd1
- (id)representativeItem;	// 0x31daab41
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x31dab711
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x31dabd8d
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x31dabbe1
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x31dabd41
// declared property setter: - (void)setLastUsedDate:(id)date;	// 0x31dabc19
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x31dabb09
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x31dabb81
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x31dab9e5
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x31dabc69
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x31dabce1
// declared property getter: - (unsigned)skipCount;	// 0x31dabc35
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x31dabcad
// declared property getter: - (double)startTime;	// 0x31dab8e9
// declared property getter: - (double)stopTime;	// 0x31dab91d
// declared property getter: - (id)title;	// 0x31daba45
- (void)updateLastUsedDateToCurrentDate;	// 0x31daaa11
- (id)valueForProperty:(id)property;	// 0x31daa5f9
- (id)valuesForProperties:(id)properties;	// 0x31daa6a1
// declared property getter: - (unsigned)year;	// 0x31daba61
@end

