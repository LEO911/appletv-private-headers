/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, MPMediaItem, MPImageCache, NSURL, MPAlternateTracks, MPQueueFeeder, MPAVController, NSString, NSArray, AVPlayerItem, NSData;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x31d649f1; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x31d649f9; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x31d64a01; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x31d649fd; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x31d64bf1; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x31d67d6d; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x31d649f5; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x31d64a09; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x31d64a0d; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x31d65f9d; S=0x31d67d7d; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x31d64279; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x31d64a11; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x31d65f75; S=0x31d67d8d; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x31d66069; S=0x31d65fed; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x31d64a15; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x31d64a39; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x31d64a61; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x31d64bed; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x31d67dbd; S=0x31d67dcd; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x31d64a1d; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x31d64a19; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x31d64ac1; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x31d64a79; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x31d66589; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x31d665d1; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x31d66671; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x31d665e9; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x31d67d9d; S=0x31d67dad; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x31d64d41; S=0x31d64d85; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x31d64a35; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x31d64b59; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x31d64b5d; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x31d64b61; S=0x31d64e29; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x31d64ed5; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x31d67ddd; S=0x31d67ded; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x31d67dfd; S=0x31d67e15; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x31e38d49; 
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x31d64ad1; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x31d64c11; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x31e17175; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x31d64c15; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x31d66449; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x31d667b1; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x31d667c9; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x31d64771; S=0x31d64789; 
@property(assign, nonatomic) MPAVController *player;	// G=0x31d67e2d; S=0x31d67e3d; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x31d64469; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x31d64c6d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x31d64d05; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x31d67e4d; S=0x31d64e61; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x31d646dd; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x31d64b75; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x31d647a9; S=0x31d647ad; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x31d64e99; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x31d668c1; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x31d667e1; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x31d66435; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x31d65fc5; S=0x31d67e5d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x31d64fe5; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x31d66445; 
@property(assign) BOOL userSkippedPlayback;	// G=0x31d64819; S=0x31d647f5; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x31d66535; S=0x31d6655d; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x31d66455; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x31e38e01; 
+ (id)URLFromPath:(id)path;	// 0x31d63bdd
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x31d64a05
+ (unsigned)defaultScaleMode;	// 0x31d63bc9
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x31d63bcd
- (id)init;	// 0x31d63c8d
- (id)initWithAsset:(id)asset;	// 0x31d63d19
- (id)initWithURL:(id)url;	// 0x31d63ca1
- (id)initWithURL:(id)url options:(id)options;	// 0x31d63cdd
- (void)_applicationDidBecomeActive:(id)_application;	// 0x31d66c29
- (void)_checkAllowsBlockingDurationCall;	// 0x31d67821
- (void)_clearAsset;	// 0x31d670d9
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x31d66c09
- (double)_durationFromExternalMetadataIfAvailable;	// 0x31d66611
- (double)_durationInSeconds;	// 0x31d6482d
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x31d662d1
- (void)_itemAttributeAvailableKey:(id)key;	// 0x31d66a01
- (void)_loadAssetAndPlayerItem;	// 0x31d64165
- (void)_loadAssetProperties;	// 0x31d66e79
- (void)_loadTimeMarkersAsync;	// 0x31d65e55
- (void)_loadTimeMarkersBlocking;	// 0x31d64fe9
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x31d66d89
- (void)_realoadEmbeddedTimeMarkers;	// 0x31d64e9d
- (void)_releaseAllTimeMarkers;	// 0x31d63f11
- (id)_seekableTimeRanges;	// 0x31d66cc9
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x31d66079
- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;	// 0x31d66ed5
// declared property getter: - (id)album;	// 0x31d649f1
// declared property getter: - (id)albumArtist;	// 0x31d649f9
// declared property getter: - (unsigned)albumTrackCount;	// 0x31d64a01
// declared property getter: - (unsigned)albumTrackNumber;	// 0x31d649fd
// declared property getter: - (BOOL)allowsEQ;	// 0x31d64bf1
// declared property getter: - (id)alternateTracks;	// 0x31d67d6d
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x31d64b35
// declared property getter: - (id)artist;	// 0x31d649f5
// declared property getter: - (id)artworkImageData;	// 0x31d64a09
// declared property getter: - (id)artworkMIMEType;	// 0x31d64a0d
- (id)artworkTimeMarkerForTime:(double)time;	// 0x31d6621d
// declared property getter: - (id)artworkTimeMarkers;	// 0x31d65f9d
// declared property getter: - (id)asset;	// 0x31d64279
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x31d66f25
// declared property getter: - (BOOL)canSeedGenius;	// 0x31d64a11
- (id)chapterTimeMarkerForTime:(double)time;	// 0x31d661e1
// declared property getter: - (id)chapterTimeMarkers;	// 0x31d65f75
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x31d66295
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x31d66069
// declared property getter: - (id)composer;	// 0x31d64a15
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x31d64a39
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x31d64a61
// declared property getter: - (int)customAVEQPreset;	// 0x31d64bed
- (void)dealloc;	// 0x31d63f91
// declared property getter: - (float)defaultPlaybackRate;	// 0x31d67dbd
// declared property getter: - (unsigned)discCount;	// 0x31d64a1d
// declared property getter: - (unsigned)discNumber;	// 0x31d64a19
// declared property getter: - (id)displayableText;	// 0x31d64ac1
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x31d64a79
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x31d66589
// declared property getter: - (double)durationFromExternalMetadata;	// 0x31d665d1
// declared property getter: - (double)durationIfAvailable;	// 0x31d66671
- (double)durationInSeconds;	// 0x31d64881
// declared property getter: - (BOOL)durationIsValid;	// 0x31d665e9
// declared property getter: - (id)feeder;	// 0x31d67d9d
- (void)flushNowPlayingCaches;	// 0x31d64135
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x31d64d41
// declared property getter: - (id)genre;	// 0x31d64a35
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x31d64b11
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x31d64b59
// declared property getter: - (BOOL)hasDisplayableText;	// 0x31d64b5d
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x31d64b61
// declared property getter: - (id)imageCache;	// 0x31d64ed5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x31d64ed9
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x31d64f05
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x31d67ddd
// declared property getter: - (BOOL)isAssetLoaded;	// 0x31d67dfd
- (BOOL)isAssetURLValid;	// 0x31d64a31
- (BOOL)isPlaceholderForItem:(id)item;	// 0x31d64a2d
// declared property getter: - (BOOL)isStreamable;	// 0x31d64b75
// declared property getter: - (BOOL)isStreamingQuality;	// 0x31e38d49
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x31d63bd1
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x31d64a21
- (void)loadAssetAndPlayerItem;	// 0x31d64161
- (id)localeForAssetTrack:(id)assetTrack;	// 0x31d67955
- (id)localizedPositionInPlaylistString;	// 0x31d66459
// declared property getter: - (id)lyrics;	// 0x31d64ad1
// declared property getter: - (id)mainTitle;	// 0x31d64c11
// declared property getter: - (id)mediaItem;	// 0x31e17175
// declared property getter: - (CGSize)naturalSize;	// 0x31d64c15
- (void)notePlaybackFinishedByHittingEnd;	// 0x31d64759
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x31d66c49
- (id)path;	// 0x31d648f1
// declared property getter: - (unsigned long long)persistentID;	// 0x31d66449
// declared property getter: - (double)playableDuration;	// 0x31d667b1
// declared property getter: - (double)playableDurationIfAvailable;	// 0x31d667c9
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x31d64771
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x31d64c71
// declared property getter: - (id)player;	// 0x31d67e2d
// declared property getter: - (id)playerItem;	// 0x31d64469
// declared property getter: - (id)podcastURL;	// 0x31d64c6d
// declared property getter: - (CGSize)presentationSize;	// 0x31d64d05
- (BOOL)prioritizeDownloadSession;	// 0x31e42ef1
- (void)reevaluateType;	// 0x31d679b5
- (void)replacePlayerItemWithPlayerItem:(id)playerItem;	// 0x31d67c79
- (void)resetBookkeeping;	// 0x31d646fd
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x31d64dcd
- (void)setAlternateAudioTrackID:(int)anId;	// 0x31d64751
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x31d67d7d
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x31d67d8d
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x31d65fed
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x31d67dcd
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x31d67dad
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x31d64d85
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x31d64e29
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x31d67ded
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x31d67e15
- (void)setOverrideDuration:(double)duration;	// 0x31d64e4d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x31d64789
- (void)setPlaybackFinishedTime:(double)time;	// 0x31d6478d
- (void)setPlaybackStoppedTime:(double)time;	// 0x31d64755
// declared property setter: - (void)setPlayer:(id)player;	// 0x31d67e3d
- (void)setPlayerItem:(id)item;	// 0x31d64645
- (void)setRating:(float)rating;	// 0x31d647a5
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x31d64e61
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x31d647ad
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x31d67e5d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x31d647b1
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x31d647c9
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x31d647f5
// declared property setter: - (void)setVideoID:(id)anId;	// 0x31d6655d
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x31d67171
- (void)setupPlaybackInfo;	// 0x31d671d9
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x31d67e4d
// declared property getter: - (int)status;	// 0x31d646dd
// declared property getter: - (int)subtitleTrackID;	// 0x31d647a9
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x31d64e99
// declared property getter: - (double)timeOfSeekableEnd;	// 0x31d668c1
// declared property getter: - (double)timeOfSeekableStart;	// 0x31d667e1
- (id)titlesForTime:(double)time;	// 0x31d64fe1
// declared property getter: - (unsigned)type;	// 0x31d66435
- (id)url;	// 0x31d6497d
- (id)urlTimeMarkerForTime:(double)time;	// 0x31d66259
// declared property getter: - (id)urlTimeMarkers;	// 0x31d65fc5
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x31d64fe5
// declared property getter: - (float)userRating;	// 0x31d66445
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x31d64819
// declared property getter: - (id)videoID;	// 0x31d66535
// declared property getter: - (BOOL)wantsSubtitles;	// 0x31d66455
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x31e38e01
@end

