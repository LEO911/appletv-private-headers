/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

#import "CoreMotion-Structs.h"
#import <NSObject.h> // Unknown library

@class CMDeviceMotion, CMGyroData, CMAccelerometerData, CMMagnetometerData;

@interface CMMotionManager : NSObject {
	id _internal;	// 4 = 0x4
}
@property(readonly, assign, nonatomic, getter=isAccelerometerActive) BOOL accelerometerActive;	// G=0x31751cd5; @dynamic
@property(readonly, assign, nonatomic, getter=isAccelerometerAvailable) BOOL accelerometerAvailable;	// G=0x31751cc5; @dynamic
@property(readonly, assign) CMAccelerometerData *accelerometerData;	// G=0x31751dbd; @dynamic
@property(assign, nonatomic) double accelerometerUpdateInterval;	// G=0x31751d95; S=0x31751cf9; @dynamic
@property(readonly, assign, nonatomic) int attitudeReferenceFrame;	// G=0x31752905; @dynamic
@property(readonly, assign) CMDeviceMotion *deviceMotion;	// G=0x31752925; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionActive) BOOL deviceMotionActive;	// G=0x3175281d; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionAvailable) BOOL deviceMotionAvailable;	// G=0x317527f5; @dynamic
@property(assign, nonatomic) double deviceMotionUpdateInterval;	// G=0x317528dd; S=0x31752841; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroActive) BOOL gyroActive;	// G=0x3175226d; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroAvailable) BOOL gyroAvailable;	// G=0x3175225d; @dynamic
@property(readonly, assign) CMGyroData *gyroData;	// G=0x31752355; @dynamic
@property(assign, nonatomic) double gyroUpdateInterval;	// G=0x3175232d; S=0x31752291; @dynamic
@property(readonly, assign, nonatomic, getter=isMagnetometerActive) BOOL magnetometerActive;	// G=0x31753321; 
@property(readonly, assign, nonatomic, getter=isMagnetometerAvailable) BOOL magnetometerAvailable;	// G=0x31753311; 
@property(readonly, assign) CMMagnetometerData *magnetometerData;	// G=0x31753409; 
@property(assign, nonatomic) double magnetometerUpdateInterval;	// G=0x317533e1; S=0x31753345; 
@property(assign, nonatomic) BOOL showsDeviceMovementDisplay;	// G=0x31753931; S=0x317538ad; 
@property(assign) BOOL useAccelerometer;	// G=0x317513a1; S=0x31751379; converted property
+ (unsigned)availableAttitudeReferenceFrames;	// 0x31751475
+ (void)dummySelector:(id)selector;	// 0x31755219
+ (void)initialize;	// 0x317513c5
+ (void)setAllowInBackground:(BOOL)background;	// 0x31751495
- (id)init;	// 0x31751499
- (id)initPrivate;	// 0x31751629
- (id)initUsing6AxisSensorFusion;	// 0x31753a21
- (id)initUsingGyroOnlySensorFusion;	// 0x31753a71
// declared property getter: - (id)accelerometerData;	// 0x31751dbd
// declared property getter: - (double)accelerometerUpdateInterval;	// 0x31751d95
// declared property getter: - (int)attitudeReferenceFrame;	// 0x31752905
- (void)dealloc;	// 0x31751999
- (void)deallocPrivate;	// 0x31751b05
// declared property getter: - (id)deviceMotion;	// 0x31752925
// declared property getter: - (double)deviceMotionUpdateInterval;	// 0x317528dd
- (void)didBecomeActive:(id)active;	// 0x317550c1
- (void)didBecomeActivePrivate:(id)aPrivate;	// 0x317551d1
- (void)dismissDeviceMovementDisplay;	// 0x317539e1
// declared property getter: - (id)gyroData;	// 0x31752355
// declared property getter: - (double)gyroUpdateInterval;	// 0x3175232d
- (int)gyttNumTemperatures;	// 0x317532fd
// declared property getter: - (BOOL)isAccelerometerActive;	// 0x31751cd5
// declared property getter: - (BOOL)isAccelerometerAvailable;	// 0x31751cc5
// declared property getter: - (BOOL)isDeviceMotionActive;	// 0x3175281d
// declared property getter: - (BOOL)isDeviceMotionAvailable;	// 0x317527f5
// declared property getter: - (BOOL)isGyroActive;	// 0x3175226d
// declared property getter: - (BOOL)isGyroAvailable;	// 0x3175225d
// declared property getter: - (BOOL)isMagnetometerActive;	// 0x31753321
// declared property getter: - (BOOL)isMagnetometerAvailable;	// 0x31753311
// declared property getter: - (id)magnetometerData;	// 0x31753409
// declared property getter: - (double)magnetometerUpdateInterval;	// 0x317533e1
- (void)onAccelerometer:(const Sample *)accelerometer;	// 0x317541a1
- (void)onDeviceMotion:(const Sample *)motion;	// 0x31754851
- (void)onGeomagneticModel:(const XXStruct_01mbIB *)model;	// 0x31754f99
- (void)onGyro:(const Sample *)gyro;	// 0x317543d9
- (void)onMagnetometer:(const Sample *)magnetometer;	// 0x31754619
- (void)rebuildGytt;	// 0x31753181
- (void)setAccelerometerDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x31753abd
// declared property setter: - (void)setAccelerometerUpdateInterval:(double)interval;	// 0x31751cf9
- (void)setAccelerometerUpdateIntervalPrivate:(double)aPrivate;	// 0x31752031
- (void)setDeviceMotionCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval fsync:(BOOL)fsync;	// 0x31753ef5
// declared property setter: - (void)setDeviceMotionUpdateInterval:(double)interval;	// 0x31752841
- (void)setDeviceMotionUpdateIntervalPrivate:(double)aPrivate;	// 0x31752dd9
- (void)setGyroDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x31753cd9
// declared property setter: - (void)setGyroUpdateInterval:(double)interval;	// 0x31752291
- (void)setGyroUpdateIntervalPrivate:(double)aPrivate;	// 0x317525c9
// declared property setter: - (void)setMagnetometerUpdateInterval:(double)interval;	// 0x31753345
- (void)setMagnetometerUpdateIntervalPrivate:(double)aPrivate;	// 0x31753681
// declared property setter: - (void)setShowsDeviceMovementDisplay:(BOOL)display;	// 0x317538ad
- (void)setShowsDeviceMovementDisplayPrivate:(BOOL)aPrivate;	// 0x31753955
// converted property setter: - (void)setUseAccelerometer:(BOOL)accelerometer;	// 0x31751379
- (void)showDeviceMovementDisplay;	// 0x3175398d
// declared property getter: - (BOOL)showsDeviceMovementDisplay;	// 0x31753931
- (void)startAccelerometerUpdates;	// 0x31751e6d
- (void)startAccelerometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x31752099
- (void)startAccelerometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x31751ee9
- (void)startDeviceMotionUpdates;	// 0x31752a5d
- (void)startDeviceMotionUpdatesPrivateUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x31752e41
- (void)startDeviceMotionUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x31752af9
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame;	// 0x31752be9
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x31752c79
- (void)startGyroUpdates;	// 0x31752405
- (void)startGyroUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x31752631
- (void)startGyroUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x31752481
- (void)startMagnetometerUpdates;	// 0x317534b9
- (void)startMagnetometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x317536e9
- (void)startMagnetometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x31753535
- (void)stopAccelerometerUpdates;	// 0x31751fb9
- (void)stopAccelerometerUpdatesPrivate;	// 0x317521b1
- (void)stopDeviceMotionUpdates;	// 0x31752d5d
- (void)stopDeviceMotionUpdatesPrivate;	// 0x31753095
- (void)stopGyroUpdates;	// 0x31752551
- (void)stopGyroUpdatesPrivate;	// 0x31752749
- (void)stopMagnetometerUpdates;	// 0x31753605
- (void)stopMagnetometerUpdatesPrivate;	// 0x31753801
// converted property getter: - (BOOL)useAccelerometer;	// 0x317513a1
- (void)willResignActive:(id)active;	// 0x31755015
- (void)willResignActivePrivate:(id)aPrivate;	// 0x3175516d
@end

