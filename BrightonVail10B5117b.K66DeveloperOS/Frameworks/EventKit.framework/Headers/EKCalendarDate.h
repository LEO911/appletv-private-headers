/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"
#import "NSMutableCopying.h"

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x3189a10d; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x3188c7e9
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x3188def9
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x3188a7ed
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x3189ab11
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x318f3135
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x3188c831
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x3188df3d
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x3188a82d
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x3188bf09
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x3189ab65
- (double)absoluteTime;	// 0x3188c0d5
- (id)calendarDateByAddingDays:(int)days;	// 0x3188b391
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x3188b3c1
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x318f34dd
- (id)calendarDateForDay;	// 0x3188b211
- (id)calendarDateForEndOfDay;	// 0x3188bfa1
- (id)calendarDateForEndOfMonth;	// 0x318925d1
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x3189270d
- (id)calendarDateForMonth;	// 0x31892325
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x31892409
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x3189241d
- (id)calendarDateForYear;	// 0x318f38b5
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x318f350d
- (id)calendarDateWithDate:(id)date;	// 0x318f3569
- (int)compare:(id)compare;	// 0x3189a90d
- (id)components;	// 0x318f3361
- (id)copyWithZone:(NSZone *)zone;	// 0x3188dfa1
- (id)date;	// 0x3188c099
- (unsigned)day;	// 0x318f36a9
- (unsigned)dayOfWeek;	// 0x318f3789
- (unsigned)dayOfYear;	// 0x318f37b9
- (unsigned)daysInMonth;	// 0x318926d9
- (unsigned)daysInYear;	// 0x318f381d
- (void)dealloc;	// 0x3188c8ed
- (id)description;	// 0x318f3255
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x31891585
- (int)differenceInDays:(id)days;	// 0x318922e9
- (int)differenceInMonths:(id)months;	// 0x318f35e5
- (int)differenceInYears:(id)years;	// 0x318f35a9
- (id)earlierDate:(id)date;	// 0x318f39a5
- (XXStruct_lQVxyC)gregorianDate;	// 0x3188b2ed
- (unsigned)hour;	// 0x318f36dd
- (BOOL)isEqual:(id)equal;	// 0x3189a84d
- (id)laterDate:(id)date;	// 0x318f39ed
- (unsigned)minute;	// 0x318f3711
- (unsigned)month;	// 0x318f3675
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x318f31b1
- (double)second;	// 0x318f3749
- (int)secondsFromGMT;	// 0x318f349d
// converted property getter: - (id)timeZone;	// 0x3189a10d
- (unsigned)weekOfYear;	// 0x318f37e9
- (unsigned)weeksInYear;	// 0x318f3865
- (unsigned)year;	// 0x318f3645
@end

