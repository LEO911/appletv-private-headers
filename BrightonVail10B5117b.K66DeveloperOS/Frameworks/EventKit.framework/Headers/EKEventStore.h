/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSArray, NSMutableSet, NSMutableDictionary, EKDaemonConnection, EKCalendar, NSNumber, NSString, NSTimeZone;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject {
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKCalendar *_defaultCalendarForNewEvents;	// 32 = 0x20
	EKCalendar *_defaultCalendarForNewReminders;	// 36 = 0x24
	EKDaemonConnection *_database;	// 40 = 0x28
	double _lastDatabaseNotificationTimestamp;	// 44 = 0x2c
	unsigned long _flags;	// 52 = 0x34
	NSTimeZone *_timeZone;	// 56 = 0x38
	NSMutableDictionary *_calendars;	// 60 = 0x3c
	NSMutableDictionary *_sources;	// 64 = 0x40
	NSMutableSet *_objectsPendingCommit;	// 68 = 0x44
	NSObject<OS_dispatch_queue> *_calendarQueue;	// 72 = 0x48
	NSObject<OS_dispatch_queue> *_registeredQueue;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *_unsavedChangesQueue;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_dbChangedQueue;	// 84 = 0x54
	NSMutableDictionary *_cachedValidatedEmails;	// 88 = 0x58
}
@property(retain, nonatomic) NSMutableDictionary *_cachedValidatedEmails;	// G=0x318d376d; S=0x318d377d; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x318d368d; S=0x318d369d; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewEvents;	// G=0x318d3601; S=0x3188a781; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewReminders;	// G=0x318d3611; S=0x31893599; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x318d36ad; S=0x318d36bd; @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *calendarQueue;	// G=0x318d36ed; S=0x318d36fd; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x318cbd6d; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x318d3621; S=0x318d3631; @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;	// G=0x318d374d; S=0x318d375d; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x3189a725; S=0x318d3451; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x3188a505; 
@property(retain) EKCalendar *defaultCalendarForNewReminders;	// G=0x31893229; S=0x318ce2b9; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x31898801; S=0x318d340d; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x318d35c1; S=0x318d35d1; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x318cb7c9; 
@property(assign, nonatomic) unsigned long flags;	// G=0x318d366d; S=0x318d367d; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x318d35a1; S=0x318d35b1; @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// G=0x318d3641; S=0x318d3659; @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x318d36cd; S=0x318d36dd; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x318d3581; S=0x318d3591; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x318d3561; S=0x318d3571; @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;	// G=0x318d370d; S=0x318d371d; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x3188929d; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x3188a795; S=0x31885949; @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;	// G=0x318d372d; S=0x318d373d; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x318d35e1; S=0x318d35f1; @synthesize=_updatedObjects
+ (BOOL)_isAuthorizationRestrictedForService:(CFStringRef)service;	// 0x318ca361
+ (int)authorizationStatusForEntityType:(unsigned)entityType;	// 0x318856fd
+ (Class)classForEntityName:(id)entityName;	// 0x31886811
+ (Class)publicClassForEntityName:(id)entityName;	// 0x31891a01
- (id)init;	// 0x318c9d75
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x318c9d89
- (void)_accessStatusChanged;	// 0x318ca54d
- (id)_addFetchedObjectWithID:(id)anId;	// 0x31886551
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x3189fee5
- (id)_allCalendars;	// 0x31885b91
// declared property getter: - (id)_cachedValidatedEmails;	// 0x318d376d
- (BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;	// 0x3188a399
- (id)_calendarItemsMatchingPredicate:(id)predicate;	// 0x318ce971
- (id)_calendarWithID:(id)anId;	// 0x3188a65d
// declared property getter: - (id)_calendars;	// 0x318d368d
- (void)_databaseChangedExternally;	// 0x318a1c85
// declared property getter: - (id)_defaultCalendarForNewEvents;	// 0x318d3601
// declared property getter: - (id)_defaultCalendarForNewReminders;	// 0x318d3611
- (void)_deleteObject:(id)object;	// 0x318d1125
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x318ccddd
- (void)_forgetRegisteredObjects;	// 0x318d085d
- (void)_insertObject:(id)object;	// 0x3189d0d5
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x318cca9d
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x318cd6e5
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x31893815
- (void)_protectedDataDidBecomeAvailable;	// 0x318d3405
- (void)_protectedDataWillBecomeUnavailable;	// 0x318d3401
- (void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;	// 0x318d0419
- (void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;	// 0x318d01a9
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x318952b5
- (void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x318d02e5
- (void)_registerObject:(id)object;	// 0x318983dd
- (void)_registerObjectImmediate:(id)immediate;	// 0x31886c6d
- (void)_requestAccessForEntityType:(unsigned)entityType;	// 0x318ca3c5
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x318a16b5
- (void)_saveWithoutNotify;	// 0x318cb829
// declared property getter: - (id)_sources;	// 0x318d36ad
- (void)_trackModifiedObject:(id)object;	// 0x318d0e0d
- (void)_unregisterObject:(id)object;	// 0x318986b5
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x318a1e6d
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x318d2b51
- (id)alarmWithUUID:(id)uuid;	// 0x318d2a65
- (void)cacheValidationStatusForEmail:(id)email status:(int)status;	// 0x318d3495
- (id)calendarItemWithIdentifier:(id)identifier;	// 0x318ce6ed
- (id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;	// 0x318ce80d
// declared property getter: - (id)calendarQueue;	// 0x318d36ed
- (id)calendarWithExternalURI:(id)externalURI;	// 0x318cf669
- (id)calendarWithID:(id)anId;	// 0x31890bc1
- (id)calendarWithIdentifier:(id)identifier;	// 0x31889d7d
// declared property getter: - (id)calendars;	// 0x318cbd6d
- (id)calendarsForEntityType:(unsigned)entityType;	// 0x3188598d
- (void)cancelFetchRequest:(id)request;	// 0x318d2a09
- (id)changesSinceSequenceNumber:(int)number;	// 0x318ca601
- (id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;	// 0x318cf57d
- (BOOL)commit:(id *)commit;	// 0x3189ff59
- (id)connection;	// 0x3188d381
- (CGColorRef)copyCGColorForNewCalendar;	// 0x318cde89
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x31893a6d
- (void)daemonRestarted;	// 0x318cb77d
// declared property getter: - (id)database;	// 0x318d3621
// declared property getter: - (id)dbChangedQueue;	// 0x318d374d
- (void)dealloc;	// 0x318ca071
- (id)defaultAllDayAlarm;	// 0x3189a6b1
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x3189a725
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x3188a505
// converted property getter: - (id)defaultCalendarForNewReminders;	// 0x31893229
- (id)defaultTimedAlarm;	// 0x3189878d
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x31898801
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x318cc875
// declared property getter: - (id)deletedObjects;	// 0x318d35c1
- (id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x318cfa11
- (int)emailAddressValidationStatus:(id)status;	// 0x318d3529
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x318d279d
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x318cd009
- (id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;	// 0x3189311d
// declared property getter: - (id)eventStoreIdentifier;	// 0x318cb7c9
- (id)eventWithIdentifier:(id)identifier;	// 0x318cc9a5
- (id)eventWithUUID:(id)uuid;	// 0x318cf48d
- (id)eventWithUniqueId:(id)uniqueId;	// 0x318cd031
- (id)eventsMatchingPredicate:(id)predicate;	// 0x3188c93d
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x3188caf9
- (BOOL)fetchProperties:(id)properties forReminders:(id)reminders;	// 0x318cf15d
- (id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x318cebf1
// declared property getter: - (unsigned long)flags;	// 0x318d366d
- (BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id *)error;	// 0x318cbeb9
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x318cd609
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x318cdc45
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x318cd7e1
- (id)insertNewEvent;	// 0x318cf749
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x318cf7a5
- (id)insertNewReminder;	// 0x318ceb31
// declared property getter: - (id)insertedObjects;	// 0x318d35a1
- (id)inviteReplyNotifications;	// 0x3188ff51
- (int)inviteReplyNotificationsCount;	// 0x318cfda9
- (BOOL)isDataProtected;	// 0x3188e859
// declared property getter: - (double)lastDatabaseNotificationTimestamp;	// 0x318d3641
- (id)localSource;	// 0x318cbb5d
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x318d2e59
- (BOOL)markCalendarAlerted:(id)alerted;	// 0x318cc081
- (void)markEventAlerted:(id)alerted;	// 0x318cd585
- (BOOL)markInviteReplyNotificationAlerted:(id)alerted;	// 0x318cff21
- (void)markNotificationsAlertedAndSave:(id)save;	// 0x318cf7e5
- (BOOL)markResourceChangeAlerted:(id)alerted error:(id *)error;	// 0x318cfb11
- (int)notifiableEventCount;	// 0x318cf9e5
- (id)objectWithObjectID:(id)objectID;	// 0x31893381
// declared property getter: - (id)objectsPendingCommit;	// 0x318d36cd
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;	// 0x318927ed
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;	// 0x31892e41
- (BOOL)occurrenceCacheOccurrencesAreBeingGenerated;	// 0x31892d55
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x318cef49
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x318cef15
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x318cefdd
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;	// 0x318cedf5
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x3189446d
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x318ceedd
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x318d313d
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;	// 0x3188c439
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x318d324d
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;	// 0x318ceea9
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x318937d9
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;	// 0x318ced45
- (id)predicateForNotifiableEvents;	// 0x3188fced
- (id)predicateForNotificationCenterVisibleEvents;	// 0x318d3391
- (id)predicateForRemindersInCalendars:(id)calendars;	// 0x318cecfd
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x318cf001
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x318cef81
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x318cf041
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;	// 0x318cf07d
- (id)predicateForUnacknowledgedEvents;	// 0x318d33ad
- (id)predicateForUnalertedEvents;	// 0x318d33c9
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x318d33e5
- (id)publicObjectWithObjectID:(id)objectID;	// 0x318d0b21
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x31888911
// declared property getter: - (id)publicRegisteredObjects;	// 0x318d3581
- (int)readWriteCalendarCountForEntityType:(unsigned)entityType;	// 0x3188a29d
- (id)readWriteCalendarsForEntityType:(unsigned)entityType;	// 0x318cc4f1
- (void)refreshSourcesIfNecessary;	// 0x318d0659
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x31894ff9
- (id)registerFetchedObjectWithID:(id)anId;	// 0x3188758d
- (id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;	// 0x318863f1
// declared property getter: - (id)registeredObjects;	// 0x318d3561
// declared property getter: - (id)registeredQueue;	// 0x318d370d
- (oneway void)release;	// 0x3188a1c1
- (id)reminderWithExternalURI:(id)externalURI;	// 0x318ce5b1
- (id)remindersMatchingPredicate:(id)predicate;	// 0x318944a5
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x318cc7b9
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x318cc6c5
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x318cd149
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x318cd121
- (BOOL)removeInviteReplyNotification:(id)notification error:(id *)error;	// 0x318d0011
- (BOOL)removeInviteReplyNotifications:(id)notifications error:(id *)error;	// 0x318d004d
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x318ce4d9
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x318ce4b9
- (BOOL)removeResourceChange:(id)change error:(id *)error;	// 0x318cfc11
- (BOOL)removeResourceChanges:(id)changes error:(id *)error;	// 0x318cfc4d
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x318cbce5
- (void)requestAccessToEntityType:(unsigned)entityType completion:(id)completion;	// 0x318ca499
- (void)reset;	// 0x318d1739
- (id)resourceChangesForEntityTypes:(unsigned)entityTypes;	// 0x318901b5
- (void)rollback;	// 0x318d1439
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x318cc6e5
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x318cc6a5
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x3189c025
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x3189bffd
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x318ce3e5
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x318ce3c5
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x318cbc3d
- (int)sequenceNumber;	// 0x318ca5a9
- (unsigned)serverPort;	// 0x31885d25
// declared property setter: - (void)setCalendarQueue:(id)queue;	// 0x318d36fd
// declared property setter: - (void)setDatabase:(id)database;	// 0x318d3631
// declared property setter: - (void)setDbChangedQueue:(id)queue;	// 0x318d375d
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x318d3451
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x318ce0bd
// converted property setter: - (void)setDefaultCalendarForNewReminders:(id)newReminders;	// 0x318ce2b9
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x318d340d
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x318d35d1
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x318d367d
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x318d35b1
- (BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id *)error;	// 0x318cd21d
- (BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id *)error;	// 0x318cd341
// declared property setter: - (void)setLastDatabaseNotificationTimestamp:(double)timestamp;	// 0x318d3659
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x318d36dd
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x318d3591
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x318d3571
// declared property setter: - (void)setRegisteredQueue:(id)queue;	// 0x318d371d
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x31885949
// declared property setter: - (void)setUnsavedChangesQueue:(id)queue;	// 0x318d373d
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x318d35f1
// declared property setter: - (void)set_cachedValidatedEmails:(id)emails;	// 0x318d377d
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x318d369d
// declared property setter: - (void)set_defaultCalendarForNewEvents:(id)newEvents;	// 0x3188a781
// declared property setter: - (void)set_defaultCalendarForNewReminders:(id)newReminders;	// 0x31893599
// declared property setter: - (void)set_sources:(id)sources;	// 0x318d36bd
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;	// 0x31889ed9
- (id)sourceWithIdentifier:(id)identifier;	// 0x318891b1
// converted property getter: - (id)sources;	// 0x3188929d
// declared property getter: - (id)timeZone;	// 0x3188a795
- (int)unacknowledgedEventCount;	// 0x318cf9b9
// declared property getter: - (id)unsavedChangesQueue;	// 0x318d372d
// declared property getter: - (id)updatedObjects;	// 0x318d35e1
@end

