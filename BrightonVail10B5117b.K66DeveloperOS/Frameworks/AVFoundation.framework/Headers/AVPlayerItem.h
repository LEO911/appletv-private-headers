/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSDate, NSArray, AVPlayerItemInternal, NSString, NSError;

@interface AVPlayerItem : NSObject <NSCopying> {
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x30265d6d; S=0x30265e21; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x30265ed5; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x30265fe9; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x302661a1; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x3026608d; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x302660fd; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x30265f45; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x30261181; S=0x3026132d; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x30265a8d; 
@property(retain) id audioMix;	// G=0x3026208d; S=0x302622e1; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x30265a71; 
@property(assign) double bufferingTargetMaximum;	// G=0x30260d99; S=0x30260f2d; converted property
@property(assign) double bufferingTargetMinimum;	// G=0x30260f51; S=0x302610e5; converted property
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x30266e41; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x30265ae5; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x30261e09; S=0x30261fb5; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x30261af1; S=0x30261c9d; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x30266dfd; S=0x30266d65; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x30266f59; S=0x30266ed5; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x3025d731; 
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x30260275; S=0x30260451; converted property
@property(retain) id gaplessInfo;	// G=0x30263a9d; S=0x30263e59; converted property
@property(retain) id initialDate;	// G=0x3025ff2d; S=0x3025ff71; converted property
@property(retain) id initialEstimatedDate;	// G=0x30260051; S=0x30260095; converted property
@property(assign) BOOL limitReadAhead;	// G=0x30260afd; S=0x30260ca5; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x30264f65; S=0x30264f85; converted property
@property(readonly, assign, nonatomic) NSArray *outputs;	// G=0x302676f5; 
@property(assign) int playbackLikelyToKeepUpTrigger;	// G=0x302614c5; S=0x3026166d; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x3026066d; S=0x30260849; converted property
@property(assign) BOOL seekingWaitsForVideoCompositionRendering;	// G=0x302629d5; S=0x30262a75; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x30264041; S=0x30263fa1; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x3025d711; 
@property(retain) id textStyleRules;	// G=0x30262b05; S=0x30262bcd; converted property
@property(retain) id variableSpeedAudioProcessor;	// G=0x30262d59; S=0x30262e4d; converted property
@property(retain) id videoComposition;	// G=0x302623a5; S=0x302623e9; converted property
@property(assign) float volumeAdjustment;	// G=0x30264175; S=0x302640d5; converted property
@property(assign) BOOL willNeverSeekBackwardsHint;	// G=0x302617d9; S=0x30261985; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x3025a87d
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x3025a869
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x30265b3d
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x30265d09
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x30261401
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x30265a51
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x302623a1
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;	// 0x30260f31
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;	// 0x302610e9
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x30262089
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x30261d71
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x30260569
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x30263f2d
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x30260d79
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x30265a65
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x30265051
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x30265a59
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x30265a5d
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x30265a55
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;	// 0x30261741
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x30265a69
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x30260961
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x30265a61
+ (BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;	// 0x30262b01
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x30264061
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x30265a4d
+ (BOOL)automaticallyNotifiesObserversOfTextStyleRules;	// 0x30262c8d
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x30265a6d
+ (BOOL)automaticallyNotifiesObserversOfVariableSpeedAudioProcessor;	// 0x30262fb5
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x30262681
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x30264195
+ (BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;	// 0x30261a59
+ (void)initialize;	// 0x3025a801
+ (id)playerItemWithAsset:(id)asset;	// 0x3025a8d9
+ (id)playerItemWithURL:(id)url;	// 0x3025a891
- (id)init;	// 0x3025ab9d
- (id)initWithAsset:(id)asset;	// 0x3025ae1d
- (id)initWithURL:(id)url;	// 0x3025ad15
- (int)_CreateSeekID;	// 0x3025f47d
- (id)_URL;	// 0x3025d2d5
- (void)_addFPListeners;	// 0x3025e1e5
- (void)_addSyncLayer:(id)layer;	// 0x30265459
- (BOOL)_alwaysMonitorsPlayability;	// 0x302610ed
- (void)_applyAudioMix;	// 0x302620d1
- (void)_applyInitialAudioMix;	// 0x3026228d
- (void)_applyMediaSelectionOptions;	// 0x3026467d
- (void)_applySeekingWaitsForVideoCompositionRendering;	// 0x302629f5
- (void)_applyTextStyleRules;	// 0x30262b49
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x30264455
- (void)_attachOutputs;	// 0x30267309
- (void)_attachToFigPlayer;	// 0x3025c889
- (void)_attachToPlayer:(id)player;	// 0x3025c75d
- (long long)_availableFileSize;	// 0x30266cd9
- (double)_bufferingTargetMaximum;	// 0x30260d81
- (double)_bufferingTargetMinimum;	// 0x30260f39
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30264829
- (id)_cachedValueForKey:(id)key;	// 0x3025ba6d
- (BOOL)_canPlayFastForward;	// 0x3025ea85
- (BOOL)_canPlayFastReverse;	// 0x3025ebd9
- (BOOL)_canPlayReverse;	// 0x3025ed85
- (BOOL)_canPlaySlowForward;	// 0x3025ee79
- (BOOL)_canPlaySlowReverse;	// 0x3025ef6d
- (BOOL)_canStepBackward;	// 0x3025f159
- (BOOL)_canStepForward;	// 0x3025f061
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x3025f4d9
- (void)_changeStatusToFailedWithError:(id)error;	// 0x3025d775
- (void)_configurePlaybackItem;	// 0x3025bd25
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x30261d75
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x30261a5d
- (OpaqueCMTimebase *)_copyTimebase;	// 0x30260965
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x3025c6c5
- (void)_createPlayerItemInternal;	// 0x3025a921
- (void)_dequeueFromPlayer;	// 0x3025d1a1
- (void)_detachOutputs;	// 0x30267409
- (void)_didAccessKVOForKey:(id)key;	// 0x3025bac5
- (XXStruct_pwHToB)_duration;	// 0x3025d93d
- (void)_enqueueWithPlayer:(id)player shouldAppendItem:(BOOL)item;	// 0x3025d0d1
- (void)_evaluateSuppression;	// 0x30265925
- (void)_evaluateVisualContexts;	// 0x302670a9
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x30265055
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x3025ba2d
- (long long)_fileSize;	// 0x30266c4d
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x30260175
- (id)_fpNotificationNames;	// 0x3025df7d
- (BOOL)_hasEnabledVideoMedia;	// 0x30265715
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x3025d669
- (void)_insertAfterItem:(id)item;	// 0x3025d205
- (void)_invokeReadyForEnqueueingHandlers;	// 0x3025e619
- (BOOL)_isAFileBasedItemThatsReadyToPlay;	// 0x3025ed2d
- (BOOL)_isCurrentPlayerItem;	// 0x3025c519
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x30265d6d
// declared property getter: - (BOOL)_isRental;	// 0x30265ed5
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x3026608d
- (void)_kickAssetObserversIfAppropriate;	// 0x3025d5cd
- (BOOL)_limitReadAhead;	// 0x30260a69
- (id)_loadedTimeRanges;	// 0x3026371d
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x3025d43d
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x3025e76d
- (id)_nextItem;	// 0x3025d1c5
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x302656b1
- (int)_playbackLikelyToKeepUpTrigger;	// 0x30261405
- (id)_playbackProperties;	// 0x30263ae1
- (id)_player;	// 0x3025c4ed
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x3025d1b5
- (id)_playerConnection;	// 0x3025c64d
- (CGSize)_presentationSize;	// 0x3025f24d
- (id)_previousItem;	// 0x3025d1e5
- (id)_propertyStorage;	// 0x3025ba4d
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x3026125d
- (void)_quietlySetBufferingTargetMaximum:(double)maximum;	// 0x30260e75
- (void)_quietlySetBufferingTargetMinimum:(double)minimum;	// 0x3026102d
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x30261ee5
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x30261bcd
- (void)_quietlySetEQPreset:(int)preset;	// 0x30266b7d
- (void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)algorithm;	// 0x30262dfd
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3026038d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x30260bd9
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x302615a1
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x30263b85
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30260785
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x30263f31
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x30264065
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)_quietlySet;	// 0x302618b5
- (void)_removeFPListeners;	// 0x3025e3e1
- (void)_removeFromItems;	// 0x3025d26d
- (void)_removeSyncLayer:(id)layer;	// 0x3026524d
- (void)_renderingSuppressionDidChangeForOutput:(id)_renderingSuppression;	// 0x302659fd
// declared property getter: - (id)_rentalExpirationDate;	// 0x30265fe9
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x302661a1
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x302660fd
// declared property getter: - (id)_rentalStartDate;	// 0x30265f45
- (void)_respondToBecomingReadyForBasicInspection;	// 0x3025e52d
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x3026056d
- (id)_seekableTimeRanges;	// 0x3026339d
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30264b1d
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30264ba1
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30264c25
- (void)_selectMediaOption:(id)option usingFigSelectedMediaArrayObtainedFromGroup:(id)group;	// 0x302648fd
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x30264365
- (void)_setAsset:(id)asset;	// 0x3025d335
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x3025d4f5
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3025d38d
- (void)_setAudibleDRMInfo:(id)info;	// 0x30266add
- (void)_setEQPreset:(int)preset;	// 0x30266bed
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x302642f1
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x30265e21
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x3025c539
- (void)_setPlayerConnection:(id)connection;	// 0x3025c66d
- (void)_setRampInOutInfo:(id)outInfo;	// 0x30266a3d
- (void)_setSyncLayersOnFigPlaybackItem:(id)item;	// 0x302651dd
- (void)_setTimebaseOnOutputs:(OpaqueCMTimebase *)outputs;	// 0x30267239
- (void)_setTimedMetadata:(id)metadata;	// 0x3026516d
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3025d3e5
- (void)_setURL:(id)url;	// 0x3025d2f5
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x30262685
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x3026280d
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x30262791
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x30262721
- (void)_setVideoCompositor:(id)compositor;	// 0x302628c9
- (id)_stateDispatchQueue;	// 0x3025ba0d
- (BOOL)_suppressionForOutputs:(id)outputs;	// 0x30265861
- (id)_trackWithTrackID:(int)trackID;	// 0x3025de95
- (id)_tracks;	// 0x3025db39
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)seekID finished:(BOOL)finished;	// 0x3025f6b1
- (void)_updateTimebase;	// 0x302609dd
- (id)_variableSpeedAudioProcessor;	// 0x30262c91
- (id)_weakReference;	// 0x3025b9ed
- (void)_willAccessKVOForKey:(id)key;	// 0x3025ba99
- (BOOL)_willNeverSeekBackwardsHint;	// 0x30261745
- (id)accessLog;	// 0x30266245
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x3025bbb1
- (void)addOutput:(id)output;	// 0x302674e9
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x30261181
- (id)asset;	// 0x3025d8f9
// converted property getter: - (id)audioMix;	// 0x3026208d
// converted property getter: - (double)bufferingTargetMaximum;	// 0x30260d99
// converted property getter: - (double)bufferingTargetMinimum;	// 0x30260f51
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x30266e41
- (BOOL)canPlayFastForward;	// 0x3025eafd
- (BOOL)canPlayFastReverse;	// 0x3025ec51
- (BOOL)canPlayReverse;	// 0x3025ed9d
- (BOOL)canPlaySlowForward;	// 0x3025ee91
- (BOOL)canPlaySlowReverse;	// 0x3025ef85
- (BOOL)canStepBackward;	// 0x3025f171
- (BOOL)canStepForward;	// 0x3025f07d
- (void)cancelPendingSeeks;	// 0x3025fdb9
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x30261e09
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x30261af1
- (id)copyWithZone:(NSZone *)zone;	// 0x3025b471
- (id)currentDate;	// 0x3025fdcd
- (id)currentEstimatedDate;	// 0x3025ffc9
- (XXStruct_pwHToB)currentTime;	// 0x3025f3d5
// declared property getter: - (id)dataYouTubeID;	// 0x30266dfd
- (void)dealloc;	// 0x3025af51
- (id)description;	// 0x3025b881
- (void)didChangeValueForKey:(id)key;	// 0x3025bb51
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x30266f79
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x30266f59
- (XXStruct_pwHToB)duration;	// 0x3025d9f5
// declared property getter: - (id)error;	// 0x3025d731
- (id)errorLog;	// 0x3026630d
- (void)finalize;	// 0x3025b30d
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x30260275
// converted property getter: - (id)gaplessInfo;	// 0x30263a9d
// converted property getter: - (id)initialDate;	// 0x3025ff2d
// converted property getter: - (id)initialEstimatedDate;	// 0x30260051
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x30265a8d
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x30265a71
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x30265ae5
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x30264f65
- (BOOL)isPlaybackBufferEmpty;	// 0x302631a9
- (BOOL)isPlaybackBufferFull;	// 0x302630b1
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x30262fb9
// converted property getter: - (BOOL)limitReadAhead;	// 0x30260afd
- (id)loadedTimeRanges;	// 0x30263a05
// declared property getter: - (id)outputs;	// 0x302676f5
- (id)playabilityMetrics;	// 0x30263319
// converted property getter: - (int)playbackLikelyToKeepUpTrigger;	// 0x302614c5
- (CGSize)presentationSize;	// 0x3025f2d9
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x302632a1
- (void)removeOutput:(id)output;	// 0x30267601
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x3026066d
- (BOOL)seekToDate:(id)date;	// 0x3025ff15
- (BOOL)seekToDate:(id)date completionHandler:(id)handler;	// 0x3025fe55
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x3025f765
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x3025f821
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x3025f79d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x3025f899
- (id)seekableTimeRanges;	// 0x30263685
// converted property getter: - (BOOL)seekingWaitsForVideoCompositionRendering;	// 0x302629d5
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30264ce9
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x3026457d
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30264d0d
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x30264199
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x3026132d
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x302622e1
// converted property setter: - (void)setBufferingTargetMaximum:(double)maximum;	// 0x30260f2d
// converted property setter: - (void)setBufferingTargetMinimum:(double)minimum;	// 0x302610e5
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x30261fb5
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x30261c9d
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x30266d65
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x30266ed5
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30260451
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x30263e59
// converted property setter: - (void)setInitialDate:(id)date;	// 0x3025ff71
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x30260095
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x30260ca5
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x30264f85
// converted property setter: - (void)setPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x3026166d
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30260849
// converted property setter: - (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)videoCompositionRendering;	// 0x30262a75
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x30263fa1
// converted property setter: - (void)setTextStyleRules:(id)rules;	// 0x30262bcd
// converted property setter: - (void)setVariableSpeedAudioProcessor:(id)processor;	// 0x30262e4d
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x302623e9
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x302640d5
// converted property setter: - (void)setWillNeverSeekBackwardsHint:(BOOL)neverSeekBackwardsHint;	// 0x30261985
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x30264041
// declared property getter: - (int)status;	// 0x3025d711
- (void)stepByCount:(int)count;	// 0x302600ed
// converted property getter: - (id)textStyleRules;	// 0x30262b05
- (OpaqueCMTimebase *)timebase;	// 0x302609bd
- (id)timedMetadata;	// 0x30265129
- (id)tracks;	// 0x3025dddd
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x3025b965
// converted property getter: - (id)variableSpeedAudioProcessor;	// 0x30262d59
// converted property getter: - (id)videoComposition;	// 0x302623a5
// converted property getter: - (float)volumeAdjustment;	// 0x30264175
- (void)willChangeValueForKey:(id)key;	// 0x3025baf1
// converted property getter: - (BOOL)willNeverSeekBackwardsHint;	// 0x302617d9
@end

