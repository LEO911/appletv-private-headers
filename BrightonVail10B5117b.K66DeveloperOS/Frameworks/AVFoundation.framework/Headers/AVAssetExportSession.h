/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, AVAudioMix, NSURL, NSArray, AVVideoComposition, NSString, NSError, AVAssetExportSessionInternal;

@interface AVAssetExportSession : NSObject {
	AVAssetExportSessionInternal *_exportSession;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x3028a745; 
@property(copy, nonatomic) AVAudioMix *audioMix;	// G=0x3028c0f5; S=0x3028c115; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x3028b35d; 
@property(readonly, assign, nonatomic) long long estimatedOutputFileLength;	// G=0x3028bf01; 
@property(assign, nonatomic) long long fileLengthLimit;	// G=0x3028c051; S=0x3028c075; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB maxDuration;	// G=0x3028be85; 
@property(copy, nonatomic) NSArray *metadata;	// G=0x3028bf85; S=0x3028bfa5; 
@property(copy, nonatomic) NSString *outputFileType;	// G=0x3028aee9; S=0x3028af09; 
@property(copy, nonatomic) NSURL *outputURL;	// G=0x3028b0d9; S=0x3028b0f9; 
@property(readonly, assign, nonatomic) NSString *presetName;	// G=0x3028a765; 
@property(readonly, assign, nonatomic) float progress;	// G=0x3028b5e5; 
@property(assign, nonatomic) BOOL shouldOptimizeForNetworkUse;	// G=0x3028c3b5; S=0x3028c3d5; 
@property(readonly, assign, nonatomic) int status;	// G=0x3028b1dd; 
@property(readonly, assign, nonatomic) NSArray *supportedFileTypes;	// G=0x3028a9c1; 
@property(assign, nonatomic) XXStruct_yD8eWC timeRange;	// G=0x3028bd5d; S=0x3028bdb9; 
@property(assign) BOOL usesHardwareVideoEncoderIfAvailable;	// G=0x3028c451; S=0x3028c471; converted property
@property(copy, nonatomic) AVVideoComposition *videoComposition;	// G=0x3028c1c1; S=0x3028c1e1; 
+ (id)_audioOnlyPresets;	// 0x3028c4ed
+ (id)_audioVideoPresets;	// 0x3028c581
+ (BOOL)_canWriteMediaOfAsset:(id)asset toFileType:(id)fileType;	// 0x30289d6d
+ (long long)_estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x3028dd01
+ (id)_figRemakerNotificationNames;	// 0x3028d845
+ (int)_getPassthroughExportPolicyForAssetTrack:(id)assetTrack fileType:(id)type asChapterTrack:(BOOL)track;	// 0x3028a785
+ (BOOL)_isCompositionWithMultipleNonEmptyEdits:(id)multipleNonEmptyEdits;	// 0x3028a8ad
+ (BOOL)_isExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x3028d03d
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x3028cfe1
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAssetContainingPlayableAudio:(BOOL)assetContainingPlayableAudio playableVideo:(BOOL)video outputFileType:(id)type;	// 0x3028ce29
+ (BOOL)_isPassthroughExportPresetCompatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x3028cb3d
+ (BOOL)_isPassthroughSupportedForAsset:(id)asset;	// 0x30289d3d
+ (XXStruct_pwHToB)_maximumDurationForPreset:(id)preset fileSizeBytesLimit:(long long)limit properties:(id)properties;	// 0x3028d8e5
+ (id)_settingForPreset:(id)preset;	// 0x3028d0a5
+ (id)_utTypesForAudioOnly;	// 0x3028ca59
+ (id)_utTypesForDefaultPassthroughPreset;	// 0x3028c91d
+ (id)_utTypesForPresets;	// 0x3028c655
+ (id)allExportPresets;	// 0x30289a19
+ (void)determineCompatibilityOfExportPreset:(id)exportPreset withAsset:(id)asset outputFileType:(id)type completionHandler:(id)handler;	// 0x30289e89
+ (long long)estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x3028a0c5
+ (id)exportPresetsCompatibleWithAsset:(id)asset;	// 0x30289c05
+ (id)exportSessionWithAsset:(id)asset presetName:(id)name;	// 0x30289ff9
+ (XXStruct_pwHToB)maximumDurationForPreset:(id)preset properties:(id)properties;	// 0x3028a045
- (id)init;	// 0x3028a109
- (id)initWithAsset:(id)asset presetName:(id)name;	// 0x3028a11d
- (id)_actualPresetName;	// 0x3028e1b1
- (id)_actualSettingForPreset:(id)preset;	// 0x3028d0e9
- (void)_addListeners;	// 0x3028e855
- (BOOL)_canPassThroughAudio:(id)audio checkEnabled:(BOOL)enabled checkProtected:(BOOL)aProtected;	// 0x3028f081
- (BOOL)_canPassThroughVideo:(id)video checkEnabled:(BOOL)enabled checkAll:(BOOL)all checkProtected:(BOOL)aProtected;	// 0x3028fd01
- (OpaqueFigRemaker *)_createFigRemaker;	// 0x30290979
- (id)_determineCompatibleFileTypes;	// 0x3028aa31
- (CGSize)_getSourceDimension;	// 0x3028e9ad
- (int)_getTrackCountOfType:(id)type checkEnabled:(BOOL)enabled;	// 0x3028ebd1
- (void)_handleFigRemakerNotification:(id)notification payload:(id)payload;	// 0x3028df2d
- (void)_handleFigRemakerNotificationAsync:(id)async payload:(id)payload;	// 0x3028e0d9
- (BOOL)_hasProtectedNonAudioVideoTracks;	// 0x3028ed05
- (BOOL)_isAudioMixdownRequired:(CFStringRef)required error:(id *)error;	// 0x30290941
- (void)_removeListeners;	// 0x3028e69d
- (id)_retrieveChannelSpecificAudioSettingForAudioTrack:(id)audioTrack fromAudioSetting:(id)audioSetting;	// 0x3028fa29
- (id)_settingForFigRemaker;	// 0x3028fb95
- (BOOL)_totalSizeOfTracksIsWithinFileLengthLimit:(id)tracksIsWithinFileLengthLimit forSetting:(id)setting;	// 0x3028eee5
- (void)_transitionToStatus:(int)status error:(id)error;	// 0x3028e1e5
- (void)_updateProgress;	// 0x3028b53d
- (BOOL)_validateSettablePropertiesReturningError:(id *)error;	// 0x3028b785
// declared property getter: - (id)asset;	// 0x3028a745
// declared property getter: - (id)audioMix;	// 0x3028c0f5
- (void)cancelExport;	// 0x3028bd49
- (void)dealloc;	// 0x3028a3c9
- (id)description;	// 0x3028a6a1
- (void)determineCompatibleFileTypesWithCompletionHandler:(id)completionHandler;	// 0x3028adcd
// declared property getter: - (id)error;	// 0x3028b35d
// declared property getter: - (long long)estimatedOutputFileLength;	// 0x3028bf01
- (void)exportAsynchronouslyWithCompletionHandler:(id)completionHandler;	// 0x3028b9a5
// declared property getter: - (long long)fileLengthLimit;	// 0x3028c051
- (void)finalize;	// 0x3028a5c1
// declared property getter: - (XXStruct_pwHToB)maxDuration;	// 0x3028be85
// declared property getter: - (id)metadata;	// 0x3028bf85
// declared property getter: - (id)outputFileType;	// 0x3028aee9
// declared property getter: - (id)outputURL;	// 0x3028b0d9
// declared property getter: - (id)presetName;	// 0x3028a765
// declared property getter: - (float)progress;	// 0x3028b5e5
// declared property setter: - (void)setAudioMix:(id)mix;	// 0x3028c115
// declared property setter: - (void)setFileLengthLimit:(long long)limit;	// 0x3028c075
// declared property setter: - (void)setMetadata:(id)metadata;	// 0x3028bfa5
// declared property setter: - (void)setOutputFileType:(id)type;	// 0x3028af09
// declared property setter: - (void)setOutputURL:(id)url;	// 0x3028b0f9
// declared property setter: - (void)setShouldOptimizeForNetworkUse:(BOOL)optimizeForNetworkUse;	// 0x3028c3d5
// declared property setter: - (void)setTimeRange:(XXStruct_yD8eWC)range;	// 0x3028bdb9
// converted property setter: - (void)setUsesHardwareVideoEncoderIfAvailable:(BOOL)available;	// 0x3028c471
// declared property setter: - (void)setVideoComposition:(id)composition;	// 0x3028c1e1
// declared property getter: - (BOOL)shouldOptimizeForNetworkUse;	// 0x3028c3b5
// declared property getter: - (int)status;	// 0x3028b1dd
// declared property getter: - (id)supportedFileTypes;	// 0x3028a9c1
// declared property getter: - (XXStruct_yD8eWC)timeRange;	// 0x3028bd5d
// converted property getter: - (BOOL)usesHardwareVideoEncoderIfAvailable;	// 0x3028c451
// declared property getter: - (id)videoComposition;	// 0x3028c1c1
@end

