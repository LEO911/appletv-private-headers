/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "AVAssetInspectorLoader.h"

@class NSURL, NSDictionary, AVAssetCache, AVAssetInspector, NSMutableArray;
@protocol OS_dispatch_queue;

@interface AVFigAssetInspectorLoader : AVAssetInspectorLoader {
	OpaqueFigAsset *_figAsset;	// 8 = 0x8
	OpaqueFigFormatReader *_formatReader;	// 12 = 0xc
	BOOL _formatReaderObtained;	// 16 = 0x10
	long _figAssetCreationStatus;	// 20 = 0x14
	NSObject<OS_dispatch_queue> *_completionHandlerQueue;	// 24 = 0x18
	OpaqueFigSimpleMutex *_loadingMutex;	// 28 = 0x1c
	OpaqueFigSemaphore *_playabilityValidationSemaphore;	// 32 = 0x20
	int _playableStatus;	// 36 = 0x24
	long _playableResult;	// 40 = 0x28
	BOOL _playable;	// 44 = 0x2c
	OpaqueFigSemaphore *_cameraRollValidationSemaphor;	// 48 = 0x30
	int _compatibleWithSavedPhotosAlbumStatus;	// 52 = 0x34
	long _compatibleWithSavedPhotosAlbumResult;	// 56 = 0x38
	BOOL _compatibleWithSavedPhotosAlbum;	// 60 = 0x3c
	NSMutableArray *_loadingBatches;	// 64 = 0x40
	BOOL _loadingCanceled;	// 68 = 0x44
	AVAssetInspector *_assetInspector;	// 72 = 0x48
	AVAssetCache *_assetCache;	// 76 = 0x4c
	BOOL _shouldMatchDataInCacheByURLPathComponentOnly;	// 80 = 0x50
	BOOL _shouldMatchDataInCacheByURLWithoutQueryComponent;	// 81 = 0x51
	NSURL *_downloadDestinationURL;	// 84 = 0x54
	NSDictionary *_validationPlist;	// 88 = 0x58
	unsigned _referenceRestrictions;	// 92 = 0x5c
	NSURL *_URL;	// 96 = 0x60
	BOOL _shouldOptimizeAccessForLinearMoviePlayback;	// 100 = 0x64
}
@property(readonly, retain) NSURL *URL;	// G=0x302c3fb5; converted property
@property(readonly, retain) AVAssetCache *assetCache;	// G=0x302c40c1; converted property
@property(readonly, retain) AVAssetInspector *assetInspector;	// G=0x302c2a85; converted property
@property(readonly, assign, getter=isCompatibleWithSavedPhotosAlbum) BOOL compatibleWithSavedPhotosAlbum;	// G=0x302c3e09; converted property
@property(readonly, retain) NSURL *downloadDestinationURL;	// G=0x302c40f1; converted property
@property(readonly, assign, getter=isPlayable) BOOL playable;	// G=0x302c3aa5; converted property
@property(readonly, assign) unsigned referenceRestrictions;	// G=0x302c40b1; converted property
@property(readonly, assign) BOOL shouldMatchDataInCacheByURLPathComponentOnly;	// G=0x302c40d1; converted property
@property(readonly, assign) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;	// G=0x302c40e1; converted property
@property(readonly, assign, nonatomic) NSDictionary *validationPlist;	// G=0x302c4101; @synthesize=_validationPlist
+ (id)_figAssetPropertiesForKeys;	// 0x302c12c5
+ (id)_figAssetTrackPropertiesForKeys;	// 0x302c12f1
- (id)initWithURL:(id)url options:(id)options;	// 0x302c131d
// converted property getter: - (id)URL;	// 0x302c3fb5
- (void)_addFigAssetNotifications;	// 0x302c1cdd
- (OpaqueFigSemaphore *)_cameraRollValidationSemaphor;	// 0x302c2b39
- (id)_completionHandlerQueue;	// 0x302c2af9
- (void)_ensureAllDependenciesOfKeyAreLoaded:(id)keyAreLoaded;	// 0x302c3925
- (OpaqueFigAsset *)_figAsset;	// 0x302c2ae9
- (OpaqueFigFormatReader *)_formatReader;	// 0x302c29f9
- (id)_initWithDownloadToken:(unsigned long long)downloadToken;	// 0x302c1c25
- (id)_initWithFigAsset:(OpaqueFigAsset *)figAsset options:(id)options;	// 0x302c1b05
- (BOOL)_isStreaming;	// 0x302c403d
- (int)_loadStatusForProperty:(id)property returningError:(int *)error;	// 0x302c2b49
- (id)_loadingBatches;	// 0x302c2b19
- (OpaqueFigSimpleMutex *)_loadingMutex;	// 0x302c2b09
- (OpaqueFigSemaphore *)_playabilityValidationSemaphore;	// 0x302c2b29
- (void)_removeFigAssetNotifications;	// 0x302c2699
- (BOOL)_shouldOptimizeAccessForLinearMoviePlayback;	// 0x302c4111
// converted property getter: - (id)assetCache;	// 0x302c40c1
// converted property getter: - (id)assetInspector;	// 0x302c2a85
- (void)cancelLoading;	// 0x302c37d1
- (id)chapterGroupInfo;	// 0x302c3f8d
- (void)dealloc;	// 0x302c2789
// converted property getter: - (id)downloadDestinationURL;	// 0x302c40f1
- (unsigned long long)downloadToken;	// 0x302c3fed
- (XXStruct_pwHToB)duration;	// 0x302c39f9
- (void)finalize;	// 0x302c28a5
- (BOOL)hasProtectedContent;	// 0x302c4015
- (unsigned)hash;	// 0x302c29b1
// converted property getter: - (BOOL)isCompatibleWithSavedPhotosAlbum;	// 0x302c3e09
- (BOOL)isComposable;	// 0x302c3d4d
- (BOOL)isEqual:(id)equal;	// 0x302c293d
- (BOOL)isExportable;	// 0x302c3c55
// converted property getter: - (BOOL)isPlayable;	// 0x302c3aa5
- (BOOL)isReadable;	// 0x302c3cd1
- (void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id)handler;	// 0x302c2e39
- (void)loadValuesAsynchronouslyForKeys:(id)keys keysForCollectionKeys:(id)collectionKeys completionHandler:(id)handler;	// 0x302c2e59
- (id)lyrics;	// 0x302c3a3d
// converted property getter: - (unsigned)referenceRestrictions;	// 0x302c40b1
- (id)resolvedURL;	// 0x302c3fc5
- (void)setIsCompatibleWithSavedPhotosAlbum:(BOOL)savedPhotosAlbum result:(long)result;	// 0x302c3dc9
- (void)setIsPlayable:(BOOL)playable result:(long)result;	// 0x302c3a65
// converted property getter: - (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;	// 0x302c40d1
// converted property getter: - (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;	// 0x302c40e1
- (int)statusOfValueForKey:(id)key error:(id *)error;	// 0x302c2be9
// declared property getter: - (id)validationPlist;	// 0x302c4101
@end

