/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"
#import <DOMNode.h> // Unknown library

@class UIResponder, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x32ec7011
- (id)createPickerCell;	// 0x32ec7019
- (id)createSelectedItem;	// 0x32ec7015
- (id)itemTitle;	// 0x32ec7021
- (void)populateCell:(id)cell;	// 0x32ec701d
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x32ede891
- (id)urlScheme;	// 0x32ede8e9
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x32eeb949
- (BOOL)isSecure;	// 0x32eeba59
- (BOOL)isTextControl;	// 0x32eeba55
- (int)keyboardType;	// 0x32eeba5d
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x32eed695; S=0x32eed699; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x32eed8c1; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x32eed071; S=0x32eed075; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32eed8f9; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x32eed089; S=0x32eed08d; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x32eee3a9; S=0x32eee401; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x32eed5e5; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x32eec2e9; S=0x32eebf7d; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32eedfb5; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x32eee541; S=0x32eee545; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x32eed081; S=0x32eed085; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x32eed6f5; S=0x32eed84d; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x32eee94d; S=0x32eee9a5; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x32eecdb5; S=0x32eecd21; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x32eed079; S=0x32eed07d; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x32eed069; S=0x32eed06d; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x32eebcd1; S=0x32eebcd5; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x32eee3a5; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x32eedcc5
- (NSRange)_markedTextNSRange;	// 0x32eec865
- (id)_textSelectingContainer;	// 0x32eed69d
- (void)acceptedAutoFillWord:(id)word;	// 0x32eed531
- (id)automaticallySelectedOverlay;	// 0x32eed091
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x32eee759
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x32eed695
- (void)beginSelectionChange;	// 0x32eebc71
// declared property getter: - (id)beginningOfDocument;	// 0x32eed8c1
- (CGRect)caretRect;	// 0x32eecec5
- (CGRect)caretRectForPosition:(id)position;	// 0x32eee45d
- (unsigned short)characterAfterCaretSelection;	// 0x32eec50d
- (unsigned short)characterBeforeCaretSelection;	// 0x32eebf3d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x32eebef9
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x32eee609
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x32eee6ed
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32eee549
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x32eee5a9
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x32eee0cd
- (void)confirmMarkedText:(id)text;	// 0x32eec0e9
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x32eed501
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x32eecc21
- (id)content;	// 0x32eed689
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x32eed071
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x32eecfd9
- (id)delegate;	// 0x32eebc25
- (void)deleteBackward;	// 0x32eebcd9
- (BOOL)editable;	// 0x32eee945
- (BOOL)editing;	// 0x32eee949
// declared property getter: - (id)endOfDocument;	// 0x32eed8f9
- (void)endSelectionChange;	// 0x32eebca1
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x32eec7c9
- (void)extendCurrentSelection:(int)selection;	// 0x32eeca39
- (CGRect)firstRectForRange:(id)range;	// 0x32eedbad
- (id)fontForCaretSelection;	// 0x32eec551
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x32eebeb5
- (void)handleKeyWebEvent:(id)event;	// 0x32eebc2d
- (BOOL)hasContent;	// 0x32eeba8d
- (BOOL)hasSelection;	// 0x32eecac9
- (BOOL)hasText;	// 0x32eee0b5
// converted property getter: - (int)initialSelectionBehavior;	// 0x32eed089
// declared property getter: - (id)inputDelegate;	// 0x32eee3a9
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x32eebe05
- (id)insertDictationResultPlaceholder;	// 0x32eebe5d
- (void)insertText:(id)text;	// 0x32eebd4d
// declared property getter: - (id)interactionAssistant;	// 0x32eed5e5
- (BOOL)isAutoFillMode;	// 0x32eed58d
- (BOOL)isEditable;	// 0x32eed68d
- (BOOL)isEditing;	// 0x32eed691
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x32eee211
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x32eee2c5
- (BOOL)isShowingPlaceholder;	// 0x32eed065
// converted property getter: - (id)markedText;	// 0x32eec2e9
// declared property getter: - (id)markedTextRange;	// 0x32eedfb5
// declared property getter: - (id)markedTextStyle;	// 0x32eee541
- (id)metadataDictionariesForDictationResults;	// 0x32eebe35
- (void)moveBackward:(unsigned)backward;	// 0x32eecb79
- (void)moveDown;	// 0x32eedf41
- (void)moveForward:(unsigned)forward;	// 0x32eecb7d
- (void)moveLeft;	// 0x32eede59
- (void)moveRight;	// 0x32eedde5
- (void)moveUp;	// 0x32eedecd
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32eec705
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x32eee109
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x32eee1b1
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x32eee145
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x32eee259
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x32eee685
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32eec6d9
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x32eec9fd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x32eec9c1
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x32eee30d
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x32eeda1d
- (CGRect)rectContainingCaretSelection;	// 0x32eec655
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x32eec1d9
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x32eec285
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x32eebe85
- (void)replaceCurrentWordWithText:(id)text;	// 0x32eec43d
- (void)replaceRange:(id)range withText:(id)text;	// 0x32eedb65
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x32eeda69
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x32eec359
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x32eedb89
- (BOOL)requiresKeyEvents;	// 0x32eebc29
// declared property getter: - (int)returnKeyType;	// 0x32eed081
- (void)selectAll;	// 0x32eecb81
- (id)selectedDOMRange;	// 0x32eec911
// declared property getter: - (id)selectedTextRange;	// 0x32eed6f5
// declared property getter: - (int)selectionAffinity;	// 0x32eee94d
- (BOOL)selectionAtDocumentStart;	// 0x32eecb09
- (BOOL)selectionAtWordStart;	// 0x32eecb41
- (NSRange)selectionRange;	// 0x32eec8c5
- (id)selectionRectsForRange:(id)range;	// 0x32eee761
- (int)selectionState;	// 0x32eecbe1
- (id)selectionView;	// 0x32eed65d
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x32eee75d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x32eed699
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x32eed075
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x32eed08d
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x32eee401
// converted property setter: - (void)setMarkedText:(id)text;	// 0x32eebf7d
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32eec02d
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x32eee545
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x32eed085
- (void)setSecure:(BOOL)secure;	// 0x32eebc21
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x32eec949
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32eed84d
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32eed765
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x32eee9a5
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32eecea1
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x32eece05
// converted property setter: - (void)setText:(id)text;	// 0x32eecd21
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x32eed07d
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x32eed06d
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x32eebcd5
- (void)setupPlaceholderTextIfNeeded;	// 0x32eebacd
- (void)takeTraitsFrom:(id)from;	// 0x32eeba61
// converted property getter: - (id)text;	// 0x32eecdb5
- (id)textColorForCaretSelection;	// 0x32eec639
- (id)textDocument;	// 0x32eee9a9
- (id)textInRange:(id)range;	// 0x32eed931
- (id)textInputTraits;	// 0x32eebad1
// declared property getter: - (int)textLoupeVisibility;	// 0x32eed079
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32eed985
// declared property getter: - (id)textSuggestionDelegate;	// 0x32eed069
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x32eebcd1
// declared property getter: - (id)tokenizer;	// 0x32eee3a5
- (id)uiWebDocumentView;	// 0x32eebdbd
- (void)unmarkText;	// 0x32eee031
- (void)updateAutoscroll:(id)autoscroll;	// 0x32eed0d9
- (void)updateSelection;	// 0x32eed685
- (id)wordContainingCaretSelection;	// 0x32eec771
- (int)wordOffsetInRange:(id)range;	// 0x32eec829
- (id)wordRangeContainingCaretSelection;	// 0x32eec731
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x32f4fad1
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x32f4fc91
- (BOOL)alwaysAttemptToShowTapHighlight;	// 0x32f4fc35
- (BOOL)isLikelyToBeginPageLoad;	// 0x32f4fca1
- (BOOL)nodeCanBecomeFirstResponder;	// 0x32f4fca5
- (BOOL)showsTapHighlight;	// 0x32f4fc31
- (id)tapHighlightColor;	// 0x32f4fc4d
- (BOOL)touchCalloutEnabled;	// 0x32f4fc8d
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x32f7f639
- (id)asDomRange;	// 0x32f7f63d
- (id)asElement;	// 0x32f7f31d
- (CGRect)boundingRect;	// 0x32f7f965
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x32f7f9c5
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x32f7f94d
- (BOOL)containsBlock:(id)block;	// 0x32f7f489
- (BOOL)containsNode:(id)node;	// 0x32f7f289
- (BOOL)containsRange:(id)range;	// 0x32f7f71d
- (id)enclosingDocument;	// 0x32f7fa35
- (id)enclosingElementIncludingSelf;	// 0x32f7f341
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x32f7fc41
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x32f7fa45
- (BOOL)hasCustomLineHeight;	// 0x32f7f3fd
- (BOOL)isSameBlock:(id)block;	// 0x32f7f439
- (id)largerParent;	// 0x32f7f541
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x32f7fce1
- (id)parentBlock;	// 0x32f7f3a1
- (id)rangeOfContents;	// 0x32f7f825
- (BOOL)rendersAsBlock;	// 0x32f7f621
- (BOOL)selectable;	// 0x32f7f3b1
- (BOOL)strictlyContainsBlock:(id)block;	// 0x32f7f4f9
- (BOOL)strictlyContainsNode:(id)node;	// 0x32f7f2d9
- (id)webFrame;	// 0x32f7f379
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x32f90e2d; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
- (unsigned long)_characterAfterCaretSelection;	// 0x32f90f71
- (unsigned long)_characterBeforeCaretSelection;	// 0x32f90f85
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x32f90f99
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x32f91011
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x32f92111
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x32f91c81
- (void)_deleteByWord;	// 0x32f9191d
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x32f91ca9
- (void)_deleteToEndOfLine;	// 0x32f91b25
- (void)_deleteToStartOfLine;	// 0x32f919c9
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x32f91711
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x32f91725
- (void)_extendCurrentSelection:(int)selection;	// 0x32f9155d
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x32f91fc9
- (id)_fontForCaretSelection;	// 0x32f92235
- (id)_fullRange;	// 0x32f91f71
- (id)_fullText;	// 0x32f91279
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x32f914f5
- (int)_indexForTextPosition:(id)textPosition;	// 0x32f90e9d
- (BOOL)_isEmptySelection;	// 0x32f91481
- (id)_keyInput;	// 0x32f90e3d
- (void)_moveCurrentSelection:(int)selection;	// 0x32f9162d
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x32f935b9
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x32f937ad
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x32f938a9
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x32f932ad
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x32f92c91
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x32f93005
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x32f929a5
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x32f931f1
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x32f92b09
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x32f92e19
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x32f92731
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x32f933c5
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x32f93f21
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x32f90ee1
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x32f94011
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32f939a9
// declared property getter: - (id)_proxyTextInput;	// 0x32f90e2d
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x32f91e7d
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x32f91ee9
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x32f91f2d
- (void)_replaceCurrentWordWithText:(id)text;	// 0x32f91e05
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x32f91e79
- (id)_selectableText;	// 0x32f94569
- (int)_selectionAffinity;	// 0x32f93a4d
- (NSRange)_selectionAsNSRange;	// 0x32f90e41
- (BOOL)_selectionAtDocumentEnd;	// 0x32f913ed
- (BOOL)_selectionAtDocumentStart;	// 0x32f9137d
- (BOOL)_selectionAtWordStart;	// 0x32f912e5
- (CGRect)_selectionClipRect;	// 0x32f9145d
- (void)_setCaretSelectionAtEndOfSelection;	// 0x32f91895
- (void)_setGestureRecognizers;	// 0x32f93b45
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32f92579
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32f93d8d
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32f939d9
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x32f92325
- (id)_textColorForCaretSelection;	// 0x32f92175
- (void)_unmarkText;	// 0x32f93ec9
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32f922f5
- (id)_wordContainingCaretSelection;	// 0x32f911e1
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x32f94751
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x32fcc0cd
- (id)_nextAssistedNode;	// 0x32fcc0d1
- (id)_previousAssistedNode;	// 0x32fcc115
- (BOOL)_requiresAccessoryView;	// 0x32fcc095
- (BOOL)_requiresInputView;	// 0x32fcc0ad
- (void)_startAssistingDocumentView:(id)view;	// 0x32fcc009
- (void)_stopAssistingDocumentView:(id)view;	// 0x32fcc03d
- (BOOL)_supportsAccessoryClear;	// 0x32fcc0c9
- (BOOL)_supportsAutoFill;	// 0x32fcc0c5
- (id)_textFormElement;	// 0x32fcc159
@end

