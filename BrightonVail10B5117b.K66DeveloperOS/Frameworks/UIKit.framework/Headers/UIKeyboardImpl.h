/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class NSMutableArray, NSArray, NSTimer, NSMutableDictionary, UITextInputTraits, UITextInputArrowKeyHistory, UIKeyboardCandidate, UIAlertView, NSString, UIKeyboardInputManager, UIAutocorrectInlinePrompt, UIKeyboardLayout, UIDelayedAction;
@protocol UIKeyboardTypology, UIKeyInput, UITextInput, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList, UIKeyboardRecording, UIApplicationEventRecording;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 84 = 0x54
	UIView *m_languageIndicator;	// 88 = 0x58
	NSString *m_previousInputString;	// 92 = 0x5c
	UIKeyboardInputManager *m_inputManager;	// 96 = 0x60
	UIKeyboardCandidate *m_autocorrection;	// 100 = 0x64
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 104 = 0x68
	UIDelayedAction *m_autocorrectPromptAction;	// 108 = 0x6c
	NSMutableDictionary *m_autocorrectHistoryLists;	// 112 = 0x70
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 116 = 0x74
	NSArray *m_candidates;	// 120 = 0x78
	id<UIKeyboardCandidateList> m_candidateList;	// 124 = 0x7c
	UIView *m_markedTextOverlay;	// 128 = 0x80
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 132 = 0x84
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 136 = 0x88
	UIKeyboardLayout *m_layout;	// 140 = 0x8c
	NSMutableDictionary *m_keyedLayouts;	// 144 = 0x90
	NSString *m_inputModeLastChosen;	// 148 = 0x94
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 152 = 0x98
	NSTimer *m_autoDeleteTimer;	// 164 = 0xa4
	BOOL m_autoDeleteJustFired;	// 168 = 0xa8
	unsigned m_autoDeleteCount;	// 172 = 0xac
	double m_autoDeleteLastDelete;	// 176 = 0xb0
	double m_autoDeleteInterval;	// 184 = 0xb8
	unsigned long m_autoDeleteShiftCharacter;	// 192 = 0xc0
	UIDelayedAction *m_longPressAction;	// 196 = 0xc4
	int m_orientation;	// 200 = 0xc8
	int m_originalOrientation;	// 204 = 0xcc
	CGPoint m_inputPoint;	// 208 = 0xd0
	int m_changeCount;	// 216 = 0xd8
	double m_changeTime;	// 220 = 0xdc
	id m_changedDelegate;	// 228 = 0xe4
	CFRunLoopObserverRef m_observer;	// 232 = 0xe8
	unsigned m_textInputChangingCount;	// 236 = 0xec
	BOOL m_textInputChangingText;	// 240 = 0xf0
	BOOL m_textInputChangingDirection;	// 241 = 0xf1
	BOOL m_textInputChangesIgnored;	// 242 = 0xf2
	BOOL m_insideKeyInputDelegateCall;	// 243 = 0xf3
	UITextInputTraits *m_defaultTraits;	// 244 = 0xf4
	UITextInputTraits *m_traits;	// 248 = 0xf8
	int m_returnKeyState;	// 252 = 0xfc
	int m_currentDirection;	// 256 = 0x100
	int m_contextWordDepth;	// 260 = 0x104
	BOOL m_autoDeleteOK;	// 264 = 0x108
	BOOL m_autocapitalizationPreference;	// 265 = 0x109
	BOOL m_autocorrectPromptTimerFired;	// 266 = 0x10a
	BOOL m_autocorrectionPreference;	// 267 = 0x10b
	BOOL m_autoshift;	// 268 = 0x10c
	BOOL m_caretShowingNow;	// 269 = 0x10d
	BOOL m_changeNotificationDisabled;	// 270 = 0x10e
	BOOL m_correctionLearningAllowed;	// 271 = 0x10f
	BOOL m_delegateIsSMSTextView;	// 272 = 0x110
	BOOL m_delegateRequiresKeyEvents;	// 273 = 0x111
	BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;	// 274 = 0x112
	BOOL m_doubleSpacePeriodPreference;	// 275 = 0x113
	BOOL m_hardwareKeyboardAttached;	// 276 = 0x114
	BOOL m_inDealloc;	// 277 = 0x115
	BOOL m_inHardwareKeyboardMode;	// 278 = 0x116
	BOOL m_initializationDone;	// 279 = 0x117
	BOOL m_performDecomposingDelete;	// 280 = 0x118
	BOOL m_performanceLoggingEnabled;	// 281 = 0x119
	BOOL m_selecting;	// 282 = 0x11a
	BOOL m_shift;	// 283 = 0x11b
	BOOL m_shiftLocked;	// 284 = 0x11c
	BOOL m_shiftLockedEnabled;	// 285 = 0x11d
	BOOL m_settingShift;	// 286 = 0x11e
	BOOL m_shouldSkipCandidateSelection;	// 287 = 0x11f
	BOOL m_suggestionsShownForCurrentDeletion;	// 288 = 0x120
	BOOL m_originalShouldSkipCandidateSelection;	// 289 = 0x121
	BOOL m_updatingPreferences;	// 290 = 0x122
	BOOL m_changingGeometryWithSameOrientation;	// 291 = 0x123
	BOOL m_suppressGeometryChangeNotifications;	// 292 = 0x124
	BOOL m_acceptingCandidate;	// 293 = 0x125
	BOOL m_userChangedSelection;	// 294 = 0x126
	BOOL m_shouldChargeKeys;	// 295 = 0x127
	BOOL m_longPress;	// 296 = 0x128
	BOOL m_syntheticInput;	// 297 = 0x129
	BOOL m_replacingWord;	// 298 = 0x12a
	BOOL m_shiftNeedsUpdate;	// 299 = 0x12b
	BOOL m_shiftPreventAutoshift;	// 300 = 0x12c
	BOOL m_shiftHeldDownNeedsUpdated;	// 301 = 0x12d
	BOOL m_delegateAdoptsTextInput;	// 302 = 0x12e
	BOOL m_delegateAdoptsTextInputPrivate;	// 303 = 0x12f
	BOOL m_delegateAdoptsKeyboardInput;	// 304 = 0x130
	BOOL m_clientVariantSupportEnabled;	// 305 = 0x131
	BOOL m_clientVariantSupportEnabledEver;	// 306 = 0x132
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 308 = 0x134
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 312 = 0x138
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 316 = 0x13c
	BOOL m_preRotateShift;	// 320 = 0x140
	BOOL m_preRotateShiftLocked;	// 321 = 0x141
	BOOL m_showInputModeIndicator;	// 322 = 0x142
	BOOL m_suppressUpdateCandidateView;	// 323 = 0x143
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 324 = 0x144
	BOOL m_shouldSetInputModeInNextRun;	// 325 = 0x145
	BOOL m_rivenCenterFilled;	// 326 = 0x146
	float m_splitProgress;	// 328 = 0x148
	NSString *m_currentUsedInputMode;	// 332 = 0x14c
	NSString *m_lastUsedInputMode;	// 336 = 0x150
	BOOL m_needsCandidates;	// 340 = 0x154
	BOOL m_shouldSkipCandidateGeneration;	// 341 = 0x155
	BOOL m_updateLayoutOnShowKeyboard;	// 342 = 0x156
	BOOL m_receivedCandidatesInCurrentInputMode;	// 343 = 0x157
	BOOL m_markedTextChangesIgnored;	// 344 = 0x158
	int _currentAlertReason;	// 348 = 0x15c
	BOOL m_scrolling;	// 352 = 0x160
	id<UIKeyboardTypology> typologyRecorder;	// 356 = 0x164
	BOOL m_showsCandidateBar;	// 360 = 0x168
	BOOL m_showsCandidateInline;	// 361 = 0x169
	UIAlertView *keyboardAlertView;	// 364 = 0x16c
	BOOL committingCandidate;	// 368 = 0x170
	BOOL geometryIsChanging;	// 369 = 0x171
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x32db78c1; S=0x32da83a1; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x32d8325d; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x32db9149; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x32daf389; S=0x32d815ad; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x32d81579; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x32ecda11; S=0x32ecda45; converted property
@property(assign) BOOL caretBlinks;	// G=0x32ed3b25; S=0x32d84ebd; converted property
@property(assign) BOOL caretVisible;	// G=0x32db5365; S=0x32d84f41; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x32ecd075; 
@property(readonly, assign) int changeCount;	// G=0x32d82b71; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x32ecedc9; S=0x32ecedd9; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x32d82e19; S=0x32d82e29; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x32d8d39d; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x32ed3d79; S=0x32ed3d89; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x32db8789; S=0x32d81bb1; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x32d7cdd1; S=0x32d8229d; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x32ecea7d; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x32d82e79; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x32d7dcc5; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x32d82289; S=0x32d81f49; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x32ed3d99; S=0x32d924b9; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x32ecdf79; S=0x32ecdfb1; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x32d7f285; S=0x32db6591; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x32d7f079; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x32d80fa9; S=0x32d80f99; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x32ece6e1; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x32e30a01; S=0x32e30a11; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x32ed3d69; S=0x32e30de9; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x32d85129; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x32deac6d; S=0x32ed40a5; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x32ecf13d; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x32ecd28d; 
@property(assign) unsigned phraseBoundary;	// G=0x32ecfc4d; S=0x32ecfbc5; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x32d7cdad; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x32d81ba1; S=0x32e30b25; 
@property(assign) BOOL returnKeyEnabled;	// G=0x32d904c5; S=0x32d8305d; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x32ecd1fd; S=0x32ecd231; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x32d8e7ad; S=0x32ecf625; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x32ecf68d; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x32ed2cb9; S=0x32d83029; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x32ed3d49; S=0x32ed3d59; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x32d9107d; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x32deb241; S=0x32d86191; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x32dd2b71; S=0x32ed3d39; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x32d821c1; S=0x32d911cd; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x32e30389; S=0x32e2e799; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x32d91b71; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x32d80fb9; S=0x32e30b61; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x32ed401d
+ (id)activeInstance;	// 0x32c9f8ad
+ (float)additionalInstanceHeight;	// 0x32d82171
+ (float)additionalInstanceHeightLoading;	// 0x32ecca45
+ (void)applicationDidEnterBackground:(id)application;	// 0x32e301bd
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x32de2801
+ (void)applicationWillEnterForeground:(id)application;	// 0x32e31755
+ (void)applicationWillResignActive:(id)application;	// 0x32e2fe21
+ (void)applicationWillSuspend:(id)application;	// 0x32e2fe55
+ (CGSize)defaultSize;	// 0x32ecc9e9
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x32cffbcd
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x32ed3221
+ (int)interfaceOrientationForSize:(CGSize)size;	// 0x32d81fa1
+ (BOOL)isSplit;	// 0x32d85ab1
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x32d857e9
+ (void)markElapsed:(id)elapsed;	// 0x32d81ed9
+ (void)markPerformance:(id)performance;	// 0x32d7ca55
+ (id)normalizedInputModesFromPreference;	// 0x32ecca0d
+ (int)persistentDictationTargetZone;	// 0x32ecd43d
+ (CGPoint)persistentDictationWindowOffset;	// 0x32ecd639
+ (CGPoint)persistentOffset;	// 0x32d02621
+ (float)persistentSplitProgress;	// 0x32ecd2f1
+ (void)refreshRivenStateWithTraits:(id)traits isKeyboard:(BOOL)keyboard;	// 0x32d7da61
+ (void)releaseSharedInstance;	// 0x32d14f75
+ (BOOL)rivenInstalled;	// 0x32d0635d
+ (BOOL)rivenPreference;	// 0x32c8e16d
+ (BOOL)rivenTranslationPreference;	// 0x32d0531d
+ (void)setParentTestForProfiling:(id)profiling;	// 0x32ed3e41
+ (void)setPersistentDictationTargetZone:(int)zone;	// 0x32ecd485
+ (void)setPersistentDictationWindowOffset:(CGPoint)offset;	// 0x32ecd4e1
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x32dbe811
+ (void)setPersistentSplitProgress:(float)progress;	// 0x32ecd35d
+ (id)sharedInstance;	// 0x32d7c4bd
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x32cffa71
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x32d85865
+ (float)splitProgress;	// 0x32ecd34d
+ (BOOL)supportsSplit;	// 0x32d88541
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x32ecd429
- (id)initWithFrame:(CGRect)frame;	// 0x32d7c691
- (id)UILanguagePreference;	// 0x32d7dd81
- (id)_autocorrectPromptRects;	// 0x32df8d11
- (int)_clipCornersOfView:(id)view;	// 0x32ecede9
- (id)_getAutocorrection;	// 0x32ed4331
- (id)_getCurrentKeyboardName;	// 0x32ed4249
- (id)_getCurrentKeyplaneName;	// 0x32ed41e5
- (id)_getLocalizedInputMode;	// 0x32ed42ad
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x32ed3791
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x32ed38e9
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x32ed386d
- (BOOL)_hasCandidates;	// 0x32d7e9d9
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x32ed4461
- (id)_inputForAutocorrectionCandidate;	// 0x32df6025
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x32ed3ee1
- (id)_layout;	// 0x32d85845
- (BOOL)_needsCandidates;	// 0x32ed4411
- (int)_positionInCandidateList:(id)candidateList;	// 0x32ed4351
- (id)_rangeForAutocorrectionText:(id)autocorrectionText;	// 0x32df8f69
- (void)_releaseInputManager;	// 0x32ed4441
- (void)_remapKeyEvent:(GSEventRef)event;	// 0x32db66b9
- (void)_resetInputLocation;	// 0x32ed4421
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x32ed4311
- (void)_setInputManager:(id)manager;	// 0x32ed3e7d
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x32ed4401
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x32ed3e8d
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x32db8799
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x32d82259
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x32d91099
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x32d82c49
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x32d922cd
- (void)acceptAutocorrection;	// 0x32dbfe19
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x32ed0bd9
- (void)acceptCurrentCandidate;	// 0x32ed0fa9
- (void)acceptCurrentCandidateIfSelected;	// 0x32d8fa2d
- (BOOL)acceptInputString:(id)string;	// 0x32db3655
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x32df1f05
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x32ed2c8d
- (void)addInputObject:(id)object;	// 0x32ed1345
- (void)addInputString:(id)string;	// 0x32ecf93d
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x32db7a85
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x32ece2f9
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x32ed2bd1
- (void)animateAutocorrection;	// 0x32e50bb1
- (void)applicationResumedEventsOnly:(id)only;	// 0x32eccb3d
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x32eccad1
- (void)applyAutocorrection;	// 0x32e507a9
// declared property getter: - (id)arrowKeyHistory;	// 0x32db78c1
- (void)autoDeleteTimerFired:(id)fired;	// 0x32ed2e01
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x32d8325d
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x32e4cc21
// converted property getter: - (id)autocorrectPrompt;	// 0x32db9149
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x32daf389
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x32e51691
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x32d81579
- (BOOL)autocorrectionPreferenceForTraits;	// 0x32d81505
- (id)autocorrectionRecordForWord:(id)word;	// 0x32e4cbe9
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x32ecda11
- (void)callChanged;	// 0x32db0c65
- (void)callChangedSelection;	// 0x32d850ad
- (BOOL)callLayoutIgnoresShiftState;	// 0x32deb31d
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x32d9144d
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x32d913fd
- (void)callLayoutLongPressAction;	// 0x32ed3dad
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x32d85695
- (void)callLayoutSetShift:(BOOL)shift;	// 0x32d8563d
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x32ed3df5
- (void)callLayoutUpdateLocalizedKeys;	// 0x32d814bd
- (void)callLayoutUpdateReturnKey;	// 0x32d83089
- (BOOL)callLayoutUsesAutoShift;	// 0x32d85525
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x32eceb39
- (BOOL)callShouldInsertText:(id)call;	// 0x32db8a69
- (BOOL)callShouldReplaceExtendedRange:(unsigned)call withText:(id)text includeMarkedText:(BOOL)text3;	// 0x32e50449
- (BOOL)canHandleKeyHitTest;	// 0x32d90d65
- (void)cancelAllKeyEvents;	// 0x32dd4111
- (void)cancelSplitTransition;	// 0x32ecd825
- (id)candidateList;	// 0x32ed1209
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x32ed1169
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x32ed118d
// converted property getter: - (BOOL)caretBlinks;	// 0x32ed3b25
// converted property getter: - (BOOL)caretVisible;	// 0x32db5365
// declared property getter: - (BOOL)centerFilled;	// 0x32ecd075
// converted property getter: - (int)changeCount;	// 0x32d82b71
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x32ecedc9
// declared property getter: - (id)changedDelegate;	// 0x32d82e19
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x32ed2cc9
- (BOOL)checkSpellingPreference;	// 0x32d816c9
- (BOOL)checkSpellingPreferenceForTraits;	// 0x32d81655
- (void)clearAnimations;	// 0x32e303e9
- (void)clearAutocorrectPromptTimer;	// 0x32d7f1e5
- (void)clearChangeTimeAndCount;	// 0x32d82b85
- (void)clearDelegate;	// 0x32e303ad
- (void)clearExcessKeyboardMemory;	// 0x32dea915
- (void)clearInput;	// 0x32d7e6e1
- (void)clearKeyAreas;	// 0x32d90d89
- (void)clearLanguageIndicator;	// 0x32ed40b5
- (void)clearLayouts;	// 0x32d81bc5
- (void)clearLongPressTimer;	// 0x32d9f4f9
- (void)clearSelection;	// 0x32ed3b4d
- (void)clearShiftState;	// 0x32dba3ad
- (void)clearTimers;	// 0x32e30435
- (void)clearTransientState;	// 0x32d82e3d
- (id)clientOverrideForKey:(id)key;	// 0x32ecd8c5
- (id)clientVariantDelegate;	// 0x32d8311d
- (id)clientVariantsForKey:(id)key;	// 0x32ecd86d
// declared property getter: - (BOOL)committingCandidate;	// 0x32ed3d79
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x32df95ad
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x32d84b4d
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x32dc0035
- (float)currentLandscapeHeight;	// 0x32ecc875
- (float)currentLandscapeWidth;	// 0x32ecc7c9
- (float)currentPortraitHeight;	// 0x32d91a35
- (float)currentPortraitWidth;	// 0x32d9194d
// declared property getter: - (id)currentUsedInputMode;	// 0x32db8789
- (void)dealloc;	// 0x32e30b71
- (void)defaultsDidChange;	// 0x32ecce25
- (void)delayedInit;	// 0x32d9e21d
// declared property getter: - (id)delegate;	// 0x32d7cdd1
// declared property getter: - (id)delegateAsResponder;	// 0x32ecea7d
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x32d82e79
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x32ed2739
- (BOOL)delegateSupportsCorrectionUI;	// 0x32df5ff9
- (void)deleteBackward;	// 0x32ecf929
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x32ecf849
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x32ecf8b9
- (void)deleteFromInput;	// 0x32ed0459
- (void)detach;	// 0x32e30a25
- (void)dismissKeyboard;	// 0x32ed35dd
- (BOOL)displaysCandidates;	// 0x32db09cd
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x32d7dcc5
- (CGSize)dragGestureSize;	// 0x32ecd1c5
- (void)enable;	// 0x32eceb25
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x32ece2c5
- (void)fadeAutocorrectPrompt;	// 0x32ed24b9
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x32ed4155
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x32ed32f9
- (BOOL)flushKeyplaneName:(id)name;	// 0x32dc00f1
- (void)forceShiftUpdate;	// 0x32e4caf9
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x32db1c55
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x32ecd191
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x32e4ea1d
- (void)generateCandidates;	// 0x32d9f545
- (void)generateCandidatesWithOptions:(int)options;	// 0x32d9f559
- (void)geometryChangeDone:(BOOL)done;	// 0x32d9f425
// declared property getter: - (id)geometryDelegate;	// 0x32d82289
// declared property getter: - (BOOL)geometryIsChanging;	// 0x32ed3d99
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x32ed2bfd
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x32ed2c2d
- (void)handleAutoDelete;	// 0x32ed2fa9
- (void)handleDelete;	// 0x32ecf831
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x32ecf765
- (void)handleDeleteWithNonZeroInputCount;	// 0x32ed0201
- (void)handleDeleteWithZeroInputCount;	// 0x32ecfe65
- (BOOL)handleDoubleSpacePeriodForInputString:(id)inputString afterSpace:(BOOL)space elapsedTime:(double)time;	// 0x32df2551
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x32db6759
- (void)handleKeyEvent:(GSEventRef)event;	// 0x32db5d81
- (void)handleObserverCallback;	// 0x32db0bc9
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x32db79cd
- (void)hardwareAutoRepeat:(id)repeat;	// 0x32ed32d9
- (void)hardwareKeyboardAvailabilityChanged;	// 0x32ed3255
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x32ecdf79
- (BOOL)hasAutoRepeat;	// 0x32ed3e9d
- (BOOL)hasEditableMarkedText;	// 0x32d849a9
- (BOOL)hasMarkedText;	// 0x32d849f5
- (BOOL)hasUpToDateCandidates;	// 0x32ed10a9
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x32ecd785
- (void)hideKeyboard;	// 0x32ed3381
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x32db1201
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x32ed2c5d
// declared property getter: - (id)inputDelegate;	// 0x32d7f079
// declared property getter: - (id)inputManager;	// 0x32d80fa9
- (id)inputModeFirstPreference;	// 0x32ecdb25
// converted property getter: - (id)inputModeLastChosen;	// 0x32ece6e1
- (id)inputModeLastChosenPreference;	// 0x32ecdb75
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x32ecdce1
- (id)inputModeLastUsedPreference;	// 0x32d7e03d
- (id)inputModePreference;	// 0x32d7dd09
- (id)inputOverlayContainer;	// 0x32df91d1
- (id)inputStringFromPhraseBoundary;	// 0x32ecf1e9
- (void)insertText:(id)text;	// 0x32deb3e5
- (void)installRecorder;	// 0x32d81cb1
- (void)installTypology;	// 0x32d81d6d
- (int)interfaceOrientation;	// 0x32da1615
- (BOOL)isAllowedInputMode:(id)mode;	// 0x32d7e0cd
- (BOOL)isAutoDeleteActive;	// 0x32ed3fdd
- (BOOL)isAutoFillMode;	// 0x32dfbd31
- (BOOL)isAutoShifted;	// 0x32d88635
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x32d8d39d
- (BOOL)isDesiredInputMode:(id)mode;	// 0x32d83d95
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x32d7f285
// converted property getter: - (BOOL)isLongPress;	// 0x32deac6d
- (BOOL)isMinimized;	// 0x32d81005
// converted property getter: - (BOOL)isShiftLocked;	// 0x32d8e7ad
- (BOOL)isShifted;	// 0x32db0ea5
- (BOOL)isUsingDictationLayout;	// 0x32ed189d
- (BOOL)isValidKeyInput:(id)input;	// 0x32db78d1
- (void)keyActivated;	// 0x32ecf74d
- (void)keyDeactivated;	// 0x32ecf75d
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x32db2a09
// declared property getter: - (id)keyboardAlertView;	// 0x32e30a01
- (void)keyboardDidHide:(id)keyboard;	// 0x32deaa71
- (BOOL)keyboardDrawsOpaque;	// 0x32de6e0d
- (BOOL)keyboardRecordingEnabled;	// 0x32d81cf1
- (BOOL)keyboardsExpandedPreference;	// 0x32ecd9dd
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x32ecd971
// declared property getter: - (id)lastUsedInputMode;	// 0x32ed3d69
- (void)launchTypologyApplication;	// 0x32ed407d
- (void)layoutHasChanged;	// 0x32e2dfad
// declared property getter: - (id)legacyInputDelegate;	// 0x32d85129
- (void)longPressAction;	// 0x32ed31dd
// converted property getter: - (id)markedTextOverlay;	// 0x32ecf13d
- (void)mediaKeyDown:(GSEventRef)down;	// 0x32ed3a75
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x32ecd28d
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x32ecfc6d
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x32ed17c1
- (BOOL)noContent;	// 0x32decc7d
- (void)notifyShiftState;	// 0x32d85579
- (void)performClientVariantActionNamed:(id)named;	// 0x32ecd91d
- (BOOL)performanceLoggingPreference;	// 0x32d9e3bd
// converted property getter: - (unsigned)phraseBoundary;	// 0x32ecfc4d
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x32da12f5
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x32db0ec5
- (void)prepareForGeometryChange;	// 0x32d92355
- (void)prepareForSelectionChange;	// 0x32da72b9
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x32ece78d
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x32d83215
// declared property getter: - (id)privateInputDelegate;	// 0x32d7cdad
- (void)pushRecentAutocorrectionSuggestion:(id)suggestion;	// 0x32df8c59
- (id)recentAutocorrectionSuggestionForTypedString:(id)typedString;	// 0x32df2485
- (void)recomputeActiveInputModes;	// 0x32ecf5d9
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x32d83a55
- (void)recordAcceptedAutocorrection:(id)autocorrection;	// 0x32e513b1
- (void)recordRejectedAutocorrection:(id)autocorrection;	// 0x32ed26e9
// declared property getter: - (id)recorder;	// 0x32d81ba1
- (void)refreshRivenPreferences;	// 0x32d7da31
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x32d90f31
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x32d87f95
- (void)releaseSuppressUpdateCandidateView;	// 0x32d9ea59
- (void)removeAutocorrectPrompt;	// 0x32d7f0a1
- (void)removeAutocorrection;	// 0x32ed0ba9
- (void)removeFromSuperview;	// 0x32e30955
- (void)replaceText:(id)text;	// 0x32ed1441
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x32ed18e5
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x32d897cd
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x32d87fe5
- (id)returnKeyDisplayName;	// 0x32d904e5
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x32d904c5
- (int)returnKeyType;	// 0x32d9055d
// declared property getter: - (BOOL)rivenSplitLock;	// 0x32ecd1fd
- (void)saveInputModesPreference:(id)preference;	// 0x32ecdae9
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x32ed15f1
- (id)searchStringForMarkedText;	// 0x32ecf1b1
- (void)selectionDidChange:(id)selection;	// 0x32da8169
- (void)selectionScrolling:(id)scrolling;	// 0x32eccb51
- (id)selectionView;	// 0x32d84ee9
- (void)selectionWillChange:(id)selection;	// 0x32da7279
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x32da83a1
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x32d815ad
- (void)setAutocorrection:(id)autocorrection;	// 0x32d7e779
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x32ecda45
- (void)setCandidateList:(id)list updateCandidateView:(BOOL)view;	// 0x32ed162d
- (void)setCandidates:(id)candidates;	// 0x32d7e871
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x32d84ebd
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x32d84f41
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x32ecedd9
- (void)setChanged;	// 0x32db048d
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x32d82e29
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x32ed3d89
- (void)setCorrectionLearningAllowed:(BOOL)allowed;	// 0x32ece989
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x32d81bb1
- (void)setDefaultTextInputTraits:(id)traits;	// 0x32d9223d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x32d8229d
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x32d822b1
- (void)setFrame:(CGRect)frame;	// 0x32d7cac1
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x32d81f49
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x32d924b9
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x32ecdfb1
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x32db6591
- (void)setInitialDirection;	// 0x32d84f71
// declared property setter: - (void)setInputManager:(id)manager;	// 0x32d80f99
- (void)setInputMode:(id)mode;	// 0x32d7e1d5
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x32d7e1e9
- (void)setInputModeFromPreferences;	// 0x32d7de15
- (void)setInputModeLastChosenPreference;	// 0x32ecdbd1
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x32ece695
- (void)setInputModeToNextInPreferredList;	// 0x32ece4f1
- (void)setInputObject:(id)object;	// 0x32ed121d
- (void)setInputPoint:(CGPoint)point;	// 0x32db3691
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x32e30a11
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x32e30de9
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x32ed40a5
- (void)setMarkedText;	// 0x32ecf041
- (void)setOrientation;	// 0x32d7cb69
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x32ecfbc5
- (void)setPreviousInputString:(id)string;	// 0x32db0175
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x32e30b25
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x32d8305d
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x32ecd231
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32ecf275
- (void)setShift:(BOOL)shift;	// 0x32db030d
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x32db0321
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x32ecf625
- (void)setShiftLockedForced:(BOOL)forced;	// 0x32ecf661
- (void)setShiftNeedsUpdate;	// 0x32db03bd
- (void)setShiftOffIfNeeded;	// 0x32db0281
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x32db046d
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x32d83029
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x32ed3d59
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x32d86191
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x32ecdf69
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x32ed3d39
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x32d911cd
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x32e2e799
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x32ed40f9
- (void)setSplitProgress:(float)progress;	// 0x32ecd295
- (void)setTextInputChangesIgnored:(BOOL)ignored;	// 0x32ed41d5
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x32e30b61
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x32d8fb1d
- (unsigned)shiftFlagsForInputString;	// 0x32deb2a1
- (BOOL)shiftLockPreference;	// 0x32d7dc91
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x32ecf68d
- (BOOL)shouldAcceptCandidate:(id)candidate beforeInputString:(id)string;	// 0x32ecf981
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x32ed2cb9
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x32ecfdbd
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x32ed3d49
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x32d9107d
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x32deb241
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x32ed3bf9
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x32d8437d
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x32ece37d
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x32dd2b71
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x32ece4d9
- (void)showKeyboard;	// 0x32ed342d
- (void)showNextCandidates;	// 0x32ed1125
// declared property getter: - (BOOL)showsCandidateBar;	// 0x32d821c1
// declared property getter: - (BOOL)showsCandidateInline;	// 0x32e30389
- (id)sortingMethods;	// 0x32ed2b7d
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x32d91b71
- (void)startAutoDeleteTimer;	// 0x32ed3169
- (void)startCaretBlinkIfNeeded;	// 0x32ed3af9
- (void)startKeyboardRecording;	// 0x32f8d121
- (void)stopAutoDelete;	// 0x32d82d1d
- (void)stopKeyboardRecording;	// 0x32f8d229
- (void)storeDelegateConformance;	// 0x32d82bad
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x32db06e5
- (BOOL)suppliesCompletions;	// 0x32ecf69d
- (BOOL)supportsNumberKeySelection;	// 0x32ecf729
- (BOOL)swipeToTabPreference;	// 0x32d86141
- (void)takeTextInputTraitsFromDelegate;	// 0x32d7cc45
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x32ed3fb9
- (void)textChanged:(id)changed;	// 0x32dafeb5
- (void)textDidChange:(id)text;	// 0x32dafea5
- (void)textFrameChanged:(id)changed;	// 0x32db8d89
- (int)textInputChangingCount;	// 0x32ed3fa9
- (id)textInputTraits;	// 0x32d85855
- (void)textWillChange:(id)text;	// 0x32dafdf5
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x32db3849
- (void)timeMark:(unsigned)mark;	// 0x32db36a5
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x32db3595
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x32ed2ba5
- (void)toggleShift;	// 0x32ecf5fd
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x32ed2ce9
- (void)touchAutocorrectPromptTimer;	// 0x32d8ffc5
- (void)touchLongPressTimer;	// 0x32db3489
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x32db34a1
- (void)trackUsageForAcceptedAutocorrection:(id)acceptedAutocorrection promptWasShowing:(BOOL)showing;	// 0x32e514cd
- (void)trackUsageForPromptedCorrection:(id)promptedCorrection inputString:(id)string previousPrompt:(id)prompt;	// 0x32ed3c21
- (BOOL)typologyEnabled;	// 0x32d81ea1
// declared property getter: - (id)typologyRecorder;	// 0x32d80fb9
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x32d7ebc5
- (void)updateAutocorrectPromptAction;	// 0x32da10c9
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x32ed23c1
- (void)updateCandidateDisplay;	// 0x32d7ea4d
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x32ed16e9
- (void)updateChangeTimeAndIncrementCount;	// 0x32db89b9
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned long)character;	// 0x32ecf951
- (void)updateDoubleSpacePeriodStateForString:(id)string;	// 0x32deba6d
- (void)updateForChangedSelection;	// 0x32d843c9
- (void)updateFromTextInputTraits;	// 0x32ed3eb1
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x32ecf2d1
- (void)updateInputManagerAutocapitalizationType;	// 0x32d7dc35
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x32ece2b1
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x32ece055
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x32db6519
- (void)updateKeysWithDelegates;	// 0x32d91b01
- (void)updateLastUsedInputMode:(id)mode;	// 0x32db867d
- (void)updateLayout;	// 0x32d81045
- (void)updateLayoutAndSetShift;	// 0x32ecfe35
- (void)updateLayoutIfNeeded;	// 0x32d924cd
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x32ece83d
- (void)updateMarkedTextIfChanged;	// 0x32da8291
- (void)updateObserverState;	// 0x32db03e1
- (void)updateReturnKey;	// 0x32deba59
- (void)updateReturnKey:(BOOL)key;	// 0x32d9038d
- (void)updateShiftState;	// 0x32d8521d
- (void)updateTextCandidateView;	// 0x32ed1ab1
- (BOOL)userSelectedCurrentCandidate;	// 0x32ed1049
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;	// 0x32ed0a89
@end

