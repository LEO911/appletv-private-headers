/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIWebTiledView.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "UIWebFileUploadPanelDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class _UITextServiceSession, UIWebFileUploadPanel, UIColor, UIImage, WebThreadSafeUndoManager, UITextInteractionAssistant, WebViewReachabilityObserver, UIWebRotatingSheet, NSMutableSet, NSArray, NSTimer, UITextChecker, DOMHTMLElement, UILongPressGestureRecognizer, UIAutoscroll, UITapGestureRecognizer, UIPanGestureRecognizer, CALayer, WebView, DOMNode, UITextInputTraits, DOMElement, DOMRange, UITextRange, NSDictionary, UITextPosition, UIView, UIWebSelectionAssistant;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	unsigned _previousScrollWasScrollToTop : 1;	// 545 = 0x221
	unsigned _skipResettingNeedsScrollNotifications : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	UIWebFileUploadPanel *_fileUploadPanel;	// 580 = 0x244
	int _selectionAffinity;	// 584 = 0x248
	DOMElement *_dictationResultPlaceholder;	// 588 = 0x24c
	id _dictationResultPlaceholderRemovalObserver;	// 592 = 0x250
	DOMRange *_rangeToRestoreAfterDictation;	// 596 = 0x254
	_UITextServiceSession *_definitionSession;	// 600 = 0x258
	_UITextServiceSession *_learnSession;	// 604 = 0x25c
	BOOL _suppressesIncrementalRendering;	// 608 = 0x260
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x32dff2a9; S=0x32ef07a9; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x32f645d9; S=0x32f64569; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x32ee9d25; S=0x32ee9d29; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x32d84cf5; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x32f63d45; S=0x32d12229; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x32d105b1; S=0x32d40095; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x32dbb899; S=0x32d41369; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x32ee475d; S=0x32ee4705; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x32d41bc1; converted property
@property(readonly, assign) int documentType;	// G=0x32d41bad; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x32ee6a8d; S=0x32ee6a49; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x32ee6d05; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32da7d99; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x32d71a55; S=0x32d82c35; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x32dbb725; 
@property(assign) id interactionDelegate;	// G=0x32ef062d; S=0x32d41379; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x32ee6d61; S=0x32de78f9; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x32ee6ddd; S=0x32ee6dc5; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x32ee46ed; S=0x32d10009; converted property
@property(retain) id markedText;	// G=0x32debb19; S=0x32e50a39; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32d1105d; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x32eeaa65; S=0x32eeaa69; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x32dd707d; S=0x32ee69fd; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x32eeaff9; S=0x32eeb009; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x32d79c59; S=0x32dbbe25; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x32d79ce5; S=0x32eeacc5; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x32eeacc9; S=0x32da8101; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x32daf4e9; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x32ee4b39; S=0x32df3dcd; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x32ee69e9; S=0x32ee69d1; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x32ee4b25; S=0x32ee4abd; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x32ee6db5; S=0x32ee6d75; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x32eeb019; S=0x32df4081; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x32ee8b91; S=0x32ee8a65; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x32d11031; 
@property(retain) id typingAttributes;	// G=0x32ee4041; S=0x32ee4175; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x32d71aa1; converted property
@property(assign) BOOL updatesScrollView;	// G=0x32ee5085; S=0x32ee506d; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x32ee9c09; converted property
@property(readonly, retain) WebView *webView;	// G=0x32d0fb79; converted property
+ (id)_createDefaultHighlightView;	// 0x32de1f89
+ (id)_sharedHighlightView;	// 0x32de1f51
+ (double)getTimestamp;	// 0x32ee3d41
+ (BOOL)hasLandscapeOrientation;	// 0x32d46b7d
+ (void)initialize;	// 0x32cfaa19
+ (Class)layerClass;	// 0x32d0e449
+ (id)standardTextViewPreferences;	// 0x32d0db61
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x32d0dcf9
- (id)initWithFrame:(CGRect)frame;	// 0x32d3ebe1
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x32d0de55
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x32dd6d21
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x32dff2a9
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x32eef3c5
- (void)_addAdditionalSubview:(id)subview;	// 0x32ee5f0d
- (void)_addShortcut:(id)shortcut;	// 0x32ee9725
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x32de2361
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x32d42b35
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x32ef1f59
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x32ef21fd
- (void)_cancelLongPressGestureRecognizer;	// 0x32de21a9
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x32dd64d5
- (void)_cleanupSheet;	// 0x32de9695
- (void)_clearAllConsoleMessages;	// 0x32ee6d55
- (void)_clearDoubleTapRect;	// 0x32d445c1
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x32eea0a9
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x32eea375
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x32ef0fa5
- (BOOL)_dataDetectionIsActivated;	// 0x32d40151
- (void)_define:(id)define;	// 0x32ee95fd
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x32ee7541
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x32d124a1
- (void)_didScroll;	// 0x32de1b89
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x32ee3e1d
- (float)_documentScale;	// 0x32dd8045
- (id)_documentUrl;	// 0x32eeacdd
- (CGRect)_documentViewVisibleRect;	// 0x32d41005
- (id)_doubleTapGestureRecognizer;	// 0x32ef0795
- (void)_doubleTapRecognized:(id)recognized;	// 0x32eef33d
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x32ef2a39
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32db90f1
- (void)_finishedUsingDictationPlaceholder;	// 0x32ee7bd5
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x32eea4b5
- (id)_focusedOrMainFrame;	// 0x32d0fcd5
- (id)_groupName;	// 0x32e4bda1
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x32ee6c8d
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x32ee6ab1
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x32ee6cc9
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x32ee63f5
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x32eef549
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x32ee3d69
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x32ee3d81
- (BOOL)_isInspectorSearchingForNode;	// 0x32dd85a5
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x32dfcf41
- (CGRect)_lastRectForRange:(id)range;	// 0x32df9745
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x32d40de5
- (void)_longPressRecognized:(id)recognized;	// 0x32eef629
- (NSRange)_markedTextNSRange;	// 0x32ee879d
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x32ee5e41
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x32ee5dd5
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x32d0e6e1
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x32ee535d
- (void)_notifyPlugInViewsOfDidZoom;	// 0x32ee5471
- (void)_notifyPlugInViewsOfScaleChange;	// 0x32d40c81
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x32ee524d
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x32ee63b5
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x32ee62b1
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x32ee624d
- (id)_parentTextView;	// 0x32d82f21
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32eea979
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x32ee3db9
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x32ef1b51
- (Class)_printFormatterClass;	// 0x33003891
- (void)_promptForReplace:(id)replace;	// 0x32ee9bb1
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x32d46f79
- (void)_removeAdditionalSubview:(id)subview;	// 0x32ee5f79
- (void)_removeDefinitionController:(BOOL)controller;	// 0x32d79dc1
- (void)_removeShortcutController:(BOOL)controller;	// 0x32ee3d99
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x32ee647d
- (void)_resetForNewPage;	// 0x32d46425
- (void)_resetFormDataForFrame:(id)frame;	// 0x32ee6d51
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x32dfe0e1
- (void)_resetShowingTextStyle:(id)style;	// 0x32e085bd
- (void)_reshapePlugInViews;	// 0x32d12ae9
- (id)_responderForBecomeFirstResponder;	// 0x32ee6e9d
- (void)_restoreFlattenedContentLayers;	// 0x32eea639
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x32d466d1
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x32d0f8c1
- (void)_runLoadBlock:(id)block;	// 0x32dd6559
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x32d45531
- (id)_scriptingInfoForForm:(id)form;	// 0x32eeb2a9
- (id)_scriptingInfoForLink:(id)link;	// 0x32eeb02d
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x32eeaa01
- (CGRect)_selectionClipRect;	// 0x32ee9071
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32db90ad
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x32eefc95
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x32ef07a9
- (void)_setDocumentScale:(float)scale;	// 0x32d40921
- (void)_setDocumentType:(int)type;	// 0x32d4018d
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x32d401ad
- (void)_setFont:(id)font;	// 0x32ee3e79
- (void)_setParentTextView:(id)view;	// 0x32d10229
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x32dd802d
- (void)_setTextColor:(id)color;	// 0x32ee3f49
- (CGRect)_shortcutPresentationRect;	// 0x32ee9555
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x32eea261
- (BOOL)_shouldResetForNewPage;	// 0x32d463e5
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x32d0fe31
- (BOOL)_shouldUseInitialScale;	// 0x32eea069
- (void)_showDataDetectorsSheet;	// 0x32ef179d
- (void)_showImageSheet;	// 0x32ef1259
- (void)_showLinkSheet;	// 0x32ef1535
- (void)_showPendingContentLayers;	// 0x32d46a71
- (void)_showTextStyleOptions:(id)options;	// 0x32ee9399
- (void)_singleTapRecognized:(id)recognized;	// 0x32dfe031
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x32da0c1d
- (id)_targetURL;	// 0x32ef0219
- (id)_textSelectingContainer;	// 0x32dbc149
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x32eef381
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x32eef6a1
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x32ee7059
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x32ee6fad
- (void)_updateFixedPositionContent;	// 0x32de22e5
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x32ee55c5
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x32d46a1d
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x32d40dcd
- (void)_updateScrollViewBoundaryZoomScales;	// 0x32d10315
- (void)_updateSize;	// 0x32d44821
- (void)_updateSubviewCaches;	// 0x32dd8055
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x32dd794d
- (float)_zoomedDocumentScale;	// 0x32d44315
- (void)actionDidFinish;	// 0x32ef174d
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x32ef02c9
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x32ef0379
- (void)addInputString:(id)string;	// 0x32ee7141
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x32ee7105
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x32dfed59
- (id)asText;	// 0x32f650f5
- (void)assistFormNode:(id)node;	// 0x32ee6d3d
- (void)attemptClick:(id)click;	// 0x32dfee0d
- (id)automaticallySelectedOverlay;	// 0x32dfcccd
- (CGRect)autoscrollContentFrame;	// 0x32ee9cfd
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x32f645d9
- (CGRect)autoscrollDragFrame;	// 0x32ee9cd9
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x32eeaca1
- (BOOL)becomeFirstResponder;	// 0x32dff125
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x32ee9d25
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x32ef2749
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x32ef2545
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x32ef26e1
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x32ef24b9
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x32ef24e9
- (void)beginSelectionChange;	// 0x32d78bd5
// declared property getter: - (id)beginningOfDocument;	// 0x32d84cf5
- (BOOL)canBecomeFirstResponder;	// 0x32dff291
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x32d9ffe5
- (BOOL)canResignFirstResponder;	// 0x32ee6e69
- (void)cancelAutoscroll;	// 0x32f64e65
- (void)cancelInteraction;	// 0x32dfe161
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x32de1d61
- (BOOL)cancelMouseTracking;	// 0x32ee51dd
- (BOOL)cancelTouchTracking;	// 0x32ee5215
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x32f63d45
- (CGRect)caretRect;	// 0x32dbd389
- (CGRect)caretRectForPosition:(id)position;	// 0x32d7b56d
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x32d7b819
- (unsigned short)characterAfterCaretSelection;	// 0x32daf54d
- (unsigned short)characterBeforeCaretSelection;	// 0x32daf51d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x32ee8201
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x32eeab41
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x32eeac35
- (id)checkSpellingOfString:(id)string;	// 0x32df6085
- (void)clearInteractionTimer;	// 0x32de1f11
- (void)clearRangedSelectionInitialExtent;	// 0x32f63e85
- (void)clearSelection;	// 0x32f63ac1
- (BOOL)clearWKFirstResponder;	// 0x32df6739
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x32f63b61
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32da768d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x32eeaa71
- (void)collapseSelection;	// 0x32f63cf1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x32da7a3d
- (void)completeInteraction;	// 0x32de9725
- (void)confirmMarkedText:(id)text;	// 0x32ee8179
- (BOOL)considerHeightForDoubleTap;	// 0x32eeaee5
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x32ef2eb9
- (BOOL)containsOnlySelectableElements;	// 0x32eea6b9
- (CGRect)contentFrameForView:(id)view;	// 0x32f64655
- (id)contentView;	// 0x32eead51
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x32eef0c9
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x32ee8d39
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x32ee49bd
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x32ee4975
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x32da776d
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x32ee4a61
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x32ee4a05
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x32d7b915
- (void)copy:(id)copy;	// 0x32ee9285
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x32ee5165
- (float)currentDocumentScale;	// 0x32eead65
- (void)cut:(id)cut;	// 0x32ee91b9
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x32d105b1
- (void)dealloc;	// 0x32de917d
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x32eefed5
- (void)deferInteraction;	// 0x32ef01c9
- (void)deferredBecomeFirstResponder;	// 0x32ee6e6d
// converted property getter: - (id)delegate;	// 0x32dbb899
- (void)deleteBackward;	// 0x32ee718d
- (void)deleteFromInput;	// 0x32ee7155
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x32ee475d
- (id)dictationInterpretations;	// 0x32ee7f09
- (id)dictationResultMetadataForRange:(id)range;	// 0x32ee74e1
- (void)didEndScroll;	// 0x32ee9e29
- (void)didEndZoom;	// 0x32ee9fad
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x32ee4401
- (void)didMoveToSuperview;	// 0x32d10301
- (void)didRemovePlugInView:(id)view;	// 0x32dd8755
- (void)didRotateInteractionSheet;	// 0x32ee6969
- (void)didZoom;	// 0x32ee9f55
- (void)disableClearsOnInsertion;	// 0x32df5749
// converted property getter: - (CGRect)documentBounds;	// 0x32d41bc1
// converted property getter: - (int)documentType;	// 0x32d41bad
// converted property getter: - (CGRect)doubleTapRect;	// 0x32ee6d05
- (BOOL)doubleTapRectIsReplaced;	// 0x32ee6d29
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x32eeae85
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x32ef2c75
- (unsigned)effectiveDataDetectorTypes;	// 0x32df4211
- (void)enableReachability;	// 0x32d3f335
- (id)enclosingScrollView;	// 0x32eead41
// declared property getter: - (id)endOfDocument;	// 0x32da7d99
- (void)endPrintMode;	// 0x32ef28b5
- (void)endSelectionChange;	// 0x32d7a1c5
- (void)ensureSelection;	// 0x32df4a2d
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x32ee867d
- (void)extendCurrentSelection:(int)selection;	// 0x32ee8859
- (void)fileUploadPanelDidDismiss:(id)fileUploadPanel;	// 0x32ee502d
- (CGRect)firstRectForRange:(id)range;	// 0x32df912d
- (id)fontForCaretSelection;	// 0x32dfa7ad
- (void)forceLayout;	// 0x32ee5099
- (id)formElement;	// 0x32da77d9
- (void)forwardInvocation:(id)invocation;	// 0x32d3fa31
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x32ee5909
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x32ee7b45
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x32dfde89
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x32dfdd49
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x32dfced9
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x32dfddbd
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x32dfda1d
- (int)getPasteboardChangeCount;	// 0x32ee5c35
- (int)getPasteboardItemsCount;	// 0x32ee58d5
- (void)handleKeyWebEvent:(id)event;	// 0x32ee8df9
- (BOOL)hasContent;	// 0x32d12729
- (BOOL)hasDrawnTiles;	// 0x32d428b5
- (BOOL)hasEditableSelection;	// 0x32da07c1
- (BOOL)hasMarkedText;	// 0x32f63b15
- (BOOL)hasPlugInSubviews;	// 0x32ee8fcd
- (BOOL)hasRangedSelection;	// 0x32ee7521
- (BOOL)hasRichlyEditableSelection;	// 0x32daf3a9
- (BOOL)hasSelection;	// 0x32d0fc99
- (BOOL)hasSimpleTextOnlyStructure;	// 0x32eea6f5
- (BOOL)hasText;	// 0x32deccf1
- (void)hideTapHighlight;	// 0x32eeff8d
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x32eeffd1
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x32dfe17d
- (id)hostViewForSheet:(id)sheet;	// 0x32ef1ba5
- (id)implementationWebView;	// 0x32ee8d4d
- (BOOL)inPopover;	// 0x32ee9c19
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x32ef1bb5
- (float)initialScale;	// 0x32d40759
// declared property getter: - (id)inputDelegate;	// 0x32d71a55
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x32ee7269
- (id)insertDictationResultPlaceholder;	// 0x32ee75a9
- (void)insertText:(id)text;	// 0x32deb455
- (void)installGestureRecognizers;	// 0x32d0e851
- (float)integralScaleForScale:(float)scale;	// 0x32d40bbd
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x32d40bd5
// declared property getter: - (id)interactionAssistant;	// 0x32dbb725
// converted property getter: - (id)interactionDelegate;	// 0x32ef062d
- (id)interactionElement;	// 0x32ef0659
- (CGPoint)interactionLocation;	// 0x32ef066d
- (BOOL)isCaretInEmptyParagraph;	// 0x32daf489
- (BOOL)isClassicViewportMode;	// 0x32ee4b4d
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x32ee6a8d
- (BOOL)isEditable;	// 0x32df322d
- (BOOL)isEditing;	// 0x32dbff91
- (BOOL)isEditingSingleLineElement;	// 0x32ee71d1
- (BOOL)isInInteraction;	// 0x32e373c1
- (BOOL)isInPrintMode;	// 0x32ef1e05
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x32e4c771
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x32da7cfd
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x32da7d35
- (BOOL)isShowingFullScreenPlugInUI;	// 0x32d47971
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x32ee6d61
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x32ee5c69
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x32ee6ddd
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x32df4ce9
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x32e506d9
- (BOOL)keyboardInputChanged:(id)changed;	// 0x32dbfc25
- (void)keyboardInputChangedSelection:(id)selection;	// 0x32dbb7b9
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x32ee8d55
- (void)layoutSubviews;	// 0x32d127dd
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x32ee45b9
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x32df3175
- (void)loadRequest:(id)request;	// 0x32dd647d
// converted property getter: - (BOOL)loadsSynchronously;	// 0x32ee46ed
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x32ee9bf9
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x32ee9be9
- (BOOL)makeWKFirstResponder;	// 0x32dbb9cd
// converted property getter: - (id)markedText;	// 0x32debb19
// declared property getter: - (id)markedTextRange;	// 0x32d1105d
// declared property getter: - (id)markedTextStyle;	// 0x32eeaa65
- (float)maximumDoubleTapScale;	// 0x32eea05d
- (float)maximumScale;	// 0x32ee4961
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x32dd707d
- (id)metadataDictionariesForDictationResults;	// 0x32db9a35
- (id)methodSignatureForSelector:(SEL)selector;	// 0x32d3f9e1
- (float)minimumScale;	// 0x32d40695
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x32ee478d
- (float)minimumScaleForSize:(CGSize)size;	// 0x32eeadb5
- (BOOL)mouseEventsChangeSelection;	// 0x32ef2ea1
- (void)moveBackward:(unsigned)backward;	// 0x32ee8939
- (void)moveForward:(unsigned)forward;	// 0x32ee89a5
- (BOOL)needsScrollNotifications;	// 0x32ee4b61
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x32ee5189
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32ee85cd
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x32dbfb21
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x32f63c25
- (void)paste:(id)paste;	// 0x32ee98d5
- (void)performClick:(id)click;	// 0x32eef771
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x32eef031
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x32ee5959
- (BOOL)playsNicelyWithGestures;	// 0x32df3389
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x32f650f9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x32eea9d9
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x32dbc3f5
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x32d84c99
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x32eeabc9
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x32ef1c31
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32ee8565
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x32ee8825
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x32ee87f1
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x32d84acd
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x32eea7d1
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x32eeaff9
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x32ee5b65
- (CGRect)rectContainingCaretSelection;	// 0x32ee84bd
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x32ee8275
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x32eeadc5
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x32ee8309
- (void)redrawScaledDocument;	// 0x32ee6629
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x32ee7c0d
- (void)replace:(id)replace;	// 0x32ee9add
- (void)replaceCurrentWordWithText:(id)text;	// 0x32ee8015
- (void)replaceRange:(id)range withText:(id)text;	// 0x32eea8b5
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x32ee7f41
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x32e50941
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x32ee8705
- (BOOL)requiresKeyEvents;	// 0x32d91b25
- (void)resetInteraction;	// 0x32de1ed9
- (void)resetTilingAfterLoadComplete;	// 0x32d452f5
- (BOOL)resignFirstResponder;	// 0x32d72161
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x32d7a18d
- (void)saveStateToCurrentHistoryItem;	// 0x32d454dd
- (id)scriptingInfoWithChildren;	// 0x32dd5311
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x32f64e85
- (void)scrollViewWasRemoved;	// 0x32de523d
- (void)select:(id)select;	// 0x32ee9a41
- (void)selectAll;	// 0x32ee8a11
- (void)selectAll:(id)all;	// 0x32ee9a8d
- (void)selectWord;	// 0x32f63a6d
- (id)selectedDOMRange;	// 0x32d79cb1
// declared property getter: - (id)selectedTextRange;	// 0x32d79c59
// declared property getter: - (int)selectionAffinity;	// 0x32d79ce5
- (BOOL)selectionAtDocumentStart;	// 0x32ee88d9
- (BOOL)selectionAtWordStart;	// 0x32ee8909
- (int)selectionBaseWritingDirection;	// 0x32dba611
- (void)selectionChanged;	// 0x32d78f5d
- (void)selectionChanged:(id)changed;	// 0x32d78e5d
// declared property getter: - (int)selectionGranularity;	// 0x32eeacc9
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x32f64509
- (NSRange)selectionRange;	// 0x32e50699
- (id)selectionRects;	// 0x32f64221
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x32da87b1
- (id)selectionRectsForRange:(id)range;	// 0x32e4c541
// declared property getter: - (int)selectionState;	// 0x32daf4e9
- (id)selectionView;	// 0x32ee9025
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x32dd6dc5
- (void)sendScrollEventIfNecessary;	// 0x32ee4b75
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x32de2441
- (void)sendScrollWheelEvents;	// 0x32ef03c5
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x32e36d51
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x32d41429
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x32ef0641
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x32d0faf9
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x32d40175
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x32f64569
- (void)setBaseWritingDirection:(int)direction;	// 0x32f63dc1
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x32dbc479
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x32ee9d29
- (void)setBottomBufferHeight:(float)height;	// 0x32ee8dc9
- (void)setCaretChangeListener:(id)listener;	// 0x32ee8d09
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x32d12229
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x32d839f9
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x32d40095
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x32d41369
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x32ee4705
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x32ee6a49
- (void)setDrawsBackground:(BOOL)background;	// 0x32d1027d
- (void)setFrame:(CGRect)frame;	// 0x32d0e4a9
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x32d0ff71
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x32df3db1
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x32ee4ed5
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32d0fa45
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x32d82c35
- (void)setInteractionAssistantGestureRecognizers;	// 0x32ee6ecd
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x32d41379
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x32de78f9
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x32ee6dc5
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x32d10009
// converted property setter: - (void)setMarkedText:(id)text;	// 0x32e50a39
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32ee80dd
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x32eeaa69
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32d0fabd
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x32ee69fd
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32d0fa81
- (void)setMinimumSize:(CGSize)size;	// 0x32d0f89d
- (void)setMinimumSize:(CGSize)size updateCurrentViewportConfigurationSize:(BOOL)size2;	// 0x32ee4ef1
- (void)setOpaque:(BOOL)opaque;	// 0x32d10239
- (void)setPaused:(BOOL)paused;	// 0x32ee8e35
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x32d47989
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x32eeb009
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x32f63df5
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x32f63e55
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x32f63e25
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x32f63f15
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x32f63fb5
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x32f63ee5
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x32f63eb5
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x32f643dd
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x32f64169
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x32dbbef1
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32dbbe25
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32eea731
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x32eeacc5
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x32da8101
- (void)setSelectionToEnd;	// 0x32f64461
- (void)setSelectionToStart;	// 0x32f644b5
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x32f64051
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32f64e89
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x32df3dcd
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x32ee69d1
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x32ee4abd
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x32d41391
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x32ee6d75
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x32df4081
// converted property setter: - (void)setText:(id)text;	// 0x32ee8a65
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x32d42935
- (void)setTilingArea:(int)area;	// 0x32d416a1
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x32ee4175
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x32ee506d
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x32ee4771
- (void)setUserStyleSheet:(id)sheet;	// 0x32e4bcad
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x32d0fb31
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x32ee4b39
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x32ee69e9
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x32eeaf09
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x32ee4b25
- (void)smartExtendRangedSelection:(int)selection;	// 0x32f643a9
// converted property getter: - (id)standaloneEditingElement;	// 0x32ee6db5
- (BOOL)startActionSheet;	// 0x32eef199
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x32f6468d
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x32eef095
- (void)stopLoading:(id)loading;	// 0x32df4021
- (id)subviews;	// 0x32d0fd61
- (id)superviewForSheet;	// 0x32ef0689
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x32da0be5
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x32ef052d
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x32eeb019
- (void)takeTraitsFrom:(id)from;	// 0x32ee8ff9
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x32eef0f1
// converted property getter: - (id)text;	// 0x32ee8b91
- (id)textColorForCaretSelection;	// 0x32ee8239
- (id)textFormElement;	// 0x32ee6d5d
- (id)textInDOMRange:(id)domrange;	// 0x32f641ed
- (id)textInRange:(id)range;	// 0x32d84e55
- (id)textInputTraits;	// 0x32d0f3c9
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32d84db1
- (void)toggleBaseWritingDirection;	// 0x32f63d6d
- (void)toggleBoldface:(id)boldface;	// 0x32ee92b5
- (void)toggleItalics:(id)italics;	// 0x32ee9301
- (void)toggleUnderline:(id)underline;	// 0x32ee934d
// declared property getter: - (id)tokenizer;	// 0x32d11031
// converted property getter: - (id)typingAttributes;	// 0x32ee4041
// converted property getter: - (id)undoManager;	// 0x32d71aa1
- (id)undoManagerForWebView:(id)webView;	// 0x32d71ac5
- (void)unmarkText;	// 0x32debc61
- (void)updateInteractionElements;	// 0x32ee6871
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x32ee6df1
- (void)updateSelection;	// 0x32ee906d
// converted property getter: - (BOOL)updatesScrollView;	// 0x32ee5085
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x32d3f4d5
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x32eef141
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x32d40321
- (float)viewportHeight;	// 0x32d41271
- (float)viewportWidth;	// 0x32d4082d
- (CGRect)visibleBounds;	// 0x32f64f39
- (CGRect)visibleContentFrame;	// 0x32ee9cb5
- (CGRect)visibleContentRect;	// 0x32eead75
- (CGRect)visibleFrame;	// 0x32ee9c91
// converted property getter: - (id)webSelectionAssistant;	// 0x32ee9c09
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x32d0fbe5
// converted property getter: - (id)webView;	// 0x32d0fb79
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x32ee4e81
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x32d431d9
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x32ee5fe1
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x32ee4dbd
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x32d44f9d
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x32d0fb8d
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x32ee8f51
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x32eefea5
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x32dd6c09
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x32d42ad9
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x32de24f1
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x32dd6e31
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x32d44369
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x32ee4d0d
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x32dd6995
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x32d79e41
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x32dd77ad
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x32ee61bd
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x32ee8efd
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x32d128c1
- (void)webViewDidDrawTiles:(id)webView;	// 0x32d12bc1
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x32ee4ccd
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x32eefecd
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x32ee4da5
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x32ee4c8d
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x32d0ddd1
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x32da76d9
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x32eef27d
- (void)willMoveToSuperview:(id)superview;	// 0x32d102e1
- (void)willRotateInteractionSheet;	// 0x32ee6905
- (void)willStartScroll;	// 0x32ee9d31
- (void)willStartScrollToTop;	// 0x32ee9db5
- (void)willStartZoom;	// 0x32ee9ee9
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x32eeafa9
- (void)willZoomToMinimumScale;	// 0x32eeaef9
- (id)wordAtPoint:(CGPoint)point;	// 0x32f64109
- (id)wordContainingCaretSelection;	// 0x32ee8635
- (int)wordOffsetInRange:(id)range;	// 0x32ee86d1
- (id)wordRangeContainingCaretSelection;	// 0x32ee8535
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x32ee57dd
- (float)zoomedDocumentScale;	// 0x32eead55
@end

