/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "NSCopying.h"
#import "UIKit-Structs.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library


@interface UIBezierPath : NSObject <NSCopying, NSCoding> {
	CGPathRef _path;	// 4 = 0x4
	float *_lineDashPattern;	// 8 = 0x8
	unsigned _lineDashPatternCount;	// 12 = 0xc
	float _lineWidth;	// 16 = 0x10
	float _miterLimit;	// 20 = 0x14
	float _flatness;	// 24 = 0x18
	float _lineDashPhase;	// 28 = 0x1c
	int _lineCapStyle;	// 32 = 0x20
	int _lineJoinStyle;	// 36 = 0x24
	BOOL _usesEvenOddFillRule;	// 40 = 0x28
	CGPathRef _immutablePath;	// 44 = 0x2c
	BOOL _immutablePathIsValid;	// 48 = 0x30
}
@property(assign, nonatomic) CGPathRef CGPath;	// G=0x32e0b141; S=0x32e5f289; 
@property(readonly, assign, nonatomic) CGRect bounds;	// G=0x32e5f30d; 
@property(readonly, assign, nonatomic) CGPoint currentPoint;	// G=0x32e5f325; 
@property(readonly, assign, getter=isEmpty) BOOL empty;	// G=0x32e5f2f5; 
@property(assign, nonatomic) float flatness;	// G=0x32e601ad; S=0x32e601bd; @synthesize=_flatness
@property(assign, nonatomic) int lineCapStyle;	// G=0x32e6014d; S=0x32e6015d; @synthesize=_lineCapStyle
@property(assign, nonatomic) int lineJoinStyle;	// G=0x32e6016d; S=0x32e6017d; @synthesize=_lineJoinStyle
@property(assign, nonatomic) float lineWidth;	// G=0x32e6012d; S=0x32e6013d; @synthesize=_lineWidth
@property(assign, nonatomic) float miterLimit;	// G=0x32e6018d; S=0x32e6019d; @synthesize=_miterLimit
@property(assign, nonatomic) BOOL usesEvenOddFillRule;	// G=0x32e601cd; S=0x32e601dd; @synthesize=_usesEvenOddFillRule
+ (id)_bezierPathWithRoundedRect:(CGRect)roundedRect byRoundingCorners:(unsigned)corners cornerRadius:(float)radius;	// 0x32d68c95
+ (id)_roundedRectBezierPath:(CGRect)path withRoundedCorners:(int)roundedCorners cornerRadius:(float)radius segments:(int)segments;	// 0x32d68ccd
+ (id)bezierPath;	// 0x32d56889
+ (id)bezierPathForBottomOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;	// 0x32e5f6bd
+ (id)bezierPathForTopOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;	// 0x32e5f581
+ (id)bezierPathWithArcCenter:(CGPoint)arcCenter radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x32e5ec45
+ (id)bezierPathWithCGPath:(CGPathRef)cgpath;	// 0x32e5ed01
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x32e5ebf1
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x32d56835
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect byRoundingCorners:(unsigned)corners cornerRadii:(CGSize)radii;	// 0x32e53931
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect cornerRadius:(float)radius;	// 0x32df0a91
+ (id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(int)roundedCorners withCornerRadii:(id)cornerRadii;	// 0x32e5fca1
+ (id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(int)roundedCorners withCornerRadius:(float)cornerRadius;	// 0x32d68c59
+ (id)roundedRectBezierPath:(CGRect)path withRoundedEdges:(int)roundedEdges;	// 0x32dc966d
+ (id)roundedRectBezierPath:(CGRect)path withTopCornerRadius:(float)topCornerRadius withBottomCornerRadius:(float)bottomCornerRadius;	// 0x32e5f7f1
+ (id)shadowBezierPath:(CGRect)path withRoundedEdges:(int)roundedEdges;	// 0x32dfc945
- (id)init;	// 0x32e5e569
- (id)initWithCoder:(id)coder;	// 0x32e5e595
// declared property getter: - (CGPathRef)CGPath;	// 0x32e0b141
- (CGPathRef)_createMutablePathByDecodingData:(id)data;	// 0x32e5f8c5
- (id)_initWithCGMutablePath:(CGPathRef)cgmutablePath;	// 0x32d568e1
- (CGPathRef)_mutablePath;	// 0x32d569b5
- (CGPathRef)_pathRef;	// 0x32dfcb5d
- (void)addArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x32e5ee29
- (void)addClip;	// 0x32d569c5
- (void)addCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x32e5eda5
- (void)addLineToPoint:(CGPoint)point;	// 0x32d6a6b5
- (void)addQuadCurveToPoint:(CGPoint)point controlPoint:(CGPoint)point2;	// 0x32e5eded
- (void)appendBezierPath:(id)path;	// 0x32e5fb99
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x32dfcb6d
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x32e5fc15
- (void)appendBezierPathWithOvalInRect:(CGRect)rect transform:(CGAffineTransform)transform;	// 0x32e5fc4d
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x32e5fbdd
- (void)appendPath:(id)path;	// 0x32e5ee89
- (void)applyTransform:(CGAffineTransform)transform;	// 0x32e5eecd
- (id)bezierPathByReversingPath;	// 0x32e5ef81
// declared property getter: - (CGRect)bounds;	// 0x32e5f30d
- (void)clip;	// 0x32d692bd
- (void)closePath;	// 0x32e5ef25
- (BOOL)containsPoint:(CGPoint)point;	// 0x32e5f33d
- (id)copyWithZone:(NSZone *)zone;	// 0x32e5eae1
// declared property getter: - (CGPoint)currentPoint;	// 0x32e5f325
- (void)dealloc;	// 0x32d56a09
- (void)encodeWithCoder:(id)coder;	// 0x32e5e849
- (void)fill;	// 0x32dc98b9
- (void)fillWithBlendMode:(int)blendMode alpha:(float)alpha;	// 0x32df0c39
// declared property getter: - (float)flatness;	// 0x32e601ad
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x32e5f415
// declared property getter: - (BOOL)isEmpty;	// 0x32e5f2f5
// declared property getter: - (int)lineCapStyle;	// 0x32e6014d
// declared property getter: - (int)lineJoinStyle;	// 0x32e6016d
- (void)lineToPoint:(CGPoint)point;	// 0x32d6a6a5
// declared property getter: - (float)lineWidth;	// 0x32e6012d
// declared property getter: - (float)miterLimit;	// 0x32e6018d
- (void)moveToPoint:(CGPoint)point;	// 0x32d6a679
- (void)removeAllPoints;	// 0x32e5ef51
// declared property setter: - (void)setCGPath:(CGPathRef)path;	// 0x32e5f289
// declared property setter: - (void)setFlatness:(float)flatness;	// 0x32e601bd
// declared property setter: - (void)setLineCapStyle:(int)style;	// 0x32e6015d
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x32e5f375
// declared property setter: - (void)setLineJoinStyle:(int)style;	// 0x32e6017d
// declared property setter: - (void)setLineWidth:(float)width;	// 0x32e6013d
// declared property setter: - (void)setMiterLimit:(float)limit;	// 0x32e6019d
// declared property setter: - (void)setUsesEvenOddFillRule:(BOOL)rule;	// 0x32e601dd
- (void)stroke;	// 0x32d691f1
- (void)strokeWithBlendMode:(int)blendMode alpha:(float)alpha;	// 0x32e5f499
// declared property getter: - (BOOL)usesEvenOddFillRule;	// 0x32e601cd
@end

