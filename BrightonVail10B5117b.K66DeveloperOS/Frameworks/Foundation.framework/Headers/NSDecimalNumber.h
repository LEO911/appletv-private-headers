/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSNumber.h"
#import "Foundation-Structs.h"


@interface NSDecimalNumber : NSNumber {
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x31a05da5
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x31a05f1d
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x31a05ead
+ (id)decimalNumberWithString:(id)string;	// 0x31a05f99
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x31a05fed
+ (id)defaultBehavior;	// 0x31a06ccd
+ (id)maximumDecimalNumber;	// 0x31a06225
+ (id)minimumDecimalNumber;	// 0x31a061b9
+ (id)notANumber;	// 0x31a06341
+ (id)numberWithBool:(BOOL)aBool;	// 0x31a08369
+ (id)numberWithChar:(BOOL)aChar;	// 0x31a07f35
+ (id)numberWithDouble:(double)aDouble;	// 0x31a08319
+ (id)numberWithFloat:(float)aFloat;	// 0x31a082cd
+ (id)numberWithInt:(int)int;	// 0x31a08065
+ (id)numberWithInteger:(int)integer;	// 0x31a080b1
+ (id)numberWithLong:(long)aLong;	// 0x31a08195
+ (id)numberWithLongLong:(long long)longLong;	// 0x31a0822d
+ (id)numberWithShort:(short)aShort;	// 0x31a07fcd
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x31a07f81
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x31a080fd
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x31a08149
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x31a081e1
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x31a0827d
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x31a08019
+ (id)one;	// 0x31a062d1
+ (void)setDefaultBehavior:(id)behavior;	// 0x31a06c79
+ (id)zero;	// 0x31a06291
- (id)initWithCoder:(id)coder;	// 0x31a06135
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x31a06081
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x31a06045
- (id)initWithString:(id)string;	// 0x31a060bd
- (id)initWithString:(id)string locale:(id)locale;	// 0x31a060f9
- (bool)_getCString:(char *)string length:(int)length multiplier:(double)multiplier;	// 0x31a070f1
- (BOOL)boolValue;	// 0x31a070cd
- (BOOL)charValue;	// 0x31a06f51
- (Class)classForCoder;	// 0x31a06d3d
- (int)compare:(id)compare;	// 0x31a063b1
- (id)copy;	// 0x31a05e05
- (id)copyWithZone:(NSZone *)zone;	// 0x31a05e15
- (id)decimalNumberByAdding:(id)adding;	// 0x31a0657d
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x31a065cd
- (id)decimalNumberByDividingBy:(id)by;	// 0x31a06931
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x31a06981
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x31a06859
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x31a068a9
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x31a06ae1
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x31a06b31
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x31a06a09
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x31a06a59
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x31a06bb9
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x31a06731
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x31a06771
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x31a06781
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x31a067d1
- (XXStruct_9isexA)decimalValue;	// 0x31a0618d
- (id)description;	// 0x31a06171
- (id)descriptionWithLocale:(id)locale;	// 0x31a06185
- (double)doubleValue;	// 0x31a06489
- (void)encodeWithCoder:(id)coder;	// 0x31a06d59
- (float)floatValue;	// 0x31a070a9
- (void)getValue:(void *)value;	// 0x31a06561
- (int)intValue;	// 0x31a06fe1
- (BOOL)isEqual:(id)equal;	// 0x31a06431
- (long long)longLongValue;	// 0x31a07071
- (long)longValue;	// 0x31a07029
- (const char *)objCType;	// 0x31a06479
- (short)shortValue;	// 0x31a06f99
- (unsigned char)unsignedCharValue;	// 0x31a06f75
- (unsigned)unsignedIntValue;	// 0x31a07005
- (unsigned long long)unsignedLongLongValue;	// 0x31a0708d
- (unsigned long)unsignedLongValue;	// 0x31a0704d
- (unsigned short)unsignedShortValue;	// 0x31a06fbd
@end

