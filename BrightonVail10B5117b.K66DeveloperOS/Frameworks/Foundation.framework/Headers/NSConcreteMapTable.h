/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSMapTable.h"
#import "Foundation-Structs.h"


__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable {
	NSSlice keys;	// 4 = 0x4
	NSSlice values;	// 68 = 0x44
	unsigned count;	// 132 = 0x84
	unsigned capacity;	// 136 = 0x88
	unsigned keyOptions;	// 140 = 0x8c
	unsigned valueOptions;	// 144 = 0x90
	unsigned mutations;	// 148 = 0x94
	int growLock;	// 152 = 0x98
	bool shouldRehash;	// 156 = 0x9c
}
@property(readonly, assign) unsigned count;	// G=0x319541b9; converted property
- (id)init;	// 0x319de885
- (id)initWithCoder:(id)coder;	// 0x319def91
- (id)initWithKeyOptions:(unsigned)keyOptions valueOptions:(unsigned)options capacity:(unsigned)capacity;	// 0x31951c09
- (id)initWithKeyPointerFunctions:(id)keyPointerFunctions valuePointerFunctions:(id)functions capacity:(unsigned)capacity;	// 0x319ded81
- (void)_initBlock;	// 0x31951d75
- (void)_setBackingStore;	// 0x31951d99
- (id)allKeys;	// 0x319dfbb1
- (id)allValues;	// 0x319dfc71
- (void)assign:(unsigned)assign key:(const void *)key value:(const void *)value isNew:(BOOL)aNew;	// 0x31951eb5
- (void)checkCount:(const char *)count;	// 0x319de985
- (Class)classForCoder;	// 0x319def75
- (BOOL)containsKeys:(const void **)keys values:(const void **)values count:(unsigned)count;	// 0x319df2d9
- (id)copy;	// 0x319deb21
// converted property getter: - (unsigned)count;	// 0x319541b9
- (unsigned)countByEnumeratingWithState:(XXStruct_kFm5bA *)state objects:(id *)objects count:(unsigned)count;	// 0x31981cc9
- (void)dealloc;	// 0x319525fd
- (id)description;	// 0x319df8c9
- (id)dump;	// 0x319df3bd
- (void)encodeWithCoder:(id)coder;	// 0x319df039
- (void *)existingItemForSetItem:(const void *)setItem forAbsentKey:(const void *)absentKey;	// 0x319df5bd
- (void)finalize;	// 0x319df865
- (unsigned)getKeys:(const void **)keys values:(const void **)values;	// 0x3198254d
- (void)grow;	// 0x31981a95
- (unsigned)hash;	// 0x319dfa45
- (BOOL)isEqual:(id)equal;	// 0x319dfa7d
- (id)keyEnumerator;	// 0x319df9e9
- (id)keyPointerFunctions;	// 0x319df211
- (BOOL)mapMember:(const void *)member originalKey:(const void **)key value:(const void **)value;	// 0x319df661
- (id)objectEnumerator;	// 0x31996c31
- (id)objectForKey:(id)key;	// 0x3194de75
- (void)raiseCountUnderflowException;	// 0x319de8a9
- (unsigned)realCount;	// 0x319de8ed
- (void)rehash;	// 0x319df74d
- (unsigned)rehashAround:(unsigned)around;	// 0x31953fa5
- (void)removeAllItems;	// 0x319df7cd
- (void)removeObjectForKey:(id)key;	// 0x31953edd
- (void)replaceItem:(const void *)item forExistingKey:(const void *)existingKey;	// 0x319df6d9
- (void)setItem:(const void *)item forAbsentKey:(const void *)absentKey;	// 0x319df479
- (void)setItem:(const void *)item forKnownAbsentKey:(const void *)knownAbsentKey;	// 0x319df505
- (void)setObject:(id)object forKey:(id)key;	// 0x31951e21
- (id)valuePointerFunctions;	// 0x319df275
- (void)zeroPairedEntries;	// 0x319dea0d
@end

