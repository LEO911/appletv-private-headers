/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSData, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface BRImage : XXUnknownSuperclass {
	CGImageRef _image;	// 4 = 0x4
	CGImageSourceRef _imageSource;	// 8 = 0x8
	float _imageWidth;	// 12 = 0xc
	float _imageHeight;	// 16 = 0x10
	int _imageOrientation;	// 20 = 0x14
	BOOL _enableCache;	// 24 = 0x18
	NSURL *_imageURL;	// 28 = 0x1c
	NSData *_imageData;	// 32 = 0x20
	NSString *_imageType;	// 36 = 0x24
	BOOL _imageBufferInMemory;	// 40 = 0x28
	BOOL _rotationEnabled;	// 41 = 0x29
}
@property(assign) BOOL enableCache;	// G=0x282e5d; S=0x282e2d; converted property
@property(readonly, assign) CGImageRef image;	// G=0x282c3d; converted property
@property(readonly, assign, getter=isImageBufferInMemory) BOOL imageBufferInMemory;	// G=0x2835e1; converted property
@property(readonly, retain) NSString *imageType;	// G=0x282d11; converted property
@property(readonly, assign, nonatomic) int orientation;	// G=0x2835f1; @synthesize=_imageOrientation
@property(readonly, assign, nonatomic) BOOL rotationEnabled;	// G=0x283601; @synthesize=_rotationEnabled
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef;	// 0x2823ed
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x282401
+ (id)imageWithData:(id)data;	// 0x2823a9
+ (id)imageWithName:(id)name ofType:(id)type inBundle:(id)bundle;	// 0x282531
+ (id)imageWithPDFURL:(id)pdfurl;	// 0x282449
+ (id)imageWithPath:(id)path;	// 0x28233d
+ (id)imageWithRotationFromData:(id)data;	// 0x282625
+ (id)imageWithRotationFromPath:(id)path;	// 0x2825e1
+ (id)imageWithRotationFromURL:(id)url;	// 0x282589
+ (id)imageWithURL:(id)url;	// 0x2822f9
- (id)initWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x28267d
- (id)initWithData:(id)data;	// 0x282981
- (id)initWithURL:(id)url;	// 0x2827ad
- (id)_initWithCGImageSourceRotationEnabled:(CGImageSourceRef)cgimageSourceRotationEnabled;	// 0x283611
- (void)_initializeCGImageWithRotation;	// 0x283761
- (float)aspectRatio;	// 0x282d89
- (id)croppedImageForSize:(CGSize)size;	// 0x283219
- (void)dealloc;	// 0x282b65
- (id)deletterboxedImage;	// 0x282e6d
- (void)drawImageInContext:(CGContextRef)context rect:(CGRect)rect;	// 0x282c09
// converted property getter: - (BOOL)enableCache;	// 0x282e5d
- (BOOL)hasAlpha;	// 0x282d21
// converted property getter: - (CGImageRef)image;	// 0x282c3d
// converted property getter: - (id)imageType;	// 0x282d11
- (BOOL)isAccessibilityElement;	// 0x283129
// converted property getter: - (BOOL)isImageBufferInMemory;	// 0x2835e1
- (BOOL)isPowerOfTwo;	// 0x282dc5
- (CGRect)largestSquareRect;	// 0x283439
- (id)mapImageWithSourceRect:(CGRect)sourceRect toSize:(CGSize)size;	// 0x283145
// declared property getter: - (int)orientation;	// 0x2835f1
- (CGSize)pixelBounds;	// 0x282d55
- (void)purgeRawData;	// 0x3a39bd
- (id)rawData;	// 0x3a39b9
// declared property getter: - (BOOL)rotationEnabled;	// 0x283601
// converted property setter: - (void)setEnableCache:(BOOL)cache;	// 0x282e2d
- (BOOL)sourceRequiresRotation;	// 0x282e11
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)aspectRatioLimit;	// 0x2834fd
@end

