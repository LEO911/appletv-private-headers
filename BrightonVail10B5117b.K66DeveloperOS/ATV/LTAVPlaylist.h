/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class ATVDataClient, NSArray, NSString;

__attribute__((visibility("hidden")))
@interface LTAVPlaylist : XXUnknownSuperclass {
	NSArray *_mediaList;	// 4 = 0x4
	int _sequentialIndex;	// 8 = 0x8
	unsigned _queueLength;	// 12 = 0xc
	BOOL _shuffleEnabled;	// 16 = 0x10
	BOOL _skipExplicit;	// 17 = 0x11
	BOOL _isPlaylistDynamic;	// 18 = 0x12
	int _repeatMode;	// 20 = 0x14
	ATVDataClient *_dataClient;	// 24 = 0x18
	NSString *_playlistName;	// 28 = 0x1c
	NSArray *_sourceTracks;	// 32 = 0x20
}
@property(assign) BOOL isPlaylistDynamic;	// G=0x3f945; S=0x3f935; converted property
@property(readonly, retain) NSArray *mediaList;	// G=0x3f2a5; converted property
@property(assign) unsigned queueLength;	// G=0x3fac49; S=0x3fac35; converted property
@property(assign) int repeatMode;	// G=0x3f905; S=0x3f8f5; converted property
@property(assign) BOOL shuffleEnabled;	// G=0x3f8e5; S=0x3f589; converted property
@property(assign) BOOL skipExplicit;	// G=0x3f925; S=0x3f915; converted property
- (id)initWithIndex:(long)index inMediaList:(id)mediaList;	// 0x3f111
- (id)initWithIndex:(long)index inMediaList:(id)mediaList playlistName:(id)name;	// 0x3f0a1
- (void).cxx_destruct;	// 0x40065
- (id)_mediaForSequentialIndex:(long)sequentialIndex;	// 0x3fec5
- (long)_nextSequentialIndexInDirection:(int)direction;	// 0x3ff1d
- (long)_sequentialIndex;	// 0x3feb5
- (void)appendMediaList:(id)list;	// 0x3f381
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x3f2b9
- (id)changeMedia:(int)media;	// 0x3fa99
- (void)clearBackToItems;	// 0x3fa61d
- (void)clearHistory;	// 0x3fa849
- (long)count;	// 0x3f965
- (id)currentMedia;	// 0x3f985
- (void)demoteAssetAtIndex:(unsigned)index;	// 0x3fb09d
- (void)enqueueItems:(id)items action:(int)action;	// 0x3fac5d
- (void)insertMedia:(id)media atIndex:(long)index;	// 0x3f455
- (BOOL)isEqual:(id)equal;	// 0x3fbb9
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x3f945
- (BOOL)isQueueEnabled;	// 0x3fa1b5
- (BOOL)isQueueEstablishedForDataClient:(id)dataClient;	// 0x3fe51
- (BOOL)isValidForDataClient:(id)dataClient;	// 0x3fa199
- (long)mediaIndex;	// 0x3f955
// converted property getter: - (id)mediaList;	// 0x3f2a5
- (BOOL)moreItemsAvailable:(int)available;	// 0x3fa21
- (void)moveObjectAtIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x3fb45d
- (id)name;	// 0x3f8d1
- (id)nextMedia;	// 0x3f9ed
- (void)playExistingAssetAtIndex:(unsigned)index;	// 0x3fb959
- (id)previouslyPlayedItems;	// 0x3fa2f5
- (void)promoteAssetAtIndex:(unsigned)index;	// 0x3faf59
- (void)pruneHistory;	// 0x3fbaa5
- (void)purge;	// 0x3fa401
- (void)purgeTrackList;	// 0x3f4ed
- (id)queueAssetAtIndex:(int)index;	// 0x3fab21
// converted property getter: - (unsigned)queueLength;	// 0x3fac49
- (id)queuedItems;	// 0x3fa1ed
- (void)removeAssetAtIndex:(unsigned)index;	// 0x3fb6f5
- (void)removeAssetAtIndex:(unsigned)index suppressNotification:(BOOL)notification;	// 0x3fb709
// converted property getter: - (int)repeatMode;	// 0x3f905
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x3f935
// converted property setter: - (void)setQueueLength:(unsigned)length;	// 0x3fac35
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x3f8f5
// converted property setter: - (void)setShuffleEnabled:(BOOL)enabled;	// 0x3f589
- (void)setShuffleEnabled:(BOOL)enabled preservingNowPlaying:(BOOL)playing;	// 0x3f59d
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x3f915
// converted property getter: - (BOOL)shuffleEnabled;	// 0x3f8e5
// converted property getter: - (BOOL)skipExplicit;	// 0x3f925
- (BOOL)supportsShufflePlayback;	// 0x3f8b9
- (void)swapObjectAtIndex:(unsigned)index withObjectAtIndex:(unsigned)index2;	// 0x3fb219
- (id)upNext:(unsigned *)next;	// 0x3fa9c1
@end

