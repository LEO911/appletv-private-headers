/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MPEffectSupport.h"
#import "MPLayer.h"
#import "MPEffectSupportPrivate.h"

@class MCContainerEffect, NSString, NSArray, NSMutableDictionary, NSMutableArray;
@protocol MZEffectTiming;

@interface MPLayerEffect : MPLayer <MPEffectSupportPrivate, MPEffectSupport> {
	MCContainerEffect *_layerEffect;	// 48 = 0x30
	NSString *_effectID;	// 52 = 0x34
	NSString *_presetID;	// 56 = 0x38
	NSMutableArray *_slides;	// 60 = 0x3c
	NSMutableArray *_secondarySlides;	// 64 = 0x40
	NSMutableArray *_texts;	// 68 = 0x44
	NSMutableDictionary *_effectAttributes;	// 72 = 0x48
	int _randomSeed;	// 76 = 0x4c
	NSObject<MZEffectTiming> *_effectTiming;	// 80 = 0x50
	BOOL _supportsEffectTiming;	// 84 = 0x54
	BOOL _skipEffectTiming;	// 85 = 0x55
	int _liveIndex;	// 88 = 0x58
}
@property(retain) NSMutableDictionary *effectAttributes;	// G=0x332f9efd; S=0x332f9f95; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x332f9c45; S=0x332f9c55; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x332fcaa5; @synthesize=_effectTiming
@property(assign) int liveIndex;	// G=0x332fcab5; S=0x332fcac5; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x332f9d85; S=0x332f9da9; 
@property(assign) int randomSeed;	// G=0x332f9e5d; S=0x332f9e6d; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x332fb285; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x332fa2e1; 
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x332fb8fd; 
+ (id)layerEffectWithEffectID:(id)effectID;	// 0x332f8ec9
+ (id)layerEffectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x332f8f05
+ (id)layerEffectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x332f8f45
+ (id)layerEffectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x332f8f85
- (id)init;	// 0x332f8df1
- (id)initWithCoder:(id)coder;	// 0x332f94a5
- (id)initWithEffectID:(id)effectID;	// 0x332f8fcd
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x332f8fe1
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x332f90f5
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x332f920d
- (id)_effectAttributes;	// 0x332fc67d
- (void)_updateEffectTiming;	// 0x332fc4f9
- (void)_updateTiming:(BOOL)timing;	// 0x332fc725
- (void)addSecondarySlide:(id)slide;	// 0x332fb295
- (void)addSecondarySlides:(id)slides;	// 0x332fb2f5
- (void)addSlide:(id)slide;	// 0x332fa2f1
- (void)addSlides:(id)slides;	// 0x332fa351
- (void)addText:(id)text;	// 0x332fb90d
- (void)addTexts:(id)texts;	// 0x332fb96d
- (id)allSlides:(BOOL)slides;	// 0x332fc8dd
- (void)applyFormattedAttributes;	// 0x332fd44d
- (id)container;	// 0x332fcb11
- (void)copySecondarySlides:(id)slides;	// 0x332fe175
- (void)copySlides:(id)slides;	// 0x332fe059
- (void)copyTexts:(id)texts;	// 0x332fe291
- (id)copyWithZone:(NSZone *)zone;	// 0x332f9b31
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x332fd171
- (void)createSlidesWithPaths:(id)paths;	// 0x332fcfbd
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x332fcbd1
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x332fcbf5
- (void)dealloc;	// 0x332f9a0d
- (id)description;	// 0x332f995d
- (id)effectAttributeForKey:(id)key;	// 0x332fa001
// converted property getter: - (id)effectAttributes;	// 0x332f9efd
// declared property getter: - (id)effectID;	// 0x332f9c45
// declared property getter: - (id)effectTiming;	// 0x332fcaa5
- (void)encodeWithCoder:(id)coder;	// 0x332f9341
- (void)finalize;	// 0x332f99cd
- (id)formattedAttributes;	// 0x332fd349
- (double)fullDuration;	// 0x332fcbc1
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x332fb339
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x332fa395
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x332fb9b1
// converted property getter: - (int)liveIndex;	// 0x332fcab5
- (double)lowestDisplayTime;	// 0x332fcad9
- (double)mainDuration;	// 0x332fc031
- (int)maxNumberOfSecondarySlides;	// 0x332fcb71
- (int)maxNumberOfSlides;	// 0x332fcb21
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x332fb1b5
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x332fbefd
// declared property getter: - (id)presetID;	// 0x332f9d85
// converted property getter: - (int)randomSeed;	// 0x332f9e5d
- (void)removeAllSecondarySlides;	// 0x332fbfcd
- (void)removeAllSlides;	// 0x332fb151
- (void)removeAllTexts;	// 0x332fbe9d
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x332fb779
- (void)removeSlidesAtIndices:(id)indices;	// 0x332fadb1
- (void)removeTextsAtIndices:(id)indices;	// 0x332fbd35
// converted property getter: - (id)secondarySlides;	// 0x332fb285
- (void)setDuration:(double)duration;	// 0x332fc091
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x332fa14d
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x332f9f95
// declared property setter: - (void)setEffectID:(id)anId;	// 0x332f9c55
- (void)setLayerEffect:(id)effect;	// 0x332fd855
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x332fcac5
- (void)setPhaseInDuration:(double)duration;	// 0x332fc209
- (void)setPhaseOutDuration:(double)duration;	// 0x332fc381
// declared property setter: - (void)setPresetID:(id)anId;	// 0x332f9da9
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x332f9e6d
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x332fd325
- (id)slideForMCSlide:(id)mcslide;	// 0x332fe3ad
- (id)slideInformation;	// 0x332fd525
// declared property getter: - (id)slides;	// 0x332fa2e1
// declared property getter: - (id)texts;	// 0x332fb8fd
- (void)updateTiming;	// 0x332fd335
@end

