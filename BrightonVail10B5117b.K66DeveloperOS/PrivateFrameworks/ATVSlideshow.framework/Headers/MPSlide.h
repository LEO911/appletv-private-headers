/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "NSCoding.h"
#import "ATVSlideshow-Structs.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import "MPFilterSupport.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSMutableArray, MPLayerGroup, MCSlide, NSString, MPFrame;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport> {
	MPFrame *_frame;	// 4 = 0x4
	NSMutableDictionary *_attributes;	// 8 = 0x8
	NSString *_path;	// 12 = 0xc
	MPLayerGroup *_layerGroup;	// 16 = 0x10
	NSMutableArray *_filters;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCSlide *_slide;	// 28 = 0x1c
	NSObject<MPEffectSupport> *_parent;	// 32 = 0x20
	double _startTime;	// 36 = 0x24
	double _duration;	// 44 = 0x2c
	double _audioFadeInDuration;	// 52 = 0x34
	double _audioFadeOutDuration;	// 60 = 0x3c
	double _audioDuckInDuration;	// 68 = 0x44
	double _audioDuckOutDuration;	// 76 = 0x4c
	double _audioDuckLevel;	// 84 = 0x54
	float _scale;	// 92 = 0x5c
	float _rotation;	// 96 = 0x60
	CGPoint _center;	// 100 = 0x64
	float _audioVolume;	// 108 = 0x6c
	NSString *_sizingMode;	// 112 = 0x70
	int _mediaType;	// 116 = 0x74
	BOOL _isSecondary;	// 120 = 0x78
	BOOL _mirrorToDuplicatePaths;	// 121 = 0x79
	double _cachedShowTime;	// 124 = 0x7c
	double _cachedShowDuration;	// 132 = 0x84
	CGSize _cachedSize;	// 140 = 0x8c
}
@property(copy, nonatomic) NSString *absolutePath;	// G=0x333120e5; S=0x3331214d; 
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x333131c9; converted property
@property(assign, nonatomic) double audioDuckInDuration;	// G=0x33314689; S=0x333146a1; 
@property(assign, nonatomic) float audioDuckLevel;	// G=0x33314739; S=0x33314755; 
@property(assign, nonatomic) double audioDuckOutDuration;	// G=0x333146e1; S=0x333146f9; 
@property(assign, nonatomic) double audioFadeInDuration;	// G=0x333145d9; S=0x333145f1; 
@property(assign, nonatomic) double audioFadeOutDuration;	// G=0x33314631; S=0x33314649; 
@property(assign, nonatomic) float audioVolume;	// G=0x3331456d; S=0x3331459d; 
@property(assign, nonatomic) CGPoint center;	// G=0x33314f19; S=0x33314f31; 
@property(assign, nonatomic) double duration;	// G=0x3331442d; S=0x333144fd; 
@property(readonly, retain) NSMutableArray *filters;	// G=0x3331254d; converted property
@property(retain, nonatomic) MPFrame *frame;	// G=0x33311e35; S=0x33311e45; 
@property(assign) BOOL isSecondary;	// G=0x33315001; S=0x333158c5; converted property
@property(retain, nonatomic) MPLayerGroup *layerGroup;	// G=0x33312419; S=0x33312429; 
@property(retain) id parent;	// G=0x33314ddd; S=0x33316f89; converted property
@property(copy, nonatomic) NSString *path;	// G=0x33311ed9; S=0x33311ee9; 
@property(assign, nonatomic) float rotation;	// G=0x33314fb5; S=0x33314fc5; 
@property(assign, nonatomic) float scale;	// G=0x33314f69; S=0x33314f79; 
@property(retain) id scriptingAnimations;	// G=0x3331723d; S=0x33317599; converted property
@property(retain) id scriptingFrame;	// G=0x333177e1; S=0x33317895; converted property
@property(copy, nonatomic) NSString *sizingMode;	// G=0x33314799; S=0x3331490d; 
@property(retain) MCSlide *slide;	// G=0x33315579; S=0x33316161; converted property
@property(assign, nonatomic) double startTime;	// G=0x33314311; S=0x333143bd; 
+ (id)slide;	// 0x33310789
+ (id)slideWithPath:(id)path;	// 0x333107c1
- (id)init;	// 0x333107fd
- (id)initWithCoder:(id)coder;	// 0x33311119
- (id)initWithLayerGroup:(id)layerGroup;	// 0x33311a39
- (id)initWithPath:(id)path;	// 0x333119f5
// declared property getter: - (id)absolutePath;	// 0x333120e5
- (id)action;	// 0x33315805
- (void)addFilter:(id)filter;	// 0x3331255d
- (void)addFilters:(id)filters;	// 0x333125bd
- (id)animationPathForKey:(id)key;	// 0x33313431
// converted property getter: - (id)animationPaths;	// 0x333131c9
- (float)aspectRatio;	// 0x33314dc5
// declared property getter: - (double)audioDuckInDuration;	// 0x33314689
// declared property getter: - (float)audioDuckLevel;	// 0x33314739
// declared property getter: - (double)audioDuckOutDuration;	// 0x333146e1
// declared property getter: - (double)audioFadeInDuration;	// 0x333145d9
// declared property getter: - (double)audioFadeOutDuration;	// 0x33314631
// declared property getter: - (float)audioVolume;	// 0x3331456d
- (BOOL)canZoom;	// 0x33315769
// declared property getter: - (CGPoint)center;	// 0x33314f19
- (void)cleanup;	// 0x33315d0d
- (void)copyAnimationPaths:(id)paths;	// 0x33315c05
- (void)copyFilters:(id)filters;	// 0x33315ac5
- (void)copyFrame:(id)frame;	// 0x333159ed
- (void)copyLayerGroup:(id)group;	// 0x33315a59
- (void)copyVars:(id)vars;	// 0x333158d5
- (id)copyWithZone:(NSZone *)zone;	// 0x33311a99
- (int)countOfFilter;	// 0x333170bd
- (void)dealloc;	// 0x33311d1d
- (id)description;	// 0x33311b95
- (BOOL)determineShowTime:(double *)time showDuration:(double *)duration;	// 0x33315e99
- (void)dump;	// 0x33315589
- (void)duplicateAnimationPaths;	// 0x33316cb5
// declared property getter: - (double)duration;	// 0x3331442d
- (void)encodeWithCoder:(id)coder;	// 0x333109d1
// converted property getter: - (id)filters;	// 0x3331254d
- (void)finalize;	// 0x33311cdd
// declared property getter: - (id)frame;	// 0x33311e35
- (id)fullDebugLog;	// 0x333155b1
- (BOOL)hasMovie;	// 0x333150a9
- (int)index;	// 0x33314bcd
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x33312601
- (void)insertObject:(id)object inFilterAtIndex:(int)index;	// 0x333170fd
- (BOOL)isBreakInDocument:(id)document;	// 0x33316ff9
// converted property getter: - (BOOL)isSecondary;	// 0x33315001
- (id)keyframedAnimationPathForKey:(id)key;	// 0x33313611
// declared property getter: - (id)layerGroup;	// 0x33312419
- (int)liveIndex;	// 0x33314d01
- (double)maxDuration;	// 0x33315751
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x33312f01
- (id)nearestLayer;	// 0x33315e15
- (BOOL)needsStyleUpdateOnSlideChange;	// 0x333151bd
- (BOOL)needsTimingUpdateOnSlideChange;	// 0x3331537d
- (id)objectInFilterAtIndex:(int)index;	// 0x333170dd
- (float)originalAspectRatio;	// 0x3331553d
// converted property getter: - (id)parent;	// 0x33314ddd
- (id)parentDocument;	// 0x33315df5
- (id)parentEffect;	// 0x33314dcd
- (id)parentSubtitleEffect;	// 0x33314ded
// declared property getter: - (id)path;	// 0x33311ed9
- (void)removeAllFilters;	// 0x33312e5d
- (void)removeAnimationPathForKey:(id)key;	// 0x33313a15
- (void)removeFiltersAtIndices:(id)indices;	// 0x33312b3d
- (void)removeObjectFromFilterAtIndex:(int)index;	// 0x33317165
- (void)replaceObjectInFilterAtIndex:(int)index withObject:(id)object;	// 0x333171c9
- (void)resetCachedTimes;	// 0x33315885
// declared property getter: - (float)rotation;	// 0x33314fb5
// declared property getter: - (float)scale;	// 0x33314f69
// converted property getter: - (id)scriptingAnimations;	// 0x3331723d
// converted property getter: - (id)scriptingFrame;	// 0x333177e1
// declared property setter: - (void)setAbsolutePath:(id)path;	// 0x3331214d
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x33313671
// declared property setter: - (void)setAudioDuckInDuration:(double)duration;	// 0x333146a1
// declared property setter: - (void)setAudioDuckLevel:(float)level;	// 0x33314755
// declared property setter: - (void)setAudioDuckOutDuration:(double)duration;	// 0x333146f9
// declared property setter: - (void)setAudioFadeInDuration:(double)duration;	// 0x333145f1
// declared property setter: - (void)setAudioFadeOutDuration:(double)duration;	// 0x33314649
// declared property setter: - (void)setAudioVolume:(float)volume;	// 0x3331459d
// declared property setter: - (void)setCenter:(CGPoint)center;	// 0x33314f31
// declared property setter: - (void)setDuration:(double)duration;	// 0x333144fd
// declared property setter: - (void)setFrame:(id)frame;	// 0x33311e45
// converted property setter: - (void)setIsSecondary:(BOOL)secondary;	// 0x333158c5
- (void)setKeyframedAnimationPath:(id)path forKey:(id)key;	// 0x33313661
// declared property setter: - (void)setLayerGroup:(id)group;	// 0x33312429
- (void)setMediaType:(int)type;	// 0x33315741
- (void)setMirrorToDuplicatePaths:(BOOL)duplicatePaths;	// 0x333158b5
// converted property setter: - (void)setParent:(id)parent;	// 0x33316f89
// declared property setter: - (void)setPath:(id)path;	// 0x33311ee9
// declared property setter: - (void)setRotation:(float)rotation;	// 0x33314fc5
// declared property setter: - (void)setScale:(float)scale;	// 0x33314f79
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x33317599
// converted property setter: - (void)setScriptingFrame:(id)frame;	// 0x33317895
// declared property setter: - (void)setSizingMode:(id)mode;	// 0x3331490d
// converted property setter: - (void)setSlide:(id)slide;	// 0x33316161
// declared property setter: - (void)setStartTime:(double)time;	// 0x333143bd
- (void)setUserInfoAttribute:(id)attribute forKey:(id)key;	// 0x33315039
- (double)showDisplayStartTime;	// 0x333141d1
- (double)showDisplayTime;	// 0x33313f21
- (double)showDuration;	// 0x33313db9
- (double)showTime;	// 0x33313c91
// declared property getter: - (id)sizingMode;	// 0x33314799
// converted property getter: - (id)slide;	// 0x33315579
// declared property getter: - (double)startTime;	// 0x33314311
- (id)userInfoAttributeForKey:(id)key;	// 0x33315011
@end

