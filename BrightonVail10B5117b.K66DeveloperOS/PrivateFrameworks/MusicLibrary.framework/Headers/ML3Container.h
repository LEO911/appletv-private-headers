/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "ML3Entity.h"
#import "MusicLibrary-Structs.h"

@class NSArray, NSString, ML3Predicate;

@interface ML3Container : ML3Entity {
}
@property(readonly, assign) NSArray *cloudDisplayOrderingTerms;	// G=0x348b8ee1; 
@property(readonly, assign) NSArray *displayOrderingTerms;	// G=0x348b8f5d; 
@property(readonly, assign) ML3Predicate *dynamicPredicate;	// G=0x348b8aad; 
@property(readonly, assign, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;	// G=0x348b8bad; 
@property(readonly, assign) NSArray *limitOrderingTerms;	// G=0x348b8d9d; 
@property(readonly, assign) long long limitValue;	// G=0x348b8e19; 
@property(readonly, assign, getter=isLimitedByCount) BOOL limitedByCount;	// G=0x348b8b61; 
@property(readonly, assign) NSString *limitingProperty;	// G=0x348b8c99; 
@property(readonly, assign) ML3Predicate *staticPredicate;	// G=0x348b8a51; 
+ (void)_insertNewSmartPlaylist:(id)playlist criteriaBlob:(id)blob evaluationOrder:(unsigned long)order limited:(BOOL)limited trackOrder:(unsigned long)order5 distinguishedKind:(int)kind inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x348b7869
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs;	// 0x348b8441
+ (BOOL)createMissingBuiltInSmartPlaylists:(id)smartPlaylists;	// 0x348b7c95
+ (id)databaseTable;	// 0x34887499
+ (id)defaultOrderingProperties;	// 0x3488c8d1
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs inLibrary:(id)library;	// 0x348b8789
+ (id)extraTablesToDelete;	// 0x348b63b1
+ (id)foreignColumnForProperty:(id)property;	// 0x348b6395
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x348b6379
+ (BOOL)hasCriterionInCriteriaList:(SearchCriteriaList *)criteriaList forITDBTrackField:(int)itdbtrackField;	// 0x348b74d9
+ (void)initialize;	// 0x3488596d
+ (id)joinClausesForProperty:(id)property;	// 0x34887411
+ (id)nextFilepathForPlaylistType:(int)playlistType withPersistentID:(unsigned long long)persistentID inLibrary:(id)library;	// 0x348b63dd
+ (id)persistentIDColumnForTable:(id)table;	// 0x348b63c1
+ (void)populateDynamicContainersInLibrary:(id)library;	// 0x348b9c8d
+ (void)populateDynamicContainersInLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x348b9cb1
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library;	// 0x348b9cd5
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x348b9d0d
+ (void)populateSortOrdersOfPropertyValues:(id)propertyValues inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x348b65c9
+ (void)populateStaticItemsOfDynamicContainersInLibrary:(id)library;	// 0x348b93e5
+ (id)predicateForCriteriaList:(SearchCriteriaList *)criteriaList dynamicCriteria:(BOOL)criteria;	// 0x348b7589
+ (int)revisionTrackingCode;	// 0x348b6359
+ (id)sectionPropertyForProperty:(id)property;	// 0x348b635d
+ (BOOL)smartCriteriaCanBeEvaluated:(id)evaluated;	// 0x348b6525
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x348b6819
- (void)_accessCurrentSwappedPersisentIDsUsingBlock:(id)block;	// 0x348ba7cd
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size;	// 0x348ba785
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size notify:(BOOL)notify;	// 0x348ba499
- (BOOL)addTrackWithPersistentID:(long long)persistentID;	// 0x348bb511
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count;	// 0x348bb53d
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x348bb561
- (void)bindPopulateStatement:(id)statement withStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x348b9359
// declared property getter: - (id)cloudDisplayOrderingTerms;	// 0x348b8ee1
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x348b7351
// declared property getter: - (id)displayOrderingTerms;	// 0x348b8f5d
// declared property getter: - (id)dynamicPredicate;	// 0x348b8aad
- (id)evaluationOrderingTerms;	// 0x348b8d21
- (SearchCriteriaList *)importedCriteriaList;	// 0x348b89bd
- (BOOL)isCustomContainerOrderingDescending;	// 0x348b8c4d
- (BOOL)isEvaluationOrderingDescending;	// 0x348b8b09
// declared property getter: - (BOOL)isLimitOrderingDescending;	// 0x348b8bad
// declared property getter: - (BOOL)isLimitedByCount;	// 0x348b8b61
// declared property getter: - (id)limitOrderingTerms;	// 0x348b8d9d
// declared property getter: - (long long)limitValue;	// 0x348b8e19
// declared property getter: - (id)limitingProperty;	// 0x348b8c99
- (BOOL)moveTrackFromIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x348bb92d
- (id)populateSQLWithStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x348b9161
- (BOOL)removeAllTracks;	// 0x348ba7a9
- (BOOL)removeTracksAtIndexes:(id)indexes;	// 0x348bb385
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify;	// 0x348bb361
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify indexesTransformBlock:(id)block;	// 0x348bab3d
- (BOOL)removeTracksWithPersistentIDs:(const long long *)persistentIDs atFilteredIndexes:(id)filteredIndexes;	// 0x348bb3a5
- (BOOL)setContainsTrack:(BOOL)track forPersistentID:(long long)persistentID notify:(BOOL)notify;	// 0x348bb061
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count;	// 0x348bbd6d
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x348bbd91
- (BOOL)setTracksWithSwappedPersistentIDData:(id)swappedPersistentIDData;	// 0x348bc109
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x348b6e71
// declared property getter: - (id)staticPredicate;	// 0x348b8a51
@end

