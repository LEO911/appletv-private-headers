/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x33b2d2ed; S=0x33b2d94d; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x33b30a25; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x33b317ed; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x33b32ff5; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x33b2ce01; S=0x33b30c9d; 
@property(copy) NSString *emailAddress;	// G=0x33b2f041; S=0x33b2f0c9; 
@property(copy) NSArray *emailAddresses;	// G=0x33b2f1a1; S=0x33b2f23d; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x33b317a9; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x33b2f495; 
@property(copy) NSString *host;	// G=0x33b2ed91; S=0x33b2ee19; 
@property(readonly, assign) NSData *identityPersist;	// G=0x33b300a9; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x33b30365; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x33b2ff69; 
@property(assign) BOOL needsRediscovery;	// G=0x33b2fa1d; S=0x33b2fa3d; 
@property(copy) NSString *password;	// G=0x33b2e9cd; S=0x33b2eb25; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x33b2cb65; 
@property(assign) int port;	// G=0x33b2f5a9; S=0x33b2f635; 
@property(copy) NSURL *principalURL;	// G=0x33b2f7d5; S=0x33b2f895; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x33b2fa59; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x33b2d91d; 
@property(copy) NSString *scheme;	// G=0x33b2f6c1; S=0x33b2f749; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x33b31801; S=0x33b31815; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x33b2f9e1; S=0x33b2fa01; 
@property(assign, nonatomic) BOOL shouldFailAllTasks;	// G=0x33b3056d; S=0x33b31839; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x33b317bd; S=0x33b317d5; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x33b31849; S=0x33b31861; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x33b2f381; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x33b31825; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x33b3e621; S=0x33b3e625; converted property
@property(assign) BOOL useSSL;	// G=0x33b2eef1; S=0x33b2ef79; 
@property(copy) NSString *user;	// G=0x33b309b9; S=0x33b309c9; 
@property(copy) NSString *username;	// G=0x33b2da85; S=0x33b2db75; 
@property(retain) id version;	// G=0x33b2ece9; S=0x33b2ed35; converted property
+ (Class)accountClass;	// 0x33b2d835
+ (Class)classForAccountType:(id)accountType;	// 0x33b30c0d
+ (Class)clientClass;	// 0x33b2e259
+ (Class)daemonClass;	// 0x33b2e2a5
+ (id)defaultProperties;	// 0x33b30c09
+ (id)newAccountOfAccountType:(id)accountType;	// 0x33b30c45
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x33b2d735
- (id)initWithProperties:(id)properties;	// 0x33b2c7e1
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x33b31879
- (id)_exceptionsDict;	// 0x33b3018d
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x33b32c95
- (BOOL)_isIdentityManagedByProfile;	// 0x33b3016d
- (void)_removeHostsToTrust;	// 0x33b30dad
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x33b324e9
- (id)_serverSuffixesToAlwaysFail;	// 0x33b3197d
- (void)_setPersistentUUID:(id)uuid;	// 0x33b2d931
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x33b30ddd
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x33b2e501
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x33b2f2a1
// declared property getter: - (id)accountDescription;	// 0x33b2d2ed
- (id)accountID;	// 0x33b2ca69
- (int)accountIntPropertyForKey:(id)key;	// 0x33b2e569
- (BOOL)accountNeedsUpgrade;	// 0x33b30cb9
- (id)accountPropertyForKey:(id)key;	// 0x33b2e2f1
- (id)addUsernameToURL:(id)url;	// 0x33b2fff5
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x33b30a25
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x33b2f9dd
- (id)backingACAccountTypeIdentifier;	// 0x33b30f91
// declared property getter: - (id)backingAccountInfo;	// 0x33b317ed
// declared property getter: - (id)backingCredentialAccount;	// 0x33b32ff5
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x33b33265
- (void)cancelAllSearchQueries;	// 0x33b3c4a9
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x33b3330d
- (void)cancelSearchQuery:(id)query;	// 0x33b3c4a5
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x33b333ad
- (void)checkValidityWithConsumer:(id)consumer;	// 0x33b2f995
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x33b30705
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x33b307c9
- (void)cleanupAccountFiles;	// 0x33b30305
- (id)consumerForTask:(id)task;	// 0x33b2e7ed
- (id)contactsFolders;	// 0x33b333dd
- (CFURLStorageSessionRef)copyStorageSession;	// 0x33b307cd
// declared property getter: - (int)daAccountVersion;	// 0x33b2ce01
- (id)dataclassProperties;	// 0x33b2e141
- (void)dealloc;	// 0x33b2ccfd
- (id)defaultContactsFolder;	// 0x33b333d9
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x33b2fbd1
- (id)defaultEventsFolder;	// 0x33b33255
- (id)defaultNotesFolder;	// 0x33b4db55
- (id)defaultToDosFolder;	// 0x33b3e615
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x33b33445
- (id)deletedItemsFolder;	// 0x33b3343d
- (id)description;	// 0x33b30929
- (id)displayName;	// 0x33b2da29
- (id)domainOnly;	// 0x33b2ed8d
// declared property getter: - (id)emailAddress;	// 0x33b2f041
// declared property getter: - (id)emailAddresses;	// 0x33b2f1a1
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x33b317a9
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x33b2dcc1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x33b2f495
- (id)eventsFolders;	// 0x33b33259
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x33b301a9
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x33b54a85
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x33b31a09
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x33b321a9
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x33b30369
// declared property getter: - (id)host;	// 0x33b2ed91
// declared property getter: - (id)identityPersist;	// 0x33b300a9
- (id)inboxFolder;	// 0x33b33435
- (BOOL)isActiveSyncAccount;	// 0x33b306e9
- (BOOL)isCalDAVAccount;	// 0x33b306f1
- (BOOL)isCalDAVChildAccount;	// 0x33b306fd
- (BOOL)isCardDAVAccount;	// 0x33b306f9
// declared property getter: - (BOOL)isChildAccount;	// 0x33b30365
- (BOOL)isDAMMeAccount;	// 0x33b306f5
- (BOOL)isDisabled;	// 0x33b2d1f1
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x33b2dd89
- (BOOL)isEqualToAccount:(id)account;	// 0x33b30641
- (BOOL)isHotmailAccount;	// 0x33b30701
- (BOOL)isLDAPAccount;	// 0x33b306ed
// declared property getter: - (int)keychainAccessibilityType;	// 0x33b2ff69
- (id)localizedIdenticalAccountFailureMessage;	// 0x33b32ea5
- (id)localizedInvalidPasswordMessage;	// 0x33b32f4d
- (BOOL)monitorFolderWithID:(id)anId;	// 0x33b2fad1
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x33b2facd
// declared property getter: - (BOOL)needsRediscovery;	// 0x33b2fa1d
- (id)notesFolders;	// 0x33b4db59
// declared property getter: - (id)password;	// 0x33b2e9cd
- (id)passwordWithExpected:(BOOL)expected;	// 0x33b2e825
- (void)performSearchQuery:(id)query;	// 0x33b3c401
// declared property getter: - (id)persistentUUID;	// 0x33b2cb65
// declared property getter: - (int)port;	// 0x33b2f5a9
- (void)prepareForAccountSave;	// 0x33b2fc2d
// declared property getter: - (id)principalURL;	// 0x33b2f7d5
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x33b33441
- (void)removeAccountPropertyForKey:(id)key;	// 0x33b2e49d
- (void)removeClientCertificateData;	// 0x33b2fbd5
- (void)removeConsumerForTask:(id)task;	// 0x33b2e809
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x33b33005
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x33b2fa59
- (void)resetAccountID;	// 0x33b2d851
- (BOOL)resetCertWarnings;	// 0x33b30471
- (void)resetStatusReport;	// 0x33b3049d
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x33b33311
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x33b2e5d1
- (void)saveAccountProperties;	// 0x33b2fc31
- (void)saveAccountSettings;	// 0x33b30b51
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x33b30b01
// declared property getter: - (id)scheduleIdentifier;	// 0x33b2d91d
// declared property getter: - (id)scheme;	// 0x33b2f6c1
- (BOOL)searchQueriesRunning;	// 0x33b3c4ad
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x33b33261
- (id)sentItemsFolder;	// 0x33b33439
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x33b2e529
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x33b2d94d
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x33b2e591
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x33b2e3c5
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x33b2e791
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x33b30c9d
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x33b2f0c9
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x33b2f23d
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x33b2de65
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x33b2f51d
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x33b301ed
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x33b303ad
// declared property setter: - (void)setHost:(id)host;	// 0x33b2ee19
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x33b300c5
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x33b2fa3d
// declared property setter: - (void)setPassword:(id)password;	// 0x33b2eb25
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x33b2ea05
// declared property setter: - (void)setPort:(int)port;	// 0x33b2f635
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x33b2f895
// declared property setter: - (void)setScheme:(id)scheme;	// 0x33b2f749
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x33b31815
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x33b2fa01
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x33b31839
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x33b317d5
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x33b31861
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x33b2f409
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x33b3e625
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x33b2ef79
// declared property setter: - (void)setUser:(id)user;	// 0x33b309c9
// declared property setter: - (void)setUsername:(id)username;	// 0x33b2db75
// converted property setter: - (void)setVersion:(id)version;	// 0x33b2ed35
// declared property getter: - (id)settingsTemplate;	// 0x33b31801
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x33b2f9e1
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x33b3056d
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x33b317bd
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x33b31849
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x33b2f381
- (id)spinnerIdentifiers;	// 0x33b2e20d
- (id)stateString;	// 0x33b2e6e1
// declared property getter: - (id)statusReport;	// 0x33b31825
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x33b2e67d
- (void)stopMonitoringFolders;	// 0x33b2fb6d
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x33b2fb09
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x33b2dc75
- (int)supportsEmailFlagging;	// 0x33b3c4b5
- (int)supportsMailboxSearch;	// 0x33b3c4b1
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x33b2e619
- (id)syncStoreIdentifier;	// 0x33b2cced
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x33b54a89
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x33b333e1
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33b3325d
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33b4db5d
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33b3e61d
- (void)tearDown;	// 0x33b2fa69
- (id)toDosFolders;	// 0x33b3e619
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x33b3e621
- (BOOL)upgradeAccount;	// 0x33b30f31
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x33b30f8d
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x33b30f95
- (void)upgradeToHoodooAccountInfo;	// 0x33b30f89
- (id)urlForKeychain;	// 0x33b309d9
// declared property getter: - (BOOL)useSSL;	// 0x33b2eef1
// declared property getter: - (id)user;	// 0x33b309b9
// declared property getter: - (id)username;	// 0x33b2da85
- (id)usernameWithoutDomain;	// 0x33b2ed7d
- (BOOL)usesLegacyAccountSettings;	// 0x33b30911
// converted property getter: - (id)version;	// 0x33b2ece9
@end

