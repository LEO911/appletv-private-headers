/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import <NSObject.h> // Unknown library
#import "GEOResourceManifestServerProxyDelegate.h"

@class NSLock, NSDictionary, GEOActiveTileGroup, NSHashTable, NSMutableArray, GEOLocalizationRegionsInfo;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;	// 4 = 0x4
	NSHashTable *_serverProxyObservers;	// 8 = 0x8
	NSMutableArray *_pendingRegionalResourceLoads;	// 12 = 0xc
	GEOActiveTileGroup *_activeTileGroup;	// 16 = 0x10
	NSLock *_activeTileGroupLock;	// 20 = 0x14
	NSDictionary *_resourceNamesToPaths;	// 24 = 0x18
	GEOLocalizationRegionsInfo *_localizationRegionsInfo;	// 28 = 0x1c
	NSLock *_pendingRegionalResourceLoadsLock;	// 32 = 0x20
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup *activeTileGroup;	// G=0x34130be5; 
@property(assign) unsigned activeTileGroupIdentifier;	// G=0x3419d211; S=0x3419d239; converted property
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;	// G=0x34130cad; 
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// G=0x3419d2e1; @synthesize=_serverProxy
+ (void)disableServerConnection;	// 0x3419beb1
+ (void)setCallerWillStartServer;	// 0x3419bee5
+ (void)setHiDPI:(BOOL)dpi;	// 0x3419bee1
+ (id)sharedManager;	// 0x3412eb2d
+ (void)useLocalProxy;	// 0x3419bed1
+ (void)useRemoteProxy;	// 0x3419bec1
- (id)init;	// 0x3412eb59
- (id)_activeTileSetForKey:(const GEOTileKey *)key;	// 0x3419c1f1
- (void)_buildResourceNamesToPaths;	// 0x34130a65
- (id)_listenerForTileKeys:(id)tileKeys acquireLock:(BOOL)lock;	// 0x34137b79
- (void)_localeChanged:(id)changed;	// 0x3419c0a9
// declared property getter: - (id)activeTileGroup;	// 0x34130be5
// converted property getter: - (unsigned)activeTileGroupIdentifier;	// 0x3419d211
- (void)addServerProxyObserver:(id)observer;	// 0x3419c0d1
- (id)allResourceNames;	// 0x3419c6c1
- (id)authToken;	// 0x3419c089
- (id)baseURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x3419c21d
- (void)cancelRegionalResourcesRequest:(id)request;	// 0x3419c91d
- (void)closeServerConnection;	// 0x34137309
- (void)dealloc;	// 0x3419bf39
- (id)detailedDescription;	// 0x3419d07d
- (void)forceUpdate;	// 0x3419d2c1
- (void)getResourceManifestWithHandler:(id)handler;	// 0x3419d1f1
// declared property getter: - (BOOL)hasActiveTileGroup;	// 0x34130cad
- (BOOL)hasResourceManifest;	// 0x3419d1b5
- (BOOL)isAvailableForTileKey:(const GEOTileKey *)tileKey;	// 0x3419c3b1
- (id)languageForTileKey:(const GEOTileKey *)tileKey;	// 0x3419c3dd
- (void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;	// 0x341379a9
- (void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;	// 0x3419c8f1
- (id)localizationURLStringIfNecessaryForTileKey:(const GEOTileKey *)tileKey;	// 0x3419c279
- (int)mapMatchingTileSetStyle;	// 0x3419c165
- (unsigned)mapMatchingZoomLevel;	// 0x3419c169
- (id)multiTileURLStringForTileKey:(const GEOTileKey *)tileKey useStatusCodes:(BOOL *)codes;	// 0x3419c249
- (void)openServerConnection;	// 0x34153401
- (id)pathForResourceWithName:(id)name;	// 0x34130881
- (void)refreshActiveTileGroup;	// 0x3419d2a1
- (void)removeServerProxyObserver:(id)observer;	// 0x3419c145
- (void)resetActiveTileGroup;	// 0x3419d281
// declared property getter: - (id)serverProxy;	// 0x3419d2e1
- (oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;	// 0x3419c965
- (oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;	// 0x34139021
- (oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;	// 0x3419cd31
- (oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;	// 0x34138da9
// converted property setter: - (void)setActiveTileGroupIdentifier:(unsigned)identifier;	// 0x3419d239
- (BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;	// 0x34131491
- (double)timeToLiveForTileKey:(const GEOTileKey *)tileKey;	// 0x3419c385
- (unsigned)versionForTileKey:(const GEOTileKey *)tileKey;	// 0x3419c359
@end

