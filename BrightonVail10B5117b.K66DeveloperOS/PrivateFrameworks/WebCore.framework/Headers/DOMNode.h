/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

#import "WebCore-Structs.h"
#import "DOMEventTarget.h"
#import "DOMObject.h"

@class DOMDocument, NSString, DOMElement, DOMNamedNodeMap, DOMNodeList;

@interface DOMNode : DOMObject <DOMEventTarget> {
}
@property(readonly, assign) DOMNamedNodeMap *attributes;	// G=0x361ef3ed; 
@property(readonly, assign) NSString *baseURI;	// G=0x361efa15; 
@property(readonly, assign) DOMNodeList *childNodes;	// G=0x360b05d1; 
@property(readonly, assign) DOMNode *firstChild;	// G=0x36064bf9; 
@property(readonly, assign) BOOL isContentEditable;	// G=0x361f0069; 
@property(readonly, assign) DOMNode *lastChild;	// G=0x361ef2e1; 
@property(readonly, assign) NSString *localName;	// G=0x361ef8f9; 
@property(readonly, assign) NSString *namespaceURI;	// G=0x361ef505; 
@property(readonly, assign) DOMNode *nextSibling;	// G=0x36075e45; 
@property(readonly, assign) NSString *nodeName;	// G=0x360afd39; 
@property(readonly, assign) unsigned short nodeType;	// G=0x36075d41; 
@property(copy) NSString *nodeValue;	// G=0x360dc919; S=0x361ef125; 
@property(readonly, assign) DOMDocument *ownerDocument;	// G=0x3609e625; 
@property(readonly, assign) DOMElement *parentElement;	// G=0x361eff4d; 
@property(readonly, assign) DOMNode *parentNode;	// G=0x360d47b5; 
@property(copy) NSString *prefix;	// G=0x361ef621; S=0x361ef73d; 
@property(readonly, assign) DOMNode *previousSibling;	// G=0x360de889; 
@property(copy) NSString *textContent;	// G=0x361efbd5; S=0x361efd95; 
- (Element *)_linkElement;	// 0x360c3459
- (RootObject *)_rootObject;	// 0x36180d2d
- (WKQuad)absoluteQuad;	// 0x360c8051
- (WKQuad)absoluteQuadAndInsideFixedPosition:(BOOL *)position;	// 0x360c8081
- (id)absoluteQuads;	// 0x360c044d
- (void)addEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x361f1a59
- (void)addEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x3609a9cd
- (id)appendChild:(id)child;	// 0x360aedf9
// declared property getter: - (id)attributes;	// 0x361ef3ed
// declared property getter: - (id)baseURI;	// 0x361efa15
- (id)borderRadii;	// 0x360c0f91
- (CGRect)boundingBox;	// 0x360c0639
- (CGRect)boundingBoxUsingTransforms;	// 0x36180d61
- (id)boundingBoxes;	// 0x36202a91
- (CGRect)boundingFrame;	// 0x36181195
// declared property getter: - (id)childNodes;	// 0x360b05d1
- (id)cloneNode:(BOOL)node;	// 0x361f07f9
- (unsigned short)compareDocumentPosition:(id)position;	// 0x361f173d
- (float)computedFontSize;	// 0x361811b9
- (BOOL)contains:(id)contains;	// 0x361f184d
- (BOOL)containsOnlyInlineObjects;	// 0x36202c09
- (void)dealloc;	// 0x35ec9f69
- (id)description;	// 0x36180c25
- (BOOL)dispatchEvent:(id)event;	// 0x361f212d
- (void)finalize;	// 0x361ef0cd
- (id)findExplodedTextNodeAtPoint:(CGPoint)point;	// 0x36203251
// declared property getter: - (id)firstChild;	// 0x36064bf9
- (BOOL)hasAttributes;	// 0x361f0ec5
- (BOOL)hasChildNodes;	// 0x36064bbd
- (CGRect)hrefFrame;	// 0x36180db9
- (id)hrefLabel;	// 0x36180e11
- (id)hrefTarget;	// 0x360c340d
- (id)hrefTitle;	// 0x36180f81
- (id)hrefURL;	// 0x360c3481
- (WKQuad)innerFrameQuad;	// 0x360cc959
- (id)insertBefore:(id)before :(id)arg2;	// 0x361f030d
- (id)insertBefore:(id)before refChild:(id)child;	// 0x361f0169
- (void)inspect;	// 0x361f195d
// declared property getter: - (BOOL)isContentEditable;	// 0x361f0069
- (BOOL)isDefaultNamespace:(id)aNamespace;	// 0x361f1339
- (BOOL)isEqualNode:(id)node;	// 0x361f0fd1
- (BOOL)isSameNode:(id)node;	// 0x360c9651
- (BOOL)isSelectableBlock;	// 0x36202c55
- (BOOL)isSupported:(id)supported :(id)arg2;	// 0x361f0c95
- (BOOL)isSupported:(id)supported version:(id)version;	// 0x361f0a65
// declared property getter: - (id)lastChild;	// 0x361ef2e1
- (id)lineBoxQuads;	// 0x360c0c39
- (id)lineBoxRects;	// 0x36180d51
// declared property getter: - (id)localName;	// 0x361ef8f9
- (id)lookupNamespaceURI:(id)uri;	// 0x361f14e5
- (id)lookupPrefix:(id)prefix;	// 0x361f10e1
// declared property getter: - (id)namespaceURI;	// 0x361ef505
- (id)nextFocusNode;	// 0x360cb1cd
// declared property getter: - (id)nextSibling;	// 0x36075e45
// declared property getter: - (id)nodeName;	// 0x360afd39
// declared property getter: - (unsigned short)nodeType;	// 0x36075d41
// declared property getter: - (id)nodeValue;	// 0x360dc919
- (void)normalize;	// 0x361f0969
// declared property getter: - (id)ownerDocument;	// 0x3609e625
// declared property getter: - (id)parentElement;	// 0x361eff4d
// declared property getter: - (id)parentNode;	// 0x360d47b5
// declared property getter: - (id)prefix;	// 0x361ef621
- (id)previousFocusNode;	// 0x360cc1a1
// declared property getter: - (id)previousSibling;	// 0x360de889
- (id)rangeOfContainingParagraph;	// 0x36202c95
- (id)removeChild:(id)child;	// 0x360b0739
- (void)removeEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x361f1f09
- (void)removeEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x361f1ce5
- (id)replaceChild:(id)child :(id)arg2;	// 0x361f0655
- (id)replaceChild:(id)child oldChild:(id)child2;	// 0x361f04b1
// declared property setter: - (void)setNodeValue:(id)value;	// 0x361ef125
// declared property setter: - (void)setPrefix:(id)prefix;	// 0x361ef73d
// declared property setter: - (void)setTextContent:(id)content;	// 0x361efd95
// declared property getter: - (id)textContent;	// 0x361efbd5
- (float)textHeight;	// 0x36203215
- (id)textRects;	// 0x361811e5
@end

