/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import <NSObject.h> // Unknown library
#import "Notes-Structs.h"

@class NSNumber, NSManagedObjectModel, NSManagedObjectContext, NSPersistentStoreCoordinator, NSPredicate, CPExclusiveLock, NoteStoreObject, NoteAccountObject, NSMutableDictionary, NSString;

@interface NoteContext : NSObject {
	NSManagedObjectModel *_managedObjectModel;	// 4 = 0x4
	NSManagedObjectContext *_managedObjectContext;	// 8 = 0x8
	NSPersistentStoreCoordinator *_persistentStoreCoordinator;	// 12 = 0xc
@private
	NSPredicate *_searchPredicate;	// 16 = 0x10
	NoteStoreObject *_localStore;	// 20 = 0x14
@protected
	NoteAccountObject *_localAccount;	// 24 = 0x18
	CXIndexRef __SharedNoteStoreSearchIndex;	// 28 = 0x1c
	CPExclusiveLock *__SharedNoteStoreSearchIndexLock;	// 32 = 0x20
	int __SharedNoteStoreSearchIndexCount;	// 36 = 0x24
	BOOL _isIndexing;	// 40 = 0x28
	NSManagedObjectContext *_nextIdContext;	// 44 = 0x2c
	CPExclusiveLock *_nextIdLock;	// 48 = 0x30
	NSNumber *_nextId;	// 52 = 0x34
	CPExclusiveLock *_objectCreationLock;	// 56 = 0x38
	unsigned _notificationCount;	// 60 = 0x3c
	BOOL _logChanges;	// 64 = 0x40
	BOOL _indexInBatches;	// 65 = 0x41
	BOOL _hasPriorityInSaveConflicts;	// 66 = 0x42
	BOOL _inMigrator;	// 67 = 0x43
	NSString *_testingFilePrefix;	// 68 = 0x44
	NSString *_testingFilePath;	// 72 = 0x48
@private
	NSMutableDictionary *_notePropertyObjectsRealized;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL isIndexing;	// G=0x349c6cdd; @synthesize=_isIndexing
@property(readonly, retain) NoteAccountObject *localAccount;	// G=0x349befc1; converted property
@property(readonly, retain) NoteStoreObject *localStore;	// G=0x349bef29; converted property
@property(readonly, assign, nonatomic) NSManagedObjectContext *managedObjectContext;	// G=0x349c1c41; 
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x349c1de9; converted property
@property(readonly, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;	// G=0x349c2009; converted property
+ (BOOL)databaseIsCorrupt:(id)corrupt;	// 0x349b9839
+ (BOOL)shouldLogIndexing;	// 0x349b97b9
- (id)init;	// 0x349bb9a9
- (id)initForMigrator;	// 0x349bb5fd
- (id)initWithTestingFilePrefix:(id)testingFilePrefix;	// 0x349bb661
- (id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;	// 0x349bb6d1
- (id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;	// 0x349bb575
- (void).cxx_destruct;	// 0x349c6cfd
- (void)_createLocalAccount:(id *)account andStore:(id *)store;	// 0x349b9b19
- (id)_notePropertyObjectForKey:(id)key;	// 0x349bf841
- (id)accountForAccountId:(id)accountId;	// 0x349beaf5
- (id)allAccounts;	// 0x349be795
- (id)allNotes;	// 0x349bd9bd
- (id)allNotesInCollection:(id)collection;	// 0x349bdacd
- (id)allNotesMatchingPredicate:(id)predicate;	// 0x349bdba5
- (id)allNotesWithoutBodiesInCollection:(id)collection;	// 0x349bdf11
- (id)allStores;	// 0x349be281
- (id)allVisibleNotes;	// 0x349bd20d
- (id)allVisibleNotesInCollection:(id)collection;	// 0x349bd255
- (id)allVisibleNotesMatchingPredicate:(id)predicate;	// 0x349bd32d
- (void)cleanUpLocks;	// 0x349c69f9
- (void)clearCaches;	// 0x349bc0d5
- (id)collectionForInfo:(id)info;	// 0x349be065
- (id)collectionForObjectID:(id)objectID;	// 0x349bc31d
- (id)copyNotesForSearch:(void *)search complete:(char *)complete;	// 0x349c601d
- (id)copyNotesForSearch:(void *)search predicate:(id)predicate complete:(char *)complete;	// 0x349c6055
- (unsigned)countOfNotes;	// 0x349bda4d
- (unsigned)countOfNotesInCollection:(id)collection;	// 0x349bdb3d
- (unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;	// 0x349bdc5d
- (unsigned)countOfStores;	// 0x349be56d
- (unsigned)countOfVisibleNotes;	// 0x349bd231
- (unsigned)countOfVisibleNotesInCollection:(id)collection;	// 0x349bd2c5
- (unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;	// 0x349bd4b9
- (void)dealloc;	// 0x349bba09
- (id)defaultStoreForNewNote;	// 0x349beded
- (BOOL)deleteAccount:(id)account;	// 0x349bf441
- (void)deleteChanges:(id)changes;	// 0x349bc6fd
- (BOOL)deleteIndexFile;	// 0x349c6c61
- (void)deleteNote:(id)note;	// 0x349bc44d
- (void)deleteNoteRegardlessOfConstraints:(id)constraints;	// 0x349bc6a9
- (BOOL)deleteStore:(id)store;	// 0x349bf4cd
- (void)destroySearchIndex;	// 0x349c3709
- (void)enableChangeLogging:(BOOL)logging;	// 0x349bc855
- (id)findNotesWithText:(id)text betweenDate:(id)date andDate:(id)date3;	// 0x349c63c9
- (BOOL)forceDeleteAccount:(id)account;	// 0x349bf29d
- (void)forceSetUpUniqueObjects;	// 0x349ba6bd
- (id)getNextIdObject;	// 0x349c0b7d
- (void)handleMigration;	// 0x349bfd59
- (BOOL)handleSaveErrors:(id)errors;	// 0x349bcaa1
- (BOOL)hasMultipleEnabledStores;	// 0x349bf771
- (void)indexInBatches:(BOOL)batches;	// 0x349c3c31
- (void)indexNotes:(id)notes;	// 0x349c2919
- (void)invalidate;	// 0x349bc879
// declared property getter: - (BOOL)isIndexing;	// 0x349c6cdd
- (id)liveNotesNeedingBodiesPredicate;	// 0x349bbb11
// converted property getter: - (id)localAccount;	// 0x349befc1
// converted property getter: - (id)localStore;	// 0x349bef29
// declared property getter: - (id)managedObjectContext;	// 0x349c1c41
// converted property getter: - (id)managedObjectModel;	// 0x349c1de9
- (id)newFRCForCollection:(id)collection delegate:(id)delegate;	// 0x349bbb95
- (id)newFetchRequestForNotes;	// 0x349bbf39
- (void *)newSearchContextWithText:(id)text;	// 0x349c5f91
- (id)newlyAddedAccount;	// 0x349bea81
- (id)newlyAddedNote;	// 0x349bc1bd
- (id)newlyAddedStore;	// 0x349be20d
- (id)nextIndex;	// 0x349c12b5
- (id)noteChangeWithType:(int)type store:(id)store;	// 0x349c4b49
- (id)noteForObjectID:(id)objectID;	// 0x349bdd05
- (BOOL)noteIsSafeToAccess:(id)access;	// 0x349c6a6d
- (id)notesForIntegerIds:(id)integerIds;	// 0x349bdd9d
- (id)notesToResumeIndexing;	// 0x349c280d
- (id)pathForIndex;	// 0x349c1981
- (id)pathForPersistentStore;	// 0x349c1815
// converted property getter: - (id)persistentStoreCoordinator;	// 0x349c2009
- (id)propertyValueForKey:(id)key;	// 0x349bfcf1
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;	// 0x349c3c55
- (void)removeConflictingSqliteAndIdxFiles;	// 0x349bb0a9
- (void)removeSqliteAndIdxFiles;	// 0x349bae29
- (void)resetNotificationCount;	// 0x349c3d81
- (void)resumeIndexing;	// 0x349c3af5
- (id)rootDirectory;	// 0x349c17e1
- (BOOL)save:(id *)save;	// 0x349bc939
- (void)saveNotesToResumeIndexing:(id)resumeIndexing;	// 0x349c253d
- (BOOL)saveOutsideApp:(id *)app;	// 0x349bc911
- (BOOL)saveSilently:(id *)silently;	// 0x349bd069
- (CXIndexRef)searchIndex:(char *)index;	// 0x349c30dd
- (void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;	// 0x349c1b55
- (void)setPropertyValue:(id)value forKey:(id)key;	// 0x349bfbc5
- (void)setUpCoreDataStack;	// 0x349bb1d9
- (BOOL)setUpLastIndexTid;	// 0x349ba1c9
- (BOOL)setUpLocalAccountAndStore;	// 0x349b9c91
- (void)setUpUniqueObjects;	// 0x349ba809
- (BOOL)shouldDisableLocalStore;	// 0x349bf6c5
- (BOOL)shouldResumeIndexing;	// 0x349c2791
- (void)sortNotes:(id)notes;	// 0x349bc101
- (id)storeForObjectID:(id)objectID;	// 0x349bc3b5
- (id)storeOptions;	// 0x349b99cd
- (void)tearDownCoreDataStack;	// 0x349bb45d
- (void)trackChanges:(id)changes;	// 0x349c4d2d
- (void)updateSearchIndex:(id)index;	// 0x349c3da5
- (id)urlForPersistentStore;	// 0x349c1aed
- (id)visibleNoteForObjectID:(id)objectID;	// 0x349bd635
- (id)visibleNotesForIntegerIds:(id)integerIds;	// 0x349bd7a1
- (id)visibleNotesPredicate;	// 0x349bba59
- (void)wrapUpIndexing;	// 0x349c37f9
@end

