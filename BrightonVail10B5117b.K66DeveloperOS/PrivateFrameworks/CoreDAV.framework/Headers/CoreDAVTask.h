/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV
 */

#import <NSObject.h> // Unknown library
#import "CoreDAVSubmittable.h"
#import "CoreDAV-Structs.h"

@class NSHTTPURLResponse, CoreDAVErrorItem, NSURLConnection, NSURLRequest, NSError, NSDate, NSDictionary, NSURL, NSData, NSMutableArray, NSMutableDictionary, CoreDAVRequestLogger;
@protocol CoreDAVTaskManager, CoreDAVTaskDelegate, CoreDAVAccountInfoProvider, CoreDAVResponseBodyParser;

@interface CoreDAVTask : NSObject <CoreDAVSubmittable> {
	id<CoreDAVTaskManager> _taskManager;	// 4 = 0x4
	id<CoreDAVAccountInfoProvider> _accountInfoProvider;	// 8 = 0x8
	int _numDownloadedElements;	// 12 = 0xc
	int _depth;	// 16 = 0x10
	NSHTTPURLResponse *_response;	// 20 = 0x14
	NSURLConnection *_connection;	// 24 = 0x18
	NSURLRequest *_request;	// 28 = 0x1c
	double _timeoutInterval;	// 32 = 0x20
	int _responseStatusCode;	// 40 = 0x28
	NSDate *_dateConnectionWentOut;	// 44 = 0x2c
	BOOL _didSendRequest;	// 48 = 0x30
	BOOL _didFailWithError;	// 49 = 0x31
	BOOL _didCancel;	// 50 = 0x32
	BOOL _didReceiveResponse;	// 51 = 0x33
	BOOL _didReceiveData;	// 52 = 0x34
	BOOL _didFinishLoading;	// 53 = 0x35
	BOOL _finished;	// 54 = 0x36
	void *_context;	// 56 = 0x38
	BOOL _receivedBadPasswordResponse;	// 60 = 0x3c
	BOOL _justTriedTokenAuth;	// 61 = 0x3d
	BOOL _everTriedTokenAuth;	// 62 = 0x3e
	BOOL _requestIsCompressed;	// 63 = 0x3f
	BOOL _compressedRequestFailed;	// 64 = 0x40
	NSError *_passwordNotificationError;	// 68 = 0x44
	id<CoreDAVResponseBodyParser> _responseBodyParser;	// 72 = 0x48
	CoreDAVRequestLogger *_logger;	// 76 = 0x4c
	NSURL *_url;	// 80 = 0x50
	BOOL _allowAutomaticRedirects;	// 84 = 0x54
	id<CoreDAVTaskDelegate> _delegate;	// 88 = 0x58
	id _requestProgressBlock;	// 92 = 0x5c
	id _responseProgressBlock;	// 96 = 0x60
	id _completionBlock;	// 100 = 0x64
	NSError *_error;	// 104 = 0x68
	unsigned _totalBytesReceived;	// 108 = 0x6c
	NSMutableDictionary *_overriddenHeaders;	// 112 = 0x70
	NSMutableArray *_redirectHistory;	// 116 = 0x74
	NSDictionary *_requestProperties;	// 120 = 0x78
	NSData *_fakeResponseData;	// 124 = 0x7c
	BOOL _haveParsedFakeResponseData;	// 128 = 0x80
	CoreDAVErrorItem *_forbiddenErrorItem;	// 132 = 0x84
}
@property(assign, nonatomic) id<CoreDAVAccountInfoProvider> accountInfoProvider;	// G=0x338ed901; S=0x338ed911; @synthesize=_accountInfoProvider
@property(assign, nonatomic) BOOL allowAutomaticRedirects;	// G=0x338edaf9; S=0x338edb09; @synthesize=_allowAutomaticRedirects
@property(copy, nonatomic) id completionBlock;	// G=0x338eda95; S=0x338edaa9; @synthesize=_completionBlock
@property(assign, nonatomic) void *context;	// G=0x338ed941; S=0x338ed951; @synthesize=_context
@property(assign, nonatomic) id<CoreDAVTaskDelegate> delegate;	// G=0x338ed921; S=0x338ed931; @synthesize=_delegate
@property(assign) int depth;	// G=0x338ed975; S=0x338ed989; @synthesize=_depth
@property(retain, nonatomic) NSError *error;	// G=0x338edab9; S=0x338edac9; @synthesize=_error
@property(readonly, assign, getter=isFinished) BOOL finished;	// G=0x338eb1bd; 
@property(readonly, assign) int numDownloadedElements;	// G=0x338ed6e9; converted property
@property(copy, nonatomic) id requestProgressBlock;	// G=0x338eda4d; S=0x338eda61; @synthesize=_requestProgressBlock
@property(retain) NSDictionary *requestProperties;	// G=0x338edb19; S=0x338edb2d; @synthesize=_requestProperties
@property(retain) id<CoreDAVResponseBodyParser> responseBodyParser;	// G=0x338eda09; S=0x338eda1d; @synthesize=_responseBodyParser
@property(readonly, assign) NSDictionary *responseHeaders;	// G=0x338ed4d5; 
@property(copy, nonatomic) id responseProgressBlock;	// G=0x338eda71; S=0x338eda85; @synthesize=_responseProgressBlock
@property(assign, nonatomic) int responseStatusCode;	// G=0x338eda2d; S=0x338eda3d; @synthesize=_responseStatusCode
@property(assign, nonatomic) id<CoreDAVTaskManager> taskManager;	// G=0x338ed8e1; S=0x338ed8f1; @synthesize=_taskManager
@property(assign) double timeoutInterval;	// G=0x338ed9a1; S=0x338ed9d5; @synthesize=_timeoutInterval
@property(assign, nonatomic) unsigned totalBytesReceived;	// G=0x338edad9; S=0x338edae9; @synthesize=_totalBytesReceived
@property(readonly, assign) NSURL *url;	// G=0x338ed961; @synthesize=_url
+ (id)stringFromDepth:(int)depth;	// 0x338ea535
+ (unsigned)uniqueQueryID;	// 0x338e9365
- (id)initWithURL:(id)url;	// 0x338e9379
- (id)_applyAuthenticationChain:(CFArrayRef)chain toRequest:(id)request;	// 0x338eb20d
- (id)_applyStorageSession:(CFURLStorageSessionRef)session toRequest:(id)request;	// 0x338eb305
- (id)_compressBodyData:(id)data;	// 0x338ea1a5
- (id)_createBodyData;	// 0x338ea32d
- (void)_failImmediately;	// 0x338ea3fd
- (void)_handleBadPasswordResponse;	// 0x338eb3a1
- (BOOL)_includeGeneralHeaders;	// 0x338e9985
// declared property getter: - (id)accountInfoProvider;	// 0x338ed901
- (id)additionalHeaderValues;	// 0x338ea491
// declared property getter: - (BOOL)allowAutomaticRedirects;	// 0x338edaf9
- (unsigned)cachePolicy;	// 0x338ea531
// declared property getter: - (id)completionBlock;	// 0x338eda95
- (BOOL)connection:(id)connection canAuthenticateAgainstProtectionSpace:(id)space;	// 0x338ec15d
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x338ed0dd
- (void)connection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;	// 0x338ec329
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x338eb55d
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x338ecff9
- (void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;	// 0x338eb509
- (id)connection:(id)connection needNewBodyStream:(id)stream;	// 0x338ebd09
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;	// 0x338ebd65
- (void)connection:(id)connection willSendRequestForAuthenticationChallenge:(id)authenticationChallenge;	// 0x338ec6c9
- (void)connectionDidFinishLoading:(id)connection;	// 0x338ec9d5
- (BOOL)connectionShouldUseCredentialStorage:(id)connection;	// 0x338ec2e1
// declared property getter: - (void *)context;	// 0x338ed941
- (id)copyDefaultParserForContentType:(id)contentType;	// 0x338e99ed
- (void)dealloc;	// 0x338e9455
// declared property getter: - (id)delegate;	// 0x338ed921
// declared property getter: - (int)depth;	// 0x338ed975
- (id)description;	// 0x338e9759
// declared property getter: - (id)error;	// 0x338edab9
- (void)finishCoreDAVTaskWithError:(id)error;	// 0x338eae4d
- (void)finishEarlyWithError:(id)error;	// 0x338ed505
- (id)httpMethod;	// 0x338e9979
// declared property getter: - (BOOL)isFinished;	// 0x338eb1bd
- (id)lastRedirectURL;	// 0x338ebd45
- (void)loadRequest:(id)request;	// 0x338e99f5
- (BOOL)markAsFinished;	// 0x338eb1e1
// converted property getter: - (int)numDownloadedElements;	// 0x338ed6e9
- (void)overrideRequestHeader:(id)header withValue:(id)value;	// 0x338ea495
- (void)performCoreDAVTask;	// 0x338ea569
- (void)reportStatusWithError:(id)error;	// 0x338ed6f9
- (id)requestBody;	// 0x338e99c5
- (id)requestBodyStream;	// 0x338e99c1
// declared property getter: - (id)requestProgressBlock;	// 0x338eda4d
// declared property getter: - (id)requestProperties;	// 0x338edb19
- (void)reset;	// 0x338ed5fd
// declared property getter: - (id)responseBodyParser;	// 0x338eda09
// declared property getter: - (id)responseHeaders;	// 0x338ed4d5
// declared property getter: - (id)responseProgressBlock;	// 0x338eda71
// declared property getter: - (int)responseStatusCode;	// 0x338eda2d
// declared property setter: - (void)setAccountInfoProvider:(id)provider;	// 0x338ed911
// declared property setter: - (void)setAllowAutomaticRedirects:(BOOL)redirects;	// 0x338edb09
// declared property setter: - (void)setCompletionBlock:(id)block;	// 0x338edaa9
// declared property setter: - (void)setContext:(void *)context;	// 0x338ed951
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x338ed931
// declared property setter: - (void)setDepth:(int)depth;	// 0x338ed989
// declared property setter: - (void)setError:(id)error;	// 0x338edac9
// declared property setter: - (void)setRequestProgressBlock:(id)block;	// 0x338eda61
// declared property setter: - (void)setRequestProperties:(id)properties;	// 0x338edb2d
// declared property setter: - (void)setResponseBodyParser:(id)parser;	// 0x338eda1d
// declared property setter: - (void)setResponseProgressBlock:(id)block;	// 0x338eda85
// declared property setter: - (void)setResponseStatusCode:(int)code;	// 0x338eda3d
// declared property setter: - (void)setTaskManager:(id)manager;	// 0x338ed8f1
// declared property setter: - (void)setTimeoutInterval:(double)interval;	// 0x338ed9d5
// declared property setter: - (void)setTotalBytesReceived:(unsigned)received;	// 0x338edae9
- (BOOL)shouldLogResponseBody;	// 0x338e99f1
- (void)startModal;	// 0x338ed4f5
- (void)submitWithTaskManager:(id)taskManager;	// 0x338ed535
// declared property getter: - (id)taskManager;	// 0x338ed8e1
- (void)tearDownResources;	// 0x338ea0f5
// declared property getter: - (double)timeoutInterval;	// 0x338ed9a1
// declared property getter: - (unsigned)totalBytesReceived;	// 0x338edad9
// declared property getter: - (id)url;	// 0x338ed961
- (BOOL)validate:(id *)validate;	// 0x338eae49
@end

