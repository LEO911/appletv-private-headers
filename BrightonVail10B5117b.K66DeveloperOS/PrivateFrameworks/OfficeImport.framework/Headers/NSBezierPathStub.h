/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


@interface NSBezierPathStub : NSObject <NSCopying> {
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x34cc0055; S=0x34cc0059; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x34cbe95d; converted property
@property(readonly, assign) int elementCount;	// G=0x34cbebc1; converted property
@property(assign) float flatness;	// G=0x34cbdd45; S=0x34cbdd55; converted property
@property(assign) unsigned lineCapStyle;	// G=0x34cbdc89; S=0x34cbdc9d; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x34cbdcbd; S=0x34cbdcd1; converted property
@property(assign) float lineWidth;	// G=0x34cbdc69; S=0x34cbdc79; converted property
@property(assign) float miterLimit;	// G=0x34cbdd25; S=0x34cbdd35; converted property
@property(assign) unsigned windingRule;	// G=0x34cbdcf1; S=0x34cbdd05; converted property
+ (id)bezierPath;	// 0x34cbcee1
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x34cbcf59
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x34cbcf19
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x34cbcf99
+ (void)clipRect:(CGRect)rect;	// 0x34cbd15d
+ (CGContextRef)currentCGContext;	// 0x34cbce91
+ (float)defaultFlatness;	// 0x34cbd2c9
+ (unsigned)defaultLineCapStyle;	// 0x34cbd309
+ (unsigned)defaultLineJoinStyle;	// 0x34cbd329
+ (float)defaultLineWidth;	// 0x34cbd349
+ (float)defaultMiterLimit;	// 0x34cbd2a9
+ (unsigned)defaultWindingRule;	// 0x34cbd2e9
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x34cbd245
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x34cbd3a5
+ (void)fillRect:(CGRect)rect;	// 0x34cbcfed
+ (float)flatness;	// 0x34cc04c9
+ (void)initialize;	// 0x34cbcdf9
+ (unsigned)lineCapStyle;	// 0x34cc0509
+ (unsigned)lineJoinStyle;	// 0x34cc0529
+ (float)lineWidth;	// 0x34cc0549
+ (float)miterLimit;	// 0x34cc04a9
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x34cbce3d
+ (void)setDefaultFlatness:(float)flatness;	// 0x34cbd2b9
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x34cbd2f9
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x34cbd319
+ (void)setDefaultLineWidth:(float)width;	// 0x34cbd339
+ (void)setDefaultMiterLimit:(float)limit;	// 0x34cbd299
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x34cbd2d9
+ (void)setFlatness:(float)flatness;	// 0x34cc04b9
+ (void)setLineCapStyle:(unsigned)style;	// 0x34cc04f9
+ (void)setLineJoinStyle:(unsigned)style;	// 0x34cc0519
+ (void)setLineWidth:(float)width;	// 0x34cc0539
+ (void)setMiterLimit:(float)limit;	// 0x34cc0499
+ (void)setWindingRule:(unsigned)rule;	// 0x34cc04d9
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x34cbd1bd
+ (void)strokeRect:(CGRect)rect;	// 0x34cbd04d
+ (unsigned)windingRule;	// 0x34cc04e9
- (id)init;	// 0x34cbd561
- (id).cxx_construct;	// 0x34cc005d
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x34cc0061
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x34cbf1d5
- (id)_copyFlattenedPath;	// 0x34cbe5b9
- (void)_deviceClosePath;	// 0x34cc02ed
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34cc0269
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x34cc0219
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x34cc0141
- (void)_doPath;	// 0x34cbded1
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x34cc03ad
- (int)_locationOfPoint:(CGPoint)point;	// 0x34cbfbbd
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x34cbec39
- (void)addClip;	// 0x34cbe149
- (void)appendBezierPath:(id)path;	// 0x34cbee69
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x34cbf619
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x34cbf5d9
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x34cbf359
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x34cbf07d
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x34cbf001
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x34cbef75
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x34cbf939
- (id)bezierPathByFlatteningPath;	// 0x34cbe521
- (id)bezierPathByReversingPath;	// 0x34cbe60d
- (CGRect)bounds;	// 0x34cbeae5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x34cc0055
- (void)closePath;	// 0x34cbda59
- (BOOL)containsPoint:(CGPoint)point;	// 0x34cbffc5
// converted property getter: - (CGRect)controlPointBounds;	// 0x34cbe95d
- (id)copyWithZone:(NSZone *)zone;	// 0x34cbd7c1
- (CGPoint)currentPoint;	// 0x34cbe8d9
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34cbd9c5
- (void)dealloc;	// 0x34cbd6b1
- (id)description;	// 0x34cc0559
- (unsigned)elementAtIndex:(int)index;	// 0x34cbec25
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x34cbed21
// converted property getter: - (int)elementCount;	// 0x34cbebc1
- (void)fill;	// 0x34cbe0d1
- (void)finalize;	// 0x34cbd739
// converted property getter: - (float)flatness;	// 0x34cbdd45
- (void)flattenIntoPath:(id)path;	// 0x34cbe419
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x34cbde4d
- (BOOL)isEmpty;	// 0x34cbe8c1
- (BOOL)isHitByPath:(id)path;	// 0x34cc0045
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x34cc0029
- (BOOL)isHitByRect:(CGRect)rect;	// 0x34cc0041
- (BOOL)isStrokeHitByPath:(id)path;	// 0x34cc0051
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x34cc0049
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x34cc004d
// converted property getter: - (unsigned)lineCapStyle;	// 0x34cbdc89
// converted property getter: - (unsigned)lineJoinStyle;	// 0x34cbdcbd
- (void)lineToPoint:(CGPoint)point;	// 0x34cbd955
// converted property getter: - (float)lineWidth;	// 0x34cbdc69
// converted property getter: - (float)miterLimit;	// 0x34cbdd25
- (void)moveToPoint:(CGPoint)point;	// 0x34cbd945
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34cbdbb5
- (void)relativeLineToPoint:(CGPoint)point;	// 0x34cbdb4d
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x34cbdae5
- (void)removeAllPoints;	// 0x34cbda69
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x34cbedb1
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x34cc0059
- (void)setClip;	// 0x34cbe1c9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x34cbdd55
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x34cbdc9d
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x34cbdd65
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x34cbdcd1
// converted property setter: - (void)setLineWidth:(float)width;	// 0x34cbdc79
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x34cbdd35
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x34cbdd05
- (void)stroke;	// 0x34cbdfe5
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x34cbe221
- (void)transformUsingAffineTransform:(id)transform;	// 0x34cbe801
// converted property getter: - (unsigned)windingRule;	// 0x34cbdcf1
@end

