/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import <NSObject.h> // Unknown library


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x3377ccdd; S=0x33794e51; converted property
@property(assign) id delegate;	// G=0x33795e05; S=0x3377c651; converted property
@property(assign) BOOL muted;	// G=0x33794ff9; S=0x337950f5; converted property
@property(retain) id outputQTESFilePath;	// G=0x33781515; S=0x337952d1; converted property
@property(retain) id queue;	// G=0x33794185; S=0x3377a25d; converted property
@property(retain) id queueFeeder;	// G=0x33794949; S=0x33784e39; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x33795355; S=0x3377c801; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x33793b41; S=0x33793b59; converted property
@property(retain) id vibrationPattern;	// G=0x33793c31; S=0x33793bb1; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x3379520d; S=0x33795221; converted property
@property(assign) float volume;	// G=0x3377c5ad; S=0x33785255; converted property
+ (id)avController;	// 0x33793e29
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x33793e65
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x33793c71
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x33793ea9
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x33783e89
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x33793dd5
+ (BOOL)isSupportedMimeType:(id)type;	// 0x33793d81
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x33785325
- (id)init;	// 0x33779b25
- (id)initForStreaming;	// 0x33793ff1
- (id)initWithError:(id *)error;	// 0x3377a05d
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x33779b39
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x33779b71
- (id)_figPlayerNotifications;	// 0x33795ebd
- (BOOL)activate:(id *)activate;	// 0x33794cc9
- (id)addNextFeederItemToQueue;	// 0x3377d015
- (void)applyDesiredRepeatMode;	// 0x337959a9
- (id)attributeForKey:(id)key;	// 0x3377bda1
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x3377aba9
- (BOOL)beginInterruption:(id *)interruption;	// 0x33794ba1
- (BOOL)beginRepeatGap;	// 0x337857e1
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x3377eba1
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x3377ebc9
- (BOOL)canBeginInterruption;	// 0x33794c55
- (void)cancelAllCGImageRequests;	// 0x33795795
- (void)cancelContinueAfterRepeatGap;	// 0x33780b35
- (void)checkQueueSpace;	// 0x3377cf89
- (void)continueAfterRepeatGap;	// 0x33794975
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x33794179
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x337813b1
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x3377cdcd
- (id)currentItem;	// 0x3377cded
- (void)currentItemHasChanged:(id)changed;	// 0x3377f4c9
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x3377f031
// converted property getter: - (double)currentTime;	// 0x3377ccdd
- (void)dealloc;	// 0x3378abed
// converted property getter: - (id)delegate;	// 0x33795e05
- (void)dequeueDeadItem;	// 0x33796869
- (void)dequeueFirstItem;	// 0x3378422d
- (void)endInterruptionWithStatus:(id)status;	// 0x33794db5
- (void)ensurePlaybackQueueImmed;	// 0x3379672d
- (int)eqPreset;	// 0x337951f9
- (id)errorWithDescription:(id)description code:(long)code;	// 0x33794b05
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x33794761
- (void)feederRangeWasInserted:(id)inserted;	// 0x33794199
- (void)feederRangeWasRemoved:(id)removed;	// 0x337944a1
- (void)figPlayerNotificationHandler:(id)handler;	// 0x33796891
- (void)fmpEffectiveVolumeDidChange;	// 0x3379585d
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x3377f989
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x3378a6ed
- (BOOL)havePlayedCurrentItem;	// 0x33794961
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x33783f65
- (BOOL)isCurrentItemReady;	// 0x337966dd
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x33794175
- (BOOL)isValid;	// 0x33795e5d
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x337856f9
- (id)lkLayer;	// 0x3379533d
- (void)logPerformanceDataForCurrentItem;	// 0x33796175
- (void)makeCurrentItemReady;	// 0x33780b71
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x33784df5
// converted property getter: - (BOOL)muted;	// 0x33794ff9
- (BOOL)okToNotifyFromThisThread;	// 0x3377f399
// converted property getter: - (id)outputQTESFilePath;	// 0x33781515
- (void)pause;	// 0x33783f51
- (BOOL)play:(id *)play;	// 0x337949cd
- (BOOL)playNextItem:(id *)item;	// 0x33784185
- (AVControllerPrivate *)privateStorage;	// 0x33794165
// converted property getter: - (id)queue;	// 0x33794185
// converted property getter: - (id)queueFeeder;	// 0x33794949
- (float)rate;	// 0x3377f64d
- (void)rateDidChangeToRate:(float)rate;	// 0x33782d49
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x33796571
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x33784a95
- (int)repeatMode;	// 0x33784e25
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x337954f1
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x337954cd
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x337949ed
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x33795e19
- (void)scheduleQueueSpaceCheck;	// 0x337808c9
- (void)scheduleUpdateTimeMarkerObservations;	// 0x3377f6ed
- (void)seekToDate:(id)date;	// 0x33794ec1
- (void)setAVItemClass:(Class)aClass;	// 0x33793f95
- (void)setApplyVideoTrackMatrix;	// 0x3379536d
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x3377aec9
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x33794e51
- (void)setCurrentTime:(double)time options:(int)options;	// 0x33784f35
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x3377c651
- (void)setEQPreset:(int)preset;	// 0x3377c6d9
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x33783fcd
- (void)setLayer:(id)layer;	// 0x3377c901
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x337950f5
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x337952d1
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x33796791
// converted property setter: - (void)setQueue:(id)queue;	// 0x3377a25d
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x33784e39
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x3377ca21
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x337809a5
- (BOOL)setRepeatMode:(int)mode;	// 0x3377c9ad
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x3377c801
- (void)setSubtitleRecipient:(id)recipient;	// 0x3377c785
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x33793b59
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x33793bb1
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x33795221
// converted property setter: - (void)setVolume:(float)volume;	// 0x33785255
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x33781f75
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x33795355
- (void)stepByCount:(int)count;	// 0x33794f5d
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x33784911
- (long)updateActionAtEnd;	// 0x3377c819
- (void)updateTimeMarkerObservations;	// 0x33782191
// converted property getter: - (BOOL)vibrationEnabled;	// 0x33793b41
// converted property getter: - (id)vibrationPattern;	// 0x33793c31
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x3379520d
// converted property getter: - (float)volume;	// 0x3377c5ad
@end

