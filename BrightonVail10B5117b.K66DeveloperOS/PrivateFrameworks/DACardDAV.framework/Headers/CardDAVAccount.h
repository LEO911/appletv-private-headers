/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACardDAV.framework/DACardDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import <DAAccount.h> // Unknown library
#import "CoreDAVLogDelegate.h"
#import "CoreDAVDiscoveryTaskGroupDelegate.h"

@class DACoreDAVTaskManager, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger;

@interface CardDAVAccount : DAAccount <CoreDAVAccountInfoProvider, CoreDAVLogDelegate, CoreDAVDiscoveryTaskGroupDelegate> {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 64 = 0x40
	DACoreDAVLogger *_curLogger;	// 68 = 0x44
}
@property(assign) int cardDAVAccountVersion;	// G=0x33ba9169; S=0x33ba9185; 
@property(retain) id host;	// G=0x33ba8de5; S=0x33ba8e49; converted property
@property(assign) int port;	// G=0x33ba8f05; S=0x33ba8f69; converted property
@property(retain) id principalURL;	// G=0x33ba8ae1; S=0x33ba8955; converted property
@property(retain) id scheme;	// G=0x33ba8fd5; S=0x33ba9039; converted property
@property(retain) id serverComplianceClasses;	// G=0x33ba94a1; S=0x33ba94a5; converted property
@property(retain) id serverRoot;	// G=0x33ba9161; S=0x33ba9165; converted property
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x33ba837d; converted property
@property(assign) BOOL useSSL;	// G=0x33ba9101; S=0x33ba9131; converted property
@property(retain) id username;	// G=0x33ba8cc5; S=0x33ba8d29; converted property
+ (Class)accountClass;	// 0x33ba7edd
+ (id)addressBookConstraintsPlistPath;	// 0x33ba9499
+ (Class)clientClass;	// 0x33ba7ef9
+ (id)defaultProperties;	// 0x33ba7b6d
+ (id)supportedDataclasses;	// 0x33ba7f15
- (id)init;	// 0x33ba7cc9
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x33ba7ddd
- (id)initWithProperties:(id)properties;	// 0x33ba7d99
- (void)_massageAddedOrModifiedVCard:(id)card;	// 0x33ba949d
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x33ba8435
- (id)_oldURLsForKeychain;	// 0x33ba8441
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x33ba856d
- (BOOL)accountNeedsUpgrade;	// 0x33ba8861
// declared property getter: - (int)cardDAVAccountVersion;	// 0x33ba9169
- (void)checkValidityWithConsumer:(id)consumer;	// 0x33ba7f91
- (void)configureAccount;	// 0x33ba7d09
- (id)copyImageContentsAtURL:(id)url outError:(id *)error;	// 0x33ba8c3d
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x33ba95d9
- (int)coreDAVLogLevel;	// 0x33ba95b9
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x33ba9641
- (int)coreDAVOutputLevel;	// 0x33ba95d1
- (void)coreDAVTransmittedDataFinished;	// 0x33ba9661
- (void)dealloc;	// 0x33ba7e21
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x33ba8205
- (BOOL)handleCertificateError:(id)error;	// 0x33ba95b5
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x33ba9585
// converted property getter: - (id)host;	// 0x33ba8de5
- (BOOL)isEqualToAccount:(id)account;	// 0x33ba91a1
- (id)localizedIdenticalAccountFailureMessage;	// 0x33ba9371
- (id)localizedInvalidPasswordMessage;	// 0x33ba93e9
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x33ba8b7d
// converted property getter: - (int)port;	// 0x33ba8f05
// converted property getter: - (id)principalURL;	// 0x33ba8ae1
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x33ba94f1
// converted property getter: - (id)scheme;	// 0x33ba8fd5
// converted property getter: - (id)serverComplianceClasses;	// 0x33ba94a1
// converted property getter: - (id)serverRoot;	// 0x33ba9161
// declared property setter: - (void)setCardDAVAccountVersion:(int)version;	// 0x33ba9185
// converted property setter: - (void)setHost:(id)host;	// 0x33ba8e49
// converted property setter: - (void)setPort:(int)port;	// 0x33ba8f69
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x33ba8955
// converted property setter: - (void)setScheme:(id)scheme;	// 0x33ba9039
// converted property setter: - (void)setServerComplianceClasses:(id)classes;	// 0x33ba94a5
// converted property setter: - (void)setServerRoot:(id)root;	// 0x33ba9165
- (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x33ba81c1
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x33ba9131
// converted property setter: - (void)setUsername:(id)username;	// 0x33ba8d29
- (BOOL)shouldLogTransmittedData;	// 0x33ba961d
- (id)spinnerIdentifiers;	// 0x33ba94ad
- (id)stateString;	// 0x33ba83cd
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x33ba7f35
// converted property getter: - (id)taskManager;	// 0x33ba837d
- (BOOL)upgradeAccount;	// 0x33ba87d9
// converted property getter: - (BOOL)useSSL;	// 0x33ba9101
- (id)userAgentHeader;	// 0x33ba94a9
// converted property getter: - (id)username;	// 0x33ba8cc5
- (id)wellKnownPathsToCheck;	// 0x33ba7f45
@end

