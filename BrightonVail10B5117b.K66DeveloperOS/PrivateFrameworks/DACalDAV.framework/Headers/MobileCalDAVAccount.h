/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, NSDate, MobileCalDAVPrincipal, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString, NSSet;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x33b70189; S=0x33b701bd; 
@property(readonly, assign) NSSet *calendars;	// G=0x33b70959; 
@property(retain) NSURL *collectionSetURL;	// G=0x33b70671; S=0x33b706b5; 
@property(retain) id host;	// G=0x33b74f1d; S=0x33b74f95; converted property
@property(assign) BOOL isRefreshing;	// G=0x33b75311; S=0x33b75329; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x33b70745; S=0x33b707b1; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x33b75395; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x33b753bd; S=0x33b753d1; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x33b753a9; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x33b75365; S=0x33b7537d; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x33b7136d; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x33b71335; 
@property(assign) int overriddenPort;	// G=0x33b702dd; S=0x33b7027d; 
@property(retain) NSString *overriddenScheme;	// G=0x33b70371; S=0x33b70311; 
@property(retain) NSString *overriddenServer;	// G=0x33b70261; S=0x33b70201; 
@property(assign) int port;	// G=0x33b75225; S=0x33b7519d; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x33b753f5; S=0x33b75409; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x33b75421; S=0x33b75435; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x33b7038d; S=0x33b703ad; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x33b753e1; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x33b75341; S=0x33b75355; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x33b7505d; S=0x33b750d5; converted property
@property(retain) id searchPropertySet;	// G=0x33b706f1; S=0x33b70701; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x33b7544d; S=0x33b75465; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x33b71151; S=0x33b711c9; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x33b713a5; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x33b7143d; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x33b713f1; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x33b70169; S=0x33b700cd; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x33b71569; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x33b714a5; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x33b715bd; converted property
@property(assign) BOOL useSSL;	// G=0x33b752e1; S=0x33b752b1; converted property
@property(retain) id username;	// G=0x33b74de9; S=0x33b74e51; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x33b71319; 
@property(assign) BOOL wasMigrated;	// G=0x33b707f5; S=0x33b7083d; 
+ (Class)accountClass;	// 0x33b6f349
+ (Class)clientClass;	// 0x33b6f365
+ (id)defaultProperties;	// 0x33b6eaad
+ (id)supportedDataclasses;	// 0x33b6f381
- (id)init;	// 0x33b6ebf1
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x33b6ea69
- (id)initWithProperties:(id)properties;	// 0x33b6ea25
- (id)_calendarConstraintsPath;	// 0x33b71711
- (id)_calendarConstraintsResource;	// 0x33b7160d
- (void)_clearOrphanedCalendarItemChangesOfType:(int)type withContext:(id)context goodCalendarIds:(id)ids;	// 0x33b71ee9
- (void)_clearOrphanedChangesWithChangesCall:(/*function-pointer*/ void *)changesCall clearChanges:(/*function-pointer*/ void *)changes withContext:(id)context;	// 0x33b72151
- (void)_clearOrphanedChangesWithContext:(id)context;	// 0x33b7239d
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x33b72d2d
- (void)_collectMoveActions;	// 0x33b73241
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x33b6fb6d
- (id)_oldURLsForKeychain;	// 0x33b6f915
- (id)_powerAssertionContext;	// 0x33b74845
- (id)_powerAssertionGroupIdentifier;	// 0x33b74849
- (void)_setSpinning:(BOOL)spinning;	// 0x33b71dad
- (void)_updateCalendarStore:(BOOL)store;	// 0x33b71bdd
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x33b71ad9
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x33b717dd
- (void)_upgradeAccountToTelluride;	// 0x33b6f419
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x33b6fb79
- (BOOL)accountNeedsUpgrade;	// 0x33b6ffd1
- (void)addCalendar:(id)calendar;	// 0x33b70895
- (void)addPrincipal:(id)principal;	// 0x33b710bd
// declared property getter: - (int)calDAVAccountVersion;	// 0x33b70189
// declared property getter: - (id)calendars;	// 0x33b70959
- (void)cancelAllSearchQueries;	// 0x33b740f9
- (void)cancelRefresh;	// 0x33b71e11
- (void)cancelSearchQuery:(id)query;	// 0x33b73f95
- (void)checkValidityWithConsumer:(id)consumer;	// 0x33b745fd
// declared property getter: - (id)collectionSetURL;	// 0x33b70671
- (void)configureAccount;	// 0x33b6e56d
- (void *)copyCalStore;	// 0x33b71789
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x33b74d5d
- (int)coreDAVLogLevel;	// 0x33b74d3d
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x33b74dc5
- (int)coreDAVOutputLevel;	// 0x33b74d55
- (void)coreDAVTransmittedDataFinished;	// 0x33b74de5
- (void)dealloc;	// 0x33b6ec31
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x33b74259
- (void)dropPowerAssertions;	// 0x33b74965
// converted property getter: - (id)host;	// 0x33b74f1d
- (BOOL)isCalDAVAccount;	// 0x33b74a05
- (BOOL)isEqualToAccount:(id)account;	// 0x33b74a09
// declared property getter: - (BOOL)isRefreshing;	// 0x33b75311
// declared property getter: - (BOOL)isWritable;	// 0x33b70745
// declared property getter: - (id)itemIDsToMoveActions;	// 0x33b75395
- (id)localizedIdenticalAccountFailureMessage;	// 0x33b74c15
- (id)localizedInvalidPasswordMessage;	// 0x33b74c8d
// declared property getter: - (id)mainPrincipal;	// 0x33b753bd
// declared property getter: - (id)movedItemURLStrings;	// 0x33b753a9
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x33b75365
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x33b7136d
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x33b71335
// declared property getter: - (int)overriddenPort;	// 0x33b702dd
// declared property getter: - (id)overriddenScheme;	// 0x33b70371
// declared property getter: - (id)overriddenServer;	// 0x33b70261
- (void)performSearchQuery:(id)query;	// 0x33b73c09
// converted property getter: - (int)port;	// 0x33b75225
// declared property getter: - (int)preferredEventDaysToSync;	// 0x33b753f5
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x33b75421
- (void)prepareForAccountSave;	// 0x33b6ee85
// converted property getter: - (id)principalURL;	// 0x33b7038d
// declared property getter: - (id)principals;	// 0x33b753e1
- (id)properties;	// 0x33b6f309
- (void)reattainPowerAssertions;	// 0x33b749b5
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x33b725a1
// declared property getter: - (id)refreshContext;	// 0x33b75341
- (void)refreshWithContext:(id)context;	// 0x33b73519
- (void)releasePowerAssertion;	// 0x33b748bd
- (void)reloadCalendars;	// 0x33b70fed
- (void)removeCalendar:(id)calendar;	// 0x33b708ed
- (void)removePrincipal:(id)principal;	// 0x33b71115
- (void)retainPowerAssertion;	// 0x33b74859
// converted property getter: - (id)scheme;	// 0x33b7505d
// declared property getter: - (id)searchPropertySet;	// 0x33b706f1
- (BOOL)searchQueriesRunning;	// 0x33b74229
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x33b7544d
- (id)serverBaseURL;	// 0x33b70589
// declared property getter: - (id)serverVersion;	// 0x33b71151
- (void)setAccountDescription:(id)description;	// 0x33b7062d
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x33b701bd
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x33b706b5
// converted property setter: - (void)setHost:(id)host;	// 0x33b74f95
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x33b75329
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x33b707b1
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x33b753d1
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x33b7537d
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x33b7027d
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x33b70311
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x33b70201
// converted property setter: - (void)setPort:(int)port;	// 0x33b7519d
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x33b75409
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x33b75435
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x33b703ad
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x33b75355
// converted property setter: - (void)setScheme:(id)scheme;	// 0x33b750d5
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x33b70701
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x33b75465
// declared property setter: - (void)setServerVersion:(id)version;	// 0x33b711c9
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x33b700cd
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x33b752b1
// converted property setter: - (void)setUsername:(id)username;	// 0x33b74e51
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x33b7083d
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x33b713a5
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x33b7143d
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x33b713f1
- (BOOL)shouldLogTransmittedData;	// 0x33b74da1
- (void)shutdown;	// 0x33b74255
- (id)spinnerIdentifiers;	// 0x33b71d4d
- (id)stateString;	// 0x33b6f3b1
// declared property getter: - (id)subscribedCalendars;	// 0x33b70169
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x33b6f3a1
// declared property getter: - (BOOL)supportsEvents;	// 0x33b71569
// declared property getter: - (BOOL)supportsReminders;	// 0x33b714a5
- (void)task:(id)task didFinishWithError:(id)error;	// 0x33b738d1
// converted property getter: - (id)taskManager;	// 0x33b715bd
- (BOOL)upgradeAccount;	// 0x33b6ff49
// converted property getter: - (BOOL)useSSL;	// 0x33b752e1
// converted property getter: - (id)username;	// 0x33b74de9
- (BOOL)usesTokenAuth;	// 0x33b715b9
// declared property getter: - (id)viewedTimeZone;	// 0x33b71319
// declared property getter: - (BOOL)wasMigrated;	// 0x33b707f5
- (id)wellKnownPaths;	// 0x33b74465
@end

