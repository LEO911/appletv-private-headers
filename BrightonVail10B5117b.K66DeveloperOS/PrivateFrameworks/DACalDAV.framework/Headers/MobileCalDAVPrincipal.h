/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import "DACalDAV-Structs.h"
#import "CoreDAVAccountInfoProvider.h"
#import "CalDAVPrincipal.h"
#import <NSObject.h> // Unknown library

@class NSString, MobileCalDAVAccount, NSSet, NSURL, NSDictionary, NSMutableDictionary, NSNumber, CalDAVRefreshContext;
@protocol CalDAVAccount;

@interface MobileCalDAVPrincipal : NSObject <CoreDAVAccountInfoProvider, CalDAVPrincipal> {
	NSString *_uid;	// 4 = 0x4
	MobileCalDAVAccount *_account;	// 8 = 0x8
	NSSet *_calendarUserAddresses;	// 12 = 0xc
	NSMutableDictionary *_calendarUserAddressesPerCalendar;	// 16 = 0x10
	NSURL *_preferredCalendarUserAddress;	// 20 = 0x14
	NSString *_preferredCalendarEmailAddress;	// 24 = 0x18
	NSString *_fullName;	// 28 = 0x1c
	NSURL *_calendarHomeURL;	// 32 = 0x20
	NSURL *_principalURL;	// 36 = 0x24
	NSURL *_defaultCalendarURL;	// 40 = 0x28
	NSURL *_notificationCollectionURL;	// 44 = 0x2c
	NSString *_notificationCollectionCTag;	// 48 = 0x30
	NSURL *_inboxURL;	// 52 = 0x34
	NSString *_inboxCTag;	// 56 = 0x38
	NSURL *_outboxURL;	// 60 = 0x3c
	NSURL *_dropBoxURL;	// 64 = 0x40
	NSString *_notificationURLString;	// 68 = 0x44
	NSDictionary *_pushTransports;	// 72 = 0x48
	NSString *_calendarHomePushKey;	// 76 = 0x4c
	NSString *_XMPPServer;	// 80 = 0x50
	NSNumber *_quotaFreeBytes;	// 84 = 0x54
	NSString *_supportedCalendarComponentSets;	// 88 = 0x58
	BOOL _isDelegate;	// 92 = 0x5c
	BOOL _isWritable;	// 93 = 0x5d
	BOOL _isEnabled;	// 94 = 0x5e
	BOOL _isExpandPropertyReportSupported;	// 95 = 0x5f
	BOOL _supportsFreebusy;	// 96 = 0x60
	BOOL _supportsSyncToken;	// 97 = 0x61
	BOOL _supportsPush;	// 98 = 0x62
	BOOL _shouldRefreshPrincipalSearchProperties;	// 99 = 0x63
	BOOL _shouldUpdatePushDelegate;	// 100 = 0x64
	BOOL _isDirty;	// 101 = 0x65
	BOOL _calendarsAreDirty;	// 102 = 0x66
	int _calendarChangeIndex;	// 104 = 0x68
}
@property(readonly, assign) NSString *APSEnv;	// G=0x33b794c9; 
@property(readonly, assign) NSURL *APSSubscriptionURL;	// G=0x33b79439; 
@property(readonly, assign) NSString *APSTopic;	// G=0x33b793f1; 
@property(retain) NSString *XMPPServer;	// G=0x33b7825d; S=0x33b7826d; 
@property(readonly, assign) id<CalDAVAccount> account;	// G=0x33b7761d; 
@property(retain) NSString *calendarHomePushKey;	// G=0x33b781dd; S=0x33b781ed; 
@property(retain) NSURL *calendarHomeURL;	// G=0x33b77a85; S=0x33b77ab1; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x33b77949; S=0x33b77959; 
@property(readonly, assign) NSSet *calendars;	// G=0x33b78a1d; 
@property(assign) BOOL calendarsAreDirty;	// G=0x33b79305; S=0x33b7922d; @synthesize=_calendarsAreDirty
@property(retain) NSURL *defaultCalendarURL;	// G=0x33b77bfd; S=0x33b77c29; 
@property(retain) NSURL *dropBoxURL;	// G=0x33b77ff1; S=0x33b7801d; 
@property(retain) NSString *fullName;	// G=0x33b77a05; S=0x33b77a15; 
@property(retain) NSString *inboxCTag;	// G=0x33b77eb1; S=0x33b77ec1; 
@property(retain) NSURL *inboxURL;	// G=0x33b77df5; S=0x33b77e21; 
@property(assign) BOOL isDelegate;	// G=0x33b783b9; S=0x33b783c9; 
@property(assign) BOOL isDirty;	// G=0x33b7a0a5; S=0x33b7a0bd; @synthesize=_isDirty
@property(assign) BOOL isEnabled;	// G=0x33b78449; S=0x33b78459; 
@property(assign) BOOL isExpandPropertyReportSupported;	// G=0x33b78925; S=0x33b78935; 
@property(assign) BOOL isWritable;	// G=0x33b78401; S=0x33b78411; 
@property(retain) NSString *notificationCollectionCTag;	// G=0x33b77d75; S=0x33b77d85; 
@property(retain) NSURL *notificationCollectionURL;	// G=0x33b77cb9; S=0x33b77ce5; 
@property(retain) NSString *notificationURLString;	// G=0x33b780ad; S=0x33b780bd; 
@property(retain) NSURL *outboxURL;	// G=0x33b77f31; S=0x33b77f5d; 
@property(readonly, assign) NSString *preferredCalendarEmailAddress;	// G=0x33b79761; 
@property(readonly, assign) NSURL *preferredCalendarUserAddress;	// G=0x33b796dd; 
@property(retain) NSURL *principalURL;	// G=0x33b77b41; S=0x33b77b6d; 
@property(readonly, assign) NSSet *pushKeys;	// G=0x33b795c1; 
@property(retain) NSDictionary *pushTransports;	// G=0x33b78141; S=0x33b78151; 
@property(retain) NSNumber *quotaFreeBytes;	// G=0x33b782dd; S=0x33b782ed; 
@property(readonly, assign) CalDAVRefreshContext *refreshContext;	// G=0x33b789fd; 
@property(assign) BOOL shouldRefreshPrincipalSearchProperties;	// G=0x33b7a045; S=0x33b7a05d; @synthesize=_shouldRefreshPrincipalSearchProperties
@property(assign) BOOL shouldUpdatePushDelegate;	// G=0x33b7a075; S=0x33b7a08d; @synthesize=_shouldUpdatePushDelegate
@property(retain) NSString *supportedCalendarComponentSets;	// G=0x33b783a9; S=0x33b78349; 
@property(readonly, assign) BOOL supportsExtendedCalendarQuery;	// G=0x33b7856d; 
@property(assign) BOOL supportsFreebusy;	// G=0x33b7896d; S=0x33b7897d; 
@property(assign) BOOL supportsPush;	// G=0x33b7a0d5; S=0x33b7a0ed; @synthesize=_supportsPush
@property(assign) BOOL supportsSyncToken;	// G=0x33b789b5; S=0x33b789c5; 
@property(readonly, assign) NSString *uid;	// G=0x33b7a031; @synthesize=_uid
+ (BOOL)compareAddressURL:(id)url localString:(id)string;	// 0x33b75c89
- (id)init;	// 0x33b75ea1
- (id)initWithConfiguration:(id)configuration account:(id)account;	// 0x33b760a5
// declared property getter: - (id)APSEnv;	// 0x33b794c9
// declared property getter: - (id)APSSubscriptionURL;	// 0x33b79439
// declared property getter: - (id)APSTopic;	// 0x33b793f1
// declared property getter: - (id)XMPPServer;	// 0x33b7825d
- (id)_sharedSyncEndDate;	// 0x33b785a1
- (id)_startDateFromDaysToSync:(int)sync;	// 0x33b78695
- (BOOL)_userAddressSet:(id)set isEqualToSet:(id)set2;	// 0x33b7763d
// declared property getter: - (id)account;	// 0x33b7761d
- (id)accountID;	// 0x33b79c89
- (id)additionalHeaderValues;	// 0x33b79cb1
// declared property getter: - (id)calendarHomePushKey;	// 0x33b781dd
// declared property getter: - (id)calendarHomeURL;	// 0x33b77a85
- (id)calendarOfType:(int)type atURL:(id)url withOptions:(id)options;	// 0x33b78f4d
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)url;	// 0x33b799b9
// declared property getter: - (id)calendarUserAddresses;	// 0x33b77949
- (id)calendarUserAddressesForCalendar:(id)calendar;	// 0x33b7914d
// declared property getter: - (id)calendars;	// 0x33b78a1d
// declared property getter: - (BOOL)calendarsAreDirty;	// 0x33b79305
- (BOOL)clearCalendarChanges;	// 0x33b78efd
- (id)configuration;	// 0x33b76c3d
- (CFURLStorageSessionRef)copyStorageSession;	// 0x33b79e45
- (void)dealloc;	// 0x33b75eb5
// declared property getter: - (id)defaultCalendarURL;	// 0x33b77bfd
- (id)defaultEventCalendarTitle;	// 0x33b79105
- (id)defaultTodoCalendarTitle;	// 0x33b79111
- (id)deletedCalendarURLs;	// 0x33b78a3d
// declared property getter: - (id)dropBoxURL;	// 0x33b77ff1
- (id)eventFilterEndDate;	// 0x33b7881d
- (id)eventFilterStartDate;	// 0x33b787c5
// declared property getter: - (id)fullName;	// 0x33b77a05
- (BOOL)handleCertificateError:(id)error;	// 0x33b79e39
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x33b79e11
- (BOOL)hasCalendarUserAddress:(id)address;	// 0x33b79891
- (id)host;	// 0x33b79b01
- (id)identityPersist;	// 0x33b79c69
// declared property getter: - (id)inboxCTag;	// 0x33b77eb1
// declared property getter: - (id)inboxURL;	// 0x33b77df5
// declared property getter: - (BOOL)isDelegate;	// 0x33b783b9
// declared property getter: - (BOOL)isDirty;	// 0x33b7a0a5
// declared property getter: - (BOOL)isEnabled;	// 0x33b78449
- (BOOL)isEnabledForEvents;	// 0x33b784b5
- (BOOL)isEnabledForTodos;	// 0x33b78511
// declared property getter: - (BOOL)isExpandPropertyReportSupported;	// 0x33b78925
- (BOOL)isMergeSync;	// 0x33b78491
// declared property getter: - (BOOL)isWritable;	// 0x33b78401
- (void)noteFailedNetworkRequest;	// 0x33b79f81
- (void)noteFailedProtocolRequest;	// 0x33b79fb9
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x33b79b41
- (void)noteSuccessfulRequestWithNumDownloadedElements:(int)numDownloadedElements;	// 0x33b79f45
- (void)noteTimeSpentInNetworking:(double)networking;	// 0x33b79ff1
// declared property getter: - (id)notificationCollectionCTag;	// 0x33b77d75
// declared property getter: - (id)notificationCollectionURL;	// 0x33b77cb9
// declared property getter: - (id)notificationURLString;	// 0x33b780ad
- (id)oauthToken;	// 0x33b79d29
// declared property getter: - (id)outboxURL;	// 0x33b77f31
- (id)password;	// 0x33b79c49
- (int)port;	// 0x33b79b21
// declared property getter: - (id)preferredCalendarEmailAddress;	// 0x33b79761
// declared property getter: - (id)preferredCalendarUserAddress;	// 0x33b796dd
- (void)prepareCalendarsForSyncWithCompletionBlock:(id)completionBlock;	// 0x33b78b81
// declared property getter: - (id)principalURL;	// 0x33b77b41
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x33b79d71
// declared property getter: - (id)pushKeys;	// 0x33b795c1
// declared property getter: - (id)pushTransports;	// 0x33b78141
// declared property getter: - (id)quotaFreeBytes;	// 0x33b782dd
// declared property getter: - (id)refreshContext;	// 0x33b789fd
- (void)removeCalendar:(id)calendar;	// 0x33b7911d
- (id)scheme;	// 0x33b79ae1
- (id)serverComplianceClasses;	// 0x33b79ca9
- (id)serverRoot;	// 0x33b79c25
- (void)setAccount:(id)account;	// 0x33b7762d
// declared property setter: - (void)setCalendarHomePushKey:(id)key;	// 0x33b781ed
// declared property setter: - (void)setCalendarHomeURL:(id)url;	// 0x33b77ab1
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x33b77959
- (void)setCalendarUserAddresses:(id)addresses forCalendar:(id)calendar;	// 0x33b79189
// declared property setter: - (void)setCalendarsAreDirty:(BOOL)dirty;	// 0x33b7922d
// declared property setter: - (void)setDefaultCalendarURL:(id)url;	// 0x33b77c29
// declared property setter: - (void)setDropBoxURL:(id)url;	// 0x33b7801d
// declared property setter: - (void)setFullName:(id)name;	// 0x33b77a15
// declared property setter: - (void)setInboxCTag:(id)tag;	// 0x33b77ec1
// declared property setter: - (void)setInboxURL:(id)url;	// 0x33b77e21
// declared property setter: - (void)setIsDelegate:(BOOL)delegate;	// 0x33b783c9
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x33b7a0bd
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x33b78459
// declared property setter: - (void)setIsExpandPropertyReportSupported:(BOOL)supported;	// 0x33b78935
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x33b78411
// declared property setter: - (void)setNotificationCollectionCTag:(id)tag;	// 0x33b77d85
// declared property setter: - (void)setNotificationCollectionURL:(id)url;	// 0x33b77ce5
// declared property setter: - (void)setNotificationURLString:(id)string;	// 0x33b780bd
// declared property setter: - (void)setOutboxURL:(id)url;	// 0x33b77f5d
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x33b77b6d
// declared property setter: - (void)setPushTransports:(id)transports;	// 0x33b78151
// declared property setter: - (void)setQuotaFreeBytes:(id)bytes;	// 0x33b782ed
// declared property setter: - (void)setShouldRefreshPrincipalSearchProperties:(BOOL)refreshPrincipalSearchProperties;	// 0x33b7a05d
// declared property setter: - (void)setShouldUpdatePushDelegate:(BOOL)updatePushDelegate;	// 0x33b7a08d
// declared property setter: - (void)setSupportedCalendarComponentSets:(id)sets;	// 0x33b78349
// declared property setter: - (void)setSupportsFreebusy:(BOOL)freebusy;	// 0x33b7897d
// declared property setter: - (void)setSupportsPush:(BOOL)push;	// 0x33b7a0ed
// declared property setter: - (void)setSupportsSyncToken:(BOOL)token;	// 0x33b789c5
// declared property setter: - (void)setXMPPServer:(id)server;	// 0x33b7826d
- (BOOL)shouldCompressRequests;	// 0x33b79ec1
- (BOOL)shouldFailAllTasks;	// 0x33b79e3d
- (BOOL)shouldHandleHTTPCookiesForURL:(id)url;	// 0x33b79e41
// declared property getter: - (BOOL)shouldRefreshPrincipalSearchProperties;	// 0x33b7a045
- (BOOL)shouldSendClientInfoHeaderForURL:(id)url;	// 0x33b79e65
// declared property getter: - (BOOL)shouldUpdatePushDelegate;	// 0x33b7a075
- (BOOL)shouldUseOpportunisticSockets;	// 0x33b79f21
// declared property getter: - (id)supportedCalendarComponentSets;	// 0x33b783a9
// declared property getter: - (BOOL)supportsExtendedCalendarQuery;	// 0x33b7856d
// declared property getter: - (BOOL)supportsFreebusy;	// 0x33b7896d
// declared property getter: - (BOOL)supportsPush;	// 0x33b7a0d5
// declared property getter: - (BOOL)supportsSyncToken;	// 0x33b789b5
- (id)taskManager;	// 0x33b79ac1
- (id)todoFilterEndDate;	// 0x33b788e1
- (id)todoFilterStartDate;	// 0x33b78889
// declared property getter: - (id)uid;	// 0x33b7a031
- (id)user;	// 0x33b79c29
- (id)userAgentHeader;	// 0x33b79cad
@end

