/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
 */

#import "BKSAccelerometerDelegate.h"
#import <NSObject.h> // Unknown library

@class BKSAccelerometer;
@protocol SBSAccelerometerDelegate;

@interface SBSAccelerometer : NSObject <BKSAccelerometerDelegate> {
	id<SBSAccelerometerDelegate> _delegate;	// 4 = 0x4
	BKSAccelerometer *_bksMirror;	// 8 = 0x8
}
@property(assign, nonatomic) BOOL accelerometerEventsEnabled;	// G=0x35645ce1; S=0x35645d05; 
@property(assign, nonatomic) id<SBSAccelerometerDelegate> delegate;	// G=0x35645bb9; S=0x35645bcd; 
@property(assign, nonatomic) BOOL orientationEventsEnabled;	// G=0x35645e45; S=0x35645e25; 
@property(assign, nonatomic) double updateInterval;	// G=0x35645d25; S=0x35645d45; 
@property(assign, nonatomic) float xThreshold;	// G=0x35645d65; S=0x35645d85; 
@property(assign, nonatomic) float yThreshold;	// G=0x35645da5; S=0x35645dc5; 
@property(assign, nonatomic) float zThreshold;	// G=0x35645de5; S=0x35645e05; 
- (id)init;	// 0x35645be1
- (void)accelerometer:(id)accelerometer didAccelerateWithTimeStamp:(double)timeStamp x:(float)x y:(float)y z:(float)z eventType:(int)type;	// 0x35645e89
- (void)accelerometer:(id)accelerometer didChangeDeviceOrientation:(int)orientation;	// 0x35645ee1
// declared property getter: - (BOOL)accelerometerEventsEnabled;	// 0x35645ce1
- (int)currentDeviceOrientation;	// 0x35645e69
- (void)dealloc;	// 0x35645c59
// declared property getter: - (id)delegate;	// 0x35645bb9
// declared property getter: - (BOOL)orientationEventsEnabled;	// 0x35645e45
// declared property setter: - (void)setAccelerometerEventsEnabled:(BOOL)enabled;	// 0x35645d05
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x35645bcd
// declared property setter: - (void)setOrientationEventsEnabled:(BOOL)enabled;	// 0x35645e25
// declared property setter: - (void)setUpdateInterval:(double)interval;	// 0x35645d45
// declared property setter: - (void)setXThreshold:(float)threshold;	// 0x35645d85
// declared property setter: - (void)setYThreshold:(float)threshold;	// 0x35645dc5
// declared property setter: - (void)setZThreshold:(float)threshold;	// 0x35645e05
// declared property getter: - (double)updateInterval;	// 0x35645d25
// declared property getter: - (float)xThreshold;	// 0x35645d65
// declared property getter: - (float)yThreshold;	// 0x35645da5
// declared property getter: - (float)zThreshold;	// 0x35645de5
@end

