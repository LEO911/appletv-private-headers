/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library

@class NSDate;

@interface MPMediaLibrary : NSObject <NSCoding> {
	MPMediaLibraryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaLibraryInternal _internal;	// G=0x33615869; S=0x33615885; @synthesize
@property(assign, getter=isFilteringDisabled) BOOL filteringDisabled;	// G=0x33615801; S=0x33615819; converted property
@property(readonly, assign, nonatomic) NSDate *lastModifiedDate;	// G=0x336175e1; 
+ (id)_libraryDataProviders;	// 0x33615c19
+ (id)_libraryForDataProvider:(id)dataProvider;	// 0x33618091
+ (id)_mediaLibraries;	// 0x33615c8d
+ (void)addLibraryDataProvider:(id)provider;	// 0x33615b11
+ (id)defaultMediaLibrary;	// 0x33617c8d
+ (id)deviceMediaLibrary;	// 0x33617b5d
+ (BOOL)isLibraryServerDisabled;	// 0x336157f5
+ (id)libraryDataProviders;	// 0x33615be9
+ (id)mediaLibraries;	// 0x33615c5d
+ (id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x3361814d
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x33615a0d
+ (void)reloadLibraryDataProvider:(id)provider;	// 0x33615a31
+ (void)removeLibraryDataProvider:(id)provider;	// 0x33615a55
+ (void)setDefaultMediaLibrary:(id)library;	// 0x33617ba1
+ (void)setLibraryServerDisabled:(BOOL)disabled;	// 0x336157f9
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x336157fd
- (id)init;	// 0x33617db5
- (id)initWithCoder:(id)coder;	// 0x33618691
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined mediaType:(int)type queryIsEmptyBlock:(id)block;	// 0x33616e91
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined queryIsEmptyBlock:(id)block;	// 0x33615785
- (void)_clearCachedContentData;	// 0x33617901
- (void)_clearCachedEntities;	// 0x33618879
- (void)_clearPendingDisconnection;	// 0x33615845
- (id)_collectionsForQueryCriteria:(id)queryCriteria;	// 0x336188e9
- (void)_didReceiveMemoryWarning:(id)warning;	// 0x33617635
- (id)_initWithLibraryDataProvider:(id)libraryDataProvider;	// 0x33617cb1
// declared property getter: - (MPMediaLibraryInternal)_internal;	// 0x33615869
- (id)_itemsForQueryCriteria:(id)queryCriteria;	// 0x336189b5
- (unsigned long long)_persistentIDForAssetURL:(id)assetURL;	// 0x336184dd
- (void)_postDataProviderDidChangeITunesIsSyncingToValue:(BOOL)_postDataProvider;	// 0x33618bed
- (void)_postDataProviderWillChangeITunesIsSyncingToValue:(BOOL)_postDataProvider;	// 0x33618c69
- (void)_postLibraryDidChangeNotificationForSync;	// 0x33617821
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;	// 0x3361789d
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x33617839
- (void)_removeConnectionAssertion:(id)assertion;	// 0x33615cf9
- (id)addPlaylistWithName:(id)name;	// 0x336167b5
- (id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;	// 0x336166e1
- (void)beginGeneratingLibraryChangeNotifications;	// 0x33615759
- (void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;	// 0x33616381
- (id)connectionAssertionWithIdentifier:(id)identifier;	// 0x3361628d
- (float)connectionProgress;	// 0x336157e5
- (void)dealloc;	// 0x33617f65
- (id)description;	// 0x33617af1
- (void)disconnect;	// 0x33616201
- (void)encodeWithCoder:(id)coder;	// 0x33617995
- (void)endGeneratingLibraryChangeNotifications;	// 0x3361576d
- (id)errorResolverForMediaItem:(id)mediaItem;	// 0x3363aaad
- (BOOL)hasAlbums;	// 0x33617285
- (BOOL)hasArtists;	// 0x3361729d
- (BOOL)hasAudibleAudioBooks;	// 0x33616d19
- (BOOL)hasAudiobooks;	// 0x33616f09
- (BOOL)hasCompilations;	// 0x33616c21
- (BOOL)hasComposers;	// 0x33616ff5
- (BOOL)hasGeniusMixes;	// 0x3361734d
- (BOOL)hasGenres;	// 0x3361708d
- (BOOL)hasITunesUContent;	// 0x33616ba1
- (BOOL)hasMedia;	// 0x336173f9
- (BOOL)hasMediaOfType:(int)type;	// 0x33617509
- (BOOL)hasMovieRentals;	// 0x33616b29
- (BOOL)hasMovies;	// 0x33616c99
- (BOOL)hasMusicVideos;	// 0x33616d91
- (BOOL)hasPlaylists;	// 0x336172b5
- (BOOL)hasPodcasts;	// 0x336170a5
- (BOOL)hasSongs;	// 0x33617195
- (BOOL)hasTVShows;	// 0x33616aa9
- (BOOL)hasVideoPodcasts;	// 0x33616a29
- (BOOL)hasVideos;	// 0x33616e11
- (unsigned)hash;	// 0x33617a61
- (void)iTunesSyncPhaseDidFinish:(int)iTunesSyncPhase reason:(int)reason;	// 0x33617649
- (void)iTunesSyncPhaseWillStart:(int)iTunesSyncPhase;	// 0x33617709
- (BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;	// 0x336165d5
- (BOOL)isEqual:(id)equal;	// 0x33617a85
// converted property getter: - (BOOL)isFilteringDisabled;	// 0x33615801
- (BOOL)isGeniusEnabled;	// 0x3361658d
- (BOOL)isSyncing;	// 0x33616999
- (BOOL)isValidAssetURL:(id)url;	// 0x33616195
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;	// 0x33616035
- (id)itemWithPersistentID:(unsigned long long)persistentID;	// 0x33616975
- (id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;	// 0x336168f9
// declared property getter: - (id)lastModifiedDate;	// 0x336175e1
- (id)libraryDataProvider;	// 0x33615859
- (BOOL)libraryHasBeenModifiedWithToken:(id)token;	// 0x33618ce5
- (id)modificationToken;	// 0x33618df9
- (id)name;	// 0x336175c1
- (id)pathForAssetURL:(id)assetURL;	// 0x33616135
- (BOOL)performTransactionWithBlock:(id)block;	// 0x336161b5
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;	// 0x33615f35
- (id)playlistWithPersistentID:(unsigned long long)persistentID;	// 0x336167cd
- (id)preferredAudioLanguages;	// 0x33616549
- (id)preferredSubtitleLanguages;	// 0x33616505
- (BOOL)removeItems:(id)items;	// 0x33618f41
- (BOOL)removePlaylist:(id)playlist;	// 0x33616681
- (BOOL)requiresAuthentication;	// 0x336164bd
// converted property setter: - (void)setFilteringDisabled:(BOOL)disabled;	// 0x33615819
// declared property setter: - (void)set_internal:(MPMediaLibraryInternal)internal;	// 0x33615885
- (unsigned long long)syncGenerationID;	// 0x33617581
- (id)uniqueIdentifier;	// 0x336175a1
@end

