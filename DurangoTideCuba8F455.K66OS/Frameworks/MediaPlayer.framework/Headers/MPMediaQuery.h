/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSCopying.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class MPMediaQuerySectionInfo, NSSet, NSArray, MPMediaLibrary;

@interface MPMediaQuery : NSObject <NSCoding, NSCopying> {
	MPMediaQueryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaQueryInternal _internal;	// G=0x3360e45d; S=0x3360e479; @synthesize
@property(copy, nonatomic) NSSet *collectionPropertiesToFetch;	// G=0x3360f859; S=0x3360f7f9; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *collectionSectionInfo;	// G=0x3360f7b1; 
@property(readonly, assign, nonatomic) NSArray *collectionSections;	// G=0x3360f57d; 
@property(readonly, assign, nonatomic) NSArray *collections;	// G=0x3360fe11; 
@property(retain) id criteria;	// G=0x3360e44d; S=0x3360f029; converted property
@property(readonly, assign, nonatomic) BOOL excludesEntitiesWithBlankNames;	// G=0x336116d9; 
@property(retain, nonatomic) NSSet *filterPredicates;	// G=0x3360ffbd; S=0x3360ff5d; 
@property(assign, nonatomic) int groupingType;	// G=0x3360e331; S=0x3360e351; 
@property(copy, nonatomic) NSSet *itemPropertiesToFetch;	// G=0x3360e391; S=0x3360f899; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *itemSectionInfo;	// G=0x3360f7d5; 
@property(readonly, assign, nonatomic) NSArray *itemSections;	// G=0x3360f5a1; 
@property(readonly, assign, nonatomic) NSArray *items;	// G=0x3360fe45; 
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary;	// G=0x3360e321; S=0x3360fe79; 
@property(assign) BOOL prefetchProperties;	// G=0x3360e445; S=0x3360e449; converted property
@property(assign, nonatomic) BOOL sortItems;	// G=0x3360e3d9; S=0x3360e3b1; 
@property(readonly, assign, nonatomic) BOOL specifiesPlaylistItems;	// G=0x3360f629; 
@property(readonly, assign, nonatomic) BOOL willGroupEntities;	// G=0x3360f5c5; 
+ (id)ITunesUAudioQuery;	// 0x3361028d
+ (id)albumsQuery;	// 0x33610571
+ (id)artistsQuery;	// 0x336104ad
+ (id)audibleAudiobooksQuery;	// 0x33610161
+ (id)audiobooksQuery;	// 0x336101dd
+ (id)compilationsQuery;	// 0x3361009d
+ (id)composersQuery;	// 0x3361004d
+ (id)geniusMixesQuery;	// 0x3360f8f9
+ (id)genresQuery;	// 0x3360fffd
+ (void)initialize;	// 0x33611ac9
+ (id)movieRentalsQuery;	// 0x3360fa91
+ (id)moviesQuery;	// 0x3360fb0d
+ (id)musicVideosQuery;	// 0x3360fc75
+ (id)playlistsQuery;	// 0x3361045d
+ (id)podcastsQuery;	// 0x33610399
+ (void)setFilteringDisabled:(BOOL)disabled;	// 0x3360fddd
+ (id)songsQuery;	// 0x33611bfd
+ (id)tvShowsQuery;	// 0x3360fbc1
+ (id)videoPodcastsQuery;	// 0x3360f9dd
+ (id)videosQuery;	// 0x3360fd29
- (id)init;	// 0x3361093d
- (id)initWithCoder:(id)coder;	// 0x336111d5
- (id)initWithCriteria:(id)criteria library:(id)library;	// 0x336108c1
- (id)initWithEntities:(id)entities entityType:(int)type;	// 0x33610779
- (id)initWithFilterPredicates:(id)filterPredicates;	// 0x336107c9
- (id)initWithFilterPredicatesInternal:(id)filterPredicatesInternal;	// 0x3361083d
- (void)_enumerateCollectionsUsingBlock:(id)block;	// 0x3360f2a9
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x3360f3e1
// declared property getter: - (MPMediaQueryInternal)_internal;	// 0x3360e45d
- (BOOL)_isFilteringDisabled;	// 0x3360f481
- (id)_sanitizedQuery;	// 0x3360f511
- (id)_valueForAggregateFunction:(id)aggregateFunction onProperty:(id)property entityType:(int)type;	// 0x33611875
- (void)addFilterPredicate:(id)predicate;	// 0x33610b91
// declared property getter: - (id)collectionPropertiesToFetch;	// 0x3360f859
// declared property getter: - (id)collectionSectionInfo;	// 0x3360f7b1
// declared property getter: - (id)collectionSections;	// 0x3360f57d
// declared property getter: - (id)collections;	// 0x3360fe11
- (id)copyWithZone:(NSZone *)zone;	// 0x336115a1
- (unsigned)countOfCollections;	// 0x3360f06d
- (unsigned)countOfItems;	// 0x3360f091
// converted property getter: - (id)criteria;	// 0x3360e44d
- (void)dealloc;	// 0x33610721
- (id)description;	// 0x33611dc5
- (void)encodeWithCoder:(id)coder;	// 0x33611381
// declared property getter: - (BOOL)excludesEntitiesWithBlankNames;	// 0x336116d9
// declared property getter: - (id)filterPredicates;	// 0x3360ffbd
- (unsigned)groupingThreshold;	// 0x3360e401
// declared property getter: - (int)groupingType;	// 0x3360e331
- (unsigned)hash;	// 0x33610635
- (BOOL)isEqual:(id)equal;	// 0x33610675
// declared property getter: - (id)itemPropertiesToFetch;	// 0x3360e391
// declared property getter: - (id)itemSectionInfo;	// 0x3360f7d5
// declared property getter: - (id)itemSections;	// 0x3360f5a1
// declared property getter: - (id)items;	// 0x3360fe45
// declared property getter: - (id)mediaLibrary;	// 0x3360e321
- (id)predicateForProperty:(id)property;	// 0x3364d471
// converted property getter: - (BOOL)prefetchProperties;	// 0x3360e445
- (void)removeFilterPredicate:(id)predicate;	// 0x3360feb5
- (void)removePredicatesForProperty:(id)property;	// 0x3364d34d
// declared property setter: - (void)setCollectionPropertiesToFetch:(id)fetch;	// 0x3360f7f9
// converted property setter: - (void)setCriteria:(id)criteria;	// 0x3360f029
// declared property setter: - (void)setFilterPredicates:(id)predicates;	// 0x3360ff5d
// declared property setter: - (void)setGroupingType:(int)type;	// 0x3360e351
// declared property setter: - (void)setItemPropertiesToFetch:(id)fetch;	// 0x3360f899
// declared property setter: - (void)setMediaLibrary:(id)library;	// 0x3360fe79
// converted property setter: - (void)setPrefetchProperties:(BOOL)properties;	// 0x3360e449
// declared property setter: - (void)setSortItems:(BOOL)items;	// 0x3360e3b1
- (void)setStaticEntities:(id)entities entityType:(int)type;	// 0x3360f0b5
// declared property setter: - (void)set_internal:(MPMediaQueryInternal)internal;	// 0x3360e479
// declared property getter: - (BOOL)sortItems;	// 0x3360e3d9
// declared property getter: - (BOOL)specifiesPlaylistItems;	// 0x3360f629
- (id)valueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property;	// 0x3360f4c9
- (id)valueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property;	// 0x3360f4ed
// declared property getter: - (BOOL)willGroupEntities;	// 0x3360f5c5
@end

