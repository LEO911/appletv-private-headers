/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebTiledView.h"
#import "UIActionSheetDelegate.h"
#import "UIKit-Structs.h"
#import "UIAutoscrollContainer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "UILongPressGestureRecognizerDelegate.h"
#import "UITextSelectingContent.h"

@class UILongPressGestureRecognizer, UIWindow, UITapGestureRecognizer, UIView, UIActionSheet, UITextInteractionAssistant, UITextSelectionView, WebView, UIPanGestureRecognizer, UIColor, DOMNode, CALayer, UITextChecker, DOMHTMLElement, UITextPosition, NSDictionary, UITextRange, UIResponder, UIWebSelectionAssistant, UIAutoscroll, NSTimer, UITextInputTraits, WebViewReachabilityObserver, UIInformalDelegate, WebThreadSafeUndoManager;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIKeyboardInput, UIModalViewDelegate, UILongPressGestureRecognizerDelegate> {
	int _retainCount;	// 60 = 0x3c
	WKWindow *_wkWindow;	// 64 = 0x40
	WebView *_webView;	// 68 = 0x44
	WebViewReachabilityObserver *_reachabilityObserver;	// 72 = 0x48
	id m_parentTextView;	// 76 = 0x4c
	id _delegate;	// 80 = 0x50
	id _textSuggestionDelegate;	// 84 = 0x54
	id _editingDelegate;	// 88 = 0x58
	CGRect _doubleTapRect;	// 92 = 0x5c
	CGRect _mainDocumentDoubleTapRect;	// 108 = 0x6c
	CGPoint _scrollPoint;	// 124 = 0x7c
	CGPoint _doubleTapStartPosition;	// 132 = 0x84
	double _doubleTapStartTime;	// 140 = 0x8c
	CGSize _pendingSize;	// 148 = 0x94
	int _orientation;	// 156 = 0x9c
	DOMHTMLElement *_standaloneEditingElement;	// 160 = 0xa0
	CGPoint _mouseDownPoint;	// 164 = 0xa4
	double _mouseDownTime;	// 172 = 0xac
	UIAutoscroll *_autoscroll;	// 180 = 0xb4
	CFDictionaryRef _plugInViews;	// 184 = 0xb8
	int m_selectionGranularity;	// 188 = 0xbc
	CALayer *_contentLayersHostingLayer;	// 192 = 0xc0
	UITextInputTraits *_traits;	// 196 = 0xc4
	id<UITextInputDelegate> _inputDelegate;	// 200 = 0xc8
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 204 = 0xcc
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 208 = 0xd0
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 212 = 0xd4
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 216 = 0xd8
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 220 = 0xdc
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 224 = 0xe0
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		BOOL defersCallbacksState;
		UIInformalDelegate *delegate;
		UIWindow *windowForReenablingRotation;
		int interactionSheetType;
		UIActionSheet *interactionSheet;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
	} _interaction;	// 228 = 0xe4
	struct {
		CGSize size;
		float initialScale;
		float minimumScale;
		float maximumScale;
		BOOL allowsUserScaling;
	} _viewportConfigurations[6];	// 284 = 0x11c
	CGSize _minimumSize;	// 428 = 0x1ac
	int _documentType;	// 436 = 0x1b4
	float _documentScale;	// 440 = 0x1b8
	CGRect _documentBounds;	// 444 = 0x1bc
	int _enabledGestures;	// 460 = 0x1cc
	unsigned _customConfigurations;	// 464 = 0x1d0
	unsigned _mouseDownCount;	// 468 = 0x1d4
	unsigned _dataDetectorTypes;	// 472 = 0x1d8
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 476 = 0x1dc
	unsigned _webCoreNeedsDraw : 1;	// 476 = 0x1dc
	unsigned _ignoresFocusingMouse : 1;	// 476 = 0x1dc
	unsigned _ignoresKeyEvents : 1;	// 476 = 0x1dc
	unsigned _autoresizes : 1;	// 476 = 0x1dc
	unsigned _updatingSize : 1;	// 476 = 0x1dc
	unsigned _scalesToFit : 1;	// 476 = 0x1dc
	unsigned _updatesScrollView : 1;	// 476 = 0x1dc
	unsigned _hasCustomScale : 1;	// 477 = 0x1dd
	unsigned _userScrolled : 1;	// 477 = 0x1dd
	unsigned _pageNeedsReset : 1;	// 477 = 0x1dd
	unsigned _hasScrollPoint : 1;	// 477 = 0x1dd
	unsigned _setNeedsDisplayWasForced : 1;	// 477 = 0x1dd
	unsigned _gesturesDisabled : 1;	// 477 = 0x1dd
	unsigned _doubleTapRectIsReplaced : 1;	// 477 = 0x1dd
	unsigned _standaloneEditableView : 1;	// 477 = 0x1dd
	unsigned _widgetEditingView : 1;	// 478 = 0x1de
	unsigned _mouseDragged : 1;	// 478 = 0x1de
	unsigned _mouseReentrancyGuard : 1;	// 478 = 0x1de
	unsigned _isShowingFullScreenPlugIn : 1;	// 478 = 0x1de
	unsigned _isSettingRedrawFrame : 1;	// 478 = 0x1de
	unsigned _needsScrollNotifications : 1;	// 478 = 0x1de
	unsigned _loadsSynchronously : 1;	// 478 = 0x1de
	unsigned _mouseDown : 1;	// 478 = 0x1de
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 479 = 0x1df
	unsigned _geolocationDialogAllowed : 1;	// 479 = 0x1df
	unsigned _usingMinimalTilesDuringLoading : 1;	// 479 = 0x1df
	unsigned _sheetsCount : 2;	// 479 = 0x1df
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 479 = 0x1df
	unsigned _loadInProgress : 1;	// 479 = 0x1df
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 479 = 0x1df
	unsigned _classicViewportMode : 1;	// 480 = 0x1e0
	unsigned _sizeUpdatesSuspended : 1;	// 480 = 0x1e0
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 480 = 0x1e0
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 480 = 0x1e0
	unsigned _shouldIgnoreCustomViewport : 1;	// 480 = 0x1e0
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 480 = 0x1e0
	unsigned _shoudCloseWebViewAtDealloc : 1;	// 480 = 0x1e0
	unsigned _hasDrawnTiles : 1;	// 480 = 0x1e0
	WebThreadSafeUndoManager *_undoManager;	// 484 = 0x1e4
	UIWebSelectionAssistant *_webSelectionAssistant;	// 488 = 0x1e8
	UITextInteractionAssistant *_textSelectionAssistant;	// 492 = 0x1ec
	UITextSelectionView *_textSelectionView;	// 496 = 0x1f0
	UITextChecker *_textChecker;	// 500 = 0x1f4
	UIEdgeInsets _caretInsets;	// 504 = 0x1f8
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *asText;	// G=0x302c7f59; 
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x302c8075; S=0x302c80e9; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x3024d405; S=0x3024d409; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x301bb7c5; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x302c7f35; S=0x3010959d; converted property
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x30157e05; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x30108ed9; S=0x300fe285; converted property
@property(assign) id delegate;	// G=0x301af7a9; S=0x300ff589; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x3024d1ed; S=0x3024fc79; converted property
@property(readonly, assign) CGRect documentBounds;	// G=0x300ff781; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x3024f2cd; S=0x3010c759; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x3024d2e5; converted property
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x301a4819; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x301bf72d; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign) int enabledGestures;	// G=0x3024d279; S=0x300fe879; converted property
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x3024d8f9; 
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30150fcd; S=0x30156f49; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x301a4901; 
@property(assign) id interactionDelegate;	// G=0x30254ed5; S=0x300ff599; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x3024d321; S=0x3010d725; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x3024d35d; S=0x3024d341; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign) BOOL loadsSynchronously;	// G=0x3024d1d9; S=0x30108afd; converted property
@property(retain) id markedText;	// G=0x3016af61; S=0x301bb695; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x301576c9; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x3024d425; S=0x3024d429; 
@property(assign, nonatomic) BOOL plainText;
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x30157781; S=0x3024d949; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30153171; 
@property(assign, nonatomic) int selectionGranularity;	// G=0x302c7f25; S=0x301af695; 
@property(readonly, assign, nonatomic) int selectionState;	// G=0x3024d9c1; 
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x301872dd; 
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x3024d23d; S=0x301af199; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x3024d2d1; S=0x3024d2b5; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x3024d229; S=0x3024f475; 
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x3024d331; S=0x3010d8b9; converted property
@property(retain) id text;	// G=0x3024e409; S=0x3024e551; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30157901; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x3015417d; converted property
@property(assign) BOOL updatesScrollView;	// G=0x3024d2a5; S=0x3024d289; converted property
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x3024d395; converted property
@property(readonly, retain) WebView *webView;	// G=0x300fd6a9; converted property
+ (id)_createDefaultHighlightView;	// 0x301862a5
+ (id)_highlightView;	// 0x30186269
+ (double)getTimestamp;	// 0x301881ed
+ (Class)layerClass;	// 0x300fc57d
+ (id)standardTextViewPreferences;	// 0x30108899
- (id)initSimpleHTMLDocumentWithStyle:(id)style editable:(BOOL)editable withFrame:(CGRect)frame withPreferences:(id)preferences;	// 0x30108979
- (id)initWithFrame:(CGRect)frame;	// 0x300fbe8d
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x300fc00d
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x30175691
- (id)_beginPrintModeForHTMLWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x30257639
- (id)_beginPrintModeForPDFWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4;	// 0x30257261
- (void)_cleanUpPDF;	// 0x3010d319
- (void)_clearAllConsoleMessages;	// 0x3010d371
- (void)_clearDoubleTapRect;	// 0x3010d31d
- (void)_copyElement:(id)element;	// 0x30255301
- (void)_copyImage:(id)image;	// 0x30256445
- (BOOL)_dataDetectionIsActivated;	// 0x300fe371
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x300ffa89
- (void)_didScroll;	// 0x30183385
- (void)_disableWebView;	// 0x30255c81
- (void)_disableWindowRotation;	// 0x30256635
- (id)_documentFragmentForPasteboardItemAtIndex:(int)index;	// 0x3025086d
- (float)_documentScale;	// 0x3018274d
- (id)_doubleTapGestureRecognizer;	// 0x30254a55
- (void)_doubleTapRecognized:(id)recognized;	// 0x3025613d
- (float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width isPDF:(BOOL)pdf;	// 0x3024f1c1
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30257901
- (BOOL)_editable;	// 0x301af21d
- (void)_enableWebView;	// 0x30255c01
- (void)_enableWindowRotation;	// 0x302565ad
- (id)_focusedOrMainFrame;	// 0x30108f51
- (id)_groupName;	// 0x3024f5a9
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x30251449
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x3024f9d5
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebPDFView:(id)webPDFView outRenderRect:(CGRect *)rect;	// 0x30251a65
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x3024f0c9
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x30256061
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x3018425d
- (CGRect)_lastRectForRange:(id)range;	// 0x3024f829
- (void)_longPressRecognized:(id)recognized;	// 0x30255979
- (NSRange)_markedTextNSRange;	// 0x3024f8bd
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x300fc8ad
- (void)_notifyPlugInViewsOfDidZoom;	// 0x3025065d
- (void)_notifyPlugInViewsOfScaleChange;	// 0x300ff03d
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x3025071d
- (id)_parentTextView;	// 0x30156f59
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x3024d6e1
- (Class)_printFormatterClass;	// 0x3035278d
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x30100da1
- (id)_requestWithUDIDHeaderIfAppropriate:(id)udidheaderIfAppropriate;	// 0x3024d319
- (void)_resetForNewPage;	// 0x3010d93d
- (void)_resetFormDataForFrame:(id)frame;	// 0x3010d239
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x301855e9
- (void)_reshapePlugInViews;	// 0x3024f2f1
- (id)_responderForBecomeFirstResponder;	// 0x301afa61
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x301814e1
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x300fd221
- (void)_saveImages:(id)images;	// 0x3025627d
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x30182a2d
- (id)_scriptingInfoForForm:(id)form;	// 0x30250f1d
- (id)_scriptingInfoForLink:(id)link;	// 0x30250d29
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x3024d58d
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x301880ed
- (void)_setDocumentScale:(float)scale;	// 0x300fee19
- (void)_setDocumentType:(int)type;	// 0x300fe3ad
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations;	// 0x300fe3c5
- (void)_setEditable:(BOOL)editable;	// 0x3024ee95
- (void)_setLtoRTextDirection:(id)direction;	// 0x3024dbe1
- (void)_setPDFView:(id)view;	// 0x3024d315
- (void)_setParentTextView:(id)view;	// 0x30108d01
- (void)_setRtoLTextDirection:(id)direction;	// 0x3024dbf5
- (void)_showDataDetectorsSheet;	// 0x30254a65
- (void)_showImageSheet;	// 0x30256999
- (void)_showLinkSheet;	// 0x302566d1
- (void)_singleTapRecognized:(id)recognized;	// 0x30184f6d
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x301c1119
- (id)_textSelectingContainer;	// 0x3024d40d
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x30256105
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x30255fd5
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x3024eeb9
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x3024ef25
- (void)_updatePDFPageNumberLabelWithUserScrolling:(BOOL)userScrolling animated:(BOOL)animated;	// 0x301c37b9
- (void)_updateScrollViewBoundaryZoomScales;	// 0x300fed21
- (void)_updateSize;	// 0x30175235
- (void)actionDidFinish;	// 0x30254c15
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x30254fed
- (void)actionWillStart;	// 0x30254c29
- (void)addInputString:(id)string;	// 0x3024ee61
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x301861c9
// declared property getter: - (id)asText;	// 0x302c7f59
- (void)assistFormNode:(id)node;	// 0x302507bd
- (void)attemptClick:(id)click;	// 0x30186d0d
- (id)automaticallySelectedOverlay;	// 0x301b856d
- (CGRect)autoscrollContentFrame;	// 0x3024d3ed
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x302c8075
- (CGRect)autoscrollDragFrame;	// 0x3024d3d5
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x3024d439
- (BOOL)becomeFirstResponder;	// 0x30186fd1
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x3024d405
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x30256e65
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x30256fa5
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x302574dd
- (void)beginSelectionChange;	// 0x30152e21
// declared property getter: - (id)beginningOfDocument;	// 0x301bb7c5
- (BOOL)canBecomeFirstResponder;	// 0x301870d9
- (BOOL)canOpenNewPageForURL:(id)url;	// 0x30254b7d
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x301c0bb9
- (BOOL)canResignFirstResponder;	// 0x30188631
- (void)cancelAutoscroll;	// 0x302c8019
- (void)cancelInteraction;	// 0x3018565d
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x30183595
- (BOOL)cancelMouseTracking;	// 0x3024f7e9
- (BOOL)cancelTouchTracking;	// 0x3024f7a9
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x302c7f35
- (CGRect)caretRect;	// 0x3015326d
- (CGRect)caretRectForPosition:(id)position;	// 0x301b92b9
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x30153bdd
- (unsigned short)characterAfterCaretSelection;	// 0x3024eb69
- (unsigned short)characterBeforeCaretSelection;	// 0x301c17b1
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x3024eb95
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x3024d42d
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x3024d435
- (id)checkSpellingOfString:(id)string;	// 0x301bdb35
- (void)clearInteractionTimer;	// 0x30183655
- (void)clearRangedSelectionInitialExtent;	// 0x302c824d
- (void)clearSelection;	// 0x302c91a9
- (BOOL)clearWKFirstResponder;	// 0x30188635
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x302c911d
- (id)closestPositionToPoint:(CGPoint)point;	// 0x3024d55d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x3024d49d
- (void)collapseSelection;	// 0x302c90d1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x3024d739
- (void)completeInteraction;	// 0x301884b5
- (void)confirmMarkedText:(id)text;	// 0x3024ebc5
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30257c01
- (BOOL)containsOnlySelectableElements;	// 0x3024da25
// declared property getter: - (id)content;	// 0x30157e05
- (CGRect)contentFrameForView:(id)view;	// 0x302c803d
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x30255749
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x3024d371
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x3024fbe9
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x3024fc31
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x301b4d31
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x3024fb49
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x3024fb99
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x301532ed
- (void)copy:(id)copy;	// 0x3024df19
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x3024f39d
- (void)cut:(id)cut;	// 0x3024e191
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x30108ed9
- (void)dealloc;	// 0x3024fe11
- (void)deferInteraction;	// 0x302554b5
- (void)deferredBecomeFirstResponder;	// 0x301b067d
// converted property getter: - (id)delegate;	// 0x301af7a9
- (void)deleteBackward;	// 0x301ca8c5
- (void)deleteFromInput;	// 0x3024ee35
- (void)detachInteractionAssistant;	// 0x300ff999
- (void)detachSelectionView;	// 0x300ff979
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x3024d1ed
- (void)didEndScroll;	// 0x3024dae9
- (void)didEndZoom;	// 0x3024da5d
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x3024d1b5
- (void)didMoveToSuperview;	// 0x300ffb21
- (void)didRemovePlugInView:(id)view;	// 0x301828b1
- (void)didZoom;	// 0x3024da75
// converted property getter: - (CGRect)documentBounds;	// 0x300ff781
// converted property getter: - (CGRect)doubleTapRect;	// 0x3024d2e5
- (BOOL)doubleTapRectIsReplaced;	// 0x3024d301
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30257065
- (unsigned)effectiveDataDetectorTypes;	// 0x301af241
- (void)enableReachability;	// 0x300fd529
// converted property getter: - (int)enabledGestures;	// 0x3024d279
- (void)enclosingScrollerDidScroll;	// 0x3024f445
// declared property getter: - (id)endOfDocument;	// 0x3024d8f9
- (void)endPrintMode;	// 0x30256dc9
- (void)endSelectionChange;	// 0x3015364d
- (void)ensureSelection;	// 0x301b48b1
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x3024eaad
- (void)extendCurrentSelection:(int)selection;	// 0x3024e871
- (CGRect)firstRectForRange:(id)range;	// 0x301b8315
- (id)fontForCaretSelection;	// 0x301b9405
- (void)forceLayout;	// 0x30250335
- (id)formElement;	// 0x301b4d95
- (void)forwardInvocation:(id)invocation;	// 0x30151749
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x302555d5
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x30255655
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x301841fd
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x30255519
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x30184abd
- (void)handleKeyWebEvent:(id)event;	// 0x3024e33d
- (BOOL)hasContent;	// 0x30150f7d
- (BOOL)hasDrawnTiles;	// 0x30100b25
- (BOOL)hasEditableSelection;	// 0x301c0fb5
- (BOOL)hasMarkedText;	// 0x30108f09
- (BOOL)hasPlugInSubviews;	// 0x3025063d
- (BOOL)hasSelection;	// 0x3019b125
- (BOOL)hasSelection;	// 0x3024e845
- (BOOL)hasSelectionInPlainTextRegion;	// 0x3024e7cd
- (BOOL)hasSimpleTextOnlyStructure;	// 0x3024d9ed
- (BOOL)hasText;	// 0x301592c9
- (void)hideAlert;	// 0x30254c3d
- (void)hideBrowserSheet;	// 0x30254c91
- (void)hideTapHighlight;	// 0x30188559
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x302557a1
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x30185675
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x301840bd
- (void)image:(id)image didFinishSavingWithError:(id)error contextInfo:(id)info;	// 0x302563e1
- (id)implementationWebView;	// 0x3024d38d
- (float)initialScale;	// 0x300fe9e9
// declared property getter: - (id)inputDelegate;	// 0x30150fcd
- (void)insertText:(id)text;	// 0x30169c51
- (void)installGestureRecognizers;	// 0x300fcc65
- (float)integralScaleForScale:(float)scale;	// 0x300fefc1
// declared property getter: - (id)interactionAssistant;	// 0x301a4901
// converted property getter: - (id)interactionDelegate;	// 0x30254ed5
- (BOOL)isCaretInEmptyParagraph;	// 0x301c1749
- (BOOL)isClassicViewportMode;	// 0x3024d251
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x3024f2cd
// declared property getter: - (BOOL)isEditable;	// 0x301a4819
// declared property getter: - (BOOL)isEditing;	// 0x301bf72d
- (BOOL)isInInteraction;	// 0x30254a05
- (BOOL)isInPrintMode;	// 0x30256fd9
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3024d681
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x3024d601
- (BOOL)isShowingFullScreenPlugInUI;	// 0x301911c1
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x3024d321
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x3024d35d
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x301b52e9
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x301bb0f9
- (BOOL)keyboardInputChanged:(id)changed;	// 0x301b5639
- (void)keyboardInputChangedSelection:(id)selection;	// 0x301af745
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x3024e371
- (void)layoutSubviews;	// 0x301008dd
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x302501f9
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x3010ccfd
- (void)loadRequest:(id)request;	// 0x3017fbc9
// converted property getter: - (BOOL)loadsSynchronously;	// 0x3024d1d9
- (BOOL)makeWKFirstResponder;	// 0x301b46e1
// converted property getter: - (id)markedText;	// 0x3016af61
// declared property getter: - (id)markedTextRange;	// 0x301576c9
// declared property getter: - (id)markedTextStyle;	// 0x3024d425
- (float)maximumScale;	// 0x3024d215
- (id)methodSignatureForSelector:(SEL)selector;	// 0x30100a8d
- (float)minimumScale;	// 0x300fe905
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x301816b5
- (BOOL)mouseEventsChangeSelection;	// 0x30257b21
- (void)moveBackward:(unsigned)backward;	// 0x3024e711
- (void)moveForward:(unsigned)forward;	// 0x3024e6ad
- (BOOL)needsScrollNotifications;	// 0x3024d265
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x3024f33d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x301bb815
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x302c8d35
- (void)paste:(id)paste;	// 0x3024dce9
- (void)performClick:(id)click;	// 0x30188215
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x301884fd
- (BOOL)playsNicelyWithGestures;	// 0x301a48fd
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x3024d6b5
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30157d21
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x3024d635
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x3024d431
- (void)promptForReplace:(id)replace;	// 0x3024dc09
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x3024e8e5
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x3024e915
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x30157905
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x3024d831
- (CGRect)rectContainingCaretSelection;	// 0x3024f901
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x3024f95d
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x3024fcc1
- (void)redrawScaledDocument;	// 0x302503d5
- (void)release;	// 0x301009c1
- (void)replace:(id)replace;	// 0x3024dc39
- (void)replaceCurrentWordWithText:(id)text;	// 0x3024ecc9
- (void)replaceRange:(id)range withText:(id)text;	// 0x3024d781
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x3024ed75
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x301bb5b9
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x3024e9ed
- (BOOL)requiresKeyEvents;	// 0x3015b1f1
- (void)resetInteraction;	// 0x30183629
- (void)resetTilingAfterLoadComplete;	// 0x3010d699
- (BOOL)resignFirstResponder;	// 0x3010d741
- (id)retain;	// 0x300ff809
- (unsigned)retainCount;	// 0x3024d1c9
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x3015385d
- (void)saveStateToCurrentHistoryItem;	// 0x301829e5
- (id)scriptingInfoWithChildren;	// 0x3017e691
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x302c7f55
- (void)select:(id)select;	// 0x3024dca9
- (void)selectAll;	// 0x302c8f51
- (void)selectAll;	// 0x3024e661
- (void)selectAll:(id)all;	// 0x3024dc69
- (void)selectWord;	// 0x302c8339
- (id)selectedDOMRange;	// 0x30153145
- (id)selectedDOMRange;	// 0x3024e9c1
// declared property getter: - (id)selectedTextRange;	// 0x30157781
// declared property getter: - (int)selectionAffinity;	// 0x30153171
- (BOOL)selectionAtDocumentStart;	// 0x3024e7a1
- (BOOL)selectionAtWordStart;	// 0x3024e775
- (int)selectionBaseWritingDirection;	// 0x3016e0b5
- (void)selectionChanged;	// 0x302c82fd
- (void)selectionChanged:(id)changed;	// 0x30152fb9
- (CGRect)selectionClipRect;	// 0x302507d1
// declared property getter: - (int)selectionGranularity;	// 0x302c7f25
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x302c8efd
- (NSRange)selectionRange;	// 0x301bb0c5
- (id)selectionRects;	// 0x302c8dd9
- (id)selectionRectsForRange:(id)range;	// 0x301b839d
// declared property getter: - (int)selectionState;	// 0x3024d9c1
- (int)selectionState;	// 0x301c0fe1
// declared property getter: - (id)selectionView;	// 0x301872dd
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x300ff79d
- (void)sendScrollWheelEvents;	// 0x30255db5
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x30254a2d
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x300ff62d
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x30254a41
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x300fd425
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x300fe391
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x302c80e9
- (void)setBaseWritingDirection:(int)direction;	// 0x301b4859
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x3024d43d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x3024d409
- (void)setBottomBufferHeight:(float)height;	// 0x3015a045
- (void)setCaretChangeListener:(id)listener;	// 0x3024e3dd
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x3010959d
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x30157639
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x300fe285
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x300ff589
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x3024fc79
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x3010c759
- (void)setDrawsBackground:(BOOL)background;	// 0x30108d55
// converted property setter: - (void)setEnabledGestures:(int)gestures;	// 0x300fe879
- (void)setFrame:(CGRect)frame;	// 0x300fc68d
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x30108a65
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x301af17d
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x300fd3a1
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x30156f49
- (void)setInteractionAssistantGestureRecognizers;	// 0x3024ef91
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x300ff599
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x3010d725
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x3024d341
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x30108afd
// converted property setter: - (void)setMarkedText:(id)text;	// 0x301bb695
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x3024ec3d
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x3024d429
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x300fd3f9
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x300fd3cd
- (void)setMinimumSize:(CGSize)size;	// 0x300fd161
- (void)setNeedsDisplay;	// 0x30109449
- (void)setNeedsDisplayInRect:(CGRect)rect;	// 0x30109489
- (void)setOpaque:(BOOL)opaque;	// 0x30108d11
- (void)setPaused:(BOOL)paused;	// 0x3024e325
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x301911d5
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x302c82d1
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x302c8279
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x302c82a5
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x302c8ca9
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x302c8c1d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x302c81f5
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x302c8221
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x302c8b11
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x302c817d
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x3024e945
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x3024d949
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x3024d961
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x301af695
- (void)setSelectionToEnd;	// 0x302c8fe9
- (void)setSelectionToStart;	// 0x302c8f9d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x302c8b81
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x302c8385
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x301af199
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x3024d2b5
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x3024f475
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x300ff5cd
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x3010d8b9
// converted property setter: - (void)setText:(id)text;	// 0x3024e551
- (void)setTilingArea:(int)area;	// 0x3010d23d
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x3024d289
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x3024d201
- (void)setUserStyleSheet:(id)sheet;	// 0x3024f4dd
- (void)setUsesUIScrollView;	// 0x300fd525
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x300fd451
- (BOOL)shouldEnableAutoShift;	// 0x30157f1d
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x3024d23d
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x3024d2d1
- (void)showAlert:(id)alert;	// 0x30254d19
- (void)showBrowserSheet:(id)sheet;	// 0x30254ce9
- (void)showBrowserSheet:(id)sheet atPoint:(CGPoint)point;	// 0x30254cb9
- (void)showBrowserSheet:(id)sheet shouldShowFromPoint:(BOOL)point point:(CGPoint)point3;	// 0x30254d9d
- (void)showBrowserSheet:(id)sheet shouldShowFromPoint:(BOOL)point point:(CGPoint)point3 arrowDirections:(unsigned)directions;	// 0x30256175
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x3024d229
- (void)smartExtendRangedSelection:(int)selection;	// 0x302c814d
// converted property getter: - (id)standaloneEditingElement;	// 0x3024d331
- (BOOL)startActionSheet;	// 0x30255b21
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x302c841d
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x30255771
- (void)stopLoading:(id)loading;	// 0x301af1b5
- (id)superviewForSheet;	// 0x30254dc9
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x30254ef9
- (void)takeTraitsFrom:(id)from;	// 0x3024e249
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x30255705
// converted property getter: - (id)text;	// 0x3024e409
- (id)textColorForCaretSelection;	// 0x301bdf09
- (id)textFormElement;	// 0x3024d31d
- (id)textInDOMRange:(id)domrange;	// 0x301b52b9
- (id)textInRange:(id)range;	// 0x301afcb5
- (id)textInputTraits;	// 0x300fd0a1
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x301afc45
- (void)toggleBaseWritingDirection;	// 0x302c9085
// declared property getter: - (id)tokenizer;	// 0x30157901
// converted property getter: - (id)undoManager;	// 0x3015417d
- (id)undoManagerForWebView:(id)webView;	// 0x3015419d
- (void)unmarkText;	// 0x301766c1
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x3024f05d
- (void)updateSelection;	// 0x3024d391
// converted property getter: - (BOOL)updatesScrollView;	// 0x3024d2a5
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x300fd6b9
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x302556b5
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x300fe515
- (float)viewportHeight;	// 0x300ff0dd
- (float)viewportWidth;	// 0x300feae1
- (CGRect)visibleBounds;	// 0x301bf629
- (CGRect)visibleContentFrame;	// 0x3024d3bd
- (CGRect)visibleFrame;	// 0x3024d3a5
- (CGRect)visibleRectForSelecting;	// 0x30257b35
// converted property getter: - (id)webSelectionAssistant;	// 0x3024d395
// converted property getter: - (id)webView;	// 0x300fd6a9
- (void)webView:(id)view attachRootLayer:(id)layer;	// 0x30181f2d
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x3010ce19
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x3024f3dd
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x3010d479
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x3010d8f1
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x3024e271
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x302554f1
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x3010d375
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x30180dc1
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x30183bed
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x301818c9
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x30190389
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x3018312d
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x30153675
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x30181e35
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x3024e2dd
- (void)webViewDidDrawTiles:(id)webView;	// 0x30100ad1
- (void)webViewDidLayout:(id)webView;	// 0x300ff421
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x30254a29
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x300fc3cd
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x301b4cb1
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x30255d11
- (void)willMoveToSuperview:(id)superview;	// 0x300ff951
- (void)willStartScroll;	// 0x3024db81
- (void)willStartZoom;	// 0x3024dac1
- (id)wordAtPoint:(CGPoint)point;	// 0x302c9035
- (id)wordContainingCaretSelection;	// 0x3024eaf9
- (id)wordInRange:(id)range;	// 0x301afcf9
- (int)wordOffsetInRange:(id)range;	// 0x3024ea7d
- (id)wordRangeContainingCaretSelection;	// 0x3024eb3d
- (void)zoomToScale:(float)scale;	// 0x3024d445
@end

