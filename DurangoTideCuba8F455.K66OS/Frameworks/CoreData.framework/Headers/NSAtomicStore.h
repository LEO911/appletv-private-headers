/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "NSPersistentStore.h"

@class NSMutableDictionary;

@interface NSAtomicStore : NSPersistentStore {
@private
	NSMutableDictionary *_nodeCache;	// 44 = 0x2c
	NSMutableDictionary *_entityCache;	// 48 = 0x30
	NSMutableDictionary *_storeMetadata;	// 52 = 0x34
	int _nextReference;	// 56 = 0x38
	void *_reserved4;	// 60 = 0x3c
	void *_reserved5;	// 64 = 0x40
}
@property(retain) id metadata;	// G=0x33e79125; S=0x33e7954d; converted property
+ (void)initialize;	// 0x33e79259
+ (id)metadataForPersistentStoreWithURL:(id)url error:(id *)error;	// 0x33e7950d
- (id)init;	// 0x33e794cd
- (id)initWithPersistentStoreCoordinator:(id)persistentStoreCoordinator configurationName:(id)name URL:(id)url options:(id)options;	// 0x33e7966d
- (void)_addObject:(id)object;	// 0x33e78bd1
- (void)_deleteNodeFromEntityCache:(id)entityCache;	// 0x33e78dc1
- (void)_deleteNodeFromMainCache:(id)mainCache;	// 0x33e78e6d
- (void)_didLoadMetadata;	// 0x33e78d41
- (id)_getNewIDForObject:(id)object;	// 0x33e78c0d
- (void)_insertNodeIntoEntityCache:(id)cache;	// 0x33e78ea5
- (void)_insertNodeIntoMainCache:(id)cache;	// 0x33e78f81
- (void)_registerCacheNode:(id)node;	// 0x33e790f9
- (void)_removeObject:(id)object;	// 0x33e78b91
- (id)_retainedObjectIDForEntity:(id)entity referenceObject:(id)object;	// 0x33e78b5d
- (id)_retrieveNodeForObject:(id)object;	// 0x33e78fbd
- (id)_retrieveNodeForObjectID:(id)objectID;	// 0x33e78ff5
- (id)_retrieveNodesSatisfyingRequest:(id)request;	// 0x33e7982d
- (void)_storeNextReferenceInMetadata;	// 0x33e78c85
- (void)_updateObject:(id)object;	// 0x33e7a3c1
- (void)addCacheNodes:(id)nodes;	// 0x33e7a009
- (id)cacheNodeForObjectID:(id)objectID;	// 0x33e791f9
- (id)cacheNodes;	// 0x33e79219
- (void)dealloc;	// 0x33e795e1
- (id)executeCountRequest:(id)request withContext:(id)context;	// 0x33e79015
- (id)executeFetchRequest:(id)request withContext:(id)context;	// 0x33e7a4c1
- (id)executeRefreshRequest:(id)request withContext:(id)context;	// 0x33e78b51
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;	// 0x33e79279
- (id)executeSaveChangesRequest:(id)request withContext:(id)context;	// 0x33e79ab9
- (BOOL)load:(id *)load;	// 0x33e7944d
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;	// 0x33e78b55
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;	// 0x33e78b59
// converted property getter: - (id)metadata;	// 0x33e79125
- (id)newCacheNodeForManagedObject:(id)managedObject;	// 0x33e7940d
- (id)newReferenceObjectForManagedObject:(id)managedObject;	// 0x33e7a21d
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x33e7a269
- (id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x33e78d9d
- (id)objectIDForEntity:(id)entity referenceObject:(id)object;	// 0x33e791a5
- (id)obtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x33e79705
- (id)referenceObjectForObjectID:(id)objectID;	// 0x33e79359
- (BOOL)save:(id *)save;	// 0x33e7948d
// converted property setter: - (void)setMetadata:(id)metadata;	// 0x33e7954d
- (void)updateCacheNode:(id)node fromManagedObject:(id)managedObject;	// 0x33e793cd
- (void)willRemoveCacheNodes:(id)nodes;	// 0x33e78b4d
@end

