/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x3109c701; S=0x31015d39; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x3109f219; S=0x31032d0d; converted property
@property(retain) id currencyCode;	// G=0x3109f7e9; S=0x3109e525; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x3109f2b5; S=0x3109db4d; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x310a05e1; S=0x3109ee41; converted property
@property(retain) id currencySymbol;	// G=0x3109f891; S=0x3109e5b9; converted property
@property(retain) id decimalSeparator;	// G=0x3109f171; S=0x3109dabd; converted property
@property(retain) id exponentSymbol;	// G=0x3109fc81; S=0x3109e931; converted property
@property(assign) unsigned formatWidth;	// G=0x3109fea9; S=0x3109ea2d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x3109c8c1; S=0x310286b9; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x3109d6ed; S=0x3101a655; converted property
@property(retain) id groupingSeparator;	// G=0x3109f3f9; S=0x3109dbe1; converted property
@property(assign) unsigned groupingSize;	// G=0x3109fd29; S=0x31037819; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x3109f939; S=0x3109e64d; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x310a0689; S=0x3109eed5; converted property
@property(retain) id locale;	// G=0x3109d68d; S=0x3101a5f5; converted property
@property(retain) id maximum;	// G=0x3109ee19; S=0x3109c601; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x310a0521; S=0x3109ed89; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x310a03a1; S=0x3109ed21; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x3109f00d; S=0x3109f0cd; converted property
@property(retain) id minimum;	// G=0x3109edf1; S=0x3109c681; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x310a0461; S=0x31032d75; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x310a02e1; S=0x31032ddd; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x310a07c9; S=0x3109efa5; converted property
@property(retain) id minusSign;	// G=0x3109fb31; S=0x3109e809; converted property
@property(retain) id multiplier;	// G=0x3109ff69; S=0x3109ea95; converted property
@property(retain) id negativeFormat;	// G=0x3109d729; S=0x3109d7c9; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x3109e199; S=0x31015ced; converted property
@property(retain) id negativePrefix;	// G=0x3109f699; S=0x3109e3fd; converted property
@property(retain) id negativeSuffix;	// G=0x3109f741; S=0x3109e491; converted property
@property(retain) id nilSymbol;	// G=0x3109ddc9; S=0x31015c55; converted property
@property(retain) id notANumberSymbol;	// G=0x3109f4a1; S=0x3109df05; converted property
@property(assign) unsigned numberStyle;	// G=0x3109d61d; S=0x3101a69d; converted property
@property(retain) id paddingCharacter;	// G=0x310a0011; S=0x3109eb29; converted property
@property(assign) unsigned paddingPosition;	// G=0x310a00b9; S=0x3109ebbd; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x3109f135; S=0x3109c5b9; converted property
@property(retain) id perMillSymbol;	// G=0x3109fa89; S=0x3109e775; converted property
@property(retain) id percentSymbol;	// G=0x3109f9e1; S=0x3109e6e1; converted property
@property(retain) id plusSign;	// G=0x3109fbd9; S=0x3109e89d; converted property
@property(retain) id positiveFormat;	// G=0x3109d919; S=0x3109d9a5; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x3109e05d; S=0x31015ca1; converted property
@property(retain) id positivePrefix;	// G=0x3109f549; S=0x3109e2d5; converted property
@property(retain) id positiveSuffix;	// G=0x3109f5f1; S=0x3109e369; converted property
@property(retain) id roundingIncrement;	// G=0x310a0239; S=0x3109ec8d; converted property
@property(assign) unsigned roundingMode;	// G=0x310a0179; S=0x3109ec25; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x3109fde9; S=0x3109e9c5; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x3109e211; S=0x3109e289; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x3109c849; S=0x3109c7fd; converted property
@property(retain) id textAttributesForNil;	// G=0x3109de41; S=0x3109deb9; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x3109df99; S=0x3109e011; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x3109e0d5; S=0x3109e14d; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x3109c785; S=0x3109c739; converted property
@property(retain) id textAttributesForZero;	// G=0x3109dd05; S=0x3109dd7d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x3109f35d; S=0x3102b2ed; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x310a0729; S=0x3109ef3d; converted property
@property(retain) id zeroSymbol;	// G=0x310331f1; S=0x3109dc71; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x31015c49
+ (void)initialize;	// 0x310158f9
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x3103310d
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x31015919
- (id)init;	// 0x3101592d
- (id)initWithCoder:(id)coder;	// 0x3109ca05
- (void *)__Keynote_NOOP;	// 0x3109c5b1
- (void)_regenerateFormatter;	// 0x31015d81
- (void)_reset;	// 0x3109cbf1
// converted property getter: - (BOOL)allowsFloats;	// 0x3109c701
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x3109f219
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x3109c5b5
- (id)copyWithZone:(NSZone *)zone;	// 0x3109cb95
// converted property getter: - (id)currencyCode;	// 0x3109f7e9
// converted property getter: - (id)currencyDecimalSeparator;	// 0x3109f2b5
// converted property getter: - (id)currencyGroupingSeparator;	// 0x310a05e1
// converted property getter: - (id)currencySymbol;	// 0x3109f891
- (void)dealloc;	// 0x310304f1
// converted property getter: - (id)decimalSeparator;	// 0x3109f171
- (void)encodeWithCoder:(id)coder;	// 0x3109c931
// converted property getter: - (id)exponentSymbol;	// 0x3109fc81
- (void)finalize;	// 0x3109c9c5
// converted property getter: - (unsigned)formatWidth;	// 0x3109fea9
// converted property getter: - (unsigned)formatterBehavior;	// 0x3109c8c1
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x3109d6ed
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x3109d551
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x3109d531
// converted property getter: - (id)groupingSeparator;	// 0x3109f3f9
// converted property getter: - (unsigned)groupingSize;	// 0x3109fd29
// converted property getter: - (id)internationalCurrencySymbol;	// 0x3109f939
// converted property getter: - (BOOL)isLenient;	// 0x310a0689
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x3109f135
// converted property getter: - (id)locale;	// 0x3109d68d
// converted property getter: - (id)maximum;	// 0x3109ee19
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x310a0521
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x310a03a1
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x3109f00d
// converted property getter: - (id)minimum;	// 0x3109edf1
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x310a0461
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x310a02e1
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x310a07c9
// converted property getter: - (id)minusSign;	// 0x3109fb31
// converted property getter: - (id)multiplier;	// 0x3109ff69
// converted property getter: - (id)negativeFormat;	// 0x3109d729
// converted property getter: - (id)negativeInfinitySymbol;	// 0x3109e199
// converted property getter: - (id)negativePrefix;	// 0x3109f699
// converted property getter: - (id)negativeSuffix;	// 0x3109f741
// converted property getter: - (id)nilSymbol;	// 0x3109ddc9
// converted property getter: - (id)notANumberSymbol;	// 0x3109f4a1
- (id)numberFromString:(id)string;	// 0x3109c8f9
// converted property getter: - (unsigned)numberStyle;	// 0x3109d61d
// converted property getter: - (id)paddingCharacter;	// 0x310a0011
// converted property getter: - (unsigned)paddingPosition;	// 0x310a00b9
// converted property getter: - (id)perMillSymbol;	// 0x3109fa89
// converted property getter: - (id)percentSymbol;	// 0x3109f9e1
// converted property getter: - (id)plusSign;	// 0x3109fbd9
// converted property getter: - (id)positiveFormat;	// 0x3109d919
// converted property getter: - (id)positiveInfinitySymbol;	// 0x3109e05d
// converted property getter: - (id)positivePrefix;	// 0x3109f549
// converted property getter: - (id)positiveSuffix;	// 0x3109f5f1
// converted property getter: - (id)roundingIncrement;	// 0x310a0239
// converted property getter: - (unsigned)roundingMode;	// 0x310a0179
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x3109fde9
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x31015d39
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x31032d0d
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x3109e525
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x3109db4d
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x3109ee41
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x3109e5b9
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x3109dabd
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x3109e931
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x3109ea2d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x310286b9
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x3101a655
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x3109dbe1
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x31037819
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x3109e64d
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x3109eed5
// converted property setter: - (void)setLocale:(id)locale;	// 0x3101a5f5
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x3109c601
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x3109ed89
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x3109ed21
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x3109f0cd
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x3109c681
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x31032d75
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x31032ddd
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x3109efa5
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x3109e809
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x3109ea95
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x3109d7c9
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x31015ced
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x3109e3fd
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x3109e491
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x31015c55
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x3109df05
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3101a69d
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x3109eb29
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x3109ebbd
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x3109c5b9
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x3109e775
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x3109e6e1
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x3109e89d
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x3109d9a5
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x31015ca1
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x3109e2d5
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x3109e369
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x3109ec8d
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x3109ec25
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x3109e9c5
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x3109e289
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x3109c7fd
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x3109deb9
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x3109e011
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x3109e14d
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x3109c739
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x3109dd7d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x3102b2ed
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x3109ef3d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x3109dc71
- (id)stringForObjectValue:(id)objectValue;	// 0x3101a711
- (id)stringFromNumber:(id)number;	// 0x3101a6f5
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x3109e211
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x3109c849
// converted property getter: - (id)textAttributesForNil;	// 0x3109de41
// converted property getter: - (id)textAttributesForNotANumber;	// 0x3109df99
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x3109e0d5
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x3109c785
// converted property getter: - (id)textAttributesForZero;	// 0x3109dd05
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x3109f35d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x310a0729
// converted property getter: - (id)zeroSymbol;	// 0x310331f1
@end

