/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
@private
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x310941b5
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x31094119
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x31094169
+ (id)decimalNumberWithString:(id)string;	// 0x310940ed
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x310940bd
+ (id)defaultBehavior;	// 0x31093a09
+ (id)maximumDecimalNumber;	// 0x31093d09
+ (id)minimumDecimalNumber;	// 0x31093d75
+ (id)notANumber;	// 0x31093f75
+ (id)numberWithBool:(BOOL)aBool;	// 0x31092dd1
+ (id)numberWithChar:(BOOL)aChar;	// 0x3109315d
+ (id)numberWithDouble:(double)aDouble;	// 0x31092e11
+ (id)numberWithFloat:(float)aFloat;	// 0x31092e55
+ (id)numberWithInt:(int)int;	// 0x3109305d
+ (id)numberWithInteger:(int)integer;	// 0x3109301d
+ (id)numberWithLong:(long)aLong;	// 0x31092f5d
+ (id)numberWithLongLong:(long long)longLong;	// 0x31092ed9
+ (id)numberWithShort:(short)aShort;	// 0x310930dd
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x3109311d
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x31092fdd
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x31092f9d
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x31092f1d
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x31092e95
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x3109309d
+ (id)one;	// 0x31093fd9
+ (void)setDefaultBehavior:(id)behavior;	// 0x31093a65
+ (id)zero;	// 0x3109403d
- (id)initWithCoder:(id)coder;	// 0x31093df9
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x31093e95
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x31093ed9
- (id)initWithString:(id)string;	// 0x31093e61
- (id)initWithString:(id)string locale:(id)locale;	// 0x31093e2d
- (BOOL)boolValue;	// 0x31093865
- (BOOL)charValue;	// 0x310939c5
- (Class)classForCoder;	// 0x310939e9
- (int)compare:(id)compare;	// 0x3109461d
- (id)copy;	// 0x31093f0d
- (id)copyWithZone:(NSZone *)zone;	// 0x310945a5
- (id)decimalNumberByAdding:(id)adding;	// 0x31093c61
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x310947ed
- (id)decimalNumberByDividingBy:(id)by;	// 0x31093b3d
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x31094985
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x31093b85
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x310948fd
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x31093aad
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x31094aa1
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x31093af5
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x31094a0d
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x3109468d
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x31093c29
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x31093c15
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x31093bcd
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x31094875
- (XXStruct_9isexA)decimalValue;	// 0x31094255
- (id)description;	// 0x31093de1
- (id)descriptionWithLocale:(id)locale;	// 0x3109460d
- (double)doubleValue;	// 0x31092cd1
- (void)encodeWithCoder:(id)coder;	// 0x310943ed
- (float)floatValue;	// 0x31093889
- (void)getValue:(void *)value;	// 0x31093ca9
- (int)intValue;	// 0x31093939
- (BOOL)isEqual:(id)equal;	// 0x31093cc5
- (long long)longLongValue;	// 0x310938c1
- (long)longValue;	// 0x310938f9
- (const char *)objCType;	// 0x31092cc5
- (short)shortValue;	// 0x3109397d
- (unsigned char)unsignedCharValue;	// 0x310939a1
- (unsigned)unsignedIntValue;	// 0x31093919
- (unsigned long long)unsignedLongLongValue;	// 0x310938a9
- (unsigned long)unsignedLongValue;	// 0x310938d9
- (unsigned short)unsignedShortValue;	// 0x31093959
@end

