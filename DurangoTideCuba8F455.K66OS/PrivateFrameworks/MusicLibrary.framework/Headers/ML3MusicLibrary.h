/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, NSArray, ML3CacheGenerator, ML3MusicLibrary_SQLiteDatabaseContext, ML3Container;

@interface ML3MusicLibrary : NSObject {
@private
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 4 = 0x4
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 8 = 0x8
	dispatch_queue_s *_backgroundQueue;	// 12 = 0xc
	NSString *_path;	// 16 = 0x10
	NSString *_notifyName;	// 20 = 0x14
	NSString *_nonContentsNotifyName;	// 24 = 0x18
	int _notifyToken;	// 28 = 0x1c
	int _nonContentsNotifyToken;	// 32 = 0x20
	int _downloadFinishedNotifyToken;	// 36 = 0x24
	BOOL _enableWrites;	// 40 = 0x28
	BOOL _hasEverConnectedToDatabase;	// 41 = 0x29
	id _revertToBackupObserver;	// 44 = 0x2c
	id _mcSettingsObserver;	// 48 = 0x30
}
@property(readonly, assign) ML3CacheGenerator *cacheGenerator;	// G=0x31beb161; 
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x31bc306d; @synthesize=_hasEverConnectedToDatabase
@property(readonly, copy) NSArray *localizedSectionIndexTitles;	// G=0x31bbc5fd; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x31bbbec9; 
@property(readonly, copy) NSString *path;	// G=0x31bef1e1; @synthesize=_path
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x31bc84ad; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x31bc8521; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x31bec505; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x31bb7675; 
@property(readonly, assign) BOOL requiresiTunesCommandsProcessing;	// G=0x31bb76b1; 
@property(readonly, assign, nonatomic) unsigned long long syncGenerationID;	// G=0x31bc2ea9; 
+ (void)attachAuxiliaryDatabases:(sqlite3 *)databases;	// 0x31bb5725
+ (void)buildDatabaseFromHomeSharingConnection:(id)homeSharingConnection atPath:(id)path completionHandler:(id)handler;	// 0x31bfbfb1
+ (void)buildDatabaseFromHomeSharingConnection:(id)homeSharingConnection atPath:(id)path completionHandler:(id)handler progressHandler:(id)handler4;	// 0x31c001b1
+ (void)buildDatabaseTablesUsingHandle:(sqlite3 *)handle;	// 0x31bffa5d
+ (void)closeDatabaseHandle:(sqlite3 *)handle;	// 0x31bef1f9
+ (BOOL)createContainerTriggersUsingHandle:(sqlite3 *)handle;	// 0x31c016b5
+ (BOOL)createItemTriggersUsingHandle:(sqlite3 *)handle;	// 0x31c027dd
+ (void)createTriggersUsingHandle:(sqlite3 *)handle;	// 0x31c015f5
+ (BOOL)dropOldContainerTriggersUsingHandle:(sqlite3 *)handle;	// 0x31c0175d
+ (BOOL)dropOldItemTriggersUsingHandle:(sqlite3 *)handle;	// 0x31c01799
+ (void)dropOldTriggersUsingHandle:(sqlite3 *)handle;	// 0x31c0170d
+ (void)ensureIndexExists:(id)exists onHandle:(sqlite3 *)handle entityClass:(Class)aClass indexableSQL:(id)sql;	// 0x31bebee5
+ (void)ensureIndexExists:(id)exists onHandle:(sqlite3 *)handle entityClass:(Class)aClass properties:(id)properties;	// 0x31bebe41
+ (void)ensureIndicesExistOnHandle:(sqlite3 *)handle;	// 0x31beb591
+ (void)ensureSectionAndListIndicesExist:(id)exist onHandle:(sqlite3 *)handle entityClass:(Class)aClass filteredProperties:(id)properties sectionProperties:(id)properties5 orderingProperties:(id)properties6 representativeItemProperty:(id)property;	// 0x31bebd51
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x31bebc15
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x31bb57d9
+ (BOOL)executeUsingHandle:(sqlite3 *)handle eachSQL:(id)sql;	// 0x31c026e5
+ (BOOL)importationEnabled;	// 0x31beaf39
+ (void)initialize;	// 0x31bb3509
+ (void)limitCacheSize:(sqlite3 *)size;	// 0x31bb69d9
+ (id)mainLibraryPath;	// 0x31bb3bb9
+ (void)mediaFolderPathDidChangeNotification:(id)mediaFolderPath;	// 0x31bec151
+ (void)prepareStatementForSQL:(id)sql usingHandle:(sqlite3 *)handle block:(id)block;	// 0x31bef231
+ (void)registerCustomCallbacksOnHandle:(sqlite3 *)handle;	// 0x31bb69f9
+ (void)registerFunctionsOnHandle:(sqlite3 *)handle;	// 0x31bb6a0d
+ (id)selectStatementValueForSQL:(id)sql defaultValue:(id)value usingHandle:(sqlite3 *)handle;	// 0x31c01b85
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x31bb41d5
+ (id)sharedLibrary;	// 0x31bb4739
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x31bc4b25
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x31bb75a5
+ (void)stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x31bb75d1
+ (CFDictionaryRef)threadLocalCFMutableDictionaryForKey:(id)key withValueCallbacks:(const XXStruct_MSEYlC *)valueCallbacks;	// 0x31bec235
+ (BOOL)updateSortMapOnHandle:(sqlite3 *)handle;	// 0x31bef4ed
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x31bb37f1
- (void)_debugLoggingOptionsDidChangeNotification:(id)_debugLoggingOptions;	// 0x31bed43d
- (int)_executediTunesCommandsVersion;	// 0x31bb76cd
- (BOOL)_mustProcessLanguageChange;	// 0x31bb77b1
- (BOOL)_schemaHasDefinedTable:(id)table;	// 0x31c01c65
- (void)accessDatabaseContextUsingBlock:(id)block;	// 0x31bb4791
- (void)accessSortKeyBuilder:(id)builder;	// 0x31bbcce1
- (long long)addStringToSortMap:(id)sortMap;	// 0x31bec98d
- (id)backgroundQueue_backgroundDatabaseContext;	// 0x31bbc559
// declared property getter: - (id)cacheGenerator;	// 0x31beb161
- (BOOL)canWriteToDatabase;	// 0x31beaf3d
- (void)checkForChangesOnConnection:(id)changesOnConnection completionHandler:(id)handler;	// 0x31bfce89
- (void)createTriggers;	// 0x31beb019
- (void)dealloc;	// 0x31bed245
- (void)dropOldTriggers;	// 0x31beaf8d
- (void)ensureIndicesExist;	// 0x31beb505
- (id)entityForClass:(Class)aClass persistentID:(long long)anId;	// 0x31bebf95
- (void)executeITDBPostProcessing;	// 0x31c01f51
- (BOOL)executeITunesCommands;	// 0x31c02129
- (BOOL)executeSQL:(id)sql;	// 0x31becbc5
- (void)fillContainerForHomeSharingConnection:(id)homeSharingConnection containerID:(long long)anId completionHandler:(id)handler;	// 0x31bfbfdd
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x31bc306d
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x31bed5cd
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x31bbcbad
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x31bbc5fd
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x31bbbec9
- (id)newDatabaseContext;	// 0x31bb4875
- (void)notifyContentsDidChange;	// 0x31bc5145
- (void)notifyNonContentsPropertyDidChange;	// 0x31bc88b9
- (int)openDatabaseHandle:(sqlite3 **)handle;	// 0x31bb48c1
// declared property getter: - (id)path;	// 0x31bef1e1
- (void)performOperationInBackground:(id)background;	// 0x31bede55
- (void)performTransactionWithBlock:(id)block;	// 0x31bbc4ed
- (void)populateStaticItemsOfDynamicContainers;	// 0x31beb4b5
- (void)postChangeNotificationAndScheduleFlush;	// 0x31bc5231
- (void)postNonContentsChangeNotificationAndScheduleFlush;	// 0x31bc8905
// declared property getter: - (id)preferredAudioTracks;	// 0x31bc84ad
// declared property getter: - (id)preferredSubtitleTracks;	// 0x31bc8521
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x31bb4745
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x31bec505
- (void)reconnectToDatabase;	// 0x31bedea1
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x31bb7675
// declared property getter: - (BOOL)requiresiTunesCommandsProcessing;	// 0x31bb76b1
- (void)savePlaylists;	// 0x31beb0a5
- (void)saveTrackMetadata;	// 0x31bee5cd
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x31bbcd91
- (id)selectStatementValueForSQL:(id)sql defaultValue:(id)value;	// 0x31bc22b5
// declared property getter: - (unsigned long long)syncGenerationID;	// 0x31bc2ea9
- (void)updateActivePlaylistNamesForCurrentLanguage;	// 0x31c0194d
- (void)updateOrderingLanguagesForCurrentLangauge;	// 0x31c02621
- (BOOL)updateSortMap;	// 0x31bec6dd
@end

