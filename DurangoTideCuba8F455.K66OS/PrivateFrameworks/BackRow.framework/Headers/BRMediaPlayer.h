/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackRow.framework/BackRow
 */

#import "BRTransportDataProvider.h"
#import <NSObject.h> // Unknown library
#import "BackRow-Structs.h"

@class NSMutableArray;
@protocol BRPlayerDelegate;

@interface BRMediaPlayer : NSObject <BRTransportDataProvider> {
@private
	NSMutableArray *_stateStack;	// 4 = 0x4
	id<BRPlayerDelegate> _playerDelegate;	// 8 = 0x8
}
@property(assign) long chapterGroupIndex;	// G=0x32fc30dd; S=0x32fc30d9; converted property
@property(assign) long currentChapterIndex;	// G=0x32fc30c5; S=0x32fc30c1; converted property
@property(assign) BOOL disablePlatformFilters;	// G=0x32fc3129; S=0x32fc3125; converted property
@property(assign) double elapsedTime;	// G=0x32fc3079; S=0x32fc3075; converted property
@property(assign) BOOL isPlaylistDynamic;	// G=0x32fc31a9; S=0x32fc31a5; converted property
@property(assign) BOOL muted;	// G=0x32fc31b9; S=0x32fc31b5; converted property
@property(retain) id playbackDate;	// G=0x32fc3085; S=0x32fc3081; converted property
@property(retain, nonatomic) id<BRPlayerDelegate> playerDelegate;	// G=0x32fc313d; S=0x32fc3691; @synthesize=_playerDelegate
@property(retain) id playerSpecificOptions;	// G=0x32fc31c9; S=0x32fc31c5; converted property
@property(assign) int playlistEndAction;	// G=0x32fc3139; S=0x32fc3135; converted property
@property(assign) int repeatMode;	// G=0x32fc3195; S=0x32fc3191; converted property
@property(assign) long selectedAudioTrackID;	// G=0x32fc3181; S=0x32fc317d; converted property
@property(assign) long selectedSubtitleTrackID;	// G=0x32fc316d; S=0x32fc3169; converted property
@property(assign) BOOL shufflePlayback;	// G=0x32fc3189; S=0x32fc3185; converted property
@property(assign) BOOL skipExplicit;	// G=0x32fc31a1; S=0x32fc319d; converted property
@property(assign) double startTime;	// G=0x32fc30a1; S=0x32fc309d; converted property
@property(assign) double stopTime;	// G=0x32fc3095; S=0x32fc3091; converted property
@property(assign) double virtualChapterMark;	// G=0x32fc30b1; S=0x32fc30ad; converted property
@property(assign) BOOL visualsSuppressed;	// G=0x32fc3131; S=0x32fc312d; converted property
@property(assign) float volume;	// G=0x32fc34a9; S=0x32fc31c1; converted property
+ (BOOL)allowMultiplePlayers;	// 0x32fc3031
+ (id)contentTypes;	// 0x32fc302d
+ (BOOL)handlesVideoForType:(id)type;	// 0x32fc3035
- (id)init;	// 0x32fc35e5
- (void)_checkPlayerMedia:(id)media;	// 0x32fc3291
- (void)_invalidateAsset:(id)asset;	// 0x32fc32cd
- (void)appendMediaList:(id)list;	// 0x32fc3049
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x32fc304d
- (BOOL)attemptAuthorizationWithError:(id *)error;	// 0x32fc34d5
- (id)audioTrackIDs;	// 0x32fc3175
- (id)avAsset;	// 0x32f478f9
- (BRTimeRange)bufferedRange;	// 0x32fc3101
- (float)bufferingProgress;	// 0x32fc3119
- (id)chapterAtIndex:(long)index;	// 0x32fc30f9
- (long)chapterCount;	// 0x32fc30f5
- (id)chapterGroupAtIndex:(long)index;	// 0x32fc30e1
- (long)chapterGroupCount;	// 0x32fc30d5
// converted property getter: - (long)chapterGroupIndex;	// 0x32fc30dd
- (long)chapterIndexForTime:(double)time;	// 0x32fc30c9
- (BOOL)chapterIsPlayable:(long)playable;	// 0x32fc30cd
- (id)chapters;	// 0x32fc30f1
- (void)clearStack;	// 0x32fc3329
- (id)collection;	// 0x32fc3051
- (BOOL)cueMediaWithError:(id *)error;	// 0x32fc3511
// converted property getter: - (long)currentChapterIndex;	// 0x32fc30c5
- (long)currentInterstitialIndex;	// 0x32fc30e9
- (id)currentVideoFrame;	// 0x32fc3155
- (void)dealloc;	// 0x32f30075
- (id)debugStringForState:(int)state;	// 0x32fc31cd
// converted property getter: - (BOOL)disablePlatformFilters;	// 0x32fc3129
- (id)displayStringForAudioTrackID:(long)audioTrackID;	// 0x32fc3179
- (id)displayStringForSubtitleTrackID:(long)subtitleTrackID;	// 0x32fc3165
- (double)duration;	// 0x32fc306d
// converted property getter: - (double)elapsedTime;	// 0x32fc3079
- (BOOL)hasRealChapters;	// 0x32fc30d1
- (id)interstitialTimes;	// 0x32fc30e5
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x32fc31a9
- (double)keyframeTimeNearTime:(double)time searchForwards:(BOOL)forwards;	// 0x32fc3159
- (id)media;	// 0x32f26da1
- (int)mediaCount;	// 0x32fc3569
- (long)mediaIndex;	// 0x32fc3059
// converted property getter: - (BOOL)muted;	// 0x32fc31b9
- (void)nextChapter;	// 0x32fc30b9
- (void)nextMedia;	// 0x32fc31b1
- (int)peekState;	// 0x32fc33cd
// converted property getter: - (id)playbackDate;	// 0x32fc3085
- (id)playbackInfo;	// 0x32fc3121
// declared property getter: - (id)playerDelegate;	// 0x32fc313d
// converted property getter: - (id)playerSpecificOptions;	// 0x32fc31c9
- (int)playerState;	// 0x32fc3061
- (BOOL)playingVisualContent;	// 0x32fc314d
// converted property getter: - (int)playlistEndAction;	// 0x32fc3139
- (int)popState;	// 0x32fc3351
- (void)previousChapter;	// 0x32fc30bd
- (void)previousMedia;	// 0x32fc31ad
- (void)pushState:(int)state;	// 0x32fc342d
// converted property getter: - (int)repeatMode;	// 0x32fc3195
- (void)resetToBeginning;	// 0x32fc30a9
- (BOOL)reverseTouchSwipeBehavior;	// 0x32fc303d
// converted property getter: - (long)selectedAudioTrackID;	// 0x32fc3181
// converted property getter: - (long)selectedSubtitleTrackID;	// 0x32fc316d
// converted property setter: - (void)setChapterGroupIndex:(long)index;	// 0x32fc30d9
// converted property setter: - (void)setCurrentChapterIndex:(long)index;	// 0x32fc30c1
// converted property setter: - (void)setDisablePlatformFilters:(BOOL)filters;	// 0x32fc3125
// converted property setter: - (void)setElapsedTime:(double)time;	// 0x32fc3075
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x32fc31a5
- (void)setMediaAsCurrentlyPlayingAppendingTrackList:(id)list;	// 0x32fc3045
- (BOOL)setMediaAtIndex:(long)index inCollection:(id)collection error:(id *)error;	// 0x32fc35a9
- (BOOL)setMediaAtIndex:(long)index inTrackList:(id)trackList error:(id *)error;	// 0x32fc3041
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x32fc31b5
// converted property setter: - (void)setPlaybackDate:(id)date;	// 0x32fc3081
// declared property setter: - (void)setPlayerDelegate:(id)delegate;	// 0x32fc3691
// converted property setter: - (void)setPlayerSpecificOptions:(id)options;	// 0x32fc31c5
// converted property setter: - (void)setPlaylistEndAction:(int)action;	// 0x32fc3135
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x32fc3191
// converted property setter: - (void)setSelectedAudioTrackID:(long)anId;	// 0x32fc317d
// converted property setter: - (void)setSelectedSubtitleTrackID:(long)anId;	// 0x32fc3169
// converted property setter: - (void)setShufflePlayback:(BOOL)playback;	// 0x32fc3185
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x32fc319d
- (void)setStartDate:(id)date isEstimate:(BOOL)estimate;	// 0x32fc3089
// converted property setter: - (void)setStartTime:(double)time;	// 0x32fc309d
- (BOOL)setState:(int)state error:(id *)error;	// 0x32fc305d
// converted property setter: - (void)setStopTime:(double)time;	// 0x32fc3091
// converted property setter: - (void)setVirtualChapterMark:(double)mark;	// 0x32fc30ad
// converted property setter: - (void)setVisualsSuppressed:(BOOL)suppressed;	// 0x32fc312d
// converted property setter: - (void)setVolume:(float)volume;	// 0x32fc31c1
// converted property getter: - (BOOL)shufflePlayback;	// 0x32fc3189
// converted property getter: - (BOOL)skipExplicit;	// 0x32fc31a1
- (id)startDate;	// 0x32fc308d
// converted property getter: - (double)startTime;	// 0x32fc30a1
// converted property getter: - (double)stopTime;	// 0x32fc3095
- (BOOL)stopsActiveAudioPlayer;	// 0x32fc3039
- (id)subtitleTrackIDs;	// 0x32fc3161
- (BOOL)supportsBufferedRange;	// 0x32fc30fd
- (BOOL)supportsMultipleTrickSpeeds;	// 0x32fc3065
- (BOOL)supportsRepeatModes;	// 0x32fc3199
- (BOOL)supportsShufflePlayback;	// 0x32fc318d
- (BOOL)supportsTrickPlay;	// 0x32fc3069
- (BOOL)supportsVolumeControl;	// 0x32fc31bd
- (int)swapState:(int)state;	// 0x32fc33fd
- (id)trackList;	// 0x32fc3055
// converted property getter: - (double)virtualChapterMark;	// 0x32fc30b1
- (id)visuals;	// 0x32fc3151
// converted property getter: - (BOOL)visualsSuppressed;	// 0x32fc3131
// converted property getter: - (float)volume;	// 0x32fc34a9
@end

