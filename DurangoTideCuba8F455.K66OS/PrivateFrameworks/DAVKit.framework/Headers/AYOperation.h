/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DAVKit.framework/DAVKit
 */

#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSThread, NSError, NSLock;
@protocol AYGroup, AYNotificationDelegate;

@interface AYOperation : NSObject {
	id _asyncProxy;	// 4 = 0x4
	NSThread *_currentThread;	// 8 = 0x8
	NSThread *_baseThread;	// 12 = 0xc
	AYOperation *_parentOperation;	// 16 = 0x10
	AYOperation *_mainOperation;	// 20 = 0x14
	AYOperation *_currentChildOperation;	// 24 = 0x18
	id<AYGroup> _group;	// 28 = 0x1c
	NSLock *_operationLock;	// 32 = 0x20
	NSError *_error;	// 36 = 0x24
	BOOL _operationEnded;	// 40 = 0x28
	BOOL _operationAborted;	// 41 = 0x29
	BOOL _silent;	// 42 = 0x2a
	BOOL _canAbortNow;	// 43 = 0x2b
	BOOL _inAbortProcess;	// 44 = 0x2c
	int _currentMark;	// 48 = 0x30
	void *_reserved;	// 52 = 0x34
	id<AYNotificationDelegate> _notificationDelegate;	// 56 = 0x38
	NSMutableDictionary *_privateInfos;	// 60 = 0x3c
}
@property(readonly, retain) NSThread *baseThread;	// G=0x314d40d5; converted property
@property(assign) BOOL canAbortNow;	// G=0x314d4181; S=0x314d44e5; converted property
@property(readonly, assign) int currentMark;	// G=0x314d411d; converted property
@property(retain) NSError *error;	// G=0x314d42dd; S=0x314d430d; converted property
@property(readonly, retain) AYOperation *mainOperation;	// G=0x314d40b5; converted property
@property(assign) id notificationDelegate;	// G=0x314d4161; S=0x314d4151; converted property
@property(retain) id operationCompanion;	// G=0x314d47c9; S=0x314d47e5; converted property
@property(retain) id operationGroup;	// G=0x314d4109; S=0x314d481d; converted property
@property(readonly, retain) AYOperation *parentOperation;	// G=0x314d40a5; converted property
@property(assign, getter=isSilent) BOOL silent;	// G=0x314d413d; S=0x314d412d; converted property
+ (BOOL)_dispatchNextOperationInQueue;	// 0x314d60ed
+ (void)_initCurrentThread;	// 0x314d58ed
+ (void)_initMainThread;	// 0x314d58b1
+ (void)_lockForAllThreads;	// 0x314d4059
+ (BOOL)_lockWaitingForOperation;	// 0x314d56a5
+ (void)_noLockForThread:(id)thread;	// 0x314d404d
+ (void)_queueOneBlock;	// 0x314d6771
+ (void)_setCurrentOperation:(id)operation;	// 0x314d4da5
+ (id)currentOperation;	// 0x314d4e31
+ (void)endAllPendingOperationsOfGroup:(id)group withError:(id)error;	// 0x314d50d5
+ (void)initialize;	// 0x314d571d
+ (void)lockOperations;	// 0x314d565d
+ (id)mainThread;	// 0x314d4069
+ (BOOL)popOperation:(id)operation;	// 0x314d5401
+ (void)pushInvocation:(id)invocation;	// 0x314d54e5
+ (void)unblockAllOperationsForGroup:(id)group;	// 0x314d52bd
+ (void)unlockOperations;	// 0x314d55f1
- (id)init;	// 0x314d4199
- (id)_currentChildOperation;	// 0x314d4095
- (void)_handleEventRecursively:(id)recursively;	// 0x314d4c8d
- (void)_sendEventToThreadLocked:(id)threadLocked;	// 0x314d4bed
- (void)_setCurrentChildOperation:(id)operation;	// 0x314d4085
- (void)_setCurrentThread:(id)thread;	// 0x314d4075
- (void)_startAbortProcess;	// 0x314d4b39
- (void)abortOperation;	// 0x314d4981
- (id)async;	// 0x314d4f45
// converted property getter: - (id)baseThread;	// 0x314d40d5
// converted property getter: - (BOOL)canAbortNow;	// 0x314d4181
- (void)clearError;	// 0x314d44bd
// converted property getter: - (int)currentMark;	// 0x314d411d
- (void)dealloc;	// 0x314d5045
- (void)endOperationWithError:(id)error;	// 0x314d5f7d
// converted property getter: - (id)error;	// 0x314d42dd
- (void)finalizeOperation;	// 0x314d4195
- (BOOL)handleEventInThread:(id)thread;	// 0x314d4aed
- (void)handleNotificationOfChildOperation:(id)childOperation notification:(id)notification;	// 0x314d414d
- (BOOL)hasOperationEnded;	// 0x314d40f9
- (id)infoForKey:(id)key;	// 0x314d4229
- (BOOL)isAsync;	// 0x314d40e5
- (BOOL)isRunLoopBased;	// 0x314d4119
// converted property getter: - (BOOL)isSilent;	// 0x314d413d
- (void)lockOperation;	// 0x314d4d5d
// converted property getter: - (id)mainOperation;	// 0x314d40b5
- (void)markWithTag:(int)tag;	// 0x314d47b1
- (void)markWithTag:(int)tag notify:(BOOL)notify;	// 0x314d4719
// converted property getter: - (id)notificationDelegate;	// 0x314d4161
- (void)notifyWithName:(id)name infos:(id)infos;	// 0x314d454d
// converted property getter: - (id)operationCompanion;	// 0x314d47c9
// converted property getter: - (id)operationGroup;	// 0x314d4109
- (long long)operationProgress;	// 0x314d4171
- (id)operationThread;	// 0x314d40c5
- (long long)operationTotal;	// 0x314d4179
- (void)operationWillAbort;	// 0x314d4191
// converted property getter: - (id)parentOperation;	// 0x314d40a5
- (void)postOperation;	// 0x314d42b5
- (void)removeInfoForKey:(id)key;	// 0x314d4209
- (void)resetOperation;	// 0x314d485d
- (void)runOperationWithTimeOut:(unsigned)timeOut;	// 0x314d5ca9
- (void)sendEventToThread:(id)thread;	// 0x314d4ba5
// converted property setter: - (void)setCanAbortNow:(BOOL)now;	// 0x314d44e5
// converted property setter: - (void)setError:(id)error;	// 0x314d430d
- (void)setInfo:(id)info forKey:(id)key;	// 0x314d4249
// converted property setter: - (void)setNotificationDelegate:(id)delegate;	// 0x314d4151
// converted property setter: - (void)setOperationCompanion:(id)companion;	// 0x314d47e5
// converted property setter: - (void)setOperationGroup:(id)group;	// 0x314d481d
// converted property setter: - (void)setSilent:(BOOL)silent;	// 0x314d412d
- (id)syncFor:(id)aFor;	// 0x314d4ea9
- (id)synchronous;	// 0x314d4e75
- (void)unlockOperation;	// 0x314d4d15
- (void)waitForOperationToEnd;	// 0x314d48a9
@end

