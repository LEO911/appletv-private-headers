/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRLayer.h"

@class NSMutableArray, NSArray, MRTransition, NSMutableDictionary, MCContainerSerializer;

@interface MRLayerSerializer : MRLayer {
	MCContainerSerializer *mContainer;	// 96 = 0x60
	NSMutableArray *mSublayers;	// 100 = 0x64
	NSMutableDictionary *mSublayersForPlugs;	// 104 = 0x68
	BOOL mNeedsToUpdateSublayersTiming;	// 108 = 0x6c
	BOOL mNeedsToUpdateTransitionAttributes;	// 109 = 0x6d
	MRLayer *mCurrentSublayer;	// 112 = 0x70
	MRLayer *mNextSublayer;	// 116 = 0x74
	MRTransition *mCurrentTransition;	// 120 = 0x78
	MRLayer *mSublayerForTransition;	// 124 = 0x7c
	BOOL mIsTransitioning;	// 128 = 0x80
	MRLayer *mSublayerToPrecompute;	// 132 = 0x84
	id mPrecomputingTarget;	// 136 = 0x88
	unsigned mPrecomputingType;	// 140 = 0x8c
	MRLayer *mLiveSourceSublayer;	// 144 = 0x90
	MRLayer *mLiveTargetSublayer;	// 148 = 0x94
	BOOL mLiveTransitionIsBackwards;	// 152 = 0x98
	BOOL mHasWarnedDelegateAboutNearingEnd;	// 153 = 0x99
}
@property(readonly, assign) NSArray *sublayers;	// G=0x33d767f9; @synthesize=mSublayers
- (id)initWithPlug:(id)plug andParameters:(id)parameters inSuperlayer:(id)superlayer;	// 0x33d73e29
- (id)_createSublayerForPlug:(id)plug;	// 0x33d76d4d
- (void)_deleteSublayer:(id)sublayer;	// 0x33d76ec5
- (void)_executeLayerCommandQueue;	// 0x33d76809
- (BOOL)_isNative3D;	// 0x33d75c4d
- (void)_observePlug;	// 0x33d77281
- (void)_observePlugOnPreactivate;	// 0x33d77375
- (void)_observeSublayer:(id)sublayer;	// 0x33d770a1
- (void)_observeSublayerOnPreactivate:(id)preactivate;	// 0x33d771f1
- (void)_precomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d77565
- (void)_preprecomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d78405
- (void)_prerenderSublayersAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d77add
- (void)_renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d777a1
- (id)_retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d77909
- (void)_setNeedsToRequestRebuildAudio:(BOOL)requestRebuildAudio;	// 0x33d77491
- (void)_unobservePlug;	// 0x33d77309
- (void)_unobservePlugOnDepreactivate;	// 0x33d7740d
- (void)_unobserveSublayer:(id)sublayer;	// 0x33d77149
- (void)_unobserveSublayerOnDepreactivate:(id)depreactivate;	// 0x33d7723d
- (void)_updateSublayersTiming;	// 0x33d76b99
- (id)actionHitAtPoint:(CGPoint)point layer:(id *)layer;	// 0x33d7600d
- (void)cleanup;	// 0x33d73f9d
- (void)deactivate;	// 0x33d74a25
- (void)depreactivate:(BOOL)depreactivate;	// 0x33d74bf5
- (void)endTransitionToSublayer;	// 0x33d76795
- (BOOL)hasAudio;	// 0x33d75b51
- (BOOL)hasSomethingToRender;	// 0x33d74889
- (BOOL)isAlphaFriendly;	// 0x33d74ed5
- (BOOL)isLoadedForTime:(double)time;	// 0x33d74d09
- (BOOL)isOpaque;	// 0x33d74e61
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x33d742a5
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d75805
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d74f49
- (void)resumeOrPause:(BOOL)pause;	// 0x33d74921
- (void)setPixelSize:(CGSize)size;	// 0x33d74775
- (id)sublayerAtIndex:(unsigned)index;	// 0x33d75c99
- (id)sublayerForPlugObjectID:(id)plugObjectID recursive:(BOOL)recursive;	// 0x33d75de1
- (id)sublayerHitAtPoint:(CGPoint)point onlyIfHitElement:(BOOL)element localPoint:(CGPoint *)point3;	// 0x33d759ad
// declared property getter: - (id)sublayers;	// 0x33d767f9
- (void)synchronizeTime;	// 0x33d749a5
- (double)transitionToNextSublayer;	// 0x33d761ad
- (double)transitionToPreviousSublayer;	// 0x33d7625d
- (double)transitionToSublayerAtIndex:(unsigned)index;	// 0x33d76309
@end

