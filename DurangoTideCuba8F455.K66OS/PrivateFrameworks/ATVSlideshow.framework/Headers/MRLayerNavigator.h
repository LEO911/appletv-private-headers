/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRLayer.h"

@class NSMutableArray, NSDictionary, NSArray, MRTransition, MCContainerNavigator, NSMutableDictionary;

@interface MRLayerNavigator : MRLayer {
	MCContainerNavigator *mContainer;	// 96 = 0x60
	NSMutableArray *mSublayers;	// 100 = 0x64
	NSMutableDictionary *mSublayersForPlugs;	// 104 = 0x68
	MRLayer *mCurrentSublayer;	// 108 = 0x6c
	MRLayer *mNextSublayer;	// 112 = 0x70
	MRTransition *mCurrentTransition;	// 116 = 0x74
	BOOL mIsTransitioning;	// 120 = 0x78
	MRLayer *mSublayerToPrecompute;	// 124 = 0x7c
	id mPrecomputingTarget;	// 128 = 0x80
	unsigned mPrecomputingType;	// 132 = 0x84
	double mTransitionDuration;	// 136 = 0x88
	BOOL mTransitionIsBackwards;	// 144 = 0x90
	NSDictionary *mTransitionChanges;	// 148 = 0x94
}
@property(readonly, assign) MRLayer *currentSublayer;	// G=0x33d6eab1; @synthesize=mCurrentSublayer
@property(readonly, assign) NSArray *sublayers;	// G=0x33d6eaa1; @synthesize=mSublayers
- (id)initWithPlug:(id)plug andParameters:(id)parameters inSuperlayer:(id)superlayer;	// 0x33d6c681
- (id)_createSublayerForPlug:(id)plug;	// 0x33d6ee25
- (void)_deleteSublayer:(id)sublayer;	// 0x33d6ef89
- (void)_executeLayerCommandQueue;	// 0x33d6eac1
- (BOOL)_isNative3D;	// 0x33d6df0d
- (void)_observePlug;	// 0x33d6f235
- (void)_observePlugOnPreactivate;	// 0x33d6f2f9
- (void)_observeSublayer:(id)sublayer;	// 0x33d6f145
- (void)_precomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d6f4e9
- (void)_preprecomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d7036d
- (void)_prerenderSublayersAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d6fa09
- (void)_renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d6f725
- (id)_retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d6f861
- (void)_setNeedsToRequestRebuildAudio:(BOOL)requestRebuildAudio;	// 0x33d6f415
- (void)_unobservePlug;	// 0x33d6f2a1
- (void)_unobservePlugOnDepreactivate;	// 0x33d6f391
- (void)_unobserveSublayer:(id)sublayer;	// 0x33d6f1bd
- (id)actionHitAtPoint:(CGPoint)point layer:(id *)layer;	// 0x33d6e289
- (void)cleanup;	// 0x33d6c7dd
// declared property getter: - (id)currentSublayer;	// 0x33d6eab1
- (void)deactivate;	// 0x33d6d195
- (void)depreactivate:(BOOL)depreactivate;	// 0x33d6d3a5
- (double)doTransition:(id)transition;	// 0x33d6e9d1
- (double)doTransition:(id)transition backwards:(BOOL)backwards;	// 0x33d6e3ed
- (double)doTransitionBackwards:(id)backwards;	// 0x33d6e9e9
- (void)endTransitionToSublayer;	// 0x33d6ea01
- (BOOL)hasAudio;	// 0x33d6de11
- (BOOL)hasSomethingToRender;	// 0x33d6cff9
- (BOOL)isAlphaFriendly;	// 0x33d6d679
- (BOOL)isLoadedForTime:(double)time;	// 0x33d6d4ad
- (BOOL)isOpaque;	// 0x33d6d605
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x33d6cae5
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d6dac9
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33d6d6ed
- (void)resumeOrPause:(BOOL)pause;	// 0x33d6d091
- (void)setPixelSize:(CGSize)size;	// 0x33d6cee5
- (id)sublayerForID:(id)anId;	// 0x33d6df59
- (id)sublayerForPlugObjectID:(id)plugObjectID recursive:(BOOL)recursive;	// 0x33d6e089
- (id)sublayerHitAtPoint:(CGPoint)point onlyIfHitElement:(BOOL)element localPoint:(CGPoint *)point3;	// 0x33d6dc4d
// declared property getter: - (id)sublayers;	// 0x33d6eaa1
- (void)synchronizeTime;	// 0x33d6d115
@end

