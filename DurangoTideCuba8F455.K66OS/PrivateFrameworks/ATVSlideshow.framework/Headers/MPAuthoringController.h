/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import <NSObject.h> // Unknown library

@class NSRecursiveLock, NSLock, MPDocument, MPWeighter, NSMutableDictionary;

@interface MPAuthoringController : NSObject {
	BOOL _isAuthoring;	// 4 = 0x4
	MPDocument *_authoredDocument;	// 8 = 0x8
	unsigned _seed;	// 12 = 0xc
	NSRecursiveLock *_beatLock;	// 16 = 0x10
	NSMutableDictionary *_cachedROIInformation;	// 20 = 0x14
	NSLock *_cachedROILock;	// 24 = 0x18
	MPWeighter *_weighter;	// 28 = 0x1c
	MPWeighter *_transitionWeighter;	// 32 = 0x20
	NSMutableDictionary *_stats;	// 36 = 0x24
	id _delegate;	// 40 = 0x28
	int _logLevel;	// 44 = 0x2c
	double _logTiming;	// 48 = 0x30
	float _placesDistanceSeperation;	// 56 = 0x38
	BOOL _placesDebug;	// 60 = 0x3c
	BOOL _cancelAuthoring;	// 61 = 0x3d
	BOOL _skipApplyingSettings;	// 62 = 0x3e
}
@property(assign) id delegate;	// G=0x33c822fd; S=0x33c8230d; converted property
+ (void)releaseSharedController;	// 0x33c81e99
+ (id)sharedController;	// 0x33c81e51
+ (id)transitionAnimatedSetsBetween:(id)between and:(id)anAnd;	// 0x33c7ab35
+ (id)transitionAnimatedSetsBetween:(id)between and:(id)anAnd;	// 0x33c943a9
- (id)init;	// 0x33c81edd
- (void)_addVideoPaths:(id)paths toEndOfLayer:(id)layer inDocument:(id)document withOptions:(id)options;	// 0x33c9aadd
- (void)_addVideoPaths:(id)paths toEndOfLayer:(id)layer inDocument:(id)document withOptions:(id)options;	// 0x33c80079
- (void)_checkForEmptyLayersInDocument:(id)document;	// 0x33c9b401
- (void)_checkForEmptyLayersInDocument:(id)document;	// 0x33c80999
- (id)_collectVersionInformationFromStyle:(id)style;	// 0x33c867e1
- (int)_countOfEmptyContainersInIntroOfLayer:(id)layer withOptions:(id)options;	// 0x33c80b89
- (int)_countOfEmptyContainersInIntroOfLayer:(id)layer withOptions:(id)options;	// 0x33c9b5f1
- (id)_createMapsWithImages:(id)images withOptions:(id)options;	// 0x33c9b751
- (void)_gatherLocationInfoForMaps:(id)maps;	// 0x33c9d471
- (id)_grabAndRemoveTitleEffectFromDocument:(id)document withOptions:(id)options;	// 0x33c9b0e9
- (id)_grabAndRemoveTitleEffectFromDocument:(id)document withOptions:(id)options;	// 0x33c80681
- (id)_mapsSortedByCity:(id)city hasCities:(BOOL *)cities;	// 0x33c9dce9
- (id)_mapsSortedByState:(id)state;	// 0x33c9e8d1
- (int)_numberOfSlidesForOutroInLayer:(id)layer withOptions:(id)options;	// 0x33c80a55
- (int)_numberOfSlidesForOutroInLayer:(id)layer withOptions:(id)options;	// 0x33c9b4bd
- (id)_placeEffectContainersForPhotos:(id)photos options:(id)options;	// 0x33ca6bfd
- (void)_readdTitleEffect:(id)effect toDocument:(id)document withOptions:(id)options;	// 0x33c9b359
- (void)_readdTitleEffect:(id)effect toDocument:(id)document withOptions:(id)options;	// 0x33c808f1
- (void)_renameMapsAndPins:(id)pins withOptions:(id)options;	// 0x33c9f2d1
- (void)_reorderImagesInDocument:(id)document withOptions:(id)options;	// 0x33c7f30d
- (void)_reorderImagesInDocument:(id)document withOptions:(id)options;	// 0x33c99d69
- (BOOL)_tryAndCollapseMaps:(id)maps;	// 0x33c9d91d
- (void)addStyledCaptionToSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x33c97bed
- (void)addStyledCaptionToSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x33c7d1ad
- (unsigned)authorDocument:(id)document withOptions:(id)options;	// 0x33c8231d
- (unsigned)authorLayerGroup:(id)group inDocument:(id)document withOptions:(id)options;	// 0x33c82361
- (void)authorPlacesWithImages:(id)images forLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x33c87101
- (void)beatAlignEffectContainers:(id)containers toBeats:(id)beats withOptions:(id)options;	// 0x33c8d245
- (void)beatAlignLayer:(id)layer toBeats:(id)beats withOptions:(id)options;	// 0x33c8b7f1
- (void)beatAlignLayers:(id)layers toAudioPlaylist:(id)audioPlaylist forDocument:(id)document withOptions:(id)options;	// 0x33c84881
- (id)beatsForAudioPlaylist:(id)audioPlaylist withOptions:(id)options;	// 0x33c944bd
- (id)beatsForAudioPlaylist:(id)audioPlaylist withOptions:(id)options;	// 0x33c80be9
- (int)bestCountFromClusterForEffectWithImages:(id)images atStartIndex:(int)startIndex withWeighter:(id)weighter usedIndex:(int *)index;	// 0x33c89149
- (void)cacheROIInformationForImages:(id)images withOptions:(id)options;	// 0x33c872a9
- (BOOL)canDocumentFitToAudio:(id)audio withOptions:(id)options requiredAudioDuration:(double *)duration;	// 0x33c86021
- (BOOL)canLayerGroupFitToAudio:(id)audio inDocument:(id)document withOptions:(id)options requiredAudioDuration:(double *)duration;	// 0x33c86069
- (BOOL)canScaleToAudioInDocument:(id)document withOptions:(id)options;	// 0x33c86355
- (void)checkForOffsetsForLayers:(id)layers withOptions:(id)options;	// 0x33c8b6c1
- (void)cleanup;	// 0x33c86375
- (void)cleanup:(BOOL)cleanup;	// 0x33c8638d
- (void)cleanupClusters;	// 0x33c81435
- (void)cleanupClusters;	// 0x33c94d15
- (void)combineEffectsNearSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x33c7eb71
- (void)combineEffectsNearSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x33c995cd
- (void)combineSlides:(id)slides inDocument:(id)document withOptions:(id)options;	// 0x33c99385
- (void)combineSlides:(id)slides inDocument:(id)document withOptions:(id)options;	// 0x33c7e929
- (void)configureFiltersInDocument:(id)document withOptions:(id)options;	// 0x33c8d9f5
- (void)configureTransitionsInDocument:(id)document withOptions:(id)options;	// 0x33c8ded1
- (void)createAnimatedSetsInLayer2:(id)layer2 withOptions:(id)options;	// 0x33c937cd
- (void)createAnimatedSetsInLayer2:(id)layer2 withOptions:(id)options;	// 0x33c79f59
- (void)createAnimatedSetsInLayer:(id)layer withOptions:(id)options;	// 0x33c790b5
- (void)createAnimatedSetsInLayer:(id)layer withOptions:(id)options;	// 0x33c92929
- (id)createAudioPlayListFromAudioPaths:(id)audioPaths andOptions:(id)options;	// 0x33c91da1
- (void)createBeatsThreaded:(id)threaded;	// 0x33c81169
- (void)createBeatsThreaded:(id)threaded;	// 0x33c94a45
- (id)createEffectToTransitionMapWithOptions:(id)options;	// 0x33c90409
- (id)createLayerWithImages:(id)images effects:(id)effects andOptions:(id)options;	// 0x33c8e2dd
- (id)createLayersForPlacesForImages:(id)images forDocument:(id)document withOptions:(id)options;	// 0x33ca13a9
- (void)dealloc;	// 0x33c82255
// converted property getter: - (id)delegate;	// 0x33c822fd
- (BOOL)determineIfSlideDisplayesForTheWholeDurationForEffect:(id)effect presetID:(id)anId atIndex:(int)index;	// 0x33c8a239
- (id)effectContainersWithImages:(id)images effects:(id)effects andOptions:(id)options;	// 0x33c8e52d
- (id)effectContainersWithPaths:(id)paths forDocument:(id)document withOptions:(id)options;	// 0x33c84745
- (id)effectsForImages:(id)images withOptions:(id)options;	// 0x33c87aed
- (id)exportTransitionFromOptions:(id)options;	// 0x33c90685
- (void)fillDurationsForLayers:(id)layers withOptions:(id)options;	// 0x33c8b425
- (id)filtersForEffectFromOptions:(id)options;	// 0x33c91991
- (id)filtersForLayerFromOptions:(id)options;	// 0x33c91815
- (id)filtersForSlideFromOptions:(id)options;	// 0x33c91b85
- (double)findClosestBeatForTime:(double)time inBeats:(id)beats atIndex:(int *)index;	// 0x33c947ed
- (double)findClosestBeatForTime:(double)time inBeats:(id)beats atIndex:(int *)index;	// 0x33c80f11
- (id)findEffectIDInPresetArray:(id)presetArray forImages:(id)images withOptions:(id)options;	// 0x33c892dd
- (id)findEffectIDInWeighter:(id)weighter images:(id)images startingIndex:(int)index count:(int)count triesToFind:(int *)find;	// 0x33c89eb5
- (void)findUsableClustersForUserDefinedSlideOrderPresentation:(id)userDefinedSlideOrderPresentation inClusters:(id)clusters;	// 0x33c81455
- (void)findUsableClustersForUserDefinedSlideOrderPresentation:(id)userDefinedSlideOrderPresentation inClusters:(id)clusters;	// 0x33c94d35
- (void)finishLogging;	// 0x33c951bd
- (void)finishLogging;	// 0x33c818d5
- (id)frameFromOptions:(id)options;	// 0x33c91cc5
- (BOOL)imagesHaveMovie:(id)movie start:(int)start count:(int)count;	// 0x33c890b1
- (int)indexOfBeatWithTimestamp:(double)timestamp inBeats:(id)beats inRange:(NSRange)range;	// 0x33c81071
- (int)indexOfBeatWithTimestamp:(double)timestamp inBeats:(id)beats inRange:(NSRange)range;	// 0x33c9494d
- (void)insertVideoPaths:(id)paths atIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x33c95d45
- (void)insertVideoPaths:(id)paths atIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x33c7b315
- (id)loopTransitionFromOptions:(id)options;	// 0x33c905b5
- (int)mapTypeForPoint0:(CGPoint)point0 point1:(CGPoint)a1 point2:(CGPoint)a2 map:(id)map flight:(id)flight;	// 0x33ca5ed5
- (void)matchDurationsForLayers:(id)layers withOptions:(id)options;	// 0x33c8b165
- (void)moveSlidesFromIndicies:(id)indicies toIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x33c95675
- (void)moveSlidesFromIndicies:(id)indicies toIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x33c7ac49
- (id)orderImages:(id)images withOptions:(id)options;	// 0x33c86be1
- (id)pickRandomPathsInArray:(id)array excludingPaths:(id)paths count:(int)count;	// 0x33c91ef5
- (void)populateWeighter:(id)weighter withEffects:(id)effects andOptions:(id)options;	// 0x33c8957d
- (void)populateWeighter:(id)weighter withTransitions:(id)transitions andOptions:(id)options;	// 0x33c89be9
- (BOOL)prepareDocumentForExport:(id)export withOptions:(id)options;	// 0x33c85325
- (void)prepareDocumentForPlayback:(id)playback withOptions:(id)options;	// 0x33c858a5
- (void)reconfigureColorSchemeForLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x33c850e1
- (void)reconfigureColorSchemeInDocument:(id)document withOptions:(id)options;	// 0x33c8509d
- (void)reconfigureImagesInDocument:(id)document withOptions:(id)options;	// 0x33c84df9
- (void)reconfigureTitleEffectForLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x33c84eb5
- (void)reconfigureTitleEffectInDocument:(id)document withOptions:(id)options;	// 0x33c84e71
- (void)recreateMapsInDocument:(id)document;	// 0x33ca755d
- (BOOL)rect:(CGRect)rect intersectsRects:(id)rects index:(int *)index;	// 0x33ca5df5
- (void)removeAllMapsInDocument:(id)document;	// 0x33ca7371
- (void)removeSlidesAtIndicies:(id)indicies inDocument:(id)document withOptions:(id)options;	// 0x33c7c4b1
- (void)removeSlidesAtIndicies:(id)indicies inDocument:(id)document withOptions:(id)options;	// 0x33c96ee9
- (void)removeStyledCaptionFromSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x33c7dec5
- (void)removeStyledCaptionFromSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x33c98915
- (void)scaleDurationsForLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x33c849f9
- (void)scaleDurationsInDocument:(id)document withOptions:(id)options;	// 0x33c849b5
- (void)scaleDurationsInEffectContainers:(id)effectContainers withOptions:(id)options;	// 0x33c8a62d
- (void)scaleDurationsInLayer:(id)layer withOptions:(id)options;	// 0x33c8a505
- (void)scaleDurationsInPlacesForDocument:(id)document withOptions:(id)options;	// 0x33ca6321
- (void)scaleLayerToMatchAudio:(id)matchAudio withBeats:(id)beats withOptions:(id)options;	// 0x33c8c6c5
- (void)scaleLayerToMatchAudio:(id)matchAudio withOptions:(id)options;	// 0x33c8bb35
- (void)setAuthoredDocument:(id)document;	// 0x33c86789
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x33c8230d
- (void)setTitleTextToColor:(CGColorRef)color forLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x33c86461
- (void)setTitleTextToColor:(CGColorRef)color inDocument:(id)document withOptions:(id)options;	// 0x33c86415
- (void)setupClustersWithPaths:(id)paths withOptions:(id)options;	// 0x33c8133d
- (void)setupClustersWithPaths:(id)paths withOptions:(id)options;	// 0x33c94c19
- (id)sortImagePaths:(id)paths toAspectRatiosInEffectPresetID:(id)effectPresetID withOptions:(id)options;	// 0x33c90711
- (void)startLogging;	// 0x33c81705
- (void)startLogging;	// 0x33c94fe5
- (int)tileSetForMap1:(int)map1 map2:(int)a2 needsWater:(BOOL)water;	// 0x33ca62c1
- (id)transitionFromOptions:(id)options;	// 0x33c84865
- (id)transitionFromOptions:(id)options firstEffectContainer:(id)container nextEffectContainer:(id)container3;	// 0x33c92059
- (void)upgradeDocument:(id)document withOptions:(id)options;	// 0x33c84081
- (void)upgradeLayerGroup:(id)group inDocument:(id)document withOptions:(id)options;	// 0x33c840c5
@end

