/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "NSCoding.h"
#import "ATVSlideshow-Structs.h"
#import "NSCopying.h"
#import "MPFilterSupport.h"
#import "MPAnimationSupport.h"
#import "MPAudioSupport.h"
#import "MPActionableSupport.h"
#import "MPGeometrySupport.h"
#import <NSObject.h> // Unknown library
#import "MPEffectSupport.h"
#import "MPActionableSupportInternal.h"

@class MPAudioPlaylist, MCPlugParallel, MPEffectInternal, MPEffectContainer, NSMutableDictionary, NSMutableArray, MCContainerEffect;

@interface MPEffect : NSObject <MPActionableSupportInternal, NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport, MPAudioSupport, MPActionableSupport, MPGeometrySupport, MPEffectSupport> {
@private
	NSMutableArray *_slides;	// 4 = 0x4
	NSMutableArray *_secondarySlides;	// 8 = 0x8
	NSMutableArray *_texts;	// 12 = 0xc
	NSMutableArray *_filters;	// 16 = 0x10
	NSMutableDictionary *_attributes;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCContainerEffect *_container;	// 28 = 0x1c
	MCPlugParallel *_plug;	// 32 = 0x20
	MPAudioPlaylist *_audioPlaylist;	// 36 = 0x24
	MPEffectContainer *_parentContainer;	// 40 = 0x28
	BOOL _replaceSlides;	// 44 = 0x2c
	MPEffectInternal *_internal;	// 48 = 0x30
}
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x33cc075d; converted property
@property(retain) MPAudioPlaylist *audioPlaylist;	// G=0x33cc0a09; S=0x33cc0a19; converted property
@property(assign) int audioPriority;	// G=0x33cc0bb1; S=0x33cc0bd1; converted property
@property(retain) MCContainerEffect *container;	// G=0x33cc0dfd; S=0x33cc2eed; converted property
@property(retain) id effectAttributes;	// G=0x33cbcf29; S=0x33cbcfc1; converted property
@property(retain) id effectID;	// G=0x33cbccb9; S=0x33cbccd9; converted property
@property(readonly, retain) NSMutableArray *filters;	// G=0x33cc0051; converted property
@property(assign) double fullDuration;	// G=0x33cc1acd; S=0x33cc1b25; converted property
@property(assign) float height;	// G=0x33cc4f29; S=0x33cc4f4d; converted property
@property(assign) double mainDuration;	// G=0x33cbe1cd; S=0x33cbe1ed; converted property
@property(assign) float opacity;	// G=0x33cbd29d; S=0x33cbd2bd; converted property
@property(retain) MPEffectContainer *parentContainer;	// G=0x33cc0c75; S=0x33cc3931; converted property
@property(assign) double phaseInDuration;	// G=0x33cbdc65; S=0x33cbdc85; converted property
@property(assign) double phaseOutDuration;	// G=0x33cbdf19; S=0x33cbdf39; converted property
@property(retain) MCPlugParallel *plug;	// G=0x33cc0e0d; S=0x33cc29c9; converted property
@property(assign) CGPoint position;	// G=0x33cbd3f9; S=0x33cbd419; converted property
@property(retain) id presetID;	// G=0x33cbcdb9; S=0x33cbcde9; converted property
@property(assign) int randomSeed;	// G=0x33cc0c85; S=0x33cc0ca5; converted property
@property(assign) BOOL replaceSlides;	// G=0x33cbf83d; S=0x33cbf84d; converted property
@property(assign) float rotationAngle;	// G=0x33cbd6d9; S=0x33cbd6f9; converted property
@property(retain) id scriptingAnimations;	// G=0x33cc4fc9; S=0x33cc5365; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x33cbefc5; converted property
@property(assign) CGSize size;	// G=0x33cbd831; S=0x33cbd851; converted property
@property(readonly, retain) NSMutableArray *slides;	// G=0x33cbe4f1; converted property
@property(readonly, retain) NSMutableArray *texts;	// G=0x33cbf85d; converted property
@property(assign) float width;	// G=0x33cc4f79; S=0x33cc4f9d; converted property
@property(assign) float xPosition;	// G=0x33cc4e89; S=0x33cc4ead; converted property
@property(assign) float xRotationAngle;	// G=0x33cbd9b5; S=0x33cbd9d5; converted property
@property(assign) float yPosition;	// G=0x33cc4ed9; S=0x33cc4efd; converted property
@property(assign) float yRotationAngle;	// G=0x33cbdb0d; S=0x33cbdb2d; converted property
@property(assign) float zPosition;	// G=0x33cbd581; S=0x33cbd5a1; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x33cbab4d
+ (id)effectWithEffectID:(id)effectID;	// 0x33cbab9d
+ (id)effectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x33cbabd1
+ (id)effectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x33cbac09
+ (id)effectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x33cbac41
- (id)init;	// 0x33cbb0e5
- (id)initWithCoder:(id)coder;	// 0x33cbbf15
- (id)initWithEffectID:(id)effectID;	// 0x33cbac85
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x33cbac9d
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x33cbae01
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x33cbaf69
- (void)addFilter:(id)filter;	// 0x33cc0061
- (void)addFilters:(id)filters;	// 0x33cc00b5
- (void)addSecondarySlide:(id)slide;	// 0x33cbefd5
- (void)addSecondarySlides:(id)slides;	// 0x33cbf029
- (void)addSlide:(id)slide;	// 0x33cbe501
- (void)addSlides:(id)slides;	// 0x33cbe555
- (void)addText:(id)text;	// 0x33cbf86d
- (void)addTexts:(id)texts;	// 0x33cbf8c1
- (id)animationPathForKey:(id)key;	// 0x33cc076d
// converted property getter: - (id)animationPaths;	// 0x33cc075d
// converted property getter: - (id)audioPlaylist;	// 0x33cc0a09
// converted property getter: - (int)audioPriority;	// 0x33cc0bb1
- (void)cleanup;	// 0x33cc28c1
// converted property getter: - (id)container;	// 0x33cc0dfd
- (void)copyAnimationPaths:(id)paths;	// 0x33cc2799
- (void)copyAudioPlaylist:(id)playlist;	// 0x33cc2879
- (void)copyFilters:(id)filters;	// 0x33cc269d
- (void)copySecondarySlides:(id)slides;	// 0x33cc24a5
- (void)copySlides:(id)slides;	// 0x33cc23a9
- (void)copyStruct:(id)aStruct;	// 0x33cc20d5
- (void)copyTexts:(id)texts;	// 0x33cc25a1
- (id)copyWithZone:(NSZone *)zone;	// 0x33cbca21
- (int)countOfFilters;	// 0x33cc4d61
- (int)countOfSlides;	// 0x33cc4b11
- (int)countOfTexts;	// 0x33cc4c39
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x33cc16d5
- (void)createSlidesWithPaths:(id)paths;	// 0x33cc1571
- (void)createTextsWithDefaultStrings;	// 0x33cc0e1d
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x33cc1199
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x33cc11b9
- (void)dealloc;	// 0x33cbcb69
- (id)description;	// 0x33cbb3ad
- (void)dump;	// 0x33cc1b85
- (id)effectAttributeForKey:(id)key;	// 0x33cbd0a9
// converted property getter: - (id)effectAttributes;	// 0x33cbcf29
// converted property getter: - (id)effectID;	// 0x33cbccb9
- (id)effectPresetID;	// 0x33cc1fa9
- (void)encodeWithCoder:(id)coder;	// 0x33cbb849
// converted property getter: - (id)filters;	// 0x33cc0051
- (void)finalize;	// 0x33cbcb29
- (id)fullDebugLog;	// 0x33cc1ba9
// converted property getter: - (double)fullDuration;	// 0x33cc1acd
- (BOOL)hasMovies;	// 0x33cc4a21
// converted property getter: - (float)height;	// 0x33cc4f29
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x33cc00f1
- (void)insertObject:(id)object inFiltersAtIndex:(int)index;	// 0x33cc4da1
- (void)insertObject:(id)object inSlidesAtIndex:(int)index;	// 0x33cc4b51
- (void)insertObject:(id)object inTextsAtIndex:(int)index;	// 0x33cc4c79
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x33cbf065
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x33cbe591
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x33cbf8fd
- (BOOL)isTextOnly;	// 0x33cc0001
// converted property getter: - (double)mainDuration;	// 0x33cbe1cd
- (int)maxNumberOfSecondarySlides;	// 0x33cc0db9
- (int)maxNumberOfSlides;	// 0x33cc0d75
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x33cc0689
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x33cbeef1
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x33cbff2d
- (id)nearestLayerGroup;	// 0x33cc4aed
- (id)nearestPlug;	// 0x33cc20a1
- (BOOL)needsParallelizer;	// 0x33cc3985
- (id)objectID;	// 0x33cc202d
- (id)objectInFiltersAtIndex:(int)index;	// 0x33cc4d81
- (id)objectInSlidesAtIndex:(int)index;	// 0x33cc4b31
- (id)objectInTextsAtIndex:(int)index;	// 0x33cc4c59
// converted property getter: - (float)opacity;	// 0x33cbd29d
// converted property getter: - (id)parentContainer;	// 0x33cc0c75
- (id)parentDocument;	// 0x33cc2071
// converted property getter: - (double)phaseInDuration;	// 0x33cbdc65
// converted property getter: - (double)phaseOutDuration;	// 0x33cbdf19
// converted property getter: - (id)plug;	// 0x33cc0e0d
- (id)plugID;	// 0x33cc2009
// converted property getter: - (CGPoint)position;	// 0x33cbd3f9
// converted property getter: - (id)presetID;	// 0x33cbcdb9
// converted property getter: - (int)randomSeed;	// 0x33cc0c85
- (void)reconfigureSlides;	// 0x33cc1851
- (void)recreateWithContainer:(id)container andPlug:(id)plug;	// 0x33cc3e81
- (void)removeAllFilters;	// 0x33cc0635
- (void)removeAllSecondarySlides;	// 0x33cbf795
- (void)removeAllSlides;	// 0x33cbed29
- (void)removeAllTexts;	// 0x33cbfed9
- (void)removeAnimationPathForKey:(id)key;	// 0x33cc0911
- (void)removeFiltersAtIndices:(id)indices;	// 0x33cc0429
- (void)removeObjectFromFiltersAtIndex:(int)index;	// 0x33cc4dd9
- (void)removeObjectFromSlidesAtIndex:(int)index;	// 0x33cc4b89
- (void)removeObjectFromTextsAtIndex:(int)index;	// 0x33cc4cb1
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x33cbf545
- (void)removeSlidesAtIndices:(id)indices;	// 0x33cbea29
- (void)removeTextsAtIndices:(id)indices;	// 0x33cbfcd9
- (void)replaceObjectInFiltersAtIndex:(int)index withObject:(id)object;	// 0x33cc4e0d
- (void)replaceObjectInSlidesAtIndex:(int)index withObject:(id)object;	// 0x33cc4bbd
- (void)replaceObjectInTextsAtIndex:(int)index withObject:(id)object;	// 0x33cc4ce5
- (void)replaceSlide:(id)slide atIndex:(int)index;	// 0x33cbeed5
- (void)replaceSlideAtIndex:(int)index withSlide:(id)slide;	// 0x33cbed81
// converted property getter: - (BOOL)replaceSlides;	// 0x33cbf83d
- (void)replaceTextsWitStrings:(id)strings;	// 0x33cc0f69
// converted property getter: - (float)rotationAngle;	// 0x33cbd6d9
- (void)scaleMainDuration;	// 0x33cc3b39
// converted property getter: - (id)scriptingAnimations;	// 0x33cc4fc9
// converted property getter: - (id)secondarySlides;	// 0x33cbefc5
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x33cc0795
// converted property setter: - (void)setAudioPlaylist:(id)playlist;	// 0x33cc0a19
// converted property setter: - (void)setAudioPriority:(int)priority;	// 0x33cc0bd1
// converted property setter: - (void)setContainer:(id)container;	// 0x33cc2eed
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x33cbd139
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x33cbcfc1
// converted property setter: - (void)setEffectID:(id)anId;	// 0x33cbccd9
// converted property setter: - (void)setFullDuration:(double)duration;	// 0x33cc1b25
// converted property setter: - (void)setHeight:(float)height;	// 0x33cc4f4d
// converted property setter: - (void)setMainDuration:(double)duration;	// 0x33cbe1ed
// converted property setter: - (void)setOpacity:(float)opacity;	// 0x33cbd2bd
// converted property setter: - (void)setParentContainer:(id)container;	// 0x33cc3931
// converted property setter: - (void)setPhaseInDuration:(double)duration;	// 0x33cbdc85
// converted property setter: - (void)setPhaseOutDuration:(double)duration;	// 0x33cbdf39
// converted property setter: - (void)setPlug:(id)plug;	// 0x33cc29c9
// converted property setter: - (void)setPosition:(CGPoint)position;	// 0x33cbd419
// converted property setter: - (void)setPresetID:(id)anId;	// 0x33cbcde9
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x33cc0ca5
// converted property setter: - (void)setReplaceSlides:(BOOL)slides;	// 0x33cbf84d
// converted property setter: - (void)setRotationAngle:(float)angle;	// 0x33cbd6f9
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x33cc5365
// converted property setter: - (void)setSize:(CGSize)size;	// 0x33cbd851
// converted property setter: - (void)setWidth:(float)width;	// 0x33cc4f9d
// converted property setter: - (void)setXPosition:(float)position;	// 0x33cc4ead
// converted property setter: - (void)setXRotationAngle:(float)angle;	// 0x33cbd9d5
// converted property setter: - (void)setYPosition:(float)position;	// 0x33cc4efd
// converted property setter: - (void)setYRotationAngle:(float)angle;	// 0x33cbdb2d
// converted property setter: - (void)setZPosition:(float)position;	// 0x33cbd5a1
// converted property getter: - (CGSize)size;	// 0x33cbd831
// converted property getter: - (id)slides;	// 0x33cbe4f1
- (BOOL)supportsUnlimitedSlides;	// 0x33cbf7ed
// converted property getter: - (id)texts;	// 0x33cbf85d
- (id)uuid;	// 0x33cc2051
- (id)videoPaths;	// 0x33cc1ebd
// converted property getter: - (float)width;	// 0x33cc4f79
// converted property getter: - (float)xPosition;	// 0x33cc4e89
// converted property getter: - (float)xRotationAngle;	// 0x33cbd9b5
// converted property getter: - (float)yPosition;	// 0x33cc4ed9
// converted property getter: - (float)yRotationAngle;	// 0x33cbdb0d
- (int)zIndex;	// 0x33cbe489
// converted property getter: - (float)zPosition;	// 0x33cbd581
@end

