/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import <NSObject.h> // Unknown library

@class EAGLContext, MRShader, MRImage, MRImageManager, NSMutableDictionary;
@protocol MediaManagementProtocol;

@interface MRContext : NSObject {
	MRContext *mBaseContext;	// 4 = 0x4
	EAGLContext *mGLContext;	// 8 = 0x8
	CGSize mPixelSize;	// 12 = 0xc
	int mVRAM;	// 20 = 0x14
	float mFieldOfViewFactor;	// 24 = 0x18
	float mProjectionMatrix[16];	// 28 = 0x1c
	id<MediaManagementProtocol> mAssetManager;	// 92 = 0x5c
	MRImageManager *mImageManager;	// 96 = 0x60
	BOOL mIsLocalContext;	// 100 = 0x64
	BOOL mIsFlipped;	// 101 = 0x65
	BOOL mBlendingIsEnabled;	// 102 = 0x66
	int mBlendingType;	// 104 = 0x68
	BOOL mCullingIsEnabled;	// 108 = 0x6c
	BOOL mCullFrontfacing;	// 109 = 0x6d
	BOOL mDepthTestIsEnabled;	// 110 = 0x6e
	BOOL mIsUsingIntelGPU;	// 111 = 0x6f
	BOOL mIsUsingIntelGMA950;	// 112 = 0x70
	BOOL mPrefersSharedVRAM;	// 113 = 0x71
	BOOL mSupportsFragmentShaders;	// 114 = 0x72
	float mModelViewMatrix[16];	// 116 = 0x74
	float mTextureMatrix[4][16];	// 180 = 0xb4
	int mScissorRect[4];	// 436 = 0x1b4
	int mModelViewProjectionMatrixIndex;	// 452 = 0x1c4
	int mTextureMatrixIndex[4];	// 456 = 0x1c8
	const float *mVertexPointer;	// 472 = 0x1d8
	int mVertexIndex;	// 476 = 0x1dc
	const float *mColorsPointer;	// 480 = 0x1e0
	int mForeColorAsAttributeIndex;	// 484 = 0x1e4
	int mForeColorAsUniformIndex;	// 488 = 0x1e8
	const float *mNormalsPointer;	// 492 = 0x1ec
	int mNormalIndex;	// 496 = 0x1f0
	float *mTextureCoordinatesPointer[4];	// 500 = 0x1f4
	int mTextureCoordinatesIndex[4];	// 516 = 0x204
	const float *mInSpriteCoordinatesPointer;	// 532 = 0x214
	int mInSpriteCoordinatesIndex;	// 536 = 0x218
	BOOL mVertexArrayIsEnabled;	// 540 = 0x21c
	BOOL mForeColorArrayIsEnabled;	// 541 = 0x21d
	BOOL mNormalArrayIsEnabled;	// 542 = 0x21e
	BOOL mTextureCoordinatesArrayIsEnabled[4];	// 543 = 0x21f
	BOOL mInSpriteCoordinatesArrayIsEnabled;	// 547 = 0x223
	NSMutableDictionary *mVertexAttributes;	// 548 = 0x224
	float mLocalAspectRatio;	// 552 = 0x228
	float mForeColor[4];	// 556 = 0x22c
	float mBackColor[4];	// 572 = 0x23c
	MRShader *mCurrentShader;	// 588 = 0x24c
	MRImage *mTextureUnitImages[4];	// 592 = 0x250
	int mTextureUnitUsedForFragmentCoordinates;	// 608 = 0x260
	MRImage *mBlackImage;	// 612 = 0x264
}
@property(readonly, assign) float aspectRatio;	// G=0x33d0ac21; 
@property(retain) id<MediaManagementProtocol> assetManager;	// G=0x33d0d6d1; S=0x33d0d6e9; @synthesize=mAssetManager
@property(readonly, assign) const float *backColor;	// G=0x33d0b85d; 
@property(readonly, assign) MRContext *baseContext;	// G=0x33d0d6c1; @synthesize=mBaseContext
@property(readonly, assign) CGColorSpaceRef colorSpace;	// G=0x33d0ac3d; 
@property(readonly, assign) const float *foreColor;	// G=0x33d0b385; 
@property(readonly, assign) EAGLContext *glContext;	// G=0x33d0d7b9; @synthesize=mGLContext
@property(readonly, assign) MRImageManager *imageManager;	// G=0x33d0d711; @synthesize=mImageManager
@property(readonly, assign) BOOL isDoubleBuffered;	// G=0x33d0ac85; 
@property(assign) BOOL isFlipped;	// G=0x33d0d759; S=0x33d0d769; @synthesize=mIsFlipped
@property(readonly, assign) BOOL isUsingIntelGMA950;	// G=0x33d0d799; @synthesize=mIsUsingIntelGMA950
@property(readonly, assign) BOOL isUsingIntelGPU;	// G=0x33d0d789; @synthesize=mIsUsingIntelGPU
@property(assign) float localAspectRatio;	// G=0x33d0d739; S=0x33d0d749; @synthesize=mLocalAspectRatio
@property(readonly, assign) unsigned long maxDimension;	// G=0x33d0ac8d; 
@property(readonly, assign) const float *modelViewMatrix;	// G=0x33d0c9a1; 
@property(readonly, assign) CGColorSpaceRef monochromaticColorSpace;	// G=0x33d0ac61; 
@property(assign, nonatomic) CGSize pixelSize;	// G=0x33d0d721; S=0x33d0a961; @synthesize=mPixelSize
@property(readonly, assign) BOOL prefersSharedVRAM;	// G=0x33d0d7a9; @synthesize=mPrefersSharedVRAM
@property(readonly, assign) const float *projectionMatrix;	// G=0x33d0c991; 
@property(readonly, assign) CGSize size;	// G=0x33d0abcd; 
@property(readonly, assign) BOOL supportsFragmentShaders;	// G=0x33d0d779; @synthesize=mSupportsFragmentShaders
@property(readonly, assign) unsigned virtualScreen;	// G=0x33d0ac89; 
@property(readonly, assign) int vram;	// G=0x33d0d7c9; @synthesize=mVRAM
- (id)initLocalWithContext:(id)context glContext:(id)context2 andSize:(CGSize)size;	// 0x33d0a505
- (id)initWithEAGLContext:(id)eaglcontext andAssetManager:(id)manager;	// 0x33d0a29d
- (void)_applyForeColor;	// 0x33d0b395
// declared property getter: - (float)aspectRatio;	// 0x33d0ac21
// declared property getter: - (id)assetManager;	// 0x33d0d6d1
// declared property getter: - (const float *)backColor;	// 0x33d0b85d
// declared property getter: - (id)baseContext;	// 0x33d0d6c1
- (id)beginLocalContextWithSize:(CGSize)size backgroundColor:(const float *)color state:(XXStruct_vue6hD *)state;	// 0x33d0acd9
- (void)blend:(int)blend;	// 0x33d0b069
- (void)cleanup;	// 0x33d0a875
- (void)clear:(int)clear;	// 0x33d0b1e9
// declared property getter: - (CGColorSpaceRef)colorSpace;	// 0x33d0ac3d
- (BOOL)commitShaderChange;	// 0x33d0bcb1
- (void)composeForeColor:(const float *)color saveTo:(float *)to;	// 0x33d0b685
- (void)composeForeColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x33d0b761
- (void)composeModelViewMatrix:(float [16])matrix saveTo:(float *)to;	// 0x33d0cacd
- (void)cull:(int)cull;	// 0x33d0b125
- (void)dealloc;	// 0x33d0a7f5
- (void)depthTest:(BOOL)test;	// 0x33d0b19d
- (void)drawTriangleStripFromOffset:(unsigned)offset count:(unsigned)count;	// 0x33d0d615
- (void)drawTrianglesFromOffset:(unsigned)offset count:(unsigned)count;	// 0x33d0d659
- (void)finalize;	// 0x33d0a835
- (void)flush;	// 0x33d0ac95
// declared property getter: - (const float *)foreColor;	// 0x33d0b385
// declared property getter: - (id)glContext;	// 0x33d0d7b9
// declared property getter: - (id)imageManager;	// 0x33d0d711
// declared property getter: - (BOOL)isDoubleBuffered;	// 0x33d0ac85
// declared property getter: - (BOOL)isFlipped;	// 0x33d0d759
// declared property getter: - (BOOL)isUsingIntelGMA950;	// 0x33d0d799
// declared property getter: - (BOOL)isUsingIntelGPU;	// 0x33d0d789
// declared property getter: - (float)localAspectRatio;	// 0x33d0d739
- (void)lock;	// 0x33d0a959
// declared property getter: - (unsigned long)maxDimension;	// 0x33d0ac8d
// declared property getter: - (const float *)modelViewMatrix;	// 0x33d0c9a1
// declared property getter: - (CGColorSpaceRef)monochromaticColorSpace;	// 0x33d0ac61
// declared property getter: - (CGSize)pixelSize;	// 0x33d0d721
// declared property getter: - (BOOL)prefersSharedVRAM;	// 0x33d0d7a9
// declared property getter: - (const float *)projectionMatrix;	// 0x33d0c991
- (void)purgeResources:(BOOL)resources;	// 0x33d0acb9
- (void)restoreBackColor:(const float *)color;	// 0x33d0b9f1
- (void)restoreForeColor:(const float *)color;	// 0x33d0b845
- (void)restoreModelViewMatrix:(float [16])matrix;	// 0x33d0cb11
- (void)restoreScissorRect:(const int *)rect;	// 0x33d0b36d
- (void)resyncState;	// 0x33d0af31
- (id)retainedByUserBlackImage;	// 0x33d0b049
- (id)retainedByUserImageByEndingLocalContext:(id)context andRestoreState:(const XXStruct_vue6hD *)state;	// 0x33d0ae71
// declared property setter: - (void)setAssetManager:(id)manager;	// 0x33d0d6e9
- (void)setBackColor:(const float *)color saveTo:(float *)to;	// 0x33d0b86d
- (void)setBackColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x33d0b931
- (void)setColorsPointer:(const float *)pointer;	// 0x33d0cf4d
- (void)setForeColor:(const float *)color saveTo:(float *)to;	// 0x33d0b505
- (void)setForeColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x33d0b5c1
- (void)setImage:(id)image onTextureUnit:(unsigned)unit withReferenceAspectRatio:(float)referenceAspectRatio state:(XXStruct_S04vsC *)state;	// 0x33d0ba09
- (void)setInSpriteCoordinatesPointer:(const float *)spriteCoordinatesPointer;	// 0x33d0d125
// declared property setter: - (void)setIsFlipped:(BOOL)flipped;	// 0x33d0d769
// declared property setter: - (void)setLocalAspectRatio:(float)ratio;	// 0x33d0d749
- (void)setModelViewMatrix:(float [16])matrix saveTo:(float *)to;	// 0x33d0c9b1
- (void)setNormal:(float)normal :(float)arg2 :(float)arg3;	// 0x33d0cb29
- (void)setNormalsPointer:(const float *)pointer;	// 0x33d0ce75
// declared property setter: - (void)setPixelSize:(CGSize)size;	// 0x33d0a961
- (void)setScissorRect:(const int *)rect saveTo:(int *)to;	// 0x33d0b265
- (BOOL)setShader:(id)shader;	// 0x33d0bfdd
- (BOOL)setShaderUniformFloat:(float)aFloat forKey:(id)key;	// 0x33d0c7e9
- (BOOL)setShaderUniformInt:(int)int forKey:(id)key;	// 0x33d0c799
- (BOOL)setShaderUniformVec2:(float)a2 :(float)arg2 forKey:(id)key;	// 0x33d0c83d
- (BOOL)setShaderUniformVec3:(float)a3 :(float)arg2 :(float)arg3 forKey:(id)key;	// 0x33d0c8a5
- (BOOL)setShaderUniformVec4:(float)a4 :(float)arg2 :(float)arg3 :(float)arg4 forKey:(id)key;	// 0x33d0c915
- (void)setTextureCoordinatesPointer:(const float *)pointer onTextureUnit:(unsigned)unit;	// 0x33d0d025
- (void)setTextureMatrix:(float [16])matrix onTextureUnit:(unsigned)unit;	// 0x33d0cbe1
- (void)setVertex2DPointer:(const float *)pointer;	// 0x33d0ccc9
- (void)setVertex3DPointer:(const float *)pointer;	// 0x33d0cd9d
- (void)setVertexAttributePointer:(const float *)pointer ofSize:(unsigned)size forKey:(id)key;	// 0x33d0d1fd
// declared property getter: - (CGSize)size;	// 0x33d0abcd
// declared property getter: - (BOOL)supportsFragmentShaders;	// 0x33d0d779
- (BOOL)supportsMirroredRepeatForImage:(id)image;	// 0x33d0d69d
- (void)unlock;	// 0x33d0a95d
- (void)unsetColorsPointer;	// 0x33d0d499
- (void)unsetImage:(id)image onTextureUnit:(unsigned)unit state:(const XXStruct_S04vsC *)state;	// 0x33d0bc45
- (void)unsetInSpriteCoordinatesPointer;	// 0x33d0d539
- (void)unsetNormalsPointer;	// 0x33d0d451
- (void)unsetShader;	// 0x33d0c431
- (void)unsetTextureCoordinatesPointerOnTextureUnit:(unsigned)unit;	// 0x33d0d4e1
- (void)unsetVertexAttributePointerForKey:(id)key;	// 0x33d0d581
- (void)unsetVertexPointer;	// 0x33d0d40d
// declared property getter: - (unsigned)virtualScreen;	// 0x33d0ac89
// declared property getter: - (int)vram;	// 0x33d0d7c9
@end

