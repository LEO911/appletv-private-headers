/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "NSCoding.h"
#import "ATVSlideshow-Structs.h"
#import "NSCopying.h"
#import "MPActionSupport.h"
#import "MPLayerableSupportInternal.h"
#import "MPAnimationSupport.h"
#import "MPAudioSupport.h"
#import "MPActionableSupport.h"
#import "MPGeometrySupport.h"
#import <NSObject.h> // Unknown library
#import "MPActionableSupportInternal.h"
#import "MPLayerableSupport.h"
#import "MPTimingSupport.h"
#import "MPNavigatorSupportInternal.h"
#import "MPNavigatorSupport.h"
#import "MPAutomaticLayerSupport.h"
#import "MPManualLayerSupport.h"

@class MPAudioPlaylist, MCPlugParallel, NSMutableDictionary, NSMutableArray, MPLayerGroupInternal, MCContainerParallelizer;

@interface MPLayerGroup : NSObject <MPActionableSupportInternal, MPNavigatorSupportInternal, MPLayerableSupportInternal, NSCoding, NSCopying, MPAnimationSupport, MPActionableSupport, MPAudioSupport, MPLayerableSupport, MPNavigatorSupport, MPGeometrySupport, MPTimingSupport, MPActionSupport, MPAutomaticLayerSupport, MPManualLayerSupport> {
	MPLayerGroupInternal *_internal;	// 4 = 0x4
	NSMutableArray *_userProvidedVideoPaths;	// 8 = 0x8
	NSMutableArray *_userProvidedAudioPaths;	// 12 = 0xc
	MCPlugParallel *_plug;	// 16 = 0x10
	MCContainerParallelizer *_parallelizer;	// 20 = 0x14
	MPAudioPlaylist *_audioPlaylist;	// 24 = 0x18
	NSMutableArray *_layers;	// 28 = 0x1c
	NSMutableDictionary *_layerDictionary;	// 32 = 0x20
	id _parent;	// 36 = 0x24
	NSMutableDictionary *_authoringOptions;	// 40 = 0x28
	NSMutableDictionary *_animationPaths;	// 44 = 0x2c
	NSMutableDictionary *_actions;	// 48 = 0x30
}
@property(readonly, retain) NSMutableDictionary *actions;	// G=0x33ce4ddd; converted property
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x33ce4281; converted property
@property(retain) id audioPaths;	// G=0x33ce3449; S=0x33ce3459; converted property
@property(retain) MPAudioPlaylist *audioPlaylist;	// G=0x33ce22ed; S=0x33ce22fd; converted property
@property(retain) id authoredVersionInfo;	// G=0x33ce8331; S=0x33ce8351; converted property
@property(retain) NSMutableDictionary *authoringOptions;	// G=0x33ce0fa1; S=0x33ce10cd; converted property
@property(assign) BOOL autoAdjustDuration;	// G=0x33ce3bed; S=0x33ce3c0d; converted property
@property(assign) CGColorRef backgroundCGColor;	// G=0x33ce2855; S=0x33ce28a9; converted property
@property(assign) double duration;	// G=0x33ce1ff5; S=0x33ce2099; converted property
@property(assign) double durationPadding;	// G=0x33ce7259; S=0x33ce7279; converted property
@property(assign) int lastSlideUsed;	// G=0x33ce899d; S=0x33ce8901; converted property
@property(readonly, retain) NSMutableArray *layers;	// G=0x33ce1259; converted property
@property(assign) int loopingMode;	// G=0x33ce2751; S=0x33ce2771; converted property
@property(assign) double numberOfLoops;	// G=0x33ce3605; S=0x33ce3625; converted property
@property(assign) float opacity;	// G=0x33ce4509; S=0x33ce4529; converted property
@property(retain) id parent;	// G=0x33ce22dd; S=0x33ce5a65; converted property
@property(assign) double phaseInDuration;	// G=0x33ce3819; S=0x33ce3839; converted property
@property(assign) double phaseOutDuration;	// G=0x33ce39fd; S=0x33ce3a1d; converted property
@property(retain) MCPlugParallel *plug;	// G=0x33ce5029; S=0x33ce6061; converted property
@property(assign) CGPoint position;	// G=0x33ce4615; S=0x33ce4635; converted property
@property(assign) float rotationAngle;	// G=0x33ce484d; S=0x33ce486d; converted property
@property(assign) CGSize size;	// G=0x33ce4959; S=0x33ce4979; converted property
@property(assign) double timeIn;	// G=0x33ce2201; S=0x33ce2221; converted property
@property(retain) id videoPaths;	// G=0x33ce31c1; S=0x33ce32b9; converted property
@property(assign) float xRotationAngle;	// G=0x33ce4a85; S=0x33ce4aa5; converted property
@property(assign) float yRotationAngle;	// G=0x33ce4b91; S=0x33ce4bb1; converted property
@property(assign) int zIndex;	// G=0x33ce4c9d; S=0x33ce4d11; converted property
@property(assign) float zPosition;	// G=0x33ce4741; S=0x33ce4761; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x33cdf269
- (id)init;	// 0x33cdf2f5
- (id)initWithCoder:(id)coder;	// 0x33cdfe21
- (id)absoluteVideoPaths;	// 0x33ce5689
- (id)actionForKey:(id)key;	// 0x33ce4ded
- (id)actionableObjectForID:(id)anId;	// 0x33ce8a01
// converted property getter: - (id)actions;	// 0x33ce4ddd
- (void)addAudioPath:(id)path;	// 0x33ce2f05
- (void)addAudioPaths:(id)paths;	// 0x33ce2f95
- (void)addLayer:(id)layer;	// 0x33ce1269
- (void)addLayers:(id)layers;	// 0x33ce12b9
- (void)addVideoPath:(id)path;	// 0x33ce2cc9
- (void)addVideoPaths:(id)paths;	// 0x33ce2db5
- (id)allEffectContainers;	// 0x33ce5039
- (id)allEffects;	// 0x33ce5119
- (id)allSlides;	// 0x33ce5201
- (id)animationPathForKey:(id)key;	// 0x33ce4291
// converted property getter: - (id)animationPaths;	// 0x33ce4281
// converted property getter: - (id)audioPaths;	// 0x33ce3449
// converted property getter: - (id)audioPlaylist;	// 0x33ce22ed
// converted property getter: - (id)authoredVersionInfo;	// 0x33ce8331
- (id)authoringOptionForKey:(id)key;	// 0x33ce10ad
// converted property getter: - (id)authoringOptions;	// 0x33ce0fa1
// converted property getter: - (BOOL)autoAdjustDuration;	// 0x33ce3bed
// converted property getter: - (CGColorRef)backgroundCGColor;	// 0x33ce2855
- (void)cachePaths;	// 0x33ce5905
- (void)cleanup;	// 0x33ce6b45
- (void)configureActions;	// 0x33ce5afd
- (void)copyActions:(id)actions;	// 0x33ce8255
- (void)copyAnimationPaths:(id)paths;	// 0x33ce8179
- (void)copyAudioPlaylist:(id)playlist;	// 0x33ce8131
- (void)copyLayerDictionary:(id)dictionary;	// 0x33ce8055
- (void)copyLayers:(id)layers;	// 0x33ce7f5d
- (void)copyStruct:(id)aStruct;	// 0x33ce7c09
- (id)copyWithZone:(NSZone *)zone;	// 0x33ce07e5
- (int)countOfLayers;	// 0x33ce8ced
- (void)dealloc;	// 0x33ce0965
// converted property getter: - (double)duration;	// 0x33ce1ff5
// converted property getter: - (double)durationPadding;	// 0x33ce7259
- (void)encodeWithCoder:(id)coder;	// 0x33cdf769
- (void)finalize;	// 0x33ce0925
- (void)insertLayers:(id)layers atIndex:(int)index;	// 0x33ce12f1
- (void)insertObject:(id)object inLayersAtIndex:(int)index;	// 0x33ce8e09
- (id)keyedLayers;	// 0x33ce3cfd
// converted property getter: - (int)lastSlideUsed;	// 0x33ce899d
- (id)layerForKey:(id)key;	// 0x33ce3d0d
- (id)layerKey;	// 0x33ce3c91
// converted property getter: - (id)layers;	// 0x33ce1259
- (BOOL)layersCanPositionZIndex;	// 0x33ce58ed
// converted property getter: - (int)loopingMode;	// 0x33ce2751
- (id)mainLayers;	// 0x33ce3539
- (void)moveLayersFromIndices:(id)indices toIndex:(int)index;	// 0x33ce1c65
- (id)navigatorKey;	// 0x33ce0ae5
- (BOOL)nearingEndForPlug:(id)plug;	// 0x33ce8371
// converted property getter: - (double)numberOfLoops;	// 0x33ce3605
- (id)objectID;	// 0x33ce58ad
- (id)objectInLayersAtIndex:(int)index;	// 0x33ce8d0d
- (id)observer;	// 0x33ce5a09
// converted property getter: - (float)opacity;	// 0x33ce4509
- (id)orderedVideoPaths;	// 0x33ce31d1
// converted property getter: - (id)parent;	// 0x33ce22dd
- (id)parentDocument;	// 0x33ce57e5
// converted property getter: - (double)phaseInDuration;	// 0x33ce3819
// converted property getter: - (double)phaseOutDuration;	// 0x33ce39fd
// converted property getter: - (id)plug;	// 0x33ce5029
- (id)plugID;	// 0x33ce588d
// converted property getter: - (CGPoint)position;	// 0x33ce4615
- (double)posterTime;	// 0x33ce54b1
- (void)reconfigureLoopingMode;	// 0x33ce74a5
- (void)reconnectAll;	// 0x33ce72f5
- (void)removeActionForKey:(id)key;	// 0x33ce4f75
- (void)removeAllAudioPaths;	// 0x33ce3519
- (void)removeAllLayers;	// 0x33ce1685
- (void)removeAllVideoPaths;	// 0x33ce34f9
- (void)removeAnimationPathForKey:(id)key;	// 0x33ce4441
- (void)removeLayerForKey:(id)key;	// 0x33ce3fa1
- (void)removeLayersAtIndices:(id)indices;	// 0x33ce1791
- (void)removeObjectFromLayersAtIndex:(int)index;	// 0x33ce8e41
- (void)removePath:(id)path;	// 0x33ce2ff9
- (void)removePaths:(id)paths;	// 0x33ce3115
- (void)replaceObjectInLayersAtIndex:(int)index withObject:(id)object;	// 0x33ce8e75
- (void)resetDuration;	// 0x33ce6e61
// converted property getter: - (float)rotationAngle;	// 0x33ce484d
- (void)setAction:(id)action forKey:(id)key;	// 0x33ce4e0d
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x33ce42b1
// converted property setter: - (void)setAudioPaths:(id)paths;	// 0x33ce3459
// converted property setter: - (void)setAudioPlaylist:(id)playlist;	// 0x33ce22fd
// converted property setter: - (void)setAuthoredVersionInfo:(id)info;	// 0x33ce8351
- (void)setAuthoringOption:(id)option forKey:(id)key;	// 0x33ce0fb1
// converted property setter: - (void)setAuthoringOptions:(id)options;	// 0x33ce10cd
// converted property setter: - (void)setAutoAdjustDuration:(BOOL)duration;	// 0x33ce3c0d
// converted property setter: - (void)setBackgroundCGColor:(CGColorRef)color;	// 0x33ce28a9
- (void)setBackgroundColorString:(id)string;	// 0x33ce2875
- (void)setContainer:(id)container;	// 0x33ce5d0d
// converted property setter: - (void)setDuration:(double)duration;	// 0x33ce2099
// converted property setter: - (void)setDurationPadding:(double)padding;	// 0x33ce7279
- (void)setIsDocumentLayerGroup:(BOOL)group;	// 0x33ce89e1
// converted property setter: - (void)setLastSlideUsed:(int)used;	// 0x33ce8901
- (void)setLayer:(id)layer forKey:(id)key;	// 0x33ce3d2d
// converted property setter: - (void)setLoopingMode:(int)mode;	// 0x33ce2771
// converted property setter: - (void)setNumberOfLoops:(double)loops;	// 0x33ce3625
// converted property setter: - (void)setOpacity:(float)opacity;	// 0x33ce4529
// converted property setter: - (void)setParent:(id)parent;	// 0x33ce5a65
// converted property setter: - (void)setPhaseInDuration:(double)duration;	// 0x33ce3839
// converted property setter: - (void)setPhaseOutDuration:(double)duration;	// 0x33ce3a1d
// converted property setter: - (void)setPlug:(id)plug;	// 0x33ce6061
// converted property setter: - (void)setPosition:(CGPoint)position;	// 0x33ce4635
// converted property setter: - (void)setRotationAngle:(float)angle;	// 0x33ce486d
// converted property setter: - (void)setSize:(CGSize)size;	// 0x33ce4979
- (unsigned)setStyleID:(id)anId;	// 0x33ce0b51
// converted property setter: - (void)setTimeIn:(double)anIn;	// 0x33ce2221
// converted property setter: - (void)setVideoPaths:(id)paths;	// 0x33ce32b9
// converted property setter: - (void)setXRotationAngle:(float)angle;	// 0x33ce4aa5
// converted property setter: - (void)setYRotationAngle:(float)angle;	// 0x33ce4bb1
// converted property setter: - (void)setZIndex:(int)index;	// 0x33ce4d11
// converted property setter: - (void)setZPosition:(float)position;	// 0x33ce4761
// converted property getter: - (CGSize)size;	// 0x33ce4959
- (id)styleID;	// 0x33ce0b25
// converted property getter: - (double)timeIn;	// 0x33ce2201
- (id)uuid;	// 0x33ce58cd
- (id)valueInLayersWithName:(id)name;	// 0x33ce8d2d
- (double)videoDuration;	// 0x33ce1eb5
// converted property getter: - (id)videoPaths;	// 0x33ce31c1
// converted property getter: - (float)xRotationAngle;	// 0x33ce4a85
// converted property getter: - (float)yRotationAngle;	// 0x33ce4b91
// converted property getter: - (int)zIndex;	// 0x33ce4c9d
// converted property getter: - (float)zPosition;	// 0x33ce4741
@end

