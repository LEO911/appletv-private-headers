/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <NSObject.h> // Unknown library

@class DAAccount, NSMutableArray, NSArray, NSMutableSet;
@protocol DATask;

@interface DATaskManager : NSObject {
	DAAccount *_account;	// 4 = 0x4
@private
	NSMutableArray *_queuedExclusiveTasks;	// 8 = 0x8
	id<DATask> _activeExclusiveTask;	// 12 = 0xc
	NSMutableSet *_independentTasks;	// 16 = 0x10
	NSMutableSet *_heldIndependentTasks;	// 20 = 0x14
	NSMutableSet *_modalHeldIndependentTasks;	// 24 = 0x18
	NSMutableArray *_queuedTasks;	// 28 = 0x1c
	id<DATask> _activeQueuedTask;	// 32 = 0x20
	id<DATask> _modalHeldActiveQueuedTask;	// 36 = 0x24
	NSMutableArray *_queuedModalTasks;	// 40 = 0x28
	id<DATask> _activeModalTask;	// 44 = 0x2c
	int _state;	// 48 = 0x30
}
@property(assign) DAAccount *account;	// G=0x340b8fd1; S=0x340b9a11; @synthesize=_account
@property(readonly, assign) id<DATask> activeModalTask;	// G=0x340b8f95; @synthesize=_activeModalTask
@property(readonly, assign) id<DATask> activeQueuedTask;	// G=0x340b8fc1; @synthesize=_activeQueuedTask
@property(readonly, assign) NSArray *allTasks;	// G=0x340b9a31; 
@property(readonly, assign) NSArray *queuedTasks;	// G=0x340b8fb1; @synthesize=_queuedTasks
- (id)init;	// 0x340ab8f1
- (id)initWithAccount:(id)account;	// 0x340ba2e5
- (void)_cancelTasksWithReason:(int)reason;	// 0x340b9439
- (id)_getHeldIndependentTasks;	// 0x340b90c5
- (id)_getIndependentTasks;	// 0x340b9111
- (id)_getModalHeldIndependentTasks;	// 0x340b9079
- (id)_getQueuedExclusiveTasks;	// 0x340b915d
- (id)_getQueuedModalTasks;	// 0x340b8fe1
- (id)_getQueuedTasks;	// 0x340b902d
- (void)_makeStateTransition;	// 0x340bc2a5
- (void)_performTask:(id)task;	// 0x340ba58d
- (void)_populateVersionDescriptions;	// 0x340ba3a9
- (void)_reactivateHeldTasks;	// 0x340b95f1
- (void)_releasePowerAssertionForTask:(id)task;	// 0x340b91a9
- (void)_requestCancelTasksWithReason:(int)reason;	// 0x340b983d
- (void)_retainPowerAssertionForTask:(id)task;	// 0x340b920d
- (void)_schedulePerformTask:(id)task;	// 0x340b9299
- (void)_scheduleSelector:(SEL)selector withArgument:(id)argument;	// 0x340bc0bd
- (void)_scheduleStartModal:(id)modal;	// 0x340ba46d
- (void)_startModal:(id)modal;	// 0x340ba4c5
- (BOOL)_useFakeDescriptions;	// 0x340b8fa5
- (id)_version;	// 0x340b940d
// declared property getter: - (id)account;	// 0x340b8fd1
- (id)accountID;	// 0x340b9309
- (id)accountPersistentUUID;	// 0x340b92e9
// declared property getter: - (id)activeModalTask;	// 0x340b8f95
// declared property getter: - (id)activeQueuedTask;	// 0x340b8fc1
// declared property getter: - (id)allTasks;	// 0x340b9a31
- (void)cancelAllTasks;	// 0x340b995d
- (void)cancelTask:(id)task;	// 0x340b92b9
- (void)cancelTask:(id)task withUnderlyingError:(id)underlyingError;	// 0x340bb969
- (void)dealloc;	// 0x340b9dd5
- (id)deviceID;	// 0x340ba461
- (id)deviceType;	// 0x340ba3fd
- (id)identityPersist;	// 0x340b9349
- (id)password;	// 0x340b938d
- (int)port;	// 0x340b93cd
// declared property getter: - (id)queuedTasks;	// 0x340b8fb1
- (id)scheme;	// 0x340b9329
- (id)server;	// 0x340b93ad
// declared property setter: - (void)setAccount:(id)account;	// 0x340b9a11
- (void)shutdown;	// 0x340bb8fd
- (id)stateString;	// 0x340bc129
- (void)submitExclusiveTask:(id)task;	// 0x340b92d1
- (void)submitExclusiveTask:(id)task toFrontOfQueue:(BOOL)queue;	// 0x340bbe05
- (void)submitIndependentTask:(id)task;	// 0x340bbbf9
- (void)submitQueuedTask:(id)task;	// 0x340bb9c9
- (void)taskDidFinish:(id)task;	// 0x340bada5
- (void)taskEndModal:(id)modal;	// 0x340ba655
- (void)taskManagerDidAddTask:(id)taskManager;	// 0x340b8fa9
- (void)taskManagerWillRemoveTask:(id)taskManager;	// 0x340b8fad
- (void)taskRequestModal:(id)modal;	// 0x340ba901
- (BOOL)useSSL;	// 0x340b9369
- (id)user;	// 0x340b93ed
- (id)userAgent;	// 0x340ba409
@end

