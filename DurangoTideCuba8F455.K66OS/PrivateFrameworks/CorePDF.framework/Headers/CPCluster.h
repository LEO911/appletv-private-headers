/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import <NSObject.h> // Unknown library
#import "CorePDF-Structs.h"
#import "CPDisposable.h"


@interface CPCluster : NSObject <CPDisposable> {
	XXStruct_lVmCAC *profile;	// 4 = 0x4
	unsigned xCount;	// 8 = 0x8
	double *x;	// 12 = 0xc
	double *dx;	// 16 = 0x10
	unsigned *dxOrderIndex;	// 20 = 0x14
	unsigned interClusterMinIndex;	// 24 = 0x18
	double *ddx;	// 28 = 0x1c
	unsigned *ddxOrderIndex;	// 32 = 0x20
	unsigned interLevelMinIndex;	// 36 = 0x24
	unsigned minClusterSize;	// 40 = 0x28
	double maxClusterSpread;	// 44 = 0x2c
	double minInterClusterDiff;	// 52 = 0x34
	double minInterLevel2ndDiff;	// 60 = 0x3c
	unsigned clusterCount;	// 68 = 0x44
	XXStruct_VnwizD *xStats;	// 72 = 0x48
	unsigned levels;	// 76 = 0x4c
	XXStruct_VnwizD *dxStats;	// 80 = 0x50
	BOOL ownData;	// 84 = 0x54
	BOOL ownDifferences;	// 85 = 0x55
}
@property(readonly, assign) unsigned clusterCount;	// G=0x30ba4bdd; converted property
@property(readonly, assign) unsigned levels;	// G=0x30ba4a99; converted property
+ (void)clusterTextLine:(id)line;	// 0x30ba721d
+ (unsigned *)createOrderIndexFor:(double *)aFor ofSize:(unsigned)size;	// 0x30ba6309
+ (void)reclusterTextLine:(id)line fromWordIndex:(unsigned)wordIndex count:(unsigned *)count;	// 0x30ba7421
- (id)init;	// 0x30ba4da9
- (id)initWithProfile:(const XXStruct_lVmCAC *)profile;	// 0x30ba4e3d
- (void)analyzeDensities;	// 0x30ba5cd1
- (void)analyzeDifferences;	// 0x30ba545d
- (BOOL)applyDifferenceHints:(XXStruct_VnwizD *)hints count:(unsigned)count;	// 0x30ba4e99
- (void)assembleDataStats;	// 0x30ba6789
- (void)assembleDensityDifferenceStats;	// 0x30ba51e1
- (void)assembleDifferenceStats;	// 0x30ba5acd
// converted property getter: - (unsigned)clusterCount;	// 0x30ba4bdd
- (XXStruct_VnwizD)clusterStatisticsAtIndex:(unsigned)index;	// 0x30ba4b85
- (BOOL)coalesceFrom:(unsigned)from to:(unsigned)to;	// 0x30ba645d
- (void)computeDataFromDifferences;	// 0x30ba5979
- (void)computeDifferencesFromData;	// 0x30ba5a29
- (void)dealloc;	// 0x30ba4dc5
- (XXStruct_VnwizD)differenceClusterStatisticsAtIndex:(unsigned)index;	// 0x30ba4aa9
- (void)dispose;	// 0x30ba512d
- (void)finalize;	// 0x30ba4e01
- (void)findClusters:(double *)clusters count:(unsigned)count;	// 0x30ba4cd5
- (void)findClustersFromCharacterSequence:(id)characterSequence withSpaceHint:(BOOL)spaceHint;	// 0x30ba6c7d
- (void)findClustersFromDifferences:(double *)differences count:(unsigned)count;	// 0x30ba4ca5
- (void)findDensityClusters:(double *)clusters count:(unsigned)count;	// 0x30ba4c65
- (BOOL)joinClosestLevelPairFrom:(unsigned)from to:(unsigned)to;	// 0x30ba4d15
- (BOOL)joinLevelsFrom:(unsigned)from to:(unsigned)to;	// 0x30ba6349
- (XXStruct_VnwizD)largestClusterStatistics;	// 0x30ba4af1
// converted property getter: - (unsigned)levels;	// 0x30ba4a99
- (void)makeWords:(XXStruct_NaTu4D *)words count:(unsigned)count fromCharacterSequence:(id)characterSequence charOffset:(unsigned)offset;	// 0x30ba7111
- (void)setMaximumClusterSpread:(double)spread;	// 0x30ba4a5d
- (void)setMinimumClusterSize:(unsigned)size;	// 0x30ba4a4d
- (void)setMinimumRecognizedInterClusterDifference:(double)difference;	// 0x30ba4a71
- (void)setMinimumRecognizedInterLevel2ndDifference:(double)difference;	// 0x30ba4a85
- (BOOL)splitLevelAtIndex:(unsigned)index betweenValue:(double)value andValue:(double)value3;	// 0x30ba6029
- (void)splitSecondDifferences;	// 0x30ba5635
- (void)tryLevel0SplitBetween:(double)between and:(double)anAnd usingHints:(XXStruct_VnwizD *)hints;	// 0x30ba6a0d
@end

