/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <NSObject.h> // Unknown library
#import "OfficeImport-Structs.h"
#import "NSCopying.h"


__attribute__((visibility("hidden")))
@interface NSBezierPathStub : NSObject <NSCopying> {
@private
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x32cce6c9; S=0x32cce6cd; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x32ccfd31; converted property
@property(readonly, assign) int elementCount;	// G=0x32b9e9fd; converted property
@property(assign) float flatness;	// G=0x32ba5a3d; S=0x32ba5a4d; converted property
@property(assign) unsigned lineCapStyle;	// G=0x32b9f419; S=0x32ba1aad; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x32b9f429; S=0x32ba1b81; converted property
@property(assign) float lineWidth;	// G=0x32ba5a0d; S=0x32b9f251; converted property
@property(assign) float miterLimit;	// G=0x32ba5a1d; S=0x32ba5a2d; converted property
@property(assign) unsigned windingRule;	// G=0x32b9e929; S=0x32b9e765; converted property
+ (id)bezierPath;	// 0x32b9a0b9
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x32cceebd
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x32ba6b15
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x32ccee59
+ (void)clipRect:(CGRect)rect;	// 0x32b9b929
+ (CGContextRef)currentCGContext;	// 0x32b9b899
+ (float)defaultFlatness;	// 0x32cce49d
+ (unsigned)defaultLineCapStyle;	// 0x32cce4cd
+ (unsigned)defaultLineJoinStyle;	// 0x32cce4e5
+ (float)defaultLineWidth;	// 0x32cce4fd
+ (float)defaultMiterLimit;	// 0x32cce485
+ (unsigned)defaultWindingRule;	// 0x32cce4b5
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x32ccf7b9
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x32b9d5d5
+ (void)fillRect:(CGRect)rect;	// 0x32ccf6b9
+ (float)flatness;	// 0x32cce771
+ (void)initialize;	// 0x32cb8701
+ (unsigned)lineCapStyle;	// 0x32cce721
+ (unsigned)lineJoinStyle;	// 0x32cce6f9
+ (float)lineWidth;	// 0x32cce6d1
+ (float)miterLimit;	// 0x32cce799
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x32b99125
+ (void)setDefaultFlatness:(float)flatness;	// 0x32cce491
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x32cce4c1
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x32cce4d9
+ (void)setDefaultLineWidth:(float)width;	// 0x32cce4f1
+ (void)setDefaultMiterLimit:(float)limit;	// 0x32cce479
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x32cce4a9
+ (void)setFlatness:(float)flatness;	// 0x32cce785
+ (void)setLineCapStyle:(unsigned)style;	// 0x32cce735
+ (void)setLineJoinStyle:(unsigned)style;	// 0x32cce70d
+ (void)setLineWidth:(float)width;	// 0x32cce6e5
+ (void)setMiterLimit:(float)limit;	// 0x32cce7ad
+ (void)setWindingRule:(unsigned)rule;	// 0x32cce75d
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x32ccf729
+ (void)strokeRect:(CGRect)rect;	// 0x32ccfe61
+ (unsigned)windingRule;	// 0x32cce749
- (id)init;	// 0x32b9a0e9
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x32b9e359
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x32bb6785
- (id)_copyFlattenedPath;	// 0x32ccea51
- (void)_deviceClosePath;	// 0x32b9e52d
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x32bb68d5
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x32b9e4c9
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x32b9e279
- (void)_doPath;	// 0x32ccf1bd
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x32b9e93d
- (int)_locationOfPoint:(CGPoint)point;	// 0x32ccf3ad
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x32b9ead5
- (void)addClip;	// 0x32ba6cad
- (void)appendBezierPath:(id)path;	// 0x32ba590d
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x32ccfa19
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x32bb650d
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x32bb6549
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radiusSize:(CGSize)size startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x32c7fced
- (void)appendBezierPathWithArcWithRect:(CGPoint)rect rightBottom:(CGPoint)bottom start:(CGPoint)start end:(CGPoint)end clockwise:(BOOL)clockwise;	// 0x32c7fb55
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x32bb6395
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x32ba1eed
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x32b9e139
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x32cd0001
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes;	// 0x32d3b5d9
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes spacing:(int *)spacing spacingCount:(int)count;	// 0x32d3b5dd
- (void)attachBezierPath:(id)path;	// 0x32c282b5
- (id)bezierPathByFlatteningPath;	// 0x32ccea99
- (id)bezierPathByReversingPath;	// 0x32cce7f1
- (CGRect)bounds;	// 0x32ccf295
// converted property getter: - (BOOL)cachesBezierPath;	// 0x32cce6c9
- (void)closePath;	// 0x32b9e519
- (BOOL)containsPoint:(CGPoint)point;	// 0x32ccf655
// converted property getter: - (CGRect)controlPointBounds;	// 0x32ccfd31
- (id)copyWithZone:(NSZone *)zone;	// 0x32ba57ad
- (CGPoint)currentPoint;	// 0x32c2844d
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x32c281ad
- (void)dealloc;	// 0x32ba9405
- (id)description;	// 0x32ccf819
- (unsigned)elementAtIndex:(int)index;	// 0x32cce7d9
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x32b9ea5d
// converted property getter: - (int)elementCount;	// 0x32b9e9fd
- (BOOL)equalToCurrentPoint:(CGPoint)currentPoint;	// 0x32c283b5
- (void)fill;	// 0x32b9e8b1
- (void)finalize;	// 0x32ccefc1
// converted property getter: - (float)flatness;	// 0x32ba5a3d
- (void)flattenIntoPath:(id)path;	// 0x32cceb1d
- (id)getGlyphs:(id)glyphs :(id)arg2 :(unsigned *)arg3;	// 0x32d3b5d5
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x32cce509
- (BOOL)isEmpty;	// 0x32b9e4b1
- (BOOL)isHitByPath:(id)path;	// 0x32cce6b1
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x32cce7c1
- (BOOL)isHitByRect:(CGRect)rect;	// 0x32cce6a5
- (BOOL)isStrokeHitByPath:(id)path;	// 0x32cce6c5
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x32cce6b5
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x32cce6b9
// converted property getter: - (unsigned)lineCapStyle;	// 0x32b9f419
// converted property getter: - (unsigned)lineJoinStyle;	// 0x32b9f429
- (void)lineToPoint:(CGPoint)point;	// 0x32b9e445
// converted property getter: - (float)lineWidth;	// 0x32ba5a0d
// converted property getter: - (float)miterLimit;	// 0x32ba5a1d
- (void)moveToPoint:(CGPoint)point;	// 0x32b9e265
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x32ccf03d
- (void)relativeLineToPoint:(CGPoint)point;	// 0x32ccf0ed
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x32ccf155
- (void)removeAllPoints;	// 0x32c27eed
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x32ccef19
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x32cce6cd
- (void)setClip;	// 0x32ba6c55
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x32ba5a4d
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x32ba1aad
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x32c20c09
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x32ba1b81
// converted property setter: - (void)setLineWidth:(float)width;	// 0x32b9f251
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x32ba5a2d
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x32b9e765
- (void)stroke;	// 0x32b9f33d
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x32ccec5d
- (void)transformUsingAffineTransform:(id)transform;	// 0x32ba6bad
// converted property getter: - (unsigned)windingRule;	// 0x32b9e929
@end

