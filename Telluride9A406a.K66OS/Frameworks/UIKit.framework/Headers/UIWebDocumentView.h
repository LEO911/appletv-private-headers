/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UITextSelection.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "UIWebTiledView.h"
#import "UITextSelectingContent.h"

@class DOMNode, UIWebSelectionAssistant, UITextRange, UIAutoscroll, NSDictionary, UITextPosition, UIView, DOMHTMLElement, UIWebRotatingSheet, UITextSelectionView, UITextInteractionAssistant, UIResponder, UITextChecker, CALayer, UIColor, UIImage, WebView, UILongPressGestureRecognizer, UIReferenceLibraryViewController, DOMElement, UIPopoverController, UITapGestureRecognizer, UITextInputTraits, UIPanGestureRecognizer, WebThreadSafeUndoManager, WebViewReachabilityObserver, NSMutableSet, NSArray, NSTimer;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, UITextSelection> {
	int _retainCount;	// 64 = 0x40
	WKWindow *_wkWindow;	// 68 = 0x44
	WebView *_webView;	// 72 = 0x48
	WebViewReachabilityObserver *_reachabilityObserver;	// 76 = 0x4c
	id m_parentTextView;	// 80 = 0x50
	id _delegate;	// 84 = 0x54
	id _textSuggestionDelegate;	// 88 = 0x58
	CGRect _doubleTapRect;	// 92 = 0x5c
	CGRect _mainDocumentDoubleTapRect;	// 108 = 0x6c
	CGPoint _scrollPoint;	// 124 = 0x7c
	CGPoint _doubleTapStartPosition;	// 132 = 0x84
	double _doubleTapStartTime;	// 140 = 0x8c
	CGSize _pendingSize;	// 148 = 0x94
	int _orientation;	// 156 = 0x9c
	DOMHTMLElement *_standaloneEditingElement;	// 160 = 0xa0
	CGPoint _mouseDownPoint;	// 164 = 0xa4
	double _mouseDownTime;	// 172 = 0xac
	UIAutoscroll *_autoscroll;	// 180 = 0xb4
	CFDictionaryRef _plugInViews;	// 184 = 0xb8
	int m_selectionGranularity;	// 188 = 0xbc
	CALayer *_contentLayersHostingLayer;	// 192 = 0xc0
	CALayer *_flattenedRotatingContentLayer;	// 196 = 0xc4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 200 = 0xc8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 204 = 0xcc
	NSMutableSet *_overflowScrollViews;	// 208 = 0xd0
	NSArray *_additionalSubviews;	// 212 = 0xd4
	UITextInputTraits *_traits;	// 216 = 0xd8
	id<UITextInputDelegate> _inputDelegate;	// 220 = 0xdc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 224 = 0xe0
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 228 = 0xe4
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 232 = 0xe8
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 236 = 0xec
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 240 = 0xf0
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 244 = 0xf4
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
	} _interaction;	// 248 = 0xf8
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 296 = 0x128
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 416 = 0x1a0
	CGSize _minimumSize;	// 440 = 0x1b8
	int _documentType;	// 448 = 0x1c0
	float _documentScale;	// 452 = 0x1c4
	float _previousDocumentScale;	// 456 = 0x1c8
	CGRect _documentBounds;	// 460 = 0x1cc
	CGSize _fixedLayoutOriginRoundingDelta;	// 476 = 0x1dc
	CGSize _fixedLayoutSizeRoundingDelta;	// 484 = 0x1e4
	unsigned _customConfigurations;	// 492 = 0x1ec
	unsigned _mouseDownCount;	// 496 = 0x1f0
	unsigned _dataDetectorTypes;	// 500 = 0x1f4
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 504 = 0x1f8
	unsigned _webCoreNeedsDraw : 1;	// 504 = 0x1f8
	unsigned _ignoresFocusingMouse : 1;	// 504 = 0x1f8
	unsigned _ignoresKeyEvents : 1;	// 504 = 0x1f8
	unsigned _autoresizes : 1;	// 504 = 0x1f8
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 504 = 0x1f8
	unsigned _updatingSize : 1;	// 504 = 0x1f8
	unsigned _scalesToFit : 1;	// 504 = 0x1f8
	unsigned _updatesScrollView : 1;	// 505 = 0x1f9
	unsigned _hasCustomScale : 1;	// 505 = 0x1f9
	unsigned _shouldRestoreScrollPosition : 1;	// 505 = 0x1f9
	unsigned _pageNeedsReset : 1;	// 505 = 0x1f9
	unsigned _hasScrollPoint : 1;	// 505 = 0x1f9
	unsigned _gesturesDisabled : 1;	// 505 = 0x1f9
	unsigned _doubleTapRectIsReplaced : 1;	// 505 = 0x1f9
	unsigned _standaloneEditableView : 1;	// 505 = 0x1f9
	unsigned _widgetEditingView : 1;	// 506 = 0x1fa
	unsigned _mouseDragged : 1;	// 506 = 0x1fa
	unsigned _mouseReentrancyGuard : 1;	// 506 = 0x1fa
	unsigned _isShowingFullScreenPlugIn : 1;	// 506 = 0x1fa
	unsigned _isSettingRedrawFrame : 1;	// 506 = 0x1fa
	unsigned _needsScrollNotifications : 1;	// 506 = 0x1fa
	unsigned _loadsSynchronously : 1;	// 506 = 0x1fa
	unsigned _mouseDown : 1;	// 506 = 0x1fa
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 507 = 0x1fb
	unsigned _geolocationDialogAllowed : 1;	// 507 = 0x1fb
	unsigned _usingMinimalTilesDuringLoading : 1;	// 507 = 0x1fb
	unsigned _sheetsCount : 2;	// 507 = 0x1fb
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 507 = 0x1fb
	unsigned _loadInProgress : 1;	// 507 = 0x1fb
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 507 = 0x1fb
	unsigned _classicViewportMode : 1;	// 508 = 0x1fc
	unsigned _sizeUpdatesSuspended : 1;	// 508 = 0x1fc
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 508 = 0x1fc
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 508 = 0x1fc
	unsigned _shouldIgnoreCustomViewport : 1;	// 508 = 0x1fc
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 508 = 0x1fc
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 508 = 0x1fc
	unsigned _shouldRemoveUserStyleSheet : 1;	// 508 = 0x1fc
	unsigned _hasDrawnTiles : 1;	// 509 = 0x1fd
	unsigned _showingTextStyleOptions : 1;	// 509 = 0x1fd
	unsigned _subviewCachesNeedUpdate : 1;	// 509 = 0x1fd
	unsigned _avoidFixedPositionUpdateOnZoomStart : 1;	// 509 = 0x1fd
	WebThreadSafeUndoManager *_undoManager;	// 512 = 0x200
	UIWebSelectionAssistant *_webSelectionAssistant;	// 516 = 0x204
	UITextInteractionAssistant *_textSelectionAssistant;	// 520 = 0x208
	UITextSelectionView *_textSelectionView;	// 524 = 0x20c
	UITextChecker *_textChecker;	// 528 = 0x210
	UIEdgeInsets _caretInsets;	// 532 = 0x214
	int _selectionAffinity;	// 548 = 0x224
	UIPopoverController *_definePopoverController;	// 552 = 0x228
	UIReferenceLibraryViewController *_defineViewController;	// 556 = 0x22c
	DOMElement *_dictationResultPlaceholder;	// 560 = 0x230
	id _dictationResultPlaceholderRemovalObserver;	// 564 = 0x234
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x3581cffd; S=0x358b1f15; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *asText;	// G=0x3593c9c5; 
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x3593c095; S=0x3593c02d; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x358abf45; S=0x358abf49; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x3581917d; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x3593b805; S=0x35702acd; converted property
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x358ab3f1; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x357021f9; S=0x3571ec19; converted property
@property(assign) id delegate;	// G=0x35791a85; S=0x3571f191; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x358a6bd1; S=0x3581b639; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x3571f9d5; converted property
@property(readonly, assign) int documentType;	// G=0x3571f985; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x358a8835; S=0x357053a5; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x358a9455; converted property
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x358ab481; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x3577dfb9; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x35759941; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x35750de1; S=0x3575eeb9; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x358ab3f5; 
@property(assign) id interactionDelegate;	// G=0x358b1db9; S=0x3571f1a1; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x358a94a9; S=0x357073dd; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x358a94e5; S=0x358a94cd; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x358a6bbd; S=0x35700e31; converted property
@property(retain) id markedText;	// G=0x357b4f45; S=0x35819035; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x35760689; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x358aca99; S=0x358aca9d; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x358a87f1; S=0x358a87a9; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x3575c9c1; S=0x35759b85; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x3575ca45; S=0x358acced; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x358accf1; S=0x35777bc1; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x358ac689; 
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x35701461; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x358a6ea9; S=0x358a6e91; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x358a8795; S=0x358a877d; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x358a6e7d; S=0x358a6e0d; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x358a94bd; S=0x3570759d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x358aaf45; S=0x358aae1d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextSelection> *textDocument;	// G=0x358acd5d; 
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x35760779; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x3575e261; converted property
@property(assign) BOOL updatesScrollView;	// G=0x358a7139; S=0x358a7121; converted property
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x358abea1; converted property
@property(readonly, retain) WebView *webView;	// G=0x356a1229; converted property
+ (id)_createDefaultHighlightView;	// 0x357c4875
+ (id)_sharedHighlightView;	// 0x357c483d
+ (double)getTimestamp;	// 0x357c7525
+ (void)initialize;	// 0x358a6825
+ (Class)layerClass;	// 0x356ffa71
+ (id)standardTextViewPreferences;	// 0x356ff325
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x356ff42d
- (id)initWithFrame:(CGRect)frame;	// 0x35705379
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x356ff595
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x357c158d
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x3581cffd
- (void)_addAdditionalSubview:(id)subview;	// 0x358a7e99
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x358a7635
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x357c091d
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x358b3161
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x358b33d9
- (void)_bold:(id)bold;	// 0x358ab5c5
- (void)_cancelLongPressGestureRecognizer;	// 0x357c4a91
- (float)_clampScale:(float)scale toScrollView:(id)scrollView;	// 0x358a8b35
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x357058d9
- (void)_clearAllConsoleMessages;	// 0x35706f4d
- (void)_clearDoubleTapRect;	// 0x35706ee9
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x358ac0a5
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x358ac355
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x358b25d1
- (BOOL)_dataDetectionIsActivated;	// 0x35705995
- (void)_define:(id)define;	// 0x358ab885
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x358a9c69
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x35702e11
- (void)_didScroll;	// 0x357c4441
- (float)_documentScale;	// 0x357c2ba9
- (id)_documentUrl;	// 0x358acd61
- (CGRect)_documentViewVisibleRect;	// 0x35706c29
- (id)_doubleTapGestureRecognizer;	// 0x358b1f01
- (void)_doubleTapRecognized:(id)recognized;	// 0x358b10d9
- (float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width isPDF:(BOOL)pdf;	// 0x358a8859
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x358b3bb9
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x35702465
- (void)_finishedUsingDictationPlaceholder;	// 0x358aa029
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x358ac491
- (id)_focusedOrMainFrame;	// 0x356a0081
- (id)_groupName;	// 0x35811311
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x358a8b99
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x358a8969
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x358a9325
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x358a8389
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x357c92d1
- (BOOL)_isDeallocating;	// 0x358a689d
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x357c68a5
- (void)_italicize:(id)italicize;	// 0x358ab61d
- (CGRect)_lastRectForRange:(id)range;	// 0x358ac9f1
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x35706a41
- (void)_longPressRecognized:(id)recognized;	// 0x357c8e11
- (NSRange)_markedTextNSRange;	// 0x358aab01
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x358a7df5
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x358a7d91
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x356ffcd1
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x358a73f1
- (void)_notifyPlugInViewsOfDidZoom;	// 0x358a74ed
- (void)_notifyPlugInViewsOfScaleChange;	// 0x35706829
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x358a7339
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x358a832d
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node;	// 0x358a8229
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x358a81bd
- (id)_parentTextView;	// 0x3575f169
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x358ac901
- (Class)_printFormatterClass;	// 0x359d6b1d
- (void)_promptForReplace:(id)replace;	// 0x358abe49
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x35720f29
- (void)_removeAdditionalSubview:(id)subview;	// 0x358a7efd
- (void)_removeDefinitionController:(BOOL)controller;	// 0x357d5ced
- (id)_requestWithUDIDHeaderIfAppropriate:(id)udidheaderIfAppropriate;	// 0x358a94a1
- (void)_resetForNewPage;	// 0x35707639
- (void)_resetFormDataForFrame:(id)frame;	// 0x35705e3d
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x357c9415
- (void)_reshapePlugInViews;	// 0x35703555
- (id)_responderForBecomeFirstResponder;	// 0x3581d1d1
- (void)_restoreFlattenedContentLayers;	// 0x358ac60d
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x357c1751
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x357009cd
- (void)_runLoadBlock:(id)block;	// 0x35705965
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x357c3545
- (id)_scriptingInfoForForm:(id)form;	// 0x358ad01d
- (id)_scriptingInfoForLink:(id)link;	// 0x358acdc5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x358ac985
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x357023e9
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x358b1571
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x358b1f15
- (void)_setDocumentScale:(float)scale;	// 0x357064cd
- (void)_setDocumentType:(int)type;	// 0x3571eced
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x35705f31
- (void)_setParentTextView:(id)view;	// 0x35701025
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x357c2b91
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x358ac235
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x358a840d
- (void)_showDataDetectorsSheet;	// 0x358b2c79
- (void)_showImageSheet;	// 0x358b2859
- (void)_showLinkSheet;	// 0x358b2acd
- (void)_showPendingContentLayers;	// 0x357078c9
- (void)_showTextStyleOptions:(id)options;	// 0x358ab6cd
- (void)_singleTapRecognized:(id)recognized;	// 0x3581c4a5
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x3578f905
- (id)_targetURL;	// 0x358b1941
- (id)_textSelectingContainer;	// 0x35792061
- (BOOL)_tryRetain;	// 0x358a6841
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x358b1125
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x358b1171
- (void)_underline:(id)underline;	// 0x358ab675
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x358a9729
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x358a9685
- (void)_updateFixedPositionContent;	// 0x357c4c15
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;	// 0x357068e1
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x357cba71
- (void)_updateScrollViewBoundaryZoomScales;	// 0x35701199
- (void)_updateSize;	// 0x357c10fd
- (void)_updateSubviewCaches;	// 0x357c2d15
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x357c2651
- (float)_zoomedDocumentScale;	// 0x357c1099
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x358b19f5
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x358b1af1
- (void)addInputString:(id)string;	// 0x358a9809
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x358a97cd
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x357c9221
// declared property getter: - (id)asText;	// 0x3593c9c5
- (void)assistFormNode:(id)node;	// 0x358a948d
- (void)attemptClick:(id)click;	// 0x3581cbed
- (id)automaticallySelectedOverlay;	// 0x35815421
- (CGRect)autoscrollContentFrame;	// 0x358abf1d
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x3593c095
- (CGRect)autoscrollDragFrame;	// 0x358abef9
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x358acccd
- (BOOL)becomeFirstResponder;	// 0x3581ceb9
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x358abf45
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x358b390d
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x358b3721
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x358b38a5
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x358b3695
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x358b36c5
- (void)beginSelectionChange;	// 0x35759911
// declared property getter: - (id)beginningOfDocument;	// 0x3581917d
- (BOOL)canBecomeFirstResponder;	// 0x3581cfe5
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x3577fa11
- (BOOL)canResignFirstResponder;	// 0x3581d201
- (void)cancelAutoscroll;	// 0x3593c8e9
- (void)cancelInteraction;	// 0x357c74f1
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x357c4631
- (BOOL)cancelMouseTracking;	// 0x358a7279
- (BOOL)cancelTouchTracking;	// 0x358a72cd
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x3593b805
- (CGRect)caretRect;	// 0x35701e4d
- (CGRect)caretRectForPosition:(id)position;	// 0x3575dff9
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x3575e101
- (unsigned short)characterAfterCaretSelection;	// 0x357801b5
- (unsigned short)characterBeforeCaretSelection;	// 0x35780185
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x358aa559
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x358acb71
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x358acc61
- (id)checkSpellingOfString:(id)string;	// 0x357d7af5
- (void)clearInteractionTimer;	// 0x357c47f9
- (void)clearRangedSelectionInitialExtent;	// 0x3593b945
- (void)clearSelection;	// 0x3593b5c1
- (BOOL)clearWKFirstResponder;	// 0x357daf19
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x3593b615
- (id)closestPositionToPoint:(CGPoint)point;	// 0x3577737d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x358acaa1
- (void)collapseSelection;	// 0x3593b7b1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x357b38ad
- (void)completeInteraction;	// 0x357cbdf1
- (void)confirmMarkedText:(id)text;	// 0x358aa4d5
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x358b414d
- (BOOL)containsOnlySelectableElements;	// 0x3581c291
// declared property getter: - (id)content;	// 0x358ab3f1
- (CGRect)contentFrameForView:(id)view;	// 0x3593c111
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x358b0e3d
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x358ab0dd
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x357c8839
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x357c87c9
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x35777461
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x357c86e9
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x358a6db1
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x35701f49
- (void)copy:(id)copy;	// 0x358ab595
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x358a7201
- (void)cut:(id)cut;	// 0x358ab4e1
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x357021f9
- (void)dealloc;	// 0x357d580d
- (void)deferInteraction;	// 0x358b18f1
- (void)deferredBecomeFirstResponder;	// 0x358a9571
// converted property getter: - (id)delegate;	// 0x35791a85
- (void)deleteBackward;	// 0x3580faa1
- (void)deleteFromInput;	// 0x358a981d
- (void)detachInteractionAssistant;	// 0x35701131
- (void)detachSelectionView;	// 0x35701111
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x358a6bd1
- (id)dictationInterpretations;	// 0x358aa27d
- (id)dictationResultMetadataForRange:(id)range;	// 0x358a9bd1
- (void)didEndScroll;	// 0x357cb8f5
- (void)didEndZoom;	// 0x358ac045
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x358a68c9
- (void)didMoveToSuperview;	// 0x35701189
- (void)didRemovePlugInView:(id)view;	// 0x357c335d
- (void)didZoom;	// 0x358abfed
// converted property getter: - (CGRect)documentBounds;	// 0x3571f9d5
// converted property getter: - (int)documentType;	// 0x3571f985
// converted property getter: - (CGRect)doubleTapRect;	// 0x358a9455
- (BOOL)doubleTapRectIsReplaced;	// 0x358a9479
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x358b3ddd
- (unsigned)effectiveDataDetectorTypes;	// 0x35810f31
- (void)enableReachability;	// 0x3571dfb1
- (void)enclosingScrollerDidScroll;	// 0x358a6ee5
// declared property getter: - (id)endOfDocument;	// 0x35759941
- (void)endPrintMode;	// 0x358b3a61
- (void)endSelectionChange;	// 0x35759e6d
- (void)ensureSelection;	// 0x357d6b5d
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x358aa9dd
- (void)extendCurrentSelection:(int)selection;	// 0x358aabf1
- (CGRect)firstRectForRange:(id)range;	// 0x358152c9
- (id)fontForCaretSelection;	// 0x35816549
- (void)forceLayout;	// 0x358a714d
- (id)formElement;	// 0x357774d5
- (void)forwardInvocation:(id)invocation;	// 0x3571e691
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x358a7851
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x357c8d55
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x357c8c11
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x357c683d
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x357c8c85
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x357c891d
- (int)getPasteboardChangeCount;	// 0x358a7af1
- (int)getPasteboardItemsCount;	// 0x358a7799
- (void)handleKeyWebEvent:(id)event;	// 0x358ab195
- (BOOL)hasContent;	// 0x356a0029
- (BOOL)hasDrawnTiles;	// 0x357be189
- (BOOL)hasEditableSelection;	// 0x3570242d
- (BOOL)hasMarkedText;	// 0x35702229
- (BOOL)hasPlugInSubviews;	// 0x358ab3a1
- (BOOL)hasRangedSelection;	// 0x358a9c49
- (BOOL)hasRichlyEditableSelection;	// 0x358a77cd
- (BOOL)hasSelection;	// 0x356a1239
- (BOOL)hasSelection;	// 0x358aac71
- (BOOL)hasSimpleTextOnlyStructure;	// 0x3581c185
- (BOOL)hasText;	// 0x357b2745
- (void)hideTapHighlight;	// 0x357cb5f9
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x358b1719
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x357c9495
- (id)implementationWebView;	// 0x358ab0f1
- (float)initialScale;	// 0x35706401
// declared property getter: - (id)inputDelegate;	// 0x35750de1
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x358a98e9
- (id)insertDictationResultPlaceholder:(CGSize)placeholder;	// 0x358a9ccd
- (void)insertText:(id)text;	// 0x357b3bad
- (void)installGestureRecognizers;	// 0x356ffd4d
- (float)integralScaleForScale:(float)scale;	// 0x35706779
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x3570678d
// declared property getter: - (id)interactionAssistant;	// 0x358ab3f5
// converted property getter: - (id)interactionDelegate;	// 0x358b1db9
- (BOOL)isCaretInEmptyParagraph;	// 0x357800f5
- (BOOL)isClassicViewportMode;	// 0x358a6ebd
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x358a8835
// declared property getter: - (BOOL)isEditable;	// 0x358ab481
// declared property getter: - (BOOL)isEditing;	// 0x3577dfb9
- (BOOL)isEditingSingleLineElement;	// 0x358a9851
- (BOOL)isInInteraction;	// 0x358b0ffd
- (BOOL)isInPrintMode;	// 0x358b302d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3577781d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x35777851
- (BOOL)isShowingFullScreenPlugInUI;	// 0x357bc055
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x358a94a9
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x358a7b25
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x358a94e5
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x357d6de5
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x357d7a1d
- (BOOL)keyboardInputChanged:(id)changed;	// 0x35794a85
- (void)keyboardInputChangedSelection:(id)selection;	// 0x357919b5
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x358ab0f5
- (void)layoutSubviews;	// 0x35703255
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x358a6a91
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x35705881
- (void)loadRequest:(id)request;	// 0x357be201
// converted property getter: - (BOOL)loadsSynchronously;	// 0x358a6bbd
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x358abe91
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x358abe81
- (BOOL)makeWKFirstResponder;	// 0x35791bd5
// converted property getter: - (id)markedText;	// 0x357b4f45
// declared property getter: - (id)markedTextRange;	// 0x35760689
// declared property getter: - (id)markedTextStyle;	// 0x358aca99
- (float)maximumScale;	// 0x358a6d9d
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x358a87f1
- (id)metadataDictionariesForDictationResults;	// 0x358a9b35
- (id)methodSignatureForSelector:(SEL)selector;	// 0x3570239d
- (float)minimumScale;	// 0x35706e1d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x358a6be5
- (BOOL)mouseEventsChangeSelection;	// 0x358b4019
- (void)moveBackward:(unsigned)backward;	// 0x358aad01
- (void)moveForward:(unsigned)forward;	// 0x358aad65
- (BOOL)needsScrollNotifications;	// 0x358a6ed1
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x358a7225
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x358aa90d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x35794931
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x3593b6d9
- (void)paste:(id)paste;	// 0x358abb91
- (void)performClick:(id)click;	// 0x358b11f9
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x358b0da1
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x358a78a1
- (BOOL)playsNicelyWithGestures;	// 0x358abf41
- (void)popoverControllerDidDismissPopover:(id)popoverController;	// 0x358abb65
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x3593c9c9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x358ac961
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x35791869
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x35777885
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x358acbed
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x358aa885
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x358aabbd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x358aab89
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x3576077d
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x358ac75d
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x358a7c11
- (CGRect)rectContainingCaretSelection;	// 0x358aa7dd
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x358aa5cd
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x358aa65d
- (id)rectsForRange:(id)range;	// 0x358acd01
- (void)redrawScaledDocument;	// 0x358a84b5
- (oneway void)release;	// 0x35703159
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertText:(BOOL)text;	// 0x358aa065
- (void)replace:(id)replace;	// 0x358abd75
- (void)replaceCurrentWordWithText:(id)text;	// 0x358aa389
- (void)replaceRange:(id)range withText:(id)text;	// 0x358ac841
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x358aa2b5
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x35818f2d
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x358aaa65
- (BOOL)requiresKeyEvents;	// 0x3576bef5
- (void)resetInteraction;	// 0x357c47c1
- (void)resetShowingTextStyle:(id)style;	// 0x357dad0d
- (void)resetTilingAfterLoadComplete;	// 0x35707341
- (BOOL)resignFirstResponder;	// 0x357073f5
- (id)retain;	// 0x35701151
- (unsigned)retainCount;	// 0x357d3cd5
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x3575d0f1
- (void)saveStateToCurrentHistoryItem;	// 0x357c34f5
- (id)scriptingInfoWithChildren;	// 0x35812989
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x3593c909
- (void)scrollViewWasRemoved;	// 0x358abfa9
- (void)select:(id)select;	// 0x358abcdd
- (void)selectAll;	// 0x3593bf75
- (void)selectAll;	// 0x358aadc9
- (void)selectAll:(id)all;	// 0x358abd29
- (void)selectWord;	// 0x3593b56d
- (id)selectedDOMRange;	// 0x3575ca15
- (id)selectedDOMRange;	// 0x358aab59
// declared property getter: - (id)selectedTextRange;	// 0x3575c9c1
// declared property getter: - (int)selectionAffinity;	// 0x3575ca45
- (BOOL)selectionAtDocumentStart;	// 0x358aaca1
- (BOOL)selectionAtWordStart;	// 0x358aacd1
- (int)selectionBaseWritingDirection;	// 0x357908a9
- (void)selectionChanged;	// 0x357013d9
- (void)selectionChanged:(id)changed;	// 0x35701361
- (CGRect)selectionClipRect;	// 0x35818891
// declared property getter: - (int)selectionGranularity;	// 0x358accf1
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x3593bfc9
- (NSRange)selectionRange;	// 0x357d79dd
- (id)selectionRects;	// 0x3593bcb5
- (id)selectionRectsForRange:(id)range;	// 0x35777e99
// declared property getter: - (int)selectionState;	// 0x358ac689
- (int)selectionState;	// 0x35780155
// declared property getter: - (id)selectionView;	// 0x35701461
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x357c19b9
- (void)sendScrollEventIfNecessary;	// 0x357c4cb9
- (void)sendScrollWheelEvents;	// 0x358b1b3d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x35810ead
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x3571f229
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x358b1dcd
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x35700bf9
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x3571ecd5
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x3593c02d
- (void)setBaseWritingDirection:(int)direction;	// 0x3593b881
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x35791981
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x358abf49
- (void)setBottomBufferHeight:(float)height;	// 0x358ab165
- (void)setCaretChangeListener:(id)listener;	// 0x358ab0ad
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x35702acd
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x3575fbad
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x3571ec19
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x3571f191
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x3581b639
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x357053a5
- (void)setDrawsBackground:(BOOL)background;	// 0x3570107d
- (void)setFrame:(CGRect)frame;	// 0x356ffac9
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x35700d9d
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x358a7321
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x358a7109
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x35700b45
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x3575eeb9
- (void)setInteractionAssistantGestureRecognizers;	// 0x358a959d
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x3571f1a1
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x357073dd
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x358a94cd
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x35700e31
// converted property setter: - (void)setMarkedText:(id)text;	// 0x35819035
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x358aa449
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x358aca9d
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x35700bbd
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x358a87a9
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x35700b81
- (void)setMinimumSize:(CGSize)size;	// 0x35700909
- (void)setOpaque:(BOOL)opaque;	// 0x35701035
- (void)setPaused:(BOOL)paused;	// 0x358ab1d1
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x358ab1e5
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x3593b8b5
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x3593b915
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x3593b8e5
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x3593b9d5
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x3593ba7d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x3593b9a5
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x3593b975
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x3593be41
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x3593bc31
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x35759db9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x35759b85
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x358ac6b9
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x358acced
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x35777bc1
- (void)setSelectionToEnd;	// 0x3593becd
- (void)setSelectionToStart;	// 0x3593bf21
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x3593bb15
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x3593c90d
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x358a6e91
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x358a877d
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x358a6e0d
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x3571f1b5
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x3570759d
// converted property setter: - (void)setText:(id)text;	// 0x358aae1d
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x357c034d
- (void)setTilingArea:(int)area;	// 0x35705e41
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x358a7121
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x3581ad19
- (void)setUserStyleSheet:(id)sheet;	// 0x3581121d
- (void)setUsesUIScrollView;	// 0x3571dfad
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x35700c31
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x358a6ea9
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x358a8795
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x358a6e7d
- (void)smartExtendRangedSelection:(int)selection;	// 0x3593be0d
// converted property getter: - (id)standaloneEditingElement;	// 0x358a94bd
- (BOOL)startActionSheet;	// 0x358b0f1d
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x3593c149
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x358b0dfd
- (void)stopLoading:(id)loading;	// 0x357cbd91
- (id)subviews;	// 0x35700cd1
- (id)superviewForSheet;	// 0x358b1de5
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x358a7bd9
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x358b1cb1
- (void)takeTraitsFrom:(id)from;	// 0x358ab3c5
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x358b0e6d
// converted property getter: - (id)text;	// 0x358aaf45
- (id)textColorForCaretSelection;	// 0x358aa58d
// declared property getter: - (id)textDocument;	// 0x358acd5d
- (id)textFormElement;	// 0x358a94a5
- (id)textInDOMRange:(id)domrange;	// 0x3579261d
- (id)textInRange:(id)range;	// 0x3577075d
- (id)textInputTraits;	// 0x35700889
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x35759a21
- (void)toggleBaseWritingDirection;	// 0x3593b82d
// declared property getter: - (id)tokenizer;	// 0x35760779
// converted property getter: - (id)undoManager;	// 0x3575e261
- (id)undoManagerForWebView:(id)webView;	// 0x3575e281
- (void)unmarkText;	// 0x357d6a4d
- (void)updateInteractionElements;	// 0x358a86fd
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x358a94f9
- (void)updateSelection;	// 0x358ab4dd
// converted property getter: - (BOOL)updatesScrollView;	// 0x358a7139
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x3571e15d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x358b0eb9
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x357060c5
- (float)viewportHeight;	// 0x3571f099
- (float)viewportWidth;	// 0x3571ed0d
- (CGRect)visibleBounds;	// 0x3577de45
- (CGRect)visibleContentFrame;	// 0x358abed5
- (CGRect)visibleFrame;	// 0x358abeb1
- (CGRect)visibleRectForSelecting;	// 0x358b4031
// converted property getter: - (id)webSelectionAssistant;	// 0x358abea1
- (void)webThreadWebViewDidLayout:(id)webThreadWebView;	// 0x358a6f41
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x356a1155
// converted property getter: - (id)webView;	// 0x356a1229
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x358a70b9
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x357059b1
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node;	// 0x358a7f65
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x357c4329
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x35707075
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x35700c79
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x358ab329
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x358b16e5
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x35706f51
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x357c439d
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x357c42c1
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x357c1a25
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x357cc6c1
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x357c4021
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x3575ce01
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x357c2425
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x358a8131
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x358ab2d9
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x35703349
- (void)webViewDidDrawTiles:(id)webView;	// 0x357035b1
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x358a6f9d
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x358b1715
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x358a6f55
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x356ff50d
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x357773c9
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x358b1021
- (void)willMoveToSuperview:(id)superview;	// 0x357010e1
- (void)willStartScroll;	// 0x357cb689
- (void)willStartScrollToTop;	// 0x358abf4d
- (void)willStartZoom;	// 0x358abfbd
- (id)wordAtPoint:(CGPoint)point;	// 0x3593bbc9
- (id)wordContainingCaretSelection;	// 0x358aa995
- (int)wordOffsetInRange:(id)range;	// 0x358aaa31
- (id)wordRangeContainingCaretSelection;	// 0x358aa855
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x358a76ed
@end

