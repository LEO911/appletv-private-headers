/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class NSMutableArray, UITextInputTraits, NSArray, UIDelayedAction, UIAutocorrectInlinePrompt, NSTimer, UIKeyboardLayout, NSMutableDictionary, UITextInputArrowKeyHistory, UIKeyboardCandidate, UIAlertView, UIKeyboardInputManager, NSString;
@protocol UIKeyboardRecording, UIApplicationEventRecording, UIKeyInput, UITextInput, UIKeyboardTypology, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 48 = 0x30
	UIView *m_languageIndicator;	// 52 = 0x34
	NSString *m_previousInputString;	// 56 = 0x38
	UIKeyboardInputManager *m_inputManager;	// 60 = 0x3c
	UIKeyboardCandidate *m_autocorrection;	// 64 = 0x40
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 68 = 0x44
	UIDelayedAction *m_autocorrectPromptAction;	// 72 = 0x48
	NSMutableDictionary *m_autocorrectHistoryLists;	// 76 = 0x4c
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 80 = 0x50
	NSArray *m_candidates;	// 84 = 0x54
	id<UIKeyboardCandidateList> m_candidateList;	// 88 = 0x58
	UIView *m_markedTextOverlay;	// 92 = 0x5c
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 96 = 0x60
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 100 = 0x64
	UIKeyboardLayout *m_layout;	// 104 = 0x68
	NSMutableDictionary *m_keyedLayouts;	// 108 = 0x6c
	NSString *m_inputModeLastChosen;	// 112 = 0x70
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 116 = 0x74
	NSTimer *m_autoDeleteTimer;	// 128 = 0x80
	unsigned m_autoDeleteCount;	// 132 = 0x84
	double m_autoDeleteLastDelete;	// 136 = 0x88
	double m_autoDeleteInterval;	// 144 = 0x90
	unsigned long m_autoDeleteShiftCharacter;	// 152 = 0x98
	UIDelayedAction *m_longPressAction;	// 156 = 0x9c
	int m_orientation;	// 160 = 0xa0
	int m_originalOrientation;	// 164 = 0xa4
	CGPoint m_inputPoint;	// 168 = 0xa8
	int m_changeCount;	// 176 = 0xb0
	double m_changeTime;	// 180 = 0xb4
	double m_doubleSpacePeriodTime;	// 188 = 0xbc
	id m_changedDelegate;	// 196 = 0xc4
	CFRunLoopObserverRef m_observer;	// 200 = 0xc8
	unsigned m_textInputChangingCount;	// 204 = 0xcc
	BOOL m_textInputChangingText;	// 208 = 0xd0
	BOOL m_textInputChangingDirection;	// 209 = 0xd1
	BOOL m_textInputChangesIgnored;	// 210 = 0xd2
	BOOL m_insideKeyInputDelegateCall;	// 211 = 0xd3
	UITextInputTraits *m_defaultTraits;	// 212 = 0xd4
	UITextInputTraits *m_traits;	// 216 = 0xd8
	int m_returnKeyState;	// 220 = 0xdc
	int m_currentDirection;	// 224 = 0xe0
	int m_learnsCorrections;	// 228 = 0xe4
	BOOL m_anotherTouchWaiting;	// 232 = 0xe8
	BOOL m_autoDeleteOK;	// 233 = 0xe9
	BOOL m_autocapitalizationPreference;	// 234 = 0xea
	BOOL m_autocorrectPromptTimerFired;	// 235 = 0xeb
	BOOL m_autocorrectionPreference;	// 236 = 0xec
	BOOL m_autoshift;	// 237 = 0xed
	BOOL m_caretShowingNow;	// 238 = 0xee
	BOOL m_changeNotificationDisabled;	// 239 = 0xef
	BOOL m_delegateIsSMSTextView;	// 240 = 0xf0
	BOOL m_delegateRequiresKeyEvents;	// 241 = 0xf1
	BOOL m_doubleSpacePeriodPreference;	// 242 = 0xf2
	BOOL m_hardwareKeyboardAttached;	// 243 = 0xf3
	BOOL m_inDealloc;	// 244 = 0xf4
	BOOL m_inHardwareKeyboardMode;	// 245 = 0xf5
	BOOL m_initializationDone;	// 246 = 0xf6
	BOOL m_performDecomposingDelete;	// 247 = 0xf7
	BOOL m_performanceLoggingEnabled;	// 248 = 0xf8
	BOOL m_selecting;	// 249 = 0xf9
	BOOL m_shift;	// 250 = 0xfa
	BOOL m_shiftLocked;	// 251 = 0xfb
	BOOL m_shiftLockedEnabled;	// 252 = 0xfc
	BOOL m_settingShift;	// 253 = 0xfd
	BOOL m_shouldSkipCandidateSelection;	// 254 = 0xfe
	BOOL m_usesCandidateSelection;	// 255 = 0xff
	BOOL m_updatingPreferences;	// 256 = 0x100
	BOOL m_changingGeometryWithSameOrientation;	// 257 = 0x101
	BOOL m_suppressGeometryChangeNotifications;	// 258 = 0x102
	BOOL m_acceptingCandidate;	// 259 = 0x103
	BOOL m_userChangedSelection;	// 260 = 0x104
	BOOL m_shouldChargeKeys;	// 261 = 0x105
	BOOL m_longPress;	// 262 = 0x106
	BOOL m_syntheticInput;	// 263 = 0x107
	BOOL m_replacingWord;	// 264 = 0x108
	BOOL m_shiftNeedsUpdate;	// 265 = 0x109
	BOOL m_shiftPreventAutoshift;	// 266 = 0x10a
	BOOL m_shiftHeldDownNeedsUpdated;	// 267 = 0x10b
	BOOL m_delegateAdoptsTextInput;	// 268 = 0x10c
	BOOL m_delegateAdoptsTextInputPrivate;	// 269 = 0x10d
	BOOL m_delegateAdoptsKeyboardInput;	// 270 = 0x10e
	BOOL m_clientVariantSupportEnabled;	// 271 = 0x10f
	BOOL m_clientVariantSupportEnabledEver;	// 272 = 0x110
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 276 = 0x114
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 280 = 0x118
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 284 = 0x11c
	BOOL m_preRotateShift;	// 288 = 0x120
	BOOL m_preRotateShiftLocked;	// 289 = 0x121
	BOOL m_showInputModeIndicator;	// 290 = 0x122
	BOOL m_suppressUpdateCandidateView;	// 291 = 0x123
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 292 = 0x124
	BOOL m_shouldSetInputModeInNextRun;	// 293 = 0x125
	BOOL m_rivenCenterFilled;	// 294 = 0x126
	float m_splitProgress;	// 296 = 0x128
	NSString *m_currentUsedInputMode;	// 300 = 0x12c
	NSString *m_lastUsedInputMode;	// 304 = 0x130
	BOOL m_needsCandidates;	// 308 = 0x134
	BOOL m_updateLayoutOnShowKeyboard;	// 309 = 0x135
	int _currentAlertReason;	// 312 = 0x138
@private
	id<UIKeyboardTypology> typologyRecorder;	// 316 = 0x13c
	BOOL m_showsCandidateBar;	// 320 = 0x140
	BOOL m_showsCandidateInline;	// 321 = 0x141
	UIAlertView *keyboardAlertView;	// 324 = 0x144
	BOOL committingCandidate;	// 328 = 0x148
	BOOL geometryIsChanging;	// 329 = 0x149
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x3578df71; S=0x35777d51; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x3575f435; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x357024ed; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x3577f9f5; S=0x356f2e01; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x356f2dcd; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x3589166d; S=0x358916a1; converted property
@property(assign) BOOL caretBlinks;	// G=0x358962bd; S=0x357609ad; converted property
@property(assign) BOOL caretVisible;	// G=0x3578c09d; S=0x35760a15; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x358910a5; 
@property(readonly, assign) int changeCount;	// G=0x3575edfd; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x358926e5; S=0x358926f5; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x35780f89; S=0x357043f9; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x357685e5; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x35896491; S=0x358964a1; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x3578f125; S=0x35704441; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x356ebac5; S=0x35696895; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x35892621; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x3575f0bd; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x356ecaed; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x3575eded; S=0x3575ea51; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x358964b1; S=0x358964c1; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x35891b79; S=0x35891bb1; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x356f0cb9; S=0x3578d009; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x356f014d; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x356f27c1; S=0x356f279d; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x35892279; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x3589645d; S=0x3589646d; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x3589643d; S=0x3570441d; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x356efaed; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x357b29d9; S=0x35896839; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x35892795; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x3589127d; 
@property(readonly, assign) int orientation;	// G=0x35771229; converted property
@property(assign) unsigned phraseBoundary;	// G=0x35892fa5; S=0x35892f1d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x356ebaa1; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x356f358d; S=0x3570411d; 
@property(assign) BOOL returnKeyEnabled;	// G=0x3576b391; S=0x3575f20d; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x358911ed; S=0x35891221; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x357691a5; S=0x3581ebd9; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x3581ed25; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x358951c5; S=0x3575f1d9; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x3589641d; S=0x3589642d; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x356f39cd; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x357b3521; S=0x35761ae5; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x358963fd; S=0x3589640d; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x356f3ced; S=0x356f3ad5; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x3589644d; S=0x356f3911; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x356f8661; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x356f27d1; S=0x3570415d; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x358966e5
+ (id)activeInstance;	// 0x35696885
+ (float)additionalInstanceHeight;	// 0x356f3c95
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x35890a55
+ (void)applicationWillResignActive:(id)application;	// 0x3570360d
+ (void)applicationWillSuspend:(id)application;	// 0x357038c5
+ (CGSize)defaultSize;	// 0x35890ccd
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x356eb26d
+ (CGSize)defaultSizeForOrientation:(int)orientation;	// 0x357daf6d
+ (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x35890cf1
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x35895591
+ (BOOL)isSplit;	// 0x356f5369
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x356f9255
+ (void)markElapsed:(id)elapsed;	// 0x356f38a9
+ (void)markPerformance:(id)performance;	// 0x356eb7c1
+ (id)normalizedInputModesFromPreference;	// 0x35890d29
+ (int)orientationForSize:(CGSize)size;	// 0x3575eb01
+ (CGPoint)persistentOffset;	// 0x356f6989
+ (float)persistentSplitProgress;	// 0x358912d9
+ (void)refreshRivenStateWithTraits:(id)traits;	// 0x356ec729
+ (void)releaseSharedInstance;	// 0x356e7bb5
+ (BOOL)rivenInstalled;	// 0x356fa3ad
+ (BOOL)rivenPreference;	// 0x356f86f1
+ (BOOL)rivenTranslationPreference;	// 0x357841cd
+ (void)setParentTestForProfiling:(id)profiling;	// 0x35896515
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x35793919
+ (void)setPersistentSplitProgress:(float)progress;	// 0x3589134d
+ (id)sharedInstance;	// 0x356eb0e5
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x356f4f71
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x356f5105
+ (float)splitProgress;	// 0x3589133d
+ (BOOL)supportsSplit;	// 0x35763ef1
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x35891419
- (id)initWithFrame:(CGRect)frame;	// 0x356eb3e5
- (id)UILanguagePreference;	// 0x356ef83d
- (CGRect)_autocorrectPromptRect;	// 0x35815069
- (id)_getAutocorrection;	// 0x35896a65
- (id)_getCurrentKeyboardName;	// 0x35896975
- (id)_getCurrentKeyplaneName;	// 0x35813801
- (id)_getLocalizedInputMode;	// 0x358969dd
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x35895f19
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x35896075
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x35895ff9
- (BOOL)_hasCandidates;	// 0x356f03f1
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x35896b75
- (id)_inputForAutocorrectionCandidate;	// 0x357d751d
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x358965b5
- (id)_layout;	// 0x356f50e5
- (BOOL)_needsCandidates;	// 0x35896b29
- (int)_positionInCandidateList:(id)candidateList;	// 0x35896a85
- (id)_rangeForAutocorrection;	// 0x35815181
- (void)_releaseInputManager;	// 0x35896b59
- (void)_resetInputLocation;	// 0x35896b39
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x35896a45
- (void)_setInputManager:(id)manager;	// 0x35896551
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x358138e5
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x35896561
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x357b35e1
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x3575ed8d
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x356f39e5
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x3575eec9
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x3576c4c1
- (void)acceptAutocorrection;	// 0x35794c4d
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x35893459
- (void)acceptCurrentCandidate;	// 0x358937bd
- (void)acceptCurrentCandidateIfSelected;	// 0x3576a3a9
- (BOOL)acceptInputString:(id)string;	// 0x3578427d
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x357d6131
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x35895199
- (void)addAutocorrectionRecord:(id)record forTyping:(id)typing;	// 0x35894b51
- (void)addInputObject:(id)object;	// 0x35893a1d
- (void)addInputString:(id)string;	// 0x35892da1
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x3578e125
- (void)addTyping:(id)typing forAutocorrection:(id)autocorrection;	// 0x358197f1
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x35891f15
- (void)animateAutocorrection;	// 0x35818bc5
- (void)applicationResumedEventsOnly:(id)only;	// 0x35890e01
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x35890d95
// declared property getter: - (id)arrowKeyHistory;	// 0x3578df71
- (void)autoDeleteTimerFired:(id)fired;	// 0x358951f5
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x3575f435
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x357949a9
// converted property getter: - (id)autocorrectPrompt;	// 0x357024ed
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x3577f9f5
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x35819a19
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x356f2dcd
- (BOOL)autocorrectionPreferenceForTraits;	// 0x356f2d5d
- (id)autocorrectionRecordForWord:(id)word;	// 0x35794971
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x3589166d
- (void)callChanged;	// 0x35781585
- (void)callChangedSelection;	// 0x35760bbd
- (BOOL)callLayoutIgnoresShiftState;	// 0x357b3aad
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x3576b8b9
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x3576b869
- (void)callLayoutLongPressAction;	// 0x358964d1
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x3576127d
- (void)callLayoutSetShift:(BOOL)shift;	// 0x35761229
- (BOOL)callLayoutShiftKeyRequiresImmediateUpdate;	// 0x35813fe1
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x35760ce9
- (void)callLayoutUpdateLocalizedKeys;	// 0x356f2d15
- (void)callLayoutUpdateReturnKey;	// 0x3575f239
- (BOOL)callLayoutUsesAutoShift;	// 0x357610f1
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x3580f45d
- (BOOL)callShouldInsertText:(id)call;	// 0x3578f189
- (BOOL)canHandleKeyHitTest;	// 0x3576ae65
- (BOOL)canUseGeometryKeyTouch;	// 0x3576ae89
- (void)cancelAllKeyEvents;	// 0x356984c5
- (void)cancelSplitTransition;	// 0x35891485
- (id)candidateList;	// 0x358938cd
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x35893855
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x35893881
// converted property getter: - (BOOL)caretBlinks;	// 0x358962bd
// converted property getter: - (BOOL)caretVisible;	// 0x3578c09d
// declared property getter: - (BOOL)centerFilled;	// 0x358910a5
// converted property getter: - (int)changeCount;	// 0x3575edfd
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x358926e5
// declared property getter: - (id)changedDelegate;	// 0x35780f89
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x358951d5
- (BOOL)checkSpellingPreference;	// 0x356f2f19
- (BOOL)checkSpellingPreferenceForTraits;	// 0x356f2ea5
- (void)clearAnimations;	// 0x35703ddd
- (void)clearAutocorrectPromptTimer;	// 0x356f0b39
- (void)clearChangeTimeAndCount;	// 0x3575ee0d
- (void)clearDelegate;	// 0x35703da1
- (void)clearEmojiLayout;	// 0x35896769
- (void)clearInput;	// 0x356f002d
- (void)clearKeyAreas;	// 0x3576aeb1
- (void)clearLanguageIndicator;	// 0x35891c1d
- (void)clearLayouts;	// 0x356f359d
- (void)clearLongPressTimer;	// 0x35703eb5
- (void)clearSelection;	// 0x35896325
- (void)clearShiftState;	// 0x357906a9
- (void)clearTimers;	// 0x35703e29
- (void)clearTransientState;	// 0x3575f08d
- (id)clientOverrideForKey:(id)key;	// 0x35891525
- (id)clientVariantDelegate;	// 0x3575f2fd
- (id)clientVariantsForKey:(id)key;	// 0x358914cd
// declared property getter: - (BOOL)committingCandidate;	// 0x35896491
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x35815579
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x357607f9
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x35794d7d
- (float)currentLandscapeHeight;	// 0x35890b4d
- (float)currentLandscapeWidth;	// 0x35890a59
- (float)currentPortraitHeight;	// 0x3576bdf9
- (float)currentPortraitWidth;	// 0x3576bd05
// declared property getter: - (id)currentUsedInputMode;	// 0x3578f125
- (void)dealloc;	// 0x35704181
- (void)defaultsDidChange;	// 0x35890e15
- (void)delayedInit;	// 0x356fe7a5
// declared property getter: - (id)delegate;	// 0x356ebac5
// declared property getter: - (id)delegateAsResponder;	// 0x35892621
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x3575f0bd
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x35894b8d
- (BOOL)delegateSupportsCorrectionUI;	// 0x357d74ed
- (void)deleteBackward;	// 0x35892d8d
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x3580f9e1
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x35892d49
- (void)deleteFromInput;	// 0x3580eef9
- (void)detach;	// 0x35703fb1
- (void)dismissKeyboard;	// 0x35895951
- (BOOL)displaysCandidates;	// 0x357814a9
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x356ecaed
- (void)enable;	// 0x358926d1
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x35891ee1
- (void)fadeAutocorrectPrompt;	// 0x35894905
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x358968fd
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x3589565d
- (BOOL)flushKeyplaneName:(id)name;	// 0x35794e39
- (void)forceShiftUpdate;	// 0x35813c0d
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x35782b29
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x358911b9
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x35895001
- (void)generateCandidates;	// 0x3576f689
- (void)generateCandidatesWithOptions:(int)options;	// 0x3576f69d
- (void)geometryChangeDone:(BOOL)done;	// 0x3576f565
// declared property getter: - (id)geometryDelegate;	// 0x3575eded
// declared property getter: - (BOOL)geometryIsChanging;	// 0x358964b1
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x358950fd
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x3589512d
- (void)handleDelete;	// 0x3580ee1d
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x3580ee31
- (void)handleDeleteWithNonZeroInputCount;	// 0x3580f759
- (void)handleDeleteWithZeroInputCount;	// 0x35893139
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x3578d121
- (void)handleKeyEvent:(GSEventRef)event;	// 0x3578c889
- (void)handleObserverCallback;	// 0x35781511
- (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x35895b09
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x3578e079
- (void)hardwareAutoRepeat:(id)repeat;	// 0x3589563d
- (void)hardwareKeyboardAvailabilityChanged;	// 0x358955c5
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x35891b79
- (BOOL)hasAutoRepeat;	// 0x35896571
- (BOOL)hasEditableMarkedText;	// 0x3576063d
- (BOOL)hasMarkedText;	// 0x356f011d
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x35891429
- (void)hideKeyboard;	// 0x358956f1
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x35781d65
// declared property getter: - (id)inputDelegate;	// 0x356f014d
// declared property getter: - (id)inputManager;	// 0x356f27c1
- (id)inputModeFirstPreference;	// 0x3589174d
// converted property getter: - (id)inputModeLastChosen;	// 0x35892279
- (id)inputModeLastChosenPreference;	// 0x3589179d
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x35891909
- (id)inputModeLastUsedPreference;	// 0x356ef995
- (id)inputModePreference;	// 0x356ecb49
- (id)inputOverlayContainer;	// 0x35815369
- (void)insertText:(id)text;	// 0x357b3b6d
- (void)installRecorder;	// 0x356f368d
- (void)installTypology;	// 0x356f3745
- (BOOL)isAllowedInputMode:(id)mode;	// 0x356efa21
- (BOOL)isAutoDeleteActive;	// 0x358966a5
- (BOOL)isAutoFillMode;	// 0x35817cfd
- (BOOL)isAutoShifted;	// 0x35763fd5
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x357685e5
- (BOOL)isDesiredInputMode:(id)mode;	// 0x3575ff1d
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x356f0cb9
// converted property getter: - (BOOL)isLongPress;	// 0x357b29d9
- (BOOL)isMinimized;	// 0x356f2819
// converted property getter: - (BOOL)isShiftLocked;	// 0x357691a5
- (BOOL)isShifted;	// 0x3578177d
- (BOOL)isUsingDictationLayout;	// 0x35893f1d
- (BOOL)isValidKeyInput:(id)input;	// 0x3578df81
- (void)keyActivated;	// 0x35892d35
- (void)keyDeactivated;	// 0x35892d45
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x35783709
- (BOOL)keySlidIntoSwipe;	// 0x357d541d
// declared property getter: - (id)keyboardAlertView;	// 0x3589645d
- (BOOL)keyboardDrawsOpaque;	// 0x3575ea01
- (BOOL)keyboardRecordingEnabled;	// 0x356f36cd
- (BOOL)keyboardsExpandedPreference;	// 0x35891639
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x358915c9
// declared property getter: - (id)lastUsedInputMode;	// 0x3589643d
- (void)launchTypologyApplication;	// 0x35896741
- (void)layoutHasChanged;	// 0x358926c1
// declared property getter: - (id)legacyInputDelegate;	// 0x356efaed
- (void)longPressAction;	// 0x3589551d
// converted property getter: - (id)markedTextOverlay;	// 0x35892795
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x3589515d
- (void)mediaKeyDown:(GSEventRef)down;	// 0x358961d5
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x3589127d
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x35892fc5
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x35893e3d
- (BOOL)noContent;	// 0x357b2711
- (void)notifyShiftState;	// 0x35761141
// converted property getter: - (int)orientation;	// 0x35771229
- (void)performClientVariantActionNamed:(id)named;	// 0x3589157d
- (BOOL)performanceLoggingPreference;	// 0x356fe899
// converted property getter: - (unsigned)phraseBoundary;	// 0x35892fa5
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x35770f25
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x35781e51
- (void)postEmptyDelegateNotificationIfNeeded;	// 0x3578f135
- (void)prepareForGeometryChange;	// 0x3576c54d
- (void)prepareForSelectionChange;	// 0x35777025
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x35892321
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x3575f3ed
// declared property getter: - (id)privateInputDelegate;	// 0x356ebaa1
- (void)recomputeActiveInputModes;	// 0x35892c05
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x3575fbdd
// declared property getter: - (id)recorder;	// 0x356f358d
- (void)refreshRivenPreferences;	// 0x356ec6fd
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x3576b1cd
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x35763a15
- (void)releaseSuppressUpdateCandidateView;	// 0x3576f501
- (void)removeAutocorrectPrompt;	// 0x356f0a15
- (void)removeAutocorrection;	// 0x35893429
- (void)removeFromSuperview;	// 0x35703f05
- (void)replaceText:(id)text;	// 0x35893b29
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x35893f65
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x35764775
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x35763a61
- (id)returnKeyDisplayName;	// 0x3576b3ad
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x3576b391
- (int)returnKeyType;	// 0x3576b421
// declared property getter: - (BOOL)rivenSplitLock;	// 0x358911ed
- (void)saveInputModesPreference:(id)preference;	// 0x35891715
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x35893d11
- (id)searchStringForMarkedText;	// 0x35892809
- (void)selectionDidChange:(id)selection;	// 0x35777c29
- (id)selectionView;	// 0x35896849
- (void)selectionWillChange:(id)selection;	// 0x35776fe5
- (void)setAnotherTouchWaiting:(BOOL)waiting;	// 0x3589555d
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x35777d51
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x356f2e01
- (void)setAutocorrection:(id)autocorrection;	// 0x356f0171
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x358916a1
- (void)setCandidates:(id)candidates;	// 0x356f0321
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x357609ad
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x35760a15
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x358926f5
- (void)setChanged;	// 0x35780fb9
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x357043f9
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x358964a1
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x35704441
- (void)setDefaultTextInputTraits:(id)traits;	// 0x3576c431
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x35696895
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x356968a9
- (void)setFrame:(CGRect)frame;	// 0x356eb829
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x3575ea51
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x358964c1
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x35891bb1
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x3578d009
- (void)setInitialDirection;	// 0x35760a7d
// declared property setter: - (void)setInputManager:(id)manager;	// 0x356f279d
- (void)setInputMode:(id)mode;	// 0x356efb21
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x356efb35
- (void)setInputModeFromPreferences;	// 0x356ef8d1
- (void)setInputModeLastChosenPreference;	// 0x358917f9
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x3589222d
- (void)setInputModeToNextInPreferredList;	// 0x35892105
- (void)setInputObject:(id)object;	// 0x358938dd
- (void)setInputPoint:(CGPoint)point;	// 0x357842bd
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x3589646d
- (void)setLastUsedInputMode;	// 0x3578f0c9
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x3570441d
- (void)setLearnsCorrections:(int)corrections;	// 0x35892515
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x35896839
- (void)setMarkedText;	// 0x35892705
- (void)setOrientationForSize:(CGSize)size;	// 0x356eb891
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x35892f1d
- (void)setPreviousInputString:(id)string;	// 0x35780d09
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x3570411d
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x3575f20d
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x35891221
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x35892841
- (void)setShift:(BOOL)shift;	// 0x35780dd1
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x35780de5
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x3581ebd9
- (void)setShiftLockedForced:(BOOL)forced;	// 0x35892c51
- (void)setShiftNeedsUpdate;	// 0x35780eed
- (void)setShiftOffIfNeeded;	// 0x35780d49
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x35780f99
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x3575f1d9
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x3589642d
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x35761ae5
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x35891b69
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x3589640d
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x356f3ad5
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x356f3911
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x358968a1
- (void)setSplitProgress:(float)progress;	// 0x35891281
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x3570415d
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x35764435
- (unsigned)shiftFlagsForInputString;	// 0x357b3a35
- (BOOL)shiftLockPreference;	// 0x356ec8c5
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x3581ed25
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x358951c5
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x3580fbe1
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x3589641d
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x356f39cd
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x357b3521
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x358963d9
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x35760011
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x35891f9d
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x358963fd
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x358920f1
- (void)showKeyboard;	// 0x3589579d
- (void)showNextCandidates;	// 0x35893835
// declared property getter: - (BOOL)showsCandidateBar;	// 0x356f3ced
// declared property getter: - (BOOL)showsCandidateInline;	// 0x3589644d
- (id)sortingMethods;	// 0x358950a9
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x356f8661
- (void)startAutoDeleteTimer;	// 0x3580fc55
- (void)startCaretBlinkIfNeeded;	// 0x35896259
- (void)startKeyboardRecording;	// 0x35963465
- (void)stopAutoDelete;	// 0x3575ef9d
- (void)stopKeyboardRecording;	// 0x35963571
- (void)storeDelegateConformance;	// 0x3575ee31
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x3575da7d
- (BOOL)suppliesCompletions;	// 0x35892c85
- (BOOL)supportsNumberKeySelection;	// 0x35892d11
- (BOOL)swipeToTabPreference;	// 0x35761aa1
- (void)takeTextInputTraitsFromDelegate;	// 0x356eb931
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x35896681
- (void)textChanged:(id)changed;	// 0x35780a79
- (void)textDidChange:(id)text;	// 0x35780a69
- (int)textInputChangingCount;	// 0x35896671
- (id)textInputTraits;	// 0x356f50f5
- (void)textWillChange:(id)text;	// 0x357809c1
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x3578445d
- (void)timeMark:(unsigned)mark;	// 0x357842d1
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x357841dd
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x358950d1
- (void)toggleShift;	// 0x35892c29
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x3580fcc9
- (void)touchAutocorrectPromptTimer;	// 0x3576a9c5
- (void)touchLongPressTimer;	// 0x357840c9
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x357840e1
- (BOOL)typologyEnabled;	// 0x356f3875
// declared property getter: - (id)typologyRecorder;	// 0x356f27d1
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x356f05d5
- (void)updateAutocorrectPromptAction;	// 0x35770dc5
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x3581895d
- (void)updateCandidateDisplay;	// 0x356f0461
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x35893d79
- (void)updateChangeTimeAndIncrementCount;	// 0x357b394d
- (void)updateForChangedSelection;	// 0x3576005d
- (void)updateFromTextInputTraits;	// 0x35896585
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x358928a9
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x35891ecd
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x35891c65
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x3578cf95
- (void)updateKeysWithDelegates;	// 0x3576bed1
- (void)updateLayout;	// 0x356f2855
- (void)updateLayoutAndSetShift;	// 0x35893109
- (void)updateLayoutIfNeeded;	// 0x3576c689
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x358923d5
- (void)updateObserverState;	// 0x35780f0d
- (void)updateReturnKey;	// 0x357b4f31
- (void)updateReturnKey:(BOOL)key;	// 0x3576b24d
- (void)updateShiftState;	// 0x35760d31
- (void)updateTextCandidateView;	// 0x35894109
@end

