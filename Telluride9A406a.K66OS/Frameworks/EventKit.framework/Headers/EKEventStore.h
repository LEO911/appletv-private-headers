/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <NSObject.h> // Unknown library
#import "EventKit-Structs.h"

@class NSNumber, NSTimeZone, NSArray, NSString, EKDaemonConnection, EKCalendar, NSMutableDictionary, NSMutableSet;

@interface EKEventStore : NSObject {
@private
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKDaemonConnection *_database;	// 32 = 0x20
	unsigned long _flags;	// 36 = 0x24
	NSTimeZone *_timeZone;	// 40 = 0x28
	NSMutableDictionary *_calendars;	// 44 = 0x2c
	NSMutableDictionary *_sources;	// 48 = 0x30
	NSMutableSet *_objectsPendingCommit;	// 52 = 0x34
	dispatch_queue_s *_calendarQueue;	// 56 = 0x38
	dispatch_queue_s *_registeredQueue;	// 60 = 0x3c
	dispatch_queue_s *_unsavedChangesQueue;	// 64 = 0x40
	dispatch_queue_s *_dbChangedQueue;	// 68 = 0x44
}
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x3457fe2d; S=0x3457fe3d; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x3457fe61; S=0x3457fe71; @synthesize
@property(assign, nonatomic) dispatch_queue_s *calendarQueue;	// G=0x3457feb5; S=0x3457fec5; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x3455480d; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x3457fdd9; S=0x3457fde9; @synthesize=_database
@property(assign, nonatomic) dispatch_queue_s *dbChangedQueue;	// G=0x3457ff15; S=0x3457ff25; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x3454a4ed; S=0x3457fcf5; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x3454b391; 
@property(retain) id defaultCalendarForNewTasks;	// G=0x34555599; S=0x3457cc85; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x345491bd; S=0x3457fcb1; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x3457fd99; S=0x3457fda9; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x3457ac99; 
@property(assign, nonatomic) unsigned long flags;	// G=0x3457fe0d; S=0x3457fe1d; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x3457fd79; S=0x3457fd89; @synthesize=_insertedObjects
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x3457fe95; S=0x3457fea5; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x3457fd59; S=0x3457fd69; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x3457fd39; S=0x3457fd49; @synthesize=_registeredObjects
@property(assign, nonatomic) dispatch_queue_s *registeredQueue;	// G=0x3457fed5; S=0x3457fee5; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x3453914d; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x34537421; S=0x3453b7dd; @synthesize=_timeZone
@property(assign, nonatomic) dispatch_queue_s *unsavedChangesQueue;	// G=0x3457fef5; S=0x3457ff05; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x3457fdb9; S=0x3457fdc9; @synthesize=_updatedObjects
+ (Class)classForEntityName:(id)entityName;	// 0x34539785
+ (Class)publicClassForEntityName:(id)entityName;	// 0x345429b9
+ (id)storeWithOptions:(unsigned long)options path:(id)path;	// 0x34579fbd
- (id)init;	// 0x34536e99
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x34536ead
- (id)_addFetchedObjectWithID:(id)anId;	// 0x34539515
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x3455112d
- (id)_allCalendars;	// 0x345439ad
- (BOOL)_calendar:(id)calendar supportsEntityType:(int)type;	// 0x34543b65
// declared property getter: - (id)_calendars;	// 0x3457fe2d
- (void)_databaseChangedExternally;	// 0x34552b25
- (void)_deleteObject:(id)object;	// 0x345544d9
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x3457bcb9
- (void)_forgetRegisteredObjects;	// 0x3457d785
- (void)_insertObject:(id)object;	// 0x3454d2b5
- (void)_notifyStoreChanged;	// 0x3457ad79
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x3457b959
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x34543dd5
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x345442f9
- (void)_protectedDataDidBecomeAvailable;	// 0x3457fcad
- (void)_protectedDataWillBecomeUnavailable;	// 0x3457fca9
- (void)_refreshCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x3457d2e1
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x3457d461
- (void)_registerObject:(id)object;	// 0x34548bed
- (void)_registerObjectImmediate:(id)immediate;	// 0x34539b85
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x34552545
- (void)_save;	// 0x3457ad65
- (void)_saveWithNotify:(BOOL)notify;	// 0x3457acdd
// declared property getter: - (id)_sources;	// 0x3457fe61
- (void)_trackModifiedObject:(id)object;	// 0x34556d09
- (void)_unregisterObject:(id)object;	// 0x3455472d
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x34552d95
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x3457f725
- (id)alarmWithUUID:(id)uuid;	// 0x3457f65d
// declared property getter: - (dispatch_queue_s *)calendarQueue;	// 0x3457feb5
- (id)calendarWithExternalURI:(id)externalURI;	// 0x3457d139
- (id)calendarWithID:(id)anId;	// 0x3453e9d1
- (id)calendarWithIdentifier:(id)identifier;	// 0x345441f5
// declared property getter: - (id)calendars;	// 0x3455480d
- (void)cancelFetchRequest:(id)request;	// 0x3457f63d
- (id)changesSinceSequenceNumber:(int)number;	// 0x3457a091
- (BOOL)commit:(id *)commit;	// 0x34551191
- (id)connection;	// 0x3453857d
- (CGColorRef)copyCGColorForNewCalendar;	// 0x3457cb25
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x3454458d
- (void)daemonRestarted;	// 0x3457ac51
// declared property getter: - (id)database;	// 0x3457fdd9
// declared property getter: - (dispatch_queue_s *)dbChangedQueue;	// 0x3457ff15
- (void)dealloc;	// 0x34538d35
- (id)defaultAllDayAlarm;	// 0x3454a479
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x3454a4ed
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x3454b391
// converted property getter: - (id)defaultCalendarForNewTasks;	// 0x34555599
- (id)defaultTimedAlarm;	// 0x34549149
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x345491bd
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x3457b745
// declared property getter: - (id)deletedObjects;	// 0x3457fd99
- (id)earliestExpiringUnreadEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x34537471
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x3457f429
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x34547a65
// declared property getter: - (id)eventStoreIdentifier;	// 0x3457ac99
- (id)eventWithIdentifier:(id)identifier;	// 0x3457b879
- (id)eventWithUUID:(id)uuid;	// 0x3457d06d
- (id)eventWithUniqueId:(id)uniqueId;	// 0x3457bec9
- (id)eventsMatchingPredicate:(id)predicate;	// 0x34537d69
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x34537f29
- (void)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x345599b5
// declared property getter: - (unsigned long)flags;	// 0x3457fe0d
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x3457c351
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x3457c8f1
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x3457c445
- (id)insertNewEvent;	// 0x3457d219
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x3457d275
- (id)insertNewReminder;	// 0x3457cebd
// declared property getter: - (id)insertedObjects;	// 0x3457fd79
- (BOOL)isDataProtected;	// 0x3453741d
- (id)localSource;	// 0x3457afd5
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x34543d51
- (BOOL)markEventRead:(id)read error:(id *)error;	// 0x3457bfa1
- (BOOL)markEventsRead:(id)read error:(id *)error;	// 0x3457c0f9
- (id)objectWithObjectID:(id)objectID;	// 0x3453ea69
// declared property getter: - (id)objectsPendingCommit;	// 0x3457fe95
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x3457cf7d
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x345453f9
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x3457cffd
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x345442c1
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x34544d91
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x3453ec71
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x3457fb31
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x34554c7d
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x3454542d
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x34559905
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x3457cfb5
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x3457d021
- (id)predicateForUnacknowledgedEvents;	// 0x3457fc71
- (id)predicateForUnalertedEvents;	// 0x34537d15
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x3457fc8d
- (id)publicObjectWithObjectID:(id)objectID;	// 0x3457da55
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x345422a1
// declared property getter: - (id)publicRegisteredObjects;	// 0x3457fd59
- (int)readWriteCalendarCountForEntityType:(int)entityType;	// 0x34549c35
- (id)readWriteCalendarsForEntityType:(int)entityType;	// 0x345438a1
- (void)refreshSourcesIfNecessary;	// 0x3457d581
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x3453aec9
- (id)registerFetchedObjectWithID:(id)anId;	// 0x345393b5
// declared property getter: - (id)registeredObjects;	// 0x3457fd39
// declared property getter: - (dispatch_queue_s *)registeredQueue;	// 0x3457fed5
- (oneway void)release;	// 0x345378a5
- (id)reminderWithExternalURI:(id)externalURI;	// 0x3457cce9
- (id)reminderWithUUID:(id)uuid;	// 0x3457cdf5
- (id)remindersMatchingPredicate:(id)predicate;	// 0x34544dc9
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x3457b689
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x3457b5b1
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x34553e6d
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x34553e49
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x34559b85
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x34559b65
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x3457b141
- (void)reset;	// 0x3457e3d1
- (void)rollback;	// 0x3457e0d5
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x3457b5d1
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x3457b591
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x3454d121
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x3454d0fd
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x3455586d
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x34556ccd
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x3457b095
- (int)sequenceNumber;	// 0x3457a039
- (unsigned)serverPort;	// 0x34537571
// declared property setter: - (void)setCalendarQueue:(dispatch_queue_s *)queue;	// 0x3457fec5
// declared property setter: - (void)setDatabase:(id)database;	// 0x3457fde9
// declared property setter: - (void)setDbChangedQueue:(dispatch_queue_s *)queue;	// 0x3457ff25
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x3457fcf5
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x3457cc21
// converted property setter: - (void)setDefaultCalendarForNewTasks:(id)newTasks;	// 0x3457cc85
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x3457fcb1
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x3457fda9
- (void)setEventsAlertedAndSave:(id)save;	// 0x34538ba1
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x3457fe1d
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x3457fd89
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x3457fea5
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x3457fd69
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x3457fd49
// declared property setter: - (void)setRegisteredQueue:(dispatch_queue_s *)queue;	// 0x3457fee5
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x3453b7dd
// declared property setter: - (void)setUnsavedChangesQueue:(dispatch_queue_s *)queue;	// 0x3457ff05
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x3457fdc9
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x3457fe3d
// declared property setter: - (void)set_sources:(id)sources;	// 0x3457fe71
- (id)sourceWithIdentifier:(id)identifier;	// 0x345428d1
// converted property getter: - (id)sources;	// 0x3453914d
// declared property getter: - (id)timeZone;	// 0x34537421
- (int)unacknowledgedEventCount;	// 0x3457d2b5
- (int)unreadEventCount;	// 0x34537a15
// declared property getter: - (dispatch_queue_s *)unsavedChangesQueue;	// 0x3457fef5
// declared property getter: - (id)updatedObjects;	// 0x3457fdb9
@end

