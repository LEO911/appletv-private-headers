/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "NSCopying.h"
#import "NSMutableCopying.h"
#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x34549f85; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x3453c989
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x3453f61d
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x3453dfbd
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x3454b775
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x34596bf9
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x3453c9d1
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x3453f65d
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x3453dffd
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x3453df29
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x3454b7c9
- (double)absoluteTime;	// 0x3453d391
- (id)calendarDateByAddingDays:(int)days;	// 0x3453e325
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x3453e351
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x34596db5
- (id)calendarDateForDay;	// 0x3453e1b5
- (id)calendarDateForEndOfDay;	// 0x3453e441
- (id)calendarDateForEndOfMonth;	// 0x345430d9
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x34542f09
- (id)calendarDateForMonth;	// 0x34542fe5
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x3453d2dd
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x3453d2f1
- (id)calendarDateForYear;	// 0x34596fb1
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x34554ce1
- (id)calendarDateWithDate:(id)date;	// 0x34596de5
- (int)compare:(id)compare;	// 0x345405c1
- (id)components;	// 0x34554de5
- (id)copyWithZone:(NSZone *)zone;	// 0x3453d2cd
- (id)date;	// 0x3453e545
- (unsigned)day;	// 0x34559745
- (unsigned)dayOfWeek;	// 0x345589e9
- (unsigned)dayOfYear;	// 0x34596ebd
- (unsigned)daysInMonth;	// 0x345431e5
- (unsigned)daysInYear;	// 0x34596f1d
- (void)dealloc;	// 0x3453f869
- (id)description;	// 0x34596c75
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x3453ffbd
- (int)differenceInDays:(id)days;	// 0x34542ed1
- (int)differenceInMonths:(id)months;	// 0x345596ed
- (int)differenceInYears:(id)years;	// 0x34596e21
- (id)earlierDate:(id)date;	// 0x34559c59
- (XXStruct_lQVxyC)gregorianDate;	// 0x3453e299
- (unsigned)hour;	// 0x34558121
- (BOOL)isEqual:(id)equal;	// 0x3454abc5
- (id)laterDate:(id)date;	// 0x345970b1
- (unsigned)minute;	// 0x34558155
- (unsigned)month;	// 0x34596e89
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x34558945
- (double)second;	// 0x34558189
- (int)secondsFromGMT;	// 0x34596d79
// converted property getter: - (id)timeZone;	// 0x34549f85
- (unsigned)weekOfYear;	// 0x34596eed
- (unsigned)weeksInYear;	// 0x34596f65
- (unsigned)year;	// 0x34596e59
@end

