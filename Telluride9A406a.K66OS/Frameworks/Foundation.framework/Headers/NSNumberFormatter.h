/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x35e8e971; S=0x35e01c89; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x35e8eb0d; S=0x35e228cd; converted property
@property(retain) id currencyCode;	// G=0x35e8fc6d; S=0x35e8fd2d; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x35e8ebc1; S=0x35e8ec81; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x35e91701; S=0x35e917c1; converted property
@property(retain) id currencySymbol;	// G=0x35e8fdc9; S=0x35e8fe89; converted property
@property(retain) id decimalSeparator;	// G=0x35e8e9b1; S=0x35e8ea71; converted property
@property(retain) id exponentSymbol;	// G=0x35e905f1; S=0x35e906b1; converted property
@property(assign) unsigned formatWidth;	// G=0x35e90981; S=0x35e90a5d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x35e8e39d; S=0x35e226e1; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x35e8e355; S=0x35e1169d; converted property
@property(retain) id groupingSeparator;	// G=0x35e8edd1; S=0x35e8ee91; converted property
@property(assign) unsigned groupingSize;	// G=0x35e9074d; S=0x35e1d0fd; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x35e8ff25; S=0x35e8ffe5; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x35e9185d; S=0x35e9191d; converted property
@property(retain) id locale;	// G=0x35e8e2e5; S=0x35e11631; converted property
@property(retain) id maximum;	// G=0x35e91645; S=0x35e9166d; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x35e914ad; S=0x35e17849; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x35e91279; S=0x35e91355; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x35e91c35; S=0x35e91d11; converted property
@property(retain) id minimum;	// G=0x35e91589; S=0x35e915b1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x35e913d1; S=0x35e2294d; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x35e9119d; S=0x35e229c9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x35e91add; S=0x35e91bb9; converted property
@property(retain) id minusSign;	// G=0x35e90339; S=0x35e903f9; converted property
@property(retain) id multiplier;	// G=0x35e90ad9; S=0x35e90b99; converted property
@property(retain) id negativeFormat;	// G=0x35e8e3dd; S=0x35e8e495; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x35e8f59d; S=0x35e01c31; converted property
@property(retain) id negativePrefix;	// G=0x35e8f9b5; S=0x35e8fa75; converted property
@property(retain) id negativeSuffix;	// G=0x35e8fb11; S=0x35e8fbd1; converted property
@property(retain) id nilSymbol;	// G=0x35e8f0a5; S=0x35e01b81; converted property
@property(retain) id notANumberSymbol;	// G=0x35e8f205; S=0x35e8f2c5; converted property
@property(assign) unsigned numberStyle;	// G=0x35e8e265; S=0x35e06f51; converted property
@property(retain) id paddingCharacter;	// G=0x35e90c35; S=0x35e90cf5; converted property
@property(assign) unsigned paddingPosition;	// G=0x35e90d91; S=0x35e90e6d; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x35e91d8d; S=0x35e91dd5; converted property
@property(retain) id perMillSymbol;	// G=0x35e901dd; S=0x35e9029d; converted property
@property(retain) id percentSymbol;	// G=0x35e90081; S=0x35e90141; converted property
@property(retain) id plusSign;	// G=0x35e90495; S=0x35e90555; converted property
@property(retain) id positiveFormat;	// G=0x35e8e6cd; S=0x35e8e769; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x35e8f43d; S=0x35e01bd9; converted property
@property(retain) id positivePrefix;	// G=0x35e8f6fd; S=0x35e8f7bd; converted property
@property(retain) id positiveSuffix;	// G=0x35e8f859; S=0x35e8f919; converted property
@property(retain) id roundingIncrement;	// G=0x35e91041; S=0x35e91101; converted property
@property(assign) unsigned roundingMode;	// G=0x35e90ee9; S=0x35e90fc5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x35e90829; S=0x35e90905; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x35e8f621; S=0x35e8f6a5; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x35e8e5f1; S=0x35e8e675; converted property
@property(retain) id textAttributesForNil;	// G=0x35e8f129; S=0x35e8f1ad; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x35e8f361; S=0x35e8f3e5; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x35e8f4c1; S=0x35e8f545; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x35e8e895; S=0x35e8e919; converted property
@property(retain) id textAttributesForZero;	// G=0x35e8efc9; S=0x35e8f04d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x35e8ed1d; S=0x35e05331; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x35e9199d; S=0x35e91a5d; converted property
@property(retain) id zeroSymbol;	// G=0x35e1a365; S=0x35e8ef2d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x35e01b71
+ (void)initialize;	// 0x35e017a1
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x35e22ac1
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x35e017cd
- (id)init;	// 0x35e017e5
- (id)initWithCoder:(id)coder;	// 0x35e8d7ad
- (void *)__Keynote_NOOP;	// 0x35e8d4dd
- (void)_regenerateFormatter;	// 0x35e01ce5
- (void)_reset;	// 0x35e8d4e1
// converted property getter: - (BOOL)allowsFloats;	// 0x35e8e971
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x35e8eb0d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x35e8d94d
- (id)copyWithZone:(NSZone *)zone;	// 0x35e8d69d
// converted property getter: - (id)currencyCode;	// 0x35e8fc6d
// converted property getter: - (id)currencyDecimalSeparator;	// 0x35e8ebc1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x35e91701
// converted property getter: - (id)currencySymbol;	// 0x35e8fdc9
- (void)dealloc;	// 0x35e11771
// converted property getter: - (id)decimalSeparator;	// 0x35e8e9b1
- (void)encodeWithCoder:(id)coder;	// 0x35e8d705
// converted property getter: - (id)exponentSymbol;	// 0x35e905f1
- (void)finalize;	// 0x35e8d659
// converted property getter: - (unsigned)formatWidth;	// 0x35e90981
// converted property getter: - (unsigned)formatterBehavior;	// 0x35e8e39d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x35e8e355
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x35e8d951
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x35e8e209
// converted property getter: - (id)groupingSeparator;	// 0x35e8edd1
// converted property getter: - (unsigned)groupingSize;	// 0x35e9074d
// converted property getter: - (id)internationalCurrencySymbol;	// 0x35e8ff25
// converted property getter: - (BOOL)isLenient;	// 0x35e9185d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x35e91d8d
// converted property getter: - (id)locale;	// 0x35e8e2e5
// converted property getter: - (id)maximum;	// 0x35e91645
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x35e914ad
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x35e91279
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x35e91c35
// converted property getter: - (id)minimum;	// 0x35e91589
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x35e913d1
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x35e9119d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x35e91add
// converted property getter: - (id)minusSign;	// 0x35e90339
// converted property getter: - (id)multiplier;	// 0x35e90ad9
// converted property getter: - (id)negativeFormat;	// 0x35e8e3dd
// converted property getter: - (id)negativeInfinitySymbol;	// 0x35e8f59d
// converted property getter: - (id)negativePrefix;	// 0x35e8f9b5
// converted property getter: - (id)negativeSuffix;	// 0x35e8fb11
// converted property getter: - (id)nilSymbol;	// 0x35e8f0a5
// converted property getter: - (id)notANumberSymbol;	// 0x35e8f205
- (id)numberFromString:(id)string;	// 0x35e8e229
// converted property getter: - (unsigned)numberStyle;	// 0x35e8e265
// converted property getter: - (id)paddingCharacter;	// 0x35e90c35
// converted property getter: - (unsigned)paddingPosition;	// 0x35e90d91
// converted property getter: - (id)perMillSymbol;	// 0x35e901dd
// converted property getter: - (id)percentSymbol;	// 0x35e90081
// converted property getter: - (id)plusSign;	// 0x35e90495
// converted property getter: - (id)positiveFormat;	// 0x35e8e6cd
// converted property getter: - (id)positiveInfinitySymbol;	// 0x35e8f43d
// converted property getter: - (id)positivePrefix;	// 0x35e8f6fd
// converted property getter: - (id)positiveSuffix;	// 0x35e8f859
// converted property getter: - (id)roundingIncrement;	// 0x35e91041
// converted property getter: - (unsigned)roundingMode;	// 0x35e90ee9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x35e90829
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x35e01c89
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x35e228cd
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x35e8fd2d
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x35e8ec81
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x35e917c1
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x35e8fe89
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x35e8ea71
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x35e906b1
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x35e90a5d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x35e226e1
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x35e1169d
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x35e8ee91
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x35e1d0fd
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x35e8ffe5
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x35e9191d
// converted property setter: - (void)setLocale:(id)locale;	// 0x35e11631
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x35e9166d
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x35e17849
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x35e91355
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x35e91d11
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x35e915b1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x35e2294d
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x35e229c9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x35e91bb9
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x35e903f9
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x35e90b99
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x35e8e495
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x35e01c31
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x35e8fa75
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x35e8fbd1
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x35e01b81
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x35e8f2c5
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x35e06f51
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x35e90cf5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x35e90e6d
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x35e91dd5
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x35e9029d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x35e90141
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x35e90555
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x35e8e769
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x35e01bd9
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x35e8f7bd
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x35e8f919
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x35e91101
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x35e90fc5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x35e90905
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x35e8f6a5
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x35e8e675
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x35e8f1ad
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x35e8f3e5
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x35e8f545
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x35e8e919
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x35e8f04d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x35e05331
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x35e91a5d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x35e8ef2d
- (id)stringForObjectValue:(id)objectValue;	// 0x35e053d1
- (id)stringFromNumber:(id)number;	// 0x35e053b1
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x35e8f621
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x35e8e5f1
// converted property getter: - (id)textAttributesForNil;	// 0x35e8f129
// converted property getter: - (id)textAttributesForNotANumber;	// 0x35e8f361
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x35e8f4c1
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x35e8e895
// converted property getter: - (id)textAttributesForZero;	// 0x35e8efc9
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x35e8ed1d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x35e9199d
// converted property getter: - (id)zeroSymbol;	// 0x35e1a365
@end

