/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
@private
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x35e838f1
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x35e839f5
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x35e839b5
+ (id)decimalNumberWithString:(id)string;	// 0x35e83a45
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x35e83a75
+ (id)defaultBehavior;	// 0x35e8473d
+ (id)maximumDecimalNumber;	// 0x35e83c89
+ (id)minimumDecimalNumber;	// 0x35e83c1d
+ (id)notANumber;	// 0x35e83da5
+ (id)numberWithBool:(BOOL)aBool;	// 0x35e85c3d
+ (id)numberWithChar:(BOOL)aChar;	// 0x35e85809
+ (id)numberWithDouble:(double)aDouble;	// 0x35e85bed
+ (id)numberWithFloat:(float)aFloat;	// 0x35e85ba1
+ (id)numberWithInt:(int)int;	// 0x35e85939
+ (id)numberWithInteger:(int)integer;	// 0x35e85985
+ (id)numberWithLong:(long)aLong;	// 0x35e85a69
+ (id)numberWithLongLong:(long long)longLong;	// 0x35e85b01
+ (id)numberWithShort:(short)aShort;	// 0x35e858a1
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x35e85855
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x35e859d1
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x35e85a1d
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x35e85ab5
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x35e85b51
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x35e858ed
+ (id)one;	// 0x35e83d35
+ (void)setDefaultBehavior:(id)behavior;	// 0x35e846e9
+ (id)zero;	// 0x35e83cf5
- (id)initWithCoder:(id)coder;	// 0x35e83b99
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x35e83ae5
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x35e83aa9
- (id)initWithString:(id)string;	// 0x35e83b21
- (id)initWithString:(id)string locale:(id)locale;	// 0x35e83b5d
- (BOOL)boolValue;	// 0x35e84b11
- (BOOL)charValue;	// 0x35e84995
- (Class)classForCoder;	// 0x35e847ad
- (int)compare:(id)compare;	// 0x35e83e15
- (id)copy;	// 0x35e8392d
- (id)copyWithZone:(NSZone *)zone;	// 0x35e8393d
- (id)decimalNumberByAdding:(id)adding;	// 0x35e83fd9
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x35e84029
- (id)decimalNumberByDividingBy:(id)by;	// 0x35e843a5
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x35e843f5
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x35e842c9
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x35e84319
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x35e84555
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x35e845a5
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x35e84481
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x35e844d1
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x35e84629
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x35e8419d
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x35e841dd
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x35e841ed
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x35e8423d
- (XXStruct_9isexA)decimalValue;	// 0x35e83bf1
- (id)description;	// 0x35e83bd5
- (id)descriptionWithLocale:(id)locale;	// 0x35e83be9
- (double)doubleValue;	// 0x35e83ee5
- (void)encodeWithCoder:(id)coder;	// 0x35e847c9
- (float)floatValue;	// 0x35e84aed
- (void)getValue:(void *)value;	// 0x35e83fbd
- (int)intValue;	// 0x35e84a25
- (BOOL)isEqual:(id)equal;	// 0x35e83e91
- (long long)longLongValue;	// 0x35e84ab5
- (long)longValue;	// 0x35e84a6d
- (const char *)objCType;	// 0x35e83ed9
- (short)shortValue;	// 0x35e849dd
- (unsigned char)unsignedCharValue;	// 0x35e849b9
- (unsigned)unsignedIntValue;	// 0x35e84a49
- (unsigned long long)unsignedLongLongValue;	// 0x35e84ad1
- (unsigned long)unsignedLongValue;	// 0x35e84a91
- (unsigned short)unsignedShortValue;	// 0x35e84a01
@end

