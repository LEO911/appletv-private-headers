/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import <NSObject.h> // Unknown library
#import "AVFoundation-Structs.h"

@class NSData, NSURL, NSDictionary;
@protocol AVAudioPlayerDelegate;

@interface AVAudioPlayer : NSObject {
@private
	void *_impl;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x30e60a3d; S=0x30e6049d; @dynamic
@property(readonly, assign) NSData *data;	// G=0x30e5f465; @dynamic
@property(assign) id<AVAudioPlayerDelegate> delegate;	// G=0x30e5f479; S=0x30e5f975; @dynamic
@property(readonly, assign) double deviceCurrentTime;	// G=0x30e608e9; @dynamic
@property(readonly, assign) double duration;	// G=0x30e60f0d; 
@property(assign) BOOL enableRate;	// G=0x30e5f4b5; S=0x30e60d25; @dynamic
@property(assign, getter=isMeteringEnabled) BOOL meteringEnabled;	// G=0x30e5f52d; S=0x30e603a5; @dynamic
@property(readonly, assign) unsigned numberOfChannels;	// G=0x30e5f4f1; @dynamic
@property(assign) int numberOfLoops;	// G=0x30e5f519; S=0x30e5f505; @dynamic
@property(assign) float pan;	// G=0x30e5f4dd; S=0x30e60b35; @dynamic
@property(readonly, assign, getter=isPlaying) BOOL playing;	// G=0x30e5f435; @dynamic
@property(assign) float rate;	// G=0x30e5f4c9; S=0x30e60c09; @dynamic
@property(readonly, assign) NSDictionary *settings;	// G=0x30e5f48d; @dynamic
@property(readonly, assign) NSURL *url;	// G=0x30e5f451; @dynamic
@property(assign) float volume;	// G=0x30e5f4a1; S=0x30e60e3d; @dynamic
- (id)initWithContentsOfURL:(id)url error:(id *)error;	// 0x30e61519
- (id)initWithData:(id)data error:(id *)error;	// 0x30e61421
- (float)averagePowerForChannel:(unsigned)channel;	// 0x30e5f57d
- (id)baseInit;	// 0x30e5f905
- (void)beginInterruption;	// 0x30e5fa4d
// declared property getter: - (double)currentTime;	// 0x30e60a3d
// declared property getter: - (id)data;	// 0x30e5f465
- (void)dealloc;	// 0x30e615f5
- (void)decodeError;	// 0x30e5f9bd
// declared property getter: - (id)delegate;	// 0x30e5f479
// declared property getter: - (double)deviceCurrentTime;	// 0x30e608e9
// declared property getter: - (double)duration;	// 0x30e60f0d
// declared property getter: - (BOOL)enableRate;	// 0x30e5f4b5
- (void)endInterruption;	// 0x30e5fa99
- (void)endInterruptionWithFlags;	// 0x30e5fa71
- (void)finalize;	// 0x30e60351
- (void)finishedPlaying;	// 0x30e5ff91
- (AudioPlayerImpl *)impl;	// 0x30e5f425
// declared property getter: - (BOOL)isMeteringEnabled;	// 0x30e5f52d
// declared property getter: - (BOOL)isPlaying;	// 0x30e5f435
// declared property getter: - (unsigned)numberOfChannels;	// 0x30e5f4f1
// declared property getter: - (int)numberOfLoops;	// 0x30e5f519
// declared property getter: - (float)pan;	// 0x30e5f4dd
- (void)pause;	// 0x30e60f81
- (float)peakPowerForChannel:(unsigned)channel;	// 0x30e5f541
- (BOOL)play;	// 0x30e611dd
- (BOOL)playAtTime:(double)time;	// 0x30e6105d
- (BOOL)prepareToPlay;	// 0x30e61321
- (void)privCommonCleanup;	// 0x30e602e1
// declared property getter: - (float)rate;	// 0x30e5f4c9
// declared property setter: - (void)setCurrentTime:(double)time;	// 0x30e6049d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x30e5f975
// declared property setter: - (void)setEnableRate:(BOOL)rate;	// 0x30e60d25
// declared property setter: - (void)setMeteringEnabled:(BOOL)enabled;	// 0x30e603a5
// declared property setter: - (void)setNumberOfLoops:(int)loops;	// 0x30e5f505
// declared property setter: - (void)setPan:(float)pan;	// 0x30e60b35
// declared property setter: - (void)setRate:(float)rate;	// 0x30e60c09
// declared property setter: - (void)setVolume:(float)volume;	// 0x30e60e3d
// declared property getter: - (id)settings;	// 0x30e5f48d
- (void)stop;	// 0x30e600ad
- (void)updateMeters;	// 0x30e60195
// declared property getter: - (id)url;	// 0x30e5f451
// declared property getter: - (float)volume;	// 0x30e5f4a1
@end

