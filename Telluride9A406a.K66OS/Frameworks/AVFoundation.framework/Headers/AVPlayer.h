/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import <NSObject.h> // Unknown library
#import "AVFoundation-Structs.h"

@class NSError, AVPlayerInternal, NSArray;

@interface AVPlayer : NSObject {
@private
	AVPlayerInternal *_player;	// 4 = 0x4
}
@property(copy, nonatomic, setter=_setDisplaysUsedForPlayback:) NSArray *_displaysUsedForPlayback;	// G=0x30e78139; S=0x30e795d1; 
@property(readonly, assign, nonatomic) int _externalProtectionStatus;	// G=0x30e7af49; 
@property(assign) int actionAtItemEnd;	// G=0x30e73b05; S=0x30e73bf1; converted property
@property(assign) BOOL allowsAirPlayVideo;	// G=0x30e73ce1; S=0x30e761d9; converted property
@property(readonly, assign, nonatomic, getter=isAudioPlaybackEnabledAtAllRates) BOOL audioPlaybackEnabledAtAllRates;	// G=0x30e79a1d; 
@property(assign, getter=isClosedCaptionDisplayEnabled) BOOL closedCaptionDisplayEnabled;	// G=0x30e73c05; S=0x30e763a9; converted property
@property(readonly, assign, nonatomic) NSError *error;	// G=0x30e72e95; @dynamic
@property(assign, nonatomic) float maxRateForAudioPlayback;	// G=0x30e7b349; S=0x30e7b0a1; 
@property(assign, nonatomic) float minRateForAudioPlayback;	// G=0x30e7b289; S=0x30e7affd; 
@property(assign) float rate;	// G=0x30e737d9; S=0x30e76b79; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x30e72c39; @dynamic
@property(assign) BOOL usesAirPlayVideoWhileAirPlayScreenIsActive;	// G=0x30e73e99; S=0x30e75f51; converted property
@property(assign) BOOL waitsUntilItemsAreReadyForInspectionBeforeMakingEligibleForPlayback;	// G=0x30e72c7d; S=0x30e72c9d; converted property
+ (BOOL)automaticallyNotifiesObserversOfActionAtItemEnd;	// 0x30e72cc9
+ (BOOL)automaticallyNotifiesObserversOfAirPlayVideoActive;	// 0x30e72cd5
+ (BOOL)automaticallyNotifiesObserversOfAllowsAirPlayVideo;	// 0x30e72cd1
+ (BOOL)automaticallyNotifiesObserversOfClosedCaptionDisplayEnabled;	// 0x30e72ccd
+ (BOOL)automaticallyNotifiesObserversOfCurrentItem;	// 0x30e72c79
+ (BOOL)automaticallyNotifiesObserversOfRate;	// 0x30e72cbd
+ (BOOL)automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive;	// 0x30e72cd9
+ (BOOL)automaticallyNotifiesObserversOfVolume;	// 0x30e72cc1
+ (void)initialize;	// 0x30e75741
+ (id)keyPathsForValuesAffectingActionAtItemEnd;	// 0x30e75785
+ (id)keyPathsForValuesAffectingClosedCaptionDisplayEnabled;	// 0x30e7575d
+ (id)keyPathsForValuesAffectingRate;	// 0x30e757ad
+ (id)playerWithPlayerItem:(id)playerItem;	// 0x30e757d5
+ (id)playerWithURL:(id)url;	// 0x30e7581d
- (id)init;	// 0x30e77b85
- (id)initWithDispatchQueue:(dispatch_queue_s *)dispatchQueue;	// 0x30e77b1d
- (id)initWithPlayerItem:(id)playerItem;	// 0x30e72d41
- (id)initWithURL:(id)url;	// 0x30e72d7d
- (BOOL)_CALayerDestinationIsTVOut;	// 0x30e79b4d
- (int)_actionAtItemEnd;	// 0x30e767f9
- (void)_addFPListeners;	// 0x30e75c1d
- (void)_addLayer:(id)layer;	// 0x30e75689
- (void)_advanceCurrentItemAccordingToFigPlaybackItem:(OpaqueFigPlaybackItem *)figPlaybackItem;	// 0x30e77255
- (BOOL)_airPlayVideoActive;	// 0x30e76121
- (BOOL)_allowsAirPlayVideo;	// 0x30e762f1
- (BOOL)_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock;	// 0x30e7b425
- (BOOL)_attachItem:(id)item andPerformOperation:(int)operation withObject:(id)object;	// 0x30e76cfd
- (void)_attachLayerToFigPlayer;	// 0x30e75d99
- (id)_cachedValueForKey:(id)key;	// 0x30e72dc9
- (void)_changeStatusToFailedWithError:(id)error;	// 0x30e72ed9
- (void)_checkDefaultsWriteForPerformanceLogging;	// 0x30e75a89
- (id)_clientName;	// 0x30e7b5ed
- (id)_currentItem;	// 0x30e72c59
- (void)_currentItemStatusIsReadyToPlay;	// 0x30e730a9
- (int)_defaultActionAtItemEnd;	// 0x30e72cc5
- (void)_detachLayerFromFigPlayer;	// 0x30e75d4d
- (void)_didAccessKVOForKey:(id)key;	// 0x30e72e65
- (void)_didFinishSuspension:(id)suspension;	// 0x30e781dd
// declared property getter: - (id)_displaysUsedForPlayback;	// 0x30e78139
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x30e735f1
// declared property getter: - (int)_externalProtectionStatus;	// 0x30e7af49
- (OpaqueFigPlayer *)_figPlayer;	// 0x30e72bd9
- (id)_fpNotificationNames;	// 0x30e75699
- (BOOL)_hasAssociatedOnscreenAVPlayerLayer;	// 0x30e79dcd
- (BOOL)_iapdExtendedModeIsActive;	// 0x30e7b591
- (BOOL)_insertItem:(id)item afterItem:(id)item2;	// 0x30e733e9
- (BOOL)_insertPlaybackItemOfItem:(id)item inPlayerQueueAfterPlaybackItemOfItem:(id)item2;	// 0x30e731cd
- (BOOL)_isClosedCaptionDisplayEnabled;	// 0x30e764c1
- (int)_itemOkayToPlayWhileTransitioningToBackground:(id)background;	// 0x30e79e91
- (id)_items;	// 0x30e73651
- (void)_logPerformanceDataForCurrentItem;	// 0x30e75865
- (void)_logPerformanceDataForPreviousItem;	// 0x30e75969
- (id)_playbackDisplaysForFigPlayer;	// 0x30e78051
- (id)_playerLayers;	// 0x30e755e9
- (int)_playerType;	// 0x30e72bf9
- (void)_preparePlaybackItemOfItemForEnqueueing:(id)enqueueing withCompletionHandler:(id)completionHandler;	// 0x30e7338d
- (id)_propertyStorage;	// 0x30e72c19
- (float)_rate;	// 0x30e76c7d
- (void)_removeAllItems;	// 0x30e73729
- (BOOL)_removeAnItem:(id)item;	// 0x30e7345d
- (void)_removeFPListeners;	// 0x30e75acd
- (BOOL)_removeItem:(id)item;	// 0x30e7356d
- (void)_removeLayer:(id)layer;	// 0x30e7564d
- (BOOL)_resumePlayback:(double)playback error:(id *)error;	// 0x30e7b6b1
- (void)_setActionAtItemEnd:(int)itemEnd allowingAdvance:(BOOL)advance;	// 0x30e76599
- (void)_setCALayerDestinationIsTVOut:(BOOL)anOut;	// 0x30e798d1
- (void)_setCachedValue:(id)value forKey:(id)key;	// 0x30e72df9
- (void)_setClientName:(id)name;	// 0x30e7982d
- (void)_setCurrentItem:(id)item;	// 0x30e72fad
// declared property setter: - (void)_setDisplaysUsedForPlayback:(id)playback;	// 0x30e795d1
- (void)_setEQPreset:(int)preset;	// 0x30e7b145
- (void)_setFigPlaybackItemToMakeCurrent:(OpaqueFigPlaybackItem *)makeCurrent;	// 0x30e72cdd
- (void)_setLayer:(id)layer;	// 0x30e75549
- (void)_setPreferredLanguageList:(id)list;	// 0x30e79979
- (void)_setStoppingFadeOutDuration:(float)duration;	// 0x30e7b1e5
- (void)_setVolume:(float)volume;	// 0x30e76925
- (void)_setWantsVolumeChangesWhenPausedOrInactive:(BOOL)inactive;	// 0x30e79785
- (BOOL)_shouldDetachContentLayersFromFigPlayer;	// 0x30e7817d
- (BOOL)_shouldLogPerformanceData;	// 0x30e72cfd
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x30e72bb9
- (BOOL)_usesAirPlayVideoWhileAirPlayScreenIsActive;	// 0x30e76069
- (float)_volume;	// 0x30e76a01
- (id)_weakReference;	// 0x30e72b99
- (void)_willAccessKVOForKey:(id)key;	// 0x30e72e35
- (void)_willEnterForeground:(id)foreground;	// 0x30e78361
// converted property getter: - (int)actionAtItemEnd;	// 0x30e73b05
- (id)addBoundaryTimeObserverForTimes:(id)times queue:(dispatch_queue_s *)queue usingBlock:(id)block;	// 0x30e749bd
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x30e775e1
- (id)addPeriodicTimeObserverForInterval:(XXStruct_pwHToB)interval queue:(dispatch_queue_s *)queue usingBlock:(id)block;	// 0x30e73fed
// converted property getter: - (BOOL)allowsAirPlayVideo;	// 0x30e73ce1
- (id)currentItem;	// 0x30e72f75
- (XXStruct_pwHToB)currentTime;	// 0x30e76b2d
- (void)dealloc;	// 0x30e7790d
- (void)didChangeValueForKey:(id)key;	// 0x30e77781
- (dispatch_queue_s *)dispatchQueue;	// 0x30e72db9
// declared property getter: - (id)error;	// 0x30e72e95
- (void)finalize;	// 0x30e77845
- (BOOL)isAirPlayVideoActive;	// 0x30e73dbd
// declared property getter: - (BOOL)isAudioPlaybackEnabledAtAllRates;	// 0x30e79a1d
// converted property getter: - (BOOL)isClosedCaptionDisplayEnabled;	// 0x30e73c05
// declared property getter: - (float)maxRateForAudioPlayback;	// 0x30e7b349
// declared property getter: - (float)minRateForAudioPlayback;	// 0x30e7b289
- (void)pause;	// 0x30e73f89
- (void)play;	// 0x30e73f75
- (id)playerAVAudioSession;	// 0x30e7831d
- (void)prepareItem:(id)item withCompletionHandler:(id)completionHandler;	// 0x30e733c9
// converted property getter: - (float)rate;	// 0x30e737d9
- (void)removeAudioPlaybackRateLimits;	// 0x30e796b1
- (void)removeTimeObserver:(id)observer;	// 0x30e75e71
- (void)replaceCurrentItemWithPlayerItem:(id)playerItem;	// 0x30e73f9d
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x30e738b5
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x30e739b9
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x30e7390d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x30e73a55
// converted property setter: - (void)setActionAtItemEnd:(int)itemEnd;	// 0x30e73bf1
// converted property setter: - (void)setAllowsAirPlayVideo:(BOOL)video;	// 0x30e761d9
// converted property setter: - (void)setClosedCaptionDisplayEnabled:(BOOL)enabled;	// 0x30e763a9
// declared property setter: - (void)setMaxRateForAudioPlayback:(float)audioPlayback;	// 0x30e7b0a1
// declared property setter: - (void)setMinRateForAudioPlayback:(float)audioPlayback;	// 0x30e7affd
// converted property setter: - (void)setRate:(float)rate;	// 0x30e76b79
// converted property setter: - (void)setUsesAirPlayVideoWhileAirPlayScreenIsActive:(BOOL)active;	// 0x30e75f51
// converted property setter: - (void)setWaitsUntilItemsAreReadyForInspectionBeforeMakingEligibleForPlayback:(BOOL)playback;	// 0x30e72c9d
// declared property getter: - (int)status;	// 0x30e72c39
// converted property getter: - (BOOL)usesAirPlayVideoWhileAirPlayScreenIsActive;	// 0x30e73e99
// converted property getter: - (BOOL)waitsUntilItemsAreReadyForInspectionBeforeMakingEligibleForPlayback;	// 0x30e72c7d
- (void)willChangeValueForKey:(id)key;	// 0x30e777e1
@end

