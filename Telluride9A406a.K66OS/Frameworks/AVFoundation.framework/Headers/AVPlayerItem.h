/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import <NSObject.h> // Unknown library
#import "AVFoundation-Structs.h"
#import "NSCopying.h"

@class NSDate, AVPlayerItemInternal, NSError, NSString;

@interface AVPlayerItem : NSObject <NSCopying> {
@private
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x30e868a1; S=0x30e851a1; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x30e86961; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x30e86ae5; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x30e86c3d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x30e869cd; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x30e86b91; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x30e86a39; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x30e800d5; S=0x30e7ff15; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x30e8502d; 
@property(retain) id audioMix;	// G=0x30e7f8f9; S=0x30e7f681; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x30e84be1; 
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x30e84f01; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x30e8507d; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x30e7fafd; S=0x30e7f93d; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x30e7fde9; S=0x30e7fc29; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x30e84ebd; S=0x30e84f91; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x30e7bb91; S=0x30e8714d; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x30e82919; @dynamic
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x30e80a19; S=0x30e8083d; converted property
@property(retain) id gaplessInfo;	// G=0x30e7e711; S=0x30e7e405; converted property
@property(retain) id initialDate;	// G=0x30e80d95; S=0x30e80d39; converted property
@property(retain) id initialEstimatedDate;	// G=0x30e80c65; S=0x30e80c09; converted property
@property(assign) BOOL limitReadAhead;	// G=0x30e803c1; S=0x30e80201; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x30e7bb29; S=0x30e7d01d; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x30e806c9; S=0x30e804ed; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x30e7bae1; S=0x30e7e2f9; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x30e7b9f9; @dynamic
@property(retain) id videoComposition;	// G=0x30e7f63d; S=0x30e7f399; converted property
@property(assign) float volumeAdjustment;	// G=0x30e7bb05; S=0x30e7e1ed; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x30e7b7d9
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x30e7b7c5
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x30e86fd9
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x30e870ed
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x30e7bac9
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x30e7bb51
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x30e7bad5
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x30e7bad1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x30e7bacd
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x30e7babd
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x30e7badd
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x30e7bac5
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x30e7bb65
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x30e7bb49
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x30e7bb59
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x30e7bb5d
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x30e7bb55
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x30e7bb69
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x30e7bac1
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x30e7bb61
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x30e7bb01
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x30e7bb4d
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x30e7bb6d
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x30e7bad9
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x30e7bb25
+ (void)initialize;	// 0x30e7cb0d
+ (id)playerItemWithAsset:(id)asset;	// 0x30e7ca7d
+ (id)playerItemWithURL:(id)url;	// 0x30e7cac5
- (id)init;	// 0x30e84335
- (id)initWithAsset:(id)asset;	// 0x30e7bc69
- (id)initWithURL:(id)url;	// 0x30e7bbb1
- (int)_CreateSeekID;	// 0x30e7ba19
- (id)_URL;	// 0x30e7b9d9
- (void)_addFPListeners;	// 0x30e81f35
- (void)_addSyncLayer:(id)layer;	// 0x30e7cd05
- (BOOL)_alwaysMonitorsPlayability;	// 0x30e80161
- (void)_applyAudioMix;	// 0x30e7f7a1
- (void)_applyInitialAudioMix;	// 0x30e7f74d
- (void)_applyMediaSelectionOptions;	// 0x30e7ddf1
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x30e7dca1
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x30e82b61
- (long long)_availableFileSize;	// 0x30e85411
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30e7da99
- (id)_cachedValueForKey:(id)key;	// 0x30e7bd4d
- (BOOL)_canPlayFastForward;	// 0x30e819e5
- (BOOL)_canPlayFastReverse;	// 0x30e818d9
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x30e814c9
- (void)_changeStatusToFailedWithError:(id)error;	// 0x30e827d9
- (void)_configurePlaybackItemForPlayerType:(int)playerType;	// 0x30e832bd
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x30e7fb89
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x30e7fe75
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x30e7bf65
- (void)_createPlayerItemInternal;	// 0x30e843fd
- (void)_detachFromPlayer;	// 0x30e7c83d
- (void)_didAccessKVOForKey:(id)key;	// 0x30e7bdad
- (XXStruct_pwHToB)_duration;	// 0x30e826f1
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x30e7cf2d
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x30e7b82d
- (long long)_fileSize;	// 0x30e85379
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x30e80aa1
- (id)_fpNotificationNames;	// 0x30e82085
- (BOOL)_hasEnabledVideoMedia;	// 0x30e7cb6d
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x30e8295d
- (void)_insertAfterItem:(id)item;	// 0x30e7b8ed
- (void)_invokeReadyForEnqueueingHandlers;	// 0x30e81bf5
- (BOOL)_isCurrentPlayerItem;	// 0x30e7b86d
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x30e868a1
// declared property getter: - (BOOL)_isRental;	// 0x30e86961
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x30e869cd
- (void)_kickAssetObserversIfAppropriate;	// 0x30e82a05
- (BOOL)_limitReadAhead;	// 0x30e8044d
- (id)_loadedTimeRanges;	// 0x30e7e7c5
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x30e7c9b1
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x30e81a65
- (id)_nextItem;	// 0x30e7b8ad
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x30e7cca1
- (id)_playbackProperties;	// 0x30e7e66d
- (id)_player;	// 0x30e7bddd
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x30e7c851
- (id)_playerConnection;	// 0x30e7b88d
- (CGSize)_presentationSize;	// 0x30e817d9
- (id)_previousItem;	// 0x30e7b8cd
- (id)_propertyStorage;	// 0x30e7b84d
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x30e7fff9
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x30e7fa21
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x30e7fd0d
- (void)_quietlySetEQPreset:(int)preset;	// 0x30e86f69
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30e8095d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x30e802e5
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x30e7e4e5
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30e8060d
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x30e7e395
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x30e7e289
- (void)_removeFPListeners;	// 0x30e81de5
- (void)_removeFromItems;	// 0x30e7b969
- (void)_removeSyncLayer:(id)layer;	// 0x30e7cda1
// declared property getter: - (id)_rentalExpirationDate;	// 0x30e86ae5
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x30e86c3d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x30e86b91
// declared property getter: - (id)_rentalStartDate;	// 0x30e86a39
- (void)_respondToBecomingReadyForBasicInspection;	// 0x30e81cf9
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x30e80751
- (id)_seekableTimeRanges;	// 0x30e7eb55
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30e7d985
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30e7d805
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30e7d739
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x30e7db61
- (id)_selectedMediaOptionInAlternateTrackGroup:(id)alternateTrackGroup;	// 0x30e7d3b1
- (id)_selectedMediaOptionInKeyValueGroup:(id)keyValueGroup;	// 0x30e7d179
- (void)_setAsset:(id)asset;	// 0x30e7c89d
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x30e82aa5
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x30e7c8f9
- (void)_setAudibleDRMInfo:(id)info;	// 0x30e84dbd
- (void)_setEQPreset:(int)preset;	// 0x30e84e61
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x30e7dc2d
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x30e851a1
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x30e7be09
- (void)_setPlayerConnection:(id)connection;	// 0x30e7bf09
- (void)_setRampInOutInfo:(id)outInfo;	// 0x30e84d19
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x30e7cded
- (void)_setTimedMetadata:(id)metadata;	// 0x30e7ce75
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x30e7c955
- (void)_setURL:(id)url;	// 0x30e7c861
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x30e7f2fd
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x30e7f1bd
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x30e7f20d
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x30e7f28d
- (void)_setVideoCompositor:(id)compositor;	// 0x30e7f101
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x30e7b80d
- (id)_trackWithTrackID:(int)trackID;	// 0x30e82209
- (id)_tracks;	// 0x30e82371
- (id)_unregisterAndReturnRetainedSeekCompletionHandler;	// 0x30e7ba79
- (id)_weakReference;	// 0x30e7b7ed
- (void)_willAccessKVOForKey:(id)key;	// 0x30e7bd7d
- (id)accessLog;	// 0x30e86ce9
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x30e8379d
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x30e800d5
- (id)asset;	// 0x30e82795
// converted property getter: - (id)audioMix;	// 0x30e7f8f9
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x30e84f01
- (BOOL)canPlayFastForward;	// 0x30e81959
- (BOOL)canPlayFastReverse;	// 0x30e8184d
- (void)cancelPendingSeeks;	// 0x30e80ead
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x30e7fafd
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x30e7fde9
- (id)copyWithZone:(NSZone *)zone;	// 0x30e83b39
- (id)currentDate;	// 0x30e80e1d
- (id)currentEstimatedDate;	// 0x30e80ca9
- (XXStruct_pwHToB)currentTime;	// 0x30e81695
// declared property getter: - (id)dataYouTubeID;	// 0x30e84ebd
- (void)dealloc;	// 0x30e83fed
- (id)description;	// 0x30e83a61
- (void)didChangeValueForKey:(id)key;	// 0x30e83911
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x30e871c9
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x30e7bb91
- (XXStruct_pwHToB)duration;	// 0x30e82635
// declared property getter: - (id)error;	// 0x30e82919
- (id)errorLog;	// 0x30e86db9
- (void)finalize;	// 0x30e83ef9
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x30e80a19
// converted property getter: - (id)gaplessInfo;	// 0x30e7e711
// converted property getter: - (id)initialDate;	// 0x30e80d95
// converted property getter: - (id)initialEstimatedDate;	// 0x30e80c65
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x30e8502d
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x30e84be1
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x30e8507d
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x30e7bb29
- (BOOL)isPlaybackBufferEmpty;	// 0x30e7ef81
- (BOOL)isPlaybackBufferFull;	// 0x30e7f001
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x30e7f081
// converted property getter: - (BOOL)limitReadAhead;	// 0x30e803c1
- (id)loadedTimeRanges;	// 0x30e7e755
- (id)playabilityMetrics;	// 0x30e7ee75
- (CGSize)presentationSize;	// 0x30e8173d
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x30e7eef9
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x30e806c9
- (BOOL)seekToDate:(id)date;	// 0x30e80dd9
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x30e81495
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x30e8139d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x30e81415
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x30e80f35
- (id)seekableTimeRanges;	// 0x30e7eae5
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30e7d715
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x30e7df99
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30e7d0d5
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x30e7e0a5
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x30e7ff15
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x30e7f681
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x30e7f93d
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x30e7fc29
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x30e84f91
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x30e8714d
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30e8083d
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x30e7e405
// converted property setter: - (void)setInitialDate:(id)date;	// 0x30e80d39
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x30e80c09
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x30e80201
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x30e7d01d
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30e804ed
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x30e7e2f9
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x30e7f399
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x30e7e1ed
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x30e7bae1
// declared property getter: - (int)status;	// 0x30e7b9f9
- (void)stepByCount:(int)count;	// 0x30e80b8d
- (id)timedMetadata;	// 0x30e7cee9
- (id)tracks;	// 0x30e822e1
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x30e839d5
// converted property getter: - (id)videoComposition;	// 0x30e7f63d
// converted property getter: - (float)volumeAdjustment;	// 0x30e7bb05
- (void)willChangeValueForKey:(id)key;	// 0x30e83971
@end

