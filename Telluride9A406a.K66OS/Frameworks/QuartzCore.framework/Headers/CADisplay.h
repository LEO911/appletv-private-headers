/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

#import "QuartzCore-Structs.h"
#import <NSObject.h> // Unknown library

@class CADisplayMode, NSString, NSArray;

@interface CADisplay : NSObject {
@private
	void *_impl;	// 4 = 0x4
}
@property(assign) BOOL allowsVirtualModes;	// G=0x33f29081; S=0x33f29065; 
@property(readonly, assign, nonatomic) NSArray *availableModes;	// G=0x33e84805; 
@property(readonly, assign, nonatomic) CGRect bounds;	// G=0x33e8475d; 
@property(readonly, assign, getter=isCloned) BOOL cloned;	// G=0x33f28fb1; 
@property(readonly, assign, getter=isCloningSupported) BOOL cloningSupported;	// G=0x33f28f81; 
@property(copy, nonatomic) NSString *colorMode;	// G=0x33f29129; S=0x33f290b1; 
@property(retain, nonatomic) CADisplayMode *currentMode;	// G=0x33e84211; S=0x33f291bd; 
@property(readonly, assign, nonatomic) NSString *deviceName;	// G=0x33f28e11; 
@property(readonly, assign) unsigned displayId;	// G=0x33f28e25; 
@property(readonly, assign, getter=isExternal) BOOL external;	// G=0x33f29035; 
@property(readonly, assign, nonatomic) NSString *name;	// G=0x33e8376d; 
@property(copy, nonatomic) NSString *overscanAdjustment;	// G=0x33e84489; S=0x33e84511; 
@property(readonly, assign) float overscanAmount;	// G=0x33f28fe1; 
@property(readonly, assign, getter=isOverscanned) BOOL overscanned;	// G=0x33e844e1; 
@property(readonly, assign, nonatomic) CADisplayMode *preferredMode;	// G=0x33f2918d; 
@property(readonly, assign) double refreshRate;	// G=0x33f29009; 
@property(readonly, assign, getter=isSupported) BOOL supported;	// G=0x33e84431; 
@property(readonly, assign) int tag;	// G=0x33e84461; 
@property(readonly, assign) NSString *uniqueId;	// G=0x33f29241; 
+ (id)TVOutDisplay;	// 0x33f28f01
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x33e84801
+ (id)displays;	// 0x33e805e1
+ (id)mainDisplay;	// 0x33eaad5d
- (id)_initWithDisplay:(Display *)display;	// 0x33e83719
- (void)_invalidate;	// 0x33eaed9d
// declared property getter: - (BOOL)allowsVirtualModes;	// 0x33f29081
// declared property getter: - (id)availableModes;	// 0x33e84805
// declared property getter: - (CGRect)bounds;	// 0x33e8475d
// declared property getter: - (id)colorMode;	// 0x33f29129
// declared property getter: - (id)currentMode;	// 0x33e84211
- (id)description;	// 0x33f28f19
// declared property getter: - (id)deviceName;	// 0x33f28e11
// declared property getter: - (unsigned)displayId;	// 0x33f28e25
// declared property getter: - (BOOL)isCloned;	// 0x33f28fb1
// declared property getter: - (BOOL)isCloningSupported;	// 0x33f28f81
// declared property getter: - (BOOL)isExternal;	// 0x33f29035
// declared property getter: - (BOOL)isOverscanned;	// 0x33e844e1
// declared property getter: - (BOOL)isSupported;	// 0x33e84431
// declared property getter: - (id)name;	// 0x33e8376d
// declared property getter: - (id)overscanAdjustment;	// 0x33e84489
// declared property getter: - (float)overscanAmount;	// 0x33f28fe1
// declared property getter: - (id)preferredMode;	// 0x33f2918d
// declared property getter: - (double)refreshRate;	// 0x33f29009
// declared property setter: - (void)setAllowsVirtualModes:(BOOL)modes;	// 0x33f29065
// declared property setter: - (void)setColorMode:(id)mode;	// 0x33f290b1
// declared property setter: - (void)setCurrentMode:(id)mode;	// 0x33f291bd
// declared property setter: - (void)setOverscanAdjustment:(id)adjustment;	// 0x33e84511
// declared property getter: - (int)tag;	// 0x33e84461
// declared property getter: - (id)uniqueId;	// 0x33f29241
- (void)update;	// 0x33e837e9
@end

