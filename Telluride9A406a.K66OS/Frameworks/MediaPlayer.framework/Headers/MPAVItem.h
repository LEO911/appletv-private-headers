/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class AVAsset, AVPlayerItem, MPMediaItem, MPAVController, NSURL, MPAlternateTracks, NSString, MPQueueFeeder, NSArray, NSData;

@interface MPAVItem : NSObject {
	AVAsset *_asset;	// 4 = 0x4
	dispatch_queue_s *_assetQueue;	// 8 = 0x8
	AVPlayerItem *_avPlayerItem;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	NSArray *_chapterTimeMarkers;	// 28 = 0x1c
	NSArray *_artworkTimeMarkers;	// 32 = 0x20
	NSArray *_urlTimeMarkers;	// 36 = 0x24
	NSArray *_closedCaptionTimeMarkers;	// 40 = 0x28
	MPAlternateTracks *_alternateTracks;	// 44 = 0x2c
	double _cachedDuration;	// 48 = 0x30
	double _cachedPlayableDuration;	// 56 = 0x38
	unsigned _type;	// 64 = 0x40
	float _defaultPlaybackRate;	// 68 = 0x44
	unsigned _indexInQueueFeeder;	// 72 = 0x48
	unsigned _advancedDuringPlayback : 1;	// 76 = 0x4c
	unsigned _handledFinishTime : 1;	// 76 = 0x4c
	unsigned _hasPlayedThisSession : 1;	// 76 = 0x4c
	unsigned _wasCountedAsSkipped : 1;	// 76 = 0x4c
	unsigned _isStreamable : 2;	// 76 = 0x4c
	unsigned _useCachedPlayableDuration : 1;	// 76 = 0x4c
	unsigned _watchingAttributes : 1;	// 76 = 0x4c
	unsigned _lyricsAvailable : 1;	// 77 = 0x4d
	unsigned _delayedInvalidateCachedPlayedDurationScheduled : 1;	// 77 = 0x4d
	unsigned _timeMarkersNeedLoading : 1;	// 77 = 0x4d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x319c7481; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x319c7489; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x319c7491; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x319c748d; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x319c9d35; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x319c7485; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x319c7495; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x319c7499; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x319c8ad9; S=0x319c9e09; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x319c66ad; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x319c8ab1; S=0x319c9de5; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x319c8ba5; S=0x319c8b29; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x319c749d; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x319c74c1; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x319c74e9; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x319c9d65; S=0x319c9d75; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x319c74a5; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x319c74a1; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x319c7545; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x319c74fd; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x319c936d; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x319c93ad; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x319c9441; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x319c93c1; 
@property(readonly, assign, nonatomic) BOOL externalProtectionEnabled;	// G=0x319c932d; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x319c9d45; S=0x319c9d55; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x319c7741; S=0x319c7781; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x319c74bd; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x319c75dd; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x319c75e1; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x319c75e5; S=0x319c7825; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x319c9dc5; S=0x319c9dd5; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x319c9d85; S=0x319c9d95; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x319c7555; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x319c7669; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x31a6f3d1; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x319c91cd; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x319c9585; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x319c9705; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x319c6ae5; S=0x319c6af9; 
@property(assign, nonatomic) MPAVController *player;	// G=0x319c9da5; S=0x319c9db5; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x319c6889; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x319c766d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x319c7705; 
@property(readonly, assign, nonatomic) BOOL requiresExternalProtection;	// G=0x319c9305; 
@property(readonly, assign, nonatomic) int status;	// G=0x319c6a51; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x319c75f9; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x319c9805; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x319c974d; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x319c91b9; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x319c8b01; S=0x319c9e2d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x319c7b55; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x319c91c9; 
@property(assign) BOOL userSkippedPlayback;	// G=0x319c6b89; S=0x319c6b61; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x319c92b1; S=0x319c92d9; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x319c91d9; 
+ (id)URLFromPath:(id)path;	// 0x319c6195
+ (unsigned)defaultScaleMode;	// 0x319c6165
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x319c6175
- (id)init;	// 0x319c6245
- (id)initWithAsset:(id)asset;	// 0x319c62d1
- (id)initWithURL:(id)url;	// 0x319c6259
- (id)initWithURL:(id)url options:(id)options;	// 0x319c6295
- (void)_checkAllowsBlockingDurationCall;	// 0x319c7895
- (void)_delayedInvalidateCachedPlayedDuration;	// 0x319c9905
- (double)_durationFromExternalMetadataIfAvailable;	// 0x319c93e5
- (double)_durationInSeconds;	// 0x319c6b9d
- (void)_itemAttributeAvailableKey:(id)key;	// 0x319c9935
- (void)_loadAssetAndPlayerItem;	// 0x319c65ad
- (void)_loadTimeMarkersAsync;	// 0x319c8991
- (void)_loadTimeMarkersBlocking;	// 0x319c7b59
- (void)_realoadEmbeddedTimeMarkers;	// 0x319c7861
- (void)_releaseAllTimeMarkers;	// 0x319c63fd
// declared property getter: - (id)album;	// 0x319c7481
// declared property getter: - (id)albumArtist;	// 0x319c7489
// declared property getter: - (unsigned)albumTrackCount;	// 0x319c7491
// declared property getter: - (unsigned)albumTrackNumber;	// 0x319c748d
- (BOOL)allowAutoChangingScaleModeToFill;	// 0x319c6161
// declared property getter: - (id)alternateTracks;	// 0x319c9d35
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x319c75b9
// declared property getter: - (id)artist;	// 0x319c7485
// declared property getter: - (id)artworkImageData;	// 0x319c7495
// declared property getter: - (id)artworkMIMEType;	// 0x319c7499
- (id)artworkTimeMarkerForTime:(double)time;	// 0x319c8cbd
// declared property getter: - (id)artworkTimeMarkers;	// 0x319c8ad9
// declared property getter: - (id)asset;	// 0x319c66ad
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x319c9b71
- (id)chapterTimeMarkerForTime:(double)time;	// 0x319c8bb5
// declared property getter: - (id)chapterTimeMarkers;	// 0x319c8ab1
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x319c8ecd
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x319c8ba5
// declared property getter: - (id)composer;	// 0x319c749d
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x319c74c1
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x319c74e9
- (void)dealloc;	// 0x319c6481
// declared property getter: - (float)defaultPlaybackRate;	// 0x319c9d65
// declared property getter: - (unsigned)discCount;	// 0x319c74a5
// declared property getter: - (unsigned)discNumber;	// 0x319c74a1
// declared property getter: - (id)displayableText;	// 0x319c7545
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x319c74fd
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x319c936d
// declared property getter: - (double)durationFromExternalMetadata;	// 0x319c93ad
// declared property getter: - (double)durationIfAvailable;	// 0x319c9441
- (double)durationInSeconds;	// 0x319c6be5
// declared property getter: - (BOOL)durationIsValid;	// 0x319c93c1
// declared property getter: - (BOOL)externalProtectionEnabled;	// 0x319c932d
// declared property getter: - (id)feeder;	// 0x319c9d45
- (void)flushNowPlayingCaches;	// 0x319c657d
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x319c7741
// declared property getter: - (id)genre;	// 0x319c74bd
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x319c7595
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x319c75dd
// declared property getter: - (BOOL)hasDisplayableText;	// 0x319c75e1
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x319c75e5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x319c7a75
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x319c9dc5
// declared property getter: - (BOOL)isAssetLoaded;	// 0x319c9d85
- (BOOL)isAssetURLValid;	// 0x319c74b9
- (BOOL)isPlaceholderForItem:(id)item;	// 0x319c74b5
// declared property getter: - (BOOL)isStreamable;	// 0x319c75f9
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x319c6189
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x319c74a9
- (void)loadAssetAndPlayerItem;	// 0x319c65a9
- (id)localeForAssetTrack:(id)assetTrack;	// 0x319c79c9
- (id)localizedPositionInPlaylistString;	// 0x319c91dd
// declared property getter: - (id)lyrics;	// 0x319c7555
// declared property getter: - (id)mainTitle;	// 0x319c7669
// declared property getter: - (id)mediaItem;	// 0x31a6f3d1
- (CGSize)naturalSize;	// 0x319c9b35
- (void)notePlaybackFinishedByHittingEnd;	// 0x319c6acd
- (id)path;	// 0x319c6c55
// declared property getter: - (unsigned long long)persistentID;	// 0x319c91cd
// declared property getter: - (double)playableDuration;	// 0x319c9585
// declared property getter: - (double)playableDurationIfAvailable;	// 0x319c9705
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x319c6ae5
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x319c7671
// declared property getter: - (id)player;	// 0x319c9da5
// declared property getter: - (id)playerItem;	// 0x319c6889
// declared property getter: - (id)podcastURL;	// 0x319c766d
- (void)postDurationDidChange;	// 0x319c743d
// declared property getter: - (CGSize)presentationSize;	// 0x319c7705
- (void)reevaluateType;	// 0x319c8fd5
// declared property getter: - (BOOL)requiresExternalProtection;	// 0x319c9305
- (void)resetBookkeeping;	// 0x319c6a71
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x319c77c9
- (void)setAlternateAudioTrackID:(unsigned)anId;	// 0x319c6ac5
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x319c9e09
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x319c9de5
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x319c8b29
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x319c9d75
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x319c9d55
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x319c7781
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x319c7825
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x319c9dd5
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x319c9d95
- (void)setOverrideDuration:(double)duration;	// 0x319c784d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x319c6af9
- (void)setPlaybackFinishedTime:(double)time;	// 0x319c6afd
- (void)setPlaybackStoppedTime:(double)time;	// 0x319c6ac9
// declared property setter: - (void)setPlayer:(id)player;	// 0x319c9db5
- (void)setRating:(float)rating;	// 0x319c6b15
- (void)setSubtitleTrackID:(unsigned)anId;	// 0x319c6b19
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x319c9e2d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x319c6b1d
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x319c6b35
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x319c6b61
// declared property setter: - (void)setVideoID:(id)anId;	// 0x319c92d9
- (void)setupPlaybackInfo;	// 0x319c6d4d
// declared property getter: - (int)status;	// 0x319c6a51
// declared property getter: - (double)timeOfSeekableEnd;	// 0x319c9805
// declared property getter: - (double)timeOfSeekableStart;	// 0x319c974d
- (id)titlesForTime:(double)time;	// 0x319c7b51
// declared property getter: - (unsigned)type;	// 0x319c91b9
- (void)updateAttributesForDefaultsChange:(id)defaultsChange;	// 0x319c7439
- (id)url;	// 0x319c6cdd
- (id)urlTimeMarkerForTime:(double)time;	// 0x319c8dc5
// declared property getter: - (id)urlTimeMarkers;	// 0x319c8b01
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x319c7b55
// declared property getter: - (float)userRating;	// 0x319c91c9
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x319c6b89
// declared property getter: - (id)videoID;	// 0x319c92b1
// declared property getter: - (BOOL)wantsSubtitles;	// 0x319c91d9
@end

