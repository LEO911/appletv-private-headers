/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library

@class NSString, NSDate;

@interface MPMediaLibrary : NSObject <NSCoding> {
@private
	MPMediaLibraryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaLibraryInternal _internal;	// G=0x31a14419; S=0x31a14435; @synthesize
@property(readonly, assign, nonatomic) NSString *_syncValidity;	// G=0x31a14721; 
@property(assign, getter=isFilteringDisabled) BOOL filteringDisabled;	// G=0x31a131cd; S=0x31a131e5; converted property
@property(readonly, assign, nonatomic) NSDate *lastModifiedDate;	// G=0x31a1160d; 
@property(assign, nonatomic) int removalReason;	// G=0x31a117e1; S=0x31a117f5; 
+ (id)_libraryDataProviders;	// 0x31a140a1
+ (id)_libraryForDataProvider:(id)dataProvider;	// 0x31a13fe9
+ (id)_mediaLibraries;	// 0x31a13e81
+ (void)addLibraryDataProvider:(id)provider;	// 0x31a14121
+ (void)beginDiscoveringMediaLibraries;	// 0x31a11039
+ (id)defaultMediaLibrary;	// 0x31a1057d
+ (id)deviceMediaLibrary;	// 0x31a106b1
+ (void)endDiscoveringMediaLibraries;	// 0x31a11055
+ (BOOL)isLibraryServerDisabled;	// 0x31a12f51
+ (id)libraryDataProviders;	// 0x31a140e9
+ (id)mediaLibraries;	// 0x31a13ee5
+ (id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x31a13f1d
+ (void)reloadDisplayValuesForLibraryDataProvider:(id)libraryDataProvider;	// 0x31a1434d
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x31a14321
+ (void)reloadLibraryDataProvider:(id)provider;	// 0x31a142f5
+ (void)removeLibraryDataProvider:(id)provider removalReason:(int)reason;	// 0x31a14211
+ (void)setDefaultMediaLibrary:(id)library;	// 0x31a105a5
+ (void)setLibraryServerDisabled:(BOOL)disabled;	// 0x31a12f55
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x31a12f59
+ (void)syncGenerationDidChangeForLibraryDataProvider:(id)syncGeneration;	// 0x31a143c5
- (id)init;	// 0x31a106f9
- (id)initWithCoder:(id)coder;	// 0x31a10b81
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined mediaType:(int)type queryIsEmptyBlock:(id)block;	// 0x31a120a1
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined queryIsEmptyBlock:(id)block;	// 0x31a12075
- (void)_clearCachedContentData;	// 0x31a10e29
- (void)_clearCachedEntities;	// 0x31a10d81
- (void)_clearPendingDisconnection;	// 0x31a136fd
- (id)_collectionsForQueryCriteria:(id)queryCriteria;	// 0x31a13711
- (void)_connectionProgressDisplayLinkCallback:(id)callback;	// 0x31a13b85
- (void)_didReceiveMemoryWarning:(id)warning;	// 0x31a10fcd
- (void)_displayValuesDidChangeNotification:(id)_displayValues;	// 0x31a10fdd
- (id)_initWithLibraryDataProvider:(id)libraryDataProvider;	// 0x31a13d71
// declared property getter: - (MPMediaLibraryInternal)_internal;	// 0x31a14419
- (id)_itemsForQueryCriteria:(id)queryCriteria;	// 0x31a13459
- (unsigned long long)_persistentIDForAssetURL:(id)assetURL;	// 0x31a12ff1
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;	// 0x31a10eed
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x31a10f5d
- (void)_removeConnectionAssertion:(id)assertion;	// 0x31a13c39
- (void)_stopConnectionProgressDisplayLink;	// 0x31a13cb9
// declared property getter: - (id)_syncValidity;	// 0x31a14721
- (id)addPlaylistWithName:(id)name;	// 0x31a1282d
- (id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;	// 0x31a12841
- (void)beginGeneratingLibraryChangeNotifications;	// 0x31a11071
- (void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;	// 0x31a12d8d
- (void)connectWithCompletionHandler:(id)completionHandler;	// 0x31a11089
- (id)connectionAssertionWithIdentifier:(id)identifier;	// 0x31a12e11
- (float)connectionProgress;	// 0x31a12f1d
- (void)dealloc;	// 0x31a1088d
- (id)description;	// 0x31a1099d
- (void)disconnect;	// 0x31a11571
- (void)downloadItem:(id)item completionHandler:(id)handler;	// 0x31a12af9
- (void)encodeWithCoder:(id)coder;	// 0x31a10aa5
- (void)endGeneratingLibraryChangeNotifications;	// 0x31a115f1
- (void)enumerateEntityChangesAfterSyncAnchor:(id)anchor usingBlock:(id)block;	// 0x31a14741
- (id)errorResolverForMediaItem:(id)mediaItem;	// 0x31a3753d
- (BOOL)hasAlbums;	// 0x31a11d55
- (BOOL)hasArtists;	// 0x31a11d3d
- (BOOL)hasAudibleAudioBooks;	// 0x31a12225
- (BOOL)hasAudiobooks;	// 0x31a11fa9
- (BOOL)hasCompilations;	// 0x31a12329
- (BOOL)hasComposers;	// 0x31a11f1d
- (BOOL)hasGeniusMixes;	// 0x31a11c35
- (BOOL)hasGenres;	// 0x31a11f05
- (BOOL)hasITunesUContent;	// 0x31a123a9
- (BOOL)hasMedia;	// 0x31a11b49
- (BOOL)hasMediaOfType:(int)type;	// 0x31a11ad5
- (BOOL)hasMovieRentals;	// 0x31a1242d
- (BOOL)hasMovies;	// 0x31a122a5
- (BOOL)hasMusicVideos;	// 0x31a121a1
- (BOOL)hasPlaylists;	// 0x31a11cb1
- (BOOL)hasPodcasts;	// 0x31a11e39
- (BOOL)hasSongs;	// 0x31a11d6d
- (BOOL)hasTVShows;	// 0x31a124ad
- (BOOL)hasVideoPodcasts;	// 0x31a12531
- (BOOL)hasVideos;	// 0x31a1211d
- (unsigned)hash;	// 0x31a10a7d
- (BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;	// 0x31a12a59
- (BOOL)isEqual:(id)equal;	// 0x31a10a11
// converted property getter: - (BOOL)isFilteringDisabled;	// 0x31a131cd
- (BOOL)isGeniusEnabled;	// 0x31a12c6d
- (BOOL)isValidAssetURL:(id)url;	// 0x31a12f5d
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;	// 0x31a13209
- (id)itemWithPersistentID:(unsigned long long)persistentID;	// 0x31a125b5
- (id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;	// 0x31a125d9
// declared property getter: - (id)lastModifiedDate;	// 0x31a1160d
- (id)libraryDataProvider;	// 0x31a13e71
- (BOOL)libraryHasBeenModifiedWithToken:(id)token;	// 0x31a1199d
- (id)modificationToken;	// 0x31a11829
- (id)name;	// 0x31a117c1
- (id)newPlaylistWithPersistentID:(unsigned long long)persistentID;	// 0x31a1265d
- (id)pathForAssetURL:(id)assetURL;	// 0x31a12f7d
- (BOOL)performTransactionWithBlock:(id)block;	// 0x31a12ec5
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;	// 0x31a13331
- (long long)playlistGeneration;	// 0x31a116b5
- (id)playlistWithPersistentID:(unsigned long long)persistentID;	// 0x31a12805
- (id)preferredAudioLanguages;	// 0x31a12cb5
- (id)preferredSubtitleLanguages;	// 0x31a12cfd
// declared property getter: - (int)removalReason;	// 0x31a117e1
- (BOOL)removeItems:(id)items;	// 0x31a12919
- (BOOL)removePlaylist:(id)playlist;	// 0x31a129ed
- (BOOL)requiresAuthentication;	// 0x31a12d45
// converted property setter: - (void)setFilteringDisabled:(BOOL)disabled;	// 0x31a131e5
// declared property setter: - (void)setRemovalReason:(int)reason;	// 0x31a117f5
// declared property setter: - (void)set_internal:(MPMediaLibraryInternal)internal;	// 0x31a14435
- (int)status;	// 0x31a11749
- (unsigned long long)syncGenerationID;	// 0x31a11669
- (id)syncValidity;	// 0x31a12f31
- (double)timestampForAppliedUbiquitousBookmarkKey:(id)appliedUbiquitousBookmarkKey;	// 0x31a12be5
- (id)uniqueIdentifier;	// 0x31a11809
- (void)updateUbiquitousBookmarksWithKey:(id)key bookmarkMediaValue:(id)value timestamp:(double)timestamp;	// 0x31a12b7d
- (BOOL)writable;	// 0x31a11701
@end

