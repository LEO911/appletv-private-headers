/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import "CalDAVPrincipal.h"
#import <NSObject.h> // Unknown library

@class NSString, MobileCalDAVAccount, NSSet, NSURL, NSMutableDictionary, NSDictionary, NSNumber, CalDAVRefreshContext, NSDateComponents;
@protocol CalDAVAccount, CoreDAVTaskManager;

@interface MobileCalDAVPrincipal : NSObject <CoreDAVAccountInfoProvider, CalDAVPrincipal> {
	NSString *_uid;	// 4 = 0x4
	MobileCalDAVAccount *_account;	// 8 = 0x8
	NSSet *_calendarUserAddresses;	// 12 = 0xc
	NSMutableDictionary *_calendarUserAddressesPerCalendar;	// 16 = 0x10
	NSURL *_preferredCalendarUserAddress;	// 20 = 0x14
	NSString *_fullName;	// 24 = 0x18
	NSURL *_calendarHomeURL;	// 28 = 0x1c
	NSURL *_principalURL;	// 32 = 0x20
	NSURL *_defaultCalendarURL;	// 36 = 0x24
	NSURL *_notificationCollectionURL;	// 40 = 0x28
	NSString *_notificationCollectionCTag;	// 44 = 0x2c
	NSURL *_inboxURL;	// 48 = 0x30
	NSString *_inboxCTag;	// 52 = 0x34
	NSURL *_outboxURL;	// 56 = 0x38
	NSURL *_dropBoxURL;	// 60 = 0x3c
	NSString *_notificationURLString;	// 64 = 0x40
	NSDictionary *_pushTransports;	// 68 = 0x44
	NSString *_calendarHomePushKey;	// 72 = 0x48
	NSString *_XMPPServer;	// 76 = 0x4c
	NSNumber *_quotaFreeBytes;	// 80 = 0x50
	BOOL _isDelegate;	// 84 = 0x54
	BOOL _isWritable;	// 85 = 0x55
	BOOL _isEnabled;	// 86 = 0x56
	BOOL _isExpandPropertyReportSupported;	// 87 = 0x57
	BOOL _supportsFreebusy;	// 88 = 0x58
	BOOL _shouldUpdatePushDelegate;	// 89 = 0x59
	BOOL _isDirty;	// 90 = 0x5a
	BOOL _calendarsAreDirty;	// 91 = 0x5b
	int _calendarChangeIndex;	// 92 = 0x5c
}
@property(readonly, assign) NSString *APSEnv;	// G=0x32ed05b9; 
@property(readonly, assign) NSURL *APSSubscriptionURL;	// G=0x32ed0539; 
@property(readonly, assign) NSString *APSTopic;	// G=0x32ed04f5; 
@property(retain) NSString *XMPPServer;	// G=0x32ecf4e9; S=0x32ecf4f9; 
@property(readonly, assign) id<CalDAVAccount> account;	// G=0x32ece95d; 
@property(retain) NSString *calendarHomePushKey;	// G=0x32ecf465; S=0x32ecf475; 
@property(retain) NSURL *calendarHomeURL;	// G=0x32eced91; S=0x32ecedb1; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x32ecec65; S=0x32ecec75; 
@property(readonly, assign) NSSet *calendars;	// G=0x32ecfc11; 
@property(assign) BOOL calendarsAreDirty;	// G=0x32ed0429; S=0x32ed036d; @synthesize=_calendarsAreDirty
@property(retain) NSURL *defaultCalendarURL;	// G=0x32eceee1; S=0x32ecef01; 
@property(readonly, assign) NSSet *deletedCalendarURLs;	// G=0x32ecfc31; 
@property(retain) NSURL *dropBoxURL;	// G=0x32ecf289; S=0x32ecf2a9; 
@property(readonly, assign) NSDateComponents *eventFilterEndDate;	// G=0x32ecfa4d; 
@property(readonly, assign) NSDateComponents *eventFilterStartDate;	// G=0x32ecf9f1; 
@property(retain) NSString *fullName;	// G=0x32eced0d; S=0x32eced1d; 
@property(retain) NSString *inboxCTag;	// G=0x32ecf15d; S=0x32ecf16d; 
@property(retain) NSURL *inboxURL;	// G=0x32ecf0b5; S=0x32ecf0d5; 
@property(assign) BOOL isDelegate;	// G=0x32ecf5dd; S=0x32ecf5ed; 
@property(assign) BOOL isDirty;	// G=0x32ed1189; S=0x32ed1199; @synthesize=_isDirty
@property(assign) BOOL isEnabled;	// G=0x32ecf66d; S=0x32ecf67d; 
@property(readonly, assign) BOOL isEnabledForEvents;	// G=0x32ecf6d9; 
@property(readonly, assign) BOOL isEnabledForTodos;	// G=0x32ecf735; 
@property(assign) BOOL isExpandPropertyReportSupported;	// G=0x32ecfb61; S=0x32ecfb71; 
@property(readonly, assign) BOOL isMergeSync;	// G=0x32ecf6b5; 
@property(assign) BOOL isWritable;	// G=0x32ecf625; S=0x32ecf635; 
@property(retain) NSString *notificationCollectionCTag;	// G=0x32ecf031; S=0x32ecf041; 
@property(retain) NSURL *notificationCollectionURL;	// G=0x32ecef89; S=0x32ecefa9; 
@property(retain) NSString *notificationURLString;	// G=0x32ecf331; S=0x32ecf341; 
@property(retain) NSURL *outboxURL;	// G=0x32ecf1e1; S=0x32ecf201; 
@property(readonly, assign) NSURL *preferredCalendarUserAddress;	// G=0x32ed0929; 
@property(retain) NSURL *principalURL;	// G=0x32ecee39; S=0x32ecee59; 
@property(readonly, assign) NSSet *pushKeys;	// G=0x32ed06ad; 
@property(retain) NSDictionary *pushTransports;	// G=0x32ecf3c5; S=0x32ecf3d5; 
@property(retain) NSNumber *quotaFreeBytes;	// G=0x32ecf56d; S=0x32ecf57d; 
@property(readonly, assign) CalDAVRefreshContext *refreshContext;	// G=0x32ecfbf1; 
@property(assign) BOOL shouldUpdatePushDelegate;	// G=0x32ed1169; S=0x32ed1179; @synthesize=_shouldUpdatePushDelegate
@property(readonly, assign) BOOL supportsExtendedCalendarQuery;	// G=0x32ecf791; 
@property(assign) BOOL supportsFreebusy;	// G=0x32ecfba9; S=0x32ecfbb9; 
@property(readonly, assign) id<CoreDAVTaskManager> taskManager;	// G=0x32ed0b99; 
@property(readonly, assign) NSDateComponents *todoFilterEndDate;	// G=0x32ecfb1d; 
@property(readonly, assign) NSDateComponents *todoFilterStartDate;	// G=0x32ecfac1; 
@property(readonly, assign) NSString *uid;	// G=0x32ed1159; @synthesize=_uid
+ (id)_preferredCalendarUserAddressFromAddresses:(id)addresses;	// 0x32ed07ad
+ (BOOL)compareAddressURL:(id)url localString:(id)string;	// 0x32ecd195
- (id)init;	// 0x32ecd36d
- (id)initWithConfiguration:(id)configuration account:(id)account;	// 0x32ecd545
// declared property getter: - (id)APSEnv;	// 0x32ed05b9
// declared property getter: - (id)APSSubscriptionURL;	// 0x32ed0539
// declared property getter: - (id)APSTopic;	// 0x32ed04f5
// declared property getter: - (id)XMPPServer;	// 0x32ecf4e9
- (id)_addUsernameIfNeeded:(id)needed;	// 0x32ece8fd
- (id)_sharedSyncEndDate;	// 0x32ecf7c5
- (id)_startDateFromDaysToSync:(int)sync;	// 0x32ecf8c5
- (BOOL)_userAddressSet:(id)set isEqualToSet:(id)set2;	// 0x32ece97d
// declared property getter: - (id)account;	// 0x32ece95d
- (id)accountID;	// 0x32ed0d49
- (id)additionalHeaderValues;	// 0x32ed0e65
// declared property getter: - (id)calendarHomePushKey;	// 0x32ecf465
// declared property getter: - (id)calendarHomeURL;	// 0x32eced91
- (id)calendarOfType:(int)type atURL:(id)url withOptions:(id)options;	// 0x32ed0099
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)url;	// 0x32ed0ab5
// declared property getter: - (id)calendarUserAddresses;	// 0x32ecec65
- (id)calendarUserAddressesForCalendar:(id)calendar;	// 0x32ed028d
// declared property getter: - (id)calendars;	// 0x32ecfc11
// declared property getter: - (BOOL)calendarsAreDirty;	// 0x32ed0429
- (BOOL)clearCalendarChanges;	// 0x32ed0045
- (id)configuration;	// 0x32ecdfb9
- (void)dealloc;	// 0x32ecd381
// declared property getter: - (id)defaultCalendarURL;	// 0x32eceee1
- (id)defaultEventCalendarTitle;	// 0x32ed0245
- (id)defaultTodoCalendarTitle;	// 0x32ed0251
// declared property getter: - (id)deletedCalendarURLs;	// 0x32ecfc31
// declared property getter: - (id)dropBoxURL;	// 0x32ecf289
// declared property getter: - (id)eventFilterEndDate;	// 0x32ecfa4d
// declared property getter: - (id)eventFilterStartDate;	// 0x32ecf9f1
// declared property getter: - (id)fullName;	// 0x32eced0d
- (BOOL)handleCertificateError:(id)error;	// 0x32ed0fa5
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x32ed0f7d
- (BOOL)hasCalendarUserAddress:(id)address;	// 0x32ed09a5
- (id)host;	// 0x32ed0bd9
- (id)identityPersist;	// 0x32ed0d29
// declared property getter: - (id)inboxCTag;	// 0x32ecf15d
// declared property getter: - (id)inboxURL;	// 0x32ecf0b5
// declared property getter: - (BOOL)isDelegate;	// 0x32ecf5dd
// declared property getter: - (BOOL)isDirty;	// 0x32ed1189
// declared property getter: - (BOOL)isEnabled;	// 0x32ecf66d
// declared property getter: - (BOOL)isEnabledForEvents;	// 0x32ecf6d9
// declared property getter: - (BOOL)isEnabledForTodos;	// 0x32ecf735
// declared property getter: - (BOOL)isExpandPropertyReportSupported;	// 0x32ecfb61
// declared property getter: - (BOOL)isMergeSync;	// 0x32ecf6b5
// declared property getter: - (BOOL)isWritable;	// 0x32ecf625
- (void)noteFailedNetworkRequest;	// 0x32ed10a9
- (void)noteFailedProtocolRequest;	// 0x32ed10e1
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x32ed0c19
- (void)noteSuccessfulRequestWithNumDownloadedElements:(int)numDownloadedElements;	// 0x32ed106d
- (void)noteTimeSpentInNetworking:(double)networking;	// 0x32ed1119
// declared property getter: - (id)notificationCollectionCTag;	// 0x32ecf031
// declared property getter: - (id)notificationCollectionURL;	// 0x32ecef89
// declared property getter: - (id)notificationURLString;	// 0x32ecf331
// declared property getter: - (id)outboxURL;	// 0x32ecf1e1
- (id)password;	// 0x32ed0d09
- (int)port;	// 0x32ed0bf9
// declared property getter: - (id)preferredCalendarUserAddress;	// 0x32ed0929
- (void)prepareCalendarsForSyncWithCompletionBlock:(id)completionBlock;	// 0x32ecfd49
// declared property getter: - (id)principalURL;	// 0x32ecee39
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x32ed0edd
// declared property getter: - (id)pushKeys;	// 0x32ed06ad
// declared property getter: - (id)pushTransports;	// 0x32ecf3c5
// declared property getter: - (id)quotaFreeBytes;	// 0x32ecf56d
// declared property getter: - (id)refreshContext;	// 0x32ecfbf1
- (void)removeCalendar:(id)calendar;	// 0x32ed025d
- (id)scheme;	// 0x32ed0bb9
- (id)serverComplianceClasses;	// 0x32ed0d69
- (id)serverRoot;	// 0x32ed0ce5
- (void)setAccount:(id)account;	// 0x32ece96d
// declared property setter: - (void)setCalendarHomePushKey:(id)key;	// 0x32ecf475
// declared property setter: - (void)setCalendarHomeURL:(id)url;	// 0x32ecedb1
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x32ecec75
- (void)setCalendarUserAddresses:(id)addresses forCalendar:(id)calendar;	// 0x32ed02c9
// declared property setter: - (void)setCalendarsAreDirty:(BOOL)dirty;	// 0x32ed036d
// declared property setter: - (void)setDefaultCalendarURL:(id)url;	// 0x32ecef01
// declared property setter: - (void)setDropBoxURL:(id)url;	// 0x32ecf2a9
// declared property setter: - (void)setFullName:(id)name;	// 0x32eced1d
// declared property setter: - (void)setInboxCTag:(id)tag;	// 0x32ecf16d
// declared property setter: - (void)setInboxURL:(id)url;	// 0x32ecf0d5
// declared property setter: - (void)setIsDelegate:(BOOL)delegate;	// 0x32ecf5ed
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x32ed1199
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x32ecf67d
// declared property setter: - (void)setIsExpandPropertyReportSupported:(BOOL)supported;	// 0x32ecfb71
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x32ecf635
// declared property setter: - (void)setNotificationCollectionCTag:(id)tag;	// 0x32ecf041
// declared property setter: - (void)setNotificationCollectionURL:(id)url;	// 0x32ecefa9
// declared property setter: - (void)setNotificationURLString:(id)string;	// 0x32ecf341
// declared property setter: - (void)setOutboxURL:(id)url;	// 0x32ecf201
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x32ecee59
// declared property setter: - (void)setPushTransports:(id)transports;	// 0x32ecf3d5
// declared property setter: - (void)setQuotaFreeBytes:(id)bytes;	// 0x32ecf57d
// declared property setter: - (void)setShouldUpdatePushDelegate:(BOOL)updatePushDelegate;	// 0x32ed1179
// declared property setter: - (void)setSupportsFreebusy:(BOOL)freebusy;	// 0x32ecfbb9
// declared property setter: - (void)setXMPPServer:(id)server;	// 0x32ecf4f9
- (BOOL)shouldCompressRequests;	// 0x32ed1015
- (BOOL)shouldFailAllTasks;	// 0x32ed0fa9
- (BOOL)shouldHandleHTTPCookiesForURL:(id)url;	// 0x32ed0fad
- (BOOL)shouldSendClientInfoHeaderForURL:(id)url;	// 0x32ed0fb1
// declared property getter: - (BOOL)shouldUpdatePushDelegate;	// 0x32ed1169
- (BOOL)shouldUseOpportunisticSockets;	// 0x32ed1049
// declared property getter: - (BOOL)supportsExtendedCalendarQuery;	// 0x32ecf791
// declared property getter: - (BOOL)supportsFreebusy;	// 0x32ecfba9
// declared property getter: - (id)taskManager;	// 0x32ed0b99
// declared property getter: - (id)todoFilterEndDate;	// 0x32ecfb1d
// declared property getter: - (id)todoFilterStartDate;	// 0x32ecfac1
// declared property getter: - (id)uid;	// 0x32ed1159
- (id)user;	// 0x32ed0ce9
- (id)userAgentHeader;	// 0x32ed0d6d
@end

