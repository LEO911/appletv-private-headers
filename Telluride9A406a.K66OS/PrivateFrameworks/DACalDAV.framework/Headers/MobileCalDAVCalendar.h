/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <NSObject.h> // Unknown library
#import "CalDAVCalendar.h"
#import "DACalDAV-Structs.h"

@class NSTimeZone, NSArray, NSString, NSMutableArray, MobileCalDAVPrincipal, NSSet, NSURL, NSMutableDictionary, NSDictionary, NSMutableSet;
@protocol CalDAVPrincipal;

@interface MobileCalDAVCalendar : NSObject <CalDAVCalendar> {
	MobileCalDAVPrincipal *_principal;	// 4 = 0x4
	NSString *_calGUID;	// 8 = 0x8
	NSURL *_calendarURL;	// 12 = 0xc
	BOOL _isDirty;	// 16 = 0x10
	BOOL _isTaskContainer;	// 17 = 0x11
	BOOL _isEventContainer;	// 18 = 0x12
	BOOL _isSubscribed;	// 19 = 0x13
	BOOL _isScheduleInbox;	// 20 = 0x14
	BOOL _isScheduleOutbox;	// 21 = 0x15
	BOOL _isNotification;	// 22 = 0x16
	BOOL _isEditable;	// 23 = 0x17
	BOOL _isRenameable;	// 24 = 0x18
	BOOL _isEnabled;	// 25 = 0x19
	BOOL _isAffectingAvailability;	// 26 = 0x1a
	BOOL _canBePublished;	// 27 = 0x1b
	NSString *_pushKey;	// 28 = 0x1c
	NSURL *_publishURL;	// 32 = 0x20
	NSString *_syncToken;	// 36 = 0x24
	NSMutableDictionary *_uniqueIdentifierToLocalUIDMap;	// 40 = 0x28
	NSMutableDictionary *_URLToLocalUIDMap;	// 44 = 0x2c
	NSMutableDictionary *_URLToEtagMap;	// 48 = 0x30
	void *_calCalendar;	// 52 = 0x34
	int _mostRecentEventChangeIndex;	// 56 = 0x38
	int _mostRecentTaskChangeIndex;	// 60 = 0x3c
	int _mostRecentAlarmChangeIndex;	// 64 = 0x40
	int _mostRecentAttendeeChangeIndex;	// 68 = 0x44
	int _mostRecentAttachmentChangeIndex;	// 72 = 0x48
	int _mostRecentRecurChangeIndex;	// 76 = 0x4c
	int _mostRecentEventActionChangeIndex;	// 80 = 0x50
	NSArray *_syncActions;	// 84 = 0x54
	NSDictionary *_hrefsToModDeleteActions;	// 88 = 0x58
	NSDictionary *_uuidsToAddActions;	// 92 = 0x5c
	NSMutableSet *_eventUIDsNeedingAttendeeFixup;	// 96 = 0x60
	NSMutableArray *_outstandingTaskGroups;	// 100 = 0x64
	id _syncActionCompletionBlock;	// 104 = 0x68
@private
	BOOL _wasModifiedLocally;	// 108 = 0x6c
}
@property(readonly, assign) NSString *accountID;	// G=0x32ed39e1; 
@property(readonly, assign) NSSet *allEventURLs;	// G=0x32ed28b1; 
@property(retain) NSDictionary *bulkRequests;	// G=0x32ed2211; S=0x32ed2245; 
@property(retain) NSURL *calendarURL;	// G=0x32ed1b99; S=0x32ed1ba9; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x32ed24cd; S=0x32ed24ed; 
@property(assign) BOOL canBePublished;	// G=0x32ed83e1; S=0x32ed83f1; @synthesize=_canBePublished
@property(retain) NSString *color;	// G=0x32ed213d; S=0x32ed2191; 
@property(retain) NSString *ctag;	// G=0x32ed27c5; S=0x32ed283d; 
@property(readonly, assign) NSString *displayColor;	// G=0x32ed39bd; 
@property(retain) NSString *guid;	// G=0x32ed1ab1; S=0x32ed1ac1; 
@property(readonly, assign) NSDictionary *hrefsToModDeleteActions;	// G=0x32ed6b45; 
@property(assign) BOOL isAffectingAvailability;	// G=0x32ed83c1; S=0x32ed83d1; @synthesize=_isAffectingAvailability
@property(assign) BOOL isDirty;	// G=0x32ed83a1; S=0x32ed83b1; @synthesize=_isDirty
@property(assign) BOOL isEditable;	// G=0x32ed2735; S=0x32ed2761; 
@property(assign) BOOL isEnabled;	// G=0x32ed8381; S=0x32ed8391; @synthesize=_isEnabled
@property(assign) BOOL isEventContainer;	// G=0x32ed1e41; S=0x32ed1e65; 
@property(readonly, assign) BOOL isHidden;	// G=0x32ed3999; 
@property(assign) BOOL isNotification;	// G=0x32ed8341; S=0x32ed8351; @synthesize=_isNotification
@property(assign) BOOL isRenameable;	// G=0x32ed8361; S=0x32ed8371; @synthesize=_isRenameable
@property(assign) BOOL isScheduleInbox;	// G=0x32ed1ec1; S=0x32ed1ec5; 
@property(assign) BOOL isScheduleOutbox;	// G=0x32ed8321; S=0x32ed8331; @synthesize=_isScheduleOutbox
@property(assign) BOOL isSubscribed;	// G=0x32ed8301; S=0x32ed8311; @synthesize=_isSubscribed
@property(assign) BOOL isTaskContainer;	// G=0x32ed1dc1; S=0x32ed1de5; 
@property(retain) NSString *notes;	// G=0x32ed200d; S=0x32ed2041; 
@property(assign) int order;	// G=0x32ed2615; S=0x32ed2641; 
@property(retain) NSURL *owner;	// G=0x32ed2341; S=0x32ed239d; 
@property(retain) NSString *ownerDisplayName;	// G=0x32ed2421; S=0x32ed2459; 
@property(readonly, assign) id<CalDAVPrincipal> principal;	// G=0x32ed8281; @synthesize=_principal
@property(retain) NSURL *publishURL;	// G=0x32ed82c9; S=0x32ed82dd; @synthesize=_publishURL
@property(retain) NSString *pushKey;	// G=0x32ed8291; S=0x32ed82a5; @synthesize=_pushKey
@property(assign) int sharingStatus;	// G=0x32ed2695; S=0x32ed26d1; 
@property(readonly, assign) NSArray *syncActions;	// G=0x32ed6b25; 
@property(retain) NSString *syncToken;	// G=0x32ed8401; S=0x32ed8415; @synthesize=_syncToken
@property(retain) NSTimeZone *timeZone;	// G=0x32ed25f5; S=0x32ed2611; 
@property(retain) NSString *title;	// G=0x32ed1ec9; S=0x32ed1f01; 
@property(readonly, assign) NSDictionary *uuidsToAddActions;	// G=0x32ed6b35; 
@property(assign) BOOL wasModifiedLocally;	// G=0x32ed8439; S=0x32ed8449; @synthesize=_wasModifiedLocally
+ (int)addedCalendars:(id *)calendars inPrincipal:(id)principal;	// 0x32ed429d
+ (BOOL)clearCalendarChangesToIndex:(int)index inPrincipal:(id)principal;	// 0x32ed4bc1
+ (int)deletedCalendars:(id *)calendars inPrincipal:(id)principal;	// 0x32ed49b5
+ (int)modifiedCalendars:(id *)calendars inPrincipal:(id)principal;	// 0x32ed469d
- (void *)initCalCalendarWithTitle:(id)title;	// 0x32ed3a19
- (id)initNotificationCollectionWithPrincipal:(id)principal;	// 0x32ed17a9
- (id)initWithCalendarURL:(id)calendarURL calCalendar:(void *)calendar principal:(id)principal;	// 0x32ed16ed
- (id)initWithCalendarURL:(id)calendarURL principal:(id)principal;	// 0x32ed1785
- (id)initWithCalendarURL:(id)calendarURL principal:(id)principal title:(id)title;	// 0x32ed1489
- (int)_addAddedItemsOfType:(int)type toArray:(id)array;	// 0x32ed520d
- (void)_addCalendarItemWithRowID:(int)rowID toArrayIfNeeded:(id)arrayIfNeeded;	// 0x32ed508d
- (id)_calExternalRep;	// 0x32ed4239
- (void *)_copyCalItemWithExternalID:(id)externalID;	// 0x32ed2d71
- (void *)_copyCalItemWithUniqueIdentifier:(id)uniqueIdentifier inCalendar:(void *)calendar orStore:(void *)store;	// 0x32ed2ce1
- (id)_copyDeletedEventActions;	// 0x32ed5f7d
- (id)_createActionsForItems:(id)items withAction:(int)action alreadySentItems:(id)items3 shouldSave:(BOOL *)save;	// 0x32ed6571
- (void)_dropCalStoreContext;	// 0x32ed41d5
- (void)_fixUpAttendees;	// 0x32ed6b55
- (int)_gatherDeletedChanges:(/*function-pointer*/ void *)changes inDictionary:(id)dictionary;	// 0x32ed5b39
- (int)_gatherModifiedEventsInArray:(id)array;	// 0x32ed5609
- (int)_gatherModifiedItemsFromCalChangesCall:(/*function-pointer*/ void *)calChangesCall inArray:(id)array;	// 0x32ed54e9
- (int)_gatherModifiedTasksInArray:(id)array;	// 0x32ed5865
- (id)_itemPropertyDictForItemAtIndex:(int)index withChangedIDs:(CFArrayRef)changedIDs withExternalIDs:(CFArrayRef)externalIDs uniqueIdentifiers:(CFArrayRef)identifiers significantAttributeChanges:(CFArrayRef)changes oldCalendarIDs:(CFArrayRef)ids;	// 0x32ed4c45
- (BOOL)_removeCalendarItemWithURL:(id)url;	// 0x32ed36f5
- (void)_setSupportsEvents:(BOOL)events supportsTodos:(BOOL)todos;	// 0x32ed1d81
// declared property getter: - (id)accountID;	// 0x32ed39e1
// declared property getter: - (id)allEventURLs;	// 0x32ed28b1
- (Class)appSpecificCalendarItemClass;	// 0x32ed8265
// declared property getter: - (id)bulkRequests;	// 0x32ed2211
// declared property getter: - (id)calendarURL;	// 0x32ed1b99
// declared property getter: - (id)calendarUserAddresses;	// 0x32ed24cd
// declared property getter: - (BOOL)canBePublished;	// 0x32ed83e1
- (void)clearEventChanges;	// 0x32ed61e9
// declared property getter: - (id)color;	// 0x32ed213d
- (id)copyAddedItems;	// 0x32ed53c5
- (id)copyAllItems;	// 0x32ed4e2d
- (id)copyDeletedItems;	// 0x32ed6179
- (id)copyModifiedItems;	// 0x32ed5a21
// declared property getter: - (id)ctag;	// 0x32ed27c5
- (void)dealloc;	// 0x32ed1805
- (void)deleteCalendar;	// 0x32ed19e5
- (BOOL)deleteResourcesAtURLs:(id)urls;	// 0x32ed3889
- (id)description;	// 0x32ed1955
// declared property getter: - (id)displayColor;	// 0x32ed39bd
- (id)etagsForEventURLs:(id)eventURLs;	// 0x32ed2ab5
- (void)flushCaches;	// 0x32ed8171
- (void *)getCalCalendar;	// 0x32ed3ec9
// declared property getter: - (id)guid;	// 0x32ed1ab1
- (BOOL)hasEvents;	// 0x32ed3965
// declared property getter: - (id)hrefsToModDeleteActions;	// 0x32ed6b45
// declared property getter: - (BOOL)isAffectingAvailability;	// 0x32ed83c1
// declared property getter: - (BOOL)isDirty;	// 0x32ed83a1
// declared property getter: - (BOOL)isEditable;	// 0x32ed2735
// declared property getter: - (BOOL)isEnabled;	// 0x32ed8381
// declared property getter: - (BOOL)isEventContainer;	// 0x32ed1e41
// declared property getter: - (BOOL)isHidden;	// 0x32ed3999
// declared property getter: - (BOOL)isNotification;	// 0x32ed8341
// declared property getter: - (BOOL)isRenameable;	// 0x32ed8361
// declared property getter: - (BOOL)isScheduleInbox;	// 0x32ed1ec1
// declared property getter: - (BOOL)isScheduleOutbox;	// 0x32ed8321
// declared property getter: - (BOOL)isSubscribed;	// 0x32ed8301
// declared property getter: - (BOOL)isTaskContainer;	// 0x32ed1dc1
- (int)localUIDForUniqueIdentifier:(id)uniqueIdentifier;	// 0x32ed2e9d
// declared property getter: - (id)notes;	// 0x32ed200d
// declared property getter: - (int)order;	// 0x32ed2615
// declared property getter: - (id)owner;	// 0x32ed2341
// declared property getter: - (id)ownerDisplayName;	// 0x32ed2421
- (void)prepareMergeSyncActionsWithCompletionBlock:(id)completionBlock;	// 0x32ed7b49
- (void)prepareSyncActionsWithCompletionBlock:(id)completionBlock;	// 0x32ed6f5d
// declared property getter: - (id)principal;	// 0x32ed8281
// declared property getter: - (id)publishURL;	// 0x32ed82c9
// declared property getter: - (id)pushKey;	// 0x32ed8291
- (id)removeInvitationsForItemWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x32ed31d9
// declared property setter: - (void)setBulkRequests:(id)requests;	// 0x32ed2245
// declared property setter: - (void)setCalendarURL:(id)url;	// 0x32ed1ba9
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x32ed24ed
// declared property setter: - (void)setCanBePublished:(BOOL)published;	// 0x32ed83f1
// declared property setter: - (void)setColor:(id)color;	// 0x32ed2191
// declared property setter: - (void)setCtag:(id)ctag;	// 0x32ed283d
- (BOOL)setEtag:(id)etag forEventAtURL:(id)url;	// 0x32ed3039
// declared property setter: - (void)setGuid:(id)guid;	// 0x32ed1ac1
// declared property setter: - (void)setIsAffectingAvailability:(BOOL)availability;	// 0x32ed83d1
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x32ed83b1
// declared property setter: - (void)setIsEditable:(BOOL)editable;	// 0x32ed2761
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x32ed8391
// declared property setter: - (void)setIsEventContainer:(BOOL)container;	// 0x32ed1e65
// declared property setter: - (void)setIsNotification:(BOOL)notification;	// 0x32ed8351
// declared property setter: - (void)setIsRenameable:(BOOL)renameable;	// 0x32ed8371
// declared property setter: - (void)setIsScheduleInbox:(BOOL)inbox;	// 0x32ed1ec5
// declared property setter: - (void)setIsScheduleOutbox:(BOOL)outbox;	// 0x32ed8331
// declared property setter: - (void)setIsSubscribed:(BOOL)subscribed;	// 0x32ed8311
// declared property setter: - (void)setIsTaskContainer:(BOOL)container;	// 0x32ed1de5
// declared property setter: - (void)setNotes:(id)notes;	// 0x32ed2041
// declared property setter: - (void)setOrder:(int)order;	// 0x32ed2641
// declared property setter: - (void)setOwner:(id)owner;	// 0x32ed239d
// declared property setter: - (void)setOwnerDisplayName:(id)name;	// 0x32ed2459
// declared property setter: - (void)setPublishURL:(id)url;	// 0x32ed82dd
// declared property setter: - (void)setPushKey:(id)key;	// 0x32ed82a5
- (BOOL)setScheduleTag:(id)tag forEventAtURL:(id)url;	// 0x32ed3125
// declared property setter: - (void)setSharingStatus:(int)status;	// 0x32ed26d1
// declared property setter: - (void)setSyncToken:(id)token;	// 0x32ed8415
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x32ed2611
// declared property setter: - (void)setTitle:(id)title;	// 0x32ed1f01
- (BOOL)setURL:(id)url forResourceWithUUID:(id)uuid;	// 0x32ed2edd
- (void)setUniqueIdentifier:(id)identifier forLocalUID:(int)localUID;	// 0x32ed2e31
// declared property setter: - (void)setWasModifiedLocally:(BOOL)locally;	// 0x32ed8449
// declared property getter: - (int)sharingStatus;	// 0x32ed2695
// declared property getter: - (id)syncActions;	// 0x32ed6b25
- (void)syncDidFinishWithError:(id)sync;	// 0x32ed8255
// declared property getter: - (id)syncToken;	// 0x32ed8401
// declared property getter: - (id)timeZone;	// 0x32ed25f5
// declared property getter: - (id)title;	// 0x32ed1ec9
- (BOOL)updateResourcesFromServer:(id)server;	// 0x32ed3399
// declared property getter: - (id)uuidsToAddActions;	// 0x32ed6b35
// declared property getter: - (BOOL)wasModifiedLocally;	// 0x32ed8439
@end

