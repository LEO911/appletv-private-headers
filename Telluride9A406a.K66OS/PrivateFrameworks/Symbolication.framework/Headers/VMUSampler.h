/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication
 */

#import <NSObject.h> // Unknown library
#import "Symbolication-Structs.h"

@class NSConditionLock, NSMutableArray, NSString, VMUTaskMemoryCache, VMUProcessDescription, NSMapTable;

@interface VMUSampler : NSObject {
	int _pid;	// 4 = 0x4
	unsigned _task;	// 8 = 0x8
	BOOL _needTaskPortDealloc;	// 12 = 0xc
	BOOL _recordThreadStates;	// 13 = 0xd
	BOOL _taskIs64Bit;	// 14 = 0xe
	NSString *_processName;	// 16 = 0x10
	VMUProcessDescription *_processDescription;	// 20 = 0x14
	CSTypeRef _symbolicator;	// 24 = 0x18
	VMUTaskMemoryCache *_memCache;	// 32 = 0x20
	sampling_context_t *_samplingContext;	// 36 = 0x24
	unsigned _mainThread;	// 40 = 0x28
	NSMapTable *_lastThreadBacktraceMap;	// 44 = 0x2c
	unsigned _numberOfCopiedBacktraces;	// 48 = 0x30
	unsigned *_previousThreadList;	// 52 = 0x34
	unsigned _previousThreadCount;	// 56 = 0x38
	unsigned _maxPreviousThreadCount;	// 60 = 0x3c
	double _tbRate;	// 64 = 0x40
	double _tbInterval;	// 72 = 0x48
	NSConditionLock *_stateLock;	// 80 = 0x50
	double _interval;	// 84 = 0x54
	double _timeLimit;	// 92 = 0x5c
	unsigned _sampleLimit;	// 100 = 0x64
	BOOL _sampling;	// 104 = 0x68
	unsigned _samplingThreadPort;	// 108 = 0x6c
	unsigned _numberOfSamples;	// 112 = 0x70
	NSMutableArray *_samples;	// 116 = 0x74
	BOOL _stacksFixed;	// 120 = 0x78
	void *_cfi;	// 124 = 0x7c
	id _delegate;	// 128 = 0x80
	double _timeSpentSamplingWithoutCFI;	// 132 = 0x84
	double _timeSpentSamplingWithCFI;	// 140 = 0x8c
	BOOL _shouldOutputSignature;	// 148 = 0x94
	BOOL _showDispatchQueueNames;	// 149 = 0x95
}
@property(assign) id delegate;	// G=0x32cb7fd5; S=0x32cb7fc5; converted property
@property(readonly, assign) unsigned mainThread;	// G=0x32cb7fb5; converted property
@property(readonly, assign) int pid;	// G=0x32cb7f95; converted property
@property(assign) unsigned sampleLimit;	// G=0x32cb7f39; S=0x32cb7f29; converted property
@property(readonly, retain) NSMutableArray *samples;	// G=0x32cb8bf1; converted property
@property(assign) double samplingInterval;	// G=0x32cb7ed5; S=0x32cb7eb1; converted property
@property(assign) BOOL shouldOutputSignature;	// G=0x32cb7f69; S=0x32cb7f59; converted property
@property(readonly, assign) CSTypeRef symbolicator;	// G=0x32cb7f79; converted property
@property(assign) double timeLimit;	// G=0x32cb7f11; S=0x32cb7eed; converted property
+ (void)initialize;	// 0x32cb81e5
+ (id)sampleAllThreadsOfPID:(int)pid;	// 0x32cb8191
+ (id)sampleAllThreadsOfPID:(int)pid withSymbolicator:(id)symbolicator;	// 0x32cb8181
+ (id)sampleAllThreadsOfTask:(unsigned)task;	// 0x32cb812d
+ (id)sampleAllThreadsOfTask:(unsigned)task symbolicate:(BOOL)symbolicate;	// 0x32cb80bd
+ (id)sampleAllThreadsOfTask:(unsigned)task withSymbolicator:(id)symbolicator;	// 0x32cb811d
+ (id)sampleAllThreadsOfTask:(unsigned)task withSymbolicator:(id)symbolicator symbolicate:(BOOL)symbolicate;	// 0x32cb80a9
- (id)initWithPID:(int)pid;	// 0x32cb7fe5
- (id)initWithPID:(int)pid options:(unsigned)options;	// 0x32cb8025
- (id)initWithPID:(int)pid orTask:(unsigned)task options:(unsigned)options;	// 0x32cba045
- (id)initWithTask:(unsigned)task;	// 0x32cb8005
- (id)initWithTask:(unsigned)task options:(unsigned)options;	// 0x32cb8045
- (void)_fixupStacks:(id)stacks;	// 0x32cb93a1
- (void)_makeHighPriority;	// 0x32cb9dd9
- (void)_makeTimeshare;	// 0x32cb9da5
- (void)_runSamplingThread;	// 0x32cb8fe5
- (void)dealloc;	// 0x32cb9f11
// converted property getter: - (id)delegate;	// 0x32cb7fd5
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)serialNumber;	// 0x32cb8a89
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)serialNumber returnedConcurrentFlag:(BOOL *)flag returnedThreadId:(unsigned long long *)anId;	// 0x32cb8ab1
- (void)finalize;	// 0x32cb8069
- (void)flushData;	// 0x32cb8b85
- (void)forceStop;	// 0x32cb89b1
- (void)initializeSamplingContext:(BOOL)context;	// 0x32cb9cd9
// converted property getter: - (unsigned)mainThread;	// 0x32cb7fb5
// converted property getter: - (int)pid;	// 0x32cb7f95
- (void)preloadSymbols;	// 0x32cb8a4d
- (unsigned)recordSampleTo:(id)to beginTime:(double)time endTime:(double)time3 thread:(unsigned)thread;	// 0x32cb9561
- (id)sampleAllThreadsOnce;	// 0x32cb8f59
- (unsigned)sampleCount;	// 0x32cb7fa5
- (void)sampleForDuration:(unsigned)duration interval:(unsigned)interval;	// 0x32cb89d1
// converted property getter: - (unsigned)sampleLimit;	// 0x32cb7f39
- (id)sampleThread:(unsigned)thread;	// 0x32cb8e65
// converted property getter: - (id)samples;	// 0x32cb8bf1
// converted property getter: - (double)samplingInterval;	// 0x32cb7ed5
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x32cb7fc5
- (void)setRecordThreadStates:(BOOL)states;	// 0x32cb7f49
// converted property setter: - (void)setSampleLimit:(unsigned)limit;	// 0x32cb7f29
// converted property setter: - (void)setSamplingInterval:(double)interval;	// 0x32cb7eb1
// converted property setter: - (void)setShouldOutputSignature:(BOOL)outputSignature;	// 0x32cb7f59
// converted property setter: - (void)setTimeLimit:(double)limit;	// 0x32cb7eed
// converted property getter: - (BOOL)shouldOutputSignature;	// 0x32cb7f69
- (BOOL)start;	// 0x32cb8d35
- (BOOL)stop;	// 0x32cb8ca5
- (void)stopSampling;	// 0x32cb89c1
- (id)stopSamplingAndReturnCallNode;	// 0x32cb88b1
// converted property getter: - (CSTypeRef)symbolicator;	// 0x32cb7f79
- (id)threadNameForThread:(unsigned)thread;	// 0x32cb8b1d
- (id)threadNameForThread:(unsigned)thread returnedThreadId:(unsigned long long *)anId returnedDispatchQueueSerialNum:(unsigned long long *)num;	// 0x32cb8b3d
// converted property getter: - (double)timeLimit;	// 0x32cb7f11
- (BOOL)waitUntilDone;	// 0x32cb8c19
- (void)writeOutput:(id)output append:(BOOL)append;	// 0x32cb827d
@end

