/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <NSObject.h> // Unknown library
#import "OfficeImport-Structs.h"

@class NSCondition, NSThread, TSUMemoryWatcher, TSURetainedPointerKeyDictionary, TSUPointerKeyDictionary;
@protocol TSUFlushable;

__attribute__((visibility("hidden")))
@interface TSUFlushingManager : NSObject {
@private
	TSURetainedPointerKeyDictionary *_objects;	// 4 = 0x4
	set<TSUFlushableObjectInfo*,TSUFlushableObjectInfoPointerFlushingOrderLess,std::allocator<TSUFlushableObjectInfo*> > *_sortedObjects;	// 8 = 0x8
	set<TSUFlushableObjectInfo*,TSUFlushableObjectInfoPointerTimeStampLess,std::allocator<TSUFlushableObjectInfo*> > *_sortedNewObjects;	// 12 = 0xc
	TSUPointerKeyDictionary *_inactiveObjects;	// 16 = 0x10
	unsigned _clock;	// 20 = 0x14
	BOOL _alwaysFlushing;	// 24 = 0x18
	BOOL _stopFlushing;	// 25 = 0x19
	BOOL _stopFlushingWhenQueueEmpty;	// 26 = 0x1a
	BOOL _isFlushing;	// 27 = 0x1b
	id<TSUFlushable> _flushingObject;	// 28 = 0x1c
	BOOL _isWaitingForFlush;	// 32 = 0x20
	NSCondition *_cond;	// 36 = 0x24
	NSCondition *_isFlushingCond;	// 40 = 0x28
	TSUMemoryWatcher *_memoryWatcher;	// 44 = 0x2c
	NSThread *_bgThread;	// 48 = 0x30
}
+ (id)_singletonAlloc;	// 0x3290af05
+ (id)allocWithZone:(NSZone *)zone;	// 0x32aef361
+ (id)sharedManager;	// 0x3290ad79
- (id)init;	// 0x3290af35
- (void)_backgroundThread:(id)thread;	// 0x32af00dd
- (void)_didUseObject:(id)object;	// 0x32aeff25
- (void)_flushAllEligible;	// 0x32aefb69
- (void)_startFlushingObjects;	// 0x32aefc85
- (void)_stopFlushingObjects;	// 0x32aefd55
- (void)addObject:(id)object;	// 0x3290f2a1
- (void)advanceClock;	// 0x3290f4ad
- (id)autorelease;	// 0x32aef355
- (BOOL)controlsActiveObject:(id)object;	// 0x32aefebd
- (BOOL)controlsInactiveObject:(id)object;	// 0x32aefef1
- (id)copyWithZone:(NSZone *)zone;	// 0x32aef359
- (void)dealloc;	// 0x32af05b5
- (void)didEnterBackground;	// 0x32aefb59
- (void)doneWithObject:(id)object;	// 0x32aef649
- (TSUFlushableObjectInfo *)eraseInfoForObject:(id)object;	// 0x3290b495
- (void)insertObjectInfo:(TSUFlushableObjectInfo *)info;	// 0x32af0009
- (BOOL)isNewObject:(TSUFlushableObjectInfo *)object;	// 0x32914631
- (void)memoryLevelDecreased:(int)decreased was:(int)was;	// 0x32af040d
- (void)memoryLevelIncreased:(int)increased was:(int)was;	// 0x32af04e1
- (void)protectObject:(id)object;	// 0x32aef3e9
- (void)release;	// 0x32aef351
- (void)removeObject:(id)object;	// 0x3290b291
- (id)retain;	// 0x32aef345
- (unsigned)retainCount;	// 0x32aef349
- (void)safeToFlush:(id)flush wasAccessed:(BOOL)accessed;	// 0x32aef99d
- (void)stopProtectingObject:(id)object;	// 0x32aef4dd
- (void)transferNewObjects;	// 0x3290f4d1
- (void)unsafeToFlush:(id)flush;	// 0x32aef73d
- (void)willEnterForeground;	// 0x32aef35d
@end

