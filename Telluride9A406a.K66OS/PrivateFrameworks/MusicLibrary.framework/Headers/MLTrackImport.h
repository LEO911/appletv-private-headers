/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "NSCopying.h"
#import <NSObject.h> // Unknown library
#import "MusicLibrary-Structs.h"

@class NSData, NSMutableDictionary, MLMovieProperties, NSDictionary, MLContentRating, NSString, NSArray;

@interface MLTrackImport : NSObject <NSCopying> {
@private
	NSData *_artworkData;	// 4 = 0x4
	NSString *_assetFilePath;	// 8 = 0x8
	NSArray *_chapters;	// 12 = 0xc
	NSMutableDictionary *_properties;	// 16 = 0x10
	BOOL _shouldAddToPurchasedPlaylist;	// 20 = 0x14
	BOOL _shouldDeleteExistingArtwork;	// 21 = 0x15
	BOOL _assignArtworkCacheIDFromAlbum;	// 22 = 0x16
}
@property(copy, nonatomic) NSData *artworkData;	// G=0x364e7015; S=0x364e7025; @synthesize=_artworkData
@property(copy, nonatomic) NSString *assetFilePath;	// G=0x364e7049; S=0x364e7059; @synthesize=_assetFilePath
@property(assign, nonatomic) BOOL assignArtworkCacheIDFromAlbum;	// G=0x364e707d; S=0x364e708d; @synthesize=_assignArtworkCacheIDFromAlbum
@property(copy, nonatomic) NSArray *chapters;	// G=0x364e709d; S=0x364e70ad; @synthesize=_chapters
@property(copy, nonatomic) MLContentRating *contentRating;	// G=0x364e68a9; S=0x364e6a69; 
@property(readonly, assign, nonatomic) NSDictionary *entityProperties;	// G=0x364e6925; 
@property(assign, nonatomic) unsigned long mediaType;	// G=0x364e695d; S=0x364e6abd; 
@property(copy, nonatomic) MLMovieProperties *movieProperties;	// G=0x364e69ad; S=0x364e6b45; 
@property(assign, nonatomic) BOOL shouldAddToPurchasedPlaylist;	// G=0x364e70d1; S=0x364e70e1; @synthesize=_shouldAddToPurchasedPlaylist
@property(assign, nonatomic) BOOL shouldDeleteExistingArtwork;	// G=0x364e70f1; S=0x364e7101; @synthesize=_shouldDeleteExistingArtwork
+ (void)initialize;	// 0x364e6659
- (id)init;	// 0x364e6591
- (void)_addSortStrings;	// 0x364e6f71
// declared property getter: - (id)artworkData;	// 0x364e7015
// declared property getter: - (id)assetFilePath;	// 0x364e7049
// declared property getter: - (BOOL)assignArtworkCacheIDFromAlbum;	// 0x364e707d
// declared property getter: - (id)chapters;	// 0x364e709d
// declared property getter: - (id)contentRating;	// 0x364e68a9
- (id)copyEntityProperties;	// 0x364e6d05
- (id)copyWithZone:(NSZone *)zone;	// 0x364e679d
- (void)dealloc;	// 0x364e65d1
// declared property getter: - (id)entityProperties;	// 0x364e6925
// declared property getter: - (unsigned long)mediaType;	// 0x364e695d
// declared property getter: - (id)movieProperties;	// 0x364e69ad
- (void)normalizeEntityProperties;	// 0x364e6d25
// declared property setter: - (void)setArtworkData:(id)data;	// 0x364e7025
// declared property setter: - (void)setAssetFilePath:(id)path;	// 0x364e7059
// declared property setter: - (void)setAssignArtworkCacheIDFromAlbum:(BOOL)album;	// 0x364e708d
// declared property setter: - (void)setChapters:(id)chapters;	// 0x364e70ad
// declared property setter: - (void)setContentRating:(id)rating;	// 0x364e6a69
// declared property setter: - (void)setMediaType:(unsigned long)type;	// 0x364e6abd
// declared property setter: - (void)setMovieProperties:(id)properties;	// 0x364e6b45
// declared property setter: - (void)setShouldAddToPurchasedPlaylist:(BOOL)addToPurchasedPlaylist;	// 0x364e70e1
// declared property setter: - (void)setShouldDeleteExistingArtwork:(BOOL)deleteExistingArtwork;	// 0x364e7101
- (void)setValue:(id)value forEntityProperty:(id)entityProperty;	// 0x364e6c35
// declared property getter: - (BOOL)shouldAddToPurchasedPlaylist;	// 0x364e70d1
// declared property getter: - (BOOL)shouldDeleteExistingArtwork;	// 0x364e70f1
- (id)valueForEntityProperty:(id)entityProperty;	// 0x364e6cbd
@end

