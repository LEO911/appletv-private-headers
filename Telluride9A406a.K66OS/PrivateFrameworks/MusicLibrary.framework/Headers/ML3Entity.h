/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
@private
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x364ca199; 
@property(assign) ML3MusicLibrary *library;	// G=0x364b8789; S=0x364cbb79; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x364bdfb1; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x364cb125
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x364b92b1
+ (id)allProperties;	// 0x364cb85d
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x364b08c5
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x364cb859
+ (id)defaultOrderingProperties;	// 0x364ca76d
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x364cb2e5
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x364d8a7d
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x364b0e6d
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x364cb991
+ (id)extraTablesToDelete;	// 0x364cb851
+ (id)extraTablesToInsert;	// 0x364bddf5
+ (id)foreignColumnForProperty:(id)property;	// 0x364ca779
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x364ca775
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x364b9701
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type;	// 0x364c97c1
+ (id)indexableSQLForProperties:(id)properties;	// 0x364cb861
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x364bda19
+ (BOOL)insertionChangesLibraryContents;	// 0x364bddfd
+ (id)joinClauseForProperty:(id)property;	// 0x364b0f51
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x364cb121
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x364bb609
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x364ca699
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x364b80e9
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x364b7795
+ (id)persistentIDColumnForTable:(id)table;	// 0x364cb855
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x364b66e1
+ (id)predisambiguatedProperties;	// 0x364b0ef9
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x364b9b41
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x364b891d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x364b69b1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x364d8a01
+ (id)replacerWithProperties:(id)properties databaseHandle:(sqlite3 *)handle;	// 0x364f2911
+ (int)revisionTrackingCode;	// 0x364cb989
+ (id)sectionPropertyForProperty:(id)property;	// 0x364ca771
+ (id)subselectPropertyForProperty:(id)property;	// 0x364ca695
+ (id)subselectStatementForProperty:(id)property;	// 0x364b15a9
+ (id)unsettableProperties;	// 0x364bd9f5
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x364bc495
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x364b8119
- (id)copyInLibrary:(id)library;	// 0x364c9ebd
- (id)copyWithZone:(NSZone *)zone;	// 0x364ca045
- (BOOL)deleteFromLibrary;	// 0x364cb7fd
- (id)description;	// 0x364ca13d
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x364bee19
// declared property getter: - (BOOL)existsInLibrary;	// 0x364ca199
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x364b81f5
- (unsigned)hash;	// 0x364ca12d
- (void)incrementRevision;	// 0x364cbb21
- (BOOL)isEqual:(id)equal;	// 0x364ca0a9
// declared property getter: - (id)library;	// 0x364b8789
- (BOOL)matchesPredicate:(id)predicate;	// 0x364ca479
- (id)newSelectSQLForProperties:(id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x364b8375
// declared property getter: - (long long)persistentID;	// 0x364bdfb1
// declared property setter: - (void)setLibrary:(id)library;	// 0x364cbb79
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x364be4ed
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x364be515
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x364becf5
- (id)valueForProperty:(id)property;	// 0x364b9b15
@end

