/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MusicController.h"

@class ATVDataCollection, NSNumber, NSString;

__attribute__((visibility("hidden")))
@interface MusicItemsController : MusicController {
	ATVDataCollection *_album;	// 164 = 0xa4
	ATVDataCollection *_artist;	// 168 = 0xa8
	ATVDataCollection *_musicVideoArtist;	// 172 = 0xac
	ATVDataCollection *_composer;	// 176 = 0xb0
	ATVDataCollection *_playlist;	// 180 = 0xb4
	NSString *_genre;	// 184 = 0xb8
	NSNumber *_albumID;	// 188 = 0xbc
	BOOL _displaysMusicVideosOnly;	// 192 = 0xc0
	BOOL _displayAudiobooksOnly;	// 193 = 0xc1
	BOOL _displayCompilationTracksOnly;	// 194 = 0xc2
	BOOL _sortItemsByName;	// 195 = 0xc3
	BOOL _refreshList;	// 196 = 0xc4
}
+ (id)allMusicVideosControllerWithDataClient:(id)dataClient dataClientType:(unsigned)type;	// 0x1b4b6d
+ (id)allSongsControllerByGenre:(id)genre displayCompilationsOnly:(BOOL)only dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4ac5
+ (id)allSongsControllerWithDataClient:(id)dataClient dataClientType:(unsigned)type;	// 0x1b4a95
+ (id)audiobooksControllerForAlbum:(id)album dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4df9
+ (id)controllerForATVMediaType:(id)atvmediaType collection:(id)collection dataClient:(id)client dataClientType:(unsigned)type playAllItems:(BOOL)items;	// 0x1b4a45
+ (id)musicVideosControllerForArtist:(id)artist dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4db1
+ (id)songsControllerForAlbum:(id)album byGenre:(id)genre displayCompilationsOnly:(BOOL)only dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4bf9
+ (id)songsControllerForAlbumWithID:(id)anId dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4cb9
+ (id)songsControllerForArtist:(id)artist byGenre:(id)genre dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4c5d
+ (id)songsControllerForComposer:(id)composer dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4d01
+ (id)songsControllerForPlaylist:(id)playlist dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4d59
- (id)initWithAlbum:(id)album byGenre:(id)genre displayCompilationsOnly:(BOOL)only dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4ee1
- (id)initWithAlbumID:(id)albumID dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b5129
- (id)initWithArtist:(id)artist byGenre:(id)genre dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b5021
- (id)initWithAudiobookAlbum:(id)audiobookAlbum dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b549d
- (id)initWithComposer:(id)composer dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b51bd
- (id)initWithGenre:(id)genre displayCompilationsOnly:(BOOL)only dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b4e41
- (id)initWithMusiVideoArtist:(id)musiVideoArtist dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b53a5
- (id)initWithPlaylist:(id)playlist dataClient:(id)client dataClientType:(unsigned)type;	// 0x1b52a5
- (void)_playerUpdated:(id)updated;	// 0x1b6aa9
- (void)_registerForPlayerNotifications;	// 0x1b69f1
- (void)_setDisplaysAudiobooksOnly:(BOOL)only;	// 0x1b69e1
- (void)_setDisplaysMusicVideosOnly:(BOOL)only;	// 0x1b69d1
- (void)_setPreviewForMedia:(id)media;	// 0x1b68b5
- (BOOL)_shuffleEnabled;	// 0x1b6875
- (void *)dataItemAtIndexPath:(id)indexPath;	// 0x1b5c69
- (void)dealloc;	// 0x1b54f9
- (id)errorForNoContent;	// 0x1b5bd9
- (id)indexPathForDataItem:(void *)dataItem;	// 0x1b5bf9
- (void)list:(id)list didFocusItemAtIndexPath:(id)indexPath;	// 0x1b5f5d
- (void)list:(id)list didPlayItemAtIndexPath:(id)indexPath;	// 0x1b659d
- (void)list:(id)list didSelectItemAtIndexPath:(id)indexPath;	// 0x1b6121
- (float)list:(id)list heightForItemAtIndexPath:(id)indexPath;	// 0x1b5edd
- (id)list:(id)list indexPathForItemID:(id)itemID;	// 0x1b6685
- (id)list:(id)list itemIDForIndexPath:(id)indexPath;	// 0x1b65ad
- (id)list:(id)list menuItemForRowAtIndexPath:(id)indexPath;	// 0x1b5d3d
- (long)list:(id)list numberOfRowsInSection:(long)section;	// 0x1b5ce5
- (id)newDataQuery;	// 0x1b5851
- (id)newPreDataQuery;	// 0x1b5635
- (long)numberOfSectionsInList:(id)list;	// 0x1b5d39
- (BOOL)preDataQueryComplete:(id)complete;	// 0x1b56ed
- (void)setSortItemsByName:(BOOL)name;	// 0x1b67f1
- (BOOL)shouldShowSearch;	// 0x1b6805
- (int)typeaheadSelectionOffset;	// 0x1b6801
- (void)wasExhumed;	// 0x1b55c1
@end

