/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "LTAVLeaseAgentAdaptor.h"

@class AVAsset, AVPlayerItem, AVPlayer, LTAVLeaseAgent, ATVDataItem, BRStateMachine;

__attribute__((visibility("hidden")))
@interface ATVRadioPlayer : XXUnknownSuperclass <LTAVLeaseAgentAdaptor> {
	BOOL _resumeActivePlayerPlayback;	// 4 = 0x4
	ATVDataItem *_radioDataItem;	// 8 = 0x8
	float _progress;	// 12 = 0xc
	BRStateMachine *_stateMachine;	// 16 = 0x10
	id _completionHandler;	// 20 = 0x14
	LTAVLeaseAgent *_leaseAgent;	// 24 = 0x18
	AVAsset *_asset;	// 28 = 0x1c
	AVPlayerItem *_playerItem;	// 32 = 0x20
	AVPlayer *_player;	// 36 = 0x24
	id _playbackObserver;	// 40 = 0x28
}
@property(retain, nonatomic) AVAsset *asset;	// G=0x9046d; S=0x9047d; @synthesize=_asset
@property(copy, nonatomic) id completionHandler;	// G=0x90415; S=0x90429; @synthesize=_completionHandler
@property(assign, nonatomic) __weak LTAVLeaseAgent *leaseAgent;	// G=0x90439; S=0x90459; @synthesize=_leaseAgent
@property(retain, nonatomic) id playbackObserver;	// G=0x90515; S=0x90525; @synthesize=_playbackObserver
@property(retain, nonatomic) AVPlayer *player;	// G=0x904dd; S=0x904ed; @synthesize=_player
@property(retain, nonatomic) AVPlayerItem *playerItem;	// G=0x904a5; S=0x904b5; @synthesize=_playerItem
@property(assign, nonatomic) float progress;	// G=0x9039d; S=0x903ad; @synthesize=_progress
@property(retain) ATVDataItem *radioDataItem;	// G=0x90379; S=0x9038d; @synthesize=_radioDataItem
@property(assign, nonatomic) BOOL resumeActivePlayerPlayback;	// G=0x903bd; S=0x903cd; @synthesize=_resumeActivePlayerPlayback
@property(retain, nonatomic) BRStateMachine *stateMachine;	// G=0x903dd; S=0x903ed; @synthesize=_stateMachine
- (id)initWithRadioDataItem:(id)radioDataItem;	// 0x8e0c1
- (void).cxx_destruct;	// 0x90539
- (void)_addObserversForPlayerItem:(id)playerItem;	// 0x8e6d9
- (void)_addPlaybackObserver;	// 0x8e471
- (void)_assetTracksDidFinishLoading;	// 0x8fc71
- (id)_callCompletionHandlerFinished:(BOOL)finished;	// 0x8eeb1
- (BOOL)_doesPlayerItemHaveSufficientBuffer;	// 0x8e31d
- (void)_initializeStateMachine:(id)machine;	// 0x8f375
- (BOOL)_isItemRedownloadable;	// 0x8e1a5
- (BOOL)_isPlayerItemReadyToPlay;	// 0x8e2dd
- (void)_leaseAgentStateMachineStateChanged:(id)changed;	// 0x8e88d
- (id)_playbackURL;	// 0x8e21d
- (void)_playerItemDidPlayToEndTime:(id)_playerItem;	// 0x8fd51
- (void)_playerItemPlaybackBufferFullDidChange;	// 0x8ff2d
- (void)_playerItemPlaybackLikelyToKeepUpDidChange;	// 0x8fea9
- (void)_playerItemStatusDidChange;	// 0x8fdf1
- (void)_removeObserversForPlayerItem:(id)playerItem;	// 0x8e7c1
- (void)_removePlaybackObserverIfNeeded;	// 0x8e665
- (void)_setCookies;	// 0x8e39d
- (id)_startAcquiringLease;	// 0x8e9e1
- (id)_startLoadingAssetTracks;	// 0x8eba9
- (id)_startLoadingPlayerItem;	// 0x8f245
- (id)_startPlaying;	// 0x8f12d
- (id)_startPlayingIfPlayerHasSufficientBuffer;	// 0x8f1f1
// declared property getter: - (id)asset;	// 0x9046d
// declared property getter: - (id)completionHandler;	// 0x90415
// declared property getter: - (id)leaseAgent;	// 0x90439
- (BOOL)leaseAgent:(id)agent currentItemIsIdenticalToItem:(id)item;	// 0x9032d
- (void)leaseAgent:(id)agent didAttemptToAcquireLeaseForItem:(id)item withError:(id)error wasCancelled:(BOOL)cancelled;	// 0x90179
- (void)leaseAgent:(id)agent failedToReacquireLeaseWithError:(id)error;	// 0x9028d
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x8ffb1
- (void)playWithCompletionBlock:(id)completionBlock;	// 0x8fbbd
// declared property getter: - (id)playbackObserver;	// 0x90515
// declared property getter: - (id)player;	// 0x904dd
// declared property getter: - (id)playerItem;	// 0x904a5
// declared property getter: - (float)progress;	// 0x9039d
// declared property getter: - (id)radioDataItem;	// 0x90379
// declared property getter: - (BOOL)resumeActivePlayerPlayback;	// 0x903bd
// declared property setter: - (void)setAsset:(id)asset;	// 0x9047d
// declared property setter: - (void)setCompletionHandler:(id)handler;	// 0x90429
// declared property setter: - (void)setLeaseAgent:(id)agent;	// 0x90459
// declared property setter: - (void)setPlaybackObserver:(id)observer;	// 0x90525
// declared property setter: - (void)setPlayer:(id)player;	// 0x904ed
// declared property setter: - (void)setPlayerItem:(id)item;	// 0x904b5
// declared property setter: - (void)setProgress:(float)progress;	// 0x903ad
// declared property setter: - (void)setRadioDataItem:(id)item;	// 0x9038d
// declared property setter: - (void)setResumeActivePlayerPlayback:(BOOL)playback;	// 0x903cd
// declared property setter: - (void)setStateMachine:(id)machine;	// 0x903ed
// declared property getter: - (id)stateMachine;	// 0x903dd
- (void)stop;	// 0x8fc2d
@end

