/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "BRSingleton.h"

@class NSObject, NSDictionary, BRMediaPlayerController, NSMutableArray, NSTimer, BRWindow;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface BRMediaPlayerManager : BRSingleton {
	NSObject<OS_dispatch_queue> *_nowPlayingQueue;	// 4 = 0x4
	NSMutableArray *_registrations;	// 8 = 0x8
	NSDictionary *_singletons;	// 12 = 0xc
	BRWindow *_shroudyMcShroud;	// 16 = 0x10
	BRWindow *_playerWindow;	// 20 = 0x14
	NSTimer *_popupDelay;	// 24 = 0x18
	NSTimer *_autoPresentTimer;	// 28 = 0x1c
	NSTimer *_safetyTimer;	// 32 = 0x20
	NSTimer *_cloudMusicStopTimer;	// 36 = 0x24
	double _autoPresentTimeout;	// 40 = 0x28
	int _playerWindowState;	// 48 = 0x30
	BOOL _screensaverUp;	// 52 = 0x34
	BOOL _playerInOwnWindow;	// 53 = 0x35
	float _savedVolume;	// 56 = 0x38
	BRMediaPlayerController *_externallyPresentedPlayerController;	// 60 = 0x3c
}
@property(assign) double autoPresentTimeout;	// G=0x3deb61; S=0x3deb29; converted property
@property(retain, nonatomic) BRMediaPlayerController *externallyPresentedPlayerController;	// G=0x3df42d; S=0x3df43d; @synthesize=_externallyPresentedPlayerController
+ (void)setSingleton:(id)singleton;	// 0x3dd3e9
+ (id)singleton;	// 0x3dd3d9
- (id)init;	// 0x3dd3f9
- (void)_addPlayerWindowForController:(id)controller;	// 0x3e075d
- (void)_addPlayerWindowUnderShroud;	// 0x3e0b71
- (void)_addShroudWindowWithSelector:(SEL)selector;	// 0x3e0151
- (id)_autoPresentPlayer;	// 0x3e1219
- (void)_autoPresentTimerFired:(id)fired;	// 0x3e1355
- (int)_calculateAccessModeForExtrasAsset:(id)extrasAsset;	// 0x3dfa35
- (void)_cloudMusicStopTimerFired:(id)fired;	// 0x3dfbb9
- (id)_copyAirPlayMetaDataTimeForPlayer:(id)player;	// 0x3dfc4d
- (void)_dataClientStatusChanged:(id)changed;	// 0x3e1ce5
- (void)_deferredPresentPlayerAndOptions:(id)options;	// 0x3dfb75
- (id)_fetchCoverArtForPlayer:(id)player insertPlaceholder:(BOOL)placeholder imageProxy:(id *)proxy;	// 0x3e00a9
- (Class)_findRegisteredPlayerClassForType:(id)type visualContent:(BOOL)content;	// 0x3df63d
- (void)_initializeMediaRemote;	// 0x3df44d
- (void)_networkStatusChanged:(id)changed;	// 0x3e1e89
- (void)_periodicMetadataChanged:(id)changed;	// 0x3e2055
- (void)_playerAssetChanged:(id)changed;	// 0x3e1821
- (void)_playerControllerUserEvent:(id)event;	// 0x3e0e59
- (void)_playerControllerWasPopped:(id)popped;	// 0x3e1ffd
- (void)_playerControllerWasPushed:(id)pushed;	// 0x3e0a45
- (id)_playerInstanceForAssetAtIndex:(long)index inTrackList:(id)trackList;	// 0x3df705
- (id)_playerInstanceForClass:(Class)aClass;	// 0x3df8c5
- (void)_playerStackBankrupt:(id)bankrupt;	// 0x3e0e79
- (void)_playerStateChanged:(id)changed;	// 0x3e1531
- (void)_playerVolumeChanged:(id)changed;	// 0x3e18cd
- (void)_popupDelayTimerFired:(id)fired;	// 0x3e11d9
- (id)_presentedPlayer;	// 0x3e06b1
- (id)_presentedPlayerController;	// 0x3e06d9
- (void)_removePlayerWindow:(BOOL)window;	// 0x3e0c25
- (void)_removePlayerWindowUnderShroud;	// 0x3e0d59
- (void)_removeShroudWindow;	// 0x3e0651
- (void)_removeShroudWindowWithAnimation;	// 0x3e03d9
- (void)_removeTrackPopup;	// 0x3e0eed
- (void)_safetyTimerFired:(id)fired;	// 0x3e05c9
- (void)_screenSaverActivated:(id)activated;	// 0x3e1a85
- (void)_screenSaverDismissed:(id)dismissed;	// 0x3e1af1
- (void)_serverStatusChanged:(id)changed;	// 0x3e1b59
- (void)_showTrackPopupForPlayer:(id)player;	// 0x3e0f51
- (void)_showTrackPopupWithDelayForPlayer:(id)player;	// 0x3e1139
- (void)_simulatePresentationForController:(id)controller;	// 0x3e0ad1
- (BOOL)_stopCurrentPlayerUsingNewPlayer:(id)player;	// 0x3dfacd
- (void)_updateAirPlayMetaData;	// 0x3dffc1
- (void)_updateAirPlayMetaDataTime;	// 0x3dfed9
- (void)_updateAutoPresentPlayer;	// 0x3e1405
- (void)_updateCoverArt:(id)art;	// 0x3e19d5
- (void)_updateTrackPopupForPlayer:(id)player;	// 0x3e0e8d
- (void)_userActivity:(id)activity;	// 0x3e1f79
- (id)activeAudioPlayer;	// 0x3de3f1
- (id)activePlayer;	// 0x3de3a5
- (id)airtunesAudioPlayer;	// 0x3de525
- (id)audioPlayer;	// 0x3de4cd
// converted property getter: - (double)autoPresentTimeout;	// 0x3deb61
- (id)copyNowPlayingMetadataForPlayer:(id)player forAirPlay:(BOOL)airPlay;	// 0x3debd9
- (void)dealloc;	// 0x3dd741
- (void)dismissErrorsIfNeeded;	// 0x3ddab5
- (void)endPresentation;	// 0x3de311
- (void)endPresentationWithError:(id)error;	// 0x3de325
// declared property getter: - (id)externallyPresentedPlayerController;	// 0x3df42d
- (BOOL)handleVolumeRemoteAction:(int)action;	// 0x3de825
- (void)manageExternallyPresentedPlayerController:(id)controller;	// 0x3de2c9
- (BOOL)playerBeingPresented;	// 0x3de361
- (id)playerForATVMediaAssetAtIndex:(long)index inTrackList:(id)trackList error:(id *)error;	// 0x3dda75
- (id)playerForMediaAsset:(id)mediaAsset error:(id *)error;	// 0x3dd8e9
- (id)playerForMediaAssetAtIndex:(long)index inCollection:(id)collection error:(id *)error;	// 0x3dd9d9
- (id)playerForMediaAssetAtIndex:(long)index inTrackList:(id)trackList error:(id *)error;	// 0x3dd959
- (void)presentATVMediaAsset:(id)asset options:(id)options;	// 0x3de175
- (void)presentATVMediaAssetAtIndex:(long)index inItemList:(id)itemList options:(id)options;	// 0x3de1d5
- (void)presentMediaAsset:(id)asset options:(id)options;	// 0x3de0ad
- (void)presentMediaAssetAtIndex:(long)index inCollection:(id)collection options:(id)options;	// 0x3de28d
- (void)presentMediaAssetAtIndex:(long)index inTrackList:(id)trackList options:(id)options;	// 0x3de251
- (void)presentPlayer:(id)player options:(id)options;	// 0x3ddafd
- (BOOL)presentationCanBeScreenSaver;	// 0x3de37d
- (id)presentationWindow;	// 0x3de351
- (void)registerPlayerClass:(Class)aClass;	// 0x3dd865
- (void)removePresentation;	// 0x3de2fd
// converted property setter: - (void)setAutoPresentTimeout:(double)timeout;	// 0x3deb29
// declared property setter: - (void)setExternallyPresentedPlayerController:(id)controller;	// 0x3df43d
- (void)setJavascriptOverlay:(id)overlay;	// 0x3deb79
- (void)setTransportControlDisabled:(BOOL)disabled;	// 0x3deafd
- (void)showVolumeControl;	// 0x3de6c9
- (void)showVolumeControlWithVolume:(float)volume;	// 0x3de709
- (void)stopMediaPlayersWithMediaFromProvider:(id)provider;	// 0x3de5d5
- (id)videoPlayer;	// 0x3de57d
@end

