/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreThemeDefinition.framework/CoreThemeDefinition
 */

#import "CoreThemeDefinition-Structs.h"
#import </libobjc.A.h>

@class CUIMutableCommonAssetStorage, NSArray, NSMutableArray, TDLogger, NSThread, NSString, CoreThemeDocument;

@interface TDDistiller : NSObject {
	CoreThemeDocument *document;	// 4 = 0x4
	CUIMutableCommonAssetStorage *assetStore;	// 8 = 0x8
	NSMutableArray *renditionEntries;	// 12 = 0xc
	NSArray *_changedProductions;	// 16 = 0x10
	NSArray *_mainThreadPerformRunLoopModes;	// 20 = 0x14
	BOOL _incremental;	// 24 = 0x18
	BOOL _cancelled;	// 25 = 0x19
	BOOL _successful;	// 26 = 0x1a
	BOOL _finished;	// 27 = 0x1b
	NSString *_assetStoreVersionString;	// 28 = 0x1c
	int _assetStoreVersionNumber;	// 32 = 0x20
	TDLogger *_logger;	// 36 = 0x24
	NSString *_accumulatedErrorDescription;	// 40 = 0x28
	NSThread *_callbackThread;	// 44 = 0x2c
	id _oldCompletionHandler;	// 48 = 0x30
	id _completionHandler;	// 52 = 0x34
}
@property(retain, nonatomic) NSString *accumulatedErrorDescription;	// G=0x3074eb51; S=0x3074eb61; @synthesize=_accumulatedErrorDescription
@property(assign) int assetStoreVersionNumber;	// G=0x3074ea71; S=0x3074ea85; @synthesize=_assetStoreVersionNumber
@property(copy) NSString *assetStoreVersionString;	// G=0x3074ea4d; S=0x3074ea61; @synthesize=_assetStoreVersionString
@property(retain) NSThread *callbackThread;	// G=0x3074eb71; S=0x3074eb85; @synthesize=_callbackThread
@property(assign, getter=isCancelled) BOOL cancelled;	// G=0x3074ea9d; S=0x3074eab5; @synthesize=_cancelled
@property(copy) id completionHandler;	// G=0x3074ebb9; S=0x3074ebcd; @synthesize=_completionHandler
@property(assign, getter=isFinished) BOOL finished;	// G=0x3074eb21; S=0x3074eb39; @synthesize=_finished
@property(assign, getter=isIncremental) BOOL incremental;	// G=0x3074ea1d; S=0x3074ea35; @synthesize=_incremental
@property(retain) TDLogger *logger;	// G=0x3074eafd; S=0x3074eb11; @synthesize=_logger
@property(copy) id oldCompletionHandler;	// G=0x3074eb95; S=0x3074eba9; @synthesize=_oldCompletionHandler
@property(assign, getter=isSuccessful) BOOL successful;	// G=0x3074eacd; S=0x3074eae5; @synthesize=_successful
- (id)initWithDocument:(id)document outputPath:(id)path;	// 0x3074a8c9
- (id)initWithDocument:(id)document outputPath:(id)path attemptIncremental:(BOOL)incremental;	// 0x3074a921
- (id)initWithDocument:(id)document outputPath:(id)path attemptIncremental:(BOOL)incremental versionString:(id)string;	// 0x3074a945
- (id)initWithDocument:(id)document outputPath:(id)path versionString:(id)string;	// 0x3074a8f1
- (void)_accumulateErrorDescription:(id)description;	// 0x3074a359
- (id)_copyStandardEffectDefinitions;	// 0x3074c1a9
- (void)_distill:(id)distill;	// 0x3074df91
- (void)_distillChanges:(id)changes;	// 0x3074d3e5
- (BOOL)_distillColorDefinitions:(id)definitions;	// 0x3074baf9
- (BOOL)_distillCursorFacetDefinitions:(id)definitions;	// 0x3074c925
- (void)_distillDebuggingInfoForConstants:(id)constants isElement:(BOOL)element;	// 0x3074ce49
- (BOOL)_distillFonts:(id)fonts;	// 0x3074bdc1
- (BOOL)_distillNamedElements:(id)elements;	// 0x3074c1e1
- (id)_keyDataFromKey:(const renditionkeytoken *)key;	// 0x3074ab95
- (id)_keySpecsToRemoveFromKeySpecs:(id)keySpecs;	// 0x3074a779
- (void)_logError:(id)error;	// 0x3074a2a9
- (void)_logErrorAndAccumulateDescription:(id)description;	// 0x3074a3f1
- (void)_logExtra:(id)extra;	// 0x3074a32d
- (void)_logInfo:(id)info;	// 0x3074a301
- (void)_logWarning:(id)warning;	// 0x3074a2d5
- (id)_productionForRenditionSpec:(id)renditionSpec;	// 0x3074b64d
- (BOOL)_recordRenditionEntryFromRendition:(id)rendition;	// 0x3074b6ad
- (unsigned)_removeRenditionsWithKeySpecs:(id)keySpecs;	// 0x3074b241
- (id)_renditionsFromProductions:(id)productions error:(id *)error;	// 0x3074ad4d
- (id)_renditionsWithError:(id *)error;	// 0x3074ac75
- (void)_resetDocumentUuid:(id)uuid;	// 0x3074d389
- (BOOL)_setupWithOutputPath:(id)outputPath attemptIncremental:(BOOL)incremental;	// 0x3074a425
- (BOOL)_sortRenditionEntries;	// 0x3074afa1
- (void)_storeRenditions;	// 0x3074b369
// declared property getter: - (id)accumulatedErrorDescription;	// 0x3074eb51
// declared property getter: - (int)assetStoreVersionNumber;	// 0x3074ea71
// declared property getter: - (id)assetStoreVersionString;	// 0x3074ea4d
- (void)beginDistillWithCompletionHandler:(id)completionHandler;	// 0x3074e5a9
// declared property getter: - (id)callbackThread;	// 0x3074eb71
- (void)cancelDistill;	// 0x3074e8dd
// declared property getter: - (id)completionHandler;	// 0x3074ebb9
- (void)dealloc;	// 0x3074aa29
- (BOOL)distillCursorFacetDefinitions;	// 0x3074cb21
- (BOOL)distillCustomColors;	// 0x3074bd15
- (BOOL)distillCustomFontSizes;	// 0x3074c051
- (BOOL)distillCustomFonts;	// 0x3074bfa5
- (BOOL)distillDebuggingInfo;	// 0x3074d00d
- (BOOL)distillNamedElements;	// 0x3074c38d
- (BOOL)distillRenditions;	// 0x3074b77d
- (void)distillWithCompletionHandler:(id)completionHandler;	// 0x3074e625
- (BOOL)distillZeroCodeArtworkElementAndPartIdentifiers;	// 0x3074c8d5
- (BOOL)distillZeroCodeArtworkInfo:(id)info ofType:(int)type;	// 0x3074c6ad
- (BOOL)distillZeroCodeArtworkInfoOfType:(int)type;	// 0x3074c859
- (id)documentPath;	// 0x3074a9f1
- (void)finishDistillationWithSuccess:(BOOL)success;	// 0x3074d1e1
// declared property getter: - (BOOL)isCancelled;	// 0x3074ea9d
// declared property getter: - (BOOL)isFinished;	// 0x3074eb21
// declared property getter: - (BOOL)isIncremental;	// 0x3074ea1d
// declared property getter: - (BOOL)isSuccessful;	// 0x3074eacd
- (id)keyFormatData;	// 0x3074ab45
// declared property getter: - (id)logger;	// 0x3074eafd
- (void)markDistillationAsFinished;	// 0x3074d225
// declared property getter: - (id)oldCompletionHandler;	// 0x3074eb95
- (void)performSelectorOnCallbackThread:(SEL)thread withObject:(id)object waitUntilDone:(BOOL)done;	// 0x3074e9a5
- (void)saveAndDistillWithCompletionHandler:(id)completionHandler;	// 0x3074e635
// declared property setter: - (void)setAccumulatedErrorDescription:(id)description;	// 0x3074eb61
- (void)setAsset:(id)asset withKey:(const renditionkeytoken *)key fromRenditionSpec:(id)renditionSpec;	// 0x3074aef9
// declared property setter: - (void)setAssetStoreVersionNumber:(int)number;	// 0x3074ea85
// declared property setter: - (void)setAssetStoreVersionString:(id)string;	// 0x3074ea61
// declared property setter: - (void)setCallbackThread:(id)thread;	// 0x3074eb85
// declared property setter: - (void)setCancelled:(BOOL)cancelled;	// 0x3074eab5
// declared property setter: - (void)setCompletionHandler:(id)handler;	// 0x3074ebcd
// declared property setter: - (void)setFinished:(BOOL)finished;	// 0x3074eb39
// declared property setter: - (void)setIncremental:(BOOL)incremental;	// 0x3074ea35
// declared property setter: - (void)setLogger:(id)logger;	// 0x3074eb11
// declared property setter: - (void)setOldCompletionHandler:(id)handler;	// 0x3074eba9
// declared property setter: - (void)setSuccessful:(BOOL)successful;	// 0x3074eae5
- (BOOL)sortAndStoreRenditions;	// 0x3074b5f9
- (void)waitTimerDidFire:(id)waitTimer;	// 0x3074e8d9
- (void)waitUntilFinished;	// 0x3074e749
- (id)zeroCodeArtworkInfoOfType:(int)type error:(id *)error;	// 0x3074c481
@end

