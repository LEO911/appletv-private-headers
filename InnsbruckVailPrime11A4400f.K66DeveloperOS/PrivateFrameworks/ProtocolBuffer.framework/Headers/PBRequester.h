/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer
 */

#import "ProtocolBuffer-Structs.h"
#import "NSURLConnectionDelegate.h"
#import </libobjc.A.h>

@class NSArray, NSMutableData, NSURL, NSURLConnection, NSRunLoop, NSMutableArray, NSDictionary, NSMutableDictionary, PBDataReader, NSString;
@protocol PBRequesterDelegate;

@interface PBRequester : NSObject <NSURLConnectionDelegate> {
	NSURL *_URL;	// 4 = 0x4
	id<PBRequesterDelegate> _delegate;	// 8 = 0x8
	NSURLConnection *_connection;	// 12 = 0xc
	NSRunLoop *_connectionRunLoop;	// 16 = 0x10
	NSMutableData *_data;	// 20 = 0x14
	PBDataReader *_dataReader;	// 24 = 0x18
	unsigned _lastGoodDataOffset;	// 28 = 0x1c
	unsigned _uploadPayloadSize;	// 32 = 0x20
	unsigned _downloadPayloadSize;	// 36 = 0x24
	unsigned long long _timeRequestSent;	// 40 = 0x28
	unsigned long long _timeResponseReceived;	// 48 = 0x30
	int _responseStatusCode;	// 56 = 0x38
	NSMutableArray *_requests;	// 60 = 0x3c
	NSMutableArray *_responses;	// 64 = 0x40
	NSMutableArray *_internalRequests;	// 68 = 0x44
	NSMutableArray *_internalResponses;	// 72 = 0x48
	NSDictionary *_httpResponseHeaders;	// 76 = 0x4c
	NSMutableDictionary *_httpRequestHeaders;	// 80 = 0x50
	double _timeoutSeconds;	// 84 = 0x54
	CFRunLoopTimerRef _timeoutTimer;	// 92 = 0x5c
	NSString *_logRequestToFile;	// 96 = 0x60
	NSString *_logResponseToFile;	// 100 = 0x64
	BOOL _didNotifyRequestCompleted;	// 104 = 0x68
	NSArray *_clientCertificates;	// 108 = 0x6c
	NSDictionary *_connectionProperties;	// 112 = 0x70
	BOOL _shouldHandleCookies;	// 116 = 0x74
	struct {
		unsigned ignoresResponse : 1;
		unsigned loading : 1;
		unsigned needsCancel : 1;
		unsigned responseStatusSet : 1;
		unsigned parsedResponseHeader : 1;
		unsigned delegateDidReceiveResponse : 1;
		unsigned delegateDidFinish : 1;
		unsigned delegateDidCancel : 1;
		unsigned delegateDidFailWithError : 1;
		unsigned paused : 1;
		unsigned resuming : 1;
	} _flags;	// 117 = 0x75
}
@property(retain, nonatomic) NSURL *URL;	// G=0x325884c1; S=0x325884d1; @synthesize=_URL
@property(retain, nonatomic) NSArray *clientCertificates;	// G=0x325885dd; S=0x325885ed; @synthesize=_clientCertificates
@property(retain, nonatomic) NSURLConnection *connection;	// G=0x325884f1; S=0x32588501; @synthesize=_connection
@property(retain, nonatomic) NSRunLoop *connectionRunLoop;	// G=0x32588511; S=0x32588521; @synthesize=_connectionRunLoop
@property(assign, nonatomic) id delegate;	// G=0x325884e1; S=0x32585a41; @synthesize=_delegate
@property(readonly, assign, nonatomic) unsigned downloadPayloadSize;	// G=0x325885cd; @synthesize=_downloadPayloadSize
@property(copy, nonatomic) NSDictionary *httpRequestHeaders;	// G=0x32585da1; S=0x32585db1; 
@property(retain, nonatomic) NSDictionary *httpResponseHeaders;	// G=0x32588531; S=0x32588541; @synthesize=_httpResponseHeaders
@property(assign, nonatomic) BOOL ignoresResponse;	// G=0x32585a11; S=0x32585a25; 
@property(readonly, retain) NSMutableArray *internalRequests;	// G=0x32585c8d; converted property
@property(retain, nonatomic) NSString *logRequestToFile;	// G=0x3258857d; S=0x3258858d; @synthesize=_logRequestToFile
@property(retain, nonatomic) NSString *logResponseToFile;	// G=0x3258859d; S=0x325885ad; @synthesize=_logResponseToFile
@property(assign) BOOL needsCancel;	// G=0x32585b11; S=0x32585b29; 
@property(readonly, assign, nonatomic) unsigned requestResponseTime;	// G=0x32588081; 
@property(readonly, assign, nonatomic) NSArray *requests;	// G=0x32585b5d; 
@property(assign, nonatomic) BOOL shouldHandleCookies;	// G=0x325885fd; S=0x3258860d; @synthesize=_shouldHandleCookies
@property(assign, nonatomic) double timeoutSeconds;	// G=0x32588551; S=0x32588569; @synthesize=_timeoutSeconds
@property(readonly, assign, nonatomic) unsigned uploadPayloadSize;	// G=0x325885bd; @synthesize=_uploadPayloadSize
+ (BOOL)usesEncodedMessages;	// 0x32588291
- (id)initWithURL:(id)url andDelegate:(id)delegate;	// 0x32585741
// declared property getter: - (id)URL;	// 0x325884c1
- (id)_applicationID;	// 0x32585f59
- (void)_cancelNoNotify;	// 0x32586b81
- (void)_cancelWithErrorDomain:(id)errorDomain errorCode:(int)code userInfo:(id)info;	// 0x32586ed1
- (void)_cleanup;	// 0x32585951
- (id)_connectionRunLoop;	// 0x3258628d
- (void)_failWithError:(id)error;	// 0x32586e0d
- (void)_failWithErrorDomain:(id)errorDomain errorCode:(int)code userInfo:(id)info;	// 0x32586e61
- (id)_languageLocale;	// 0x32585e75
- (id)_osVersion;	// 0x32585f8d
- (void)_removeTimeoutTimer;	// 0x325881c5
- (void)_resetTimeoutTimer;	// 0x325881f1
- (void)_sendPayload:(id)payload;	// 0x325862c1
- (void)_serializePayload:(id)payload;	// 0x32586671
- (void)_start;	// 0x32586af1
- (void)_startTimeoutTimer;	// 0x32588111
- (void)_timeoutTimerFired;	// 0x32588239
- (BOOL)_tryParseData;	// 0x3258706d
- (void)addInternalRequest:(id)request;	// 0x32585c9d
- (void)addRequest:(id)request;	// 0x32585b8d
- (void)cancel;	// 0x32586bf1
- (void)cancelWithErrorCode:(int)errorCode;	// 0x32586f5d
- (void)clearRequests;	// 0x32585b6d
// declared property getter: - (id)clientCertificates;	// 0x325885dd
// declared property getter: - (id)connection;	// 0x325884f1
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x32587d55
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x32587635
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x32587435
- (id)connection:(id)connection willSendRequestForEstablishedConnection:(id)establishedConnection properties:(id)properties;	// 0x32587de9
- (void)connectionDidFinishLoading:(id)connection;	// 0x32587889
// declared property getter: - (id)connectionRunLoop;	// 0x32588511
- (void)dealloc;	// 0x325857c5
- (id)decodeResponseData:(id)data;	// 0x325882a1
// declared property getter: - (id)delegate;	// 0x325884e1
// declared property getter: - (unsigned)downloadPayloadSize;	// 0x325885cd
- (void)encodeRequestData:(id)data startRequestCallback:(id)callback;	// 0x32588295
- (void)handleResponse:(id)response forInternalRequest:(id)internalRequest;	// 0x32585d9d
// declared property getter: - (id)httpRequestHeaders;	// 0x32585da1
// declared property getter: - (id)httpResponseHeaders;	// 0x32588531
// declared property getter: - (BOOL)ignoresResponse;	// 0x32585a11
// converted property getter: - (id)internalRequests;	// 0x32585c8d
- (BOOL)isPaused;	// 0x32586db1
// declared property getter: - (id)logRequestToFile;	// 0x3258857d
// declared property getter: - (id)logResponseToFile;	// 0x3258859d
// declared property getter: - (BOOL)needsCancel;	// 0x32585b11
- (CFURLRequestRef)newCFMutableURLRequestWithURL:(id)url;	// 0x325882a9
- (id)newConnectionWithCFURLRequest:(CFURLRequestRef)cfurlrequest delegate:(id)delegate;	// 0x325882d9
- (id)newConnectionWithCFURLRequest:(CFURLRequestRef)cfurlrequest delegate:(id)delegate connectionProperties:(id)properties;	// 0x325883a9
- (void)pause;	// 0x32586c5d
- (BOOL)readResponsePreamble:(id)preamble;	// 0x32586f89
- (id)requestPreamble;	// 0x32586045
// declared property getter: - (unsigned)requestResponseTime;	// 0x32588081
// declared property getter: - (id)requests;	// 0x32585b5d
- (id)responseForInternalRequest:(id)internalRequest;	// 0x32585d11
- (id)responseForRequest:(id)request;	// 0x32585c01
- (void)resume;	// 0x32586dc9
// declared property setter: - (void)setClientCertificates:(id)certificates;	// 0x325885ed
// declared property setter: - (void)setConnection:(id)connection;	// 0x32588501
// declared property setter: - (void)setConnectionRunLoop:(id)loop;	// 0x32588521
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x32585a41
- (void)setHttpRequestHeader:(id)header forKey:(id)key;	// 0x32585df5
// declared property setter: - (void)setHttpRequestHeaders:(id)headers;	// 0x32585db1
// declared property setter: - (void)setHttpResponseHeaders:(id)headers;	// 0x32588541
// declared property setter: - (void)setIgnoresResponse:(BOOL)response;	// 0x32585a25
// declared property setter: - (void)setLogRequestToFile:(id)file;	// 0x3258858d
// declared property setter: - (void)setLogResponseToFile:(id)file;	// 0x325885ad
- (void)setNeedsCancel;	// 0x32585b49
// declared property setter: - (void)setNeedsCancel:(BOOL)cancel;	// 0x32585b29
// declared property setter: - (void)setShouldHandleCookies:(BOOL)handleCookies;	// 0x3258860d
// declared property setter: - (void)setTimeoutSeconds:(double)seconds;	// 0x32588569
// declared property setter: - (void)setURL:(id)url;	// 0x325884d1
// declared property getter: - (BOOL)shouldHandleCookies;	// 0x325885fd
- (void)start;	// 0x32586ae1
- (void)startWithConnectionProperties:(id)connectionProperties;	// 0x32588485
// declared property getter: - (double)timeoutSeconds;	// 0x32588551
- (id)tryReadResponseData:(id)data forRequest:(id)request forResponseClass:(Class)responseClass;	// 0x32586fe5
// declared property getter: - (unsigned)uploadPayloadSize;	// 0x325885bd
- (void)writeRequest:(id)request into:(id)into;	// 0x325861e1
@end

