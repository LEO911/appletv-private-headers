/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects
 */

#import "SAMPMediaEntity.h"

@class SAMPPlaybackInfo, SAMPReleaseInfo, SACalendar, NSString;

@interface SAMPMediaItem : SAMPMediaEntity {
}
@property(copy, nonatomic) NSString *album;	// G=0x326acbdd; S=0x326acbf9; 
@property(copy, nonatomic) NSString *artist;	// G=0x326acc49; S=0x326acc65; 
@property(copy, nonatomic) NSString *composer;	// G=0x326accb5; S=0x326accd1; 
@property(retain, nonatomic) SACalendar *dateAdded;	// G=0x326acd21; S=0x326acd65; 
@property(retain, nonatomic) SACalendar *datePurchased;	// G=0x326acda1; S=0x326acde5; 
@property(copy, nonatomic) NSString *genre;	// G=0x326ace21; S=0x326ace3d; 
@property(assign, nonatomic) int playCount;	// G=0x326ace8d; S=0x326acefd; 
@property(retain, nonatomic) SAMPPlaybackInfo *playbackInfo;	// G=0x326acff5; S=0x326ad039; 
@property(assign, nonatomic) int rating;	// G=0x326acf41; S=0x326acfb1; 
@property(retain, nonatomic) SAMPReleaseInfo *releaseInfo;	// G=0x326ad075; S=0x326ad0b9; 
@property(copy, nonatomic) NSString *sortAlbum;	// G=0x326ad0f5; S=0x326ad111; 
@property(copy, nonatomic) NSString *sortArtist;	// G=0x326ad161; S=0x326ad17d; 
@property(assign, nonatomic) int trackNumber;	// G=0x326ad1cd; S=0x326ad23d; 
+ (id)mediaItem;	// 0x326acb4d
+ (id)mediaItemWithDictionary:(id)dictionary context:(id)context;	// 0x326acb91
// declared property getter: - (id)album;	// 0x326acbdd
// declared property getter: - (id)artist;	// 0x326acc49
// declared property getter: - (id)composer;	// 0x326accb5
// declared property getter: - (id)dateAdded;	// 0x326acd21
// declared property getter: - (id)datePurchased;	// 0x326acda1
- (id)encodedClassName;	// 0x326acb41
// declared property getter: - (id)genre;	// 0x326ace21
- (id)groupIdentifier;	// 0x326acb31
// declared property getter: - (int)playCount;	// 0x326ace8d
// declared property getter: - (id)playbackInfo;	// 0x326acff5
// declared property getter: - (int)rating;	// 0x326acf41
// declared property getter: - (id)releaseInfo;	// 0x326ad075
// declared property setter: - (void)setAlbum:(id)album;	// 0x326acbf9
// declared property setter: - (void)setArtist:(id)artist;	// 0x326acc65
// declared property setter: - (void)setComposer:(id)composer;	// 0x326accd1
// declared property setter: - (void)setDateAdded:(id)added;	// 0x326acd65
// declared property setter: - (void)setDatePurchased:(id)purchased;	// 0x326acde5
// declared property setter: - (void)setGenre:(id)genre;	// 0x326ace3d
// declared property setter: - (void)setPlayCount:(int)count;	// 0x326acefd
// declared property setter: - (void)setPlaybackInfo:(id)info;	// 0x326ad039
// declared property setter: - (void)setRating:(int)rating;	// 0x326acfb1
// declared property setter: - (void)setReleaseInfo:(id)info;	// 0x326ad0b9
// declared property setter: - (void)setSortAlbum:(id)album;	// 0x326ad111
// declared property setter: - (void)setSortArtist:(id)artist;	// 0x326ad17d
// declared property setter: - (void)setTrackNumber:(int)number;	// 0x326ad23d
// declared property getter: - (id)sortAlbum;	// 0x326ad0f5
// declared property getter: - (id)sortArtist;	// 0x326ad161
// declared property getter: - (int)trackNumber;	// 0x326ad1cd
- (void)updateUsingSet:(id)set add:(id)add remove:(id)remove;	// 0x326ad281
@end

