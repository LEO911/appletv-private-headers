/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ExFAT.framework/ExFAT
 */

#import </libobjc.A.h>
#import "ExFAT-Structs.h"
#import "UserFSVolume.h"

@class ExFATFolder, NSString, UserFSBufferCache, ExFATFile;

@interface ExFATVolume : NSObject <UserFSVolume> {
	int _fd;	// 4 = 0x4
	int _dirty;	// 8 = 0x8
	UserFSBufferCache *_bufferCache;	// 12 = 0xc
	BOOL _locked;	// 16 = 0x10
	NSString *_deviceName;	// 20 = 0x14
	unsigned _dev_block_size;	// 24 = 0x18
	unsigned _bytesPerSectorShift;	// 28 = 0x1c
	unsigned _bytesPerClusterShift;	// 32 = 0x20
	unsigned _maxCluster;	// 36 = 0x24
	unsigned _rootCluster;	// 40 = 0x28
	unsigned _rootNumClusters;	// 44 = 0x2c
	unsigned long _dirBlockSize;	// 48 = 0x30
	unsigned short *_upcase;	// 52 = 0x34
	ExFATFile *_bitmap;	// 56 = 0x38
	ExFATFolder *__cachedRootDir;	// 60 = 0x3c
	unsigned long long _fatOffset;	// 64 = 0x40
	unsigned long long _fatSize;	// 72 = 0x48
	unsigned long long _clusterOffset;	// 80 = 0x50
}
@property(assign, nonatomic) __weak ExFATFolder *_cachedRootDir;	// G=0x309ac83d; S=0x309ac85d; @synthesize=__cachedRootDir
@property(retain, nonatomic) ExFATFile *bitmap;	// G=0x309ac805; S=0x309ac815; @synthesize=_bitmap
@property(assign, nonatomic) unsigned bytesPerClusterShift;	// G=0x309ac6d1; S=0x309ac6e1; @synthesize=_bytesPerClusterShift
@property(assign, nonatomic) unsigned bytesPerSectorShift;	// G=0x309ac6b1; S=0x309ac6c1; @synthesize=_bytesPerSectorShift
@property(assign, nonatomic) unsigned long long clusterOffset;	// G=0x309ac7a9; S=0x309ac7c1; @synthesize=_clusterOffset
@property(assign, nonatomic) unsigned dev_block_size;	// G=0x309ac691; S=0x309ac6a1; @synthesize=_dev_block_size
@property(copy, nonatomic) NSString *deviceName;	// G=0x309ac64d; S=0x309ac661; @synthesize=_deviceName
@property(readonly, assign, nonatomic) unsigned long dirBlockSize;	// G=0x309ac7d5; @synthesize=_dirBlockSize
@property(assign, nonatomic) unsigned long long fatOffset;	// G=0x309ac751; S=0x309ac769; @synthesize=_fatOffset
@property(assign, nonatomic) unsigned long long fatSize;	// G=0x309ac77d; S=0x309ac795; @synthesize=_fatSize
@property(assign, nonatomic, getter=isLocked) BOOL locked;	// G=0x309ac671; S=0x309ac681; @synthesize=_locked
@property(assign, nonatomic) unsigned maxCluster;	// G=0x309ac6f1; S=0x309ac701; @synthesize=_maxCluster
@property(assign, nonatomic) unsigned rootCluster;	// G=0x309ac711; S=0x309ac721; @synthesize=_rootCluster
@property(assign, nonatomic) unsigned rootNumClusters;	// G=0x309ac731; S=0x309ac741; @synthesize=_rootNumClusters
@property(assign, nonatomic) unsigned short *upcase;	// G=0x309ac7e5; S=0x309ac7f5; @synthesize=_upcase
- (id)initWithDeviceName:(id)deviceName;	// 0x309aa969
- (void).cxx_destruct;	// 0x309ac871
// declared property getter: - (id)_cachedRootDir;	// 0x309ac83d
// declared property getter: - (id)bitmap;	// 0x309ac805
// declared property getter: - (unsigned)bytesPerClusterShift;	// 0x309ac6d1
// declared property getter: - (unsigned)bytesPerSectorShift;	// 0x309ac6b1
- (BOOL)close;	// 0x309ac54d
// declared property getter: - (unsigned long long)clusterOffset;	// 0x309ac7a9
- (unsigned)contiguousClustersInChain:(unsigned)chain nextCluster:(unsigned *)cluster;	// 0x309aa659
- (void)dealloc;	// 0x309ac5b9
- (BOOL)deleteFiles:(id)files;	// 0x309ac151
// declared property getter: - (unsigned)dev_block_size;	// 0x309ac691
// declared property getter: - (id)deviceName;	// 0x309ac64d
// declared property getter: - (unsigned long)dirBlockSize;	// 0x309ac7d5
// declared property getter: - (unsigned long long)fatOffset;	// 0x309ac751
// declared property getter: - (unsigned long long)fatSize;	// 0x309ac77d
- (BOOL)flush;	// 0x309ac429
- (BOOL)freeChainAt:(unsigned)at;	// 0x309abdd5
- (BOOL)freeExtentAt:(unsigned)at count:(unsigned)count;	// 0x309abaf1
- (id)getBufferAtOffset:(unsigned long long)offset ofLength:(unsigned long)length error:(int *)error;	// 0x309aa5b5
// declared property getter: - (BOOL)isLocked;	// 0x309ac671
- (id)itemAtPath:(id)path;	// 0x309abfb9
// declared property getter: - (unsigned)maxCluster;	// 0x309ac6f1
- (unsigned long long)physicalOffsetForCluster:(unsigned)cluster;	// 0x309aa5f5
- (long)readBytes:(void *)bytes ofLength:(unsigned long)length atOffset:(unsigned long long)offset;	// 0x309aa0e9
- (BOOL)readUpcaseTable:(exfat_direntry_upcase *)table;	// 0x309ab761
- (void)releaseBuffer:(id)buffer;	// 0x309aa5d5
// declared property getter: - (unsigned)rootCluster;	// 0x309ac711
- (id)rootDir;	// 0x309abeb5
- (id)rootDirectory;	// 0x309abfa9
// declared property getter: - (unsigned)rootNumClusters;	// 0x309ac731
// declared property setter: - (void)setBitmap:(id)bitmap;	// 0x309ac815
// declared property setter: - (void)setBytesPerClusterShift:(unsigned)shift;	// 0x309ac6e1
// declared property setter: - (void)setBytesPerSectorShift:(unsigned)shift;	// 0x309ac6c1
// declared property setter: - (void)setClusterOffset:(unsigned long long)offset;	// 0x309ac7c1
// declared property setter: - (void)setDev_block_size:(unsigned)size;	// 0x309ac6a1
// declared property setter: - (void)setDeviceName:(id)name;	// 0x309ac661
- (int)setDirty:(BOOL)dirty;	// 0x309ab621
// declared property setter: - (void)setFatOffset:(unsigned long long)offset;	// 0x309ac769
// declared property setter: - (void)setFatSize:(unsigned long long)size;	// 0x309ac795
// declared property setter: - (void)setLocked:(BOOL)locked;	// 0x309ac681
// declared property setter: - (void)setMaxCluster:(unsigned)cluster;	// 0x309ac701
// declared property setter: - (void)setRootCluster:(unsigned)cluster;	// 0x309ac721
// declared property setter: - (void)setRootNumClusters:(unsigned)clusters;	// 0x309ac741
// declared property setter: - (void)setUpcase:(unsigned short *)upcase;	// 0x309ac7f5
// declared property setter: - (void)set_cachedRootDir:(id)dir;	// 0x309ac85d
// declared property getter: - (unsigned short *)upcase;	// 0x309ac7e5
- (long)writeBytes:(void *)bytes ofLength:(unsigned long)length atOffset:(unsigned long long)offset;	// 0x309aa319
@end

