/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRLoadable.h"
#import "MRRenderable.h"
#import </libobjc.A.h>

@class MRAudioPlayer, MRLayer, MRLayerEffect, MCSlide, NSDictionary, NSConditionLock, NSLock, NSString, MRFrame, MRImage, NSInvocationOperation;

@interface MRSlideProvider : NSObject <MRLoadable, MRRenderable> {
	CGSize mDefaultSize;	// 4 = 0x4
	float mStillTime;	// 12 = 0xc
	NSString *mImageSizeScript;	// 16 = 0x10
	NSDictionary *mEffectAttributes;	// 20 = 0x14
	NSString *mShowTimeScript;	// 24 = 0x18
	NSInvocationOperation *mPreloadOperation;	// 28 = 0x1c
	NSLock *mPreloadOperationLock;	// 32 = 0x20
	NSConditionLock *mPreloadSemaphore;	// 36 = 0x24
	MRFrame *mFrame;	// 40 = 0x28
	MRImage *mOriginalImage;	// 44 = 0x2c
	MRImage *mOutputImage;	// 48 = 0x30
	CGSize mRequestedSize;	// 52 = 0x34
	double mShowTime;	// 60 = 0x3c
	double mShowDuration;	// 68 = 0x44
	double mSlideStartTime;	// 76 = 0x4c
	double mSlideDuration;	// 84 = 0x54
	MRLayerEffect *mEffectLayer;	// 92 = 0x5c
	MCSlide *mSlide;	// 96 = 0x60
	int mKenBurnsType;	// 100 = 0x64
	NSString *mAssetPath;	// 104 = 0x68
	float mOriginalImageAspectRatio;	// 108 = 0x6c
	MRLayer *mSlideLayer;	// 112 = 0x70
	CGSize mImageSize;	// 116 = 0x74
	CGSize mLastImageSize;	// 124 = 0x7c
	double mLastTime;	// 132 = 0x84
	CGSize mLastDaSize;	// 140 = 0x8c
	CGSize mSizeFactor;	// 148 = 0x94
	BOOL mIsAnimatedGIF;	// 156 = 0x9c
	MCSlide *mSlideCopy;	// 160 = 0xa0
	unsigned mSlideIndex;	// 164 = 0xa4
	MRAudioPlayer *mFakeAudioPlayer;	// 168 = 0xa8
	unsigned mFlags;	// 172 = 0xac
}
@property(readonly, assign) BOOL canPlay;	// G=0x2fd7e6a5; 
@property(assign, nonatomic) CGSize defaultSize;	// G=0x2fd83211; S=0x2fd7e441; @synthesize=mDefaultSize
@property(retain, nonatomic) NSDictionary *effectAttributes;	// G=0x2fd8325d; S=0x2fd7e5c1; @synthesize=mEffectAttributes
@property(readonly, assign) MRFrame *frame;	// G=0x2fd83355; @synthesize=mFrame
@property(readonly, assign) BOOL hasFilters;	// G=0x2fd7e789; 
@property(readonly, assign, nonatomic) float imageAspectRatio;	// G=0x2fd7e431; 
@property(copy, nonatomic) NSString *imageSizeScript;	// G=0x2fd83249; S=0x2fd7e54d; @synthesize=mImageSizeScript
@property(readonly, assign, nonatomic) BOOL isAlphaFriendly;	// G=0x2fd806a5; 
@property(readonly, assign, nonatomic) BOOL isInfinite;	// G=0x2fd806a9; 
@property(readonly, assign, nonatomic) BOOL isLoaded;	// G=0x2fd7e6e9; 
@property(assign, nonatomic) BOOL isMonochromatic;	// G=0x2fd7e4a5; S=0x2fd7e4b9; 
@property(readonly, assign, nonatomic) BOOL isNative3D;	// G=0x2fd805a9; 
@property(readonly, assign, nonatomic) BOOL isOpaque;	// G=0x2fd805ad; 
@property(assign, nonatomic) BOOL isPlaying;	// G=0x2fd7e6d5; S=0x2fd7f365; 
@property(assign, nonatomic) BOOL isStill;	// G=0x2fd7e619; S=0x2fd7e62d; 
@property(assign) int kenBurnsType;	// G=0x2fd83329; S=0x2fd8333d; @synthesize=mKenBurnsType
@property(assign, nonatomic) BOOL needsToUpdateLayout;	// G=0x2fd7e73d; S=0x2fd7e741; 
@property(readonly, assign, nonatomic) CGSize requestedSize;	// G=0x2fd832d5; @synthesize=mRequestedSize
@property(assign, nonatomic) double showDuration;	// G=0x2fd832bd; S=0x2fd7ec79; @synthesize=mShowDuration
@property(assign, nonatomic) double showTime;	// G=0x2fd83291; S=0x2fd832a9; @synthesize=mShowTime
@property(copy, nonatomic) NSString *showTimeScript;	// G=0x2fd8326d; S=0x2fd83281; @synthesize=mShowTimeScript
@property(assign, nonatomic) CGSize sizeFactor;	// G=0x2fd832ed; S=0x2fd83305; @synthesize=mSizeFactor
@property(retain, nonatomic) MCSlide *slide;	// G=0x2fd83319; S=0x2fd7efe9; @synthesize=mSlide
@property(readonly, assign, nonatomic) double slideDuration;	// G=0x2fd83381; @synthesize=mSlideDuration
@property(assign, nonatomic) BOOL slideIsReadonly;	// G=0x2fd7e66d; S=0x2fd7e681; 
@property(readonly, assign, nonatomic) double slideStartTime;	// G=0x2fd83369; @synthesize=mSlideStartTime
@property(assign, nonatomic) float stillTime;	// G=0x2fd83229; S=0x2fd83239; @synthesize=mStillTime
@property(assign, nonatomic) double time;	// G=0x2fd7f449; S=0x2fd7f461; 
@property(assign, nonatomic) BOOL useMipmapping;	// G=0x2fd7e4f9; S=0x2fd7e50d; 
+ (void)applyKenBurnsForSlide:(id)slide inPlug:(id)plug forSize:(CGSize)size atTime:(double)time withTargetSize:(CGSize)targetSize kenBurnsType:(int)type translation:(CGPoint *)translation scale:(float *)scale rotation:(float *)rotation;	// 0x2fd83399
- (id)initWithEffectLayer:(id)effectLayer;	// 0x2fd7df61
- (void)_computeImageSizeInContext:(id)context withArguments:(id)arguments;	// 0x2fd806ad
- (void)_loadTextureWithArguments:(id)arguments;	// 0x2fd7ff89
- (void)_unloadIfNotUpdatingLive;	// 0x2fd7f5a5
- (BOOL)beginLiveUpdate;	// 0x2fd7f549
// declared property getter: - (BOOL)canPlay;	// 0x2fd7e6a5
- (void)cancelLoading;	// 0x2fd804f9
- (void)cleanup;	// 0x2fd7e139
- (void)dealloc;	// 0x2fd7e095
// declared property getter: - (CGSize)defaultSize;	// 0x2fd83211
// declared property getter: - (id)effectAttributes;	// 0x2fd8325d
- (BOOL)endLiveUpdate;	// 0x2fd7f565
- (void)finalize;	// 0x2fd7e0f9
// declared property getter: - (id)frame;	// 0x2fd83355
- (CGSize)framedImageSizeAtIndex:(unsigned long)index aspectRatio:(float)ratio;	// 0x2fd7e7d5
// declared property getter: - (BOOL)hasFilters;	// 0x2fd7e789
// declared property getter: - (float)imageAspectRatio;	// 0x2fd7e431
// declared property getter: - (id)imageSizeScript;	// 0x2fd83249
// declared property getter: - (BOOL)isAlphaFriendly;	// 0x2fd806a5
// declared property getter: - (BOOL)isInfinite;	// 0x2fd806a9
// declared property getter: - (BOOL)isLoaded;	// 0x2fd7e6e9
- (BOOL)isLoadedForTime:(double)time;	// 0x2fd7f6cd
// declared property getter: - (BOOL)isMonochromatic;	// 0x2fd7e4a5
// declared property getter: - (BOOL)isNative3D;	// 0x2fd805a9
// declared property getter: - (BOOL)isOpaque;	// 0x2fd805ad
// declared property getter: - (BOOL)isPlaying;	// 0x2fd7e6d5
// declared property getter: - (BOOL)isStill;	// 0x2fd7e619
// declared property getter: - (int)kenBurnsType;	// 0x2fd83329
- (void)loadForTime:(double)time inContext:(id)context withArguments:(id)arguments now:(BOOL)now;	// 0x2fd7f6e1
- (void)loadTextureWithArguments:(id)arguments;	// 0x2fd80051
- (void)loadWithArguments:(id)arguments;	// 0x2fd7fd79
// declared property getter: - (BOOL)needsToUpdateLayout;	// 0x2fd7e73d
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x2fd7e2a1
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fd830c9
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fd81535
- (void)printFlags;	// 0x2fd83a75
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fd819f5
// declared property getter: - (CGSize)requestedSize;	// 0x2fd832d5
- (id)retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fd81a09
// declared property setter: - (void)setDefaultSize:(CGSize)size;	// 0x2fd7e441
// declared property setter: - (void)setEffectAttributes:(id)attributes;	// 0x2fd7e5c1
// declared property setter: - (void)setImageSizeScript:(id)script;	// 0x2fd7e54d
// declared property setter: - (void)setIsMonochromatic:(BOOL)monochromatic;	// 0x2fd7e4b9
// declared property setter: - (void)setIsPlaying:(BOOL)playing;	// 0x2fd7f365
// declared property setter: - (void)setIsStill:(BOOL)still;	// 0x2fd7e62d
// declared property setter: - (void)setKenBurnsType:(int)type;	// 0x2fd8333d
// declared property setter: - (void)setNeedsToUpdateLayout:(BOOL)updateLayout;	// 0x2fd7e741
// declared property setter: - (void)setShowDuration:(double)duration;	// 0x2fd7ec79
// declared property setter: - (void)setShowTime:(double)time;	// 0x2fd832a9
// declared property setter: - (void)setShowTimeScript:(id)script;	// 0x2fd83281
// declared property setter: - (void)setSizeFactor:(CGSize)factor;	// 0x2fd83305
// declared property setter: - (void)setSlide:(id)slide;	// 0x2fd7efe9
// declared property setter: - (void)setSlideIsReadonly:(BOOL)readonly;	// 0x2fd7e681
// declared property setter: - (void)setStillTime:(float)time;	// 0x2fd83239
// declared property setter: - (void)setTime:(double)time;	// 0x2fd7f461
// declared property setter: - (void)setUseMipmapping:(BOOL)mipmapping;	// 0x2fd7e50d
// declared property getter: - (double)showDuration;	// 0x2fd832bd
// declared property getter: - (double)showTime;	// 0x2fd83291
// declared property getter: - (id)showTimeScript;	// 0x2fd8326d
// declared property getter: - (CGSize)sizeFactor;	// 0x2fd832ed
// declared property getter: - (id)slide;	// 0x2fd83319
// declared property getter: - (double)slideDuration;	// 0x2fd83381
// declared property getter: - (BOOL)slideIsReadonly;	// 0x2fd7e66d
// declared property getter: - (double)slideStartTime;	// 0x2fd83369
// declared property getter: - (float)stillTime;	// 0x2fd83229
// declared property getter: - (double)time;	// 0x2fd7f449
- (CGSize)unframedImageSizeForAspectRatio:(float)aspectRatio frameID:(id)anId andFrameAttributes:(id)attributes atIndex:(unsigned long)index framedImageSize:(CGSize *)size;	// 0x2fd7ea21
- (void)unload;	// 0x2fd80241
- (void)updateShowTimeAndDurationWithPlug:(id)plug andAttributes:(id)attributes;	// 0x2fd7ecb9
- (BOOL)updateStuffWithAssetManager:(id)assetManager;	// 0x2fd80bed
// declared property getter: - (BOOL)useMipmapping;	// 0x2fd7e4f9
@end

