/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MPLayer.h"
#import "MPEffectSupport.h"
#import "MPEffectSupportPrivate.h"

@class NSString, MCContainerEffect, NSArray, NSMutableDictionary, NSMutableArray;
@protocol MZEffectTiming;

@interface MPLayerEffect : MPLayer <MPEffectSupportPrivate, MPEffectSupport> {
	MCContainerEffect *_layerEffect;	// 48 = 0x30
	NSString *_effectID;	// 52 = 0x34
	NSString *_presetID;	// 56 = 0x38
	NSMutableArray *_slides;	// 60 = 0x3c
	NSMutableArray *_secondarySlides;	// 64 = 0x40
	NSMutableArray *_texts;	// 68 = 0x44
	NSMutableDictionary *_effectAttributes;	// 72 = 0x48
	int _randomSeed;	// 76 = 0x4c
	NSObject<MZEffectTiming> *_effectTiming;	// 80 = 0x50
	BOOL _supportsEffectTiming;	// 84 = 0x54
	BOOL _skipEffectTiming;	// 85 = 0x55
	int _liveIndex;	// 88 = 0x58
}
@property(retain) NSMutableDictionary *effectAttributes;	// G=0x2fbba351; S=0x2fbba3e9; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x2fbba099; S=0x2fbba0a9; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x2fbbcf05; @synthesize=_effectTiming
@property(assign) int liveIndex;	// G=0x2fbbcf15; S=0x2fbbcf25; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x2fbba1d9; S=0x2fbba1fd; 
@property(assign) int randomSeed;	// G=0x2fbba2b1; S=0x2fbba2c1; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x2fbbb6e9; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x2fbba731; 
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x2fbbbd65; 
+ (id)layerEffectWithEffectID:(id)effectID;	// 0x2fbb9319
+ (id)layerEffectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x2fbb9355
+ (id)layerEffectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x2fbb9395
+ (id)layerEffectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x2fbb93d5
- (id)init;	// 0x2fbb9241
- (id)initWithCoder:(id)coder;	// 0x2fbb98f1
- (id)initWithEffectID:(id)effectID;	// 0x2fbb941d
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x2fbb9431
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x2fbb9545
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x2fbb965d
- (id)_effectAttributes;	// 0x2fbbcadd
- (void)_updateEffectTiming;	// 0x2fbbc95d
- (void)_updateTiming:(BOOL)timing;	// 0x2fbbcb85
- (void)addSecondarySlide:(id)slide;	// 0x2fbbb6f9
- (void)addSecondarySlides:(id)slides;	// 0x2fbbb759
- (void)addSlide:(id)slide;	// 0x2fbba741
- (void)addSlides:(id)slides;	// 0x2fbba7a1
- (void)addText:(id)text;	// 0x2fbbbd75
- (void)addTexts:(id)texts;	// 0x2fbbbdd5
- (id)allSlides:(BOOL)slides;	// 0x2fbbcd41
- (void)applyFormattedAttributes;	// 0x2fbbd8f1
- (id)container;	// 0x2fbbcf71
- (void)copySecondarySlides:(id)slides;	// 0x2fbbe645
- (void)copySlides:(id)slides;	// 0x2fbbe529
- (void)copyTexts:(id)texts;	// 0x2fbbe761
- (id)copyWithZone:(NSZone *)zone;	// 0x2fbb9f85
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x2fbbd5d1
- (void)createSlidesWithPaths:(id)paths;	// 0x2fbbd421
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x2fbbd031
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x2fbbd055
- (void)dealloc;	// 0x2fbb9e61
- (id)description;	// 0x2fbb9db1
- (id)effectAttributeForKey:(id)key;	// 0x2fbba455
// converted property getter: - (id)effectAttributes;	// 0x2fbba351
// declared property getter: - (id)effectID;	// 0x2fbba099
// declared property getter: - (id)effectTiming;	// 0x2fbbcf05
- (void)encodeWithCoder:(id)coder;	// 0x2fbb978d
- (void)finalize;	// 0x2fbb9e21
- (id)formattedAttributes;	// 0x2fbbd7ed
- (double)fullDuration;	// 0x2fbbd021
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x2fbbb79d
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x2fbba7e5
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x2fbbbe19
- (BOOL)isLive;	// 0x2fbbd781
// converted property getter: - (int)liveIndex;	// 0x2fbbcf15
- (double)lowestDisplayTime;	// 0x2fbbcf39
- (double)mainDuration;	// 0x2fbbc495
- (int)maxNumberOfSecondarySlides;	// 0x2fbbcfd1
- (int)maxNumberOfSlides;	// 0x2fbbcf81
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x2fbbb619
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x2fbbc361
// declared property getter: - (id)presetID;	// 0x2fbba1d9
// converted property getter: - (int)randomSeed;	// 0x2fbba2b1
- (void)removeAllSecondarySlides;	// 0x2fbbc431
- (void)removeAllSlides;	// 0x2fbbb5b5
- (void)removeAllTexts;	// 0x2fbbc301
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x2fbbbbe1
- (void)removeSlidesAtIndices:(id)indices;	// 0x2fbbb215
- (void)removeTextsAtIndices:(id)indices;	// 0x2fbbc19d
// converted property getter: - (id)secondarySlides;	// 0x2fbbb6e9
- (void)setDuration:(double)duration;	// 0x2fbbc4f5
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x2fbba5a1
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x2fbba3e9
// declared property setter: - (void)setEffectID:(id)anId;	// 0x2fbba0a9
- (void)setLayerEffect:(id)effect;	// 0x2fbbdcfd
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x2fbbcf25
- (void)setPhaseInDuration:(double)duration;	// 0x2fbbc66d
- (void)setPhaseOutDuration:(double)duration;	// 0x2fbbc7e5
// declared property setter: - (void)setPresetID:(id)anId;	// 0x2fbba1fd
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x2fbba2c1
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x2fbbd7c9
- (id)slideForMCSlide:(id)mcslide;	// 0x2fbbe87d
- (id)slideInformation;	// 0x2fbbd9c9
// declared property getter: - (id)slides;	// 0x2fbba731
// declared property getter: - (id)texts;	// 0x2fbbbd65
- (void)updateTiming;	// 0x2fbbd7d9
@end

