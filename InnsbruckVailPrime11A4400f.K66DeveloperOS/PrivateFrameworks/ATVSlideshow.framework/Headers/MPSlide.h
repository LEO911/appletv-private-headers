/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import </libobjc.A.h>
#import "MPFilterSupport.h"

@class MPLayerGroup, MCSlide, NSString, NSMutableDictionary, MPFrame, NSMutableArray;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport> {
	MPFrame *_frame;	// 4 = 0x4
	NSMutableDictionary *_attributes;	// 8 = 0x8
	NSString *_path;	// 12 = 0xc
	MPLayerGroup *_layerGroup;	// 16 = 0x10
	NSMutableArray *_filters;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCSlide *_slide;	// 28 = 0x1c
	NSObject<MPEffectSupport> *_parent;	// 32 = 0x20
	double _startTime;	// 36 = 0x24
	double _duration;	// 44 = 0x2c
	double _audioFadeInDuration;	// 52 = 0x34
	double _audioFadeOutDuration;	// 60 = 0x3c
	double _audioDuckInDuration;	// 68 = 0x44
	double _audioDuckOutDuration;	// 76 = 0x4c
	double _audioDuckLevel;	// 84 = 0x54
	float _scale;	// 92 = 0x5c
	float _rotation;	// 96 = 0x60
	CGPoint _center;	// 100 = 0x64
	float _audioVolume;	// 108 = 0x6c
	NSString *_sizingMode;	// 112 = 0x70
	unsigned _mediaType;	// 116 = 0x74
	BOOL _isSecondary;	// 120 = 0x78
	BOOL _mirrorToDuplicatePaths;	// 121 = 0x79
	double _cachedShowTime;	// 124 = 0x7c
	double _cachedShowDuration;	// 132 = 0x84
	CGSize _cachedSize;	// 140 = 0x8c
}
@property(copy, nonatomic) NSString *absolutePath;	// G=0x2fbd1f01; S=0x2fbd1f69; 
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x2fbd2fe9; converted property
@property(assign, nonatomic) double audioDuckInDuration;	// G=0x2fbd44e1; S=0x2fbd44f9; 
@property(assign, nonatomic) float audioDuckLevel;	// G=0x2fbd4591; S=0x2fbd45ad; 
@property(assign, nonatomic) double audioDuckOutDuration;	// G=0x2fbd4539; S=0x2fbd4551; 
@property(assign, nonatomic) double audioFadeInDuration;	// G=0x2fbd4431; S=0x2fbd4449; 
@property(assign, nonatomic) double audioFadeOutDuration;	// G=0x2fbd4489; S=0x2fbd44a1; 
@property(assign, nonatomic) float audioVolume;	// G=0x2fbd43c5; S=0x2fbd43f5; 
@property(assign, nonatomic) CGPoint center;	// G=0x2fbd4d75; S=0x2fbd4d8d; 
@property(assign, nonatomic) double duration;	// G=0x2fbd4285; S=0x2fbd4355; 
@property(readonly, retain) NSMutableArray *filters;	// G=0x2fbd2369; converted property
@property(retain, nonatomic) MPFrame *frame;	// G=0x2fbd1c41; S=0x2fbd1c51; 
@property(assign) BOOL isSecondary;	// G=0x2fbd4e5d; S=0x2fbd5725; converted property
@property(retain, nonatomic) MPLayerGroup *layerGroup;	// G=0x2fbd2235; S=0x2fbd2245; 
@property(retain) id parent;	// G=0x2fbd4c35; S=0x2fbd6e61; converted property
@property(copy, nonatomic) NSString *path;	// G=0x2fbd1cf5; S=0x2fbd1d05; 
@property(assign, nonatomic) float rotation;	// G=0x2fbd4e11; S=0x2fbd4e21; 
@property(assign, nonatomic) float scale;	// G=0x2fbd4dc5; S=0x2fbd4dd5; 
@property(retain) id scriptingAnimations;	// G=0x2fbd7111; S=0x2fbd7461; converted property
@property(retain) id scriptingFrame;	// G=0x2fbd76a9; S=0x2fbd776d; converted property
@property(copy, nonatomic) NSString *sizingMode;	// G=0x2fbd45f1; S=0x2fbd4761; 
@property(retain) MCSlide *slide;	// G=0x2fbd53d5; S=0x2fbd5fe9; converted property
@property(assign, nonatomic) double startTime;	// G=0x2fbd4169; S=0x2fbd4215; 
+ (id)slide;	// 0x2fbd0579
+ (id)slideWithPath:(id)path;	// 0x2fbd05b1
- (id)init;	// 0x2fbd05ed
- (id)initWithCoder:(id)coder;	// 0x2fbd0f01
- (id)initWithLayerGroup:(id)layerGroup;	// 0x2fbd1845
- (id)initWithPath:(id)path;	// 0x2fbd1801
// declared property getter: - (id)absolutePath;	// 0x2fbd1f01
- (id)action;	// 0x2fbd5665
- (void)addFilter:(id)filter;	// 0x2fbd2379
- (void)addFilters:(id)filters;	// 0x2fbd23d9
- (id)animationPathForKey:(id)key;	// 0x2fbd3251
// converted property getter: - (id)animationPaths;	// 0x2fbd2fe9
- (float)aspectRatio;	// 0x2fbd4c1d
// declared property getter: - (double)audioDuckInDuration;	// 0x2fbd44e1
// declared property getter: - (float)audioDuckLevel;	// 0x2fbd4591
// declared property getter: - (double)audioDuckOutDuration;	// 0x2fbd4539
// declared property getter: - (double)audioFadeInDuration;	// 0x2fbd4431
// declared property getter: - (double)audioFadeOutDuration;	// 0x2fbd4489
// declared property getter: - (float)audioVolume;	// 0x2fbd43c5
- (BOOL)canZoom;	// 0x2fbd55c9
// declared property getter: - (CGPoint)center;	// 0x2fbd4d75
- (void)cleanup;	// 0x2fbd5b75
- (void)copyAnimationPaths:(id)paths;	// 0x2fbd5a65
- (void)copyFilters:(id)filters;	// 0x2fbd5925
- (void)copyFrame:(id)frame;	// 0x2fbd584d
- (void)copyLayerGroup:(id)group;	// 0x2fbd58b9
- (void)copyVars:(id)vars;	// 0x2fbd5735
- (id)copyWithZone:(NSZone *)zone;	// 0x2fbd18a5
- (int)countOfFilter;	// 0x2fbd6f91
- (void)dealloc;	// 0x2fbd1b29
- (id)description;	// 0x2fbd19a1
- (BOOL)determineShowTime:(double *)time showDuration:(double *)duration;	// 0x2fbd5d01
- (void)dump;	// 0x2fbd53e5
- (void)duplicateAnimationPaths;	// 0x2fbd6b8d
// declared property getter: - (double)duration;	// 0x2fbd4285
- (void)encodeWithCoder:(id)coder;	// 0x2fbd07c1
// converted property getter: - (id)filters;	// 0x2fbd2369
- (void)finalize;	// 0x2fbd1ae9
// declared property getter: - (id)frame;	// 0x2fbd1c41
- (id)fullDebugLog;	// 0x2fbd540d
- (BOOL)hasMovie;	// 0x2fbd4f05
- (int)index;	// 0x2fbd4a21
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x2fbd241d
- (void)insertObject:(id)object inFilterAtIndex:(int)index;	// 0x2fbd6fd1
- (BOOL)isBreakInDocument:(id)document;	// 0x2fbd6ed1
// converted property getter: - (BOOL)isSecondary;	// 0x2fbd4e5d
- (id)keyframedAnimationPathForKey:(id)key;	// 0x2fbd3431
// declared property getter: - (id)layerGroup;	// 0x2fbd2235
- (int)liveIndex;	// 0x2fbd4b59
- (double)maxDuration;	// 0x2fbd55b1
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x2fbd2d25
- (id)nearestLayer;	// 0x2fbd5c7d
- (BOOL)needsStyleUpdateOnSlideChange;	// 0x2fbd5019
- (BOOL)needsTimingUpdateOnSlideChange;	// 0x2fbd51d9
- (id)objectInFilterAtIndex:(int)index;	// 0x2fbd6fb1
- (float)originalAspectRatio;	// 0x2fbd5399
// converted property getter: - (id)parent;	// 0x2fbd4c35
- (id)parentDocument;	// 0x2fbd5c5d
- (id)parentEffect;	// 0x2fbd4c25
- (id)parentSubtitleEffect;	// 0x2fbd4c45
// declared property getter: - (id)path;	// 0x2fbd1cf5
- (void)removeAllFilters;	// 0x2fbd2c81
- (void)removeAnimationPathForKey:(id)key;	// 0x2fbd383d
- (void)removeFiltersAtIndices:(id)indices;	// 0x2fbd2961
- (void)removeObjectFromFilterAtIndex:(int)index;	// 0x2fbd7039
- (void)replaceObjectInFilterAtIndex:(int)index withObject:(id)object;	// 0x2fbd709d
- (void)resetCachedTimes;	// 0x2fbd56e5
// declared property getter: - (float)rotation;	// 0x2fbd4e11
// declared property getter: - (float)scale;	// 0x2fbd4dc5
// converted property getter: - (id)scriptingAnimations;	// 0x2fbd7111
// converted property getter: - (id)scriptingFrame;	// 0x2fbd76a9
// declared property setter: - (void)setAbsolutePath:(id)path;	// 0x2fbd1f69
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x2fbd3491
// declared property setter: - (void)setAudioDuckInDuration:(double)duration;	// 0x2fbd44f9
// declared property setter: - (void)setAudioDuckLevel:(float)level;	// 0x2fbd45ad
// declared property setter: - (void)setAudioDuckOutDuration:(double)duration;	// 0x2fbd4551
// declared property setter: - (void)setAudioFadeInDuration:(double)duration;	// 0x2fbd4449
// declared property setter: - (void)setAudioFadeOutDuration:(double)duration;	// 0x2fbd44a1
// declared property setter: - (void)setAudioVolume:(float)volume;	// 0x2fbd43f5
// declared property setter: - (void)setCenter:(CGPoint)center;	// 0x2fbd4d8d
// declared property setter: - (void)setDuration:(double)duration;	// 0x2fbd4355
// declared property setter: - (void)setFrame:(id)frame;	// 0x2fbd1c51
// converted property setter: - (void)setIsSecondary:(BOOL)secondary;	// 0x2fbd5725
- (void)setKeyframedAnimationPath:(id)path forKey:(id)key;	// 0x2fbd3481
// declared property setter: - (void)setLayerGroup:(id)group;	// 0x2fbd2245
- (void)setMediaType:(unsigned)type;	// 0x2fbd559d
- (void)setMirrorToDuplicatePaths:(BOOL)duplicatePaths;	// 0x2fbd5715
// converted property setter: - (void)setParent:(id)parent;	// 0x2fbd6e61
// declared property setter: - (void)setPath:(id)path;	// 0x2fbd1d05
// declared property setter: - (void)setRotation:(float)rotation;	// 0x2fbd4e21
// declared property setter: - (void)setScale:(float)scale;	// 0x2fbd4dd5
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x2fbd7461
// converted property setter: - (void)setScriptingFrame:(id)frame;	// 0x2fbd776d
// declared property setter: - (void)setSizingMode:(id)mode;	// 0x2fbd4761
// converted property setter: - (void)setSlide:(id)slide;	// 0x2fbd5fe9
// declared property setter: - (void)setStartTime:(double)time;	// 0x2fbd4215
- (void)setUserInfoAttribute:(id)attribute forKey:(id)key;	// 0x2fbd4e95
- (double)showDisplayStartTime;	// 0x2fbd4029
- (double)showDisplayTime;	// 0x2fbd3d79
- (double)showDuration;	// 0x2fbd3c01
- (double)showTime;	// 0x2fbd3ab9
// declared property getter: - (id)sizingMode;	// 0x2fbd45f1
// converted property getter: - (id)slide;	// 0x2fbd53d5
// declared property getter: - (double)startTime;	// 0x2fbd4169
- (id)userInfoAttributeForKey:(id)key;	// 0x2fbd4e6d
@end

