/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "MRLayer.h"
#import "ATVSlideshow-Structs.h"

@class NSDictionary, MRTransition, MCContainerNavigator, NSArray, NSMutableDictionary, NSMutableArray;

@interface MRLayerNavigator : MRLayer {
	MCContainerNavigator *mContainer;	// 120 = 0x78
	NSMutableArray *mSublayers;	// 124 = 0x7c
	NSMutableDictionary *mSublayersForPlugs;	// 128 = 0x80
	MRLayer *mNextSublayer;	// 132 = 0x84
	MRTransition *mCurrentTransition;	// 136 = 0x88
	BOOL mIsTransitioning;	// 140 = 0x8c
	BOOL mTransitionWasAborted;	// 141 = 0x8d
	MRLayer *mSublayerToPrecompute;	// 144 = 0x90
	id mPrecomputingTarget;	// 148 = 0x94
	unsigned mPrecomputingType;	// 152 = 0x98
	double mTransitionStartTime;	// 156 = 0x9c
	double mTransitionDuration;	// 164 = 0xa4
	BOOL mTransitionIsBackwards;	// 172 = 0xac
	NSDictionary *mTransitionChanges;	// 176 = 0xb0
	NSMutableArray *mHistoryBack;	// 180 = 0xb4
	NSMutableArray *mHistoryForth;	// 184 = 0xb8
	BOOL mBackAndForthIsEnabled;	// 188 = 0xbc
	MRLayer *mCurrentSublayer;	// 192 = 0xc0
	double mForcedTransitionTime;	// 196 = 0xc4
}
@property(assign) BOOL backAndForthIsEnabled;	// G=0x2fc75af1; S=0x2fc75b09; @synthesize=mBackAndForthIsEnabled
@property(readonly, assign) MRLayer *currentSublayer;	// G=0x2fc75add; @synthesize=mCurrentSublayer
@property(assign, nonatomic) double forcedTransitionTime;	// G=0x2fc75b21; S=0x2fc75b39; @synthesize=mForcedTransitionTime
@property(readonly, assign) NSArray *sublayers;	// G=0x2fc75ac9; @synthesize=mSublayers
- (id)initWithPlug:(id)plug andParameters:(id)parameters inSuperlayer:(id)superlayer;	// 0x2fc72609
- (id)_createSublayerForPlug:(id)plug;	// 0x2fc75ee1
- (id)_currentState;	// 0x2fc75859
- (void)_deleteSublayer:(id)sublayer;	// 0x2fc76029
- (id)_dumpLayerWithOptions:(unsigned)options;	// 0x2fc75941
- (void)_executeLayerCommandQueue;	// 0x2fc75b4d
- (BOOL)_isNative3D;	// 0x2fc740d9
- (void)_observePlug;	// 0x2fc762bd
- (void)_observePlugOnPreactivate;	// 0x2fc76381
- (void)_observeSublayer:(id)sublayer;	// 0x2fc761bd
- (void)_precomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc76585
- (void)_preprecomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc77421
- (void)_prerenderSublayersAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc76b59
- (void)_renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc767a5
- (id)_retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc76949
- (void)_setNeedsToRequestRebuildAudio:(BOOL)requestRebuildAudio;	// 0x2fc7649d
- (void)_unobservePlug;	// 0x2fc76329
- (void)_unobservePlugOnDepreactivate;	// 0x2fc7641d
- (void)_unobserveSublayer:(id)sublayer;	// 0x2fc7623d
- (double)abortTransition:(id)transition;	// 0x2fc747d1
- (id)actionForKey:(id)key recursive:(BOOL)recursive;	// 0x2fc7459d
- (id)actionHitAtPoint:(CGPoint)point layer:(id *)layer;	// 0x2fc74445
// declared property getter: - (BOOL)backAndForthIsEnabled;	// 0x2fc75af1
- (void)beginMorphingToAspectRatio:(float)aspectRatio withDuration:(double)duration;	// 0x2fc730c1
- (void)cleanup;	// 0x2fc727e9
// declared property getter: - (id)currentSublayer;	// 0x2fc75add
- (void)deactivate;	// 0x2fc73171
- (void)depreactivate:(BOOL)depreactivate;	// 0x2fc7335d
- (double)doTransition:(id)transition;	// 0x2fc75439
- (double)doTransition:(id)transition backwards:(BOOL)backwards;	// 0x2fc748c1
- (double)doTransitionBackwards:(id)backwards;	// 0x2fc7544d
- (void)endMorphing;	// 0x2fc7312d
- (void)endTransitionToSublayer;	// 0x2fc75771
- (double)finishTransition:(id)transition;	// 0x2fc746f9
// declared property getter: - (double)forcedTransitionTime;	// 0x2fc75b21
- (double)goBack;	// 0x2fc755e9
- (double)goForth;	// 0x2fc75461
- (BOOL)hasAudio;	// 0x2fc73fc1
- (BOOL)hasSomethingToRender;	// 0x2fc72fad
- (BOOL)isAlphaFriendly;	// 0x2fc7368d
- (BOOL)isInfinite;	// 0x2fc73701
- (BOOL)isLoadedForTime:(double)time;	// 0x2fc73461
- (BOOL)isOpaque;	// 0x2fc73619
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x2fc72ae5
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc73c91
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x2fc73735
// declared property setter: - (void)setBackAndForthIsEnabled:(BOOL)enabled;	// 0x2fc75b09
// declared property setter: - (void)setForcedTransitionTime:(double)time;	// 0x2fc75b39
- (void)setPixelSize:(CGSize)size;	// 0x2fc72ec5
- (id)sublayerForID:(id)anId;	// 0x2fc7412d
- (id)sublayerForPlugObjectID:(id)plugObjectID recursive:(BOOL)recursive;	// 0x2fc74249
- (id)sublayerHitAtPoint:(CGPoint)point onlyIfHitElement:(BOOL)element localPoint:(CGPoint *)point3;	// 0x2fc73e21
// declared property getter: - (id)sublayers;	// 0x2fc75ac9
- (void)synchronizeTime;	// 0x2fc73035
@end

