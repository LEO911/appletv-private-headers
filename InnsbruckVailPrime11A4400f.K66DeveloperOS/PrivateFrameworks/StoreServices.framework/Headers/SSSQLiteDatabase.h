/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import "StoreServices-Structs.h"
#import </libobjc.A.h>

@class NSString;
@protocol OS_dispatch_queue;

@interface SSSQLiteDatabase : NSObject {
	sqlite3 *_db;	// 4 = 0x4
	NSObject<OS_dispatch_queue> *_dispatchQueue;	// 8 = 0x8
	NSString *_databasePath;	// 12 = 0xc
	BOOL _readOnly;	// 16 = 0x10
	BOOL _isInTransaction;	// 17 = 0x11
	id _setupBlock;	// 20 = 0x14
	CFDictionaryRef _statementCache;	// 24 = 0x18
	BOOL _takesTaskCompletionAssertions;	// 28 = 0x1c
	SBSProcessAssertionRef _taskAssertion;	// 32 = 0x20
	int _taskAssertionCount;	// 36 = 0x24
}
@property(copy, nonatomic) id setupBlock;	// G=0x32844ef9; S=0x32844f0d; @synthesize=_setupBlock
@property(assign) BOOL takesTaskCompletionAssertions;	// G=0x32844645; S=0x328445c5; 
+ (void)_setTakesTaskCompletionAssertions:(BOOL)assertions;	// 0x328444bd
+ (void)_stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x32844715
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x32843749
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x32843775
- (id)initWithDatabaseURL:(id)databaseURL;	// 0x3284340d
- (id)initWithDatabaseURL:(id)databaseURL readOnly:(BOOL)only;	// 0x32843421
- (void)_accessDatabaseUsingBlock:(id)block;	// 0x328447bd
- (void)_beginTaskCompletionAssertion;	// 0x328448c5
- (void)_endTaskCompletionAssertion;	// 0x3284494d
- (int)_openDatabase;	// 0x32844a49
- (int)_openFlags;	// 0x32844be5
- (int)_resetAndReopenDatabaseWithPath:(id)path;	// 0x32844bfd
- (void)_resetCorruptDatabase;	// 0x32844c75
- (BOOL)_resetDatabaseWithPath:(id)path;	// 0x32844d05
- (sqlite3_stmt *)_statementForSQL:(id)sql cache:(BOOL)cache;	// 0x32844db9
- (void)accessDatabaseUsingBlock:(id)block;	// 0x3284379d
- (void)beginTaskCompletionAssertion;	// 0x328444cd
- (int)countChanges;	// 0x32843849
- (void)dealloc;	// 0x32843675
- (void)dispatchAfter:(unsigned long long)after block:(id)block;	// 0x328439ad
- (void)dispatchBlockAsync:(id)async;	// 0x328439cd
- (void)dispatchBlockSync:(id)sync;	// 0x32843a09
- (void)endTaskCompletionAssertion;	// 0x32844549
- (BOOL)executeSQL:(id)sql;	// 0x32843a45
- (id)newDispatchSourceWithType:(dispatch_source_type_s *)type;	// 0x32843cdd
- (void)performTransactionWithBlock:(id)block;	// 0x32843cf5
- (void)prepareStatementForSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x32843f29
// declared property setter: - (void)setSetupBlock:(id)block;	// 0x32844f0d
// declared property setter: - (void)setTakesTaskCompletionAssertions:(BOOL)assertions;	// 0x328445c5
- (BOOL)setUserVersion:(int)version;	// 0x32844109
- (BOOL)setUserVersion:(int)version forDatabase:(id)database;	// 0x32844129
// declared property getter: - (id)setupBlock;	// 0x32844ef9
// declared property getter: - (BOOL)takesTaskCompletionAssertions;	// 0x32844645
- (int)userVersion;	// 0x328441a1
- (int)userVersionForDatabase:(id)database;	// 0x328441bd
@end

