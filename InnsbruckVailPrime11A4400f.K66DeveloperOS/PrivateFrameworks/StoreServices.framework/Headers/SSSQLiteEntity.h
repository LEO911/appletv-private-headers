/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import "SSSQLiteEntity.h"
#import </libobjc.A.h>
#import "NSObject.h"

@class SSSQLiteDatabase;

@protocol SSSQLiteEntity <NSObject>
+ (id)copyDatabaseDictionaryToSetClientDictionary:(id)setClientDictionary;
+ (id)databasePropertyToGetClientProperty:(id)getClientProperty;
+ (id)databasePropertyToSetClientProperty:(id)setClientProperty;
+ (id)databaseTable;
+ (id)databaseValueForProperty:(id)property clientValue:(id)value;
+ (id)disambiguatedSQLForProperty:(id)property;
+ (id)foreignDatabaseColumnForProperty:(id)property;
+ (id)foreignDatabaseTableForProperty:(id)property;
+ (id)foreignDatabaseTablesToDelete;
+ (id)foreignKeyColumnForTable:(id)table;
+ (id)joinClauseForProperty:(id)property;
- (id)copyValuesForClientProperties:(id)clientProperties;
- (id)copyXPCEncodedValuesForClientProperties:(id)clientProperties;
- (BOOL)deleteFromDatabase;
- (void)getValues:(id *)values forProperties:(const id *)properties count:(unsigned)count;
- (BOOL)setValue:(id)value forProperty:(id)property;
- (BOOL)setValuesWithDictionary:(id)dictionary;
- (id)valueForProperty:(id)property;
@end

@interface SSSQLiteEntity : NSObject <SSSQLiteEntity> {
	SSSQLiteDatabase *_database;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign, nonatomic) SSSQLiteDatabase *database;	// G=0x328477f5; @synthesize=_database
@property(readonly, assign, nonatomic) BOOL existsInDatabase;	// G=0x32845dc1; 
@property(readonly, assign, nonatomic) long long persistentID;	// G=0x32847805; @synthesize=_persistentID
+ (id)_aggregateValueForProperty:(id)property function:(id)function predicate:(id)predicate database:(id)database;	// 0x3284aabd
+ (BOOL)_insertValues:(id)values intoTable:(id)table withPersistentID:(long long)persistentID database:(id)database;	// 0x32846ef9
+ (id)anyInDatabase:(id)database predicate:(id)predicate;	// 0x3284a8ad
+ (id)copyDatabaseDictionaryToSetClientDictionary:(id)setClientDictionary;	// 0x32845641
+ (id)countForProperty:(id)property predicate:(id)predicate database:(id)database;	// 0x3284ae05
+ (id)databasePropertyToGetClientProperty:(id)getClientProperty;	// 0x32845795
+ (id)databasePropertyToSetClientProperty:(id)setClientProperty;	// 0x32845799
+ (id)databaseTable;	// 0x328457a1
+ (id)databaseValueForProperty:(id)property clientValue:(id)value;	// 0x3284579d
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x328457e9
+ (id)foreignDatabaseColumnForProperty:(id)property;	// 0x3284584d
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x32845851
+ (id)foreignDatabaseTablesToDelete;	// 0x32845855
+ (id)foreignKeyColumnForTable:(id)table;	// 0x32845859
+ (id)joinClauseForProperty:(id)property;	// 0x3284585d
+ (id)maxValueForProperty:(id)property predicate:(id)predicate database:(id)database;	// 0x3284ae31
+ (Class)memoryEntityClass;	// 0x32845861
+ (id)minValueForProperty:(id)property predicate:(id)predicate database:(id)database;	// 0x3284ae5d
+ (id)queryWithDatabase:(id)database predicate:(id)predicate;	// 0x3284ae89
+ (id)queryWithDatabase:(id)database predicate:(id)predicate orderingProperties:(id)properties;	// 0x3284aead
- (id)initWithPersistentID:(long long)persistentID inDatabase:(id)database;	// 0x32845271
- (id)initWithPropertyValues:(id)propertyValues inDatabase:(id)database;	// 0x328452c5
- (id)_copyTableClusteredValuesWithValues:(id)values;	// 0x328473d1
- (BOOL)_deleteRowFromTable:(id)table usingColumn:(id)column;	// 0x328475d1
- (id)copyValuesForClientProperties:(id)clientProperties;	// 0x3284587d
- (id)copyXPCEncodedValuesForClientProperties:(id)clientProperties;	// 0x328459ed
// declared property getter: - (id)database;	// 0x328477f5
- (BOOL)deleteFromDatabase;	// 0x32845b01
// declared property getter: - (BOOL)existsInDatabase;	// 0x32845dc1
- (void)getValues:(id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x32846019
// declared property getter: - (long long)persistentID;	// 0x32847805
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x328463e1
- (BOOL)setValuesWithDictionary:(id)dictionary;	// 0x3284647d
- (id)valueForProperty:(id)property;	// 0x32846ecd
@end

