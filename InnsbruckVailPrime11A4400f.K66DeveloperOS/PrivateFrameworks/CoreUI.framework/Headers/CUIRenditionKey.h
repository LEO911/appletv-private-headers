/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI
 */

#import "CoreUI-Structs.h"
#import "NSCoding.h"
#import </libobjc.A.h>
#import "NSCopying.h"


@interface CUIRenditionKey : NSObject <NSCopying, NSCoding> {
	renditionkeytoken _stackKey[16];	// 4 = 0x4
	renditionkeytoken *_key;	// 68 = 0x44
	unsigned short _highwaterKeyCount;	// 72 = 0x48
}
@property(assign) int themeDimension1;	// G=0x3078d195; S=0x3078d14d; converted property
@property(assign) int themeDimension2;	// G=0x3078d209; S=0x3078d1c1; converted property
@property(assign) int themeDirection;	// G=0x3078d0ad; S=0x3078d065; converted property
@property(assign) int themeElement;	// G=0x3078cf51; S=0x3078cf09; converted property
@property(assign) int themeIdentifier;	// G=0x3078d535; S=0x3078d4ed; converted property
@property(assign) int themeIdiom;	// G=0x3078d44d; S=0x3078d405; converted property
@property(assign) int themeLayer;	// G=0x3078d365; S=0x3078d31d; converted property
@property(assign) int themePart;	// G=0x3078cfc5; S=0x3078cf7d; converted property
@property(assign) int themePresentationState;	// G=0x3078d2f1; S=0x3078d2a9; converted property
@property(assign) int themeScale;	// G=0x3078d3d9; S=0x3078d391; converted property
@property(assign) int themeSize;	// G=0x3078d039; S=0x3078cff1; converted property
@property(assign) int themeState;	// G=0x3078d27d; S=0x3078d235; converted property
@property(assign) int themeSubtype;	// G=0x3078d4c1; S=0x3078d479; converted property
@property(assign) int themeValue;	// G=0x3078d121; S=0x3078d0d9; converted property
+ (id)_placeHolderKey;	// 0x3078c6cd
+ (void)initialize;	// 0x3078c68d
- (id)init;	// 0x3078c795
- (id)initWithCoder:(id)coder;	// 0x3078c865
- (id)initWithKeyList:(const renditionkeytoken *)keyList;	// 0x3078c7b5
- (id)initWithThemeElement:(int)themeElement themePart:(int)part themeSize:(int)size themeDirection:(int)direction themeValue:(int)value themeDimension1:(int)a1 themeDimension2:(int)a2 themeState:(int)state themePresentationState:(int)state9 themeLayer:(int)layer themeScale:(int)scale themeIdentifier:(int)identifier;	// 0x3078cd81
- (void)_expandKeyIfNecessaryForCount:(int)count;	// 0x3078c725
- (unsigned short)_systemTokenCount;	// 0x3078c721
- (void)copyValuesFromKeyList:(const renditionkeytoken *)keyList;	// 0x3078cc91
- (id)copyWithZone:(NSZone *)zone;	// 0x3078cb15
- (void)dealloc;	// 0x3078cb71
- (id)description;	// 0x3078d561
- (id)descriptionBasedOnKeyFormat:(const renditionkeyfmt *)format;	// 0x3078d729
- (void)encodeWithCoder:(id)coder;	// 0x3078c9d9
- (const renditionkeytoken *)keyList;	// 0x3078cd5d
- (id)nameOfAttributeName:(int)attributeName;	// 0x3078d665
- (void)removeValueForKeyTokenIdentifier:(int)keyTokenIdentifier;	// 0x3078cd19
// converted property setter: - (void)setThemeDimension1:(int)a1;	// 0x3078d14d
// converted property setter: - (void)setThemeDimension2:(int)a2;	// 0x3078d1c1
// converted property setter: - (void)setThemeDirection:(int)direction;	// 0x3078d065
// converted property setter: - (void)setThemeElement:(int)element;	// 0x3078cf09
// converted property setter: - (void)setThemeIdentifier:(int)identifier;	// 0x3078d4ed
// converted property setter: - (void)setThemeIdiom:(int)idiom;	// 0x3078d405
// converted property setter: - (void)setThemeLayer:(int)layer;	// 0x3078d31d
// converted property setter: - (void)setThemePart:(int)part;	// 0x3078cf7d
// converted property setter: - (void)setThemePresentationState:(int)state;	// 0x3078d2a9
// converted property setter: - (void)setThemeScale:(int)scale;	// 0x3078d391
// converted property setter: - (void)setThemeSize:(int)size;	// 0x3078cff1
// converted property setter: - (void)setThemeState:(int)state;	// 0x3078d235
// converted property setter: - (void)setThemeSubtype:(int)subtype;	// 0x3078d479
// converted property setter: - (void)setThemeValue:(int)value;	// 0x3078d0d9
- (void)setValuesFromKeyList:(const renditionkeytoken *)keyList;	// 0x3078cbb1
// converted property getter: - (int)themeDimension1;	// 0x3078d195
// converted property getter: - (int)themeDimension2;	// 0x3078d209
// converted property getter: - (int)themeDirection;	// 0x3078d0ad
// converted property getter: - (int)themeElement;	// 0x3078cf51
// converted property getter: - (int)themeIdentifier;	// 0x3078d535
// converted property getter: - (int)themeIdiom;	// 0x3078d44d
// converted property getter: - (int)themeLayer;	// 0x3078d365
// converted property getter: - (int)themePart;	// 0x3078cfc5
// converted property getter: - (int)themePresentationState;	// 0x3078d2f1
// converted property getter: - (int)themeScale;	// 0x3078d3d9
// converted property getter: - (int)themeSize;	// 0x3078d039
// converted property getter: - (int)themeState;	// 0x3078d27d
// converted property getter: - (int)themeSubtype;	// 0x3078d4c1
// converted property getter: - (int)themeValue;	// 0x3078d121
@end

