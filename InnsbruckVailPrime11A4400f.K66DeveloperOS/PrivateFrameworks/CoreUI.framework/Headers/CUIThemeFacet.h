/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI
 */

#import "CoreUI-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import "CUIThemeImageSource.h"
#import </libobjc.A.h>


@interface CUIThemeFacet : NSObject <CUIThemeImageSource, NSCopying, NSCoding> {
	renditionkeytoken *_renditionKeyList;	// 4 = 0x4
	unsigned _themeIndex;	// 8 = 0x8
	int _renditionType;	// 12 = 0xc
	CGSize _thumbnailSize;	// 16 = 0x10
	CGPoint _hotSpot;	// 24 = 0x18
	crmFlags _fFlags;	// 32 = 0x20
}
@property(assign) int controlSize;	// G=0x30783aa9; S=0x30783ac5; converted property
@property(readonly, assign) int renditionType;	// G=0x30786835; converted property
@property(readonly, assign) unsigned themeIndex;	// G=0x30786761; converted property
@property(readonly, assign) CGSize thumbnailSize;	// G=0x30786a01; converted property
+ (id)_facetWithKeyList:(const renditionkeytoken *)keyList andRenditionKeyClass:(Class)aClass orRenditionKey:(id)key fromTheme:(unsigned)theme;	// 0x307832dd
+ (void)_invalidateArtworkCaches;	// 0x30781f8d
+ (id)_themeStoreForThemeIndex:(unsigned)themeIndex;	// 0x30781fb1
+ (BOOL)assetExistsForRenditionKey:(id)renditionKey fromTheme:(unsigned)theme;	// 0x30783add
+ (id)cursorFacetWithName:(id)name fromTheme:(unsigned)theme;	// 0x307835bd
+ (id)debug_bundleIdentifierForThemeRef:(unsigned)themeRef;	// 0x30782f95
+ (id)facetWithElement:(int)element part:(int)part dimension1:(int)a1 dimension2:(int)a2 fromTheme:(unsigned)theme;	// 0x30783225
+ (id)facetWithElement:(int)element part:(int)part fromTheme:(unsigned)theme;	// 0x307831f5
+ (id)facetWithRenditionKey:(id)renditionKey fromTheme:(unsigned)theme;	// 0x307832b9
+ (void)initialize;	// 0x30782c69
+ (unsigned)themeForBundleIdentifier:(id)bundleIdentifier error:(id *)error;	// 0x30782d55
+ (unsigned)themeNamed:(id)named forBundleIdentifier:(id)bundleIdentifier error:(id *)error;	// 0x30782ca9
+ (unsigned)themeWithContentsOfURL:(id)url error:(id *)error;	// 0x30782d79
- (id)init;	// 0x307837b5
- (id)initWithCoder:(id)coder;	// 0x30783831
- (id)initWithRenditionKey:(id)renditionKey fromTheme:(unsigned)theme;	// 0x307836dd
- (void)_applyFixedAttributesToKey:(id)key;	// 0x30786aed
- (id)_approximateRenditionForRenditionKey:(id)renditionKey;	// 0x30782075
- (BOOL)_canGetRenditionForKey:(id)key withDrawingLayer:(int)drawingLayer;	// 0x30784665
- (void)_drawAsMaskSpecificRenditionKey:(id)key inFrame:(CGRect)frame context:(CGContextRef)context alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused;	// 0x30785761
- (void)_drawMaskFromSpecificRenditionKey:(id)specificRenditionKey inFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused;	// 0x307856b1
- (void)_drawSlice:(int)slice inFrame:(CGRect)frame withKeyAdjustment:(id)keyAdjustment;	// 0x30785cd5
- (void)_drawSpecificRenditionKey:(id)key inFrame:(CGRect)frame context:(CGContextRef)context alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused isFlipped:(BOOL)flipped;	// 0x307859b5
- (void)_drawSpecificRenditionKey:(id)key inFrame:(CGRect)frame context:(CGContextRef)context isFocused:(BOOL)focused isFlipped:(BOOL)flipped;	// 0x3078592d
- (void)_drawSpecificRenditionKey:(id)key rendition:(id)rendition inFrame:(CGRect)frame context:(CGContextRef)context alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused isFlipped:(BOOL)flipped;	// 0x30785a29
- (CGPoint)_hotSpot;	// 0x30781ff5
- (id)_imageForRenditionFromKey:(id)key withSize:(CGSize)size isMask:(BOOL)mask;	// 0x30782775
- (void)_initWithRenditionKey:(id)renditionKey;	// 0x30783661
- (BOOL)_isButtonGlyph;	// 0x3078266d
- (id)_rendition;	// 0x307824b1
- (id)_renditionForSpecificKey:(id)specificKey;	// 0x307823ed
- (void)_setHasCheckedButtonGlyph:(BOOL)glyph;	// 0x30782639
- (void)_setIsButtonGlyph:(BOOL)glyph;	// 0x30782655
- (void)_setThemeIndex:(unsigned)index;	// 0x30786751
- (int)_sliceIndexForSlice:(int)slice ofRendition:(id)rendition;	// 0x30786b11
- (id)_themeStore;	// 0x30781fb9
- (CGSize)_thumbnailSizeForRendition:(id)rendition;	// 0x30782521
- (void)_updateSpecificRenditionKey:(id)key isFocused:(BOOL *)focused owner:(id)owner userInfo:(id)info;	// 0x3078200d
- (float)alpha;	// 0x3078644d
- (int)blendMode;	// 0x3078648d
- (id)blendModeAsCAFilterString;	// 0x307864cd
// converted property getter: - (int)controlSize;	// 0x30783aa9
- (CGImageRef)copyLayerImageContentsAndCenter:(CGRect *)center;	// 0x30783df9
- (CGImageRef)copyLayerImageContentsAndCenter:(CGRect *)center renditionKey:(id)key;	// 0x30783bd9
- (id)copyWithZone:(NSZone *)zone;	// 0x30783a59
- (CGContextRef)currentCGContext;	// 0x30782bed
- (void)dealloc;	// 0x30783a69
- (id)description;	// 0x30786b55
- (id)displayName;	// 0x3078687d
- (void)drawAbsoluteAnimationFrame:(double)frame destinationFrame:(CGRect)frame2 isFocused:(BOOL)focused context:(CGContextRef)context;	// 0x307843e9
- (void)drawAnimationFrameMappedFrom0_1RangedValue:(double)a0_1RangedValue destinationFrame:(CGRect)frame isFocused:(BOOL)focused context:(CGContextRef)context;	// 0x3078445d
- (void)drawAsOnePartWithSlice:(int)slice inFrame:(CGRect)frame isFocused:(BOOL)focused;	// 0x3078433d
- (void)drawGradientInFrame:(CGRect)frame angle:(float)angle alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused keyAdjustment:(id)adjustment;	// 0x30784d89
- (void)drawGradientInFrame:(CGRect)frame angle:(float)angle alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused keyAdjustment:(id)adjustment context:(CGContextRef)context;	// 0x30784df1
- (void)drawHighlightInFrame:(CGRect)frame alpha:(float)alpha keyAdjustment:(id)adjustment;	// 0x3078528d
- (void)drawHighlightInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation keyAdjustment:(id)adjustment;	// 0x307852d5
- (void)drawHighlightInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation owner:(id)owner userInfo:(id)info;	// 0x30784c4d
- (void)drawHighlightInFrame:(CGRect)frame alpha:(float)alpha owner:(id)owner userInfo:(id)info;	// 0x307848e1
- (void)drawHighlightInFrame:(CGRect)frame owner:(id)owner userInfo:(id)info;	// 0x307845ed
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha isFocused:(BOOL)focused;	// 0x307841ed
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha isFocused:(BOOL)focused keyAdjustment:(id)adjustment;	// 0x30785119
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused;	// 0x30784235
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused context:(CGContextRef)context;	// 0x30784295
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused keyAdjustment:(id)adjustment;	// 0x30785169
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation owner:(id)owner userInfo:(id)info;	// 0x30784b4d
- (void)drawInFrame:(CGRect)frame alpha:(float)alpha owner:(id)owner userInfo:(id)info;	// 0x30784891
- (void)drawInFrame:(CGRect)frame isFocused:(BOOL)focused context:(CGContextRef)context;	// 0x30784155
- (void)drawInFrame:(CGRect)frame owner:(id)owner userInfo:(id)info;	// 0x307845b1
- (void)drawMaskInFrame:(CGRect)frame alpha:(float)alpha isFocused:(BOOL)focused keyAdjustment:(id)adjustment;	// 0x30785421
- (void)drawMaskInFrame:(CGRect)frame alpha:(float)alpha operation:(int)operation isFocused:(BOOL)focused keyAdjustment:(id)adjustment;	// 0x30785471
- (void)drawMaskInFrame:(CGRect)frame alpha:(float)alpha owner:(id)owner userInfo:(id)info;	// 0x30784931
- (void)drawMaskInFrame:(CGRect)frame owner:(id)owner userInfo:(id)info;	// 0x30784629
- (void)drawPulseInFrame:(CGRect)frame pulseValue:(float)value isFocused:(BOOL)focused keyAdjustment:(id)adjustment;	// 0x3078557d
- (void)drawPulseInFrame:(CGRect)frame pulseValue:(float)value owner:(id)owner userInfo:(id)info;	// 0x30784a31
- (void)drawSegmentInFrame:(CGRect)frame isFocused:(BOOL)focused segmentType:(int)type;	// 0x307844d1
- (void)encodeWithCoder:(id)coder;	// 0x30783921
- (id)gradientWithKeyAdjustment:(id)keyAdjustment angle:(float *)angle style:(unsigned *)style;	// 0x30786621
- (BOOL)hasValueSlices;	// 0x30786011
- (id)highlightWithSize:(CGSize)size keyAdjustment:(id)adjustment;	// 0x30786e95
- (BOOL)hitTestAtPoint:(CGPoint)point inFrame:(CGRect)frame owner:(id)owner userInfo:(id)info;	// 0x307846d1
- (id)image;	// 0x30786439
- (id)imageForSlice:(int)slice withKeyAdjustment:(id)keyAdjustment;	// 0x30786cd9
- (id)imageForSliceIndex:(int)sliceIndex;	// 0x307863f5
- (id)imageForState:(int)state;	// 0x30785fc9
- (id)imageForState:(int)state value:(int)value;	// 0x307861fd
- (id)imageForState:(int)state value:(int)value size:(unsigned)size;	// 0x30786239
- (id)imageForState:(int)state withValue:(int)value;	// 0x30786001
- (CGSize)imageSize;	// 0x30786505
- (id)imageWithKeyAdjustment:(id)keyAdjustment;	// 0x3078633d
- (id)imageWithSize:(CGSize)size keyAdjustment:(id)adjustment;	// 0x30786dd9
- (BOOL)isValidButtonImageSource;	// 0x307861cd
- (BOOL)isValidButtonImageSourceForSize:(unsigned)size;	// 0x307860a5
- (id)makeLayer;	// 0x30783e0d
- (id)maskForSlice:(int)slice withKeyAdjustment:(id)keyAdjustment;	// 0x30786bd5
- (id)maskWithSize:(CGSize)size keyAdjustment:(id)adjustment;	// 0x30786f79
- (id)renditionForSpecificKeyWrapper:(id)specificKeyWrapper;	// 0x30785751
- (id)renditionKey;	// 0x307867e1
- (id)renditionMetricsWithKeyAdjustment:(id)keyAdjustment;	// 0x30785de5
- (id)renditionSliceInformationForRect:(CGRect)rect keyAdjustment:(id)adjustment;	// 0x30785e99
// converted property getter: - (int)renditionType;	// 0x30786835
// converted property setter: - (void)setControlSize:(int)size;	// 0x30783ac5
// converted property getter: - (unsigned)themeIndex;	// 0x30786761
- (id)themeRendition;	// 0x30786771
- (id)thumbnail;	// 0x30786909
// converted property getter: - (CGSize)thumbnailSize;	// 0x30786a01
- (CGSize)topLeftCapSize;	// 0x30786a85
- (void)updateLayer:(id)layer;	// 0x30783e6d
@end

