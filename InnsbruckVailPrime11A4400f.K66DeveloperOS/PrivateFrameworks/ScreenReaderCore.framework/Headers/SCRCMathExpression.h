/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
 */

#import </libobjc.A.h>

@class NSArray, NSString;

@interface SCRCMathExpression : NSObject {
	SCRCMathExpression *_parent;	// 4 = 0x4
	unsigned _cachedMaximumDepth;	// 8 = 0x8
}
@property(readonly, assign, nonatomic) BOOL beginsWithSpace;	// G=0x3272c6ad; 
@property(readonly, assign, nonatomic) BOOL canBeUsedWithBase;	// G=0x3272c675; 
@property(readonly, assign, nonatomic) BOOL canBeUsedWithRange;	// G=0x3272c66d; 
@property(readonly, assign, nonatomic) BOOL canBeWrappedInLatexMathIndicators;	// G=0x3272d3bd; 
@property(readonly, assign, nonatomic) NSArray *children;	// G=0x3272c665; 
@property(readonly, assign, nonatomic) BOOL endsWithSpace;	// G=0x3272c6b1; 
@property(readonly, assign, nonatomic) unsigned fractionLevel;	// G=0x3272c6a5; 
@property(readonly, assign, nonatomic) BOOL hasSimpleArrayOfChildren;	// G=0x3272c689; 
@property(readonly, assign, nonatomic) int integerValue;	// G=0x3272c681; 
@property(readonly, assign, nonatomic) BOOL isBaseSubSuperscript;	// G=0x3272c671; 
@property(readonly, assign, nonatomic) BOOL isEllipsis;	// G=0x3272c68d; 
@property(readonly, assign, nonatomic) BOOL isFenceDelimiter;	// G=0x3272c699; 
@property(readonly, assign, nonatomic) BOOL isFunctionName;	// G=0x3272c69d; 
@property(readonly, assign, nonatomic) BOOL isInteger;	// G=0x3272c67d; 
@property(readonly, assign, nonatomic) BOOL isMultiRowTable;	// G=0x3272c6b5; 
@property(readonly, assign, nonatomic) BOOL isNaturalSuperscript;	// G=0x3272c685; 
@property(readonly, assign, nonatomic) BOOL isNumber;	// G=0x3272c679; 
@property(readonly, assign, nonatomic) BOOL isOperationSymbol;	// G=0x3272c695; 
@property(readonly, assign, nonatomic) BOOL isRangeSubSuperscript;	// G=0x3272c669; 
@property(readonly, assign, nonatomic) BOOL isSimpleNumericalFraction;	// G=0x3272c6a9; 
@property(readonly, assign, nonatomic) BOOL isTermSeparator;	// G=0x3272c691; 
@property(readonly, assign, nonatomic) BOOL isUnlinedFraction;	// G=0x3272c6b9; 
@property(readonly, assign, nonatomic) BOOL isWordOrAbbreviation;	// G=0x3272c6a1; 
@property(readonly, assign, nonatomic) NSString *latexFormatStringAsOver;	// G=0x3272c78d; 
@property(readonly, assign, nonatomic) NSString *latexFormatStringAsUnder;	// G=0x3272c791; 
@property(assign, nonatomic) SCRCMathExpression *parent;	// G=0x3272d6d1; S=0x3272d6e1; @synthesize=_parent
@property(readonly, assign, nonatomic) NSArray *siblings;	// G=0x3272cab1; 
@property(readonly, assign, nonatomic) NSArray *subExpressions;	// G=0x3272c299; 
+ (Class)_classForExpressionType:(id)expressionType;	// 0x3272d3c1
+ (id)mathExpressionWithDictionary:(id)dictionary;	// 0x3272c1f9
+ (void)setPathToSegmentOrderingPlist:(id)segmentOrderingPlist;	// 0x3272d6f1
- (id)initWithDictionary:(id)dictionary;	// 0x3272c26d
- (void)_applyTreePositionOfOriginalSegment:(id)originalSegment toPrefixedOrSuffixedSegment:(id)prefixedOrSuffixedSegment;	// 0x3272cb49
- (id)_scrcBundle;	// 0x3272c795
- (id)arrayWithoutNilsFromFirstChild:(id)firstChild secondChild:(id)child thirdChild:(id)child3;	// 0x3272cad9
// declared property getter: - (BOOL)beginsWithSpace;	// 0x3272c6ad
// declared property getter: - (BOOL)canBeUsedWithBase;	// 0x3272c675
// declared property getter: - (BOOL)canBeUsedWithRange;	// 0x3272c66d
// declared property getter: - (BOOL)canBeWrappedInLatexMathIndicators;	// 0x3272d3bd
- (BOOL)canFormWordStartingWithExpression:(id)expression;	// 0x3272c6bd
// declared property getter: - (id)children;	// 0x3272c665
- (id)dollarCodeDescription;	// 0x3272c2dd
- (id)dollarCodeDescriptionAsBinomialCoefficientWithTreePosition:(id)treePosition numberOfOuterRadicals:(unsigned)outerRadicals;	// 0x3272c325
- (id)dollarCodeDescriptionAsMixedNumberFractionWithTreePosition:(id)treePosition;	// 0x3272c321
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned)outerRadicals treePosition:(id)position;	// 0x3272c31d
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned)outerRadicals treePosition:(id)position openOperator:(id)anOperator openOperatorTreePosition:(id)position4 closeOperator:(id)anOperator5 closeOperatorTreePosition:(id)position6;	// 0x3272c329
// declared property getter: - (BOOL)endsWithSpace;	// 0x3272c6b1
- (id)fenceDelimiters;	// 0x3272ced9
// declared property getter: - (unsigned)fractionLevel;	// 0x3272c6a5
// declared property getter: - (BOOL)hasSimpleArrayOfChildren;	// 0x3272c689
// declared property getter: - (int)integerValue;	// 0x3272c681
// declared property getter: - (BOOL)isBaseSubSuperscript;	// 0x3272c671
// declared property getter: - (BOOL)isEllipsis;	// 0x3272c68d
// declared property getter: - (BOOL)isFenceDelimiter;	// 0x3272c699
// declared property getter: - (BOOL)isFunctionName;	// 0x3272c69d
// declared property getter: - (BOOL)isInteger;	// 0x3272c67d
// declared property getter: - (BOOL)isMultiRowTable;	// 0x3272c6b5
// declared property getter: - (BOOL)isNaturalSuperscript;	// 0x3272c685
// declared property getter: - (BOOL)isNumber;	// 0x3272c679
// declared property getter: - (BOOL)isOperationSymbol;	// 0x3272c695
// declared property getter: - (BOOL)isRangeSubSuperscript;	// 0x3272c669
// declared property getter: - (BOOL)isSimpleNumericalFraction;	// 0x3272c6a9
// declared property getter: - (BOOL)isTermSeparator;	// 0x3272c691
// declared property getter: - (BOOL)isUnlinedFraction;	// 0x3272c6b9
// declared property getter: - (BOOL)isWordOrAbbreviation;	// 0x3272c6a1
- (id)latexDescription;	// 0x3272c619
- (id)latexDescriptionForChildrenJoinedByString:(id)childrenJoinedByString;	// 0x3272d295
- (id)latexDescriptionInMathMode:(BOOL)mathMode;	// 0x3272c62d
// declared property getter: - (id)latexFormatStringAsOver;	// 0x3272c78d
// declared property getter: - (id)latexFormatStringAsUnder;	// 0x3272c791
- (id)latexIdentifierForFenceOperator:(id)fenceOperator isClosingOperator:(BOOL)anOperator;	// 0x3272d1e9
- (id)latexIdentifierForIdentifier:(id)identifier;	// 0x3272cfe5
- (id)latexMathModeDescription;	// 0x3272c661
- (id)localizedAttributedStringForKey:(id)key;	// 0x3272c84d
- (id)localizedAttributedStringForKey:(id)key treePosition:(id)position;	// 0x3272c861
- (id)localizedSegmentOrderingForKey:(id)key;	// 0x3272c991
- (id)localizedStringForKey:(id)key;	// 0x3272c809
- (id)localizedStringForNumber:(id)number;	// 0x3272c90d
- (id)mathMLString;	// 0x3272c54d
- (unsigned)maximumDepth;	// 0x3272c32d
- (unsigned)maximumFractionLevelOfSubExpressions;	// 0x3272ce01
- (unsigned)numberOfTables;	// 0x3272c6c1
// declared property getter: - (id)parent;	// 0x3272d6d1
// declared property setter: - (void)setParent:(id)parent;	// 0x3272d6e1
// declared property getter: - (id)siblings;	// 0x3272cab1
- (id)speakableDescription;	// 0x3272c29d
- (id)speakableDescriptionAsBinomialCoefficientWithSpeakingStyle:(int)speakingStyle;	// 0x3272c2d9
- (id)speakableDescriptionWithSpeakingStyle:(int)speakingStyle;	// 0x3272c2b1
- (id)speakableDescriptionWithSpeakingStyle:(int)speakingStyle arePausesAllowed:(BOOL)allowed;	// 0x3272c2c5
- (id)speakableDescriptionWithSpeakingStyle:(int)speakingStyle arePausesAllowed:(BOOL)allowed isPartOfWord:(BOOL)word;	// 0x3272c2c9
- (id)speakableSegments:(id)segments withLocalizablePrefix:(id)localizablePrefix localizableSuffix:(id)suffix;	// 0x3272cc51
- (id)speakableSegments:(id)segments withPrefix:(id)prefix suffix:(id)suffix;	// 0x3272cca1
- (id)speakableSegmentsAsBinomialCoefficientWithSpeakingStyle:(int)speakingStyle upToDepth:(unsigned)depth treePosition:(id)position;	// 0x3272c549
- (id)speakableSegmentsUpToDepth:(unsigned)depth;	// 0x3272c445
- (id)speakableSegmentsWithSpeakingStyle:(int)speakingStyle upToDepth:(unsigned)depth;	// 0x3272c459
- (id)speakableSegmentsWithSpeakingStyle:(int)speakingStyle upToDepth:(unsigned)depth treePosition:(id)position;	// 0x3272c4a1
- (id)speakableSegmentsWithSpeakingStyle:(int)speakingStyle upToDepth:(unsigned)depth treePosition:(id)position localizablePrefix:(id)prefix localizableSuffix:(id)suffix;	// 0x3272cbbd
- (id)speakableSegmentsWithSpeakingStyle:(int)speakingStyle upToDepth:(unsigned)depth treePosition:(id)position prefix:(id)prefix suffix:(id)suffix;	// 0x3272cc15
- (id)speakableSummary;	// 0x3272c551
// declared property getter: - (id)subExpressions;	// 0x3272c299
@end

