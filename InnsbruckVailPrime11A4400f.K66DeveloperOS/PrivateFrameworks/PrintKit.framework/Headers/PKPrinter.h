/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PrintKit.framework/PrintKit
 */

#import "PrintKit-Structs.h"
#import </libobjc.A.h>

@class NSMutableDictionary, NSMutableArray, NSMutableSet, NSArray, NSNumber, NSString, NSDictionary;

@interface PKPrinter : NSObject {
	NSString *name;	// 4 = 0x4
	int type;	// 8 = 0x8
	int accessState;	// 12 = 0xc
	NSDictionary *printInfoSupported;	// 16 = 0x10
	http_s *job_http;	// 20 = 0x14
	NSMutableDictionary *privateData;	// 24 = 0x18
	NSMutableSet *mediaReady;	// 28 = 0x1c
	NSMutableArray *rolls;	// 32 = 0x20
	NSMutableDictionary *specialFeedOrientation;	// 36 = 0x24
	NSArray *printScalingSupported;	// 40 = 0x28
	NSArray *mandatoryJobAttributes;	// 44 = 0x2c
	NSString *quotaManagementURL;	// 48 = 0x30
	int maxPDFKBytes;	// 52 = 0x34
	int maxJPEGKBytes;	// 56 = 0x38
	int maxJPEGXDimension;	// 60 = 0x3c
	int maxJPEGYDimension;	// 64 = 0x40
	int maxCopies;	// 68 = 0x44
	int preferred_landscape;	// 72 = 0x48
	BOOL isLocal;	// 76 = 0x4c
	BOOL hasIdentifyPrinterOp;	// 77 = 0x4d
	BOOL connectionShouldNotBeTrusted;	// 78 = 0x4e
	BOOL isFromMCProfile;	// 79 = 0x4f
	int kind;	// 80 = 0x50
}
@property(retain) NSDictionary *TXTRecord;	// G=0x324cd8c1; S=0x324cdba1; @dynamic
@property(assign) int accessState;	// S=0x324cd681; @dynamic
@property(readonly, assign) int accessState;	// G=0x324cce25; @synthesize
@property(readonly, assign) BOOL hasIdentifyPrinterOp;	// G=0x324cce99; @synthesize
@property(readonly, assign) BOOL hasPrintInfoSupported;	// G=0x324c6d4d; @dynamic
@property(retain) NSString *hostname;	// G=0x324cdc39; S=0x324cdc89; @dynamic
@property(readonly, assign) BOOL isAdobeRGBSupported;	// G=0x324c94ad; @dynamic
@property(assign) BOOL isFromMCProfile;	// G=0x324cce69; S=0x324cce81; @synthesize
@property(readonly, assign) BOOL isIPPS;	// G=0x324c95e9; @dynamic
@property(assign) BOOL isLocal;	// G=0x324cce39; S=0x324cce51; @synthesize
@property(readonly, assign) int jobTypesSupported;	// G=0x324c5f05; 
@property(readonly, assign) int kind;	// G=0x324ccdfd; @synthesize
@property(readonly, assign) NSString *name;	// G=0x324ccde9; @synthesize
@property(readonly, assign) BOOL needsSetup;	// G=0x324cb12d; 
@property(retain) NSNumber *port;	// G=0x324cdca9; S=0x324cdcf9; @dynamic
@property(readonly, assign) NSDictionary *printInfoSupported;	// G=0x324c7149; 
@property(readonly, assign) NSString *scheme;	// G=0x324cdd19; 
@property(readonly, assign) BOOL setupSupportsPasswordScope;	// G=0x324cb131; 
@property(readonly, assign) int type;	// G=0x324cce11; @synthesize
@property(readonly, assign) NSString *uuid;	// G=0x324c9619; @dynamic
+ (ipp_s *)getAttributes:(const char **)attributes count:(int)count fromURI:(id)uri;	// 0x324cd289
+ (id)hardcodedURIs;	// 0x324caea5
+ (id)nameForHardcodedURI:(id)hardcodedURI;	// 0x324cafdd
+ (BOOL)printerLookupWithName:(id)name andTimeout:(double)timeout;	// 0x324c5b69
+ (id)printerWithName:(id)name;	// 0x324c5a29
+ (id)requiredPDL;	// 0x324cfe01
+ (BOOL)urfIsOptional;	// 0x324cfd95
- (id)initWithName:(id)name TXT:(id)txt;	// 0x324cd40d
- (id)initWithName:(id)name TXTRecord:(id)record;	// 0x324cd559
// declared property getter: - (id)TXTRecord;	// 0x324cd8c1
- (int)abortJob;	// 0x324c99ad
// declared property getter: - (int)accessState;	// 0x324cce25
- (void)aggdAppsAndPrinters;	// 0x324c6a1d
- (id)availableRollPapersPreferBorderless:(BOOL)borderless;	// 0x324c6459
- (void)cancelUnlock;	// 0x324cacb1
- (void)checkOperations:(ipp_s *)operations;	// 0x324c70f5
- (void)createMediaReadyFromAttrs:(ipp_s *)attrs;	// 0x324c67a1
- (ipp_s *)createRequest:(id)request ofType:(id)type url:(id)url;	// 0x324ce1a5
- (void)dealloc;	// 0x324c5c29
- (id)description;	// 0x324c5d8d
- (id)displayName;	// 0x324c5d9d
- (int)feedOrientation:(id)orientation;	// 0x324c6c3d
- (int)finalizeJob:(int)job;	// 0x324ce99d
- (int)finishJob;	// 0x324c99c1
- (ipp_s *)getPrinterAttributes;	// 0x324cceb1
// declared property getter: - (BOOL)hasIdentifyPrinterOp;	// 0x324cce99
- (BOOL)hasMatchingLoadedRoll:(id)roll;	// 0x324ca05d
// declared property getter: - (BOOL)hasPrintInfoSupported;	// 0x324c6d4d
// declared property getter: - (id)hostname;	// 0x324cdc39
- (void)identifySelf;	// 0x324c6d75
// declared property getter: - (BOOL)isAdobeRGBSupported;	// 0x324c94ad
- (BOOL)isBonjour;	// 0x324c5ad5
// declared property getter: - (BOOL)isFromMCProfile;	// 0x324cce69
// declared property getter: - (BOOL)isIPPS;	// 0x324c95e9
// declared property getter: - (BOOL)isLocal;	// 0x324cce39
- (BOOL)isPaperReady:(id)ready;	// 0x324c6ccd
// declared property getter: - (int)jobTypesSupported;	// 0x324c5f05
// declared property getter: - (int)kind;	// 0x324ccdfd
- (BOOL)knowsReadyPaperList;	// 0x324c6d35
- (id)localName;	// 0x324cecdd
- (id)location;	// 0x324c5ed1
- (id)matchedPaper:(id)paper preferBorderless:(BOOL)borderless withDuplexMode:(id)duplexMode didMatch:(BOOL *)match;	// 0x324ca191
// declared property getter: - (id)name;	// 0x324ccde9
// declared property getter: - (BOOL)needsSetup;	// 0x324cb12d
- (id)paperListForDuplexMode:(id)duplexMode;	// 0x324c981d
// declared property getter: - (id)port;	// 0x324cdca9
// declared property getter: - (id)printInfoSupported;	// 0x324c7149
- (int)printURL:(id)url ofType:(id)type printSettings:(id)settings;	// 0x324c99d5
- (id)privateObjectForKey:(id)key;	// 0x324cfbb9
- (void)reconfirmWithForce:(BOOL)force;	// 0x324caced
- (void)resolve;	// 0x324cde09
- (BOOL)resolveWithTimeout:(int)timeout;	// 0x324cde1d
- (id)rollFromAttrs:(ipp_s *)attrs;	// 0x324c60d5
- (id)rollReadyPaperListWithContentSize:(CGSize)contentSize;	// 0x324c964d
// declared property getter: - (id)scheme;	// 0x324cdd19
- (int)sendData:(const char *)data ofLength:(int)length;	// 0x324c9dd1
// declared property setter: - (void)setAccessState:(int)state;	// 0x324cd681
- (void)setAccessStateFromTXT:(id)txt;	// 0x324cd849
// declared property setter: - (void)setHostname:(id)hostname;	// 0x324cdc89
// declared property setter: - (void)setIsFromMCProfile:(BOOL)mcprofile;	// 0x324cce81
// declared property setter: - (void)setIsLocal:(BOOL)local;	// 0x324cce51
// declared property setter: - (void)setPort:(id)port;	// 0x324cdcf9
- (void)setPrivateObject:(id)object forKey:(id)key;	// 0x324cfcb1
// declared property setter: - (void)setTXTRecord:(id)record;	// 0x324cdba1
// declared property getter: - (BOOL)setupSupportsPasswordScope;	// 0x324cb131
- (void)setupWithOptions:(id)options completionHandler:(id)handler;	// 0x324cc3cd
- (void)showPassCodeForSetupWithCompletionHandler:(id)completionHandler;	// 0x324cb53d
- (int)startJob:(id)job ofType:(id)type;	// 0x324c9e25
// declared property getter: - (int)type;	// 0x324cce11
- (void)unlockWithCompletionHandler:(id)completionHandler;	// 0x324ca515
- (void)updateType;	// 0x324cd691
// declared property getter: - (id)uuid;	// 0x324c9619
- (void)validatePassCode:(id)code withCompletionHandler:(id)completionHandler;	// 0x324cbd59
@end

