/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CalDAV.framework/CalDAV
 */

#import "CalDAVOperation.h"
#import "CoreDAVPropPatchTaskDelegate.h"
#import "CoreDAVTaskGroupDelegate.h"
#import "CoreDAVContainerInfoTaskGroupDelegate.h"
#import "CoreDAVContainerInfoSyncProvider.h"

@class NSMutableDictionary, NSError, NSObject, NSMutableSet, NSString;
@protocol OS_dispatch_group, CalDAVCalendarPropertyRefreshDelegate;

@interface CalDAVCalendarPropertyRefreshOperation : CalDAVOperation <CoreDAVContainerInfoTaskGroupDelegate, CoreDAVContainerInfoSyncProvider, CoreDAVPropPatchTaskDelegate, CoreDAVTaskGroupDelegate> {
	NSError *_savedError;	// 56 = 0x38
	NSMutableDictionary *_ctags;	// 60 = 0x3c
	NSMutableDictionary *_syncTokens;	// 64 = 0x40
	BOOL _forceClearCalendarHomeSyncToken;	// 68 = 0x44
	NSString *_calendarHomeSyncToken;	// 72 = 0x48
	BOOL _useCalendarHomeSyncReport;	// 76 = 0x4c
	NSMutableDictionary *_pathToLocalCalendar;	// 80 = 0x50
	NSMutableSet *_localCalendarsWithNoPath;	// 84 = 0x54
	NSMutableSet *_updatedCalendars;	// 88 = 0x58
	BOOL _didFinish;	// 92 = 0x5c
	BOOL _didMakeCalendars;	// 93 = 0x5d
	BOOL _isSecondRefresh;	// 94 = 0x5e
	int _nextCalendarOrder;	// 96 = 0x60
	NSObject<OS_dispatch_group> *_outstandingTasksGroup;	// 100 = 0x64
}
@property(retain, nonatomic) NSString *calendarHomeSyncToken;	// G=0x3027dea9; S=0x3027deb9; @synthesize=_calendarHomeSyncToken
@property(assign, nonatomic) id<CalDAVCalendarPropertyRefreshDelegate> delegate;	// @dynamic
@property(assign, nonatomic) BOOL useCalendarHomeSyncReport;	// G=0x3027dec9; S=0x3027ded9; @synthesize=_useCalendarHomeSyncReport
- (id)initWithPrincipal:(id)principal;	// 0x30277fed
- (void)_continueHandleContainerInfoTask:(id)task completedWithContainers:(id)containers error:(id)error;	// 0x3027caf1
- (void)_finishRefresh;	// 0x30278145
- (id)_generateTimeZoneString:(id)string;	// 0x3027a5d9
- (void)_getDefaultCalendarsTasksIfNeededForPrincipal:(id)principal;	// 0x3027d391
- (id)_getDefaultMkCalendarForPrincipalTask:(id)principalTask isEventCalendar:(BOOL)calendar;	// 0x3027d16d
- (id)_getMkcalendarTaskForCalendar:(id)calendar;	// 0x3027a7a1
- (id)_getSetPropertyStringTask:(id)task forName:(id)name andNamespace:(id)aNamespace atURL:(id)url;	// 0x3027a3d9
- (void)_handleCalendarPublish;	// 0x30279105
- (BOOL)_handleUpdateForCalendar:(id)calendar;	// 0x3027b105
- (void)_initializePrincipalCalendarCache;	// 0x3027ae69
- (void)_prepareCalendarsBeforeRefresh;	// 0x30279709
- (void)_reallyRefreshCalendarProperties;	// 0x30278361
- (void)_sendAddsForCalendars;	// 0x30278d75
- (void)_sendDeletesForCalendars;	// 0x302788b5
- (void)_sendShareActionTasks;	// 0x30279979
- (int)_sharingStatusForContainer:(id)container;	// 0x3027a385
// declared property getter: - (id)calendarHomeSyncToken;	// 0x3027dea9
- (void)containerInfoSyncTask:(id)task completedWithNewSyncToken:(id)newSyncToken error:(id)error;	// 0x3027dcdd
- (void)containerInfoSyncTask:(id)task retrievedAddedOrModifiedContainers:(id)containers removedContainerURLs:(id)urls;	// 0x3027db85
- (void)containerInfoTask:(id)task completedWithContainers:(id)containers error:(id)error;	// 0x3027d759
- (void)dealloc;	// 0x3027806d
- (void)refreshCalendarProperties;	// 0x3027a0d1
// declared property setter: - (void)setCalendarHomeSyncToken:(id)token;	// 0x3027deb9
// declared property setter: - (void)setUseCalendarHomeSyncReport:(BOOL)report;	// 0x3027ded9
// declared property getter: - (BOOL)useCalendarHomeSyncReport;	// 0x3027dec9
@end

