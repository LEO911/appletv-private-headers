/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import </libobjc.A.h>
#import "NSCopying.h"

@class NSArray, NSMutableDictionary, NSData, NSString, NSDictionary, MLMovieProperties, MLContentRating;

@interface MLTrackImport : NSObject <NSCopying> {
	NSData *_artworkData;	// 4 = 0x4
	NSString *_assetFilePath;	// 8 = 0x8
	NSArray *_chapters;	// 12 = 0xc
	NSMutableDictionary *_properties;	// 16 = 0x10
	BOOL _shouldAddToPurchasedPlaylist;	// 20 = 0x14
	BOOL _shouldDeleteExistingArtwork;	// 21 = 0x15
	BOOL _assignArtworkCacheIDFromAlbum;	// 22 = 0x16
}
@property(copy, nonatomic) NSData *artworkData;	// G=0x3156987d; S=0x31569891; @synthesize=_artworkData
@property(copy, nonatomic) NSString *assetFilePath;	// G=0x315698a1; S=0x315698b5; @synthesize=_assetFilePath
@property(assign, nonatomic) BOOL assignArtworkCacheIDFromAlbum;	// G=0x315698c5; S=0x315698d5; @synthesize=_assignArtworkCacheIDFromAlbum
@property(copy, nonatomic) NSArray *chapters;	// G=0x315698e5; S=0x315698f9; @synthesize=_chapters
@property(copy, nonatomic) MLContentRating *contentRating;	// G=0x31568fa1; S=0x31569191; 
@property(readonly, assign, nonatomic) NSDictionary *entityProperties;	// G=0x3156901d; 
@property(assign, nonatomic) unsigned long mediaType;	// G=0x31569049; S=0x315691d9; 
@property(copy, nonatomic) MLMovieProperties *movieProperties;	// G=0x315690a9; S=0x3156927d; 
@property(assign, nonatomic) BOOL shouldAddToPurchasedPlaylist;	// G=0x31569909; S=0x31569919; @synthesize=_shouldAddToPurchasedPlaylist
@property(assign, nonatomic) BOOL shouldDeleteExistingArtwork;	// G=0x31569929; S=0x31569939; @synthesize=_shouldDeleteExistingArtwork
+ (void)initialize;	// 0x31568d2d
- (id)init;	// 0x31568ced
- (void).cxx_destruct;	// 0x31569949
- (void)_addSortStrings;	// 0x3156978d
// declared property getter: - (id)artworkData;	// 0x3156987d
// declared property getter: - (id)assetFilePath;	// 0x315698a1
// declared property getter: - (BOOL)assignArtworkCacheIDFromAlbum;	// 0x315698c5
// declared property getter: - (id)chapters;	// 0x315698e5
// declared property getter: - (id)contentRating;	// 0x31568fa1
- (id)copyEntityProperties;	// 0x31569451
- (id)copyWithZone:(NSZone *)zone;	// 0x31568e91
// declared property getter: - (id)entityProperties;	// 0x3156901d
// declared property getter: - (unsigned long)mediaType;	// 0x31569049
// declared property getter: - (id)movieProperties;	// 0x315690a9
- (void)normalizeEntityProperties;	// 0x31569471
// declared property setter: - (void)setArtworkData:(id)data;	// 0x31569891
// declared property setter: - (void)setAssetFilePath:(id)path;	// 0x315698b5
// declared property setter: - (void)setAssignArtworkCacheIDFromAlbum:(BOOL)album;	// 0x315698d5
// declared property setter: - (void)setChapters:(id)chapters;	// 0x315698f9
// declared property setter: - (void)setContentRating:(id)rating;	// 0x31569191
// declared property setter: - (void)setMediaType:(unsigned long)type;	// 0x315691d9
// declared property setter: - (void)setMovieProperties:(id)properties;	// 0x3156927d
// declared property setter: - (void)setShouldAddToPurchasedPlaylist:(BOOL)addToPurchasedPlaylist;	// 0x31569919
// declared property setter: - (void)setShouldDeleteExistingArtwork:(BOOL)deleteExistingArtwork;	// 0x31569939
- (void)setValue:(id)value forEntityProperty:(id)entityProperty;	// 0x31569375
// declared property getter: - (BOOL)shouldAddToPurchasedPlaylist;	// 0x31569909
// declared property getter: - (BOOL)shouldDeleteExistingArtwork;	// 0x31569929
- (id)valueForEntityProperty:(id)entityProperty;	// 0x31569431
@end

