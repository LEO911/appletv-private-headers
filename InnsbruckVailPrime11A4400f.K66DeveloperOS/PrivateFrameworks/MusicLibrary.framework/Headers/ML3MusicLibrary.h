/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import "ML3DatabaseConnectionDelegate.h"
#import "ML3DatabaseConnectionPoolDelegate.h"
#import </libobjc.A.h>

@class _LibraryNotification, ML3UbiquitousDatabase, NSArray, ML3DatabaseConnectionPool, ML3Container, ML3DatabaseConnection, NSString, ML3ArtworkUtility, NSMutableDictionary, ML3AccountCacheDatabase, ML3DatabaseMetadata, NSMutableArray, NSCountedSet;
@protocol OS_dispatch_queue;

@interface ML3MusicLibrary : NSObject <ML3DatabaseConnectionDelegate, ML3DatabaseConnectionPoolDelegate> {
	NSString *_libraryUID;	// 4 = 0x4
	NSObject<OS_dispatch_queue> *_atomicityQueue;	// 8 = 0x8
	BOOL _reloadForMediaServiceNeeded;	// 12 = 0xc
	NSMutableArray *_artworkConversionCompletionHandlers;	// 16 = 0x10
	NSString *_artworkConverterPIDNotifyName;	// 20 = 0x14
	int _artworkConverterPIDToken;	// 24 = 0x18
	BOOL _isConvertingArtwork;	// 28 = 0x1c
	ML3AccountCacheDatabase *_accountCacheDatabase;	// 32 = 0x20
	ML3UbiquitousDatabase *_ubiquitousDatabase;	// 36 = 0x24
	ML3DatabaseConnection *_geniusDatabase;	// 40 = 0x28
	NSCountedSet *_notifyNamesToIgnore;	// 44 = 0x2c
	NSMutableArray *_pendingNotifyPostNames;	// 48 = 0x30
	NSMutableDictionary *_pendingLocalNotificationsToPost;	// 52 = 0x34
	_LibraryNotification *_libraryChangedNotify;	// 56 = 0x38
	_LibraryNotification *_nonContentsNotify;	// 60 = 0x3c
	_LibraryNotification *_invisiblePropertyNotify;	// 64 = 0x40
	_LibraryNotification *_displayValuesNotify;	// 68 = 0x44
	_LibraryNotification *_syncGenerationNotify;	// 72 = 0x48
	_LibraryNotification *_libraryUIDNotify;	// 76 = 0x4c
	int _systemLanguageChangedToken;	// 80 = 0x50
	id _mcSettingsObserver;	// 84 = 0x54
	id _loggingObserver;	// 88 = 0x58
	int _willDeleteDatabaseNotifyToken;	// 92 = 0x5c
	ML3ArtworkUtility *_artworkUtility;	// 96 = 0x60
	iPhoneSortKeyBuilder *_sortKeyBuilder;	// 100 = 0x64
	BOOL _isHomeSharingLibraryLoaded;	// 104 = 0x68
	BOOL _isHomeSharingLibrary;	// 105 = 0x69
	BOOL _hasEverConnectedTo;	// 106 = 0x6a
	BOOL _keepPresignedValidyAfterVerification;	// 107 = 0x6b
	BOOL _currentThreadHasWriterConnectionCheckedOut;	// 108 = 0x6c
	ML3DatabaseConnectionPool *_connectionPool;	// 112 = 0x70
	NSString *_databasePath;	// 116 = 0x74
	NSArray *_libraryEntityFilterPredicates;	// 120 = 0x78
	NSArray *_libraryContainerFilterPredicates;	// 124 = 0x7c
}
@property(readonly, retain) ML3AccountCacheDatabase *accountCacheDatabase;	// G=0x31530d75; converted property
@property(retain) ML3ArtworkUtility *artworkUtility;	// G=0x3153b435; S=0x3153b449; @synthesize=_artworkUtility
@property(readonly, assign) long long autoFilledTracksTotalSize;	// G=0x31534449; 
@property(retain) ML3DatabaseConnectionPool *connectionPool;	// G=0x3153b411; S=0x3153b425; @synthesize=_connectionPool
@property(readonly, assign) long long currentContentRevision;	// G=0x3150fc3d; 
@property(readonly, assign) ML3Container *currentDevicePurchasesPlaylist;	// G=0x3152faf1; 
@property(readonly, assign) long long currentRevision;	// G=0x3150bcb5; 
@property(readonly, assign) BOOL currentThreadHasWriterConnectionCheckedOut;	// G=0x3153b4ed; @synthesize=_currentThreadHasWriterConnectionCheckedOut
@property(readonly, assign) ML3DatabaseMetadata *databaseInfo;	// G=0x3150c299; 
@property(retain) NSString *databasePath;	// G=0x3153b459; S=0x3153b46d; @synthesize=_databasePath
@property(readonly, retain) ML3DatabaseConnection *geniusDatabase;	// G=0x315156c1; converted property
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x3153b3e1; @synthesize=_hasEverConnectedTo
@property(assign, nonatomic) BOOL isHomeSharingLibrary;	// G=0x3152f3b1; S=0x3152f4b9; 
@property(assign, nonatomic) BOOL keepPresignedValidyAfterVerification;	// G=0x3153b3f1; S=0x3153b401; @synthesize=_keepPresignedValidyAfterVerification
@property(retain, nonatomic) NSArray *libraryContainerFilterPredicates;	// G=0x3153b4b5; S=0x3153b4c5; @synthesize=_libraryContainerFilterPredicates
@property(retain, nonatomic) NSArray *libraryEntityFilterPredicates;	// G=0x3153b47d; S=0x3153b48d; @synthesize=_libraryEntityFilterPredicates
@property(copy) NSString *libraryUID;	// G=0x31512809; S=0x3152f991; 
@property(readonly, assign) NSArray *localizedSectionIndexTitles;	// G=0x31510e09; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x3150e621; 
@property(readonly, assign) long long persistentID;	// G=0x3152f5ad; 
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x3150c211; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x3150e1b5; 
@property(assign) long long syncGenerationID;	// G=0x31512f81; S=0x3152f7ed; 
@property(readonly, retain) ML3UbiquitousDatabase *ubiquitousDatabase;	// G=0x3150c141; converted property
+ (BOOL)_hasArtworkConversionManifestTasksRemainingUsingConnection:(id)connection;	// 0x3153945d
+ (id)_purgeableTrackPredicateWithUrgency:(unsigned)urgency;	// 0x3153722d
+ (id)allPragmaSQL;	// 0x31571b09
+ (id)allSchemaSQL;	// 0x315718d9
+ (id)allTables;	// 0x31571be5
+ (id)allTriggersSQL;	// 0x31571b69
+ (BOOL)automaticDatabaseArtworkConversionEnabled;	// 0x3152e209
+ (BOOL)buildDatabaseTablesUsingConnection:(id)connection popuplateDatabaseTablesOnConnectionBlock:(id)block;	// 0x31571fe5
+ (void)configureMediaLibraryDatabaseConnection:(id)connection;	// 0x3152e435
+ (id)controlDirectoryPathWithBasePath:(id)basePath;	// 0x31585329
+ (BOOL)createIndexesUsingConnection:(id)connection;	// 0x31577c9d
+ (BOOL)createTriggersUsingConnection:(id)connection;	// 0x31577d95
+ (int)currentUserVersion;	// 0x3150bff5
+ (id)databasePathForUnitTest:(id)unitTest withBasePath:(id)basePath;	// 0x315901d5
+ (BOOL)defaultExcludeFromShuffleForMediaType:(unsigned long)mediaType;	// 0x31580081
+ (BOOL)defaultRememberBookmarkTimeForMediaType:(unsigned long)mediaType;	// 0x31580075
+ (void)disableAutomaticDatabaseArtworkConversion;	// 0x3152e1f9
+ (void)disableAutomaticDatabaseValidation;	// 0x3152e1e9
+ (void)disableSharedLibrary;	// 0x3152e1d9
+ (BOOL)dropIndexesUsingConnection:(id)connection;	// 0x31577c7d
+ (BOOL)dropIndexesUsingConnection:(id)connection tableNames:(const char *)names;	// 0x31577a01
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x315331c5
+ (id)fallbackGeniusDatabaseFilePath;	// 0x3152e129
+ (id)geniusDatabaseFilePath;	// 0x31515735
+ (BOOL)importationEnabled;	// 0x3152e42d
+ (BOOL)inTransactionUpdateSearchMapOnConnection:(id)transactionUpdateSearchMapOnConnection;	// 0x3154adb1
+ (BOOL)inTransactionUpdateSortMapOnConnection:(id)transactionUpdateSortMapOnConnection forceUpdateOriginals:(BOOL)originals;	// 0x3154a3d5
+ (id)indexSchemaSQL;	// 0x31571e5d
+ (void)initialize;	// 0x31505145
+ (id)itemIndexSchemaSQL;	// 0x31571dd5
+ (id)itemSchemaSQL;	// 0x315718c1
+ (id)localizedSectionDictionary;	// 0x3153b289
+ (id)localizedSectionHeaderForSectionHeader:(id)sectionHeader;	// 0x31514435
+ (id)localizedSectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x315143b1
+ (id)localizedSortingDetailsDictionary;	// 0x3153b28d
+ (id)mediaFolderPath;	// 0x31585219
+ (id)mediaFolderRelativePath:(id)path;	// 0x3158525d
+ (BOOL)migrateToCurrentUserVersionUsingConnection:(id)currentUserVersionUsingConnection musicLibrary:(id)library;	// 0x31572645
+ (BOOL)orderingLanguageMatchesSystemUsingConnection:(id)connection;	// 0x3150c001
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder;	// 0x31585a85
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base createParentFolderIfNecessary:(BOOL)necessary;	// 0x31585aa9
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base isFolder:(BOOL *)folder;	// 0x31585349
+ (BOOL)processHasDatabaseWritePermissions;	// 0x3152e25d
+ (id)sectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x31513fc5
+ (id)sectionIndexTitles;	// 0x31513f55
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x31505491
+ (id)sharedLibrary;	// 0x315055e1
+ (id)sharedLibraryDatabasePath;	// 0x3152e111
+ (id)sortMapNewSchemaSQL;	// 0x315718a9
+ (id)sortMapSchemaSQL;	// 0x31571891
+ (id)storeLinkSchemaSQL;	// 0x31571879
+ (id)systemCurrentLanguage;	// 0x3150c0a5
+ (id)unitTestableLibraryForTest:(id)test basePath:(id)path setupSQLFilenames:(id)filenames;	// 0x31590375
+ (BOOL)updateSortMapOnConnection:(id)connection;	// 0x3154a1fd
+ (BOOL)updateSortMapOnConnection:(id)connection forceUpdateOriginals:(BOOL)originals;	// 0x3154a215
+ (BOOL)updateTrackIntegrityOnConnection:(id)connection;	// 0x31537109
+ (BOOL)userVersionMatchesSystemUsingConnection:(id)connection;	// 0x3150bf25
+ (int)userVersionUsingConnection:(id)connection;	// 0x3150bf85
- (id)initWithPath:(id)path;	// 0x3152e659
- (id)initWithPath:(id)path readOnly:(BOOL)only populateUnitTestTablesBlock:(id)block;	// 0x3152e679
- (void).cxx_destruct;	// 0x3153b505
- (void)_atomicClearIsConvertingArtwork;	// 0x31538285
- (BOOL)_atomicTestAndSetIsConvertingArtworkWithCompletionHandler:(id)completionHandler;	// 0x31537d3d
- (unsigned)_convertAlbumGridBGRA1xToJPEG1xWithNotificationInterval:(double)notificationInterval;	// 0x3153abad
- (unsigned)_convertAlbumListJPEGToBGRAWithNotificationInterval:(double)notificationInterval;	// 0x3153ac9d
- (BOOL)_convertArtworkCacheID:(id)anId fromArtworkFormat:(unsigned)artworkFormat toArtworkFormat:(unsigned)artworkFormat3 sourceOptions:(id)options colorSpace:(CGColorSpaceRef)space;	// 0x31539709
- (void)_convertArtworkFormatsInBackground:(BOOL)background completionHandler:(id)handler;	// 0x3153a699
- (unsigned)_convertArtworkInManifsetFromArtworkFormat:(unsigned)artworkFormat toArtworkFormat:(unsigned)artworkFormat2 deleteOldFormat:(BOOL)format notificationInterval:(double)interval;	// 0x31539a65
- (unsigned)_convertLegacyArtworkFromArtworkBlobFilePath:(id)artworkBlobFilePath success:(BOOL *)success;	// 0x31538ec1
- (unsigned)_convertOriginalJPEGToCoverFlowJPEGWithNotificationInterval:(double)notificationInterval;	// 0x3153aeed
- (void)_delayableNotifyPost:(id)post localNotificationName:(id)name;	// 0x31514b15
- (void)_enqueueLocalNotificationName:(id)name isSourceExternal:(BOOL)external;	// 0x315384ad
- (void)_enqueueNotifyPostName:(id)name;	// 0x31538ab9
- (void)_enumeratePurgeableTracksForUrgency:(unsigned)urgency respectSongMattress:(BOOL)mattress usingBlock:(id)block;	// 0x315374a1
- (id)_newGeniusDBConnectionAtPath:(id)path;	// 0x31515751
- (void)_noteUnnecessaryConversionForDeviceTypeFromArtworkFormat:(unsigned)artworkFormat toArtworkFormat:(unsigned)artworkFormat2;	// 0x3153a569
- (void)_performOnGlobalArtworkConversionQueue:(id)queue;	// 0x31538345
- (void)_postChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x31537af5
- (void)_postDisplayValuesChangeNotificationLocalOnly:(BOOL)only;	// 0x31537ca1
- (void)_postInvisiblePropertyChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x31537c05
- (void)_postNonContentsChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x31514a79
- (void)accessSortKeyBuilder:(id)builder;	// 0x315111e1
// converted property getter: - (id)accountCacheDatabase;	// 0x31530d75
- (long long)addStringToSortMap:(id)sortMap;	// 0x3153333d
- (id)albumArtistForEffectiveAlbumArtistName:(id)effectiveAlbumArtistName;	// 0x31567629
- (id)albumForAlbumArtistPersistentID:(long long)albumArtistPersistentID albumName:(id)name feedURL:(id)url seasonNumber:(id)number compilation:(BOOL)compilation;	// 0x315477c5
- (id)artistForArtistName:(id)artistName seriesName:(id)name;	// 0x315466d1
- (id)artistGroupingKeyForArtistName:(id)artistName seriesName:(id)name;	// 0x31546665
- (id)artworkDataForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x31512ed1
// declared property getter: - (id)artworkUtility;	// 0x3153b435
// declared property getter: - (long long)autoFilledTracksTotalSize;	// 0x31534449
- (long long)autoFilledTracksTotalSizeWithUrgency:(unsigned)urgency;	// 0x3153445d
- (long long)autoFilledTracksTotalSizeWithUrgency:(unsigned)urgency respectSongMattress:(BOOL)mattress;	// 0x31534471
- (void)beginAutoConvertingArtworkFormats;	// 0x31536151
- (void)beginConvertingArtworkFormatsWithCompletionHandler:(id)completionHandler;	// 0x315361ed
- (BOOL)buildDatabaseTables;	// 0x315724fd
- (void)checkInDatabaseConnection:(id)databaseConnection;	// 0x31530639
- (id)checkoutReaderConnection;	// 0x315305f9
- (id)checkoutWriterConnection;	// 0x31530619
- (BOOL)coerceValidDatabase;	// 0x31578211
- (BOOL)compactArtwork;	// 0x31535cd5
- (id)composerForComposerName:(id)composerName;	// 0x315667a5
- (BOOL)connectionCloseDeletedDatabase:(id)database;	// 0x315304a5
- (void)connectionDidOpenDatabase:(id)connection;	// 0x3153043d
// declared property getter: - (id)connectionPool;	// 0x3153b411
- (void)connectionPool:(id)pool createdNewConnection:(id)connection;	// 0x31530575
- (void)connectionWillCloseDatabase:(id)connection;	// 0x315304cd
- (void)connectionWillOpenDatabase:(id)connection;	// 0x31530405
- (BOOL)createIndexes;	// 0x31577fdd
// declared property getter: - (long long)currentContentRevision;	// 0x3150fc3d
// declared property getter: - (id)currentDevicePurchasesPlaylist;	// 0x3152faf1
// declared property getter: - (long long)currentRevision;	// 0x3150bcb5
// declared property getter: - (BOOL)currentThreadHasWriterConnectionCheckedOut;	// 0x3153b4ed
- (void)databaseConnectionAllowingWrites:(BOOL)writes withBlock:(id)block;	// 0x31530659
// declared property getter: - (id)databaseInfo;	// 0x3150c299
// declared property getter: - (id)databasePath;	// 0x3153b459
- (void)dealloc;	// 0x3152f2fd
- (BOOL)deleteAllArtwork;	// 0x31535189
- (BOOL)deleteAndRecreateDatabaseUsingConnection:(id)connection;	// 0x3157816d
- (BOOL)deleteArtworkForCacheID:(id)cacheID;	// 0x3153543d
- (BOOL)deleteArtworkForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x31535791
- (BOOL)deleteArtworkForCacheID:(id)cacheID formatID:(unsigned)anId deleteAllFromConversionTable:(BOOL)conversionTable;	// 0x315357b5
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize;	// 0x315345c5
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(unsigned)urgency;	// 0x315345e9
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(unsigned)urgency respectSongMattress:(BOOL)mattress;	// 0x3153460d
- (BOOL)deleteDatabaseProperty:(id)property;	// 0x31536aed
- (void)deleteFromArtworkConversionForCacheID:(id)cacheID fromFormatID:(unsigned)formatID toFormatID:(unsigned)formatID3;	// 0x31535aa9
- (void)deletePresignedValidity;	// 0x31537071
- (BOOL)dropItemIndexes;	// 0x31577e8d
- (BOOL)emptyAllTables;	// 0x3153086d
- (void)enumeratePersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(unsigned)code usingBlock:(id)block;	// 0x31533681
- (void)enumeratePersistentIDsAfterRevision:(long long)revision usingBlock:(id)block;	// 0x31533ccd
// converted property getter: - (id)geniusDatabase;	// 0x315156c1
- (id)genreForGenre:(id)genre;	// 0x315562f5
- (void)getChangedPersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(int)code usingBlock:(id)block;	// 0x31533d71
- (id)groupingKeyForString:(id)string;	// 0x31531019
- (id)groupingKeysForStrings:(id)strings;	// 0x315311fd
- (BOOL)handleDatabaseValidation;	// 0x31568035
- (BOOL)handlePreprocessDatabase;	// 0x315683e5
- (BOOL)handleSchemaUpgrade;	// 0x315683b5
- (BOOL)hasArtworkForCacheID:(id)cacheID;	// 0x315349f9
- (BOOL)hasArtworkForCacheID:(id)cacheID ensureArtworkFileExists:(BOOL)exists;	// 0x31534a11
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x3153b3e1
- (BOOL)hasPresignedValidity;	// 0x31536d29
- (BOOL)insertArtworkWithImageData:(id)imageData forCacheID:(id)cacheID;	// 0x31534ffd
- (BOOL)insertArtworkWithImageData:(id)imageData forCacheID:(id)cacheID forFormatID:(unsigned)formatID;	// 0x31535389
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x3154b381
- (id)insertStringsIntoSortMap:(id)map;	// 0x3154b36d
- (id)insertStringsIntoSortMap:(id)map didReSortMap:(BOOL *)map2;	// 0x3154b0f5
- (BOOL)isCurrentThreadInTransaction;	// 0x315307e9
// declared property getter: - (BOOL)isHomeSharingLibrary;	// 0x3152f3b1
// declared property getter: - (BOOL)keepPresignedValidyAfterVerification;	// 0x3153b3f1
// declared property getter: - (id)libraryContainerFilterPredicates;	// 0x3153b4b5
// declared property getter: - (id)libraryEntityFilterPredicates;	// 0x3153b47d
// declared property getter: - (id)libraryUID;	// 0x31512809
- (void)loadArtworkForCacheID:(id)cacheID formatID:(unsigned)anId completionHandler:(id)handler;	// 0x31512e25
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x3151102d
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x31510e09
- (id)locationKindForKind:(id)kind;	// 0x3157b635
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x3150e621
- (void)migratePresignedValidity;	// 0x31536cc5
- (XXStruct_Cy4r_A)nameOrderForString:(id)string;	// 0x3154ae5d
- (void)notifyContentsDidChange;	// 0x31531605
- (void)notifyDisplayValuesPropertyDidChange;	// 0x31531631
- (void)notifyInvisiblePropertyDidChange;	// 0x3153161d
- (void)notifyNonContentsPropertyDidChange;	// 0x31514a61
- (void)performDatabaseTransactionWithBlock:(id)block;	// 0x315306d5
- (void)performReadOnlyDatabaseTransactionWithBlock:(id)block;	// 0x3153075d
// declared property getter: - (long long)persistentID;	// 0x3152f5ad
- (BOOL)persistentID:(long long)anId changedAfterRevision:(long long)revision revisionTrackingCode:(int)code;	// 0x315341f1
- (BOOL)populateArtworkCacheWithArtworkData:(id)artworkData trackValues:(id)values;	// 0x3156d6ad
- (BOOL)populateStaticItemsOfDynamicContainers;	// 0x31530fa1
// declared property getter: - (id)preferredAudioTracks;	// 0x3150c211
// declared property getter: - (id)preferredSubtitleTracks;	// 0x3150e1b5
- (BOOL)prepareUnitTestDatabaseWithSQLFromContentsOfFile:(id)file error:(id *)error;	// 0x3158fb21
- (void)reconnectToDatabase;	// 0x31530589
- (BOOL)removeLocationsForItemsMissingAssets;	// 0x315786a5
- (void)removeOrphanedTracks;	// 0x31536201
- (BOOL)removeSource:(int)source;	// 0x3157f329
- (BOOL)removeSource:(int)source fromTracksWithPersistentIDs:(id)persistentIDs;	// 0x3157f64d
- (BOOL)requiresNonSchemaUpdatesOnConnection:(id)connection;	// 0x315330a1
- (BOOL)requiresSchemaOnlyUpdatesOnConnection:(id)connection;	// 0x31532e75
- (BOOL)resetAllContents;	// 0x315787d1
- (void)savePlaylists;	// 0x315321bd
- (void)savePlaylistsSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x315321e1
- (void)saveTrackMetadata;	// 0x31531645
- (void)saveTrackMetadataSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x31531669
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x315112d1
// declared property setter: - (void)setArtworkUtility:(id)utility;	// 0x3153b449
// declared property setter: - (void)setConnectionPool:(id)pool;	// 0x3153b425
// declared property setter: - (void)setDatabasePath:(id)path;	// 0x3153b46d
// declared property setter: - (void)setIsHomeSharingLibrary:(BOOL)library;	// 0x3152f4b9
// declared property setter: - (void)setKeepPresignedValidyAfterVerification:(BOOL)verification;	// 0x3153b401
// declared property setter: - (void)setLibraryContainerFilterPredicates:(id)predicates;	// 0x3153b4c5
// declared property setter: - (void)setLibraryEntityFilterPredicates:(id)predicates;	// 0x3153b48d
// declared property setter: - (void)setLibraryUID:(id)uid;	// 0x3152f991
// declared property setter: - (void)setSyncGenerationID:(long long)anId;	// 0x3152f7ed
- (BOOL)setValue:(id)value forDatabaseProperty:(id)databaseProperty;	// 0x31536899
// declared property getter: - (long long)syncGenerationID;	// 0x31512f81
// converted property getter: - (id)ubiquitousDatabase;	// 0x3150c141
- (BOOL)updateActivePlaylistNamesForCurrentLanguage;	// 0x31568961
- (void)updateOrderingLanguagesForCurrentLanguage;	// 0x31568b0d
- (BOOL)updateSortMap;	// 0x31533539
- (void)updateTrackIntegrity;	// 0x315370cd
- (BOOL)validateDatabaseWithTimeout:(double)timeout;	// 0x3153080d
- (id)valueForDatabaseProperty:(id)databaseProperty;	// 0x31512ac9
- (BOOL)verifyPresignedValidity;	// 0x31536d9d
- (BOOL)writeToDatabaseArtworkForCacheID:(id)cacheID length:(unsigned long)length formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x31534ced
@end

