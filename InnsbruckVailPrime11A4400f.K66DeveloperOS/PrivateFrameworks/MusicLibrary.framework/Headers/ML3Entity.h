/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import </libobjc.A.h>

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x3150e28d; 
@property(assign) __weak ML3MusicLibrary *library;	// G=0x3151488d; S=0x31529ca5; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x31529cb9; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x31528c5d
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x31513909
+ (id)allProperties;	// 0x315296c1
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x3150c3d5
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x315296bd
+ (id)countingQueryForBaseQuery:(id)baseQuery countProperty:(id)property forIdentifier:(long long)identifier;	// 0x31528245
+ (id)defaultFilterPredicates;	// 0x31527f0d
+ (id)defaultOrderingProperties;	// 0x31528231
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x31528fd5
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x31545385
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x3150b2f9
+ (id)disambiguatedSelectSQLForProperty:(id)property;	// 0x315296c5
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x31529b45
+ (void)enumeratePersistentIDsInLibrary:(id)library matchingPredicate:(id)predicate orderingTerms:(id)terms persistentIDs:(const long long *)ids count:(unsigned)count usingBlock:(id)block;	// 0x31527085
+ (id)extraTablesToDelete;	// 0x315296b1
+ (id)extraTablesToInsert;	// 0x315296b5
+ (id)foreignColumnForProperty:(id)property;	// 0x3152823d
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x31528239
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x31513f05
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type revisionType:(int)type4;	// 0x315148f5
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type revisionType:(int)type4 usingConnection:(id)connection;	// 0x31525d89
+ (id)indexableSQLForProperties:(id)properties;	// 0x31529735
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId connection:(id)connection;	// 0x315258dd
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x315256dd
+ (BOOL)insertionChangesLibraryContents;	// 0x31526bb9
+ (id)joinClausesForProperty:(id)property;	// 0x3150b4a1
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x315130c1
+ (BOOL)libraryDynamicChangeForProperty:(id)property;	// 0x31528c59
+ (id)newSelectAllEntitiesSQLForProperties:(const id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x31527b41
+ (id)newSelectSQLForProperties:(const id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x3150dbf5
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x31527fb1
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x31528015
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x3150e239
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x315298d1
+ (id)persistentIDColumnForTable:(id)table;	// 0x315296b9
+ (id)predicateByOptimizingComparisonPredicate:(id)predicate;	// 0x31527f9d
+ (id)predicateByOptimizingPredicate:(id)predicate;	// 0x31527f29
+ (id)predicateIncludingSystemwidePredicatesWithPredicate:(id)predicate library:(id)library;	// 0x3153fd4d
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x3150b1f1
+ (id)predisambiguatedProperties;	// 0x315130c5
+ (BOOL)propertyIsCountProperty:(id)property;	// 0x31528241
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x315151fd
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x3154511d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x3150e965
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms;	// 0x31545531
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms propertyToCount:(id)count;	// 0x31545651
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms usingSections:(BOOL)sections;	// 0x31545795
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x31545209
+ (id)replacerWithProperties:(id)properties library:(id)library;	// 0x3157b0c5
+ (int)revisionTrackingCode;	// 0x31529b3d
+ (id)sectionPropertyForProperty:(id)property;	// 0x31528235
+ (id)subselectPropertyForProperty:(id)property;	// 0x31527b3d
+ (id)subselectStatementForProperty:(id)property;	// 0x31513165
+ (id)unsettableProperties;	// 0x31525ce9
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x31526179
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x3150d629
- (void).cxx_destruct;	// 0x3150e45d
- (id)copyInLibrary:(id)library;	// 0x31526bbd
- (id)copyWithZone:(NSZone *)zone;	// 0x31526da9
- (BOOL)deleteFromLibrary;	// 0x31529649
- (id)description;	// 0x31526ef1
- (void)didChangeValueForProperties:(id)properties;	// 0x31528a29
// declared property getter: - (BOOL)existsInLibrary;	// 0x3150e28d
- (void)getValues:(id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x3150d7e5
- (unsigned)hash;	// 0x31526ee1
- (void)incrementRevision;	// 0x31529c39
- (BOOL)isEqual:(id)equal;	// 0x31526e29
// declared property getter: - (id)library;	// 0x3151488d
- (BOOL)matchesPredicate:(id)predicate;	// 0x31527815
// declared property getter: - (long long)persistentID;	// 0x31529cb9
// declared property setter: - (void)setLibrary:(id)library;	// 0x31529ca5
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x31514529
- (BOOL)setValues:(id)values forProperties:(id)properties;	// 0x3152829d
- (void)setValues:(id)values forProperties:(id)properties async:(BOOL)async withCompletionBlock:(id)completionBlock;	// 0x315288b1
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x315145c1
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x31514729
- (id)valueForProperty:(id)property;	// 0x3150d79d
@end

