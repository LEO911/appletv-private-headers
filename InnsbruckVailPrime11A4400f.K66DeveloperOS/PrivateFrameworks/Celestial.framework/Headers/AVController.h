/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import </libobjc.A.h>


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x302aa3b1; S=0x302c2ce1; converted property
@property(assign) id delegate;	// G=0x302c3c9d; S=0x302a9cf9; converted property
@property(assign) BOOL muted;	// G=0x302c2e8d; S=0x302c2f85; converted property
@property(retain) id outputQTESFilePath;	// G=0x302aeb21; S=0x302c3155; converted property
@property(retain) id queue;	// G=0x302c1fc5; S=0x302a78b9; converted property
@property(retain) id queueFeeder;	// G=0x302c27dd; S=0x302b23cd; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x302c31d5; S=0x302a9eb9; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x302c197d; S=0x302c1995; converted property
@property(retain) id vibrationPattern;	// G=0x302c1a71; S=0x302c19ed; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x302c309d; S=0x302c30b1; converted property
@property(assign) float volume;	// G=0x302a9c59; S=0x302b27f9; converted property
+ (id)avController;	// 0x302c1c69
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x302c1ca5
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x302c1ab1
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x302c1ce9
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x302b1411
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x302c1c15
+ (BOOL)isSupportedMimeType:(id)type;	// 0x302c1bc1
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x302b28cd
- (id)init;	// 0x302a7175
- (id)initForStreaming;	// 0x302c1e31
- (id)initWithError:(id *)error;	// 0x302a76b5
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x302a7189
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x302a71bd
- (id)_figPlayerNotifications;	// 0x302c3d55
- (BOOL)activate:(id *)activate;	// 0x302c2b5d
- (id)addNextFeederItemToQueue;	// 0x302aa6e9
- (void)applyDesiredRepeatMode;	// 0x302c3841
- (id)attributeForKey:(id)key;	// 0x302a9449
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x302a8231
- (BOOL)beginInterruption:(id *)interruption;	// 0x302c2a35
- (BOOL)beginRepeatGap;	// 0x302b2da5
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x302ac251
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x302ac279
- (BOOL)canBeginInterruption;	// 0x302c2ae9
- (void)cancelAllCGImageRequests;	// 0x302c362d
- (void)cancelContinueAfterRepeatGap;	// 0x302ae1f9
- (void)checkQueueSpace;	// 0x302aa659
- (void)continueAfterRepeatGap;	// 0x302c2809
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x302c1fb9
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x302ae9c1
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x302aa49d
- (id)currentItem;	// 0x302aa4bd
- (void)currentItemHasChanged:(id)changed;	// 0x302acb8d
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x302ac6ed
// converted property getter: - (double)currentTime;	// 0x302aa3b1
- (void)dealloc;	// 0x302b86fd
// converted property getter: - (id)delegate;	// 0x302c3c9d
- (void)dequeueDeadItem;	// 0x302c46f5
- (void)dequeueFirstItem;	// 0x302b17b1
- (void)endInterruptionWithStatus:(id)status;	// 0x302c2c49
- (void)ensurePlaybackQueueImmed;	// 0x302c45b5
- (int)eqPreset;	// 0x302c3089
- (id)errorWithDescription:(id)description code:(long)code;	// 0x302c2999
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x302c25f5
- (void)feederRangeWasInserted:(id)inserted;	// 0x302c1fd9
- (void)feederRangeWasRemoved:(id)removed;	// 0x302c2319
- (void)figPlayerNotificationHandler:(id)handler;	// 0x302c471d
- (void)fmpEffectiveVolumeDidChange;	// 0x302c36f5
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x302ad055
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x302b81f1
- (BOOL)havePlayedCurrentItem;	// 0x302c27f5
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x302b14e9
- (BOOL)isCurrentItemReady;	// 0x302c4565
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x302c1fb5
- (BOOL)isValid;	// 0x302c3cf5
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x302b2cbd
- (id)lkLayer;	// 0x302c31c1
- (void)logPerformanceDataForCurrentItem;	// 0x302c400d
- (void)makeCurrentItemReady;	// 0x302ae239
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x302b2389
// converted property getter: - (BOOL)muted;	// 0x302c2e8d
- (BOOL)okToNotifyFromThisThread;	// 0x302aca55
// converted property getter: - (id)outputQTESFilePath;	// 0x302aeb21
- (void)pause;	// 0x302b14d5
- (BOOL)play:(id *)play;	// 0x302c2861
- (BOOL)playNextItem:(id *)item;	// 0x302b1709
- (AVControllerPrivate *)privateStorage;	// 0x302c1fa5
// converted property getter: - (id)queue;	// 0x302c1fc5
// converted property getter: - (id)queueFeeder;	// 0x302c27dd
- (float)rate;	// 0x302acd11
- (void)rateDidChangeToRate:(float)rate;	// 0x302b02f9
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x302c43f9
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x302b2025
- (int)repeatMode;	// 0x302b23b9
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x302c3375
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x302c3351
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x302c287d
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x302c3cb1
- (void)scheduleQueueSpaceCheck;	// 0x302adf91
- (void)scheduleUpdateTimeMarkerObservations;	// 0x302acdbd
- (void)seekToDate:(id)date;	// 0x302c2d51
- (void)setAVItemClass:(Class)aClass;	// 0x302c1dd5
- (void)setApplyVideoTrackMatrix;	// 0x302c31ed
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x302a8585
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x302c2ce1
- (void)setCurrentTime:(double)time options:(int)options;	// 0x302b24cd
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x302a9cf9
- (void)setEQPreset:(int)preset;	// 0x302a9d81
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x302b1555
- (void)setLayer:(id)layer;	// 0x302a9fbd
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x302c2f85
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x302c3155
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x302c4619
// converted property setter: - (void)setQueue:(id)queue;	// 0x302a78b9
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x302b23cd
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x302aa0e5
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x302ae065
- (BOOL)setRepeatMode:(int)mode;	// 0x302aa071
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x302a9eb9
- (void)setSubtitleRecipient:(id)recipient;	// 0x302a9e3d
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x302c1995
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x302c19ed
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x302c30b1
// converted property setter: - (void)setVolume:(float)volume;	// 0x302b27f9
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x302af581
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x302c31d5
- (void)stepByCount:(int)count;	// 0x302c2df1
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x302b1ea1
- (long)updateActionAtEnd;	// 0x302a9ed1
- (void)updateTimeMarkerObservations;	// 0x302af791
// converted property getter: - (BOOL)vibrationEnabled;	// 0x302c197d
// converted property getter: - (id)vibrationPattern;	// 0x302c1a71
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x302c309d
// converted property getter: - (float)volume;	// 0x302a9c59
@end

