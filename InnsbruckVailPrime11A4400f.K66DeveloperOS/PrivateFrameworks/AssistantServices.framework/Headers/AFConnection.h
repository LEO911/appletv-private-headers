/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
 */

#import </libobjc.A.h>

@class NSMutableDictionary, AFSpeechRecorder, NSXPCConnection, NSString;
@protocol AFAssistantUIService, AFSpeechDelegate;

@interface AFConnection : NSObject {
	NSXPCConnection *_connection;	// 4 = 0x4
	NSString *_outstandingRequestClass;	// 8 = 0x8
	unsigned _stateInSync : 1;	// 12 = 0xc
	unsigned _shouldSpeak : 1;	// 12 = 0xc
	unsigned _isCapturingSpeech : 1;	// 12 = 0xc
	unsigned _hasOutstandingRequest : 1;	// 12 = 0xc
	BOOL _hasActiveRequest;	// 13 = 0xd
	NSMutableDictionary *_replyHandlerForAceId;	// 16 = 0x10
	AFSpeechRecorder *_speechRecorder;	// 20 = 0x14
	BOOL _clientStateIsInSync;	// 24 = 0x18
	BOOL _voiceOverIsActive;	// 25 = 0x19
	id<AFAssistantUIService> _delegate;	// 28 = 0x1c
	id<AFSpeechDelegate> _speechDelegate;	// 32 = 0x20
}
@property(assign, nonatomic) __weak id<AFAssistantUIService> delegate;	// G=0x30197ff1; S=0x301956e1; @synthesize=_delegate
@property(readonly, assign, nonatomic) BOOL isRecording;	// G=0x30197999; 
@property(assign, nonatomic) __weak id<AFSpeechDelegate> speechDelegate;	// G=0x30198011; S=0x30198031; @synthesize=_speechDelegate
+ (id)_sharedSpeechRecorder;	// 0x30195b15
+ (BOOL)assistantIsSupported;	// 0x30196eb9
+ (BOOL)assistantIsSupportedForLanguageCode:(id)languageCode error:(id *)error;	// 0x30196d71
+ (void)beginMonitoringAvailability;	// 0x30196ec5
+ (id)currentLanguageCode;	// 0x3019707d
+ (void)defrost;	// 0x301971fd
+ (void)initialize;	// 0x30195611
+ (BOOL)isAvailable;	// 0x30196fc9
+ (BOOL)isReadyForLanguageCode:(id)languageCode;	// 0x301970d1
+ (id)outputVoice;	// 0x3019713d
+ (void)stopMonitoringAvailability;	// 0x30197031
+ (BOOL)userDataSyncNeeded;	// 0x30197071
- (id)init;	// 0x30195615
- (void).cxx_destruct;	// 0x30198045
- (void)_barrier;	// 0x3019822d
- (void)_cancelRequestTimeout;	// 0x301969ad
- (void)_checkAndSetIsCapturingSpeech:(BOOL)speech;	// 0x30195725
- (void)_clearAssistantInfoForAccountWithIdentifier:(id)identifier;	// 0x30198349
- (void)_clearConnection;	// 0x30196341
- (id)_clientService;	// 0x30198399
- (id)_clientServiceWithErrorHandler:(id)errorHandler;	// 0x301983e1
- (id)_connection;	// 0x3019638d
- (void)_connectionInterrupted;	// 0x30196159
- (void)_doCommand:(id)command reply:(id)reply;	// 0x301958e9
- (void)_extendRequestTimeout;	// 0x301969e9
- (void)_invokeRequestTimeout;	// 0x30196921
- (void)_requestDidEnd;	// 0x301958a1
- (void)_requestWillBeginWithRequestClass:(id)_request isSpeechRequest:(BOOL)request;	// 0x301957f9
- (void)_requestWillBeginWithRequestClass:(id)_request isSpeechRequest:(BOOL)request isBackgroundRequest:(BOOL)request3;	// 0x3019581d
- (void)_scheduleRequestTimeout;	// 0x301968d5
- (void)_setShouldSpeak:(BOOL)_set;	// 0x30195a49
- (id)_speechRecorder;	// 0x30195b99
- (void)_startRecordingWithRecorder:(id)recorder options:(id)options;	// 0x30197695
- (void)_tellDelegateRequestFailed:(id)failed requestClass:(id)aClass;	// 0x30195ce5
- (void)_tellDelegateRequestFinished;	// 0x30195c5d
- (void)_tellDelegateRequestWillStart;	// 0x30195be9
- (void)_tellDelegateShouldSpeakChanged:(BOOL)_tellDelegate;	// 0x30195d91
- (void)_tellSpeechDelegateRecognitionDidFail:(id)_tellSpeechDelegateRecognition;	// 0x301960d9
- (void)_tellSpeechDelegateRecordingDidBegin;	// 0x30195e7d
- (void)_tellSpeechDelegateRecordingDidCancel;	// 0x30195f65
- (void)_tellSpeechDelegateRecordingDidEnd;	// 0x30195ef1
- (void)_tellSpeechDelegateRecordingDidFail:(id)_tellSpeechDelegateRecording;	// 0x30195fd9
- (void)_tellSpeechDelegateRecordingWillBegin;	// 0x30195e09
- (void)_tellSpeechDelegateSpeechRecognized:(id)recognized;	// 0x30196059
- (void)_updateClientState;	// 0x30196bfd
- (void)_updateState;	// 0x30196a2d
- (void)_willCancelRequest;	// 0x30196cc9
- (void)_willCompleteRequest;	// 0x30196d39
- (void)_willFailRequestWithError:(id)error;	// 0x30196d01
- (void)_willStartRequestForSpeech:(BOOL)speech;	// 0x30196c6d
- (unsigned)audioSessionID;	// 0x301979c1
- (float)averagePower;	// 0x30197a29
- (void)cancelRequest;	// 0x3019815d
- (void)cancelSpeech;	// 0x30197751
- (void)clearAndSetApplicationContext;	// 0x30197f0d
- (void)clearAndSetApplicationContextWithBulletins:(id)bulletins;	// 0x30197f21
- (void)clearContext;	// 0x30197ed5
- (void)dealloc;	// 0x30195681
// declared property getter: - (id)delegate;	// 0x30197ff1
- (void)endSession;	// 0x30197191
// declared property getter: - (BOOL)isRecording;	// 0x30197999
- (float)peakPower;	// 0x30197a49
- (void)preheat;	// 0x301972d1
- (void)redoRequest;	// 0x301981f5
- (void)rollbackRequest;	// 0x301978c9
- (void)sendGenericAceCommand:(id)command;	// 0x30197a69
- (void)sendGenericAceCommand:(id)command conflictHandler:(id)handler;	// 0x30197a7d
- (void)sendReplyCommand:(id)command;	// 0x30197e41
- (void)setApplicationContextFromFrontmostAppIncludingBulletins:(id)frontmostAppIncludingBulletins;	// 0x30197fa1
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x301956e1
- (void)setIsStark:(BOOL)stark;	// 0x30197375
- (void)setLockState:(BOOL)state screenLocked:(BOOL)locked;	// 0x30197335
// declared property setter: - (void)setSpeechDelegate:(id)delegate;	// 0x30198031
- (void)setVoiceOverIsActive:(BOOL)active;	// 0x301973b1
- (BOOL)shouldSpeak;	// 0x301979ad
// declared property getter: - (id)speechDelegate;	// 0x30198011
- (void)startDirectActionRequestWithString:(id)string;	// 0x30197479
- (void)startRequestWithCorrectedText:(id)correctedText forSpeechIdentifier:(id)speechIdentifier;	// 0x30197919
- (void)startRequestWithText:(id)text;	// 0x30197405
- (void)startSpeechPronunciationRequestWithOptions:(id)options pronunciationContext:(id)context;	// 0x3019758d
- (void)startSpeechRequestWithOptions:(id)options;	// 0x301974dd
- (void)startSpeechRequestWithSpeechFileAtURL:(id)url;	// 0x301980c5
- (void)startSpeechRequestWithSpeechFileAtURL:(id)url isNarrowBand:(BOOL)band;	// 0x301980d9
- (void)stopSpeech;	// 0x301978b5
- (void)stopSpeechWithOptions:(id)options;	// 0x30197835
- (void)undoRequest;	// 0x301981bd
- (void)updatePower;	// 0x30197a09
- (void)updateSpeechOptions:(id)options;	// 0x301977e5
@end

