/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import </libobjc.A.h>
#import "GeoServices-Structs.h"


@interface GEOTileLoader : NSObject {
}
@property(readonly, assign, nonatomic) int diskHits;	// G=0x30ec6ed5; 
@property(assign) id internalDelegate;	// G=0x30ec6f49; S=0x30ec6f35; converted property
@property(retain) id internalDelegateQ;	// G=0x30ec6f79; S=0x30ec6f65; converted property
@property(readonly, assign, nonatomic) int memoryHits;	// G=0x30ec6eb9; 
@property(readonly, assign, nonatomic) int networkHits;	// G=0x30ec6ef1; 
+ (id)alloc;	// 0x30ec6ba9
+ (id)allocWithZone:(NSZone *)zone;	// 0x30ec6c21
+ (id)diskCacheLocation;	// 0x30ec6db1
+ (id)modernLoader;	// 0x30ec6b39
+ (void)setDiskCacheLocation:(id)location;	// 0x30ec6d85
+ (void)setMemoryCacheCountLimit:(unsigned)limit;	// 0x30ec6d2d
+ (void)setMemoryCacheMinCapacity:(unsigned)capacity;	// 0x30f94c4d
+ (void)setMemoryCacheTotalCostLimit:(unsigned)limit;	// 0x30ec6d59
+ (void)setTrackUsage:(BOOL)usage;	// 0x30ec6d01
+ (id)sharedLoader;	// 0x30f94d01
+ (id)singletonConfiguration;	// 0x30ec6ac5
+ (void)useLocalLoader;	// 0x30ec6cd5
+ (void)useRemoteLoader;	// 0x30ec6ca9
- (void)_loadTiles:(id)tiles options:(unsigned)options progress:(id)progress finished:(id)finished error:(id)error;	// 0x30f95009
- (void)beginPreloadSessionOfSize:(unsigned long long)size;	// 0x30f951f9
- (void)beginPreloadSessionOfSize:(unsigned long long)size forClient:(id)client;	// 0x30ec6e3d
- (id)cachedTileForKey:(const GEOTileKey *)key;	// 0x30ec6f95
- (void)cancelAllForClient:(id)client;	// 0x30ec6e29
- (void)cancelKey:(const GEOTileKey *)key forClient:(id)client;	// 0x30ec6e15
- (void)cancelRequest:(id)request;	// 0x30f9523d
- (void)clearAllCaches;	// 0x30ec6e65
- (void)closeDatabase;	// 0x30f94c51
- (void)closeForClient:(id)client;	// 0x30ec6ded
// declared property getter: - (int)diskHits;	// 0x30ec6ed5
- (void)endPreloadSession;	// 0x30f95221
- (void)endPreloadSessionForClient:(id)client;	// 0x30ec6e51
- (void)expireTilesWithPredicate:(id)predicate;	// 0x30ec6e79
- (id)expireTilesWithType:(unsigned char)type provider:(unsigned short)provider olderThan:(double)than;	// 0x30f95281
// converted property getter: - (id)internalDelegate;	// 0x30ec6f49
// converted property getter: - (id)internalDelegateQ;	// 0x30ec6f79
- (void)loadKey:(const GEOTileKey *)key priority:(unsigned)priority forClient:(id)client options:(unsigned)options callbackQ:(id)q beginNetwork:(id)network callback:(id)callback;	// 0x30ec6e01
- (void)loadTiles:(id)tiles progress:(id)progress finished:(id)finished error:(id)error;	// 0x30f95161
- (void)loadTilesFromCache:(id)cache progress:(id)progress finished:(id)finished error:(id)error;	// 0x30f951b1
- (void)loadTilesFromCacheAndNetwork:(id)cacheAndNetwork progress:(id)progress finished:(id)finished error:(id)error;	// 0x30f95189
// declared property getter: - (int)memoryHits;	// 0x30ec6eb9
// declared property getter: - (int)networkHits;	// 0x30ec6ef1
- (void)openDatabase;	// 0x30f94cfd
- (void)openForClient:(id)client;	// 0x30ec6dd9
- (void)preloadTiles:(id)tiles requireWiFi:(BOOL)fi progress:(id)progress finished:(id)finished error:(id)error;	// 0x30f951d9
- (void)registerTileDecoder:(id)decoder;	// 0x30e8dd5d
- (void)registerTileLoader:(Class)loader;	// 0x30ec6f21
- (id)renderDataForKey:(GEOTileKey *)key;	// 0x30f94d55
- (id)renderDataForKey:(GEOTileKey *)key asyncHandler:(id)handler;	// 0x30f94f49
- (void)reportCorruptTile:(const GEOTileKey *)tile;	// 0x30ec6e8d
// converted property setter: - (void)setInternalDelegate:(id)delegate;	// 0x30ec6f35
// converted property setter: - (void)setInternalDelegateQ:(id)q;	// 0x30ec6f65
- (void)setSortPoint:(const XXStruct_gLbvpC *)point;	// 0x30ec6ea1
- (void)shrinkDiskCacheToSize:(unsigned long long)size callbackQ:(id)q finished:(id)finished;	// 0x30ec6f0d
- (void)shrinkDiskCacheToSize:(unsigned long long)size finished:(id)finished;	// 0x30f95469
@end

