/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import </libobjc.A.h>
#import "NSURLConnectionDelegate.h"
#import "GeoServices-Structs.h"

@class NSMutableSet, GEOTileKeyList, NSURL, NSURLConnection, GEOTileKeyMap, NSString, NSData, GEONetworkDataReader;
@protocol GEOVoltaireMultiTileDownloaderDelegate;

__attribute__((visibility("hidden")))
@interface GEOVoltaireMultiTileDownloader : NSObject <NSURLConnectionDelegate> {
	GEOTileKeyList *_keyList;	// 4 = 0x4
	GEOTileKeyList *_requiresLocalization;	// 8 = 0x8
	GEOTileKeyList *_receivedKeys;	// 12 = 0xc
	NSURL *_requestURL;	// 16 = 0x10
	BOOL _useStatusCodes;	// 20 = 0x14
	NSMutableSet *_errorCodes;	// 24 = 0x18
	NSURLConnection *_connection;	// 28 = 0x1c
	GEONetworkDataReader *_reader;	// 32 = 0x20
	NSString *_sharedPrefix;	// 36 = 0x24
	NSString *_userAgent;	// 40 = 0x28
	NSData *_auditToken;	// 44 = 0x2c
	id<GEOVoltaireMultiTileDownloaderDelegate> _delegate;	// 48 = 0x30
	unsigned short _providerID;	// 52 = 0x34
	GEOTileKeyMap *_baseTilesWaitingForLocalized;	// 56 = 0x38
	GEOTileKeyMap *_localizedTilesWaitingForBase;	// 60 = 0x3c
	NSString *_postString;	// 64 = 0x40
	BOOL _requireWiFi;	// 68 = 0x44
	int _attempts;	// 72 = 0x48
	double _startTime;	// 76 = 0x4c
	double _timeout;	// 84 = 0x54
}
@property(retain, nonatomic) NSData *auditToken;	// G=0x30f08381; S=0x30f08391; @synthesize=_auditToken
@property(assign, nonatomic) id<GEOVoltaireMultiTileDownloaderDelegate> delegate;	// G=0x30f08341; S=0x30f08351; @synthesize=_delegate
@property(readonly, assign, nonatomic) NSURL *requestURL;	// G=0x30f083a1; @synthesize=_requestURL
@property(assign, nonatomic) BOOL requireWiFi;	// G=0x30f083d1; S=0x30f083e1; @synthesize=_requireWiFi
@property(assign, nonatomic) BOOL useStatusCodes;	// G=0x30f083b1; S=0x30f083c1; @synthesize=_useStatusCodes
@property(retain, nonatomic) NSString *userAgent;	// G=0x30f08361; S=0x30f08371; @synthesize=_userAgent
- (id)initWithURL:(id)url keyList:(id)list;	// 0x30f066a1
- (void)_cancelWithError:(id)error;	// 0x30f06f59
- (void)_cleanupConnection;	// 0x30f06e8d
- (void)_failWithError:(id)error;	// 0x30f06f25
- (id)_localizationURLForTileKey:(GEOTileKey *)tileKey;	// 0x30f06fb1
- (id)_localizationURLIfNecessaryForTileKey:(GEOTileKey *)tileKey;	// 0x30f070f9
- (id)_mergeBaseTile:(id)tile withLocalizationTile:(id)localizationTile;	// 0x30f075d9
- (GEOTileKey)_tileKeyForURL:(id)url edition:(unsigned *)edition isLocalized:(BOOL *)localized;	// 0x30f07285
- (void)_tryParseTiles;	// 0x30f075e1
- (id)_urlForTileKey:(GEOTileKey *)tileKey;	// 0x30f07151
// declared property getter: - (id)auditToken;	// 0x30f08381
- (void)cancel;	// 0x30f06e25
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x30f08145
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x30f07d31
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x30f07b1d
- (void)connectionDidFinishLoading:(id)connection;	// 0x30f07de1
- (void)dealloc;	// 0x30f06755
// declared property getter: - (id)delegate;	// 0x30f08341
- (double)elapsed;	// 0x30f06e61
- (void)logDownloadDetails;	// 0x30f0825d
// declared property getter: - (id)requestURL;	// 0x30f083a1
// declared property getter: - (BOOL)requireWiFi;	// 0x30f083d1
// declared property setter: - (void)setAuditToken:(id)token;	// 0x30f08391
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x30f08351
// declared property setter: - (void)setRequireWiFi:(BOOL)fi;	// 0x30f083e1
// declared property setter: - (void)setUseStatusCodes:(BOOL)codes;	// 0x30f083c1
// declared property setter: - (void)setUserAgent:(id)agent;	// 0x30f08371
- (void)start;	// 0x30f06855
// declared property getter: - (BOOL)useStatusCodes;	// 0x30f083b1
// declared property getter: - (id)userAgent;	// 0x30f08361
@end

