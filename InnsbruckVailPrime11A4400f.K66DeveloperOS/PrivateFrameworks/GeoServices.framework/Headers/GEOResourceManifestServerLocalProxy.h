/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import </libobjc.A.h>
#import "NSURLConnectionDelegate.h"
#import "GEOResourceManifestServerProxy.h"

@class GEOResourceManifestDownload, GEOResourceLoader, GEOActiveTileGroup, NSMutableData, NSURLConnection, NSString, NSMutableDictionary, NSTimer, NSError, NSLock;
@protocol GEOResourceManifestServerProxyDelegate;

__attribute__((visibility("hidden")))
@interface GEOResourceManifestServerLocalProxy : NSObject <NSURLConnectionDelegate, GEOResourceManifestServerProxy> {
	id<GEOResourceManifestServerProxyDelegate> _delegate;	// 4 = 0x4
	NSURLConnection *_connection;	// 8 = 0x8
	NSMutableData *_responseData;	// 12 = 0xc
	NSString *_responseETag;	// 16 = 0x10
	BOOL _isObservingManifestReachability;	// 20 = 0x14
	NSTimer *_manifestUpdateTimer;	// 24 = 0x18
	BOOL _isObservingTileGroupReachability;	// 28 = 0x1c
	NSTimer *_tileGroupUpdateTimer;	// 32 = 0x20
	GEOResourceManifestDownload *_resourceManifest;	// 36 = 0x24
	GEOActiveTileGroup *_activeTileGroup;	// 40 = 0x28
	GEOResourceLoader *_resourceLoader;	// 44 = 0x2c
	NSMutableDictionary *_resourceRetainCounts;	// 48 = 0x30
	BOOL _started;	// 52 = 0x34
	BOOL _hiDPI;	// 53 = 0x35
	unsigned _manifestRetryCount;	// 56 = 0x38
	unsigned _tileGroupRetryCount;	// 60 = 0x3c
	NSString *_authToken;	// 64 = 0x40
	NSLock *_authTokenLock;	// 68 = 0x44
	NSError *_lastResourceManifestLoadError;	// 72 = 0x48
}
@property(readonly, retain) NSString *authToken;	// G=0x30f2879d; converted property
@property(assign, nonatomic) id<GEOResourceManifestServerProxyDelegate> delegate;	// G=0x30f2f3d1; S=0x30f2f3e1; @synthesize=_delegate
- (id)initWithDelegate:(id)delegate;	// 0x30f285b5
- (void)_activeTileGroupOverridesChanged:(id)changed;	// 0x30f2c065
- (void)_cancelConnection;	// 0x30f2be15
- (void)_changeActiveTileGroup:(id)group flushTileCache:(BOOL)cache;	// 0x30f28f29
- (void)_cleanupConnection;	// 0x30f2be75
- (void)_considerChangingActiveTileGroup;	// 0x30f2b6dd
- (void)_countryProvidersDidChange:(id)_countryProviders;	// 0x30f2c36d
- (void)_forceChangeActiveTileGroup:(id)group flushTileCache:(BOOL)cache ignoreIdentifier:(BOOL)identifier;	// 0x30f2b911
- (id)_idealTileGroupToUse;	// 0x30f2b541
- (void)_loadFromDisk;	// 0x30f28ab9
- (id)_manifestURL;	// 0x30f2c54d
- (void)_purgeOldRegionalResources;	// 0x30f2ed45
- (void)_reachabilityChanged:(id)changed;	// 0x30f2c429
- (void)_registerReachabilityObserver:(unsigned)observer;	// 0x30f2c39d
- (id)_resourceInfosForTileGroup:(id)tileGroup;	// 0x30f2df11
- (void)_retainResource:(id)resource;	// 0x30f2e8e1
- (void)_scheduleTileGroupUpdateTimerWithTimeInterval:(double)timeInterval;	// 0x30f2b831
- (void)_scheduleUpdateTimerWithTimeInterval:(double)timeInterval;	// 0x30f2cf41
- (void)_tileGroupTimerFired:(id)fired;	// 0x30f2b8c1
- (void)_updateManifest;	// 0x30f2cc1d
- (BOOL)_updateManifestIfNecessary;	// 0x30f2caf9
- (void)_updateTimerFired:(id)fired;	// 0x30f2cfd1
- (void)_writeActiveTileGroupToDisk:(id)disk;	// 0x30f2c1fd
- (void)_writeManifestToDisk:(id)disk;	// 0x30f2c2b5
// converted property getter: - (id)authToken;	// 0x30f2879d
- (void)closeConnection;	// 0x30f28799
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x30f2dd65
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x30f2d351
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x30f2d021
- (void)connectionDidFinishLoading:(id)connection;	// 0x30f2d395
- (void)dealloc;	// 0x30f2862d
// declared property getter: - (id)delegate;	// 0x30f2f3d1
- (oneway void)forceUpdate;	// 0x30f2ce19
- (void)getResourceManifestWithHandler:(id)handler;	// 0x30f2ce29
- (void)openConnection;	// 0x30f28795
- (oneway void)releaseResources:(id)resources;	// 0x30f2ea6d
- (oneway void)resetActiveTileGroup;	// 0x30f2bffd
- (oneway void)retainResources:(id)resources;	// 0x30f2e9a1
- (id)serverQueue;	// 0x30f285a5
- (oneway void)setActiveTileGroupIdentifier:(id)identifier;	// 0x30f2bedd
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x30f2f3e1
- (oneway void)startServer:(id)server;	// 0x30f28809
@end

