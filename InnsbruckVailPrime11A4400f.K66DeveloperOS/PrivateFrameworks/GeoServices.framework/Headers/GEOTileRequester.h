/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import </libobjc.A.h>

@class NSString, NSData, NSThread, GEOTileKeyList;
@protocol GEOTileRequesterDelegate;

@interface GEOTileRequester : NSObject {
	GEOTileKeyList *_keyList;	// 4 = 0x4
	id<GEOTileRequesterDelegate> _delegate;	// 8 = 0x8
	id _context;	// 12 = 0xc
	NSThread *_thread;	// 16 = 0x10
	NSString *_bundleIdentifier;	// 20 = 0x14
	NSString *_bundleVersion;	// 24 = 0x18
	NSData *_auditToken;	// 28 = 0x1c
	BOOL _requireWiFi;	// 32 = 0x20
}
@property(retain, nonatomic) NSData *auditToken;	// G=0x30ed8ea1; S=0x30ed8eb1; @synthesize=_auditToken
@property(retain, nonatomic) NSString *bundleIdentifier;	// G=0x30ed8e61; S=0x30ed8e71; @synthesize=_bundleIdentifier
@property(retain, nonatomic) NSString *bundleVersion;	// G=0x30ed8e81; S=0x30ed8e91; @synthesize=_bundleVersion
@property(retain, nonatomic) id context;	// G=0x30ed8e41; S=0x30ed8e51; @synthesize=_context
@property(retain, nonatomic) id<GEOTileRequesterDelegate> delegate;	// G=0x30ed8df1; S=0x30ed8e01; @synthesize=_delegate
@property(readonly, assign, nonatomic) GEOTileKeyList *keyList;	// G=0x30ed8e11; @synthesize=_keyList
@property(assign, nonatomic) BOOL requireWiFi;	// G=0x30ed8ec1; S=0x30ed8ed1; @synthesize=_requireWiFi
@property(retain, nonatomic) NSThread *thread;	// G=0x30ed8e21; S=0x30ed8e31; @synthesize=_thread
+ (unsigned)expiringTilesetsCount;	// 0x30ed8d21
+ (XXStruct_nbUehC *)newExpiringTilesets;	// 0x30ed8d25
+ (BOOL)skipNetworkForKeysWhenPreloading:(id)keysWhenPreloading;	// 0x30ed8d29
+ (unsigned char)tileProviderIdentifier;	// 0x30ed8cbd
- (id)initWithKeyList:(id)keyList;	// 0x30ed8cc1
// declared property getter: - (id)auditToken;	// 0x30ed8ea1
// declared property getter: - (id)bundleIdentifier;	// 0x30ed8e61
// declared property getter: - (id)bundleVersion;	// 0x30ed8e81
- (void)cancel;	// 0x30ed8d19
// declared property getter: - (id)context;	// 0x30ed8e41
- (void)dealloc;	// 0x30ed8d2d
// declared property getter: - (id)delegate;	// 0x30ed8df1
// declared property getter: - (id)keyList;	// 0x30ed8e11
// declared property getter: - (BOOL)requireWiFi;	// 0x30ed8ec1
// declared property setter: - (void)setAuditToken:(id)token;	// 0x30ed8eb1
// declared property setter: - (void)setBundleIdentifier:(id)identifier;	// 0x30ed8e71
// declared property setter: - (void)setBundleVersion:(id)version;	// 0x30ed8e91
// declared property setter: - (void)setContext:(id)context;	// 0x30ed8e51
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x30ed8e01
// declared property setter: - (void)setRequireWiFi:(BOOL)fi;	// 0x30ed8ed1
// declared property setter: - (void)setThread:(id)thread;	// 0x30ed8e31
- (void)start;	// 0x30ed8d15
// declared property getter: - (id)thread;	// 0x30ed8e21
- (unsigned)tileSetForKey:(const GEOTileKey *)key;	// 0x30ed8d1d
@end

