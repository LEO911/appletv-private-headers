/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import </libobjc.A.h>
#import "NSCoding.h"
#import "NSCopying.h"


@interface TSDBezierPath : NSObject <NSCopying, NSCoding> {
	int sfr_elementCount;	// 4 = 0x4
	int sfr_elementMax;	// 8 = 0x8
	PATHSEGMENT *sfr_head;	// 12 = 0xc
	float *sfr_elementLength;	// 16 = 0x10
	float sfr_totalLength;	// 20 = 0x14
	int sfr_lastSubpathIndex;	// 24 = 0x18
	void *sfr_extraSegments;	// 28 = 0x1c
	float sfr_lineWidth;	// 32 = 0x20
	CGRect sfr_controlPointBounds;	// 36 = 0x24
	float sfr_miterLimit;	// 52 = 0x34
	float sfr_flatness;	// 56 = 0x38
	float *sfr_dashedLinePattern;	// 60 = 0x3c
	unsigned sfr_dashedLineCount;	// 64 = 0x40
	float sfr_dashedLinePhase;	// 68 = 0x44
	void *sfr_path;	// 72 = 0x48
	int sfr_extraSegmentCount;	// 76 = 0x4c
	int sfr_extraSegmentMax;	// 80 = 0x50
	struct {
		unsigned sfr_flags : 8;
		unsigned sfr_pathState : 2;
		unsigned sfr_calculatedLengths : 1;
		unsigned sfr_unused : 21;
	} sfr_bpFlags;	// 84 = 0x54
}
@property(assign) float flatness;	// G=0x3176ad85; S=0x3176ad95; converted property
@property(assign) unsigned lineCapStyle;	// G=0x3176ace1; S=0x3176acf5; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x3176ad0d; S=0x3176ad21; converted property
@property(assign) float lineWidth;	// G=0x3176ad41; S=0x3176ad51; converted property
@property(assign) float miterLimit;	// G=0x3176ad65; S=0x3176ad75; converted property
@property(assign) unsigned windingRule;	// G=0x31769acd; S=0x317698b9; converted property
+ (id)bezierPath;	// 0x31765495
+ (id)bezierPathWithCGPath:(CGPathRef)cgpath;	// 0x31841ebd
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x319a5d91
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x317d4bf1
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect cornerRadius:(float)radius;	// 0x319a5dd1
+ (id)bezierPathWithStart:(CGPoint)start end:(CGPoint)end;	// 0x319a5d45
+ (void)clipRect:(CGRect)rect;	// 0x3176af7d
+ (float)defaultFlatness;	// 0x319a5ff5
+ (unsigned)defaultLineCapStyle;	// 0x319a6035
+ (unsigned)defaultLineJoinStyle;	// 0x319a6055
+ (float)defaultLineWidth;	// 0x319a6075
+ (float)defaultMiterLimit;	// 0x319a5fd5
+ (unsigned)defaultWindingRule;	// 0x319a6015
+ (void)fillRect:(CGRect)rect;	// 0x319a5de1
+ (float)flatness;	// 0x319a8289
+ (void)initialize;	// 0x31765451
+ (unsigned)lineCapStyle;	// 0x319a82c9
+ (unsigned)lineJoinStyle;	// 0x319a82e9
+ (float)lineWidth;	// 0x319a8309
+ (float)miterLimit;	// 0x319a8269
+ (void)setDefaultFlatness:(float)flatness;	// 0x319a5fe5
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x319a6025
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x319a6045
+ (void)setDefaultLineWidth:(float)width;	// 0x319a6065
+ (void)setDefaultMiterLimit:(float)limit;	// 0x319a5fc5
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x319a6005
+ (void)setFlatness:(float)flatness;	// 0x319a8279
+ (void)setLineCapStyle:(unsigned)style;	// 0x319a82b9
+ (void)setLineJoinStyle:(unsigned)style;	// 0x319a82d9
+ (void)setLineWidth:(float)width;	// 0x319a82f9
+ (void)setMiterLimit:(float)limit;	// 0x319a8259
+ (void)setWindingRule:(unsigned)rule;	// 0x319a8299
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x319a5f55
+ (void)strokeRect:(CGRect)rect;	// 0x319a5e29
+ (unsigned)windingRule;	// 0x319a82a9
- (id)init;	// 0x317654d5
- (id)initWithCString:(const char *)cstring;	// 0x319a7e9d
- (id)initWithCoder:(id)coder;	// 0x319a7b55
- (id).cxx_construct;	// 0x317654d1
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x3176935d
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x3176c131
- (void)_appendToPath:(id)path;	// 0x3176abf9
- (id)_copyFlattenedPath;	// 0x319a6815
- (void)_deviceClosePath;	// 0x317695e1
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x3176c26d
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x31769591
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x31769291
- (void)_doPath;	// 0x319a6351
- (void)addClip;	// 0x317d4c35
- (void)appendBezierPath:(id)path;	// 0x3176aabd
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x319a7699
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x3176be71
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x3176beb1
- (void)appendBezierPathWithArcWithEllipseBounds:(CGRect)ellipseBounds startAngle:(float)angle swingAngle:(float)angle3 angleType:(int)type startNewPath:(BOOL)path;	// 0x3188a8fd
- (void)appendBezierPathWithArcWithEllipseBounds:(CGRect)ellipseBounds startRadialVector:(CGPoint)vector endRadialVector:(CGPoint)vector3 angleSign:(int)sign startNewPath:(BOOL)path;	// 0x31841c5d
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x3176bcd5
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x3176b61d
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x317691b5
- (void)attachBezierPath:(id)path;	// 0x317e6e49
- (id)bezierPathByFlatteningPath;	// 0x319a6775
- (id)bezierPathByReversingPath;	// 0x319a6869
- (CGRect)bounds;	// 0x319a6fe5
- (const char *)cString;	// 0x319a7bc9
- (float)calculateLengthOfElement:(int)element;	// 0x319a7229
- (void)calculateLengths;	// 0x319a72b9
- (CGPathRef)cgPath;	// 0x319a6a2d
- (void)closePath;	// 0x317695d1
- (BOOL)containsPoint:(CGPoint)point;	// 0x319a7a69
- (CGRect)controlPointBounds;	// 0x319a6d81
- (id)copyWithZone:(NSZone *)zone;	// 0x3176a939
- (CGPoint)currentPoint;	// 0x317e711d
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x3176c5a5
- (void)dealloc;	// 0x31769ae1
- (id)description;	// 0x319a8319
- (unsigned)elementAtIndex:(int)index;	// 0x319a747d
- (unsigned)elementAtIndex:(int)index allPoints:(CGPoint *)points;	// 0x319a7491
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x317e7031
- (int)elementCount;	// 0x317e701d
- (void)encodeWithCoder:(id)coder;	// 0x319a7ae1
- (void)fill;	// 0x317699b9
- (void)finalize;	// 0x319a6089
// converted property getter: - (float)flatness;	// 0x3176ad85
- (void)flattenIntoPath:(id)path;	// 0x319a6661
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x319a62c5
- (BOOL)isCircular;	// 0x319a6cc1
- (BOOL)isClockwise;	// 0x319a70a5
- (BOOL)isEmpty;	// 0x31769575
- (BOOL)isFlat;	// 0x319a7059
- (BOOL)isRectangular;	// 0x319a6a59
- (float)length;	// 0x319a7399
- (float)lengthOfElement:(int)element;	// 0x319a73d9
- (float)lengthToElement:(int)element;	// 0x319a741d
// converted property getter: - (unsigned)lineCapStyle;	// 0x3176ace1
// converted property getter: - (unsigned)lineJoinStyle;	// 0x3176ad0d
- (void)lineToPoint:(CGPoint)point;	// 0x31769505
// converted property getter: - (float)lineWidth;	// 0x3176ad41
// converted property getter: - (float)miterLimit;	// 0x3176ad65
- (void)moveToPoint:(CGPoint)point;	// 0x3176927d
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x319a620d
- (void)relativeLineToPoint:(CGPoint)point;	// 0x319a61a5
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x319a613d
- (void)removeAllPoints;	// 0x317e6a79
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x319a7595
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x3176ad95
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x3176acf5
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x317e21d5
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x3176ad21
// converted property setter: - (void)setLineWidth:(float)width;	// 0x3176ad51
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x3176ad75
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x317698b9
- (void)stroke;	// 0x3176ba41
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x319a6449
- (void)transformUsingAffineTransform:(CGAffineTransform)transform;	// 0x3176c3e5
// converted property getter: - (unsigned)windingRule;	// 0x31769acd
@end

