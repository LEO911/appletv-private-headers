/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OADCharacterProperties.h"

@class OADTextSpacing, OADBulletFont, OADBulletProperties, OADBulletSize, NSMutableArray, OADBulletColor;

@interface OADParagraphProperties : OADCharacterProperties {
	OADBulletSize *mBulletSize;	// 100 = 0x64
	OADBulletColor *mBulletColor;	// 104 = 0x68
	OADBulletFont *mBulletFont;	// 108 = 0x6c
	OADBulletProperties *mBulletProperties;	// 112 = 0x70
	OADTextSpacing *mLineSpacing;	// 116 = 0x74
	OADTextSpacing *mBeforeSpacing;	// 120 = 0x78
	OADTextSpacing *mAfterSpacing;	// 124 = 0x7c
	NSMutableArray *mTabStops;	// 128 = 0x80
	double mLeftMargin;	// 132 = 0x84
	double mRightMargin;	// 140 = 0x8c
	double mIndent;	// 148 = 0x94
	double mDefaultTab;	// 156 = 0x9c
	int mLevel;	// 164 = 0xa4
	int mBulletCharSet;	// 168 = 0xa8
	unsigned char mAlign;	// 172 = 0xac
	unsigned char mWrap;	// 173 = 0xad
	unsigned char mFontAlign;	// 174 = 0xae
	unsigned mIsRightToLeft : 1;	// 175 = 0xaf
	unsigned mIsLatinLineBreak : 1;	// 175 = 0xaf
	unsigned mIsHangingPunctuation : 1;	// 175 = 0xaf
	unsigned mHasTabStops : 1;	// 175 = 0xaf
	unsigned mHasLeftMargin : 1;	// 175 = 0xaf
	unsigned mHasRightMargin : 1;	// 175 = 0xaf
	unsigned mHasLevel : 1;	// 175 = 0xaf
	unsigned mHasIndent : 1;	// 175 = 0xaf
	unsigned mHasAlign : 1;	// 176 = 0xb0
	unsigned mHasDefaultTab : 1;	// 176 = 0xb0
	unsigned mHasIsRightToLeft : 1;	// 176 = 0xb0
	unsigned mHasWrap : 1;	// 176 = 0xb0
	unsigned mHasFontAlign : 1;	// 176 = 0xb0
	unsigned mHasIsLatinLineBreak : 1;	// 176 = 0xb0
	unsigned mHasIsHangingPunctuation : 1;	// 176 = 0xb0
	unsigned mHasBulletCharSet : 1;	// 176 = 0xb0
}
@property(retain) id afterSpacing;	// G=0x316cc7c9; S=0x316b1911; converted property
@property(assign) int align;	// G=0x316cc9d5; S=0x316b19fd; converted property
@property(retain) id beforeSpacing;	// G=0x316cc761; S=0x316b18d1; converted property
@property(assign) int bulletCharSet;	// G=0x317caecd; S=0x316b1b25; converted property
@property(retain) id bulletColor;	// G=0x316ccc39; S=0x316b1b89; converted property
@property(retain) id bulletFont;	// G=0x316ccca1; S=0x316b1bc9; converted property
@property(retain) id bulletProperties;	// G=0x316ccd09; S=0x316b1c09; converted property
@property(retain) id bulletSize;	// G=0x316ccbd1; S=0x316b1b49; converted property
@property(assign) double defaultTab;	// G=0x316cca41; S=0x316b1a21; converted property
@property(assign) int fontAlign;	// G=0x318f1251; S=0x316b1aa9; converted property
@property(assign) double indent;	// G=0x316cc961; S=0x316b19d1; converted property
@property(assign) BOOL isHangingPunctuation;	// G=0x318f12bd; S=0x316b1b05; converted property
@property(assign) BOOL isLatinLineBreak;	// G=0x318f1285; S=0x316b1acd; converted property
@property(assign) BOOL isRightToLeft;	// G=0x318f11e5; S=0x316b1a51; converted property
@property(assign) double leftMargin;	// G=0x316cbf41; S=0x316b1951; converted property
@property(assign) int level;	// G=0x316cc8f5; S=0x316b19ad; converted property
@property(retain) id lineSpacing;	// G=0x316cc6f9; S=0x316b1851; converted property
@property(assign) double rightMargin;	// G=0x31779909; S=0x316b1981; converted property
@property(assign) int wrap;	// G=0x318f121d; S=0x316b1a85; converted property
+ (id)defaultProperties;	// 0x316c6381
- (id)init;	// 0x316c6351
- (id)initWithDefaults;	// 0x316b0909
- (id)addTabStop;	// 0x317caaa5
// converted property getter: - (id)afterSpacing;	// 0x316cc7c9
// converted property getter: - (int)align;	// 0x316cc9d5
// converted property getter: - (id)beforeSpacing;	// 0x316cc761
// converted property getter: - (int)bulletCharSet;	// 0x317caecd
// converted property getter: - (id)bulletColor;	// 0x316ccc39
// converted property getter: - (id)bulletFont;	// 0x316ccca1
// converted property getter: - (id)bulletProperties;	// 0x316ccd09
// converted property getter: - (id)bulletSize;	// 0x316ccbd1
- (void)clearTabStops;	// 0x31889555
- (void)dealloc;	// 0x316cdc31
// converted property getter: - (double)defaultTab;	// 0x316cca41
// converted property getter: - (int)fontAlign;	// 0x318f1251
- (BOOL)hasAfterSpacing;	// 0x316cc795
- (BOOL)hasAlign;	// 0x316cc99d
- (BOOL)hasBeforeSpacing;	// 0x316cc72d
- (BOOL)hasBulletCharSet;	// 0x316ccd3d
- (BOOL)hasBulletColor;	// 0x316ccc05
- (BOOL)hasBulletFont;	// 0x316ccc6d
- (BOOL)hasBulletProperties;	// 0x316cccd5
- (BOOL)hasBulletSize;	// 0x316ccb9d
- (BOOL)hasDefaultTab;	// 0x316cca09
- (BOOL)hasFontAlign;	// 0x316ccaf1
- (BOOL)hasIndent;	// 0x316cc929
- (BOOL)hasIsHangingPunctuation;	// 0x316ccb65
- (BOOL)hasIsLatinLineBreak;	// 0x316ccb2d
- (BOOL)hasIsRightToLeft;	// 0x316cca7d
- (BOOL)hasLeftMargin;	// 0x316cbff1
- (BOOL)hasLevel;	// 0x316cc8bd
- (BOOL)hasLineSpacing;	// 0x316cc6c5
- (BOOL)hasRightMargin;	// 0x316cc819
- (BOOL)hasTabStops;	// 0x316cc7fd
- (BOOL)hasWrap;	// 0x316ccab5
- (unsigned)hash;	// 0x3186b2b9
// converted property getter: - (double)indent;	// 0x316cc961
- (BOOL)isEqual:(id)equal;	// 0x3186a8a5
// converted property getter: - (BOOL)isHangingPunctuation;	// 0x318f12bd
// converted property getter: - (BOOL)isLatinLineBreak;	// 0x318f1285
// converted property getter: - (BOOL)isRightToLeft;	// 0x318f11e5
// converted property getter: - (double)leftMargin;	// 0x316cbf41
// converted property getter: - (int)level;	// 0x316cc8f5
// converted property getter: - (id)lineSpacing;	// 0x316cc6f9
- (double)nonOveridenLeftMargin;	// 0x3171bd21
- (void)overrideWithProperties:(id)properties;	// 0x316cc029
- (void)removeUnnecessaryOverrides;	// 0x316d8d79
// converted property getter: - (double)rightMargin;	// 0x31779909
// converted property setter: - (void)setAfterSpacing:(id)spacing;	// 0x316b1911
// converted property setter: - (void)setAlign:(int)align;	// 0x316b19fd
// converted property setter: - (void)setBeforeSpacing:(id)spacing;	// 0x316b18d1
// converted property setter: - (void)setBulletCharSet:(int)set;	// 0x316b1b25
// converted property setter: - (void)setBulletColor:(id)color;	// 0x316b1b89
// converted property setter: - (void)setBulletFont:(id)font;	// 0x316b1bc9
// converted property setter: - (void)setBulletProperties:(id)properties;	// 0x316b1c09
// converted property setter: - (void)setBulletSize:(id)size;	// 0x316b1b49
// converted property setter: - (void)setDefaultTab:(double)tab;	// 0x316b1a21
// converted property setter: - (void)setFontAlign:(int)align;	// 0x316b1aa9
// converted property setter: - (void)setIndent:(double)indent;	// 0x316b19d1
// converted property setter: - (void)setIsHangingPunctuation:(BOOL)punctuation;	// 0x316b1b05
// converted property setter: - (void)setIsLatinLineBreak:(BOOL)aBreak;	// 0x316b1acd
// converted property setter: - (void)setIsRightToLeft:(BOOL)left;	// 0x316b1a51
// converted property setter: - (void)setLeftMargin:(double)margin;	// 0x316b1951
// converted property setter: - (void)setLevel:(int)level;	// 0x316b19ad
// converted property setter: - (void)setLineSpacing:(id)spacing;	// 0x316b1851
// converted property setter: - (void)setRightMargin:(double)margin;	// 0x316b1981
// converted property setter: - (void)setWrap:(int)wrap;	// 0x316b1a85
- (id)tabStopAtIndex:(unsigned)index;	// 0x318895e5
- (unsigned)tabStopCount;	// 0x318895c5
- (id)tabStops;	// 0x317caf89
// converted property getter: - (int)wrap;	// 0x318f121d
@end

