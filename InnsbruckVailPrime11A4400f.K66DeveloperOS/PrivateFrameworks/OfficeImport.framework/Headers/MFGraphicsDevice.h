/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import </libobjc.A.h>

@class MFObjectTable, NSDictionary, NSMutableArray, MFDeviceContext;
@protocol MFDeviceDriver;

@interface MFGraphicsDevice : NSObject {
	MFDeviceContext *m_currentDC;	// 4 = 0x4
	NSMutableArray *m_savedDC;	// 8 = 0x8
	NSObject<MFDeviceDriver> *m_deviceDriver;	// 12 = 0xc
	MFObjectTable *m_objectTable;	// 16 = 0x10
	MFObjectTable *m_stockObjects;	// 20 = 0x14
	NSDictionary *m_colorMap;	// 24 = 0x18
	NSDictionary *m_fillMap;	// 28 = 0x1c
}
- (id)initWithCanvas:(CGRect)canvas;	// 0x31764685
- (int)abortPath;	// 0x319917d9
- (int)angleArc:(int)arc :(int)arg2 :(unsigned)arg3 :(double)arg4 :(double)arg5;	// 0x3199152d
- (int)arc:(int)arc :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x3187b4bd
- (int)arcTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x31991585
- (int)beginPath;	// 0x317e69e1
- (int)bezier:(int)bezier :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x31862c89
- (int)bezierTo:(int)to :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6;	// 0x317e6be9
- (int)bitBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(unsigned)arg8 :(CGAffineTransform *)arg9 :(unsigned)arg10;	// 0x317d2e71
- (int)chord:(int)chord :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x319915dd
- (int)closeCurrentPath:(bool)path;	// 0x317e71c1
- (int)comment:(id)comment;	// 0x31991501
- (id)createBitmap:(unsigned)bitmap :(unsigned)arg2 :(unsigned)arg3 :(unsigned)arg4 :(const char *)arg5 :(unsigned)arg6;	// 0x31991c1d
- (int)createBrush:(int)brush :(id)arg2 :(int)arg3 :(unsigned)arg4;	// 0x31768cb5
- (id)createColorWithRGBBytes:(unsigned char)rgbbytes :(unsigned char)arg2 :(unsigned char)arg3 :(unsigned char)arg4;	// 0x31768c45
- (id)createDIBitmap:(const char *)bitmap :(unsigned)arg2 :(int)arg3;	// 0x317d0a79
- (id)createDIBitmap:(const char *)bitmap :(unsigned)arg2 :(const char *)arg3 :(unsigned)arg4 :(int)arg5;	// 0x317d2c89
- (int)createFontIndirect:(int)indirect :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15;	// 0x317671c9
- (int)createFontIndirectW:(int)w :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(bool)arg6 :(bool)arg7 :(bool)arg8 :(int)arg9 :(int)arg10 :(unsigned char)arg11 :(int)arg12 :(int)arg13 :(int)arg14 :(id)arg15 :(id)arg16 :(id)arg17 :(unsigned)arg18 :(unsigned)arg19 :(unsigned)arg20 :(unsigned)arg21 :(unsigned)arg22 :(unsigned)arg23;	// 0x317cfd5d
- (int)createPalette:(id)palette :(unsigned)arg2;	// 0x317e204d
- (int)createPatternBrush:(id)brush :(unsigned)arg2 usePaletteForBilevel:(BOOL)bilevel;	// 0x31842155
- (int)createPen:(int)pen :(int)arg2 :(id)arg3 :(double *)arg4 :(unsigned)arg5;	// 0x31768e89
- (int)createRegion:(id)region;	// 0x3184ab2d
- (void)createStockObjects;	// 0x317cf51d
- (void)dealloc;	// 0x3176c9e9
- (int)deleteObject:(int)object;	// 0x31769bc5
- (int)description:(id)description;	// 0x317e67bd
- (void)done;	// 0x3176c8c1
- (int)ellipse:(int)ellipse :(int)arg2 :(int)arg3 :(int)arg4;	// 0x3176bb79
- (int)endPath;	// 0x317e7311
- (int)excludeClipRect:(CGRect)rect;	// 0x317e2361
- (int)extTextOut:(int)anOut :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int *)arg9 :(int)arg10;	// 0x31767e05
- (int)extTextOutEncoded:(int)encoded :(int)arg2 :(id)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int *)arg9 :(int)arg10;	// 0x31767ae1
- (int)fillRgn:(unsigned)rgn :(unsigned)arg2;	// 0x31991a4d
- (int)fillRgnWithRects:(id)rects :(unsigned)arg2;	// 0x319919c5
- (int)frameRegion:(unsigned)region :(unsigned)arg2 :(int)arg3 :(int)arg4;	// 0x31991ba9
- (int)frameRegionWithRects:(id)rects :(unsigned)arg2 :(int)arg3 :(int)arg4;	// 0x31991b21
- (CGRect)getCanvas;	// 0x317cdb8d
- (id)getCurrentFont;	// 0x3183a231
- (int)getStockObject:(unsigned)object;	// 0x317cf49d
- (int)intersectClipRect:(CGRect)rect;	// 0x3176aee9
- (int)invertRgn:(unsigned)rgn;	// 0x31991975
- (int)invertRgnWithRects:(id)rects;	// 0x31991921
- (int)lineTo:(double)to :(double)arg2;	// 0x317d1f59
- (int)maskBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(id)arg8 :(int)arg9 :(int)arg10 :(unsigned)arg11 :(CGAffineTransform *)arg12 :(unsigned)arg13;	// 0x31991c6d
- (int)modifyWorldTransform:(const CGAffineTransform *)transform :(int)arg2;	// 0x318432f9
- (int)moveTo:(double)to :(double)arg2;	// 0x317d1ea9
- (int)offsetViewportOrg:(int)org :(int)arg2;	// 0x31991759
- (int)offsetWindowOrg:(int)org :(int)arg2;	// 0x31991719
- (int)paintRgn:(unsigned)rgn;	// 0x319918b9
- (int)paintRgnWithRects:(id)rects;	// 0x3199184d
- (int)patBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(unsigned)arg5;	// 0x31768fe5
- (int)pie:(int)pie :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7 :(int)arg8;	// 0x31841a89
- (int)plgBlt:(CGPoint *)blt :(id)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(id)arg7 :(int)arg8 :(int)arg9 :(CGAffineTransform *)arg10 :(unsigned)arg11;	// 0x31991cf9
- (int)polyPolygon:(CGPoint *)polygon :(int *)arg2 :(int)arg3;	// 0x317d2699
- (int)polyPolyline:(CGPoint *)polyline :(int *)arg2 :(int)arg3;	// 0x318837e5
- (int)polygon:(CGPoint *)polygon :(int)arg2;	// 0x3176b529
- (int)polyline:(CGPoint *)polyline :(int)arg2;	// 0x3176c7c1
- (int)realizePalette;	// 0x317e21d1
- (id)recolor:(unsigned char)recolor :(unsigned char)arg2 :(unsigned char)arg3 fill:(BOOL)fill;	// 0x317cf8a9
- (id)recolor:(id)recolor fill:(BOOL)fill;	// 0x317678d5
- (int)rectangle:(int)rectangle :(int)arg2 :(int)arg3 :(int)arg4;	// 0x31770e29
- (int)resizePalette:(unsigned)palette :(unsigned)arg2;	// 0x319916a9
- (int)restoreDC:(int)dc;	// 0x3176b001
- (int)roundRect:(int)rect :(int)arg2 :(int)arg3 :(int)arg4 :(double)arg5 :(double)arg6;	// 0x3188a629
- (int)saveDC;	// 0x31769d61
- (int)scaleViewportExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;	// 0x317dbc19
- (int)scaleWindowExt:(int)ext :(int)arg2 :(int)arg3 :(int)arg4;	// 0x31991799
- (int)selectClipPath:(int)path;	// 0x31846cc9
- (int)selectClipRegion:(unsigned)region :(int)arg2;	// 0x3183a9a9
- (int)selectClipRegionWithRects:(id)rects :(int)arg2;	// 0x317d4ab5
- (int)selectObject:(int)object;	// 0x31767605
- (int)setArcDirection:(int)direction;	// 0x31991505
- (int)setBkColour:(id)colour;	// 0x317dbb75
- (int)setBkMode:(int)mode;	// 0x317677fd
- (int)setBrushOrg:(double)org :(double)arg2;	// 0x317d2921
- (void)setColorMap:(id)map fillMap:(id)map2;	// 0x3176581d
- (int)setMapMode:(int)mode;	// 0x31765e29
- (int)setMetaRgn;	// 0x31846b01
- (int)setMiterLimit:(double)limit;	// 0x3184351d
- (int)setPaletteEntries:(unsigned)entries :(id)arg2 :(unsigned)arg3;	// 0x31991635
- (int)setPolyFillMode:(int)mode;	// 0x3176c679
- (int)setRop2:(int)a2;	// 0x317dbd35
- (int)setStretchBltMode:(int)mode;	// 0x317d0945
- (int)setTextAlign:(bool)align :(int)arg2 :(int)arg3 :(int)arg4;	// 0x317cf311
- (int)setTextCharExtra:(int)extra;	// 0x3184bb65
- (int)setTextColour:(id)colour;	// 0x31767899
- (int)setTextJustification:(int)justification :(int)arg2;	// 0x317dbb09
- (int)setViewBox:(double)box :(double)arg2 :(double)arg3 :(double)arg4;	// 0x317663ed
- (int)setViewportExt:(int)ext :(int)arg2;	// 0x31766349
- (int)setViewportOrg:(int)org :(int)arg2;	// 0x317662c9
- (int)setWindowExt:(int)ext :(int)arg2;	// 0x31766225
- (int)setWindowOrg:(int)org :(int)arg2;	// 0x31765f41
- (int)setWorldTransform:(const CGAffineTransform *)transform;	// 0x31846bd1
- (int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned)arg10 :(CGAffineTransform *)arg11 :(unsigned)arg12;	// 0x317d118d
- (int)stretchBlt:(int)blt :(int)arg2 :(int)arg3 :(int)arg4 :(id)arg5 :(int)arg6 :(int)arg7 :(int)arg8 :(int)arg9 :(unsigned)arg10 :(CGAffineTransform *)arg11 :(unsigned)arg12 usePaletteForBilevel:(BOOL)bilevel;	// 0x318063e9
- (int)strokeAndFillPath:(bool)path :(bool)arg2;	// 0x317e73bd
- (int)textOut:(int)anOut :(int)arg2 :(id)arg3;	// 0x3184acd1
- (int)textOutEncoded:(int)encoded :(int)arg2 :(id)arg3;	// 0x3184ac41
- (int)widenPath;	// 0x31991811
@end

