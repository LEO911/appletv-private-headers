/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "EDProcessor.h"

@class EDRowBlocks, EDName, EDFormula, EDSheet;

@interface EPFormulaCleaner : EDProcessor {
	EDSheet *mCurrentSheet;	// 16 = 0x10
	EDFormula *mFormula;	// 20 = 0x14
	EDFormula *mTokensToClean;	// 24 = 0x18
	EDName *mParentName;	// 28 = 0x1c
	int mRowOffset;	// 32 = 0x20
	int mColumnOffset;	// 36 = 0x24
	EDRowBlocks *mBaseFormulaRowBlocks;	// 40 = 0x28
}
- (void)addOffsetsToRow:(int *)row rowRelative:(bool)relative column:(int *)column columnRelative:(bool)relative4;	// 0x317c3cd9
- (void)applyMaxCellsInName:(id)name;	// 0x318069a5
- (void)applyProcessorToObject:(id)object sheet:(id)sheet;	// 0x317c776d
- (bool)checkCustomFunction:(unsigned)function;	// 0x318d8dc5
- (bool)checkFunctionId:(int)anId tokenIndex:(unsigned)index;	// 0x317c3fe1
- (bool)checkSupportedAddInName:(id)name externalLink:(bool)link;	// 0x31879a79
- (bool)cleanArea3D:(unsigned)d;	// 0x317c777d
- (bool)cleanArea:(unsigned)area updateSheet:(BOOL)sheet;	// 0x317c42b1
- (bool)cleanArray:(unsigned)array;	// 0x3189e491
- (void)cleanFormula:(id)formula name:(id)name;	// 0x318d8c2d
- (void)cleanFormula:(id)formula sheet:(id)sheet;	// 0x317c3561
- (void)cleanFormula:(id)formula sheet:(id)sheet name:(id)name;	// 0x317c3585
- (bool)cleanFunc:(unsigned)func;	// 0x317c444d
- (bool)cleanFuncVar:(unsigned)var;	// 0x317c3f9d
- (bool)cleanName:(unsigned)name;	// 0x318065d5
- (bool)cleanName:(unsigned)name nameIndex:(unsigned)index sheetIndex:(unsigned)index3;	// 0x31806675
- (bool)cleanNameX:(unsigned)x;	// 0x318798ed
- (bool)cleanRange:(unsigned)range removedTokenCount:(unsigned *)count;	// 0x31898361
- (bool)cleanRef3D:(unsigned)d;	// 0x317c7c49
- (bool)cleanRef:(unsigned)ref updateSheet:(BOOL)sheet;	// 0x317c3af5
- (bool)cleanTokenAtIndex:(unsigned)index removedTokenCount:(unsigned *)count;	// 0x317c3885
- (bool)cleanUnion:(unsigned)aUnion;	// 0x318958ed
- (bool)combineCellReferences:(unsigned)references removedTokenCount:(unsigned *)count;	// 0x3189848d
- (void)dealloc;	// 0x317a5579
- (bool)isLinkReferenceIndexSupported:(unsigned)supported allowExternal:(bool)external;	// 0x317c7911
- (bool)isObjectSupported:(id)supported;	// 0x317c6769
- (bool)isReferenceValidInLassoForRow:(int)row rowRelative:(bool)relative column:(int)column columnRelative:(bool)relative4;	// 0x317c3c69
- (bool)isReferenceValidInLassoForSheet:(id)sheet rowMin:(int)min rowMinRelative:(bool)relative rowMax:(int)max rowMaxRelative:(bool)relative5 columnMin:(int)min6 columnMinRelative:(bool)relative7 columnMax:(int)max8 columnMaxRelative:(bool)relative9;	// 0x318d8c4d
- (bool)isThereContentOutsideOfLassoBoundsForSheet:(id)sheet rowMin:(int)min rowMax:(int)max columnMin:(int)min4 columnMax:(int)max5;	// 0x317c4449
- (id)newFormulaToCleanFromSharedFormula:(id)sharedFormula;	// 0x317c4031
- (void)prepareToProcessFormula:(id)processFormula sheet:(id)sheet name:(id)name;	// 0x317c36c9
- (void)reportWarning:(int)warning;	// 0x317c7bc9
- (void)reportWarning:(int)warning parameter:(id)parameter;	// 0x317c7bdd
- (void)reset;	// 0x317c37b1
- (void)updateSheet:(id)sheet row:(int)row rowRelative:(bool)relative column:(int)column columnRelative:(bool)relative5;	// 0x317c3d15
- (void)updateSheet:(id)sheet rowMin:(int)min rowMinRelative:(bool)relative rowMax:(int)max rowMaxRelative:(bool)relative5 columnMin:(int)min6 columnMinRelative:(bool)relative7 columnMax:(int)max8 columnMaxRelative:(bool)relative9;	// 0x318d8d39
- (void)updateWorksheet:(id)worksheet row:(int)row column:(int)column inDictionary:(id)dictionary;	// 0x318d8fad
- (bool)useEvaluationStackToCheckFunctionId:(int)checkFunctionId functionName:(id)name tokenIndex:(unsigned)index;	// 0x318d9029
- (unsigned)useEvaluationStackToGetParameter:(unsigned)getParameter tokenIndex:(unsigned)index;	// 0x31895a85
- (id)useEvaluationStackToGetParameter:(unsigned)getParameter tokenIndex:(unsigned)index allReferencesAllowed:(bool)allowed success:(bool *)success;	// 0x318d9615
- (id)worksheetFromLinkReferenceIndex:(unsigned)linkReferenceIndex loadIfNeeded:(bool)needed;	// 0x317fad39
@end

