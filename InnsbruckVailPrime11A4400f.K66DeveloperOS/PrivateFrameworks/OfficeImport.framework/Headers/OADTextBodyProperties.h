/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OADProperties.h"

@class OADTextBodyAutoFit, OADTextWarp;

@interface OADTextBodyProperties : OADProperties {
	OADTextBodyAutoFit *mAutoFit;	// 12 = 0xc
	OADTextWarp *mTextWarp;	// 16 = 0x10
	double mTopInset;	// 20 = 0x14
	double mLeftInset;	// 28 = 0x1c
	double mBottomInset;	// 36 = 0x24
	double mRightInset;	// 44 = 0x2c
	double mRotation;	// 52 = 0x34
	double mColumnSpacing;	// 60 = 0x3c
	unsigned short mColumnCount;	// 68 = 0x44
	unsigned short mTextBodyId;	// 70 = 0x46
	unsigned char mTextAnchorType;	// 72 = 0x48
	unsigned char mFlowType;	// 73 = 0x49
	unsigned char mWrapType;	// 74 = 0x4a
	unsigned char mVerticalOverflowType;	// 75 = 0x4b
	unsigned char mHorizontalOverflowType;	// 76 = 0x4c
	unsigned mRepectFirstLastParagraphSpacing : 1;	// 77 = 0x4d
	unsigned mIsUpright : 1;	// 77 = 0x4d
	unsigned mIsAnchorCenter : 1;	// 77 = 0x4d
	unsigned mIsLeftToRightColumns : 1;	// 77 = 0x4d
	unsigned mHasVerticalOverflowType : 1;	// 77 = 0x4d
	unsigned mHasHorizontalOverflowType : 1;	// 77 = 0x4d
	unsigned mHasTextBodyId : 1;	// 77 = 0x4d
	unsigned mHasFlowType : 1;	// 77 = 0x4d
	unsigned mHasWrapType : 1;	// 78 = 0x4e
	unsigned mHasTextAnchorType : 1;	// 78 = 0x4e
	unsigned mHasIsAnchorCenter : 1;	// 78 = 0x4e
	unsigned mHasIsUpright : 1;	// 78 = 0x4e
	unsigned mHasRotation : 1;	// 78 = 0x4e
	unsigned mHasColumnCount : 1;	// 78 = 0x4e
	unsigned mHasColumnSpacing : 1;	// 78 = 0x4e
	unsigned mHasIsLeftToRightColumns : 1;	// 78 = 0x4e
	unsigned mHasRepectFirstLastParagraphSpacing : 1;	// 79 = 0x4f
	unsigned mHasTopInset : 1;	// 79 = 0x4f
	unsigned mHasLeftInset : 1;	// 79 = 0x4f
	unsigned mHasRightInset : 1;	// 79 = 0x4f
	unsigned mHasBottomInset : 1;	// 79 = 0x4f
}
@property(retain) id autoFit;	// G=0x316d8919; S=0x316c7c69; converted property
@property(assign) double bottomInset;	// G=0x316d875d; S=0x316c7b45; converted property
@property(assign) int columnCount;	// G=0x316d87cd; S=0x316c7b9d; converted property
@property(assign) double columnSpacing;	// G=0x316d8839; S=0x316c7bc1; converted property
@property(assign) int flowType;	// G=0x316d8a01; S=0x316c7ca9; converted property
@property(assign) int horizontalOverflowType;	// G=0x318f598d; S=0x316c7d15; converted property
@property(assign) BOOL isAnchorCenter;	// G=0x316d8b95; S=0x316c7d75; converted property
@property(assign) BOOL isLeftToRightColumns;	// G=0x316d88ad; S=0x316c7bed; converted property
@property(assign) BOOL isUpright;	// G=0x316d8c6d; S=0x316c7dd5; converted property
@property(assign) double leftInset;	// G=0x316d8671; S=0x316c7b19; converted property
@property(assign) BOOL respectLastFirstLineSpacing;	// G=0x318f591d; S=0x316c7ab9; converted property
@property(assign) double rightInset;	// G=0x316d86e9; S=0x316c7b71; converted property
@property(assign) double rotation;	// G=0x316d8cdd; S=0x316c7e0d; converted property
@property(assign) int textAnchorType;	// G=0x316d8c05; S=0x316c7dad; converted property
@property(assign) int textBodyId;	// G=0x318f59c1; S=0x318f59d1; converted property
@property(retain) id textWarp;	// G=0x317ccfc9; S=0x316c7d39; converted property
@property(assign) double topInset;	// G=0x316d85fd; S=0x316c7aed; converted property
@property(assign) int verticalOverflowType;	// G=0x316d8ad9; S=0x316c7cf1; converted property
@property(assign) int wrapType;	// G=0x316d8a6d; S=0x316c7ccd; converted property
+ (id)defaultEscherWordArtProperties;	// 0x317cc521
+ (id)defaultProperties;	// 0x316c7845
- (id)init;	// 0x316c7815
- (id)initWithDefaults;	// 0x316c7891
// converted property getter: - (id)autoFit;	// 0x316d8919
// converted property getter: - (double)bottomInset;	// 0x316d875d
// converted property getter: - (int)columnCount;	// 0x316d87cd
// converted property getter: - (double)columnSpacing;	// 0x316d8839
- (void)dealloc;	// 0x316d5b59
// converted property getter: - (int)flowType;	// 0x316d8a01
- (BOOL)hasAutoFit;	// 0x316d88e5
- (BOOL)hasBottomInset;	// 0x316d8725
- (BOOL)hasColumnCount;	// 0x316d8795
- (BOOL)hasColumnSpacing;	// 0x316d8801
- (BOOL)hasFlowType;	// 0x316d89c9
- (BOOL)hasHorizontalOverflowType;	// 0x318f5955
- (BOOL)hasIsAnchorCenter;	// 0x316d8b5d
- (BOOL)hasIsLeftToRightColumns;	// 0x316d8875
- (BOOL)hasIsUpright;	// 0x316d8c35
- (BOOL)hasLeftInset;	// 0x316d8635
- (BOOL)hasRespectLastFirstLineSpacing;	// 0x316d858d
- (BOOL)hasRightInset;	// 0x316d86ad
- (BOOL)hasRotation;	// 0x316d8ca5
- (BOOL)hasTextAnchorType;	// 0x316d8bcd
- (BOOL)hasTextBodyId;	// 0x316d8b09
- (BOOL)hasTextWarp;	// 0x316d8b25
- (BOOL)hasTopInset;	// 0x316d85c5
- (BOOL)hasVerticalOverflowType;	// 0x316d8aa1
- (BOOL)hasWrapType;	// 0x316d8a35
- (unsigned)hash;	// 0x318f59f9
// converted property getter: - (int)horizontalOverflowType;	// 0x318f598d
// converted property getter: - (BOOL)isAnchorCenter;	// 0x316d8b95
- (BOOL)isEqual:(id)equal;	// 0x318f5be1
// converted property getter: - (BOOL)isLeftToRightColumns;	// 0x316d88ad
// converted property getter: - (BOOL)isUpright;	// 0x316d8c6d
// converted property getter: - (double)leftInset;	// 0x316d8671
- (void)removeUnnecessaryOverrides;	// 0x316d7b29
// converted property getter: - (BOOL)respectLastFirstLineSpacing;	// 0x318f591d
// converted property getter: - (double)rightInset;	// 0x316d86e9
// converted property getter: - (double)rotation;	// 0x316d8cdd
// converted property setter: - (void)setAutoFit:(id)fit;	// 0x316c7c69
// converted property setter: - (void)setBottomInset:(double)inset;	// 0x316c7b45
// converted property setter: - (void)setColumnCount:(int)count;	// 0x316c7b9d
// converted property setter: - (void)setColumnSpacing:(double)spacing;	// 0x316c7bc1
// converted property setter: - (void)setFlowType:(int)type;	// 0x316c7ca9
// converted property setter: - (void)setHorizontalOverflowType:(int)type;	// 0x316c7d15
// converted property setter: - (void)setIsAnchorCenter:(BOOL)center;	// 0x316c7d75
// converted property setter: - (void)setIsLeftToRightColumns:(BOOL)rightColumns;	// 0x316c7bed
// converted property setter: - (void)setIsUpright:(BOOL)upright;	// 0x316c7dd5
// converted property setter: - (void)setLeftInset:(double)inset;	// 0x316c7b19
// converted property setter: - (void)setRespectLastFirstLineSpacing:(BOOL)spacing;	// 0x316c7ab9
// converted property setter: - (void)setRightInset:(double)inset;	// 0x316c7b71
// converted property setter: - (void)setRotation:(double)rotation;	// 0x316c7e0d
// converted property setter: - (void)setTextAnchorType:(int)type;	// 0x316c7dad
// converted property setter: - (void)setTextBodyId:(int)anId;	// 0x318f59d1
// converted property setter: - (void)setTextWarp:(id)warp;	// 0x316c7d39
// converted property setter: - (void)setTopInset:(double)inset;	// 0x316c7aed
// converted property setter: - (void)setVerticalOverflowType:(int)type;	// 0x316c7cf1
// converted property setter: - (void)setWrapType:(int)type;	// 0x316c7ccd
// converted property getter: - (int)textAnchorType;	// 0x316d8c05
// converted property getter: - (int)textBodyId;	// 0x318f59c1
// converted property getter: - (id)textWarp;	// 0x317ccfc9
// converted property getter: - (double)topInset;	// 0x316d85fd
// converted property getter: - (int)verticalOverflowType;	// 0x316d8ad9
// converted property getter: - (int)wrapType;	// 0x316d8a6d
@end

