/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTVServices.framework/AppleTVServices
 */

#import "AppleTVServices-Structs.h"
#import </libobjc.A.h>

@class NSURL, NSString, NSData;

@interface ATVImage : NSObject {
	CGImageRef _image;	// 4 = 0x4
	CGImageSourceRef _imageSource;	// 8 = 0x8
	float _imageWidth;	// 12 = 0xc
	float _imageHeight;	// 16 = 0x10
	int _imageOrientation;	// 20 = 0x14
	BOOL _enableCache;	// 24 = 0x18
	NSURL *_imageURL;	// 28 = 0x1c
	NSData *_imageData;	// 32 = 0x20
	NSString *_imageType;	// 36 = 0x24
	BOOL _imageBufferInMemory;	// 40 = 0x28
	BOOL _rotationEnabled;	// 41 = 0x29
}
@property(assign) BOOL enableCache;	// G=0x30092145; S=0x30092115; converted property
@property(readonly, assign) CGImageRef image;	// G=0x30091f11; converted property
@property(readonly, assign, getter=isImageBufferInMemory) BOOL imageBufferInMemory;	// G=0x30092759; converted property
@property(readonly, retain) NSString *imageType;	// G=0x30091ff1; converted property
@property(readonly, assign, nonatomic) int orientation;	// G=0x30092769; @synthesize=_imageOrientation
@property(readonly, assign, nonatomic) BOOL rotationEnabled;	// G=0x30092779; @synthesize=_rotationEnabled
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x300917b9
+ (id)imageWithData:(id)data;	// 0x3009176d
+ (id)imageWithPath:(id)path;	// 0x300916ed
+ (id)imageWithRotationFromPath:(id)path;	// 0x30091859
+ (id)imageWithRotationFromURL:(id)url;	// 0x300917f5
+ (id)imageWithURL:(id)url;	// 0x300916a1
- (id)initWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x300918b5
- (id)initWithData:(id)data;	// 0x30091c19
- (id)initWithURL:(id)url;	// 0x300919fd
- (void).cxx_destruct;	// 0x30092789
- (id)_initWithCGImageSourceRotationEnabled:(CGImageSourceRef)cgimageSourceRotationEnabled;	// 0x300927d1
- (void)_initializeCGImageWithRotation;	// 0x30092961
- (float)aspectRatio;	// 0x30092071
- (id)croppedImageForSize:(CGSize)size;	// 0x30092515
- (void)dealloc;	// 0x30091e45
- (id)deletterboxedImage;	// 0x30092155
- (void)drawImageInContext:(CGContextRef)context rect:(CGRect)rect;	// 0x30091edd
// converted property getter: - (BOOL)enableCache;	// 0x30092145
- (BOOL)hasAlpha;	// 0x30092005
// converted property getter: - (CGImageRef)image;	// 0x30091f11
// converted property getter: - (id)imageType;	// 0x30091ff1
// converted property getter: - (BOOL)isImageBufferInMemory;	// 0x30092759
- (BOOL)isPowerOfTwo;	// 0x300920ad
- (CGRect)largestSquareRect;	// 0x30092591
- (id)mapImageWithSourceRect:(CGRect)sourceRect toSize:(CGSize)size;	// 0x30092439
// declared property getter: - (int)orientation;	// 0x30092769
- (CGSize)pixelBounds;	// 0x3009203d
// declared property getter: - (BOOL)rotationEnabled;	// 0x30092779
// converted property setter: - (void)setEnableCache:(BOOL)cache;	// 0x30092115
- (BOOL)sourceRequiresRotation;	// 0x300920f9
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)aspectRatioLimit;	// 0x30092655
@end

