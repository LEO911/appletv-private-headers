/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import "NSCoding.h"
#import </libobjc.A.h>

@class NSDictionary, NSData;
@protocol OS_dispatch_queue;

@interface SBKStoreClampsController : NSObject <NSCoding> {
	NSObject<OS_dispatch_queue> *_queue;	// 4 = 0x4
	NSDictionary *_transactionClamps;	// 8 = 0x8
	NSData *_pendingUserDefaultArchivedData;	// 12 = 0xc
	double _accountIdentifierCheckTimestamp;	// 16 = 0x10
	double _authenticationNeededTimestamp;	// 24 = 0x18
	double _userAcceptedSyncTimestamp;	// 32 = 0x20
	double _networkingBlockedUntil;	// 40 = 0x28
	double _backOffUntil;	// 48 = 0x30
	double _userCancelledSignInBackOffUntil;	// 56 = 0x38
	double _nextUserCancelBackOffInterval;	// 64 = 0x40
}
@property(assign) double accountIdentifierCheckTimestamp;	// G=0x327a76b5; S=0x327a76e9; @synthesize=_accountIdentifierCheckTimestamp
@property(assign) double authenticationNeededTimestamp;	// G=0x327a771d; S=0x327a7751; @synthesize=_authenticationNeededTimestamp
@property(assign) double backOffUntil;	// G=0x327a7855; S=0x327a7889; @synthesize=_backOffUntil
@property(assign) double networkingBlockedUntil;	// G=0x327a77ed; S=0x327a7821; @synthesize=_networkingBlockedUntil
@property(assign) double nextUserCancelBackOffInterval;	// G=0x327a7925; S=0x327a7959; @synthesize=_nextUserCancelBackOffInterval
@property(retain) NSData *pendingUserDefaultArchivedData;	// G=0x327a798d; S=0x327a79a1; @synthesize=_pendingUserDefaultArchivedData
@property(retain) NSObject<OS_dispatch_queue> *queue;	// G=0x327a766d; S=0x327a7681; @synthesize=_queue
@property(retain) NSDictionary *transactionClamps;	// G=0x327a7691; S=0x327a76a5; @synthesize=_transactionClamps
@property(assign) double userAcceptedSyncTimestamp;	// G=0x327a7785; S=0x327a77b9; @synthesize=_userAcceptedSyncTimestamp
@property(assign) double userCancelledSignInBackOffUntil;	// G=0x327a78bd; S=0x327a78f1; @synthesize=_userCancelledSignInBackOffUntil
+ (id)sharedClampsController;	// 0x327a5429
- (id)init;	// 0x327a5541
- (id)initWithCoder:(id)coder;	// 0x327a5969
- (void).cxx_destruct;	// 0x327a79b1
- (BOOL)_canScheduleTransactionBasedOfNetworkingBlocked:(id)networkingBlocked error:(id *)error;	// 0x327a703d
- (BOOL)_canScheduleTransactionBasedOnAccountIdentifierCheck:(id)check error:(id *)error;	// 0x327a7191
- (BOOL)_canScheduleTransactionBasedOnBackOff:(id)off error:(id *)error;	// 0x327a72c1
- (BOOL)_canScheduleTransactionBasedOnType:(id)type error:(id *)error;	// 0x327a6cc5
- (BOOL)_canScheduleTransactionBasedOnUserCancelledSignIn:(id)anIn error:(id *)error;	// 0x327a7491
- (id)_keyForTransaction:(id)transaction;	// 0x327a6cb1
- (double)_rightNow;	// 0x327a6c65
- (void)accessTransactionClampsWithBlock:(id)block;	// 0x327a5f41
// declared property getter: - (double)accountIdentifierCheckTimestamp;	// 0x327a76b5
// declared property getter: - (double)authenticationNeededTimestamp;	// 0x327a771d
- (void)backOffForTimeInterval:(double)timeInterval;	// 0x327a6ae1
// declared property getter: - (double)backOffUntil;	// 0x327a7855
- (BOOL)canScheduleTransaction:(id)transaction error:(id *)error;	// 0x327a6101
- (void)clearAccountIdentifierCheckTimestamp;	// 0x327a65b9
- (void)clearAuthenticationRequest;	// 0x327a6641
- (void)clearBackOff;	// 0x327a6b39
- (void)clearNetworkingBlocked;	// 0x327a6bd1
- (void)clearTimestampForTransaction:(id)transaction;	// 0x327a6451
- (void)clearUserAcceptedSyncTimestamp;	// 0x327a6829
- (void)clearUserCancelledSignIn;	// 0x327a6a81
- (id)description;	// 0x327a55e9
- (void)encodeWithCoder:(id)coder;	// 0x327a57cd
- (BOOL)hasAuthenticatedTooRecentlyForTransaction:(id)transaction error:(id *)error;	// 0x327a6681
- (BOOL)hasUserRecentlyAcceptedSync;	// 0x327a6869
- (BOOL)isNetworkingBlocked;	// 0x327a6bf1
// declared property getter: - (double)networkingBlockedUntil;	// 0x327a77ed
// declared property getter: - (double)nextUserCancelBackOffInterval;	// 0x327a7925
// declared property getter: - (id)pendingUserDefaultArchivedData;	// 0x327a798d
// declared property getter: - (id)queue;	// 0x327a766d
- (void)reset;	// 0x327a61b9
- (void)saveToUserDefaults;	// 0x327a5b91
- (void)setAccountIdentifierCheckTimestamp;	// 0x327a6575
// declared property setter: - (void)setAccountIdentifierCheckTimestamp:(double)timestamp;	// 0x327a76e9
// declared property setter: - (void)setAuthenticationNeededTimestamp:(double)timestamp;	// 0x327a7751
- (void)setAuthenticationRequest;	// 0x327a65f9
// declared property setter: - (void)setBackOffUntil:(double)until;	// 0x327a7889
- (void)setNetworkingBlocked;	// 0x327a6b79
// declared property setter: - (void)setNetworkingBlockedUntil:(double)until;	// 0x327a7821
// declared property setter: - (void)setNextUserCancelBackOffInterval:(double)interval;	// 0x327a7959
// declared property setter: - (void)setPendingUserDefaultArchivedData:(id)data;	// 0x327a79a1
// declared property setter: - (void)setQueue:(id)queue;	// 0x327a7681
- (void)setTimestampForTransaction:(id)transaction;	// 0x327a6315
// declared property setter: - (void)setTransactionClamps:(id)clamps;	// 0x327a76a5
- (void)setUserAcceptedSyncTimestamp;	// 0x327a67e5
// declared property setter: - (void)setUserAcceptedSyncTimestamp:(double)timestamp;	// 0x327a77b9
- (void)setUserCancelledSignIn;	// 0x327a6911
// declared property setter: - (void)setUserCancelledSignInBackOffUntil:(double)backOffUntil;	// 0x327a78f1
// declared property getter: - (id)transactionClamps;	// 0x327a7691
// declared property getter: - (double)userAcceptedSyncTimestamp;	// 0x327a7785
// declared property getter: - (double)userCancelledSignInBackOffUntil;	// 0x327a78bd
@end

