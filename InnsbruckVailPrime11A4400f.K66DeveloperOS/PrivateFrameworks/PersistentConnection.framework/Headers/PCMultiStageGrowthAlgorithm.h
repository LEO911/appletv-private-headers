/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection
 */

#import "PersistentConnection-Structs.h"
#import "PCGrowthAlgorithm.h"
#import </libobjc.A.h>

@class NSDictionary, NSDate, NSString;

__attribute__((visibility("hidden")))
@interface PCMultiStageGrowthAlgorithm : NSObject <PCGrowthAlgorithm> {
	double _currentKeepAliveInterval;	// 4 = 0x4
	double _minimumKeepAliveInterval;	// 12 = 0xc
	double _maximumKeepAliveInterval;	// 20 = 0x14
	double _lastKeepAliveInterval;	// 28 = 0x1c
	int _growthStage;	// 36 = 0x24
	double _highWatermark;	// 40 = 0x28
	double _initialGrowthStageHighWatermark;	// 48 = 0x30
	double _initialGrowthStageLastAttempt;	// 56 = 0x38
	NSDate *_leaveSteadyStateDate;	// 64 = 0x40
	NSString *_loggingIdentifier;	// 68 = 0x44
	NSString *_algorithmName;	// 72 = 0x48
	unsigned _countOfGrowthActions;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) NSDictionary *cacheInfo;	// G=0x323a1d91; 
@property(readonly, assign, nonatomic) unsigned countOfGrowthActions;	// G=0x323a2c4d; @synthesize=_countOfGrowthActions
@property(readonly, assign, nonatomic) double currentKeepAliveInterval;	// G=0x323a2c5d; @synthesize=_currentKeepAliveInterval
@property(readonly, assign, nonatomic) NSString *loggingIdentifier;	// G=0x323a2ca5; @synthesize=_loggingIdentifier
@property(assign, nonatomic) double maximumKeepAliveInterval;	// G=0x323a2c8d; S=0x323a1a09; @synthesize=_maximumKeepAliveInterval
@property(assign, nonatomic) double minimumKeepAliveInterval;	// G=0x323a2c75; S=0x323a1a91; @synthesize=_minimumKeepAliveInterval
+ (void)_loadDefaultValue:(double *)value forKey:(CFStringRef)key;	// 0x323a2a61
+ (void)_loadDefaults;	// 0x323a28f1
- (id)initWithCacheInfo:(id)cacheInfo loggingIdentifier:(id)identifier algorithmName:(id)name;	// 0x323a1799
- (void)_processBackoffAction:(int)action;	// 0x323a2351
- (void)_processInitialGrowthAction:(int)action;	// 0x323a2161
- (void)_processRefinedGrowthAction:(int)action;	// 0x323a2679
- (void)_processSteadyStateAction:(int)action;	// 0x323a23b5
- (void)_resetAlgorithmToInterval:(double)interval;	// 0x323a1f75
- (void)_resetAlgorithmToInterval:(double)interval stage:(int)stage;	// 0x323a1e65
- (void)_setCurrentKeepAliveInterval:(double)interval;	// 0x323a1b19
- (double)_steadyStateTimeout;	// 0x323a2841
- (id)_stringForAction:(int)action;	// 0x323a2bcd
- (id)_stringForStage:(int)stage;	// 0x323a2c0d
// declared property getter: - (id)cacheInfo;	// 0x323a1d91
// declared property getter: - (unsigned)countOfGrowthActions;	// 0x323a2c4d
// declared property getter: - (double)currentKeepAliveInterval;	// 0x323a2c5d
- (void)dealloc;	// 0x323a1991
- (id)description;	// 0x323a2b21
// declared property getter: - (id)loggingIdentifier;	// 0x323a2ca5
// declared property getter: - (double)maximumKeepAliveInterval;	// 0x323a2c8d
// declared property getter: - (double)minimumKeepAliveInterval;	// 0x323a2c75
- (void)processNextAction:(int)action;	// 0x323a1fa9
// declared property setter: - (void)setMaximumKeepAliveInterval:(double)interval;	// 0x323a1a09
// declared property setter: - (void)setMinimumKeepAliveInterval:(double)interval;	// 0x323a1a91
- (BOOL)useIntervalIfImprovement:(double)improvement;	// 0x323a1c39
@end

