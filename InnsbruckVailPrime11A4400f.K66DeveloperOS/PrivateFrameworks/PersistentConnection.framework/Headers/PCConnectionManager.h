/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection
 */

#import "PCInterfaceMonitorDelegate.h"
#import "PCLoggingDelegate.h"
#import </libobjc.A.h>
#import "PersistentConnection-Structs.h"

@class PCDarwinNotificationRunLoopSource, NSString, NSRunLoop, PCPersistentTimer;
@protocol PCConnectionManagerDelegate, PCGrowthAlgorithm;

@interface PCConnectionManager : NSObject <PCLoggingDelegate, PCInterfaceMonitorDelegate> {
	int _connectionClass;	// 4 = 0x4
	id<PCConnectionManagerDelegate> _delegate;	// 8 = 0x8
	NSString *_serviceIdentifier;	// 12 = 0xc
	int _prefsStyle;	// 16 = 0x10
	int _onlyAllowedStyle;	// 20 = 0x14
	BOOL _onlyAllowedStyleSet;	// 24 = 0x18
	int _interfaceIdentifier;	// 28 = 0x1c
	unsigned _guidancePriority;	// 32 = 0x20
	NSRunLoop *_delegateRunLoop;	// 36 = 0x24
	dispatch_queue_s *_delegateQueue;	// 40 = 0x28
	id<PCGrowthAlgorithm> _wwanGrowthAlgorithm;	// 44 = 0x2c
	id<PCGrowthAlgorithm> _wifiGrowthAlgorithm;	// 48 = 0x30
	id<PCGrowthAlgorithm> _lastScheduledGrowthAlgorithm;	// 52 = 0x34
	PCDarwinNotificationRunLoopSource *_prefsChangedSource;	// 56 = 0x38
	PCPersistentTimer *_intervalTimer;	// 60 = 0x3c
	PCPersistentTimer *_reconnectWakeTimer;	// 64 = 0x40
	PCPersistentTimer *_delayTimer;	// 68 = 0x44
	unsigned _powerAssertionID;	// 72 = 0x48
	double _onTimeKeepAliveTime;	// 76 = 0x4c
	double _lastResumeTime;	// 84 = 0x54
	double _lastStopTime;	// 92 = 0x5c
	double _lastReachableTime;	// 100 = 0x64
	double _lastReconnectTime;	// 108 = 0x6c
	double _lastScheduledIntervalTime;	// 116 = 0x74
	double _timerGuidance;	// 124 = 0x7c
	double _keepAliveGracePeriod;	// 132 = 0x84
	unsigned _reconnectIteration;	// 140 = 0x8c
	int _timerGuidanceToken;	// 144 = 0x90
	int _pushIsConnectedToken;	// 148 = 0x94
	double _defaultPollingInterval;	// 152 = 0x98
	double _pollingIntervalOverride;	// 160 = 0xa0
	BOOL _pollingIntervalOverrideSet;	// 168 = 0xa8
	BOOL _hasStarted;	// 169 = 0xa9
	BOOL _isRunning;	// 170 = 0xaa
	BOOL _inCallback;	// 171 = 0xab
	BOOL _isInReconnectMode;	// 172 = 0xac
	BOOL _reconnectWithKeepAliveDelay;	// 173 = 0xad
	BOOL _forceManualWhenRoaming;	// 174 = 0xae
	BOOL _enableNonCellularConnections;	// 175 = 0xaf
	BOOL _isReachable;	// 176 = 0xb0
}
@property(readonly, assign, nonatomic) unsigned countOfGrowthActions;	// G=0x323a6c01; 
@property(readonly, assign, nonatomic) double currentKeepAliveInterval;	// G=0x323a6cd1; 
@property(assign, nonatomic) id<PCConnectionManagerDelegate> delegate;	// G=0x323a5149; S=0x323a5125; 
@property(readonly, assign, nonatomic) BOOL isRunning;	// G=0x323a6bdd; 
@property(assign, nonatomic) double keepAliveGracePeriod;	// G=0x323aaeb5; S=0x323a72d9; @synthesize=_keepAliveGracePeriod
@property(readonly, assign, nonatomic) NSString *loggingIdentifier;	// G=0x323aaecd; @synthesize=_serviceIdentifier
@property(assign) double maximumKeepAliveInterval;	// G=0x323a70b5; S=0x323a7185; 
@property(assign, nonatomic) double minimumKeepAliveInterval;	// G=0x323a6e91; S=0x323a6f61; 
@property(readonly, assign, nonatomic) double pollingInterval;	// G=0x323a7461; 
+ (BOOL)_isCachedKeepAliveIntervalStillValid:(double)valid date:(id)date;	// 0x323aace1
+ (id)_keepAliveCachePath;	// 0x323aaca1
+ (Class)growthAlgorithmClass;	// 0x323a4a99
+ (id)intervalCacheDictionaries;	// 0x323aaa69
- (id)initWithConnectionClass:(int)connectionClass delegate:(id)delegate delegateQueue:(dispatch_queue_s *)queue serviceIdentifier:(id)identifier;	// 0x323a5085
- (id)initWithConnectionClass:(int)connectionClass delegate:(id)delegate serviceIdentifier:(id)identifier;	// 0x323a50f5
- (id)initWithConnectionClass:(int)connectionClass interfaceIdentifier:(int)identifier guidancePriority:(unsigned)priority delegate:(id)delegate serviceIdentifier:(id)identifier5;	// 0x323a50bd
- (void)_adjustInterfaceAssertions;	// 0x323aa291
- (void)_adjustPollTimerIfNecessary;	// 0x323a81e9
- (void)_callDelegateWithEvent:(id)event;	// 0x323a96f5
- (void)_calloutWithEvent:(int)event;	// 0x323a9891
- (void)_clearTimers;	// 0x323a9a7d
- (void)_clearTimersReleasingPowerAssertion:(BOOL)assertion;	// 0x323a9aa5
- (id)_currentGrowthAlgorithm;	// 0x323a5b29
- (void)_delayTimerFired;	// 0x323a95e9
- (id)_getCachedWWANKeepAliveInterval;	// 0x323aaa25
- (id)_initWithConnectionClass:(int)connectionClass interfaceIdentifier:(int)identifier guidancePriority:(unsigned)priority delegate:(id)delegate delegateQueue:(dispatch_queue_s *)queue serviceIdentifier:(id)identifier6;	// 0x323a4ab9
- (void)_intervalTimerFired;	// 0x323a9079
- (BOOL)_isPushConnected;	// 0x323a7425
- (void)_loadPreferencesGeneratingEvent:(BOOL)event;	// 0x323a53e1
- (void)_preferencesChanged;	// 0x323a5325
- (void)_releasePowerAssertion;	// 0x323aa4f1
- (void)_resolveStateWithAction:(int)action;	// 0x323a697d
- (void)_saveWWANKeepAliveInterval;	// 0x323aa5b1
- (void)_setTimerGuidance:(double)guidance;	// 0x323a9b85
- (void)_setupKeepAliveForReconnect;	// 0x323a8b49
- (void)_setupTimerForPollForAdjustment:(BOOL)adjustment;	// 0x323a8399
- (void)_setupTimerForPushWithKeepAliveInterval:(double)keepAliveInterval;	// 0x323a7db1
- (id)_stringForAction:(int)action;	// 0x323aade1
- (id)_stringForEvent:(int)event;	// 0x323aae51
- (id)_stringForStyle:(int)style;	// 0x323aadb5
- (void)_takePowerAssertionWithTimeout:(double)timeout;	// 0x323aa395
- (void)_validateActionForCurrentStyle:(int)currentStyle;	// 0x323a6775
- (void)cancelPollingIntervalOverride;	// 0x323a77f5
// declared property getter: - (unsigned)countOfGrowthActions;	// 0x323a6c01
// declared property getter: - (double)currentKeepAliveInterval;	// 0x323a6cd1
- (int)currentStyle;	// 0x323a58b9
- (void)dealloc;	// 0x323a516d
// declared property getter: - (id)delegate;	// 0x323a5149
- (void)interfaceLinkQualityChanged:(id)changed previousLinkQuality:(int)quality;	// 0x323a9c51
- (void)interfaceManagerInHomeCountryStatusChanged:(id)homeCountryStatusChanged;	// 0x323a9ec9
- (void)interfaceManagerInternetReachabilityChanged:(id)changed;	// 0x323a9f81
- (void)interfaceManagerWWANInterfaceStatusChanged:(id)changed;	// 0x323a9d05
// declared property getter: - (BOOL)isRunning;	// 0x323a6bdd
// declared property getter: - (double)keepAliveGracePeriod;	// 0x323aaeb5
- (void)log:(id)log;	// 0x323aad29
- (void)logAtLevel:(int)level format:(id)format;	// 0x323aad5d
- (void)logAtLevel:(int)level format:(id)format arguments:(void *)arguments;	// 0x323aad85
// declared property getter: - (id)loggingIdentifier;	// 0x323aaecd
// declared property getter: - (double)maximumKeepAliveInterval;	// 0x323a70b5
// declared property getter: - (double)minimumKeepAliveInterval;	// 0x323a6e91
// declared property getter: - (double)pollingInterval;	// 0x323a7461
- (void)resumeManagerWithAction:(int)action;	// 0x323a5c85
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x323a5125
- (void)setEnableNonCellularConnections:(BOOL)connections;	// 0x323a7c59
// declared property setter: - (void)setKeepAliveGracePeriod:(double)period;	// 0x323a72d9
// declared property setter: - (void)setMaximumKeepAliveInterval:(double)interval;	// 0x323a7185
// declared property setter: - (void)setMinimumKeepAliveInterval:(double)interval;	// 0x323a6f61
- (void)setOnlyAllowedStyle:(int)style;	// 0x323a5a55
- (void)setPollingIntervalOverride:(double)override;	// 0x323a76a9
- (BOOL)shouldClientScheduleReconnectDueToFailure;	// 0x323a7905
- (void)startManager;	// 0x323a5bb1
- (void)stopAndResetManager;	// 0x323a6b09
- (void)stopManager;	// 0x323a69f9
@end

