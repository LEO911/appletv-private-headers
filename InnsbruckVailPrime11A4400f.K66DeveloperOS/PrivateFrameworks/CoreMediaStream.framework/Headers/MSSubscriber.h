/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import "MSCupidStateMachine.h"
#import "MSSubscriber.h"
#import "MSSubscribeStreamsProtocolDelegate.h"
#import "MSSubscribeStorageProtocolDelegate.h"
#import "MSReauthorizationProtocolDelegate.h"

@class MSReauthorizationProtocol, MSSubscribeStreamsProtocol, MSObjectQueue, NSMutableDictionary, MSMediaStreamDaemon, NSMutableArray;
@protocol MSSubscribeStorageProtocol, MSSubscriberDelegate;

@protocol MSSubscriber
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;
- (void)abort;
- (void)checkForNewAssetCollections;
- (void)checkForOutstandingActivities;
// declared property getter: - (id)delegate;
- (id)ownSubscribedStream;
- (void)resetSync;
- (void)retrieveAssets:(id)assets;
// declared property setter: - (void)setDelegate:(id)delegate;
- (void)stop;
- (id)subscribedStreams;
@end

@interface MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate> {
	id<MSSubscriberDelegate> _delegate;	// 32 = 0x20
	MSMediaStreamDaemon *_daemon;	// 36 = 0x24
	BOOL _checkOneMoreTime;	// 40 = 0x28
	int _state;	// 44 = 0x2c
	MSSubscribeStreamsProtocol *_protocol;	// 48 = 0x30
	NSMutableDictionary *_newSubscriptionsByStreamID;	// 52 = 0x34
	int _retrievalState;	// 56 = 0x38
	id<MSSubscribeStorageProtocol> _storageProtocol;	// 60 = 0x3c
	MSReauthorizationProtocol *_reauthProtocol;	// 64 = 0x40
	MSObjectQueue *_retrievalQueue;	// 68 = 0x44
	NSMutableArray *_assetsBeingRetrieved;	// 72 = 0x48
	long long _targetRetrievalByteCount;	// 76 = 0x4c
	int _retrievalBatchSize;	// 84 = 0x54
	int _maxErrorCount;	// 88 = 0x58
}
@property(assign, nonatomic) MSMediaStreamDaemon *daemon;	// G=0x304d8761; S=0x304d8771; @synthesize=_daemon
@property(assign, nonatomic) id<MSSubscriberDelegate> delegate;	// G=0x304d8741; S=0x304d8751; @synthesize=_delegate
@property(assign, nonatomic) int retrievalBatchSize;	// G=0x304d87ad; S=0x304d87bd; @synthesize=_retrievalBatchSize
@property(assign, nonatomic) long long targetRetrievalByteCount;	// G=0x304d8781; S=0x304d8799; @synthesize=_targetRetrievalByteCount
+ (id)_clearInstantiatedSubscribersByPersonID;	// 0x304d3b35
+ (id)_descriptionForRetrievalState:(int)retrievalState;	// 0x304d4871
+ (id)_descriptionForState:(int)state;	// 0x304d4825
+ (void)_setMasterNextActivityDate:(id)date forPersonID:(id)personID;	// 0x304d3bb5
+ (id)existingSubscriberForPersonID:(id)personID;	// 0x304d3b19
+ (void)forgetPersonID:(id)anId;	// 0x304d3b49
+ (BOOL)isInRetryState;	// 0x304d41b5
+ (id)nextActivityDate;	// 0x304d3f35
+ (id)nextActivityDateForPersonID:(id)personID;	// 0x304d4049
+ (id)personIDsWithOutstandingActivities;	// 0x304d4099
+ (void)stopAllActivities;	// 0x304d40d5
+ (id)subscriberForPersonID:(id)personID;	// 0x304d39fd
- (id)initWithPersonID:(id)personID baseURL:(id)url;	// 0x304d4465
- (void).cxx_destruct;	// 0x304d87cd
- (void)_abort;	// 0x304d7189
- (void)_changeRetrievalStateTo:(int)to;	// 0x304d4991
- (void)_changeStateTo:(int)to;	// 0x304d48d9
- (void)_checkForNewAssetCollections;	// 0x304d5415
- (void)_didFinishRetrievingSubscriptionUpdate;	// 0x304d5641
- (void)_didReceiveAuthenticationError:(id)error;	// 0x304d61e1
- (void)_finishedRetrievingAsset:(id)asset;	// 0x304d74f5
- (void)_forget;	// 0x304d7479
- (BOOL)_hasOutstandingPoll;	// 0x304d4ded
- (BOOL)_isAllowedToDownload;	// 0x304d511d
- (BOOL)_isInRetryState;	// 0x304d74c1
- (void)_reauthorizeAssets;	// 0x304d6efd
- (void)_refreshServerSideConfigurationParameters;	// 0x304d4a49
- (void)_retrieveAssets;	// 0x304d695d
- (void)_retrieveNextAssets;	// 0x304d6b61
- (void)_serverSideConfigurationDidChange:(id)_serverSideConfiguration;	// 0x304d4b65
- (void)_setHasOutstandingPoll:(BOOL)poll;	// 0x304d4e51
- (void)_setSubscriptionsByStreamID:(id)anId;	// 0x304d4fe9
- (void)_stopOutSubscriberState:(int *)state outRetrievalState:(int *)state2;	// 0x304d7015
- (id)_subscriptionsByStreamID;	// 0x304d4f3d
- (void)_updateMasterManifest;	// 0x304d4d09
- (void)abort;	// 0x304d7469
- (void)checkForNewAssetCollections;	// 0x304d5275
- (void)checkForOutstandingActivities;	// 0x304d6869
// declared property getter: - (id)daemon;	// 0x304d8761
- (void)deactivate;	// 0x304d46a5
- (void)dealloc;	// 0x304d47e5
// declared property getter: - (id)delegate;	// 0x304d8741
- (id)ownSubscribedStream;	// 0x304d43f9
- (void)reauthorizationProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x304d809d
- (void)reauthorizationProtocol:(id)protocol reauthorizedAssets:(id)assets rejectedAssets:(id)assets3 error:(id)error;	// 0x304d81a9
- (void)resetSync;	// 0x304d505d
// declared property getter: - (int)retrievalBatchSize;	// 0x304d87ad
- (void)retrieveAssets:(id)assets;	// 0x304d63f9
// declared property setter: - (void)setDaemon:(id)daemon;	// 0x304d8771
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x304d8751
// declared property setter: - (void)setRetrievalBatchSize:(int)size;	// 0x304d87bd
// declared property setter: - (void)setTargetRetrievalByteCount:(long long)count;	// 0x304d8799
- (void)stop;	// 0x304d7175
- (void)subscribeStorageProtocol:(id)protocol didFinishRetrievingAsset:(id)asset error:(id)error;	// 0x304d7641
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)subscribeStorageProtocol;	// 0x304d776d
- (void)subscribeStreamsProtocol:(id)protocol didFindDisappearedSubscriptionForPersonID:(id)personID;	// 0x304d5ec9
- (void)subscribeStreamsProtocol:(id)protocol didFindShareState:(id)state;	// 0x304d637d
- (void)subscribeStreamsProtocol:(id)protocol didFindTemporarilyUnavailableSubscriptionForPersonID:(id)personID;	// 0x304d6301
- (void)subscribeStreamsProtocol:(id)protocol didFinishError:(id)error;	// 0x304d5fa5
- (void)subscribeStreamsProtocol:(id)protocol didFinishReceivingUpdatesForPersonID:(id)personID ctag:(id)ctag;	// 0x304d5ca5
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAssetCollections:(id)collections forPersonID:(id)personID;	// 0x304d5a09
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x304d62ed
- (void)subscribeStreamsProtocol:(id)protocol willReceiveUpdatesForPersonID:(id)personID wasReset:(BOOL)reset metadata:(id)metadata;	// 0x304d5795
- (id)subscribedStreams;	// 0x304d42a5
// declared property getter: - (long long)targetRetrievalByteCount;	// 0x304d8781
@end

