/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream
 */

#import "NSObject.h"
#import "MSPublisher.h"
#import "MSCupidStateMachine.h"
#import "MSPublishStreamsProtocolDelegate.h"
#import "MSPublishStorageProtocolDelegate.h"

@class NSURL, MSPublishStreamsProtocol, MSObjectQueue, NSArray, NSMutableDictionary, MSMediaStreamDaemon, NSMutableArray;
@protocol MSPublishStorageProtocol, MSPublisherDelegate;

@protocol MSPublisher <NSObject>
@property(assign, nonatomic) id<MSPublisherDelegate> delegate;
@property(assign, nonatomic) int publishBatchSize;
- (void)abort;
// declared property getter: - (id)delegate;
- (void)publish;
// declared property getter: - (int)publishBatchSize;
- (void)reenqueueQuarantinedAssetCollections;
// declared property setter: - (void)setDelegate:(id)delegate;
// declared property setter: - (void)setPublishBatchSize:(int)size;
- (void)stop;
- (void)submitAssetCollectionsForPublication:(id)publication;
- (void)submitAssetCollectionsForPublication:(id)publication skipAssetCollections:(id)collections;
@end

@interface MSPublisher : MSCupidStateMachine <MSPublisher, MSPublishStreamsProtocolDelegate, MSPublishStorageProtocolDelegate> {
	id<MSPublisherDelegate> _delegate;	// 32 = 0x20
	MSMediaStreamDaemon *_daemon;	// 36 = 0x24
	int _state;	// 40 = 0x28
	MSObjectQueue *_uploadQueue;	// 44 = 0x2c
	MSObjectQueue *_derivativesQueue;	// 48 = 0x30
	MSObjectQueue *_quarantinedQueue;	// 52 = 0x34
	NSArray *_pendingDerivativesQueue;	// 56 = 0x38
	NSMutableArray *_requestAuthQueue;	// 60 = 0x3c
	unsigned _sendingQueueCount;	// 64 = 0x40
	NSMutableArray *_sendingQueue;	// 68 = 0x44
	NSMutableDictionary *_fileHashToAssetMap;	// 72 = 0x48
	MSPublishStreamsProtocol *_protocol;	// 76 = 0x4c
	id<MSPublishStorageProtocol> _storageProtocol;	// 80 = 0x50
	NSURL *_storageProtocolURL;	// 84 = 0x54
	NSMutableArray *_tempFiles;	// 88 = 0x58
	NSMutableDictionary *_maxSizeByUTI;	// 92 = 0x5c
	long long _publishTargetByteCount;	// 96 = 0x60
	int _publishBatchSize;	// 104 = 0x68
	int _maxErrorCount;	// 108 = 0x6c
}
@property(assign, nonatomic) MSMediaStreamDaemon *daemon;	// G=0x304d385d; S=0x304d386d; @synthesize=_daemon
@property(assign, nonatomic) id<MSPublisherDelegate> delegate;	// G=0x304d383d; S=0x304d384d; @synthesize=_delegate
@property(assign, nonatomic) int publishBatchSize;	// G=0x304d38e1; S=0x304d38f1; @synthesize=_publishBatchSize
@property(assign, nonatomic) long long publishTargetByteCount;	// G=0x304d38b5; S=0x304d38cd; @synthesize=_publishTargetByteCount
@property(retain, nonatomic) NSURL *storageProtocolURL;	// G=0x304d387d; S=0x304d388d; @synthesize=_storageProtocolURL
+ (id)_clearInstantiatedPublishersByPersonID;	// 0x304cae29
+ (void)_setMasterNextActivityDate:(id)date forPersonID:(id)personID;	// 0x304caea9
+ (id)existingPublisherForPersonID:(id)personID;	// 0x304cae0d
+ (void)forgetPersonID:(id)anId;	// 0x304cae3d
+ (BOOL)isInRetryState;	// 0x304cb4f1
+ (id)nextActivityDate;	// 0x304cb271
+ (id)nextActivityDateForPersonID:(id)personID;	// 0x304cb385
+ (id)personIDsWithOutstandingActivities;	// 0x304cb3d5
+ (id)publisherForPersonID:(id)personID;	// 0x304cacf1
+ (void)stopAllActivities;	// 0x304cb411
- (id)initWithPersonID:(id)personID baseURL:(id)url;	// 0x304cb5e1
- (void).cxx_destruct;	// 0x304d3901
- (void)_abort;	// 0x304d3531
- (id)_abortedError;	// 0x304d34d1
- (void)_addAssetToFileHashMap:(id)fileHashMap;	// 0x304ce141
- (void)_categorizeError:(id)error setOutIsIgnorable:(BOOL *)ignorable setOutIsCounted:(BOOL *)counted setOutIsFatal:(BOOL *)fatal setOutNeedsBackoff:(BOOL *)backoff setOutIsTemporary:(BOOL *)temporary setOutIsTokenAuth:(BOOL *)auth setOutIsAuthError:(BOOL *)error8;	// 0x304d1c45
- (id)_checkAssetCollectionFiles:(id)files;	// 0x304cce9d
- (id)_checkObjectWrappers:(id)wrappers;	// 0x304cd0d5
- (id)_collectionWithNoDerivatives:(id)noDerivatives;	// 0x304ccda5
- (void)_didFinishUsingAssetCollections:(id)collections;	// 0x304ce57d
- (void)_forget;	// 0x304d37c1
- (id)_invalidStreamsResponseErrorUnderlyingError:(id)error;	// 0x304cfb45
- (BOOL)_isAllowedToUpload;	// 0x304cd609
- (BOOL)_isInRetryState;	// 0x304d3815
- (void)_quarantineOrDiscardWrappers:(id)wrappers withError:(id)error;	// 0x304cc9a9
- (void)_refreshServerSideConfiguredParameters;	// 0x304cc031
- (void)_registerAllAssetsForWrapper:(id)wrapper;	// 0x304cc83d
- (void)_registerAsset:(id)asset;	// 0x304cc7cd
- (void)_removeAssetFromFileHashMap:(id)fileHashMap;	// 0x304ce295
- (void)_removeAssetsInAssetCollectionWrappersFromAssetMap:(id)assetMap;	// 0x304ce365
- (void)_requestDerivatives;	// 0x304cd909
- (void)_sendFilesToMMCS;	// 0x304d115d
- (void)_sendMetadataToStreams;	// 0x304cf39d
- (void)_sendUploadComplete;	// 0x304d2cd5
- (void)_serverSideConfigurationDidChange:(id)_serverSideConfiguration;	// 0x304cc629
- (int)_stop;	// 0x304d3405
- (void)_updateMasterManifest;	// 0x304cbbc9
- (BOOL)_verifyAssetFile:(id)file;	// 0x304cccb9
- (void)abort;	// 0x304d37f5
- (void)computeHashForAsset:(id)asset;	// 0x304cc011
// declared property getter: - (id)daemon;	// 0x304d385d
- (void)deactivate;	// 0x304cb9c1
- (void)dealloc;	// 0x304cbb89
// declared property getter: - (id)delegate;	// 0x304d383d
- (BOOL)enqueueAssetCollections:(id)collections outError:(id *)error;	// 0x304cbd49
- (void)publish;	// 0x304cd715
// declared property getter: - (int)publishBatchSize;	// 0x304d38e1
- (void)publishStorageProtocol:(id)protocol didFinishUploadingAsset:(id)asset error:(id)error;	// 0x304d15ad
- (void)publishStorageProtocol:(id)protocol didFinishUsingFD:(int)fd forAsset:(id)asset;	// 0x304d1b59
- (int)publishStorageProtocol:(id)protocol didRequestFDForAsset:(id)asset;	// 0x304d166d
- (void)publishStorageProtocolDidFinishPublishingAllAssets:(id)publishStorageProtocol;	// 0x304d1d6d
- (void)publishStreamsProtocol:(id)protocol didFinishSendingUploadCompleteError:(id)error;	// 0x304d2d4d
- (void)publishStreamsProtocol:(id)protocol didFinishUploadingMetadataResponse:(id)response error:(id)error;	// 0x304cfbe5
- (void)publishStreamsProtocol:(id)protocol didReceiveAuthenticationError:(id)error;	// 0x304d1079
// declared property getter: - (long long)publishTargetByteCount;	// 0x304d38b5
- (void)reenqueueQuarantinedAssetCollections;	// 0x304cd2cd
// declared property setter: - (void)setDaemon:(id)daemon;	// 0x304d386d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x304d384d
// declared property setter: - (void)setPublishBatchSize:(int)size;	// 0x304d38f1
// declared property setter: - (void)setPublishTargetByteCount:(long long)count;	// 0x304d38cd
// declared property setter: - (void)setStorageProtocolURL:(id)url;	// 0x304d388d
- (void)stop;	// 0x304d3805
// declared property getter: - (id)storageProtocolURL;	// 0x304d387d
- (void)submitAssetCollectionsForPublication:(id)publication;	// 0x304ce70d
- (void)submitAssetCollectionsForPublication:(id)publication skipAssetCollections:(id)collections;	// 0x304ce721
@end

