/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import "CorePDF-Structs.h"
#import "CPDisposable.h"
#import "CPTextObject.h"

@class CPCharSequence, NSArray;

@interface CPTextLine : CPTextObject <CPDisposable> {
	CPCharSequence *charSequence;	// 76 = 0x4c
	XXStruct_iDweLB *wordArray;	// 80 = 0x50
	unsigned wordCount;	// 84 = 0x54
	CPInlineContainer *inlineList;	// 88 = 0x58
	int lineNumber;	// 92 = 0x5c
	int columnNumber;	// 96 = 0x60
	float baseline;	// 100 = 0x64
	BOOL baseLineIsNull;	// 104 = 0x68
	BOOL hasBeenSplit;	// 105 = 0x69
	BOOL hasBeenProcessed;	// 106 = 0x6a
	BOOL maySplit;	// 107 = 0x6b
	BOOL hasTabs;	// 108 = 0x6c
	NSArray *columnBreaks;	// 112 = 0x70
	NSArray *xsegments;	// 116 = 0x74
	int levels;	// 120 = 0x78
	float maximumLetterGap;	// 124 = 0x7c
	float maximumWordGap;	// 128 = 0x80
	int tabsBefore;	// 132 = 0x84
	BOOL irregular;	// 136 = 0x88
	unsigned leftSpacerIndex;	// 140 = 0x8c
	unsigned rightSpacerIndex;	// 144 = 0x90
	BOOL isListItem;	// 148 = 0x94
	unsigned listSpacerIndex;	// 152 = 0x98
	BOOL lineBreakAfter;	// 156 = 0x9c
	CPPDFStyle *uniformStyle;	// 160 = 0xa0
	unsigned short uniformStyleFlags;	// 164 = 0xa4
	float monospaceWidth;	// 168 = 0xa8
	unsigned *spacesBefore;	// 172 = 0xac
	BOOL disposed;	// 176 = 0xb0
}
@property(assign) float baseline;	// G=0x305e9a1d; S=0x305e9ae9; converted property
@property(retain) CPCharSequence *charSequence;	// G=0x305e8d09; S=0x305e8cc5; converted property
@property(retain) NSArray *columnBreaks;	// G=0x305e96c1; S=0x305e96d1; converted property
@property(assign) BOOL hasBeenProcessed;	// G=0x305e96b1; S=0x305e96a1; converted property
@property(assign) BOOL hasBeenSplit;	// G=0x305e9691; S=0x305e9681; converted property
@property(assign) BOOL hasTabs;	// G=0x305e973d; S=0x305e972d; converted property
@property(readonly, assign) CPInlineContainer *inlineList;	// G=0x305e8ea1; converted property
@property(assign) BOOL irregular;	// G=0x305ea191; S=0x305ea1a1; converted property
@property(assign, nonatomic) BOOL isListItem;	// G=0x305ea3dd; S=0x305ea3ed; @synthesize
@property(assign, nonatomic) unsigned leftSpacerIndex;	// G=0x305ea39d; S=0x305ea3ad; @synthesize
@property(assign) int levels;	// G=0x305ea0bd; S=0x305ea0cd; converted property
@property(assign, nonatomic) BOOL lineBreakAfter;	// G=0x305ea41d; S=0x305ea42d; @synthesize
@property(assign, nonatomic) unsigned listSpacerIndex;	// G=0x305ea3fd; S=0x305ea40d; @synthesize
@property(assign) float maximumLetterGap;	// G=0x305ea151; S=0x305ea161; converted property
@property(assign) float maximumWordGap;	// G=0x305ea171; S=0x305ea181; converted property
@property(readonly, assign) float monospaceWidth;	// G=0x305e9df1; converted property
@property(assign, nonatomic) unsigned rightSpacerIndex;	// G=0x305ea3bd; S=0x305ea3cd; @synthesize
@property(assign) int tabsBefore;	// G=0x305e975d; S=0x305e974d; converted property
@property(readonly, assign) XXStruct_iDweLB *wordArray;	// G=0x305e8d19; converted property
@property(readonly, assign) unsigned wordCount;	// G=0x305e8d79; converted property
- (id)init;	// 0x305e89d9
- (void)accept:(id)accept;	// 0x305e9715
- (int)align;	// 0x305e9069
- (CGPoint)anchor;	// 0x305e99b5
- (void)anchorChunk:(id)chunk atWordIndex:(unsigned)wordIndex;	// 0x305e8eb1
- (id)attributes;	// 0x305ea1b1
- (int)baseLineAscending:(id)ascending;	// 0x305e9835
- (int)baseLineDescending:(id)descending;	// 0x305e9879
// converted property getter: - (float)baseline;	// 0x305e9a1d
- (CGRect)bounds;	// 0x305e9771
- (CGRect)boundsOfWordAtIndex:(unsigned)index;	// 0x305e8d89
- (BOOL)changesFontAt:(id)at;	// 0x305e90e1
// converted property getter: - (id)charSequence;	// 0x305e8d09
// converted property getter: - (id)columnBreaks;	// 0x305e96c1
- (id)copyWithZone:(NSZone *)zone;	// 0x305e8bed
- (void)dealloc;	// 0x305e8b79
- (void)dispose;	// 0x305e8aad
- (void)finalize;	// 0x305e8b39
- (XXStruct_iDweLB *)firstWord;	// 0x305e8e31
- (void)fitBoundsToChildren;	// 0x305e976d
// converted property getter: - (BOOL)hasBeenProcessed;	// 0x305e96b1
// converted property getter: - (BOOL)hasBeenSplit;	// 0x305e9691
- (BOOL)hasDropCap;	// 0x305ea261
- (BOOL)hasJustifiedAlignment;	// 0x305e90b5
// converted property getter: - (BOOL)hasTabs;	// 0x305e973d
- (BOOL)hyphenated;	// 0x305e9a19
- (unsigned)inlineCount;	// 0x305e8e81
// converted property getter: - (CPInlineContainer *)inlineList;	// 0x305e8ea1
// converted property getter: - (BOOL)irregular;	// 0x305ea191
- (BOOL)isIndivisible;	// 0x305e9b0d
// declared property getter: - (BOOL)isListItem;	// 0x305ea3dd
- (BOOL)isMonospaced;	// 0x305e9dc5
- (XXStruct_iDweLB *)lastWord;	// 0x305e8e55
// declared property getter: - (unsigned)leftSpacerIndex;	// 0x305ea39d
// converted property getter: - (int)levels;	// 0x305ea0bd
// declared property getter: - (BOOL)lineBreakAfter;	// 0x305ea41d
// declared property getter: - (unsigned)listSpacerIndex;	// 0x305ea3fd
- (BOOL)mapToWordPairs:(/*function-pointer*/ void *)wordPairs passing:(void *)passing;	// 0x305e958d
- (BOOL)mapToWordPairsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x305e95f1
- (BOOL)mapToWords:(/*function-pointer*/ void *)words passing:(void *)passing;	// 0x305e94bd
- (BOOL)mapToWordsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x305e951d
// converted property getter: - (float)maximumLetterGap;	// 0x305ea151
// converted property getter: - (float)maximumWordGap;	// 0x305ea171
- (float)medianFontSize;	// 0x305ea315
// converted property getter: - (float)monospaceWidth;	// 0x305e9df1
- (id)newTextLineFromWordAt:(unsigned)at lengthInWords:(unsigned)words;	// 0x305e9171
- (BOOL)overlapsHorizontally:(CGRect)horizontally;	// 0x305e9911
- (BOOL)overlapsWith:(id)with;	// 0x305e98bd
- (id)properties;	// 0x305e9675
- (void)recomputeBaseline;	// 0x305e9b65
- (void)recomputeLevels;	// 0x305ea0dd
- (BOOL)removeTextLines:(id)lines whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x305e92f5
// declared property getter: - (unsigned)rightSpacerIndex;	// 0x305ea3bd
// converted property setter: - (void)setBaseline:(float)baseline;	// 0x305e9ae9
- (void)setBaselineToNull;	// 0x305e9af9
// converted property setter: - (void)setCharSequence:(id)sequence;	// 0x305e8cc5
// converted property setter: - (void)setColumnBreaks:(id)breaks;	// 0x305e96d1
// converted property setter: - (void)setHasBeenProcessed:(BOOL)processed;	// 0x305e96a1
// converted property setter: - (void)setHasBeenSplit:(BOOL)split;	// 0x305e9681
// converted property setter: - (void)setHasTabs:(BOOL)tabs;	// 0x305e972d
// converted property setter: - (void)setIrregular:(BOOL)irregular;	// 0x305ea1a1
// declared property setter: - (void)setIsListItem:(BOOL)item;	// 0x305ea3ed
// declared property setter: - (void)setLeftSpacerIndex:(unsigned)index;	// 0x305ea3ad
// converted property setter: - (void)setLevels:(int)levels;	// 0x305ea0cd
// declared property setter: - (void)setLineBreakAfter:(BOOL)after;	// 0x305ea42d
// declared property setter: - (void)setListSpacerIndex:(unsigned)index;	// 0x305ea40d
// converted property setter: - (void)setMaximumLetterGap:(float)gap;	// 0x305ea161
// converted property setter: - (void)setMaximumWordGap:(float)gap;	// 0x305ea181
// declared property setter: - (void)setRightSpacerIndex:(unsigned)index;	// 0x305ea3cd
- (void)setSpaces:(unsigned)spaces beforeWordAtIndex:(unsigned)index;	// 0x305ea015
// converted property setter: - (void)setTabsBefore:(int)before;	// 0x305e974d
- (unsigned)spacesBeforeWordAtIndex:(unsigned)index;	// 0x305e9fdd
- (BOOL)styleIsUniform:(CPPDFStyle **)uniform styleFlags:(unsigned short)flags;	// 0x305e9ccd
// converted property getter: - (int)tabsBefore;	// 0x305e975d
- (int)topIsAbove:(id)above;	// 0x305ea1bd
- (void)translateObjectYBy:(float)by;	// 0x305e9b11
// converted property getter: - (XXStruct_iDweLB *)wordArray;	// 0x305e8d19
- (XXStruct_iDweLB *)wordArrayOfSize:(unsigned)size;	// 0x305e8d29
- (XXStruct_iDweLB *)wordAtIndex:(unsigned)index;	// 0x305e8de1
// converted property getter: - (unsigned)wordCount;	// 0x305e8d79
- (long)zOrder;	// 0x305e9011
@end

