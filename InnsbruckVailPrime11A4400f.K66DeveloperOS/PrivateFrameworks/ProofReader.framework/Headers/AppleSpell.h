/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ProofReader.framework/ProofReader
 */

#import "ProofReader-Structs.h"
#import </libobjc.A.h>

@class NSMutableArray, NSString, NSArray, NSMutableSet, NSURL, NSMutableDictionary;

@interface AppleSpell : NSObject {
	void *_proofReaderConnection;	// 4 = 0x4
	CFDictionaryRef _databaseConnections;	// 8 = 0x8
	NSMutableDictionary *_bindicts;	// 12 = 0xc
	NSMutableArray *_globalBindictDataArray;	// 16 = 0x10
	NSMutableArray *_globalNegBindictDataArray;	// 20 = 0x14
	NSMutableDictionary *_autocorrections;	// 24 = 0x18
	NSString *_lastLanguage;	// 28 = 0x1c
	NSArray *_userPreferredLanguages;	// 32 = 0x20
	NSArray *_userTopLanguages;	// 36 = 0x24
	NSMutableDictionary *_learnedResponses;	// 40 = 0x28
	NSMutableArray *_diagnosticInfo;	// 44 = 0x2c
	NSMutableSet *_foundNames;	// 48 = 0x30
	double _lastFindNames;	// 52 = 0x34
	NSMutableSet *_foundShortcuts;	// 60 = 0x3c
	NSMutableDictionary *_lastSampleCollected;	// 64 = 0x40
	unsigned _numberOfSamplesCollected;	// 68 = 0x44
	double _lastSampleCollection;	// 72 = 0x48
	NSMutableArray *_retainedSamples;	// 80 = 0x50
	NSMutableDictionary *_lastSampleRecorded;	// 84 = 0x54
	double _lastSampleRecording;	// 88 = 0x58
	NSMutableArray *_altBundleURLs;	// 96 = 0x60
	NSURL *_updateBundleURL;	// 100 = 0x64
	NSMutableDictionary *_languageCounts;	// 104 = 0x68
	double _lastLanguageCounts;	// 108 = 0x6c
	BOOL _userPrefersUncheckedLatinLanguage;	// 116 = 0x74
}
@property(readonly, retain) NSMutableArray *globalBindictDataArray;	// G=0x32516df1; converted property
- (id)init;	// 0x324fba79
- (BOOL)_checkEnglishGrammarInString:(id)string range:(NSRange)range indexIntoBuffer:(unsigned)buffer bufferLength:(unsigned)length language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender bufIO:(PR_BUF_IO *)io retval:(int *)retval errorRange:(NSRange *)range10 details:(id *)details;	// 0x3255c5b1
- (BOOL)_checkGrammarInString:(id)string range:(NSRange)range language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender bufIO:(PR_BUF_IO *)io errorRange:(NSRange *)range7 details:(id *)details;	// 0x3251772d
- (id)_correctionForKoreanString:(id)koreanString range:(NSRange)range inString:(id)string tagger:(id)tagger taggerIndex:(unsigned)index dictionary:(id)dictionary keyEventData:(id)data alternativeCorrection:(id *)correction;	// 0x3257201d
- (id)_correctionForString:(id)string range:(NSRange)range inString:(id)string3 tagger:(id)tagger taggerIndex:(unsigned)index dictionary:(id)dictionary language:(id)language connection:(PR_DB_IO *)connection keyEventData:(id)data alternativeCorrection:(id *)correction isApostropheInsertion:(BOOL *)insertion;	// 0x32561ed9
- (id)_correctionForSuggestedPhrase:(const char *)suggestedPhrase originalBuffer:(const char *)buffer length:(unsigned)length;	// 0x3255c311
- (id)_crudeNextWordInString:(id)string inRange:(NSRange)range;	// 0x3255be99
- (id)_crudePreviousWordInString:(id)string inRange:(NSRange)range;	// 0x3255c0dd
- (id)_crudePreviousWordInString:(id)string inRange:(NSRange)range precededBy:(id *)by;	// 0x3255bf89
- (id)_detailWithRange:(NSRange)range description:(id)description corrections:(id)corrections;	// 0x3255c521
- (unsigned)_getSplitIndexes:(unsigned *)indexes maxCount:(unsigned)count forPinyinInputString:(id)pinyinInputString;	// 0x3256b2e5
- (id)_japaneseCorrectionForString:(id)string connection:(PR_DB_IO *)connection;	// 0x32561d39
- (id)_modifiedGrammarDescriptionForDescription:(id)description;	// 0x3255c101
- (id)_orthographyByModifyingOrthography:(id)orthography withLatinLanguage:(id)latinLanguage;	// 0x32517c7d
- (id)_pinyinStringByCombiningPinyinString:(id)string withPinyinString:(id)pinyinString;	// 0x3256b449
- (id)_primitiveRetainedAlternativesForPinyinInputString:(id)pinyinInputString;	// 0x3256adb5
- (id)_recursiveRetainedAlternativesForPinyinInputString:(id)pinyinInputString depth:(unsigned)depth;	// 0x3256bd15
- (id)_retainedAlternativesByCombiningAlternatives:(id)alternatives withAlternatives:(id)alternatives2 andAddingAlternatives:(id)alternatives3;	// 0x3256b9e9
- (void)addAlternateDataBundleURL:(id)url;	// 0x32517249
- (void)addGuessesForKoreanWord:(id)koreanWord toMutableArray:(id)mutableArray includeAdditionalGuesses:(BOOL)guesses;	// 0x32571a39
- (void)addModifiedPartialPinyinToArray:(id)array connection:(PR_DB_IO *)connection fromIndex:(unsigned)index prevIndex:(unsigned)index4 prevPrevIndex:(unsigned)index5 prePrevPrevIndex:(unsigned)index6 startingModificationsAt:(unsigned)at inBuffer:(char *)buffer length:(unsigned)length initialSyllableCount:(unsigned)count initialScore:(unsigned)score prevScore:(unsigned)score12 prevPrevScore:(unsigned)score13 lastSyllableScore:(unsigned)score14;	// 0x3256a5b5
- (void)addModifiedPinyinToArray:(id)array connection:(PR_DB_IO *)connection fromIndex:(unsigned)index prevIndex:(unsigned)index4 prevPrevIndex:(unsigned)index5 startingModificationsAt:(unsigned)at inBuffer:(char *)buffer length:(unsigned)length initialSyllableCount:(unsigned)count initialScore:(unsigned)score prevScore:(unsigned)score11 prevPrevScore:(unsigned)score12 lastSyllableScore:(unsigned)score13 couldBeAbbreviatedPinyin:(BOOL)pinyin;	// 0x32568465
- (void)addSpecialModifiedPinyinToArray:(id)array inBuffer:(char *)buffer length:(unsigned)length atEnd:(BOOL)end;	// 0x32567b55
- (id)autocorrectionDictionaryForLanguage:(id)language;	// 0x32513ff9
- (id)bindictDataArrayForLanguage:(id)language index:(unsigned)index;	// 0x32516a15
- (id)bindictDataForLanguage:(id)language index:(unsigned)index;	// 0x325035d9
- (id)bundle;	// 0x324fd99d
- (BOOL)checkWordBuffer:(char *)buffer length:(unsigned)length language:(id)language encoding:(unsigned long)encoding index:(unsigned)index;	// 0x32505079
- (void)clearCaches;	// 0x325171d9
- (PR_DB_IO *)databaseConnectionForLanguage:(id)language;	// 0x324fd145
- (unsigned long)encodingForLanguage:(id)language;	// 0x324fd06d
- (id)englishStringFromWordBuffer:(char *)wordBuffer length:(unsigned)length connection:(PR_DB_IO *)connection;	// 0x32567b01
- (id)englishStringsFromWordBuffer:(char *)wordBuffer length:(unsigned)length connection:(PR_DB_IO *)connection;	// 0x3256733d
- (id)fallbackLocalizationForLanguage:(id)language;	// 0x325166fd
// converted property getter: - (id)globalBindictDataArray;	// 0x32516df1
- (BOOL)globalCheckNegativeWordBuffer:(char *)buffer length:(unsigned)length language:(id)language encoding:(unsigned long)encoding;	// 0x32517401
- (BOOL)globalCheckWordBuffer:(char *)buffer length:(unsigned)length language:(id)language encoding:(unsigned long)encoding;	// 0x325056d9
- (id)globalNegativeBindictDataArray;	// 0x32516fe5
- (id)localizationForLanguage:(id)language;	// 0x324fcd41
- (id)localizationsForLanguage:(id)language;	// 0x3251632d
- (BOOL)looksLikeAdverb:(id)adverb language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender;	// 0x3255b909
- (BOOL)looksLikeArticledNoun:(id)noun language:(id)language connection:(PR_DB_IO *)connection;	// 0x3255b859
- (BOOL)looksLikeParticiple:(id)participle language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender;	// 0x3255ba95
- (BOOL)onContractionList:(id)list language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender;	// 0x3255bc5d
- (BOOL)onNoContractionList:(id)list language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender;	// 0x3255be69
- (void)resetTimer;	// 0x324fcbf5
- (void)setUpdateBundleURL:(id)url;	// 0x325172c9
- (id)spellServer:(id)server _retainedAlternativesForPinyinInputString:(id)pinyinInputString extended:(BOOL)extended;	// 0x3256c095
- (id)spellServer:(id)server _retainedCorrectionsForPinyinInputString:(id)pinyinInputString;	// 0x3256cde1
- (id)spellServer:(id)server _retainedFinalModificationsForPinyinInputString:(id)pinyinInputString geometryModelData:(id)data;	// 0x3256d341
- (id)spellServer:(id)server _retainedModificationsForPinyinInputString:(id)pinyinInputString geometryModelData:(id)data;	// 0x3256d095
- (id)spellServer:(id)server _retainedPrefixesForPinyinInputString:(id)pinyinInputString;	// 0x3256c585
- (id)spellServer:(id)server alternativesForPinyinInputString:(id)pinyinInputString;	// 0x3256c51d
- (id)spellServer:(id)server alternativesForPinyinInputString:(id)pinyinInputString language:(id)language;	// 0x32519e89
- (BOOL)spellServer:(id)server canChangeCaseOfFirstLetterInString:(id)string toUpperCase:(BOOL)upperCase language:(id)language;	// 0x32519ec9
- (NSRange)spellServer:(id)server checkGrammarInString:(id)string language:(id)language details:(id *)details;	// 0x32517c15
- (NSRange)spellServer:(id)server checkGrammarInString:(id)string range:(NSRange)range language:(id)language orthography:(id)orthography mutableResults:(id)results offset:(unsigned)offset details:(id *)details;	// 0x32517925
- (id)spellServer:(id)server checkString:(id)string offset:(unsigned)offset types:(unsigned long long)types options:(id)options orthography:(id)orthography wordCount:(int *)count;	// 0x32518fe5
- (id)spellServer:(id)server correctionsForPinyinInputString:(id)pinyinInputString;	// 0x3256d06d
- (id)spellServer:(id)server correctionsForPinyinInputString:(id)pinyinInputString language:(id)language;	// 0x32519eb9
- (id)spellServer:(id)server extendedAlternativesForPinyinInputString:(id)pinyinInputString;	// 0x3256c551
- (id)spellServer:(id)server extendedAlternativesForPinyinInputString:(id)pinyinInputString language:(id)language;	// 0x32519e99
- (id)spellServer:(id)server finalModificationsForPinyinInputString:(id)pinyinInputString;	// 0x3256d505
- (NSRange)spellServer:(id)server findMisspelledWordInString:(id)string language:(id)language wordCount:(int *)count countOnly:(BOOL)only;	// 0x32518eb1
- (NSRange)spellServer:(id)server findMisspelledWordInString:(id)string language:(id)language wordCount:(int *)count countOnly:(BOOL)only correction:(id *)correction;	// 0x324fcbf9
- (NSRange)spellServer:(id)server findMisspelledWordInString:(id)string range:(NSRange)range languages:(id)languages topLanguages:(id)languages5 orthography:(id)orthography checkOrthography:(BOOL)orthography7 mutableResults:(id)results offset:(unsigned)offset autocorrect:(BOOL)autocorrect keyEventData:(id)data appIdentifier:(id)identifier wordCount:(int *)count countOnly:(BOOL)only correction:(id *)correction;	// 0x32517d2d
- (id)spellServer:(id)server modificationsForPinyinInputString:(id)pinyinInputString;	// 0x3256d49d
- (id)spellServer:(id)server modificationsForPinyinInputString:(id)pinyinInputString geometryModelData:(id)data;	// 0x3256d4d1
- (id)spellServer:(id)server prefixesForPinyinInputString:(id)pinyinInputString;	// 0x3256cdb9
- (id)spellServer:(id)server prefixesForPinyinInputString:(id)pinyinInputString language:(id)language;	// 0x32519ea9
- (id)spellServer:(id)server stringForInputString:(id)inputString language:(id)language;	// 0x32519ac5
- (id)spellServer:(id)server suggestCompletionDictionariesForPartialWordRange:(NSRange)partialWordRange inString:(id)string inLanguage:(id)language;	// 0x3256414d
- (id)spellServer:(id)server suggestCompletionDictionariesForPartialWordRange:(NSRange)partialWordRange inString:(id)string language:(id)language;	// 0x32519a25
- (id)spellServer:(id)server suggestCompletionsForPartialWordRange:(NSRange)partialWordRange inString:(id)string inLanguage:(id)language;	// 0x32563de1
- (id)spellServer:(id)server suggestCompletionsForPartialWordRange:(NSRange)partialWordRange inString:(id)string language:(id)language;	// 0x325199f1
- (id)spellServer:(id)server suggestGuessesForKoreanWordRange:(NSRange)koreanWordRange inString:(id)string;	// 0x32572031
- (id)spellServer:(id)server suggestGuessesForWord:(id)word inLanguage:(id)language;	// 0x325113b9
- (id)spellServer:(id)server suggestGuessesForWordRange:(NSRange)wordRange inString:(id)string language:(id)language;	// 0x32511309
- (id)spellServer:(id)server suggestNextLetterDictionariesForPartialWordRange:(NSRange)partialWordRange inString:(id)string inLanguage:(id)language;	// 0x32564651
- (id)spellServer:(id)server suggestNextLetterDictionariesForPartialWordRange:(NSRange)partialWordRange inString:(id)string language:(id)language;	// 0x32519a59
- (id)spellServer:(id)server suggestWordWithLengthInRange:(NSRange)range language:(id)language;	// 0x32519a8d
- (id)spellServer:(id)server suggestWordWithMinimumLength:(unsigned)minimumLength maximumLength:(unsigned)length language:(id)language;	// 0x32564ab1
- (void)timeout:(id)timeout;	// 0x32516329
- (BOOL)validateAbbreviationOrNumberWordBuffer:(char *)buffer length:(unsigned)length language:(id)language encoding:(unsigned long)encoding connection:(PR_DB_IO *)connection sender:(id)sender;	// 0x32504d8d
- (BOOL)validateWordBuffer:(char *)buffer length:(unsigned)length connection:(PR_DB_IO *)connection;	// 0x32505861
- (BOOL)validateWordBuffer:(char *)buffer length:(unsigned)length language:(id)language connection:(PR_DB_IO *)connection sender:(id)sender checkBase:(BOOL)base checkDict:(BOOL)dict checkNames:(BOOL)names checkHyphens:(BOOL)hyphens checkIntercaps:(BOOL)intercaps checkOptions:(BOOL)options depth:(unsigned)depth;	// 0x32503821
- (BOOL)validateWordPrefixBuffer:(char *)buffer length:(unsigned)length connection:(PR_DB_IO *)connection;	// 0x3251760d
@end

