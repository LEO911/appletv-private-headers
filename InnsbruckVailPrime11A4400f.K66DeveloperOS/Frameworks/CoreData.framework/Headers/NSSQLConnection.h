/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import </libobjc.A.h>

@class NSSQLStatement, NSArray, NSSQLAdapter;

@interface NSSQLConnection : NSObject {
	NSSQLAdapter *_adapter;	// 4 = 0x4
	BOOL _transactionIsOpen;	// 8 = 0x8
	BOOL _useSyntaxColoredLogging;	// 9 = 0x9
	int _debug;	// 12 = 0xc
	NSSQLStatement *_sqlStatement;	// 16 = 0x10
	NSArray *_columnsToFetch;	// 20 = 0x14
	NSArray *_metadataColumns;	// 24 = 0x18
}
@property(readonly, retain) NSSQLAdapter *adapter;	// G=0x2d05a10d; converted property
@property(retain) NSArray *columnsToFetch;	// G=0x2d05b9fd; S=0x2d05ba1d; converted property
@property(readonly, retain) NSArray *metadataColumns;	// G=0x2d05ba61; converted property
@property(readonly, retain) NSSQLStatement *sqlStatement;	// G=0x2d05b341; converted property
+ (void)initialize;	// 0x2d0574f9
- (id)initWithAdapter:(id)adapter;	// 0x2d0577b5
- (void)_forceDisconnectOnError;	// 0x2d0f2ebd
- (void)_performPostSaveTasks;	// 0x2d0f4825
- (void)_raiseOptimisticLockingExceptionWithReason:(id)reason;	// 0x2d0f2c75
// converted property getter: - (id)adapter;	// 0x2d05a10d
- (void)addPeerRange:(id)range;	// 0x2d0f48c5
- (void)addPeerRangeForPeerID:(id)peerID entityName:(id)name rangeStart:(id)start rangeEnd:(id)end peerRangeStart:(id)start5 peerRangeEnd:(id)end6;	// 0x2d0f48f9
- (id)allPeerRanges;	// 0x2d0f492d
- (void)awake;	// 0x2d0f2e5d
- (void)beginTransaction;	// 0x2d0f2d8d
- (void)bindTempTableForBindIntarray:(id)bindIntarray;	// 0x2d0f31e9
- (BOOL)canConnect;	// 0x2d0f2fe1
// converted property getter: - (id)columnsToFetch;	// 0x2d05b9fd
- (void)commitTransaction;	// 0x2d0f2dc1
- (void)connect;	// 0x2d0f2e29
- (void)createIndexesForEntity:(id)entity;	// 0x2d0f3735
- (void)createManyToManyTablesForEntity:(id)entity;	// 0x2d0f363d
- (id)createMapOfEntityNameToPKMaxForEntities:(id)entities;	// 0x2d0f49c9
- (id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)pktable;	// 0x2d0f4995
- (id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)ubrangeTable;	// 0x2d0f4961
- (void)createMetadata;	// 0x2d0f3d21
- (void)createPrimaryKeyTableForModel:(id)model knownEmpty:(BOOL)empty;	// 0x2d0f4709
- (void)createSchema;	// 0x2d0f3df1
- (void)createTableForEntity:(id)entity;	// 0x2d0f35c9
- (void)createTablesForEntities:(id)entities;	// 0x2d0f3c81
- (BOOL)databaseIsEmpty;	// 0x2d0f3015
- (void)dealloc;	// 0x2d0f2cf5
- (void)deleteCorrelation:(id)correlation;	// 0x2d0f3119
- (void)deleteRow:(id)row;	// 0x2d0f3181
- (id)describeResults;	// 0x2d0f330d
- (void)didCreateSchema;	// 0x2d0f3ded
- (void)disconnect;	// 0x2d0f2e65
- (void)dropUbiquityTables;	// 0x2d0f4a99
- (void)endFetch;	// 0x2d0f33a9
- (void)endPrimaryKeyGeneration;	// 0x2d0f46d1
- (void)execute;	// 0x2d0f321d
- (long long)fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x2d0f4111
- (id)fetchMetadata;	// 0x2d059c01
- (int)fetchResultSet:(void *)set usingFetchPlan:(id)plan;	// 0x2d0f3375
- (id)fetchTableCreationSQL;	// 0x2d0f4179
- (id)fetchTableNames;	// 0x2d0f4145
- (id)fetchUbiquityKnowledgeVector;	// 0x2d0f4829
- (void)finalize;	// 0x2d0f2cb5
- (void)forceTransactionClosed;	// 0x2d0f2ea9
- (long long)generatePrimaryKeysForEntity:(id)entity batch:(unsigned)batch;	// 0x2d0f46c5
- (BOOL)hasMetadataTable;	// 0x2d0f41e1
- (BOOL)hasOpenTransaction;	// 0x2d0f2e99
- (BOOL)hasPrimaryKeyTable;	// 0x2d0f46d5
- (void)insertCorrelation:(id)correlation;	// 0x2d0f30b1
- (void)insertRow:(id)row;	// 0x2d0f307d
- (BOOL)isFetchInProgress;	// 0x2d0f32d9
- (BOOL)isOpen;	// 0x2d0f3049
// converted property getter: - (id)metadataColumns;	// 0x2d05ba61
- (id)newFetchUUIDSForSubentitiesRootedAt:(id)at;	// 0x2d0f41ad
- (id)newFetchedArray;	// 0x2d0f3341
- (void)performAdapterOperation:(id)operation;	// 0x2d0f33dd
- (void)performAdapterOperations:(id)operations;	// 0x2d0f3511
- (void)prepareAndExecuteSQLStatement:(id)statement;	// 0x2d0f327d
- (void)prepareForPrimaryKeyGeneration;	// 0x2d0f46cd
- (void)prepareSQLStatement:(id)statement;	// 0x2d05a9a5
- (CFArrayRef)rawIntegerRowsForSQL:(id)sql;	// 0x2d0f40dd
- (void)releaseSQLStatement;	// 0x2d05c935
- (void)resetSQLStatement;	// 0x2d0f3251
- (void)rollbackTransaction;	// 0x2d0f2df5
- (void)saveMetadata:(id)metadata;	// 0x2d0f4215
- (void)selectAttributes:(id)attributes fetchRequest:(id)request lock:(BOOL)lock entity:(id)entity;	// 0x2d0f31b5
// converted property setter: - (void)setColumnsToFetch:(id)fetch;	// 0x2d05ba1d
- (void)setExclusiveLockingMode:(BOOL)mode;	// 0x2d0f32d5
- (void)setUbiquityTableValue:(id)value forKey:(id)key;	// 0x2d0f49fd
- (void)sleep;	// 0x2d0f2e61
// converted property getter: - (id)sqlStatement;	// 0x2d05b341
- (void)transactionDidBegin;	// 0x2d0f2ecd
- (void)transactionDidCommit;	// 0x2d0f2f29
- (void)transactionDidRollback;	// 0x2d0f2f85
- (id)ubiquityTableKeysAndValues;	// 0x2d0f4a31
- (id)ubiquityTableValueForKey:(id)key;	// 0x2d0f4a65
- (void)updateCorrelation:(id)correlation;	// 0x2d0f30e5
- (void)updateRow:(id)row;	// 0x2d0f314d
- (void)updateUbiquityKnowledgeForPeerWithID:(id)anId andTransactionNumber:(id)number;	// 0x2d0f4891
- (void)updateUbiquityKnowledgeVector:(id)vector;	// 0x2d0f485d
- (void)willCreateSchema;	// 0x2d0f3de9
@end

