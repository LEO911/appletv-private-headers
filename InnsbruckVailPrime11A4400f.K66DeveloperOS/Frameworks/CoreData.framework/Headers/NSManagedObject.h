/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import </libobjc.A.h>

@class NSManagedObjectContext, NSManagedObjectID;

@interface NSManagedObject : NSObject {
	int _cd_rc;	// 4 = 0x4
	unsigned long _cd_stateFlags;	// 8 = 0x8
	id _cd_rawData;	// 12 = 0xc
	id _cd_entity;	// 16 = 0x10
	NSManagedObjectContext *_cd_managedObjectContext;	// 20 = 0x14
	NSManagedObjectID *_cd_objectID;	// 24 = 0x18
	unsigned long _cd_extraFlags;	// 28 = 0x1c
	id _cd_observationInfo;	// 32 = 0x20
	id *_cd_snapshots;	// 36 = 0x24
	unsigned long _cd_lockingInfo;	// 40 = 0x28
	id _cd_queueReference;	// 44 = 0x2c
}
@property(retain) id observationInfo;	// G=0x2d0a9ecd; S=0x2d0a9ebd; converted property
+ (XXStruct_Iy8xuA *)_PFMOClassFactoryData;	// 0x2d0b3c51
+ (id)_PFPlaceHolderSingleton;	// 0x2d0b3ed9
+ (id)_PFPlaceHolderSingleton_core;	// 0x2d0a8cd1
+ (void)_entityDeallocated;	// 0x2d0b3f8d
+ (BOOL)_hasOverriddenAwake;	// 0x2d0b44e1
+ (void)_initializeAccessorStubs;	// 0x2d0b4e9d
+ (void)_initializePrimitiveAccessorStubs;	// 0x2d0b4a25
+ (BOOL)_isGeneratedClass;	// 0x2d06e99d
+ (BOOL)_isGeneratedClass_1;	// 0x2d0b4071
+ (void)_release_1;	// 0x2d0b44bd
+ (id)_retain_1;	// 0x2d0b4495
+ (char *)_transientPropertiesChangesMask__;	// 0x2d0a8ce1
+ (BOOL)_useFastValidationMethod;	// 0x2d0b4075
+ (id)alloc;	// 0x2d0a8ce5
+ (unsigned)allocBatch:(id *)batch withEntity:(id)entity count:(unsigned)count;	// 0x2d0b4079
+ (id)allocWithEntity:(id)entity;	// 0x2d0b4385
+ (id)allocWithZone:(NSZone *)zone;	// 0x2d0a8cf5
+ (id)allocWithZone_10_4:(NSZone *)zone_10_4;	// 0x2d0a8d0d
+ (id)alloc_10_4;	// 0x2d0a8d05
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x2d0aef69
+ (id)batchAllocateWithEntity:(id)entity insertIntoManagedObjectContext:(id)context count:(unsigned)count;	// 0x2d0b4155
+ (Class)classForEntity:(id)entity;	// 0x2d06e9a5
+ (BOOL)contextShouldIgnoreUnmodeledPropertyChanges;	// 0x2d06f4c9
+ (void)initialize;	// 0x2d047e45
+ (void)release;	// 0x2d0b44b9
+ (BOOL)resolveClassMethod:(SEL)method;	// 0x2d0b5751
+ (BOOL)resolveInstanceMethod:(SEL)method;	// 0x2d0b591d
+ (id)retain;	// 0x2d0b4069
- (id)init;	// 0x2d0a9ac9
- (id)initWithEntity:(id)entity insertIntoManagedObjectContext:(id)context;	// 0x2d0a9835
- (id)_allProperties__;	// 0x2d0ae279
- (int)_batch_release__;	// 0x2d0a8f99
- (id)_calculateDiffsBetweenOrderedSet:(id)set andOrderedSet:(id)set2;	// 0x2d0adab1
- (void)_chainNewError:(id)error toOriginalErrorDoublePointer:(id *)originalErrorDoublePointer;	// 0x2d0b0ed5
- (id)_changedTransientProperties__;	// 0x2d0ae685
- (id)_changedValuesForCurrentEvent;	// 0x2d0acd95
- (void)_clearAllChanges__;	// 0x2d0aca51
- (void)_clearPendingChanges__;	// 0x2d0aca09
- (void)_clearRawPropertiesWithHint:(NSRange)hint;	// 0x2d0ae82d
- (void)_clearUnprocessedChanges__;	// 0x2d0aca39
- (void)_commitPhotoshoperyForRelationshipAtIndex:(unsigned)index newValue:(id)value;	// 0x2d0ace81
- (BOOL)_defaultValidation:(id *)validation error:(id *)error;	// 0x2d0b3c55
- (id)_descriptionValues;	// 0x2d0a91d5
- (void)_didChangeValue:(id)value forRelationship:(id)relationship named:(id)named withInverse:(id)inverse;	// 0x2d0b01dd
- (void)_excludeObject:(id)object fromPropertyWithKey:(id)key andIndex:(unsigned)index;	// 0x2d0aec81
- (id)_faultHandler__;	// 0x2d0acf59
- (id)_generateErrorDetailForKey:(id)key withValue:(id)value;	// 0x2d0b0fc9
- (id)_generateErrorWithCode:(int)code andMessage:(id)message forKey:(id)key andValue:(id)value additionalDetail:(id)detail;	// 0x2d0b1159
- (id)_genericMutableOrderedSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x2d0afc49
- (id)_genericMutableSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x2d0afb39
- (void)_genericUpdateFromSnapshot:(id)snapshot;	// 0x2d0b24fd
- (id)_genericValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x2d0b46dd
- (BOOL)_hasAnyObservers__;	// 0x2d0ac9d9
- (BOOL)_hasPendingChanges;	// 0x2d0ac9f1
- (BOOL)_hasRetainedStoreResources__;	// 0x2d0acae1
- (BOOL)_hasUnprocessedChanges__;	// 0x2d0aca21
- (id)_implicitObservationInfo;	// 0x2d0aef95
- (void)_includeObject:(id)object intoPropertyWithKey:(id)key andIndex:(unsigned)index;	// 0x2d0ae965
- (id)_initWithEntity:(id)entity withID:(id)anId withHandler:(id)handler withContext:(id)context;	// 0x2d0ac921
- (BOOL)_isDeallocating;	// 0x2d0a8f85
- (BOOL)_isKindOfEntity:(id)entity;	// 0x2d0b1b1d
- (BOOL)_isPendingDeletion__;	// 0x2d0acb1d
- (BOOL)_isPendingInsertion__;	// 0x2d0acb59
- (BOOL)_isPendingUpdate__;	// 0x2d0acb95
- (BOOL)_isSuppressingChangeNotifications__;	// 0x2d0aca69
- (BOOL)_isSuppressingKVO__;	// 0x2d0acaa5
- (BOOL)_isUnprocessedDeletion__;	// 0x2d0acbd1
- (BOOL)_isUnprocessedInsertion__;	// 0x2d0acc0d
- (BOOL)_isUnprocessedUpdate__;	// 0x2d0acc49
- (BOOL)_isValidRelationshipDestination__;	// 0x2d0afd59
- (id)_lastSnapshot__;	// 0x2d0acc95
- (void)_maintainInverseRelationship:(id)relationship forProperty:(id)property forChange:(unsigned)change onSet:(id)set;	// 0x2d0affc9
- (void)_maintainInverseRelationship:(id)relationship forProperty:(id)property oldDestination:(id)destination newDestination:(id)destination4;	// 0x2d0afde1
- (id)_newAllPropertiesWithRelationshipFaultsIntact__;	// 0x2d0ae2e5
- (id)_newChangedValuesForRefresh__;	// 0x2d0ad159
- (id)_newCommittedSnapshotValues;	// 0x2d0ae4dd
- (id)_newNestedSaveChangedValuesForParent:(id)parent;	// 0x2d0ad581
- (id)_newPersistentPropertiesForConflictRecordFaultsIntact__;	// 0x2d0ae419
- (id)_newPersistentPropertiesWithRelationshipFaultsIntact__;	// 0x2d0ae3bd
- (id)_newPropertiesForRetainedTypes:(unsigned *)retainedTypes andCopiedTypes:(unsigned *)types preserveFaults:(BOOL)faults;	// 0x2d0acf6d
- (id)_newSetFromSet:(id)set byApplyingDiffs:(id)diffs;	// 0x2d0b2b71
- (id)_newSnapshotForUndo__;	// 0x2d0add35
- (void)_nilOutReservedCurrentEventSnapshot__;	// 0x2d0acd5d
- (id)_originalSnapshot__;	// 0x2d0ace09
- (id)_persistentProperties__;	// 0x2d0ae351
- (void)_prepropagateDeleteForMerge;	// 0x2d0b0ec1
- (void)_propagateDelete;	// 0x2d0b0ead
- (void)_propagateDelete:(unsigned)aDelete;	// 0x2d0b07f9
- (id)_referenceQueue__;	// 0x2d0acf5d
- (id)_reservedCurrentEventSnapshot;	// 0x2d0acd3d
- (void)_setGenericValue:(id)value forKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x2d0b4885
- (void)_setHasRetainedStoreResources__:(BOOL)_;	// 0x2d0acaf5
- (void)_setLastSnapshot__:(id)_;	// 0x2d0accad
- (void)_setObjectID__:(id)_;	// 0x2d0acdc5
- (void)_setOriginalSnapshot__:(id)_;	// 0x2d0ace21
- (void)_setPendingDeletion__:(BOOL)_;	// 0x2d0acb31
- (void)_setPendingInsertion__:(BOOL)_;	// 0x2d0acb6d
- (void)_setPendingUpdate__:(BOOL)_;	// 0x2d0acba9
- (void)_setSuppressingChangeNotifications__:(BOOL)_;	// 0x2d0aca7d
- (void)_setSuppressingKVO__:(BOOL)_;	// 0x2d0acab9
- (void)_setUnprocessedDeletion__:(BOOL)_;	// 0x2d0acbe5
- (void)_setUnprocessedInsertion__:(BOOL)_;	// 0x2d0acc21
- (void)_setUnprocessedUpdate__:(BOOL)_;	// 0x2d0acc5d
- (void)_setVersionReference__:(unsigned)_;	// 0x2d0acdb5
- (unsigned)_stateFlags;	// 0x2d0acc85
- (id)_substituteEntityAndProperty:(id)property inString:(id)string;	// 0x2d0b1021
- (id)_transientProperties__;	// 0x2d0ae475
- (BOOL)_tryRetain;	// 0x2d0a8f21
- (void)_updateFromRefreshSnapshot:(id)refreshSnapshot includingTransients:(BOOL)transients;	// 0x2d0b2c3d
- (void)_updateFromSnapshot:(id)snapshot;	// 0x2d0b283d
- (void)_updateFromUndoSnapshot:(id)undoSnapshot;	// 0x2d0b3729
- (void)_updateToManyRelationship:(id)manyRelationship from:(id)from to:(id)to with:(id)with;	// 0x2d0b2201
- (BOOL)_validateForSave:(id *)save;	// 0x2d0b1409
- (BOOL)_validatePropertiesWithError:(id *)error;	// 0x2d0b129d
- (BOOL)_validateValue:(id *)value forProperty:(id)property andKey:(id)key withIndex:(unsigned)index error:(id *)error;	// 0x2d0b1481
- (unsigned)_versionReference__;	// 0x2d0acda5
- (void)awakeFromFetch;	// 0x2d0aa809
- (void)awakeFromInsert;	// 0x2d0aa80d
- (void)awakeFromSnapshotEvents:(unsigned)snapshotEvents;	// 0x2d0aa811
- (id)changedValues;	// 0x2d0abd5d
- (id)changedValuesForCurrentEvent;	// 0x2d0ac38d
- (id)committedValuesForKeys:(id)keys;	// 0x2d0ab8ed
- (void)dealloc;	// 0x2d0a9101
- (id)description;	// 0x2d0a975d
- (id)dictionaryWithValuesForKeys:(id)keys;	// 0x2d0ab611
- (void)didAccessValueForKey:(id)key;	// 0x2d0a9f99
- (void)didChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;	// 0x2d0aa54d
- (void)didChangeValueForKey:(id)key;	// 0x2d0aa2d1
- (void)didChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;	// 0x2d0aa795
- (void)didFireFault;	// 0x2d0ac739
- (void)didRefresh:(BOOL)refresh;	// 0x2d0ac741
- (void)didSave;	// 0x2d0aa81d
- (void)didTurnIntoFault;	// 0x2d0aa825
- (void)diffOrderedSets:(id)sets :(id)arg2 :(id *)arg3 :(id *)arg4 :(id *)arg5 :(id *)arg6 :(id *)arg7;	// 0x2d0b1b51
- (id)entity;	// 0x2d0a9b71
- (unsigned)faultingState;	// 0x2d0ac379
- (void)finalize;	// 0x2d0a9099
- (BOOL)hasChanges;	// 0x2d0ac71d
- (BOOL)hasFaultForRelationshipNamed:(id)relationshipNamed;	// 0x2d0a9c3d
- (BOOL)hasPersistentChangedValues;	// 0x2d0ac745
- (unsigned)hash;	// 0x2d0a8d15
- (BOOL)implementsSelector:(SEL)selector;	// 0x2d0b3e4d
- (BOOL)isDeleted;	// 0x2d0a9be9
- (BOOL)isEqual:(id)equal;	// 0x2d0a8d7d
- (BOOL)isFault;	// 0x2d0a9c29
- (BOOL)isInserted;	// 0x2d0a9b91
- (BOOL)isUpdated;	// 0x2d0a9ba9
- (id)managedObjectContext;	// 0x2d0a9b45
- (/*function-pointer*/ void *)methodForSelector:(SEL)selector;	// 0x2d0b3cb5
- (id)methodSignatureForSelector:(SEL)selector;	// 0x2d0b3d11
- (id)mutableArrayValueForKey:(id)key;	// 0x2d0aac59
- (id)mutableOrderedSetValueForKey:(id)key;	// 0x2d0aaed5
- (id)mutableSetValueForKey:(id)key;	// 0x2d0aad69
- (id)objectID;	// 0x2d0a9b81
// converted property getter: - (id)observationInfo;	// 0x2d0a9ecd
- (void)prepareForDeletion;	// 0x2d0aa815
- (id)primitiveValueForKey:(id)key;	// 0x2d0ab14d
- (oneway void)release;	// 0x2d0a8dd9
- (BOOL)respondsToSelector:(SEL)selector;	// 0x2d0b3c59
- (id)retain;	// 0x2d0a8d89
- (unsigned)retainCount;	// 0x2d0a8f0d
- (void)setNilValueForKey:(id)key;	// 0x2d0ac2a9
// converted property setter: - (void)setObservationInfo:(id)info;	// 0x2d0a9ebd
- (void)setPrimitiveValue:(id)value forKey:(id)key;	// 0x2d0ab241
- (void)setValue:(id)value forKey:(id)key;	// 0x2d0ab0c9
- (void)setValue:(id)value forUndefinedKey:(id)undefinedKey;	// 0x2d0ac161
- (void)setValuesForKeysWithDictionary:(id)dictionary;	// 0x2d0ab339
- (BOOL)validateForDelete:(id *)aDelete;	// 0x2d0aa8a1
- (BOOL)validateForInsert:(id *)insert;	// 0x2d0aabc9
- (BOOL)validateForUpdate:(id *)update;	// 0x2d0aac11
- (BOOL)validateValue:(id *)value forKey:(id)key error:(id *)error;	// 0x2d0aa829
- (id)valueForKey:(id)key;	// 0x2d0ab051
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x2d0ac019
- (BOOL)wasForgotten;	// 0x2d0ac9c5
- (void)willAccessValueForKey:(id)key;	// 0x2d0a9edd
- (void)willChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;	// 0x2d0aa475
- (void)willChangeValueForKey:(id)key;	// 0x2d0aa145
- (void)willChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;	// 0x2d0aa6c5
- (void)willFireFault;	// 0x2d0ac735
- (void)willRefresh:(BOOL)refresh;	// 0x2d0ac73d
- (void)willSave;	// 0x2d0aa819
- (void)willTurnIntoFault;	// 0x2d0aa821
@end

