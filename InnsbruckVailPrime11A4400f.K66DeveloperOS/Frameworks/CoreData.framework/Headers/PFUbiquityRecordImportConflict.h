/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import </libobjc.A.h>

@class NSMutableDictionary, NSString, NSArray, NSManagedObject, NSDictionary, NSNumber, NSDate, PFUbiquityKnowledgeVector, PFUbiquityImportContext;

@interface PFUbiquityRecordImportConflict : NSObject {
	NSString *_conflictingObjectGlobalIDStr;	// 4 = 0x4
	NSManagedObject *_sourceObject;	// 8 = 0x8
	NSDictionary *_conflictingLogContent;	// 12 = 0xc
	PFUbiquityKnowledgeVector *_conflictingLogKnowledgeVector;	// 16 = 0x10
	PFUbiquityKnowledgeVector *_currentKnowledgeVector;	// 20 = 0x14
	int _conflictingLogTransactionType;	// 24 = 0x18
	NSDate *_conflictLogDate;	// 28 = 0x1c
	NSNumber *_conflictingLogTransactionNumber;	// 32 = 0x20
	NSArray *_transactionHistory;	// 36 = 0x24
	NSDictionary *_globalIDIndexToLocalIDURIMap;	// 40 = 0x28
	PFUbiquityImportContext *_importContext;	// 44 = 0x2c
	NSMutableDictionary *_relationshipsToObjectIDsToCheck;	// 48 = 0x30
}
@property(retain, nonatomic) NSDate *conflictLogDate;	// G=0x2d17d089; S=0x2d17d099; @synthesize=_conflictLogDate
@property(retain, nonatomic) NSDictionary *conflictingLogContent;	// G=0x2d17d049; S=0x2d17d059; @synthesize=_conflictingLogContent
@property(retain, nonatomic) PFUbiquityKnowledgeVector *conflictingLogKnowledgeVector;	// G=0x2d17d109; S=0x2d17d119; @synthesize=_conflictingLogKnowledgeVector
@property(retain, nonatomic) NSNumber *conflictingLogTransactionNumber;	// G=0x2d17d129; S=0x2d17d139; @synthesize=_conflictingLogTransactionNumber
@property(assign, nonatomic) int conflictingLogTransactionType;	// G=0x2d17d069; S=0x2d17d079; @synthesize=_conflictingLogTransactionType
@property(retain, nonatomic) NSString *conflictingObjectGlobalIDStr;	// G=0x2d17d009; S=0x2d17d019; @synthesize=_conflictingObjectGlobalIDStr
@property(retain, nonatomic) PFUbiquityKnowledgeVector *currentKnowledgeVector;	// G=0x2d17d149; S=0x2d17d159; @synthesize=_currentKnowledgeVector
@property(retain, nonatomic) NSDictionary *globalIDIndexToLocalIDURIMap;	// G=0x2d17d0c9; S=0x2d17d0d9; @synthesize=_globalIDIndexToLocalIDURIMap
@property(retain, nonatomic) PFUbiquityImportContext *importContext;	// G=0x2d17d0e9; S=0x2d17d0f9; @synthesize=_importContext
@property(readonly, assign, nonatomic) NSDictionary *relationshipToObjectIDsToCheck;	// G=0x2d17d169; @synthesize=_relationshipsToObjectIDsToCheck
@property(retain, nonatomic) NSManagedObject *sourceObject;	// G=0x2d17d029; S=0x2d17d039; @synthesize=_sourceObject
@property(retain, nonatomic) NSArray *transactionHistory;	// G=0x2d17d0a9; S=0x2d17d0b9; @synthesize=_transactionHistory
+ (id)createSnapshotFromManagedObject:(id)managedObject withSourceObject:(id)sourceObject;	// 0x2d17bce5
+ (id)createTransactionLogForTransactionEntry:(id)transactionEntry withImportContext:(id)importContext error:(id *)error;	// 0x2d17cc6d
+ (id)electAncestorKnowledgeVectorForKnowledgeVector:(id)knowledgeVector withExportingPeerID:(id)exportingPeerID fromPeerSnapshotCollection:(id)peerSnapshotCollection;	// 0x2d17b60d
+ (void)initialize;	// 0x2d1794b5
+ (int)resolvedTypeForConflictingLogType:(int)conflictingLogType andLatestTransactionEntry:(id)entry skipObject:(BOOL *)object;	// 0x2d17b999
- (id)init;	// 0x2d179535
- (id)_newNormalizedSnapshot:(id)snapshot forObject:(id)object;	// 0x2d179751
- (void)addObjectID:(id)anId forRelationship:(id)relationship;	// 0x2d179ab1
- (void)addObjectIDsForDiff:(id)diff forRelationship:(id)relationship;	// 0x2d17991d
// declared property getter: - (id)conflictLogDate;	// 0x2d17d089
// declared property getter: - (id)conflictingLogContent;	// 0x2d17d049
// declared property getter: - (id)conflictingLogKnowledgeVector;	// 0x2d17d109
// declared property getter: - (id)conflictingLogTransactionNumber;	// 0x2d17d129
// declared property getter: - (int)conflictingLogTransactionType;	// 0x2d17d069
// declared property getter: - (id)conflictingObjectGlobalIDStr;	// 0x2d17d009
- (id)createSetOfManagedObjectIDsForGlobalIDsInRelationship:(id)relationship withValue:(id)value withGlobalIDToLocalIDURIMap:(id)localIDURIMap andTransactionLog:(id)log;	// 0x2d17c941
- (id)createSnapshotDictionaryForObjectWithEntry:(id)entry inTransactionLog:(id)transactionLog withError:(id *)error;	// 0x2d17c259
- (id)createSnapshotDictionaryFromLogEntry:(id)logEntry withError:(id *)error;	// 0x2d17c1a1
- (id)createSnapshotFromBaselineForEntry:(id)entry error:(id *)error;	// 0x2d17c3c5
- (id)createSnapshotFromLogContent:(id)logContent withTransactionLog:(id)transactionLog;	// 0x2d17c645
// declared property getter: - (id)currentKnowledgeVector;	// 0x2d17d149
- (void)dealloc;	// 0x2d179639
- (id)description;	// 0x2d17cef5
// declared property getter: - (id)globalIDIndexToLocalIDURIMap;	// 0x2d17d0c9
// declared property getter: - (id)importContext;	// 0x2d17d0e9
// declared property getter: - (id)relationshipToObjectIDsToCheck;	// 0x2d17d169
- (BOOL)resolveConflict:(id *)conflict;	// 0x2d179f59
- (BOOL)resolveMergeConflictForLogContent:(id)logContent previousSnapshot:(id)snapshot andAncestorSnapshot:(id)snapshot3 withOldVersion:(unsigned)oldVersion andNewVersion:(unsigned)version error:(id *)error;	// 0x2d179b79
// declared property setter: - (void)setConflictLogDate:(id)date;	// 0x2d17d099
// declared property setter: - (void)setConflictingLogContent:(id)content;	// 0x2d17d059
// declared property setter: - (void)setConflictingLogKnowledgeVector:(id)vector;	// 0x2d17d119
// declared property setter: - (void)setConflictingLogTransactionNumber:(id)number;	// 0x2d17d139
// declared property setter: - (void)setConflictingLogTransactionType:(int)type;	// 0x2d17d079
// declared property setter: - (void)setConflictingObjectGlobalIDStr:(id)str;	// 0x2d17d019
// declared property setter: - (void)setCurrentKnowledgeVector:(id)vector;	// 0x2d17d159
// declared property setter: - (void)setGlobalIDIndexToLocalIDURIMap:(id)localIDURIMap;	// 0x2d17d0d9
// declared property setter: - (void)setImportContext:(id)context;	// 0x2d17d0f9
// declared property setter: - (void)setSourceObject:(id)object;	// 0x2d17d039
// declared property setter: - (void)setTransactionHistory:(id)history;	// 0x2d17d0b9
// declared property getter: - (id)sourceObject;	// 0x2d17d029
// declared property getter: - (id)transactionHistory;	// 0x2d17d0a9
@end

