/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import </libobjc.A.h>


@interface NSSQLIntermediate : NSObject {
	NSSQLIntermediate *_scope;	// 4 = 0x4
}
@property(readonly, retain) NSSQLIntermediate *scope;	// G=0x2d070295; converted property
+ (BOOL)expressionIsBasicKeypath:(id)keypath;	// 0x2d110af1
+ (BOOL)isSimpleKeypath:(id)keypath;	// 0x2d067b61
- (id)initWithScope:(id)scope;	// 0x2d0656bd
- (BOOL)_canDoASubselectForExpression:(id)expression inContext:(id)context;	// 0x2d1116b1
- (BOOL)_functionExpressionIsSubqueryFollowedByKeypath:(id)keypath;	// 0x2d1110bd
- (id)_generateSQLForConstantCollection:(id)constantCollection inContext:(id)context;	// 0x2d111535
- (id)_generateSQLForConstantValue:(id)constantValue inContext:(id)context;	// 0x2d06845d
- (id)_generateSQLForExpression:(id)expression allowToMany:(BOOL)many inContext:(id)context;	// 0x2d0670f5
- (id)_generateSQLForExpressionCollection:(id)expressionCollection allowToMany:(BOOL)many inContext:(id)context;	// 0x2d111339
- (id)_generateSQLForFetchExpression:(id)fetchExpression allowToMany:(BOOL)many inContext:(id)context;	// 0x2d1117c9
- (id)_generateSQLForFunctionExpression:(id)functionExpression allowToMany:(BOOL)many inContext:(id)context;	// 0x2d11116d
- (id)_generateSQLForKeyPathExpression:(id)keyPathExpression allowToMany:(BOOL)many inContext:(id)context;	// 0x2d0672e9
- (id)_generateSQLForSubqueryExpression:(id)subqueryExpression trailingKeypath:(id)keypath inContext:(id)context;	// 0x2d111ca9
- (id)_generateSQLForTernaryExpression:(id)ternaryExpression allowToMany:(BOOL)many inContext:(id)context;	// 0x2d111dcd
- (id)_generateSQLForVariableExpression:(id)variableExpression inContext:(id)context;	// 0x2d110c85
- (id)_lastScopedItem;	// 0x2d110ccd
- (void)_promoteJoinsForAggregateExpression:(id)aggregateExpression;	// 0x2d110f29
- (void)_promoteJoinsForFunctionExpression:(id)functionExpression;	// 0x2d110d75
- (void)_promoteJoinsForKeypathExpression:(id)keypathExpression;	// 0x2d110cf5
- (void)_promoteJoinsForSubqueryScopedKeypath:(id)subqueryScopedKeypath;	// 0x2d110d51
- (void)_promoteJoinsForSubqueryScopedKeypaths;	// 0x2d068ffd
- (void)_promoteJoinsForTernaryExpression:(id)ternaryExpression;	// 0x2d110ff5
- (BOOL)expressionIsBasicKeypath:(id)keypath;	// 0x2d110b91
- (id)fetchIntermediate;	// 0x2d110ad1
- (id)fetchIntermediateForKeypathExpression:(id)keypathExpression;	// 0x2d067fa9
- (id)generateSQLStringInContext:(id)context;	// 0x2d110a45
- (id)governingAlias;	// 0x2d110c65
- (id)governingAliasForKeypathExpression:(id)keypathExpression;	// 0x2d067ba5
- (id)governingEntityForKeypathExpression:(id)keypathExpression;	// 0x2d067ab5
- (BOOL)isFunctionScoped;	// 0x2d110a79
- (BOOL)isHavingScoped;	// 0x2d110aa5
- (BOOL)isOrScoped;	// 0x2d068421
- (BOOL)isSelectTargetScoped;	// 0x2d0676a9
- (BOOL)isSimpleKeypath:(id)keypath;	// 0x2d067b35
- (BOOL)isVariableBasedKeypathScopedBySubquery:(id)subquery;	// 0x2d110bbd
- (BOOL)keypathExpressionIsSafeLHSForIn:(id)anIn;	// 0x2d110ca5
- (void)promoteJoinsInKeypathsForExpression:(id)expression;	// 0x2d111045
// converted property getter: - (id)scope;	// 0x2d070295
@end

