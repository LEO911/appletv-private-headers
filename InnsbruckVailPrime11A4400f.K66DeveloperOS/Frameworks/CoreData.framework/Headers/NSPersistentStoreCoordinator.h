/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import "NSLocking.h"
#import </libobjc.A.h>

@class NSArray, NSManagedObjectModel, NSMutableArray;

@interface NSPersistentStoreCoordinator : NSObject <NSLocking> {
	persistentStoreCoordinatorFlags _flags;	// 4 = 0x4
	long _miniLock;	// 8 = 0x8
	NSMutableArray *_extendedStoreURLs;	// 12 = 0xc
	id _externalRecordsHelper;	// 16 = 0x10
	NSManagedObjectModel *_managedObjectModel;	// 20 = 0x14
	id _coreLock;	// 24 = 0x18
	NSArray *_persistentStores;	// 28 = 0x1c
}
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x2d04f291; converted property
@property(readonly, retain) NSArray *persistentStores;	// G=0x2d0e36c1; converted property
+ (void)__Multithreading_Violation_AllThatIsLeftToUsIsHonor__;	// 0x2d0e1a19
+ (Class)_classForPersistentStoreAtURL:(id)url;	// 0x2d0e1d7d
+ (void)_registerCoreDataStoreClass:(Class)aClass forStoreType:(id)storeType;	// 0x2d047889
+ (void)_registerDefaultStoreClassesAndTypes;	// 0x2d047471
+ (Class)_storeClassForStoreType:(id)storeType;	// 0x2d0504c9
+ (id)_storeTypeForStore:(id)store;	// 0x2d0e79a1
+ (BOOL)accessInstanceVariablesDirectly;	// 0x2d0e1a15
+ (void)initialize;	// 0x2d046f65
+ (id)metadataForPersistentStoreOfType:(id)type URL:(id)url error:(id *)error;	// 0x2d0e22ad
+ (id)metadataForPersistentStoreOfType:(id)type URL:(id)url options:(id)options error:(id *)error;	// 0x2d0e92d1
+ (void)registerStoreClass:(Class)aClass forStoreType:(id)storeType;	// 0x2d0e1a1d
+ (id)registeredStoreTypes;	// 0x2d0e1c5d
+ (BOOL)removeUbiquitousContentAndPersistentStoreAtURL:(id)url options:(id)options error:(id *)error;	// 0x2d0e4a0d
+ (BOOL)setMetadata:(id)metadata forPersistentStoreOfType:(id)type URL:(id)url error:(id *)error;	// 0x2d0e1e7d
+ (BOOL)setMetadata:(id)metadata forPersistentStoreOfType:(id)type URL:(id)url options:(id)options error:(id *)error;	// 0x2d0e92f5
+ (id)ubiquityStoreURLForStoreURL:(id)storeURL ubiquityIdentityToken:(id)token localPeerID:(id)anId ubiquityName:(id)name;	// 0x2d0e9059
+ (id)ubiquityStoreURLForStoreURL:(id)storeURL ubiquityIdentityToken:(id)token ubiquityName:(id)name;	// 0x2d0e901d
- (id)initWithManagedObjectModel:(id)managedObjectModel;	// 0x2d04d381
- (id)URLForPersistentStore:(id)persistentStore;	// 0x2d0e3bed
- (void)_addPersistentStore:(id)store identifier:(id)identifier;	// 0x2d05debd
- (void)_assignObject:(id)object toPersistentStore:(id)persistentStore;	// 0x2d0e8739
- (void)_assignObject:(id)object toPersistentStore:(id)persistentStore forConfiguration:(id)configuration;	// 0x2d0e879d
- (void)_assignObjects:(id)objects toStore:(id)store;	// 0x2d0e5471
- (BOOL)_canSaveGraphRootedAtObject:(id)object intoStore:(id)store withPreviouslyChecked:(CFSetRef)previouslyChecked withAcceptableEntities:(CFSetRef)acceptableEntities;	// 0x2d0e5bdd
- (BOOL)_checkForPostLionWriter:(id)postLionWriter;	// 0x2d0e8f9d
- (BOOL)_checkForSkewedEntityHashes:(id)skewedEntityHashes metadata:(id)metadata;	// 0x2d0e3719
- (id)_checkRequestForStore:(id)store withContext:(id)context originalRequest:(id)request andOptimisticLocking:(id)locking;	// 0x2d0e6725
- (id)_conflictsWithRowCacheForObject:(id)object withContext:(id)context andStore:(id)store;	// 0x2d0e6621
- (void)_copyMetadataFromStore:(id)store toStore:(id)store2 migrationManager:(id)manager;	// 0x2d0e8dd5
- (BOOL)_destroyPersistentStoreAtURL:(id)url withType:(id)type error:(id *)error;	// 0x2d0ea285
- (BOOL)_destroyPersistentStoreAtURL:(id)url withType:(id)type options:(id)options error:(id *)error;	// 0x2d0e9ecd
- (void)_doPreSaveAssignmentsForObjects:(id)objects;	// 0x2d0e5f91
- (id)_fetchAllInstancesFromStore:(id)store intoContext:(id)context underlyingException:(id *)exception;	// 0x2d0e7f71
- (void)_informAffectedStoresOfInterestByChildContextInObjectsWithObjectIDs:(id)objectIDs withSelector:(SEL)selector;	// 0x2d0e7d01
- (BOOL)_isRegisteredWithUbiquity;	// 0x2d0e9009
- (id)_newConflictRecordForObject:(id)object andOriginalRow:(id)row withContext:(id)context;	// 0x2d0e6575
- (id)_newObjectGraphStyleRecordForRow:(id)row andObject:(id)object withContext:(id)context;	// 0x2d0e62bd
- (id)_persistentStoreForIdentifier:(id)identifier;	// 0x2d05e10d
- (void)_postStoresChangedNotificationsForStores:(id)stores changeKey:(id)key options:(id)options;	// 0x2d05e409
- (id)_realStoreTypeForStoreWithType:(id)type URL:(id)url error:(id *)error;	// 0x2d0e8889
- (BOOL)_removePersistentStore:(id)store;	// 0x2d0e9319
- (BOOL)_replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url3 sourceOptions:(id)options4 storeType:(id)type error:(id *)error;	// 0x2d0e977d
- (id)_retainedAllMigratedObjectsInStore:(id)store toStore:(id)store2;	// 0x2d0e8951
- (id)_saveRequestForStore:(id)store withContext:(id)context originalRequest:(id)request andOptimisticLocking:(id)locking;	// 0x2d0e7089
- (void)_setIsRegisteredWithUbiquity:(BOOL)ubiquity;	// 0x2d0e8fe9
- (id)addPersistentStoreWithType:(id)type configuration:(id)configuration URL:(id)url options:(id)options error:(id *)error;	// 0x2d04d871
- (void)dealloc;	// 0x2d0e2fa9
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;	// 0x2d060c8d
- (void)finalize;	// 0x2d0e2c01
- (id *)knownKeyValuesForObjectID:(id)objectID withContext:(id)context;	// 0x2d0e53ad
- (void)lock;	// 0x2d050469
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;	// 0x2d0e5449
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;	// 0x2d0e545d
- (id)managedObjectIDForURIRepresentation:(id)urirepresentation;	// 0x2d0e4955
- (id)managedObjectIDFromUTF8String:(const char *)utf8String length:(unsigned)length;	// 0x2d0e942d
// converted property getter: - (id)managedObjectModel;	// 0x2d04f291
- (id)metadataForPersistentStore:(id)persistentStore;	// 0x2d0e2ae5
- (id)migratePersistentStore:(id)store toURL:(id)url options:(id)options withType:(id)type error:(id *)error;	// 0x2d0e3da9
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x2d0e5415
- (id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x2d0e53e1
- (BOOL)obtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x2d0e5571
- (id)persistentStoreCoordinator;	// 0x2d0e53a9
- (id)persistentStoreForIdentifier:(id)identifier;	// 0x2d0ea2b5
- (id)persistentStoreForURL:(id)url;	// 0x2d05dfe5
// converted property getter: - (id)persistentStores;	// 0x2d0e36c1
- (BOOL)removePersistentStore:(id)store error:(id *)error;	// 0x2d0e386d
- (void)setMetadata:(id)metadata forPersistentStore:(id)persistentStore;	// 0x2d0e2915
- (BOOL)setURL:(id)url forPersistentStore:(id)persistentStore;	// 0x2d0e3c75
- (BOOL)tryLock;	// 0x2d0e369d
- (void)unlock;	// 0x2d05e0b5
@end

