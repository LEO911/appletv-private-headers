/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import "NSCopying.h"
#import </libobjc.A.h>

@class NSMutableSet, NSString, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface EKCalendarFilter : NSObject <NSCopying> {
	opaque_pthread_mutex_t _lock;	// 4 = 0x4
	NSMutableSet *_calendarUIDs;	// 48 = 0x30
	CalDatabase *_database;	// 52 = 0x34
	NSMutableDictionary *_queryCache;	// 56 = 0x38
	NSString *_searchTerm;	// 60 = 0x3c
	int _entityType;	// 64 = 0x40
}
@property(copy, nonatomic) NSString *searchTerm;	// G=0x2dac736d; S=0x2dac7381; @synthesize=_searchTerm
+ (void)_addCalendarUIDsFromPrefs:(id)prefs toSet:(id)set database:(CalDatabase *)database;	// 0x2dac66b1
+ (void)_addCalendarWithUID:(id)uid toSet:(id)set database:(CalDatabase *)database;	// 0x2dac6661
+ (void)_addCalendarsForStoreWithUID:(id)uid toSet:(id)set database:(CalDatabase *)database;	// 0x2dac67b1
- (id)initFilteringAllWithDatabase:(CalDatabase *)database;	// 0x2dac56a5
- (id)initWithDatabase:(CalDatabase *)database;	// 0x2dac5605
- (id)initWithDatabase:(CalDatabase *)database entityType:(int)type;	// 0x2dac5625
- (id)initWithDatabase:(CalDatabase *)database entityType:(int)type calendarUIDs:(id)uids;	// 0x2dac5869
- (id)initWithDatabase:(CalDatabase *)database entityType:(int)type showingCalendarsWithUIDs:(id)uids;	// 0x2dac57b5
- (id)initWithDatabase:(CalDatabase *)database filteringCalendars:(id)calendars;	// 0x2dac580d
- (id)initWithDatabase:(CalDatabase *)database showingCalendars:(id)calendars;	// 0x2dac56fd
- (id)initWithDatabase:(CalDatabase *)database showingCalendarsWithUIDs:(id)uids;	// 0x2dac5759
- (id)initWithPersistentIdentifier:(id)persistentIdentifier database:(CalDatabase *)database;	// 0x2dac5649
- (id)_UIDAntiSetWithCalendars:(id)calendars;	// 0x2dac5cbd
- (id)_UIDSetWithCalendars:(id)calendars;	// 0x2dac5b99
- (id)_addFilterToQuery:(id)query creator:(/*function-pointer*/ void *)creator userInfo:(void *)info;	// 0x2dac6db9
- (id)_calendarUIDsFromPersistentIdentifier:(id)persistentIdentifier;	// 0x2dac687d
- (void)_databaseChanged;	// 0x2dac5a55
- (id)_generateUIDSetToFilterAllCalendars;	// 0x2dac5f39
- (id)_generateUIDSetToFilterCalendars:(id)filterCalendars;	// 0x2dac5e71
- (id)_generateUIDSetToShowCalendarUIDs:(id)showCalendarUIDs;	// 0x2dac5eb5
- (id)_generateUIDSetToShowCalendars:(id)showCalendars;	// 0x2dac5de1
- (BOOL)_isFilteringAllWhileLocked;	// 0x2dac5acd
- (id)calendarIDClauseForQueryWithVariableName:(id)variableName;	// 0x2dac70e5
- (id)copyWithZone:(NSZone *)zone;	// 0x2dac6419
- (void)dealloc;	// 0x2dac599d
- (id)filterQueryForKey:(id)key prefix:(id)prefix whereClause:(id)clause creator:(/*function-pointer*/ void *)creator userInfo:(void *)info;	// 0x2dac6ecd
- (id)filterQueryForQueryString:(id)queryString creator:(/*function-pointer*/ void *)creator userInfo:(void *)info;	// 0x2dac6e55
- (id)filteredCalendars;	// 0x2dac5fa5
- (BOOL)isCalendarUIDVisible:(id)visible;	// 0x2dac63a5
- (BOOL)isEqual:(id)equal;	// 0x2dac6485
- (BOOL)isFilteringAll;	// 0x2dac5b5d
- (BOOL)isShowingAll;	// 0x2dac5a9d
- (id)persistentIdentifier;	// 0x2dac6571
- (void)removeCalendarWithUID:(id)uid;	// 0x2dac63f9
// declared property getter: - (id)searchTerm;	// 0x2dac736d
// declared property setter: - (void)setSearchTerm:(id)term;	// 0x2dac7381
- (void)validate;	// 0x2dac6c41
- (int)visibleCalendarCountWithOptions:(int)options;	// 0x2dac625d
- (id)visibleCalendarsWithOptions:(int)options;	// 0x2dac60dd
@end

