/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIView.h"
#import "UIKit-Structs.h"
#import "_UISwitchInternalViewProtocol.h"

@class UIImageView, UIColor, UIImage;

__attribute__((visibility("hidden")))
@interface _UISwitchInternalViewNeueStyle1 : UIView <_UISwitchInternalViewProtocol> {
	UIView *_switchWellView;	// 96 = 0x60
	UIView *_leftSwitchWellView;	// 100 = 0x64
	UIView *_switchWellContainerView;	// 104 = 0x68
	UIView *_leftSwitchWellContainerView;	// 108 = 0x6c
	UIImageView *_knobView;	// 112 = 0x70
	UIColor *_onTintColor;	// 116 = 0x74
	UIColor *_tintColor;	// 120 = 0x78
	BOOL _on;	// 124 = 0x7c
	BOOL _pressed;	// 125 = 0x7d
	BOOL _useAlternateColor;	// 126 = 0x7e
	BOOL _pressedIsHandledByGestureRecognizer;	// 127 = 0x7f
	UIColor *_thumbTintColor;	// 128 = 0x80
	UIImage *_onImage;	// 132 = 0x84
	UIImage *_offImage;	// 136 = 0x88
}
@property(retain, nonatomic) UIImage *offImage;	// G=0x2f6a8dd9; S=0x2f6a77e1; @synthesize=_offImage
@property(assign, nonatomic) BOOL on;	// G=0x2f6a8d89; S=0x2f6a8d99; @synthesize=_on
@property(retain, nonatomic) UIImage *onImage;	// G=0x2f6a8dc9; S=0x2f6a7789; @synthesize=_onImage
@property(retain, nonatomic) UIColor *onTintColor;	// G=0x2f6a8d59; S=0x2f6a7651; @synthesize=_onTintColor
@property(assign, nonatomic) BOOL pressedIsHandledByGestureRecognizer;	// G=0x2f6a8de9; S=0x2f6a8df9; @synthesize=_pressedIsHandledByGestureRecognizer
@property(retain, nonatomic) UIColor *thumbTintColor;	// G=0x2f6a8d79; S=0x2f6a7721; @synthesize=_thumbTintColor
@property(retain, nonatomic) UIColor *tintColor;	// G=0x2f6a8d69; S=0x2f6a76b9; @synthesize=_tintColor
@property(assign, nonatomic) BOOL useAlternateColor;	// G=0x2f6a8da9; S=0x2f6a8db9; @synthesize=_useAlternateColor
- (id)initWithFrame:(CGRect)frame;	// 0x2f6a6f21
- (void)_cleanUpAfterAnimating;	// 0x2f6a8c99
- (id)_effectiveOffTextColor;	// 0x2f6a8bfd
- (id)_effectiveOnTintColor;	// 0x2f6a8b91
- (id)_effectiveThumbImage;	// 0x2f6a8c45
- (id)_effectiveTintColor;	// 0x2f6a8bc1
- (CGRect)_frameForLeftAlignmentOfView:(id)view;	// 0x2f6a7591
- (void)_invalidateControl;	// 0x2f6a7085
- (void)_invalidateKnob;	// 0x2f6a74c1
- (void)_invalidateWell;	// 0x2f6a70b9
- (CGRect)_knobBoundsPressed:(BOOL)pressed;	// 0x2f6a81f5
- (CGPoint)_knobPositionOn:(BOOL)on pressed:(BOOL)pressed;	// 0x2f6a8235
- (id)_labelOpacityAnimation;	// 0x2f6a89c1
- (CGRect)_leftSwitchWellContainerBoundsOn:(BOOL)on pressed:(BOOL)pressed;	// 0x2f6a84e1
- (CGPoint)_leftSwitchWellContainerPositionOn:(BOOL)on pressed:(BOOL)pressed;	// 0x2f6a8559
- (void)_prepareForInteraction;	// 0x2f6a8c9d
- (void)_setOn:(BOOL)on animated:(BOOL)animated force:(BOOL)force;	// 0x2f6a8c89
- (void)_setPressed:(BOOL)pressed;	// 0x2f6a8c91
- (void)_setPressed:(BOOL)pressed animated:(BOOL)animated;	// 0x2f6a8c8d
- (void)_setPressed:(BOOL)pressed on:(BOOL)on animated:(BOOL)animated shouldAnimateLabels:(BOOL)labels completion:(id)completion;	// 0x2f6a8ca1
- (void)_setProgress:(float)progress;	// 0x2f6a8c85
- (void)_setProgress:(float)progress animated:(BOOL)animated withDuration:(float)duration force:(BOOL)force sendAction:(BOOL)action;	// 0x2f6a8c81
- (id)_switchSpringAnimationWithKeyPath:(id)keyPath fromValue:(id)value toValue:(id)value3 pressed:(BOOL)pressed;	// 0x2f6a8889
- (id)_switchTrackAnimationWithFromValue:(id)value toValue:(id)value2 on:(BOOL)on;	// 0x2f6a8639
- (id)_switchTrackColorAnimationWithFromValue:(id)value toValue:(id)value2;	// 0x2f6a87a1
- (CGRect)_switchWellContainerBoundsOn:(BOOL)on pressed:(BOOL)pressed;	// 0x2f6a8291
- (CGPoint)_switchWellContainerPositionOn:(BOOL)on pressed:(BOOL)pressed;	// 0x2f6a8335
- (CGPoint)_switchWellPositionOn:(BOOL)on pressed:(BOOL)pressed;	// 0x2f6a8401
- (void)_transitionKnobToOn:(BOOL)on animated:(BOOL)animated;	// 0x2f6a7f09
- (void)_transitionKnobToPressed:(BOOL)pressed animated:(BOOL)animated;	// 0x2f6a7ed5
- (void)_transitionKnobToPressed:(BOOL)pressed on:(BOOL)on animated:(BOOL)animated;	// 0x2f6a7839
- (void)_transitionWellViewToOn:(BOOL)on animated:(BOOL)animated;	// 0x2f6a80bd
- (void)_transitionWellViewToPressed:(BOOL)pressed animated:(BOOL)animated;	// 0x2f6a7f39
- (float)_wellBorderWidthPressed:(BOOL)pressed on:(BOOL)on;	// 0x2f6a85d9
- (CGColorRef)_wellColorOn:(BOOL)on;	// 0x2f6a85f9
- (void)dealloc;	// 0x2f6a6f95
// declared property getter: - (id)offImage;	// 0x2f6a8dd9
// declared property getter: - (BOOL)on;	// 0x2f6a8d89
// declared property getter: - (id)onImage;	// 0x2f6a8dc9
// declared property getter: - (id)onTintColor;	// 0x2f6a8d59
// declared property getter: - (BOOL)pressedIsHandledByGestureRecognizer;	// 0x2f6a8de9
// declared property setter: - (void)setOffImage:(id)image;	// 0x2f6a77e1
// declared property setter: - (void)setOn:(BOOL)on;	// 0x2f6a8d99
// declared property setter: - (void)setOnImage:(id)image;	// 0x2f6a7789
// declared property setter: - (void)setOnTintColor:(id)color;	// 0x2f6a7651
// declared property setter: - (void)setPressedIsHandledByGestureRecognizer:(BOOL)recognizer;	// 0x2f6a8df9
- (void)setSendAction:(BOOL)action;	// 0x2f6a8c95
// declared property setter: - (void)setThumbTintColor:(id)color;	// 0x2f6a7721
// declared property setter: - (void)setTintColor:(id)color;	// 0x2f6a76b9
// declared property setter: - (void)setUseAlternateColor:(BOOL)color;	// 0x2f6a8db9
// declared property getter: - (id)thumbTintColor;	// 0x2f6a8d79
// declared property getter: - (id)tintColor;	// 0x2f6a8d69
// declared property getter: - (BOOL)useAlternateColor;	// 0x2f6a8da9
@end

