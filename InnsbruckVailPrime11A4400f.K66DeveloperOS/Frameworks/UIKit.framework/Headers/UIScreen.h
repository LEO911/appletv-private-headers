/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <ImageIO/NSObject.h>

@class UISoftwareDimmingWindow, NSArray, NSDictionary, UIScreenMode;

@interface UIScreen : NSObject {
	id _display;	// 4 = 0x4
	CGRect _bounds;	// 8 = 0x8
	float _scale;	// 24 = 0x18
	float _horizontalScale;	// 28 = 0x1c
	int _userInterfaceIdiom;	// 32 = 0x20
	NSDictionary *_capabilities;	// 36 = 0x24
	int _workspaceCapableScreenType;	// 40 = 0x28
	struct {
		unsigned bitsPerComponent : 4;
		unsigned initialized : 1;
		unsigned connected : 1;
		unsigned overscanCompensation : 2;
		unsigned hasShownWindows : 1;
		unsigned canAccessDisplay : 1;
		unsigned canAccessDisplayValid : 1;
	} _screenFlags;	// 44 = 0x2c
	BOOL _wantsSoftwareDimming;	// 46 = 0x2e
	UISoftwareDimmingWindow *_softwareDimmingWindow;	// 48 = 0x30
	int _lastNotifiedBacklightLevel;	// 52 = 0x34
}
@property(assign, nonatomic, setter=_setLastNotifiedBacklightLevel:) int _lastNotifiedBacklightLevel;	// G=0x2f68ed45; S=0x2f68ed55; @synthesize
@property(retain, nonatomic, setter=_setSoftwareDimmingWindow:) UISoftwareDimmingWindow *_softwareDimmingWindow;	// G=0x2f68ed25; S=0x2f68ed35; @synthesize
@property(readonly, assign, nonatomic) CGRect applicationFrame;	// G=0x2f42f5b1; 
@property(readonly, assign, nonatomic) NSArray *availableModes;	// G=0x2f533191; 
@property(assign) int bitsPerComponent;	// G=0x2f430275; S=0x2f68daf1; converted property
@property(readonly, assign, nonatomic) CGRect bounds;	// G=0x2f3e2705; @synthesize=_bounds
@property(assign, nonatomic) float brightness;	// G=0x2f68e8a9; S=0x2f68e6b5; 
@property(retain, nonatomic) UIScreenMode *currentMode;	// G=0x2f42b77d; S=0x2f68db0d; 
@property(readonly, assign, nonatomic) UIScreen *mirroredScreen;	// G=0x2f68da1d; 
@property(assign, nonatomic) int overscanCompensation;	// G=0x2f68db95; S=0x2f68dba9; 
@property(readonly, assign, nonatomic) UIScreenMode *preferredMode;	// G=0x2f68da85; 
@property(readonly, assign, nonatomic) float scale;	// G=0x2f3dfce1; @synthesize=_scale
@property(assign, nonatomic) BOOL wantsSoftwareDimming;	// G=0x2f68ed05; S=0x2f68ed15; @synthesize=_wantsSoftwareDimming
@property(assign, nonatomic, getter=_workspaceCapableScreenType, setter=_setWorkspaceCapableScreenType:) int workspaceCapableScreenType;	// G=0x2f68ece5; S=0x2f68ecf5; @synthesize=_workspaceCapableScreenType
+ (void)_prepareScreensForAppResume;	// 0x2f55d915
+ (id)_screenWithDisplayID:(id)displayID;	// 0x2f68ce09
+ (id)_screenWithDisplayName:(id)displayName;	// 0x2f68cd15
+ (id)_screenWithIntegerDisplayID:(unsigned)integerDisplayID;	// 0x2f68cef5
+ (BOOL)_shouldDisableJail;	// 0x2f68d6bd
+ (void)_videoOutSettingsChanged;	// 0x2f68c82d
+ (id)_workspaceCapableScreens;	// 0x2f68cc09
+ (CGPoint)convertPoint:(CGPoint)point fromView:(id)view;	// 0x2f68eb75
+ (CGPoint)convertPoint:(CGPoint)point toView:(id)view;	// 0x2f68eab9
+ (CGRect)convertRect:(CGRect)rect fromView:(id)view;	// 0x2f44edf9
+ (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x2f4500e1
+ (void)initialize;	// 0x2f42af4d
+ (id)mainScreen;	// 0x2f3dfcbd
+ (id)screens;	// 0x2f533049
+ (CGAffineTransform)transformForScreenOriginRotation:(float)screenOriginRotation;	// 0x2f68ca55
+ (CGAffineTransform)transformToRotateScreen:(float)rotateScreen;	// 0x2f68cb2d
- (id)initWithDisplay:(id)display;	// 0x2f42b1a9
- (void)_applicationDidBecomeActive:(id)_application;	// 0x2f68e2b5
- (CGRect)_applicationFrameForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f42f60d
- (void)_applicationWillResignActive:(id)_application;	// 0x2f68e2e1
- (BOOL)_areBoundsJailed;	// 0x2f68d7e9
- (void)_beginObservingBacklightLevelNotifications;	// 0x2f42bd1d
- (CGRect)_boundsInPixels;	// 0x2f68d8c9
- (id)_capabilities;	// 0x2f68e149
- (id)_capabilityForKey:(id)key;	// 0x2f68e181
- (void)_computeMetrics;	// 0x2f42b40d
- (void)_connectScreen;	// 0x2f68dd39
- (void)_disconnectScreen;	// 0x2f68dd79
- (id)_displayID;	// 0x2f68e271
- (void)_endObservingBacklightLevelNotifications;	// 0x2f68e601
- (BOOL)_hasStatusBar;	// 0x2f42f891
- (BOOL)_hasWindows;	// 0x2f68d5d1
- (float)_horizontalPixelScale;	// 0x2f4308a1
- (int)_imageOrientation;	// 0x2f68d925
- (unsigned)_integerDisplayID;	// 0x2f68dbe5
- (BOOL)_isExternal;	// 0x2f42bc9d
- (BOOL)_isMainScreen;	// 0x2f3eea91
- (BOOL)_isOverscanned;	// 0x2f42bc6d
- (BOOL)_isRotatable;	// 0x2f68d85d
- (BOOL)_isWorkspaceCapable;	// 0x2f68e30d
- (UIEdgeInsets)_jailedBoundsEdgeInsets;	// 0x2f68d761
// declared property getter: - (int)_lastNotifiedBacklightLevel;	// 0x2f68ed45
- (id)_lazySoftwareDimmingWindow;	// 0x2f68e381
- (id)_name;	// 0x2f68dc05
- (BOOL)_overscanAdjustmentNeedsUpdate;	// 0x2f42bbb1
- (float)_pointsPerInch;	// 0x2f46cd71
- (void)_postBrightnessDidChangeNotificationIfAppropriate;	// 0x2f68e49d
- (void)_prepareForWindow;	// 0x2f68dc39
- (CGRect)_realDisplayBounds;	// 0x2f68d879
- (double)_refreshRate;	// 0x2f68d9fd
- (void)_requestFocusIfNecessary;	// 0x2f68dcc5
- (float)_rotation;	// 0x2f430801
- (float)_scale;	// 0x2f42bde9
- (void)_setCapability:(id)capability forKey:(id)key;	// 0x2f68e1b5
// declared property setter: - (void)_setLastNotifiedBacklightLevel:(int)level;	// 0x2f68ed55
- (void)_setScale:(float)scale;	// 0x2f68dd29
// declared property setter: - (void)_setSoftwareDimmingWindow:(id)window;	// 0x2f68ed35
- (void)_setUserInterfaceIdiom:(int)idiom;	// 0x2f68de69
- (void)_setWantsFocus:(BOOL)focus;	// 0x2f68e291
// declared property setter: - (void)_setWorkspaceCapableScreenType:(int)type;	// 0x2f68ecf5
- (id)_snapshotExcludingWindows:(id)windows withRect:(CGRect)rect;	// 0x2f68ec31
// declared property getter: - (id)_softwareDimmingWindow;	// 0x2f68ed25
- (BOOL)_supportsBrightness;	// 0x2f68e675
- (void)_updateCapabilities;	// 0x2f68df35
- (void)_updateOverscanCompensationAllowingBackgroundUpdate:(BOOL)update;	// 0x2f42b91d
- (void)_updateUserInterfaceIdiom;	// 0x2f68dd91
- (void)_updateWorkspaceCapableScreenType;	// 0x2f68e325
- (int)_userInterfaceIdiom;	// 0x2f68de59
// declared property getter: - (int)_workspaceCapableScreenType;	// 0x2f68ece5
// declared property getter: - (CGRect)applicationFrame;	// 0x2f42f5b1
// declared property getter: - (id)availableModes;	// 0x2f533191
// converted property getter: - (int)bitsPerComponent;	// 0x2f430275
// declared property getter: - (CGRect)bounds;	// 0x2f3e2705
// declared property getter: - (float)brightness;	// 0x2f68e8a9
// declared property getter: - (id)currentMode;	// 0x2f42b77d
- (void)dealloc;	// 0x2f68cfc5
- (id)description;	// 0x2f68e985
- (id)displayLinkWithTarget:(id)target selector:(SEL)selector;	// 0x2f4fb89d
// declared property getter: - (id)mirroredScreen;	// 0x2f68da1d
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x2f68d0fd
// declared property getter: - (int)overscanCompensation;	// 0x2f68db95
// declared property getter: - (id)preferredMode;	// 0x2f68da85
- (float)rawBrightnessForBacklightLevel:(float)backlightLevel;	// 0x2f68e465
// declared property getter: - (float)scale;	// 0x2f3dfce1
- (int)screenType;	// 0x2f68db65
// converted property setter: - (void)setBitsPerComponent:(int)component;	// 0x2f68daf1
// declared property setter: - (void)setBrightness:(float)brightness;	// 0x2f68e6b5
// declared property setter: - (void)setCurrentMode:(id)mode;	// 0x2f68db0d
// declared property setter: - (void)setOverscanCompensation:(int)compensation;	// 0x2f68dba9
// declared property setter: - (void)setWantsSoftwareDimming:(BOOL)dimming;	// 0x2f68ed15
- (id)snapshot;	// 0x2f68ed85
- (id)snapshotView;	// 0x2f68ed65
// declared property getter: - (BOOL)wantsSoftwareDimming;	// 0x2f68ed05
@end

