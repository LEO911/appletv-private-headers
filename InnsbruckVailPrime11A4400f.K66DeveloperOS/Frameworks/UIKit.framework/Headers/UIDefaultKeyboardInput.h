/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UITextInputPrivate.h"
#import "UIView.h"

@class UITextInputTraits, UITextRange, NSDictionary, UITextPosition, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface UIDefaultKeyboardInput : UIView <UIKeyboardInput, UITextInputPrivate> {
	UITextInputTraits *m_traits;	// 96 = 0x60
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x2f661625; S=0x2f661621; @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign) BOOL becomesEditableWithGestures;	// G=0x2f66163d; S=0x2f661641; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x2f661675; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(assign, nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x2f661679; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x2f661709; S=0x2f66170d; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x2f66162d; 
@property(assign, nonatomic) BOOL isSingleLineDocument;
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x2f6616b9; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x2f6616bd; S=0x2f6616c1; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, getter=isSecure) BOOL secure;	// G=0x2f661619; S=0x2f66161d; converted property
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x2f66166d; S=0x2f661671; 
@property(assign, nonatomic) int selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x2f6615dd; S=0x2f6615d9; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x2f661705; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
// declared property getter: - (BOOL)acceptsEmoji;	// 0x2f661625
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x2f6616d9
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x2f66163d
// declared property getter: - (id)beginningOfDocument;	// 0x2f661675
- (CGRect)caretRect;	// 0x2f6615e5
- (CGRect)caretRectForPosition:(id)position;	// 0x2f6616a1
- (unsigned short)characterAfterCaretSelection;	// 0x2f661575
- (unsigned short)characterBeforeCaretSelection;	// 0x2f661571
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x2f66156d
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x2f6616cd
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x2f6616d5
- (id)closestPositionToPoint:(CGPoint)point;	// 0x2f6616c5
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x2f6616c9
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x2f6616e5
- (void)confirmMarkedText:(id)text;	// 0x2f661569
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x2f6615fd
- (void)dealloc;	// 0x2f528469
- (id)delegate;	// 0x2f661555
- (void)deleteBackward;	// 0x2f661559
// declared property getter: - (id)endOfDocument;	// 0x2f661679
- (void)extendCurrentSelection:(int)selection;	// 0x2f6615d1
- (CGRect)firstRectForRange:(id)range;	// 0x2f661689
- (id)fontForCaretSelection;	// 0x2f661579
- (void)forwardInvocation:(id)invocation;	// 0x2f661451
- (BOOL)hasContent;	// 0x2f6615a9
- (BOOL)hasSelection;	// 0x2f6615ad
- (BOOL)hasText;	// 0x2f661669
// declared property getter: - (id)inputDelegate;	// 0x2f661709
- (void)insertText:(id)text;	// 0x2f66155d
// declared property getter: - (id)interactionAssistant;	// 0x2f66162d
- (BOOL)isEditable;	// 0x2f661631
- (BOOL)isEditing;	// 0x2f661635
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x2f6616f5
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x2f6616fd
// converted property getter: - (BOOL)isSecure;	// 0x2f661619
- (BOOL)isShowingPlaceholder;	// 0x2f661611
// declared property getter: - (id)markedTextRange;	// 0x2f6616b9
// declared property getter: - (id)markedTextStyle;	// 0x2f6616bd
- (id)methodSignatureForSelector:(SEL)selector;	// 0x2f6614d9
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x2f66159d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x2f6616e9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x2f6616f1
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x2f6616ed
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x2f6616f9
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x2f6616d1
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x2f6615cd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x2f6615c9
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x2f661701
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x2f661599
- (void)replaceCurrentWordWithText:(id)text;	// 0x2f661561
- (void)replaceRange:(id)range withText:(id)text;	// 0x2f661685
- (void)selectAll;	// 0x2f6615d5
// declared property getter: - (id)selectedTextRange;	// 0x2f66166d
- (BOOL)selectionAtDocumentStart;	// 0x2f6615b5
- (BOOL)selectionAtWordStart;	// 0x2f6615b9
- (NSRange)selectionRange;	// 0x2f6615bd
- (id)selectionRectsForRange:(id)range;	// 0x2f661711
- (int)selectionState;	// 0x2f6615b1
- (id)selectionView;	// 0x2f661629
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x2f661621
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x2f6616dd
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x2f661641
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x2f66170d
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x2f661565
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x2f6616c1
// converted property setter: - (void)setSecure:(BOOL)secure;	// 0x2f66161d
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x2f661671
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x2f6615e1
// converted property setter: - (void)setText:(id)text;	// 0x2f6615d9
- (void)setupPlaceholderTextIfNeeded;	// 0x2f661615
- (void)takeTraitsFrom:(id)from;	// 0x2f661529
// converted property getter: - (id)text;	// 0x2f6615dd
- (id)textColorForCaretSelection;	// 0x2f66157d
- (id)textInRange:(id)range;	// 0x2f66167d
- (id)textInputTraits;	// 0x2f661401
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x2f661681
// declared property getter: - (id)tokenizer;	// 0x2f661705
- (void)unmarkText;	// 0x2f6616e1
- (void)updateSelection;	// 0x2f661639
- (CGRect)visibleBounds;	// 0x2f661645
- (int)wordOffsetInRange:(id)range;	// 0x2f6615a1
@end

