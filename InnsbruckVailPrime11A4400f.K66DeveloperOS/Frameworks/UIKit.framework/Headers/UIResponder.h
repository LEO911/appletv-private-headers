/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UITextInput_Internal.h"
#import <ImageIO/NSObject.h>
#import "UITextInputAdditions.h"

@class UITextInputMode, UIView, NSString, NSArray, NSUndoManager;
@protocol UITextInput, UITextInputPrivate;

@interface UIResponder : NSObject <UITextInput_Internal, UITextInputAdditions> {
}
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x2f523fb9; 
@property(readonly, assign, nonatomic) UIResponder *_editingDelegate;	// G=0x2f4e9bfd; 
@property(readonly, assign, nonatomic) UIResponder *_responderForEditing;	// G=0x2f4e9bd9; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x2f4e4181; 
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;	// G=0x2f76c47d; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x2f76c45d; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x2f76c461; 
@property(readonly, assign) UIView *inputAccessoryView;	// G=0x2f3e4fed; 
@property(readonly, assign) UIView *inputView;	// G=0x2f3e4f21; 
@property(readonly, assign, nonatomic) NSArray *keyCommands;	// G=0x2f611635; 
@property(copy, nonatomic) NSString *restorationIdentifier;	// G=0x2f8f3851; S=0x2f46839d; 
@property(readonly, assign) NSString *textInputContextIdentifier;	// G=0x2f6114ad; 
@property(readonly, assign) UITextInputMode *textInputMode;	// G=0x2f611415; 
@property(readonly, assign, nonatomic) NSUndoManager *undoManager;	// G=0x2f6113dd; 
+ (void)_cleanupAllStateRestorationTables;	// 0x2f446845
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;	// 0x2f446889
+ (void)_finishStateRestoration;	// 0x2f8f3fa9
+ (void)_prepareForSecondPassStateRestoration;	// 0x2f8f3f99
+ (void)_setRestoredIdentifierPathForObject:(id)object identifierPath:(id)path;	// 0x2f8f3e8d
+ (void)_startDeferredTrackingObjectsWithIdentifiers;	// 0x2f8f3da9
+ (void)_stopDeferredTrackingObjectsWithIdentifiers;	// 0x2f8f3db9
+ (void)_updateStateRestorationIdentifierMap;	// 0x2f8f3dc9
+ (void)clearTextInputContextIdentifier:(id)identifier;	// 0x2f6114d5
+ (id)objectWithRestorationIdentifierPath:(id)restorationIdentifierPath;	// 0x2f8f3aed
- (id)_asTextSelection;	// 0x2f76c479
- (void)_becomeFirstResponder;	// 0x2f3e4315
- (void)_becomeFirstResponderAndMakeVisible;	// 0x2f611941
- (BOOL)_becomeFirstResponderWhenPossible;	// 0x2f4454c1
- (void)_beginPinningInputViews;	// 0x2f512679
- (BOOL)_canBecomeFirstResponder;	// 0x2f611929
- (BOOL)_canBecomeFirstResponderWhenPossible;	// 0x2f611c5d
- (BOOL)_canChangeFirstResponder:(id)responder toResponder:(id)responder2;	// 0x2f611c21
- (BOOL)_canShowTextServices;	// 0x2f6119c9
// declared property getter: - (CGRect)_caretRect;	// 0x2f76c47d
- (unsigned long)_characterAfterCaretSelection;	// 0x2f4f23ed
- (unsigned long)_characterBeforeCaretSelection;	// 0x2f4f20f9
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x2f4f210d
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x2f4f2185
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x2f522d01
- (void)_clearBecomeFirstResponderWhenCapable;	// 0x2f4b4229
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event;	// 0x2f3f1db1
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event index:(unsigned)index;	// 0x2f3f1dd5
- (BOOL)_containedInAbsoluteResponderChain;	// 0x2f445499
- (BOOL)_containsResponder:(id)responder;	// 0x2f3f4871
- (void)_controlTouchBegan:(id)began withEvent:(id)event;	// 0x2f4b5869
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;	// 0x2f4d06bd
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;	// 0x2f508f19
- (id)_deepestUnambiguousResponder;	// 0x2f611a8d
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x2f766631
- (void)_deleteByWord;	// 0x2f7662cd
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x2f766659
- (void)_deleteToEndOfLine;	// 0x2f7664d5
- (void)_deleteToStartOfLine;	// 0x2f766379
- (void)_didChangeToFirstResponder:(id)firstResponder;	// 0x2f611c59
// declared property getter: - (id)_editingDelegate;	// 0x2f4e9bfd
- (void)_endPinningInputViews;	// 0x2f4b43b5
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x2f7660c1
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x2f7660d5
- (void)_extendCurrentSelection:(int)selection;	// 0x2f765f15
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x2f4e4039
- (void)_finishResignFirstResponder;	// 0x2f3f4a91
- (id)_firstResponder;	// 0x2f3f4a69
- (id)_fontForCaretSelection;	// 0x2f52a74d
- (id)_fullRange;	// 0x2f7668b9
- (id)_fullText;	// 0x2f570ed5
- (void)_handleKeyEvent:(GSEventRef)event;	// 0x2f4ed155
- (void)_handleKeyUIEvent:(id)event;	// 0x2f611951
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x2f765ead
- (int)_indexForTextPosition:(id)textPosition;	// 0x2f575071
- (BOOL)_isEmptySelection;	// 0x2f765e39
- (BOOL)_isPinningInputViews;	// 0x2f4b4355
- (BOOL)_isRootForKeyResponderCycle;	// 0x2f61134d
- (BOOL)_isTransitioningFromView:(id)view;	// 0x2f4f1285
- (BOOL)_isViewController;	// 0x2f61197d
- (id)_keyCommandForEvent:(id)event;	// 0x2f611671
- (id)_keyCommands;	// 0x2f611661
- (id)_keyInput;	// 0x2f765c21
- (id)_keyboardResponder;	// 0x2f3e5101
- (CGRect)_lastRectForRange:(id)range;	// 0x2f768be1
- (void)_moveCurrentSelection:(int)selection;	// 0x2f765fe1
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x2f767c9d
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x2f767e8d
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x2f767f89
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x2f767995
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x2f767379
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x2f7676ed
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x2f76708d
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x2f7678d9
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x2f7671f1
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x2f767501
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x2f766e19
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x2f767aad
- (void)_moveWithEvent:(id)event;	// 0x2f611a41
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x2f7685a9
- (id)_nextKeyResponder;	// 0x2f611345
- (id)_nextViewControllerInResponderChain;	// 0x2f611981
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x2f574fdd
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x2f768699
- (void)_physicalButtonsBegan:(id)began withEvent:(id)event;	// 0x2f611a81
- (void)_physicalButtonsCancelled:(id)cancelled withEvent:(id)event;	// 0x2f611a89
- (void)_physicalButtonsEnded:(id)ended withEvent:(id)event;	// 0x2f611a85
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x2f768089
- (id)_previousKeyResponder;	// 0x2f611349
// declared property getter: - (id)_proxyTextInput;	// 0x2f523fb9
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x2f4c22bd
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x2f766831
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x2f766875
- (void)_rebuildStateRestorationIdentifierPath;	// 0x2f8f3861
- (void)_replaceCurrentWordWithText:(id)text;	// 0x2f7667b5
- (BOOL)_requiresKeyboardResetOnReload;	// 0x2f3e4ce5
- (BOOL)_requiresKeyboardWhenFirstResponder;	// 0x2f3e5081
- (BOOL)_requiresKeyboardWindowWhenFirstResponder;	// 0x2f611831
- (void)_resignFirstResponder;	// 0x2f3f4bc5
- (BOOL)_resignIfContainsFirstResponder;	// 0x2f611871
- (id)_responderForBecomeFirstResponder;	// 0x2f3f486d
// declared property getter: - (id)_responderForEditing;	// 0x2f4e9bd9
- (id)_responderSelectionContainerViewForResponder:(id)responder;	// 0x2f611aa9
- (id)_responderSelectionImage;	// 0x2f611ad5
- (CGRect)_responderSelectionRectForWindow:(id)window;	// 0x2f611a91
- (id)_responderWindow;	// 0x2f611849
- (id)_restorationIdentifierPath;	// 0x2f8f3d65
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x2f766829
- (void)_selectAll;	// 0x2f765c81
- (id)_selectableText;	// 0x2f4c232d
- (NSRange)_selectedNSRange;	// 0x2f765c25
- (int)_selectionAffinity;	// 0x2f76812d
- (BOOL)_selectionAtDocumentEnd;	// 0x2f765dc9
- (BOOL)_selectionAtDocumentStart;	// 0x2f765d59
- (BOOL)_selectionAtWordStart;	// 0x2f765cc1
- (CGRect)_selectionClipRect;	// 0x2f4f27f9
- (void)_setCaretSelectionAtEndOfSelection;	// 0x2f766245
- (void)_setFirstResponder:(id)responder;	// 0x2f3e4329
- (void)_setGestureRecognizers;	// 0x2f768229
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x2f766c5d
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x2f768471
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x2f7680b9
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x2f766a05
- (id)_showServiceForText:(id)text type:(int)type fromRect:(CGRect)rect inView:(id)view;	// 0x2f6119f1
- (BOOL)_supportsBecomeFirstResponderWhenPossible;	// 0x2f611c75
- (id)_textColorForCaretSelection;	// 0x2f766915
// declared property getter: - (id)_textSelectingContainer;	// 0x2f4e4181
- (void)_unmarkText;	// 0x2f51de91
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x2f7669d5
- (void)_wheelChangedWithEvent:(id)event;	// 0x2f611205
- (id)_window;	// 0x2f611639
- (void)_windowBecameKey;	// 0x2f4f1215
- (void)_windowResignedKey;	// 0x2f4f1211
- (id)_wordContainingCaretSelection;	// 0x2f56e5b9
- (BOOL)becomeFirstResponder;	// 0x2f3e3edd
- (void)beginSelectionChange;	// 0x2f76c4f9
- (BOOL)canBecomeFirstResponder;	// 0x2f3f4a65
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x2f4af2c1
- (BOOL)canResignFirstResponder;	// 0x2f3f49f1
- (void)decodeRestorableStateWithCoder:(id)coder;	// 0x2f8f3fbd
- (void)encodeRestorableStateWithCoder:(id)coder;	// 0x2f8f3fb9
- (void)endSelectionChange;	// 0x2f76c4fd
- (id)firstResponder;	// 0x2f3e41b5
- (void)gestureChanged:(GSEventRef)changed;	// 0x2f611305
- (void)gestureEnded:(GSEventRef)ended;	// 0x2f6112c5
- (void)gestureStarted:(GSEventRef)started;	// 0x2f611285
// declared property getter: - (id)inputAccessoryView;	// 0x2f3e4fed
// declared property getter: - (id)inputView;	// 0x2f3e4f21
- (id)interactionAssistant;	// 0x2f76c459
// declared property getter: - (BOOL)isEditable;	// 0x2f76c45d
// declared property getter: - (BOOL)isEditing;	// 0x2f76c461
- (BOOL)isFirstResponder;	// 0x2f3e4699
// declared property getter: - (id)keyCommands;	// 0x2f611635
- (void)motionBegan:(int)began withEvent:(id)event;	// 0x2f6110e1
- (void)motionCancelled:(int)cancelled withEvent:(id)event;	// 0x2f611179
- (void)motionEnded:(int)ended withEvent:(id)event;	// 0x2f61112d
- (id)nextFirstResponder;	// 0x2f3f49f5
- (id)nextResponder;	// 0x2f3e4fe9
- (void)reloadInputViews;	// 0x2f3e45a1
- (void)reloadInputViewsWithoutReset;	// 0x2f61150d
- (void)remoteControlReceivedWithEvent:(id)event;	// 0x2f6111c5
- (BOOL)resignFirstResponder;	// 0x2f3f48b1
// declared property getter: - (id)restorationIdentifier;	// 0x2f8f3851
- (void)scrollWheel:(GSEventRef)wheel;	// 0x2f611245
- (int)selectionAffinity;	// 0x2f768bdd
// declared property setter: - (void)setRestorationIdentifier:(id)identifier;	// 0x2f46839d
- (id)targetForAction:(SEL)action withSender:(id)sender;	// 0x2f611351
// declared property getter: - (id)textInputContextIdentifier;	// 0x2f6114ad
// declared property getter: - (id)textInputMode;	// 0x2f611415
- (id)textInputView;	// 0x2f76c431
- (void)touchesBegan:(id)began withEvent:(id)event;	// 0x2f4fe395
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;	// 0x2f525da1
- (void)touchesEnded:(id)ended withEvent:(id)event;	// 0x2f500251
- (void)touchesMoved:(id)moved withEvent:(id)event;	// 0x2f509379
// declared property getter: - (id)undoManager;	// 0x2f6113dd
@end

