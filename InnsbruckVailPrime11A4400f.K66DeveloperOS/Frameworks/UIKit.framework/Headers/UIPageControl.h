/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIControl.h"

@class UIColor, UIImage, _UILegibilitySettings, NSMutableArray;

@interface UIPageControl : UIControl {
	NSMutableArray *_indicators;	// 120 = 0x78
	int _currentPage;	// 124 = 0x7c
	int _displayedPage;	// 128 = 0x80
	struct {
		unsigned hideForSinglePage : 1;
		unsigned defersCurrentPageDisplay : 1;
	} _pageControlFlags;	// 132 = 0x84
	UIImage *_currentPageImage;	// 136 = 0x88
	UIImage *_pageImage;	// 140 = 0x8c
	UIColor *_currentPageIndicatorTintColor;	// 144 = 0x90
	UIColor *_pageIndicatorTintColor;	// 148 = 0x94
	_UILegibilitySettings *_legibilitySettings;	// 152 = 0x98
}
@property(assign, nonatomic) int currentPage;	// G=0x2f6909b1; S=0x2f690981; @dynamic
@property(retain, nonatomic) UIColor *currentPageIndicatorTintColor;	// G=0x2f691c25; S=0x2f690285; @synthesize=_currentPageIndicatorTintColor
@property(assign, nonatomic) BOOL defersCurrentPageDisplay;	// G=0x2f690a71; S=0x2f690a41; @dynamic
@property(assign, nonatomic) BOOL hidesForSinglePage;	// G=0x2f690a2d; S=0x2f6909c1; @dynamic
@property(assign, nonatomic, getter=_legibilitySettings, setter=_setLegibilitySettings:) _UILegibilitySettings *legibilitySettings;	// G=0x2f691c45; S=0x2f691ab1; @synthesize=_legibilitySettings
@property(assign, nonatomic, getter=_legibilityStyle, setter=_setLegibilityStyle:) int legibilityStyle;	// G=0x2f691a91; S=0x2f691a55; 
@property(assign, nonatomic) int numberOfPages;	// G=0x2f690961; S=0x2f6904d5; @dynamic
@property(retain, nonatomic) UIColor *pageIndicatorTintColor;	// G=0x2f691c35; S=0x2f690125; @synthesize=_pageIndicatorTintColor
- (id)initWithCoder:(id)coder;	// 0x2f68fb95
- (id)initWithFrame:(CGRect)frame;	// 0x2f68fb31
- (id)_activePageIndicatorImage;	// 0x2f691555
- (void)_commonPageControlInit;	// 0x2f68fb01
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;	// 0x2f690b0d
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;	// 0x2f690b09
- (id)_correctIdiomaticNameForImageNamed:(id)imageNamed;	// 0x2f69157d
- (id)_customPageIndicatorCurrentImageForPage:(int)page;	// 0x2f690431
- (id)_customPageIndicatorImageForPage:(int)page;	// 0x2f6903dd
- (void)_didChangeFromIdiom:(int)idiom onScreen:(id)screen traverseHierarchy:(BOOL)hierarchy;	// 0x2f690071
- (int)_displayedPage;	// 0x2f6914b9
- (BOOL)_hasCustomImageForPage:(int)page enabled:(BOOL)enabled;	// 0x2f6903a1
- (CGRect)_indicatorFrameAtIndex:(int)index;	// 0x2f6915c5
- (float)_indicatorSpacing;	// 0x2f691665
- (id)_indicatorViewEnabled:(BOOL)enabled index:(int)index legible:(BOOL)legible;	// 0x2f691729
- (void)_invalidateIndicators;	// 0x2f6907a1
// declared property getter: - (id)_legibilitySettings;	// 0x2f691c45
// declared property getter: - (int)_legibilityStyle;	// 0x2f691a91
- (CGRect)_modernBounds;	// 0x2f69198d
- (id)_modernColorEnabled:(BOOL)enabled;	// 0x2f6919e1
- (float)_modernCornerRadius;	// 0x2f6919a1
- (id)_modernIndicatorImageEnabled:(BOOL)enabled;	// 0x2f691b59
- (void)_modernTransitionIndicator:(id)indicator toEnabled:(BOOL)enabled index:(int)index legible:(BOOL)legible;	// 0x2f691879
- (id)_pageIndicatorCurrentImageForPage:(int)page;	// 0x2f6904ad
- (id)_pageIndicatorImage;	// 0x2f69152d
- (id)_pageIndicatorImageForPage:(int)page;	// 0x2f690485
- (void)_populateArchivedSubviews:(id)subviews;	// 0x2f68fdad
- (void)_setCurrentPage:(int)page;	// 0x2f6914c9
- (void)_setDisplayedPage:(int)page;	// 0x2f6913b9
// declared property setter: - (void)_setLegibilitySettings:(id)settings;	// 0x2f691ab1
// declared property setter: - (void)_setLegibilityStyle:(int)style;	// 0x2f691a55
- (BOOL)_shouldDrawLegibly;	// 0x2f691b2d
- (void)_transitionIndicator:(id)indicator toEnabled:(BOOL)enabled index:(int)index legible:(BOOL)legible;	// 0x2f691685
- (void)_updateCurrentPageDisplay;	// 0x2f69150d
// declared property getter: - (int)currentPage;	// 0x2f6909b1
// declared property getter: - (id)currentPageIndicatorTintColor;	// 0x2f691c25
- (void)dealloc;	// 0x2f68ffd1
// declared property getter: - (BOOL)defersCurrentPageDisplay;	// 0x2f690a71
- (void)encodeWithCoder:(id)coder;	// 0x2f68fe95
- (void)endTrackingWithTouch:(id)touch withEvent:(id)event;	// 0x2f690f99
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x2f691321
// declared property getter: - (BOOL)hidesForSinglePage;	// 0x2f690a2d
- (CGSize)intrinsicContentSize;	// 0x2f690b11
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;	// 0x2f6dca89
- (void)layoutSubviews;	// 0x2f690c9d
// declared property getter: - (int)numberOfPages;	// 0x2f690961
// declared property getter: - (id)pageIndicatorTintColor;	// 0x2f691c35
// declared property setter: - (void)setCurrentPage:(int)page;	// 0x2f690981
// declared property setter: - (void)setCurrentPageIndicatorTintColor:(id)color;	// 0x2f690285
// declared property setter: - (void)setDefersCurrentPageDisplay:(BOOL)display;	// 0x2f690a41
// declared property setter: - (void)setHidesForSinglePage:(BOOL)singlePage;	// 0x2f6909c1
// declared property setter: - (void)setNumberOfPages:(int)pages;	// 0x2f6904d5
// declared property setter: - (void)setPageIndicatorTintColor:(id)color;	// 0x2f690125
- (CGSize)sizeForNumberOfPages:(int)pages;	// 0x2f691181
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x2f690a85
- (void)updateCurrentPageDisplay;	// 0x2f691159
@end

