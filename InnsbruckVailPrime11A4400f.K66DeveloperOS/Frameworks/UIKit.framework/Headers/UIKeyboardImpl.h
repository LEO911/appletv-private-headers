/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIView.h"
#import "UIKit-Structs.h"
#import "UIKeyboardCandidateListDelegate.h"

@class NSMutableArray, UIKeyboardAutocorrectionController, UITextInputArrowKeyHistory, KBCandidateLogger, TIKeyboardCandidateResultSet, NSTimer, NSString, NSMutableDictionary, UIAutocorrectInlinePrompt, UIKeyboardLayout, TIKeyboardState, TIKeyboardInputManagerState, UIDelayedAction, TIKeyboardInputManagerStub, TIKeyboardTouchEvent, UIKeyboardTaskQueue, UIAlertView, TIKeyboardLayout, UIEvent, _UIActionWhenIdle, UITextInputTraits;
@protocol UIKeyInput, UITextInput, UIKeyboardInput, UIKeyboardCandidateList, UIKeyboardRecording, UIApplicationEventRecording, UIKeyboardTypology, UITextInputPrivate, UIKeyboardImplGeometryDelegate;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 96 = 0x60
	UIKeyboardTaskQueue *m_taskQueue;	// 100 = 0x64
	id m_externalTask;	// 104 = 0x68
	TIKeyboardState *m_keyboardState;	// 108 = 0x6c
	TIKeyboardInputManagerState *m_inputManagerState;	// 112 = 0x70
	UIView *m_languageIndicator;	// 116 = 0x74
	NSString *m_previousInputString;	// 120 = 0x78
	TIKeyboardInputManagerStub *m_inputManager;	// 124 = 0x7c
	UIKeyboardAutocorrectionController *m_autocorrectionController;	// 128 = 0x80
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 132 = 0x84
	UIDelayedAction *m_autocorrectPromptAction;	// 136 = 0x88
	TIKeyboardCandidateResultSet *m_candidateResultSet;	// 140 = 0x8c
	id<UIKeyboardCandidateList> m_candidateList;	// 144 = 0x90
	UIView *m_markedTextOverlay;	// 148 = 0x94
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 152 = 0x98
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 156 = 0x9c
	UIKeyboardLayout *m_layout;	// 160 = 0xa0
	NSMutableDictionary *m_keyedLayouts;	// 164 = 0xa4
	NSString *m_inputModeLastChosen;	// 168 = 0xa8
	struct {
		NSTimer *timer;
		UIEvent *eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 172 = 0xac
	NSTimer *m_autoDeleteTimer;	// 184 = 0xb8
	BOOL m_autoDeleteJustFired;	// 188 = 0xbc
	unsigned m_autoDeleteCount;	// 192 = 0xc0
	double m_autoDeleteLastDelete;	// 196 = 0xc4
	double m_autoDeleteInterval;	// 204 = 0xcc
	unsigned long m_autoDeleteShiftCharacter;	// 212 = 0xd4
	UIDelayedAction *m_longPressAction;	// 216 = 0xd8
	int m_orientation;	// 220 = 0xdc
	int m_originalOrientation;	// 224 = 0xe0
	CGPoint m_inputPoint;	// 228 = 0xe4
	int m_changeCount;	// 236 = 0xec
	double m_changeTime;	// 240 = 0xf0
	id m_changedDelegate;	// 248 = 0xf8
	CFRunLoopObserverRef m_observer;	// 252 = 0xfc
	unsigned m_textInputChangingCount;	// 256 = 0x100
	BOOL m_textInputChangingText;	// 260 = 0x104
	BOOL m_textInputChangingDirection;	// 261 = 0x105
	BOOL m_textInputChangesIgnored;	// 262 = 0x106
	BOOL m_insideKeyInputDelegateCall;	// 263 = 0x107
	UITextInputTraits *m_defaultTraits;	// 264 = 0x108
	UITextInputTraits *m_traits;	// 268 = 0x10c
	int m_returnKeyState;	// 272 = 0x110
	int m_currentDirection;	// 276 = 0x114
	int m_contextWordDepth;	// 280 = 0x118
	BOOL m_autoDeleteOK;	// 284 = 0x11c
	BOOL m_autocapitalizationPreference;	// 285 = 0x11d
	BOOL m_autocorrectPromptTimerFired;	// 286 = 0x11e
	BOOL m_autocorrectionPreference;	// 287 = 0x11f
	BOOL m_autoshift;	// 288 = 0x120
	BOOL m_caretShowingNow;	// 289 = 0x121
	BOOL m_changeNotificationDisabled;	// 290 = 0x122
	BOOL m_correctionLearningAllowed;	// 291 = 0x123
	BOOL m_delegateIsSMSTextView;	// 292 = 0x124
	BOOL m_delegateRequiresKeyEvents;	// 293 = 0x125
	BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;	// 294 = 0x126
	BOOL m_doubleSpacePeriodPreference;	// 295 = 0x127
	BOOL m_hardwareKeyboardAttached;	// 296 = 0x128
	BOOL m_inDealloc;	// 297 = 0x129
	BOOL m_initializationDone;	// 298 = 0x12a
	BOOL m_performanceLoggingEnabled;	// 299 = 0x12b
	BOOL m_selecting;	// 300 = 0x12c
	BOOL m_shift;	// 301 = 0x12d
	BOOL m_shiftLocked;	// 302 = 0x12e
	BOOL m_shiftLockedEnabled;	// 303 = 0x12f
	BOOL m_settingShift;	// 304 = 0x130
	BOOL m_suggestionsShownForCurrentDeletion;	// 305 = 0x131
	BOOL m_originalShouldSkipCandidateSelection;	// 306 = 0x132
	BOOL m_updatingPreferences;	// 307 = 0x133
	BOOL m_changingGeometryWithSameOrientation;	// 308 = 0x134
	BOOL m_suppressGeometryChangeNotifications;	// 309 = 0x135
	BOOL m_acceptingCandidate;	// 310 = 0x136
	BOOL m_userChangedSelection;	// 311 = 0x137
	BOOL m_shouldChargeKeys;	// 312 = 0x138
	BOOL m_longPress;	// 313 = 0x139
	BOOL m_replacingWord;	// 314 = 0x13a
	BOOL m_shiftNeedsUpdate;	// 315 = 0x13b
	BOOL m_shiftPreventAutoshift;	// 316 = 0x13c
	BOOL m_shiftHeldDownNeedsUpdated;	// 317 = 0x13d
	BOOL m_delegateAdoptsTextInput;	// 318 = 0x13e
	BOOL m_delegateAdoptsTextInputPrivate;	// 319 = 0x13f
	BOOL m_delegateAdoptsKeyboardInput;	// 320 = 0x140
	BOOL m_clientVariantSupportEnabled;	// 321 = 0x141
	BOOL m_clientVariantSupportEnabledEver;	// 322 = 0x142
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 324 = 0x144
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 328 = 0x148
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 332 = 0x14c
	BOOL m_preRotateShift;	// 336 = 0x150
	BOOL m_preRotateShiftLocked;	// 337 = 0x151
	BOOL m_showInputModeIndicator;	// 338 = 0x152
	BOOL m_suppressUpdateCandidateView;	// 339 = 0x153
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 340 = 0x154
	BOOL m_shouldSetInputModeInNextRun;	// 341 = 0x155
	BOOL m_rivenCenterFilled;	// 342 = 0x156
	float m_splitProgress;	// 344 = 0x158
	NSString *m_currentUsedInputMode;	// 348 = 0x15c
	NSString *m_lastUsedInputMode;	// 352 = 0x160
	NSString *m_nextInputModeToUse;	// 356 = 0x164
	BOOL m_needsCandidates;	// 360 = 0x168
	BOOL m_shouldSkipCandidateGeneration;	// 361 = 0x169
	BOOL m_updateLayoutOnShowKeyboard;	// 362 = 0x16a
	BOOL m_receivedCandidatesInCurrentInputMode;	// 363 = 0x16b
	int _currentAlertReason;	// 364 = 0x16c
	BOOL m_scrolling;	// 368 = 0x170
	BOOL m_hasInputOnAcceptCandidate;	// 369 = 0x171
	BOOL m_maximizing;	// 370 = 0x172
	unsigned m_previousSpaceKeyBehavior;	// 372 = 0x174
	unsigned m_previousReturnKeyBehavior;	// 376 = 0x178
	BOOL m_showsCandidateBar;	// 380 = 0x17c
	BOOL m_showsCandidateInline;	// 381 = 0x17d
	BOOL committingCandidate;	// 382 = 0x17e
	BOOL geometryIsChanging;	// 383 = 0x17f
	BOOL m_hardwareKeyboardIsSeen;	// 384 = 0x180
	BOOL m_softwareKeyboardShownByTouch;	// 385 = 0x181
	TIKeyboardTouchEvent *m_touchEventWaitingForKeyInputEvent;	// 388 = 0x184
	_UIActionWhenIdle *m_delayedCandidateRequest;	// 392 = 0x188
	_UIActionWhenIdle *m_deferredDidSetDelegateAction;	// 396 = 0x18c
	id<UIKeyboardTypology> typologyRecorder;	// 400 = 0x190
	UIAlertView *keyboardAlertView;	// 404 = 0x194
	KBCandidateLogger *m_candidateLogger;	// 408 = 0x198
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x2f4ee5c5; S=0x2f4e46d5; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x2f4c1a7d; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x2f4eef8d; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x2f4e9c01; S=0x2f4c0425; converted property
@property(readonly, assign, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController;	// G=0x2f65a5c1; @synthesize=m_autocorrectionController
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x2f4c03f1; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x2f64d651; S=0x2f64d685; converted property
@property(retain, nonatomic) KBCandidateLogger *candidateLogger;	// G=0x2f65a701; S=0x2f65a711; @synthesize=m_candidateLogger
@property(assign) BOOL caretBlinks;	// G=0x2f65a2e5; S=0x2f4c2765; converted property
@property(assign) BOOL caretVisible;	// G=0x2f4eca55; S=0x2f4c27f1; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x2f64cdc1; 
@property(readonly, assign) int changeCount;	// G=0x2f4c1501; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x2f64ec15; S=0x2f64ec25; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x2f4c1789; S=0x2f4c1799; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x2f65a6b1; S=0x2f65a6c1; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x2f4ee791; S=0x2f4c05e9; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction;	// G=0x2f65a611; S=0x2f65a621; @synthesize=m_deferredDidSetDelegateAction
@property(retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest;	// G=0x2f65a5f1; S=0x2f65a601; @synthesize=m_delayedCandidateRequest
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x2f4bd94d; S=0x2f4c0ca9; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x2f64e7d9; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x2f4c17e9; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x2f4be935; converted property
@property(copy, nonatomic) id externalTask;	// G=0x2f65a57d; S=0x2f65a591; @synthesize=m_externalTask
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x2f4c0c95; S=0x2f4c0975; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x2f65a6d1; S=0x2f4ceff9; @synthesize
@property(assign, nonatomic) BOOL hardwareKeyboardIsSeen;	// G=0x2f65a6e1; S=0x2f64c355; @synthesize=m_hardwareKeyboardIsSeen
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x2f64dbb5; S=0x2f64dbed; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x2f4bfd21; S=0x2f4ed2ad; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x2f4bfb75; 
@property(readonly, assign, nonatomic) TIKeyboardInputManagerStub *inputManager;	// G=0x2f4bfe85; 
@property(retain, nonatomic) TIKeyboardInputManagerState *inputManagerState;	// G=0x2f65a5a1; S=0x2f65a5b1; @synthesize=m_inputManagerState
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x2f64e4d9; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x2f55cd71; S=0x2f55cd81; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x2f65a661; S=0x2f55d209; @synthesize=m_lastUsedInputMode
@property(retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;	// G=0x2f64c715; S=0x2f64c735; 
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x2f4c29d5; 
@property(readonly, assign, getter=isLongPress) BOOL longPress;	// G=0x2f51d379; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x2f64f5e5; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x2f64cfd1; 
@property(retain, nonatomic) NSString *nextInputModeToUse;	// G=0x2f65a671; S=0x2f65a681; @synthesize=m_nextInputModeToUse
@property(assign) unsigned phraseBoundary;	// G=0x2f652f4d; S=0x2f652ea1; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x2f4bd929; 
@property(assign, nonatomic) BOOL receivedCandidatesInCurrentInputMode;	// G=0x2f65a691; S=0x2f65a6a1; @synthesize=m_receivedCandidatesInCurrentInputMode
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x2f4c05d5; S=0x2f55ceb1; 
@property(assign) BOOL returnKeyEnabled;	// G=0x2f4cd461; S=0x2f4c19a9; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x2f64cf41; S=0x2f64cf75; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x2f4cb885; S=0x2f651471; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x2f6514dd; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x2f65a641; S=0x2f65a651; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x2f4cdd79; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x2f51d8c9; S=0x2f4c382d; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x2f505dd1; S=0x2f65a631; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x2f4c0bc9; S=0x2f4cdea9; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x2f55c6b9; S=0x2f55ad25; @synthesize=m_showsCandidateInline
@property(assign, nonatomic) BOOL softwareKeyboardShownByTouch;	// G=0x2f65a6f1; S=0x2f64c3d5; @synthesize=m_softwareKeyboardShownByTouch
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x2f4ce69d; 
@property(readonly, assign, nonatomic) UIKeyboardTaskQueue *taskQueue;	// G=0x2f64fbed; 
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent;	// G=0x2f65a5d1; S=0x2f65a5e1; @synthesize=m_touchEventWaitingForKeyInputEvent
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x2f4bff01; S=0x2f55cef1; @synthesize
@property(assign) BOOL userSelectedCurrentCandidate;	// G=0x2f6549f5; S=0x2f654a19; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x2f6514ed; S=0x2f4cc989; converted property
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x2f65aa09
+ (CGSize)_defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f64c109
+ (id)activeInstance;	// 0x2f3f4bb5
+ (float)additionalInstanceHeight;	// 0x2f4c0b8d
+ (float)additionalInstanceHeightForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f64c27d
+ (float)additionalInstanceHeightLoading;	// 0x2f64c2d1
+ (float)additionalInstanceHeightLoadingForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f64c30d
+ (void)applicationDidEnterBackground:(id)application;	// 0x2f55c4c5
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x2f5151f5
+ (void)applicationWillEnterForeground:(id)application;	// 0x2f55dc41
+ (void)applicationWillResignActive:(id)application;	// 0x2f55c0ed
+ (void)applicationWillSuspend:(id)application;	// 0x2f55c185
+ (unsigned)convertToTextInputAutocapitalizationType:(int)textInputAutocapitalizationType;	// 0x2f651429
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f44bdf1
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x2f658639
+ (int)interfaceOrientationForSize:(CGSize)size;	// 0x2f4c09d1
+ (BOOL)isSplit;	// 0x2f4c316d
+ (id)keyboardScreen;	// 0x2f64c0b1
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f4c2ff9
+ (Class)layoutClassForInputMode:(id)inputMode keyboardType:(int)type;	// 0x2f64ec39
+ (void)markElapsed:(id)elapsed;	// 0x2f4c0905
+ (void)markPerformance:(id)performance;	// 0x2f4bd5c9
+ (id)normalizedInputModesFromPreference;	// 0x2f64c249
+ (id)orientationKeyForOrientation:(int)orientation;	// 0x2f64ecbd
+ (int)persistentDictationTargetZone;	// 0x2f64d1b5
+ (CGPoint)persistentDictationWindowOffset;	// 0x2f64d3a9
+ (CGPoint)persistentOffset;	// 0x2f44e555
+ (float)persistentSplitProgress;	// 0x2f64d055
+ (void)refreshRivenStateWithTraits:(id)traits isKeyboard:(BOOL)keyboard;	// 0x2f4be6a1
+ (void)releaseSharedInstance;	// 0x2f4606c5
+ (BOOL)rivenInstalled;	// 0x2f4528b9
+ (BOOL)rivenPreference;	// 0x2f3e53e1
+ (BOOL)rivenTranslationPreference;	// 0x2f4517e1
+ (void)setParentTestForProfiling:(id)profiling;	// 0x2f65a7b5
+ (void)setPersistentDictationTargetZone:(int)zone;	// 0x2f64d1fd
+ (void)setPersistentDictationWindowOffset:(CGPoint)offset;	// 0x2f64d259
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x2f4f47ad
+ (void)setPersistentSplitProgress:(float)progress;	// 0x2f64d0c1
+ (id)sharedInstance;	// 0x2f4bcf35
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f44bd61
+ (float)splitProgress;	// 0x2f64d0b1
+ (BOOL)supportsSplit;	// 0x2f4c5795
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x2f64d1a5
+ (unsigned)translateToTextInputKeyboardType:(int)textInputKeyboardType;	// 0x2f64c5c9
- (id)initWithFrame:(CGRect)frame;	// 0x2f4bd109
- (id)UILanguagePreference;	// 0x2f4be9f1
- (id)_autocorrectPromptRects;	// 0x2f529bf5
- (id)_canonicalKeyTypeForKeyType:(id)keyType;	// 0x2f656021
- (int)_clipCornersOfView:(id)view;	// 0x2f64f009
- (id)_getAutocorrection;	// 0x2f65ae55
- (id)_getCurrentKeyboardName;	// 0x2f65ad6d
- (id)_getCurrentKeyplaneName;	// 0x2f65ad09
- (id)_getLocalizedInputMode;	// 0x2f65add1
- (void)_handleKeyBehavior:(unsigned)behavior forKeyType:(id)keyType;	// 0x2f6560b1
- (void)_handleKeyBehaviors:(id)behaviors withState:(id)state;	// 0x2f6566e1
- (void)_handleKeyEvent:(id)event executionContext:(id)context;	// 0x2f659261
- (void)_handleWebKeyEvent:(id)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x2f658c49
- (void)_handleWebKeyEvent:(id)event withIndex:(unsigned)index inInputString:(id)inputString executionContext:(id)context;	// 0x2f658d65
- (void)_handleWebKeyEvent:(id)event withInputString:(id)inputString executionContext:(id)context;	// 0x2f65909d
- (BOOL)_hasCandidates;	// 0x2f4bf49d
- (id)_inputForAutocorrectionCandidate;	// 0x2f5270f9
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x2f65a8c9
- (id)_keyboardBehaviorState;	// 0x2f656411
- (id)_layout;	// 0x2f65acf9
- (BOOL)_needsCandidates;	// 0x2f65aec1
- (void)_nop;	// 0x2f65601d
- (int)_positionInCandidateList:(id)candidateList;	// 0x2f65ae91
- (id)_rangeForAutocorrectionText:(id)autocorrectionText;	// 0x2f529e41
- (void)_remapKeyEvent:(id)event withKeyEventMap:(id)keyEventMap;	// 0x2f659149
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x2f65ae35
- (void)_setInputManager:(id)manager;	// 0x2f65a7f1
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x2f65aeb1
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x2f65a875
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x2f4c0c65
- (BOOL)_systemHasKbd;	// 0x2f6510bd
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x2f4c15d9
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x2f4cedf5
- (void)acceptAutocorrection;	// 0x2f4f5dc5
- (void)acceptCandidate:(id)candidate;	// 0x2f6542e9
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x2f6540d1
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index executionContext:(id)context;	// 0x2f6541a5
- (void)acceptCurrentCandidate;	// 0x2f654831
- (void)acceptCurrentCandidateIfSelected;	// 0x2f4cc901
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)executionContext;	// 0x2f654a65
- (void)acceptCurrentCandidateWithExecutionContext:(id)executionContext;	// 0x2f6548bd
- (void)acceptFirstCandidate;	// 0x2f6549e1
- (BOOL)acceptInputString:(id)string;	// 0x2f4ec441
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x2f523305
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete forInput:(id)input;	// 0x2f6553e1
- (id)acceptedAutocorrectionForWordTerminator:(id)wordTerminator;	// 0x2f65287d
- (void)addInputObject:(id)object;	// 0x2f654dfd
- (void)addInputObject:(id)object executionContext:(id)context;	// 0x2f654f71
- (void)addInputString:(id)string;	// 0x2f651d45
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x2f4ee639
- (void)addInputString:(id)string withFlags:(unsigned)flags;	// 0x2f651f81
- (void)addInputString:(id)string withFlags:(unsigned)flags executionContext:(id)context;	// 0x2f652085
- (void)addWordTerminator:(id)terminator afterSpace:(BOOL)space elapsedTime:(double)time executionContext:(id)context;	// 0x2f652b09
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x2f64def5
- (void)animateAutocorrection;	// 0x2f5750b9
- (void)applicationResumedEventsOnly:(id)only;	// 0x2f64c7b5
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x2f64c759
- (void)applyAutocorrection;	// 0x2f574d09
// declared property getter: - (id)arrowKeyHistory;	// 0x2f4ee5c5
- (void)autoDeleteTimerFired:(id)fired;	// 0x2f657f99
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x2f4c1a7d
// converted property getter: - (id)autocorrectPrompt;	// 0x2f4eef8d
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x2f4e9c01
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(id)context;	// 0x2f575ba1
// declared property getter: - (id)autocorrectionController;	// 0x2f65a5c1
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x2f4c03f1
- (BOOL)autocorrectionPreferenceForTraits;	// 0x2f4c0379
- (id)autocorrectionRecordForWord:(id)word;	// 0x2f571191
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x2f64d651
- (void)callChanged;	// 0x2f4eafed
- (void)callChangedSelection;	// 0x2f4c295d
- (BOOL)callLayoutIgnoresShiftState;	// 0x2f51d91d
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x2f4ce145
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x2f4ce0f5
- (void)callLayoutLongPressAction;	// 0x2f65a725
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x2f4c2ea5
- (void)callLayoutSetShift:(BOOL)shift;	// 0x2f4c2e4d
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x2f65a76d
- (void)callLayoutUpdateLocalizedKeys;	// 0x2f4c032d
- (void)callLayoutUpdateReturnKey;	// 0x2f4c19d9
- (BOOL)callLayoutUsesAutoShift;	// 0x2f4c2d35
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x2f64e939
- (BOOL)callShouldInsertText:(id)call;	// 0x2f4ee7d1
- (BOOL)callShouldReplaceExtendedRange:(unsigned)call withText:(id)text includeMarkedText:(BOOL)text3;	// 0x2f574919
- (BOOL)canHandleKeyHitTest;	// 0x2f4cdb0d
- (void)cancelAllKeyEvents;	// 0x2f508c1d
- (void)cancelSplitTransition;	// 0x2f64d59d
- (id)candidateList;	// 0x2f654ded
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x2f654d21
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x2f654d45
// declared property getter: - (id)candidateLogger;	// 0x2f65a701
// converted property getter: - (BOOL)caretBlinks;	// 0x2f65a2e5
// converted property getter: - (BOOL)caretVisible;	// 0x2f4eca55
// declared property getter: - (BOOL)centerFilled;	// 0x2f64cdc1
// converted property getter: - (int)changeCount;	// 0x2f4c1501
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x2f64ec15
// declared property getter: - (id)changedDelegate;	// 0x2f4c1789
- (BOOL)checkSpellingPreference;	// 0x2f4c0541
- (BOOL)checkSpellingPreferenceForTraits;	// 0x2f4c04cd
- (BOOL)chineseTestFestLoggingEnabled;	// 0x2f64d5e5
- (void)clearAnimations;	// 0x2f55c71d
- (void)clearAutocorrectPromptTimer;	// 0x2f4bfc81
- (void)clearChangeTimeAndCount;	// 0x2f4c1515
- (void)clearDelegate;	// 0x2f55c6e1
- (void)clearExcessKeyboardMemory;	// 0x2f51d04d
- (void)clearInput;	// 0x2f4bf295
- (void)clearLanguageIndicator;	// 0x2f65ab81
- (void)clearLayouts;	// 0x2f4c05fd
- (void)clearLongPressTimer;	// 0x2f4dbd0d
- (void)clearSelection;	// 0x2f65a30d
- (void)clearShiftState;	// 0x2f4f026d
- (void)clearTimers;	// 0x2f55c769
- (void)clearTransientState;	// 0x2f4c17a9
// declared property getter: - (BOOL)committingCandidate;	// 0x2f65a6b1
- (void)completeAcceptCandidate;	// 0x2f654b95
- (void)completeAcceptCandidateBeforeAddingInput:(id)input executionContext:(id)context;	// 0x2f6522b9
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)object executionContext:(id)context;	// 0x2f655081
- (void)completeAddInputString:(id)string;	// 0x2f652d61
- (void)completeDeleteFromInput;	// 0x2f653e35
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned long)characterBefore;	// 0x2f6536e5
- (void)completeHandleAutoDelete;	// 0x2f658351
- (void)completeHandleKeyEvent:(id)event;	// 0x2f65a01d
- (void)completeUpdateForChangedSelection:(BOOL)changedSelection;	// 0x2f64fa41
- (void)continueGenerateAutocorrectionWithOperations:(id)operations;	// 0x2f650879
- (void)continueGenerateCandidatesAsynchronouslyWithOperations:(id)operations;	// 0x2f650639
- (void)continueGenerateReplacementsForStringWithCandidates:(id)candidates candidatesHandler:(id)handler;	// 0x2f650d01
- (void)continueHandleAcceptedCandidateWithOperations:(id)operations;	// 0x2f650ab5
- (void)continueHandleKeyboardInputWithOperations:(id)operations;	// 0x2f6501e5
- (void)continuePerformHitTestToKeyCode:(int)keyCode keyCodeHandler:(id)handler;	// 0x2f651089
- (void)continueSyncToKeyboardStateWithOperations:(id)operations;	// 0x2f64febd
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x2f52a319
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x2f4c23ed
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x2f4f6025
// declared property getter: - (id)currentUsedInputMode;	// 0x2f4ee791
- (void)dealloc;	// 0x2f55cf05
- (void)defaultsDidChange;	// 0x2f64cac5
// declared property getter: - (id)deferredDidSetDelegateAction;	// 0x2f65a611
// declared property getter: - (id)delayedCandidateRequest;	// 0x2f65a5f1
- (void)delayedInit;	// 0x2f4da84d
// declared property getter: - (id)delegate;	// 0x2f4bd94d
// declared property getter: - (id)delegateAsResponder;	// 0x2f64e7d9
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x2f4c17e9
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x2f657889
- (BOOL)delegateSupportsCorrectionUI;	// 0x2f5270c9
- (void)deleteBackward;	// 0x2f651d31
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x2f651c05
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x2f651cc1
- (void)deleteFromInput;	// 0x2f6537d5
- (void)deleteFromInputWithExecutionContext:(id)executionContext;	// 0x2f653891
- (void)deleteHandwritingStrokesAtIndexes:(id)indexes;	// 0x2f64fb79
- (void)deleteOnceFromInputWithExecutionContext:(id)executionContext;	// 0x2f6531f5
- (void)detach;	// 0x2f55cd91
- (void)didSetDelegate;	// 0x2f64e8a9
- (void)dismissKeyboard;	// 0x2f658a95
- (BOOL)displaysCandidates;	// 0x2f4eada5
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x2f4be935
- (CGSize)dragGestureSize;	// 0x2f64cf09
- (void)ejectKeyDown;	// 0x2f65a1e1
- (void)enable;	// 0x2f64e925
// declared property getter: - (id)externalTask;	// 0x2f65a57d
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x2f64dec1
- (void)fadeAutocorrectPrompt;	// 0x2f657629
- (void)finishLayoutChangeWithArguments:(id)arguments;	// 0x2f64ed19
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x2f65ac21
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x2f658729
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;	// 0x2f65920d
- (void)forceShiftUpdate;	// 0x2f5710b9
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x2f4ebb4d
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x2f64ced9
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x2f573011
- (void)generateAutocorrectionWithExecutionContext:(id)executionContext;	// 0x2f650649
- (void)generateCandidates;	// 0x2f4dbd5d
- (void)generateCandidatesAsynchronously;	// 0x2f6501f5
- (void)generateCandidatesAsynchronouslyWithRange:(NSRange)range selectedCandidate:(id)candidate;	// 0x2f650281
- (void)generateCandidatesWithOptions:(int)options;	// 0x2f4dbd71
- (void)generateReplacementsForString:(id)string candidatesHandler:(id)handler executionContext:(id)context;	// 0x2f650ac5
- (void)geometryChangeDone:(BOOL)done;	// 0x2f4dbc3d
// declared property getter: - (id)geometryDelegate;	// 0x2f4c0c95
// declared property getter: - (BOOL)geometryIsChanging;	// 0x2f65a6d1
- (id)getLastUsedInputMode;	// 0x2f64e185
- (void)handleAcceptedCandidate:(id)candidate executionContext:(id)context;	// 0x2f650889
- (void)handleAutoDelete;	// 0x2f658145
- (void)handleAutoDeleteWithExecutionContext:(id)executionContext;	// 0x2f658271
- (void)handleClear;	// 0x2f6517b9
- (void)handleClearWithExecutionContext:(id)executionContext;	// 0x2f6518e5
- (void)handleDelayedActionLongPress;	// 0x2f658501
- (void)handleDelayedActionUpdateAutocorrectPrompt;	// 0x2f65742d
- (void)handleDelayedActionUpdateTextCandidateView;	// 0x2f656851
- (void)handleDelete;	// 0x2f65168d
- (void)handleDeleteAsRepeat:(BOOL)repeat executionContext:(id)context;	// 0x2f6515fd
- (void)handleDeleteWithExecutionContext:(id)executionContext;	// 0x2f651679
- (BOOL)handleDoubleSpacePeriodForInputString:(id)inputString afterSpace:(BOOL)space elapsedTime:(double)time;	// 0x2f523329
- (BOOL)handleKeyCommand:(id)command repeatOkay:(BOOL *)okay;	// 0x2f4ed3b9
- (void)handleKeyEvent:(id)event;	// 0x2f4ed185
- (void)handleKeyEvent:(id)event executionContext:(id)context;	// 0x2f659421
- (void)handleKeyWithString:(id)string forKeyEvent:(id)keyEvent executionContext:(id)context;	// 0x2f659b81
- (void)handleKeyboardInput:(id)input executionContext:(id)context;	// 0x2f64fecd
- (void)handleObserverCallback;	// 0x2f4eaf51
- (void)handleReplyToGenerateAutocorrectionWithTask:(id)task executionContext:(id)context;	// 0x2f650865
- (void)handleReplyToGenerateCandidatesAsynchronouslyWithTask:(id)task;	// 0x2f650551
- (void)handleReplyToGenerateReplacementsForStringWithTask:(id)task executionContext:(id)context;	// 0x2f650ced
- (void)handleReplyToHandleAcceptedCandidateWithTask:(id)task executionContext:(id)context;	// 0x2f650aa1
- (void)handleReplyToHandleKeyboardInputWithTask:(id)task executionContext:(id)context;	// 0x2f6501d1
- (void)handleReplyToPerformHitTestWithTask:(id)task executionContext:(id)context;	// 0x2f651075
- (void)handleReplyToSyncToKeyboardStateWithTask:(id)task executionContext:(id)context;	// 0x2f64fea9
- (void)handleStringInput:(id)input withFlags:(unsigned)flags executionContext:(id)context;	// 0x2f651a3d
- (void)hardwareAutoRepeat:(id)repeat;	// 0x2f658705
- (void)hardwareKeyboardAvailabilityChanged;	// 0x2f65866d
// declared property getter: - (BOOL)hardwareKeyboardIsSeen;	// 0x2f65a6e1
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x2f64dbb5
- (BOOL)hasAutoRepeat;	// 0x2f65a885
- (BOOL)hasEditableMarkedText;	// 0x2f4c2205
- (BOOL)hasMarkedText;	// 0x2f4c2255
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x2f64d4fd
- (void)hideKeyboard;	// 0x2f658841
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x2f4eb561
// declared property getter: - (id)inputDelegate;	// 0x2f4bfb75
- (id)inputEventForInputString:(id)inputString;	// 0x2f651d59
// declared property getter: - (id)inputManager;	// 0x2f4bfe85
// declared property getter: - (id)inputManagerState;	// 0x2f65a5a1
- (id)inputModeFirstPreference;	// 0x2f64d765
// converted property getter: - (id)inputModeLastChosen;	// 0x2f64e4d9
- (id)inputModeLastChosenPreference;	// 0x2f64d7b5
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x2f64d91d
- (id)inputModeLastUsedPreference;	// 0x2f4bece5
- (id)inputModePreference;	// 0x2f4be979
- (id)inputOverlayContainer;	// 0x2f52a0a5
- (id)inputStringFromPhraseBoundary;	// 0x2f64f68d
- (void)insertText:(id)text;	// 0x2f51d9a5
- (void)insertTextAfterSelection:(id)selection;	// 0x2f651b09
- (void)installRecorder;	// 0x2f4c06f9
- (void)installTypology;	// 0x2f4c07b5
- (int)interfaceOrientation;	// 0x2f4dda39
- (BOOL)isAllowedInputMode:(id)mode;	// 0x2f4bed75
- (BOOL)isAutoDeleteActive;	// 0x2f65a9c9
- (BOOL)isAutoFillMode;	// 0x2f52c069
- (BOOL)isAutoShifted;	// 0x2f4c5885
- (BOOL)isDesiredInputMode:(id)mode;	// 0x2f4c2005
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x2f4bfd21
// converted property getter: - (BOOL)isLongPress;	// 0x2f51d379
- (BOOL)isMinimized;	// 0x2f4bff4d
// converted property getter: - (BOOL)isShiftLocked;	// 0x2f4cb885
- (BOOL)isShifted;	// 0x2f4eb205
- (BOOL)isUsingDictationLayout;	// 0x2f65acb1
- (BOOL)isValidKeyInput:(id)input;	// 0x2f4ee5d5
- (void)jumpToCompositions;	// 0x2f654c91
- (void)keyActivated;	// 0x2f6515e5
- (void)keyDeactivated;	// 0x2f6515f5
// declared property getter: - (id)keyboardAlertView;	// 0x2f55cd71
- (void)keyboardDidHide:(id)keyboard;	// 0x2f51d16d
- (BOOL)keyboardDrawsOpaque;	// 0x2f519851
- (BOOL)keyboardRecordingEnabled;	// 0x2f4c0739
- (BOOL)keyboardsExpandedPreference;	// 0x2f64d61d
// declared property getter: - (id)lastUsedInputMode;	// 0x2f65a661
- (void)launchTypologyApplication;	// 0x2f65aacd
// declared property getter: - (id)layoutForKeyHitTest;	// 0x2f64c715
- (void)layoutHasChanged;	// 0x2f55aae5
- (id)layoutState;	// 0x2f64c485
// declared property getter: - (id)legacyInputDelegate;	// 0x2f4c29d5
- (void)logHandwritingData;	// 0x2f65aa65
- (void)longPressAction;	// 0x2f6585f9
- (id)markedText;	// 0x2f64f575
// converted property getter: - (id)markedTextOverlay;	// 0x2f64f5e5
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x2f64cfd1
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x2f653005
- (void)moveSelectionToEndOfWord;	// 0x2f65351d
- (BOOL)needsKeyHitTestResults;	// 0x2f65a40d
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x2f655d99
- (BOOL)nextCharacterIsWordCharacter;	// 0x2f653399
// declared property getter: - (id)nextInputModeToUse;	// 0x2f65a671
- (BOOL)noContent;	// 0x2f51ee1d
- (void)notifyShiftState;	// 0x2f4c2d85
- (void)performHitTestForTouchEvent:(id)touchEvent keyCodeHandler:(id)handler executionContext:(id)context;	// 0x2f650db1
- (void)performOperations:(id)operations;	// 0x2f651349
- (BOOL)performanceLoggingPreference;	// 0x2f4daa2d
// converted property getter: - (unsigned)phraseBoundary;	// 0x2f652f4d
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x2f4dd71d
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x2f4eb225
- (void)prepareForGeometryChange;	// 0x2f4cee81
- (void)prepareForSelectionChange;	// 0x2f4e37f1
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x2f64e4e9
// declared property getter: - (id)privateInputDelegate;	// 0x2f4bd929
// declared property getter: - (BOOL)receivedCandidatesInCurrentInputMode;	// 0x2f65a691
- (void)recomputeActiveInputModes;	// 0x2f651401
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x2f4c1ce5
// declared property getter: - (id)recorder;	// 0x2f4c05d5
- (void)refreshKeyboardState;	// 0x2f64c5e5
- (void)refreshRivenPreferences;	// 0x2f4be671
- (void)releaseInputManager;	// 0x2f6512c5
- (void)releaseInputManagerIfInactive;	// 0x2f651315
- (void)releaseSuppressUpdateCandidateView;	// 0x2f4db145
- (void)remoteControlEvent:(id)event;	// 0x2f65a275
- (void)removeAllDynamicDictionaries;	// 0x2f651095
- (void)removeAutocorrectPrompt;	// 0x2f4bfb9d
- (void)removeAutocorrection;	// 0x2f6540a1
- (void)removeFromSuperview;	// 0x2f55ccd9
- (void)replaceText:(id)text;	// 0x2f6551e5
- (id)replyHandlerForGenerateAutocorrectionWithExecutionContext:(id)executionContext;	// 0x2f6506ed
- (id)replyHandlerForGenerateCandidatesAsynchronouslyWithSelectedCandidate:(id)selectedCandidate;	// 0x2f65039d
- (id)replyHandlerForGenerateReplacementsForStringWithCandidatesHandler:(id)candidatesHandler executionContext:(id)context;	// 0x2f650b41
- (id)replyHandlerForHandleAcceptedCandidateWithExecutionContext:(id)executionContext;	// 0x2f650929
- (id)replyHandlerForHandleKeyboardInputWithExecutionContext:(id)executionContext;	// 0x2f650019
- (id)replyHandlerForPerformHitTestForTouchEventWithKeyCodeHandler:(id)keyCodeHandler executionContext:(id)context;	// 0x2f650e51
- (id)replyHandlerForSyncToKeyboardStateWithExecutionContext:(id)executionContext;	// 0x2f64fd31
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x2f655e45
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x2f4c6ab9
- (id)returnKeyDisplayName;	// 0x2f4cd481
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x2f4cd461
- (int)returnKeyType;	// 0x2f4cd4fd
- (void)revealHiddenCandidates;	// 0x2f654cd9
// declared property getter: - (BOOL)rivenSplitLock;	// 0x2f64cf41
- (void)saveInputModesPreference:(id)preference;	// 0x2f64d729
- (void)scheduleReplacementsAfterDeletionToEndOfWord;	// 0x2f653689
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x2f6553a1
- (id)searchStringForMarkedText;	// 0x2f64f655
- (void)selectionDidChange:(id)selection;	// 0x2f4e45bd
- (BOOL)selectionIsEndOfWord;	// 0x2f653419
- (void)selectionScrolling:(id)scrolling;	// 0x2f64c7c9
- (id)selectionView;	// 0x2f4c2795
- (void)selectionWillChange:(id)selection;	// 0x2f4e37b1
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x2f4e46d5
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x2f4c0425
- (void)setAutocorrection:(id)autocorrection;	// 0x2f4bf341
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x2f64d685
- (void)setCandidateList:(id)list updateCandidateView:(BOOL)view;	// 0x2f655951
// declared property setter: - (void)setCandidateLogger:(id)logger;	// 0x2f65a711
- (void)setCandidates:(id)candidates;	// 0x2f4bf371
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x2f4c2765
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x2f4c27f1
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x2f64ec25
- (void)setChanged;	// 0x2f4ea991
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x2f4c1799
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x2f65a6c1
- (void)setCorrectionLearningAllowed:(BOOL)allowed;	// 0x2f64e6e5
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x2f4c05e9
- (void)setDefaultTextInputTraits:(id)traits;	// 0x2f4ced65
// declared property setter: - (void)setDeferredDidSetDelegateAction:(id)setDelegateAction;	// 0x2f65a621
// declared property setter: - (void)setDelayedCandidateRequest:(id)request;	// 0x2f65a601
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x2f4c0ca9
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x2f4c0cc1
// declared property setter: - (void)setExternalTask:(id)task;	// 0x2f65a591
- (void)setFrame:(CGRect)frame;	// 0x2f4bd635
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x2f4c0975
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x2f4ceff9
// declared property setter: - (void)setHardwareKeyboardIsSeen:(BOOL)seen;	// 0x2f64c355
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x2f64dbed
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x2f4ed2ad
- (void)setInSplitKeyboardMode:(id)splitKeyboardMode;	// 0x2f64cfd9
- (void)setInitialDirection;	// 0x2f4c281d
- (void)setInputManagerFromInputMode:(id)inputMode;	// 0x2f651159
// declared property setter: - (void)setInputManagerState:(id)state;	// 0x2f65a5b1
- (void)setInputMode:(id)mode;	// 0x2f4bee81
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x2f4bee95
- (void)setInputModeFromPreferences;	// 0x2f4bea89
- (void)setInputModeLastChosenPreference;	// 0x2f64d811
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x2f64e48d
- (void)setInputModeToNextInPreferredList;	// 0x2f64e2e1
- (void)setInputPoint:(CGPoint)point;	// 0x2f4ec491
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x2f55cd81
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x2f55d209
// declared property setter: - (void)setLayoutForKeyHitTest:(id)keyHitTest;	// 0x2f64c735
- (void)setMarkedText:(id)text selectedRange:(NSRange)range inputString:(id)string;	// 0x2f64f269
// declared property setter: - (void)setNextInputModeToUse:(id)use;	// 0x2f65a681
- (void)setOrientation;	// 0x2f4bd6e5
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x2f652ea1
- (void)setPreviousInputString:(id)string;	// 0x2f4ea735
// declared property setter: - (void)setReceivedCandidatesInCurrentInputMode:(BOOL)currentInputMode;	// 0x2f65a6a1
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x2f55ceb1
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x2f4c19a9
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x2f64cf75
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x2f64f77d
- (void)setShift:(BOOL)shift;	// 0x2f4ea809
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x2f4ea81d
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x2f651471
- (void)setShiftLockedForced:(BOOL)forced;	// 0x2f6514b1
- (void)setShiftNeedsUpdate;	// 0x2f4ea8b9
- (void)setShiftOffIfNeeded;	// 0x2f4ea779
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x2f4ea971
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x2f65a651
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x2f4c382d
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x2f64dba5
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x2f65a631
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x2f4cdea9
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x2f55ad25
// declared property setter: - (void)setSoftwareKeyboardShownByTouch:(BOOL)touch;	// 0x2f64c3d5
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x2f65abc5
- (void)setSplitProgress:(float)progress;	// 0x2f64cff9
- (void)setTextInputChangesIgnored:(BOOL)ignored;	// 0x2f65aca1
// declared property setter: - (void)setTouchEventWaitingForKeyInputEvent:(id)keyInputEvent;	// 0x2f65a5e1
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x2f55cef1
// converted property setter: - (void)setUserSelectedCurrentCandidate:(BOOL)candidate;	// 0x2f654a19
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x2f4cc989
- (BOOL)shiftLockPreference;	// 0x2f4be8fd
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x2f6514dd
- (BOOL)shouldAcceptCandidate:(id)candidate beforeInputString:(id)string;	// 0x2f651e81
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x2f65314d
- (BOOL)shouldIgnoreCandidateSet:(id)set documentOperation:(id)operation;	// 0x2f655ae5
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x2f65a641
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x2f4cdd79
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x2f51d8c9
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x2f4c214d
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x2f64df79
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x2f505dd1
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x2f64e171
- (void)showKeyboard;	// 0x2f6588ed
- (void)showKeyboardIfNeeded;	// 0x2f65a211
- (void)showNextCandidates;	// 0x2f654c31
- (void)showNextPage;	// 0x2f654c71
- (void)showPreviousCandidate;	// 0x2f654c51
// declared property getter: - (BOOL)showsCandidateBar;	// 0x2f4c0bc9
// declared property getter: - (BOOL)showsCandidateInline;	// 0x2f55c6b9
- (void)skipHitTestForTouchEvent:(id)touchEvent;	// 0x2f650d0d
- (void)skipHitTestForTouchEvent:(id)touchEvent delayed:(BOOL)delayed;	// 0x2f650d89
// declared property getter: - (BOOL)softwareKeyboardShownByTouch;	// 0x2f65a6f1
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x2f4ce69d
- (void)startAutoDeleteTimer;	// 0x2f658489
- (void)startCaretBlinkIfNeeded;	// 0x2f65a2b9
- (void)startKeyboardRecording;	// 0x2f764f65
- (void)stopAutoDelete;	// 0x2f4c1675
- (void)stopKeyboardRecording;	// 0x2f765065
- (void)storeDelegateConformance;	// 0x2f4c153d
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x2f4eabe5
- (BOOL)suppliesCompletions;	// 0x2f651549
- (BOOL)supportsNumberKeySelection;	// 0x2f6515bd
- (BOOL)swipeToTabPreference;	// 0x2f4c37f9
- (void)syncInputManagerToKeyboardState;	// 0x2f64fbfd
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)executionContext;	// 0x2f64fc89
- (void)takeTextInputTraitsFromDelegate;	// 0x2f4bd7c1
// declared property getter: - (id)taskQueue;	// 0x2f64fbed
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x2f65a9a5
- (void)textChanged:(id)changed;	// 0x2f4ea51d
- (void)textDidChange:(id)text;	// 0x2f4ea50d
- (void)textFrameChanged:(id)changed;	// 0x2f4eeb91
- (int)textInputChangingCount;	// 0x2f65a995
- (id)textInputTraits;	// 0x2f4c315d
- (void)textWillChange:(id)text;	// 0x2f4ea4dd
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x2f4ec64d
- (void)timeMark:(unsigned)mark;	// 0x2f4ec4a9
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x2f4ec37d
- (void)toggleShift;	// 0x2f651445
- (void)toggleSoftwareKeyboard;	// 0x2f65a15d
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x2f657e81
- (void)touchAutocorrectPromptTimer;	// 0x2f4cce8d
// declared property getter: - (id)touchEventWaitingForKeyInputEvent;	// 0x2f65a5d1
- (void)touchLongPressTimer;	// 0x2f4ec275
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x2f4ec28d
- (void)trackUsageForAcceptedAutocorrection:(id)acceptedAutocorrection promptWasShowing:(BOOL)showing;	// 0x2f575979
- (void)trackUsageForPromptedCorrection:(id)promptedCorrection inputString:(id)string previousPrompt:(id)prompt;	// 0x2f65a439
- (BOOL)typologyEnabled;	// 0x2f4c08d1
// declared property getter: - (id)typologyRecorder;	// 0x2f4bff01
- (void)unmarkText;	// 0x2f64f3cd
- (void)unmarkText:(id)text;	// 0x2f64f451
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x2f4bf631
- (void)updateAutocorrectPromptAction;	// 0x2f4dd4ed
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x2f657529
- (void)updateCandidateDisplay;	// 0x2f4bf4c1
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)candidateSet documentOperation:(id)operation;	// 0x2f655b7d
- (void)updateChangeTimeAndIncrementCount;	// 0x2f4ee7a1
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned long)character;	// 0x2f651e51
- (void)updateDoubleSpacePeriodStateForString:(id)string;	// 0x2f51dd8d
- (void)updateForChangedSelection;	// 0x2f4c219d
- (void)updateForChangedSelectionWithExecutionContext:(id)executionContext;	// 0x2f64f801
- (void)updateFromTextInputTraits;	// 0x2f65a899
- (void)updateInputManagerAutocapitalizationType;	// 0x2f4be871
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x2f64dead
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x2f64dc95
- (void)updateKeyboardConfigurations;	// 0x2f656781
- (void)updateKeyboardEventsLagging:(id)lagging;	// 0x2f4ed221
- (void)updateLastUsedInputMode:(id)mode;	// 0x2f4ee655
- (void)updateLayout;	// 0x2f4bff89
- (void)updateLayoutAndSetShift;	// 0x2f6531c5
- (void)updateLayoutIfNeeded;	// 0x2f4cf009
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x2f64e5a9
- (void)updateObserverState;	// 0x2f4ea8dd
- (void)updateReturnKey;	// 0x2f51dd75
- (void)updateReturnKey:(BOOL)key;	// 0x2f4cd249
- (void)updateShiftState;	// 0x2f4c2ac9
- (void)updateTextCandidateView;	// 0x2f656949
// converted property getter: - (BOOL)userSelectedCurrentCandidate;	// 0x2f6549f5
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x2f6514ed
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;	// 0x2f653f79
@end

