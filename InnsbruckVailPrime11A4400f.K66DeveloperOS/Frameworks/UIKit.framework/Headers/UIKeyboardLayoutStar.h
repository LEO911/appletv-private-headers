/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardLayout.h"

@class UIKBTree, NSString, UIDelayedAction, CADisplayLink, NSMutableSet, UIKBBackgroundView, NSTimer, UIKBRenderConfig, UISwipeGestureRecognizer, NSMutableDictionary, UIKBKeyplaneView;
@protocol UIKeyboardRivenTransitionView;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout {
	UIKBTree *_keyboard;	// 124 = 0x7c
	UIKBTree *_keyplane;	// 128 = 0x80
	NSString *_keyboardName;	// 132 = 0x84
	NSString *_keyplaneName;	// 136 = 0x88
	int _appearance;	// 140 = 0x8c
	UIKBTree *_activeKey;	// 144 = 0x90
	UIKBKeyplaneView *_keyplaneView;	// 148 = 0x94
	UIKBBackgroundView *_backgroundView;	// 152 = 0x98
	double _prevTouchUpTime;	// 156 = 0x9c
	double _prevTouchDownTime;	// 164 = 0xa4
	int _prevUpActions;	// 172 = 0xac
	NSMutableDictionary *_keyboards;	// 176 = 0xb0
	NSMutableDictionary *_allKeyplaneViews;	// 180 = 0xb4
	NSMutableSet *_allKeyplaneKeycaps;	// 184 = 0xb8
	NSMutableSet *_validInputStrings;	// 188 = 0xbc
	NSString *_localizedInputKey;	// 192 = 0xc0
	CFDictionaryRef _extendedTouchInfoMap;	// 196 = 0xc4
	int _preferredTrackingChangeCount;	// 200 = 0xc8
	int _shiftTrackingChangeCount;	// 204 = 0xcc
	NSMutableSet *_accentInfo;	// 208 = 0xd0
	NSMutableSet *_hasAccents;	// 212 = 0xd4
	id _spaceTarget;	// 216 = 0xd8
	SEL _spaceAction;	// 220 = 0xdc
	SEL _spaceLongAction;	// 224 = 0xe0
	id _returnTarget;	// 228 = 0xe4
	SEL _returnAction;	// 232 = 0xe8
	SEL _returnLongAction;	// 236 = 0xec
	id _deleteTarget;	// 240 = 0xf0
	SEL _deleteAction;	// 244 = 0xf4
	SEL _deleteLongAction;	// 248 = 0xf8
	BOOL _shift;	// 252 = 0xfc
	BOOL _autoshift;	// 253 = 0xfd
	BOOL _settingShift;	// 254 = 0xfe
	BOOL _didLongPress;	// 255 = 0xff
	NSString *_preTouchKeyplaneName;	// 256 = 0x100
	BOOL _revertKeyplaneAfterTouch;	// 260 = 0x104
	BOOL _wasShifted;	// 261 = 0x105
	BOOL _swipeDetected;	// 262 = 0x106
	BOOL _showIntlKey;	// 263 = 0x107
	BOOL _showDictationKey;	// 264 = 0x108
	BOOL _shiftLockReady;	// 265 = 0x109
	double _shiftLockFirstTapTime;	// 268 = 0x10c
	UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 276 = 0x114
	UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 280 = 0x118
	UISwipeGestureRecognizer *_upSwipeRecognizer;	// 284 = 0x11c
	UIView<UIKeyboardRivenTransitionView> *_transitionView;	// 288 = 0x120
	float _initialSplitProgress;	// 292 = 0x124
	float _finalSplitProgress;	// 296 = 0x128
	float _initialPinchSeparation;	// 300 = 0x12c
	float _pinchSeparationValues[4];	// 304 = 0x130
	BOOL _pinchDetected;	// 320 = 0x140
	double _autoSplitLastUpdate;	// 324 = 0x144
	float _autoSplitElapsedTime;	// 332 = 0x14c
	CADisplayLink *_displayLink;	// 336 = 0x150
	BOOL _ghostKeysEnabled;	// 340 = 0x154
	UIDelayedAction *_delayedCentroidUpdate;	// 344 = 0x158
	BOOL _isRebuilding;	// 348 = 0x15c
	BOOL _preRotateShift;	// 349 = 0x15d
	NSString *_preRotateKeyplaneName;	// 352 = 0x160
	CGPoint _keyPeripheralInset;	// 356 = 0x164
	UIDelayedAction *_multitapAction;	// 364 = 0x16c
	BOOL _unshiftAfterMultitap;	// 368 = 0x170
	int _multitapCount;	// 372 = 0x174
	UIKBTree *_multitapKey;	// 376 = 0x178
	UIView *_flickPopupView;	// 380 = 0x17c
	NSMutableDictionary *_compositeImages;	// 384 = 0x180
	NSTimer *_flickPopuptimer;	// 388 = 0x184
	id _touchInfo;	// 392 = 0x188
	UIView *_dimKeyboardImageView;	// 396 = 0x18c
	BOOL _keyboardImageViewIsDim;	// 400 = 0x190
	BOOL _isOutOfBounds;	// 401 = 0x191
	int playKeyClickSoundOn;	// 404 = 0x194
	UIKBRenderConfig *_renderConfig;	// 408 = 0x198
}
@property(retain, nonatomic) UIKBTree *activeKey;	// G=0x2f51fffd; S=0x2f4c5355; @synthesize=_activeKey
@property(assign, nonatomic) BOOL autoShift;	// G=0x2f716985; S=0x2f716995; @synthesize=_autoshift
@property(assign, nonatomic) BOOL didLongPress;	// G=0x2f7169a5; S=0x2f7169b5; @synthesize=_didLongPress
@property(readonly, assign, nonatomic) UIKBTree *keyboard;	// G=0x2f570fb5; @synthesize=_keyboard
@property(copy, nonatomic) NSString *keyboardName;	// G=0x2f71694d; S=0x2f716961; @synthesize=_keyboardName
@property(readonly, assign, nonatomic) UIKBTree *keyplane;	// G=0x2f4c416d; @synthesize=_keyplane
@property(copy, nonatomic) NSString *keyplaneName;	// G=0x2f4c4181; S=0x2f4c4195; @synthesize=_keyplaneName
@property(copy, nonatomic) NSString *localizedInputKey;	// G=0x2f7169d5; S=0x2f4c4159; @synthesize=_localizedInputKey
@property(readonly, assign, nonatomic) NSString *localizedInputMode;	// G=0x2f4c410d; 
@property(readonly, assign) BOOL pinchDetected;	// G=0x2f4ce721; converted property
@property(assign, nonatomic) int playKeyClickSoundOn;	// G=0x2f7169e9; S=0x2f7169f9; @synthesize
@property(copy, nonatomic) NSString *preTouchKeyplaneName;	// G=0x2f716a09; S=0x2f716a1d; @synthesize=_preTouchKeyplaneName
@property(retain, nonatomic) UIKBRenderConfig *renderConfig;	// G=0x2f716a2d; S=0x2f70b6d1; @synthesize=_renderConfig
@property(readonly, assign, nonatomic, getter=isRotating) BOOL rotating;	// G=0x2f4cc8d9; 
@property(assign, nonatomic) BOOL shift;	// G=0x2f716975; S=0x2f4ce1f9; @synthesize=_shift
@property(readonly, assign, nonatomic) BOOL showDictationKey;	// G=0x2f4c9fa5; @synthesize=_showDictationKey
@property(assign, nonatomic) BOOL showIntlKey;	// G=0x2f4c9f95; S=0x2f7169c5; @synthesize=_showIntlKey
+ (id)keyboardFromFactoryWithName:(id)name screen:(id)screen;	// 0x2f70a505
+ (CGSize)keyboardSizeForInputMode:(id)inputMode screenTraits:(id)traits;	// 0x2f70a6bd
+ (id)keyboardWithName:(id)name screen:(id)screen;	// 0x2f70a571
- (id)initWithFrame:(CGRect)frame;	// 0x2f4c3199
- (void)_autoSplit:(id)split;	// 0x2f70fcb1
- (id)_keyplaneVariantsKeyForString:(id)string;	// 0x2f70d9fd
- (void)activateCompositeKey:(id)key direction:(int)direction flickString:(id)string popupInfo:(id)info;	// 0x2f718769
- (id)activationIndicatorView;	// 0x2f70e345
// declared property getter: - (id)activeKey;	// 0x2f51fffd
- (id)activeTouchForInteraction:(int)interaction;	// 0x2f7153e1
- (CGPoint)applyError:(CGPoint)error toKey:(id)key;	// 0x2f7161e5
// declared property getter: - (BOOL)autoShift;	// 0x2f716985
- (id)baseKeyForString:(id)string;	// 0x2f715e55
- (id)cacheIdentifierForKeyplaneNamed:(id)keyplaneNamed;	// 0x2f70bb65
- (id)cacheTokenForKeyplane:(id)keyplane;	// 0x2f70bbf5
- (CGImageRef)cachedCompositeImageWithCacheKey:(id)cacheKey;	// 0x2f70b331
- (BOOL)canForceTouchCommit:(id)commit;	// 0x2f711621
- (BOOL)canMultitap;	// 0x2f70cdf9
- (BOOL)canProduceString:(id)string;	// 0x2f70ad41
- (BOOL)canReuseKeyplaneView;	// 0x2f4f60e1
- (void)cancelDelayedCentroidUpdate;	// 0x2f712b9d
- (void)cancelMultitapTimer;	// 0x2f70cff5
- (void)cancelTouchIfNecessaryForInfo:(id)info;	// 0x2f4eecfd
- (id)candidateList;	// 0x2f4c5115
- (void)changeToKeyplane:(id)keyplane;	// 0x2f570ff1
- (void)clearAllTouchInfo;	// 0x2f4c5819
- (void)clearHandwritingStrokesIfNeededAndNotify:(BOOL)notify;	// 0x2f70cae1
- (void)clearInfoForTouch:(id)touch;	// 0x2f4eecb1
- (void)clearUnusedObjects:(BOOL)objects;	// 0x2f55c251
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)key withActions:(unsigned)actions executionContext:(id)context;	// 0x2f710eb1
- (void)completeDeleteActionForTouchDownWithActions:(unsigned)actions executionContext:(id)context;	// 0x2f7114a9
- (void)completeHitTestForTouchDown:(id)touchDown executionContext:(id)context;	// 0x2f7103c5
- (void)completeHitTestForTouchDragged:(id)touchDragged hitKey:(id)key;	// 0x2f712205
- (void)completeRetestForTouchUp:(id)touchUp timestamp:(double)timestamp interval:(double)interval executionContext:(id)context;	// 0x2f713701
- (void)completeSendStringActionForTouchDownWithKey:(id)key withActions:(unsigned)actions executionContext:(id)context;	// 0x2f711009
- (void)completeSendStringActionForTouchUp:(id)touchUp withActions:(int)actions timestamp:(double)timestamp interval:(double)interval didLongPress:(BOOL)press prevActions:(int)actions6;	// 0x2f7144e5
- (id)compositeImageForKey:(id)key;	// 0x2f717939
- (id)createKeyEventForStringAction:(id)stringAction forKey:(id)key isPopupVariant:(BOOL)variant isMultitap:(BOOL)multitap isFlick:(BOOL)flick;	// 0x2f70c8e1
- (id)currentKeyplane;	// 0x2f71692d
- (id)currentKeyplaneView;	// 0x2f71693d
- (void)deactivateActiveKeys;	// 0x2f4efaf9
- (void)deactivateActiveKeysClearingTouchInfo:(BOOL)info clearingDimming:(BOOL)dimming;	// 0x2f4c5259
- (void)dealloc;	// 0x2f55c8a5
- (id)defaultKeyplaneForKeyplane:(id)keyplane;	// 0x2f70a7f5
- (id)defaultNameForKeyplaneName:(id)keyplaneName;	// 0x2f4c5365
- (void)deleteActionWithExecutionContext:(id)executionContext;	// 0x2f70cc99
- (void)deleteHandwritingStrokesAtIndexes:(id)indexes;	// 0x2f70cb75
- (void)didClearInput;	// 0x2f4ea615
// declared property getter: - (BOOL)didLongPress;	// 0x2f7169a5
- (void)didRotate;	// 0x2f715a55
- (int)displayTypeHintForMoreKey;	// 0x2f4c8b25
- (int)displayTypeHintForShiftKey;	// 0x2f4c89a5
- (unsigned)downActionFlagsForKey:(id)key;	// 0x2f4ebf7d
- (void)downActionShiftWithKey:(id)key;	// 0x2f7156d1
- (CGSize)dragGestureSize;	// 0x2f70a849
- (void)fadeMenu:(id)menu forKey:(id)key;	// 0x2f71083d
- (void)fadeMenu:(id)menu forKey:(id)key withDelay:(float)delay;	// 0x2f71081d
- (void)fadeWithInvocation:(id)invocation;	// 0x2f7167d1
- (void)finishSplit;	// 0x2f70f575
- (void)finishSplitTransition;	// 0x2f70f7bd
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x2f70f8d9
- (id)flickPopupStringForKey:(id)key withString:(id)string;	// 0x2f7170a9
- (id)flickStringForInputKey:(id)inputKey direction:(int)direction;	// 0x2f7170e5
- (void)flushKeyCache:(id)cache;	// 0x2f70a359
- (CGRect)frameForKeyWithRepresentedString:(id)representedString;	// 0x2f716b85
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x2f70a9f1
- (CGRect)frameForKeylayoutName:(id)keylayoutName onKeyplaneName:(id)name;	// 0x2f70a9a1
- (CGRect)frameForLastKeyWithRepresentedString:(id)representedString;	// 0x2f716df5
- (id)generateInfoForTouch:(id)touch;	// 0x2f4ebb91
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x2f71514d
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x2f715039
- (id)getFlickCompositeImageForKey:(id)key direction:(int)direction rect:(CGRect)rect;	// 0x2f717b95
- (id)getPopupBackgroundImageForKey:(id)key direction:(int)direction popupInfo:(id)info rect:(CGRect)rect;	// 0x2f717959
- (void)handleDelayedCentroidUpdate;	// 0x2f712bd9
- (void)handleDismissFlickView;	// 0x2f718599
- (void)handleDismissFlickView:(id)view;	// 0x2f4efe35
- (void)handleFlick:(id)flick;	// 0x2f7174fd
- (void)handleMultitapTimerFired;	// 0x2f70cefd
- (void)handlePopupView;	// 0x2f71846d
- (void)handlePopupView:(id)view;	// 0x2f718381
- (SEL)handlerForNotification:(id)notification;	// 0x2f70a4a5
- (BOOL)handwritingPlane;	// 0x2f4ea679
- (BOOL)hasAccentKey;	// 0x2f70cd9d
- (BOOL)hasCandidateKeys;	// 0x2f70cd69
- (void)hideMenu:(id)menu forKey:(id)key;	// 0x2f710809
- (float)hitBuffer;	// 0x2f4dd909
- (BOOL)ignoresShiftState;	// 0x2f51d96d
- (id)infoForTouch:(id)touch;	// 0x2f4ec8a5
- (id)initialKeyplaneNameWithKBStarName:(id)kbstarName;	// 0x2f70beed
- (void)installGestureRecognizers;	// 0x2f4c352d
- (float)interpretPinchSeparationValues;	// 0x2f70f1a1
- (void)interpretTouchesForSplit;	// 0x2f70f911
- (BOOL)isAlphabeticPlane;	// 0x2f7159cd
- (BOOL)isLongPressedKey:(id)key;	// 0x2f4ed0b1
// declared property getter: - (BOOL)isRotating;	// 0x2f4cc8d9
- (BOOL)isShiftKeyBeingHeld;	// 0x2f4ce191
- (BOOL)isShiftKeyPlaneChooser;	// 0x2f4c5195
- (BOOL)keyHasAccentedVariants:(id)variants;	// 0x2f715505
- (id)keyHitTest:(CGPoint)test;	// 0x2f4ebc95
- (id)keyHitTestClosestToPoint:(CGPoint)point;	// 0x2f51d1fd
- (id)keyHitTestContainingPoint:(CGPoint)point;	// 0x2f4eb2a5
- (id)keyHitTestWithoutCharging:(CGPoint)charging;	// 0x2f4ebd05
- (id)keyWithRepresentedString:(id)representedString;	// 0x2f716a3d
// declared property getter: - (id)keyboard;	// 0x2f570fb5
// declared property getter: - (id)keyboardName;	// 0x2f71694d
- (int)keycodeForKey:(id)key;	// 0x2f4eca91
// declared property getter: - (id)keyplane;	// 0x2f4c416d
- (id)keyplaneForKey:(id)key;	// 0x2f7161b9
// declared property getter: - (id)keyplaneName;	// 0x2f4c4181
- (id)keyplaneNamed:(id)named;	// 0x2f570fc5
- (double)lastTouchUpTimestamp;	// 0x2f70ad29
// declared property getter: - (id)localizedInputKey;	// 0x2f7169d5
// declared property getter: - (id)localizedInputMode;	// 0x2f4c410d
- (void)logHandwritingData;	// 0x2f70cc09
- (void)longPressAction;	// 0x2f70d431
- (id)multitapCompleteKey;	// 0x2f70cdd1
- (void)multitapExpired;	// 0x2f70ceb9
- (void)multitapInterrupted;	// 0x2f70ce15
- (id)overlayCharacterImageForKey:(id)key direction:(int)direction rect:(CGRect)rect flickString:(id)string popupInfo:(id)info;	// 0x2f717c15
- (void)performHitTestForTouchInfo:(id)touchInfo touchStage:(int)stage hitKeyHandler:(id)handler executionContext:(id)context;	// 0x2f70c141
- (BOOL)performReturnAction;	// 0x2f712b21
- (BOOL)performSpaceAction;	// 0x2f712b5d
// converted property getter: - (BOOL)pinchDetected;	// 0x2f4ce721
- (BOOL)pinchSplitGestureEnabled;	// 0x2f70f8f9
- (void)playKeyClickSound;	// 0x2f71066d
// declared property getter: - (int)playKeyClickSoundOn;	// 0x2f7169e9
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x2f4eb869
- (void)populateFlickPopupsForKey:(id)key;	// 0x2f7171dd
- (id)popupKeyViews;	// 0x2f716f49
// declared property getter: - (id)preTouchKeyplaneName;	// 0x2f716a09
- (void)prepareForSplitTransition;	// 0x2f70f2e1
- (void)rebuildSplitTransitionView;	// 0x2f70b31d
- (void)rebuildSplitTransitionViewFromKeyplane:(id)keyplane toKeyplane:(id)keyplane2;	// 0x2f70b001
- (void)refreshForDictationAvailablityDidChange;	// 0x2f4cd1a9
- (void)refreshForRivenPreferences;	// 0x2f70aaed
- (void)refreshGhostKeyState;	// 0x2f4ec8d1
- (void)removeFromSuperview;	// 0x2f55c7f5
// declared property getter: - (id)renderConfig;	// 0x2f716a2d
- (CGImageRef)renderedImageWithStateFallbacksForToken:(id)token;	// 0x2f70b4e1
- (CGImageRef)renderedImageWithToken:(id)token;	// 0x2f70b555
- (CGImageRef)renderedKeyplaneWithToken:(id)token split:(BOOL)split;	// 0x2f70b69d
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x2f4c6a5d
- (void)restoreDefaultsForAllKeys;	// 0x2f4cca19
- (void)restoreDefaultsForKey:(id)key;	// 0x2f4cca61
- (id)scriptingInfoWithChildren;	// 0x2f715b41
- (void)setAction:(SEL)action forKey:(id)key;	// 0x2f70d309
// declared property setter: - (void)setActiveKey:(id)key;	// 0x2f4c5355
// declared property setter: - (void)setAutoShift:(BOOL)shift;	// 0x2f716995
- (void)setAutoshift:(BOOL)autoshift;	// 0x2f4ce5bd
- (void)setCompositeImage:(id)image forKey:(id)key;	// 0x2f71790d
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)currentLocaleOnKeyplane;	// 0x2f4c9aed
// declared property setter: - (void)setDidLongPress:(BOOL)longPress;	// 0x2f7169b5
- (void)setKeyForTouchInfo:(id)touchInfo key:(id)key;	// 0x2f717095
- (void)setKeyboardAppearance:(int)appearance;	// 0x2f4c5431
- (void)setKeyboardDim:(BOOL)dim;	// 0x2f4efea1
- (void)setKeyboardDim:(BOOL)dim amount:(float)amount withDuration:(float)duration;	// 0x2f4eff95
// declared property setter: - (void)setKeyboardName:(id)name;	// 0x2f716961
- (void)setKeyboardName:(id)name appearance:(int)appearance;	// 0x2f4c3c15
// declared property setter: - (void)setKeyplaneName:(id)name;	// 0x2f4c4195
- (void)setLabel:(id)label forKey:(id)key;	// 0x2f4ccb15
- (void)setLayoutTag:(id)tag;	// 0x2f70d129
// declared property setter: - (void)setLocalizedInputKey:(id)key;	// 0x2f4c4159
- (void)setLongPressAction:(SEL)action forKey:(id)key;	// 0x2f70d34d
// declared property setter: - (void)setPlayKeyClickSoundOn:(int)on;	// 0x2f7169f9
// declared property setter: - (void)setPreTouchKeyplaneName:(id)name;	// 0x2f716a1d
// declared property setter: - (void)setRenderConfig:(id)config;	// 0x2f70b6d1
- (void)setReturnKeyEnabled:(BOOL)enabled withDisplayName:(id)displayName withType:(int)type;	// 0x2f4cd579
// declared property setter: - (void)setShift:(BOOL)shift;	// 0x2f4ce1f9
// declared property setter: - (void)setShowIntlKey:(BOOL)key;	// 0x2f7169c5
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x2f70fe21
- (void)setSplitProgress:(float)progress;	// 0x2f70fc59
- (void)setState:(int)state forKey:(id)key;	// 0x2f4ca4ed
- (void)setTarget:(id)target forKey:(id)key;	// 0x2f70d2c5
// declared property getter: - (BOOL)shift;	// 0x2f716975
- (BOOL)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned)actions;	// 0x2f710e69
- (BOOL)shouldHitTestKey:(id)key;	// 0x2f4cdb35
- (BOOL)shouldPreventInputManagerHitTestingForKey:(id)key;	// 0x2f4ebeed
- (BOOL)shouldRetestKey:(id)key withKeyplane:(id)keyplane;	// 0x2f4ec9e1
- (BOOL)shouldSendTouchUpToInputManager:(id)inputManager;	// 0x2f713649
- (BOOL)shouldShowDictationKey;	// 0x2f4c6d95
- (BOOL)shouldShowIndicator;	// 0x2f70e2e1
- (BOOL)shouldSkipResponseToGlobeKey:(id)globeKey atPoint:(CGPoint)point;	// 0x2f710711
// declared property getter: - (BOOL)showDictationKey;	// 0x2f4c9fa5
- (void)showFlickView:(int)view withKey:(id)key flickString:(id)string;	// 0x2f717849
// declared property getter: - (BOOL)showIntlKey;	// 0x2f4c9f95
- (void)showKeyboardWithInputTraits:(id)inputTraits screenTraits:(id)traits splitTraits:(id)traits3;	// 0x2f70bd59
- (void)showMenu:(id)menu forKey:(id)key;	// 0x2f70d391
- (void)showPopupVariantsForKey:(id)key;	// 0x2f70da41
- (void)showPopupView:(int)view withKey:(id)key popupInfo:(id)info force:(BOOL)force;	// 0x2f718671
- (void)showSplitTransitionView:(BOOL)view;	// 0x2f70f3c9
- (id)simulateTouch:(CGPoint)touch;	// 0x2f716449
- (id)simulateTouchForCharacter:(id)character errorVector:(CGPoint)vector shouldTypeVariants:(BOOL)variants baseKeyForVariants:(BOOL)variants4;	// 0x2f716579
- (id)splitNameForKeyplane:(id)keyplane;	// 0x2f70a79d
- (id)splitNameForKeyplaneName:(id)keyplaneName;	// 0x2f70a74d
- (int)stateForDictationKey:(id)dictationKey;	// 0x2f70b94d
- (int)stateForKey:(id)key;	// 0x2f70bb45
- (int)stateForKeyplaneSwitchKey:(id)keyplaneSwitchKey;	// 0x2f70b9c5
- (int)stateForMultitapReverseKey:(id)multitapReverseKey;	// 0x2f70b8cd
- (int)stateForShiftKey:(id)shiftKey;	// 0x2f4cb715
- (void)swipeDetected:(id)detected;	// 0x2f7151d9
- (void)touchCancelled:(id)cancelled executionContext:(id)context;	// 0x2f714df1
- (void)touchDown:(id)down executionContext:(id)context;	// 0x2f70ffb1
- (void)touchDownWithKey:(id)key atPoint:(CGPoint)point executionContext:(id)context;	// 0x2f710851
- (void)touchDragged:(id)dragged executionContext:(id)context;	// 0x2f7116ad
- (id)touchForKey:(id)key;	// 0x2f715301
- (void)touchMultitapTimer;	// 0x2f70d031
- (void)touchUp:(id)up executionContext:(id)context;	// 0x2f712cd1
- (void)uninstallGestureRecognizers;	// 0x2f55cb09
- (unsigned)upActionFlagsForKey:(id)key;	// 0x2f4ecad9
- (void)upActionShift;	// 0x2f7158e1
- (void)updateBackgroundIfNeeded;	// 0x2f4c9ff5
- (void)updateGlobeKeyDisplayString;	// 0x2f70b7c9
- (void)updateKeyCentroids;	// 0x2f4cd835
- (void)updateKeyboardForKeyplane:(id)keyplane;	// 0x2f4c6975
- (void)updateLocalizedKeys:(BOOL)keys;	// 0x2f4c7d19
- (void)updateLocalizedKeysOnKeyplane:(id)keyplane;	// 0x2f4c7f05
- (void)updateMoreAndInternationalKeys;	// 0x2f4c6c95
- (void)updateShiftKeyState;	// 0x2f4ce331
- (void)updateTransitionWithFlags:(int)flags;	// 0x2f4cd7e1
- (BOOL)usesAutoShift;	// 0x2f4ce1bd
- (int)visualStyleForKeyboardIfSplit:(BOOL)keyboardIfSplit;	// 0x2f70aca5
- (void)willMoveToWindow:(id)window;	// 0x2f70a341
- (void)willRotate;	// 0x2f715a05
@end

