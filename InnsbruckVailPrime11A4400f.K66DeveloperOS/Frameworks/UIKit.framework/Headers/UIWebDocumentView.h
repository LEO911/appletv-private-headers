/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "_UIWebDoubleTapDelegate.h"
#import "UIWebFileUploadPanelDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UIKit-Structs.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIActionSheetDelegate.h"
#import "UIAutoscrollContainer.h"
#import "UIKeyInput.h"
#import "UITextAutoscrolling.h"
#import "UIKeyboardInput.h"
#import "UITextInputTokenizer.h"
#import "UITextInputPrivate.h"
#import "UIWebTiledView.h"
#import "UIModalViewDelegate.h"

@class UITextRange, UITapGestureRecognizer, NSDictionary, WebView, UITextPosition, DOMNode, DOMHTMLElement, WebThreadSafeUndoManager, DOMElement, CALayer, _UITextServiceSession, DOMRange, UIView, WebViewReachabilityObserver, WebHistoryItem, UIColor, _UIWebHighlightLongPressGestureRecognizer, UIImage, UITextInteractionAssistant, UITextChecker, UIPanGestureRecognizer, NSTimer, _UIWebViewportHandler, UIAutoscroll, UIWebRotatingSheet, UIWebSelectionAssistant, UIWebFileUploadPanel, NSArray, UILongPressGestureRecognizer, UITextInputTraits;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UITextInputPrivate, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate> {
	WebView *_webView;	// 112 = 0x70
	WebViewReachabilityObserver *_reachabilityObserver;	// 116 = 0x74
	id m_parentTextView;	// 120 = 0x78
	id _delegate;	// 124 = 0x7c
	id _textSuggestionDelegate;	// 128 = 0x80
	CGRect _doubleTapRect;	// 132 = 0x84
	CGRect _mainDocumentDoubleTapRect;	// 148 = 0x94
	CGPoint _scrollPoint;	// 164 = 0xa4
	CGPoint _doubleTapStartPosition;	// 172 = 0xac
	double _doubleTapStartTime;	// 180 = 0xb4
	CGSize _pendingSize;	// 188 = 0xbc
	int _orientation;	// 196 = 0xc4
	DOMHTMLElement *_standaloneEditingElement;	// 200 = 0xc8
	CGPoint _mouseDownPoint;	// 204 = 0xcc
	double _mouseDownTime;	// 212 = 0xd4
	UIAutoscroll *_autoscroll;	// 220 = 0xdc
	CFDictionaryRef _plugInViews;	// 224 = 0xe0
	int m_selectionGranularity;	// 228 = 0xe4
	CALayer *_contentLayersHostingLayer;	// 232 = 0xe8
	CALayer *_flattenedRotatingContentLayer;	// 236 = 0xec
	NSArray *_additionalSubviews;	// 240 = 0xf0
	UITextInputTraits *_traits;	// 244 = 0xf4
	id<UITextInputDelegate> _inputDelegate;	// 248 = 0xf8
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 252 = 0xfc
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 260 = 0x104
	_UIWebHighlightLongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 268 = 0x10c
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 272 = 0x110
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 276 = 0x114
	_UIWebViewportHandler *_viewportHandler;	// 328 = 0x148
	int _documentType;	// 332 = 0x14c
	float _documentScale;	// 336 = 0x150
	float _previousDocumentScale;	// 340 = 0x154
	CGSize _fixedLayoutOriginRoundingDelta;	// 344 = 0x158
	CGSize _fixedLayoutSizeRoundingDelta;	// 352 = 0x160
	unsigned _mouseDownCount;	// 360 = 0x168
	unsigned _dataDetectorTypes;	// 364 = 0x16c
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 368 = 0x170
	unsigned _webCoreNeedsDraw : 1;	// 368 = 0x170
	unsigned _ignoresFocusingMouse : 1;	// 368 = 0x170
	unsigned _ignoresKeyEvents : 1;	// 368 = 0x170
	unsigned _autoresizes : 1;	// 368 = 0x170
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 368 = 0x170
	unsigned _shouldIgnoreCustomViewport : 1;	// 368 = 0x170
	unsigned _updatingSize : 1;	// 368 = 0x170
	unsigned _scalesToFit : 1;	// 369 = 0x171
	unsigned _updatesScrollView : 1;	// 369 = 0x171
	unsigned _hasCustomScale : 1;	// 369 = 0x171
	unsigned _shouldRestoreScrollPosition : 1;	// 369 = 0x171
	unsigned _pageNeedsReset : 1;	// 369 = 0x171
	unsigned _hasScrollPoint : 1;	// 369 = 0x171
	unsigned _gesturesDisabled : 1;	// 369 = 0x171
	unsigned _doubleTapRectIsReplaced : 1;	// 369 = 0x171
	unsigned _standaloneEditableView : 1;	// 370 = 0x172
	unsigned _widgetEditingView : 1;	// 370 = 0x172
	unsigned _mouseDragged : 1;	// 370 = 0x172
	unsigned _mouseReentrancyGuard : 1;	// 370 = 0x172
	unsigned _isShowingFullScreenPlugIn : 1;	// 370 = 0x172
	unsigned _isSettingRedrawFrame : 1;	// 370 = 0x172
	unsigned _needsScrollNotifications : 1;	// 370 = 0x172
	unsigned _loadsSynchronously : 1;	// 370 = 0x172
	unsigned _mouseDown : 1;	// 371 = 0x173
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 371 = 0x173
	unsigned _geolocationDialogAllowed : 1;	// 371 = 0x173
	unsigned _usingMinimalTilesDuringLoading : 1;	// 371 = 0x173
	unsigned _sheetsCount : 2;	// 371 = 0x173
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 371 = 0x173
	unsigned _loadInProgress : 1;	// 371 = 0x173
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 372 = 0x174
	unsigned _sizeUpdatesSuspended : 1;	// 372 = 0x174
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 372 = 0x174
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 372 = 0x174
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 372 = 0x174
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 372 = 0x174
	unsigned _shouldRemoveUserStyleSheet : 1;	// 372 = 0x174
	unsigned _hasDrawnTiles : 1;	// 372 = 0x174
	unsigned _showingTextStyleOptions : 1;	// 373 = 0x175
	unsigned _subviewCachesNeedUpdate : 1;	// 373 = 0x175
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 373 = 0x175
	unsigned _inspectorSearchingForNode : 1;	// 373 = 0x175
	unsigned _previousScrollWasScrollToTop : 1;	// 373 = 0x175
	unsigned _pageIsLoadedFromPageCache : 1;	// 373 = 0x175
	unsigned _shouldSendWillShowInteractionHighlight : 1;	// 373 = 0x175
	WebThreadSafeUndoManager *_undoManager;	// 376 = 0x178
	UIWebSelectionAssistant *_webSelectionAssistant;	// 380 = 0x17c
	UITextInteractionAssistant *_textSelectionAssistant;	// 384 = 0x180
	UITextChecker *_textChecker;	// 388 = 0x184
	UIEdgeInsets _caretInsets;	// 392 = 0x188
	UIWebFileUploadPanel *_fileUploadPanel;	// 408 = 0x198
	int _selectionAffinity;	// 412 = 0x19c
	DOMElement *_dictationResultPlaceholder;	// 416 = 0x1a0
	id _dictationResultPlaceholderRemovalObserver;	// 420 = 0x1a4
	DOMRange *_rangeToRestoreAfterDictation;	// 424 = 0x1a8
	UIWebViewportConfiguration _defaultViewportConfigurations[5];	// 428 = 0x1ac
	_UITextServiceSession *_definitionSession;	// 548 = 0x224
	_UITextServiceSession *_learnSession;	// 552 = 0x228
	WebHistoryItem *_latestCommittedPageLoadHistoryItem;	// 556 = 0x22c
	BOOL _suppressesIncrementalRendering;	// 560 = 0x230
	unsigned _renderTreeSize;	// 564 = 0x234
	unsigned _renderTreeSizeThresholdForReset;	// 568 = 0x238
	UIEdgeInsets _fixedPositionContentInset;	// 572 = 0x23c
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x2f52f89d; S=0x2f68095d; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x2f72f5fd; S=0x2f72f58d; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x2f67a03d; S=0x2f67a041; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x2f4c2599; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x2f72ed75; S=0x2f45d5cd; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x2f45befd; S=0x2f4895d1; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x2f4f1869; S=0x2f48a0bd; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x2f674e91; S=0x2f674e39; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) int documentType;	// G=0x2f48a86d; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x2f6772cd; S=0x2f677289; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x2f6773e9; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(assign, nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x2f4e4225; 
@property(assign, nonatomic) UIEdgeInsets fixedPositionContentInset;	// G=0x2f67b4f1; S=0x2f676445; @synthesize=_fixedPositionContentInset
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x2f4b47d9; S=0x2f4c15c9; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x2f4f16fd; 
@property(assign) id interactionDelegate;	// G=0x2f6807e1; S=0x2f48a0cd; converted property
@property(assign, nonatomic) BOOL isSingleLineDocument;	// @dynamic
@property(assign) BOOL isStandaloneEditableView;	// G=0x2f67743d; S=0x2f51a169; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x2f6774c1; S=0x2f6774a1; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x2f674e21; S=0x2f45b92d; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x2f45c671; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x2f67ad7d; S=0x2f67ad81; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x2f50ba6d; S=0x2f67723d; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x2f67b4c1; S=0x2f67b4d1; @synthesize=_rangeToRestoreAfterDictation
@property(readonly, assign, nonatomic) unsigned renderTreeSize;	// G=0x2f67b509; @synthesize=_renderTreeSize
@property(assign, nonatomic) unsigned renderTreeSizeThresholdForReset;	// G=0x2f67b519; S=0x2f67b061; @synthesize=_renderTreeSizeThresholdForReset
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x2f4ba8f5; S=0x2f4f1db1; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x2f4ba97d; S=0x2f67afe5; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x2f67afe9; S=0x2f4e4551; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x2f4e9d1d; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x2f67584d; S=0x2f524a75; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x2f677229; S=0x2f677209; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x2f6755ad; S=0x2f67553d; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x2f677491; S=0x2f677451; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x2f67b4e1; S=0x2f524d49; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x2f678df5; S=0x2f678c75; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x2f45c645; 
@property(retain) id typingAttributes;	// G=0x2f674775; S=0x2f6748a9; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x2f4b4829; converted property
@property(assign) BOOL updatesScrollView;	// G=0x2f675ed5; S=0x2f675eb5; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x2f679f49; converted property
@property(readonly, retain) WebView *webView;	// G=0x2f45b475; converted property
+ (id)_createDefaultHighlightView;	// 0x2f514b11
+ (id)_sharedHighlightView;	// 0x2f514ad9
+ (double)getTimestamp;	// 0x2f674471
+ (BOOL)hasLandscapeOrientation;	// 0x2f48e5cd
+ (void)initialize;	// 0x2f446769
+ (Class)layerClass;	// 0x2f459e79
+ (id)standardTextViewPreferences;	// 0x2f459581
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x2f45971d
- (id)initWithFrame:(CGRect)frame;	// 0x2f488215
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x2f459889
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x2f50b6b9
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x2f52f89d
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x2f67f429
- (void)_addShortcut:(id)shortcut;	// 0x2f679a25
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x2f514d41
- (void)_applyViewportArguments:(id)arguments;	// 0x2f48ade9
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x2f6822ed
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x2f682591
- (void)_cancelLongPressGestureRecognizer;	// 0x2f514bd9
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x2f50af89
- (void)_cleanupSheet;	// 0x2f51bcc1
- (void)_clearAllConsoleMessages;	// 0x2f67742d
- (void)_clearDoubleTapRect;	// 0x2f48c229
- (id)_collectAdditionalSubviews;	// 0x2f676c35
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x2f67a381
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x2f67a649
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x2f681191
- (BOOL)_dataDetectionIsActivated;	// 0x2f48968d
- (void)_define:(id)define;	// 0x2f6798a5
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x2f677b31
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x2f45d869
- (void)_didScroll;	// 0x2f514711
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x2f674551
- (float)_documentScale;	// 0x2f50ca75
- (id)_documentUrl;	// 0x2f67affd
- (CGRect)_documentViewVisibleRect;	// 0x2f489e39
- (id)_doubleTapGestureRecognizer;	// 0x2f680949
- (void)_doubleTapRecognized:(id)recognized;	// 0x2f67f3a1
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x2f682de9
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x2f4eef35
- (void)_finishedUsingDictationPlaceholder;	// 0x2f678245
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x2f67a789
- (id)_focusedOrMainFrame;	// 0x2f45b641
- (id)_groupName;	// 0x2f5708b5
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x2f677371
- (void)_handleSingleTapZoomPostClickAtLocation:(CGPoint)location;	// 0x2f677335
- (BOOL)_handleSingleTapZoomPreClickAtLocation:(CGPoint)location;	// 0x2f6772f1
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x2f6773ad
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x2f67f5a1
- (void)_insertAttributedTextWithoutClosingTyping:(id)typing;	// 0x2f6799f5
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x2f67449d
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x2f6744b5
- (BOOL)_isDisplayingReferenceLibraryViewController;	// 0x2f6799dd
- (BOOL)_isDisplayingShortcutViewController;	// 0x2f679bdd
- (BOOL)_isInspectorSearchingForNode;	// 0x2f50cea1
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x2f52d401
- (CGRect)_lastRectForRange:(id)range;	// 0x2f52a421
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x2f489bb9
- (void)_longPressRecognized:(id)recognized;	// 0x2f67f6b1
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x2f45a105
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x2f6761dd
- (void)_notifyPlugInViewsOfDidZoom;	// 0x2f6762f1
- (void)_notifyPlugInViewsOfScaleChange;	// 0x2f489a51
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x2f6760cd
- (id)_parentTextView;	// 0x2f4c18a1
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x2f67ac8d
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x2f6744ed
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x2f681db5
- (Class)_printFormatterClass;	// 0x2f7f62a5
- (void)_promptForReplace:(id)replace;	// 0x2f679ef1
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x2f48e9cd
- (void)_removeDefinitionController:(BOOL)controller;	// 0x2f4baa5d
- (void)_removeShortcutController:(BOOL)controller;	// 0x2f6744cd
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x2f676c3d
- (void)_resetForNewPage;	// 0x2f48de49
- (void)_resetFormDataForFrame:(id)frame;	// 0x2f677429
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x2f52e5fd
- (void)_resetShowingTextStyle:(id)style;	// 0x2f538871
- (void)_reshapePlugInViews;	// 0x2f45dc69
- (id)_responderForBecomeFirstResponder;	// 0x2f677579
- (void)_restoreFlattenedContentLayers;	// 0x2f67a90d
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x2f48e109
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x2f45b1b1
- (void)_runLoadBlock:(id)block;	// 0x2f50b00d
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x2f48d07d
- (id)_scriptingInfoForForm:(id)form;	// 0x2f67b7a5
- (id)_scriptingInfoForLink:(id)link;	// 0x2f67b529
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x2f67ad15
- (CGRect)_selectionClipRect;	// 0x2f67931d
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x2f4eeef1
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x2f67fe4d
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x2f68095d
- (void)_setDocumentScale:(float)scale;	// 0x2f4897ad
- (void)_setDocumentType:(int)type;	// 0x2f4896d5
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x2f4896f9
- (void)_setFont:(id)font;	// 0x2f6745ad
- (void)_setParentTextView:(id)view;	// 0x2f45bb59
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x2f50ca55
- (void)_setTextColor:(id)color;	// 0x2f67467d
- (CGRect)_shortcutPresentationRect;	// 0x2f679805
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x2f67a535
- (BOOL)_shouldResetForNewPage;	// 0x2f48dde5
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x2f45b751
- (void)_showDataDetectorsSheet;	// 0x2f6819fd
- (void)_showImageSheet;	// 0x2f6814ed
- (void)_showLinkSheet;	// 0x2f6817bd
- (void)_showPendingContentLayers;	// 0x2f48e49d
- (void)_showTextStyleOptions:(id)options;	// 0x2f679619
- (void)_singleTapRecognized:(id)recognized;	// 0x2f52e2c9
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x2f4dcfe5
- (void)_syntheticMouseEventNotHandledAtLocation:(CGPoint)location;	// 0x2f67f7f9
- (id)_targetURL;	// 0x2f6803d1
- (id)_textSelectingContainer;	// 0x2f4f20dd
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x2f67f3e5
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x2f67f729
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x2f6776b1
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x2f677605
- (void)_updateFixedPositionContent;	// 0x2f514cc1
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x2f6764d9
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x2f48e44d
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x2f489ba5
- (void)_updateScrollViewBoundaryZoomScales;	// 0x2f45bc45
- (void)_updateSize;	// 0x2f48c471
- (void)_updateSubviewCaches;	// 0x2f50ca89
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x2f50c33d
- (float)_zoomedDocumentScale;	// 0x2f48bf7d
- (void)actionDidFinish;	// 0x2f6819ad
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x2f680481
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x2f68052d
- (void)addInputString:(id)string;	// 0x2f677799
- (void)addInputString:(id)string withFlags:(unsigned)flags;	// 0x2f67775d
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x2f52f301
- (id)asText;	// 0x2f73014d
- (void)assistFormNode:(id)node;	// 0x2f677415
- (void)attemptClick:(id)click;	// 0x2f52f3b5
- (id)automaticallySelectedOverlay;	// 0x2f52d191
- (CGRect)autoscrollContentFrame;	// 0x2f67a021
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x2f72f5fd
- (CGRect)autoscrollDragFrame;	// 0x2f67a009
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x2f67afc1
- (BOOL)becomeFirstResponder;	// 0x2f52f719
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x2f67a03d
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x2f682b01
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x2f6828fd
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x2f682a99
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x2f682871
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x2f6828a1
- (void)beginSelectionChange;	// 0x2f4b9b49
// declared property getter: - (id)beginningOfDocument;	// 0x2f4c2599
- (BOOL)canBecomeFirstResponder;	// 0x2f52f885
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x2f4dc3ad
- (BOOL)canResignFirstResponder;	// 0x2f67754d
- (void)cancelAutoscroll;	// 0x2f72fee9
- (void)cancelInteraction;	// 0x2f52e67d
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x2f5148e9
- (BOOL)cancelMouseTracking;	// 0x2f67605d
- (BOOL)cancelTouchTracking;	// 0x2f676095
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x2f72ed75
- (CGRect)caretRect;	// 0x2f4f33bd
- (CGRect)caretRectForPosition:(id)position;	// 0x2f4bc049
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x2f4bc23d
- (unsigned short)characterAfterCaretSelection;	// 0x2f4e9d4d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x2f678779
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x2f67ae59
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x2f67af55
- (id)checkSpellingOfString:(id)string;	// 0x2f527169
- (void)clearInteractionTimer;	// 0x2f514a99
- (void)clearMarkedText;	// 0x2f678571
- (void)clearRangedSelectionInitialExtent;	// 0x2f72eea9
- (void)clearSelection;	// 0x2f72eb05
- (BOOL)clearWKFirstResponder;	// 0x2f527881
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x2f72eba5
- (id)closestPositionToPoint:(CGPoint)point;	// 0x2f4e3b15
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x2f67ad89
- (void)collapseSelection;	// 0x2f72ed21
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x2f4e3ecd
- (void)completeInteraction;	// 0x2f51bd69
- (void)confirmMarkedText:(id)text;	// 0x2f6786f1
- (BOOL)considerHeightForDoubleTap;	// 0x2f67b3ad
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x2f683275
- (BOOL)containsOnlySelectableElements;	// 0x2f67a98d
- (CGRect)contentFrameForView:(id)view;	// 0x2f72f67d
- (id)contentView;	// 0x2f67b09d
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x2f67f135
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x2f678fe5
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x2f6752bd
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x2f675271
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x2f4e3bf5
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x2f675365
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x2f675309
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x2f4bc329
- (void)copy:(id)copy;	// 0x2f679505
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x2f675fe5
- (float)currentDocumentScale;	// 0x2f67b0b1
- (void)cut:(id)cut;	// 0x2f679439
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x2f45befd
- (void)dealloc;	// 0x2f51b7b1
- (void)decreaseSize:(id)size;	// 0x2f679e0d
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x2f68008d
- (void)deferInteraction;	// 0x2f680381
- (void)deferredBecomeFirstResponder;	// 0x2f677551
// converted property getter: - (id)delegate;	// 0x2f4f1869
- (void)deleteBackward;	// 0x2f6777e5
- (void)deleteFromInput;	// 0x2f6777ad
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x2f674e91
- (id)dictationInterpretations;	// 0x2f678539
- (id)dictationResultMetadataForRange:(id)range;	// 0x2f677ad1
- (void)didEndScroll;	// 0x2f67a141
- (void)didEndZoom;	// 0x2f67a2c5
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x2f674b35
- (void)didMoveToSuperview;	// 0x2f45bc35
- (void)didRemovePlugInView:(id)view;	// 0x2f50d051
- (void)didRotateInteractionSheet;	// 0x2f6771a1
- (void)didZoom;	// 0x2f67a26d
- (void)disableClearsOnInsertion;	// 0x2f5267d9
- (CGRect)documentBounds;	// 0x2f48a881
// converted property getter: - (int)documentType;	// 0x2f48a86d
// converted property getter: - (CGRect)doubleTapRect;	// 0x2f6773e9
- (BOOL)doubleTapRectIsReplaced;	// 0x2f677401
- (XXStruct_ZUkpeA)doubleTapScalesForSize:(CGSize)size;	// 0x2f67b34d
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x2f683029
- (unsigned)effectiveDataDetectorTypes;	// 0x2f5252bd
- (void)enableReachability;	// 0x2f4887b9
- (id)enclosingScrollView;	// 0x2f67b08d
// declared property getter: - (id)endOfDocument;	// 0x2f4e4225
- (void)endPrintMode;	// 0x2f682c65
- (void)endSelectionChange;	// 0x2f4baec1
- (void)ensureSelection;	// 0x2f525acd
- (void)extendCurrentSelection:(int)selection;	// 0x2f678b41
- (void)fileUploadPanelDidDismiss:(id)fileUploadPanel;	// 0x2f675e75
- (CGRect)firstRectForRange:(id)range;	// 0x2f52a009
// declared property getter: - (UIEdgeInsets)fixedPositionContentInset;	// 0x2f67b4f1
- (id)fontForCaretSelection;	// 0x2f52a80d
- (void)forceLayout;	// 0x2f675eed
- (id)formElement;	// 0x2f4e3c61
- (void)forwardInvocation:(id)invocation;	// 0x2f488ebd
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x2f676765
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x2f678115
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x2f52e129
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x2f52dfe9
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x2f52d399
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x2f52e05d
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x2f52dcb9
- (int)getPasteboardChangeCount;	// 0x2f676a95
- (int)getPasteboardItemsCount;	// 0x2f676731
- (void)handleKeyWebEvent:(id)event;	// 0x2f6790a5
- (BOOL)hasContent;	// 0x2f45da55
- (BOOL)hasDrawnTiles;	// 0x2f48ac91
- (BOOL)hasEditableSelection;	// 0x2f4dcb61
- (BOOL)hasMarkedText;	// 0x2f72eb59
- (BOOL)hasPlugInSubviews;	// 0x2f679271
- (BOOL)hasRangedSelection;	// 0x2f677b11
- (BOOL)hasRichlyEditableSelection;	// 0x2f4e9c1d
- (BOOL)hasSelection;	// 0x2f45b609
- (BOOL)hasSimpleTextOnlyStructure;	// 0x2f67a9c9
- (BOOL)hasText;	// 0x2f51ee8d
- (void)hideTapHighlight;	// 0x2f680145
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x2f680189
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x2f52e695
- (id)hostViewForSheet:(id)sheet;	// 0x2f681e11
- (id)implementationWebView;	// 0x2f678ff9
- (BOOL)inPopover;	// 0x2f679f5d
- (void)increaseSize:(id)size;	// 0x2f679dfd
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x2f681e21
- (float)initialScale;	// 0x2f48978d
// declared property getter: - (id)inputDelegate;	// 0x2f4b47d9
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x2f6778bd
- (id)insertDictationResultPlaceholder;	// 0x2f677b99
- (void)insertText:(id)text;	// 0x2f51da75
- (void)installGestureRecognizers;	// 0x2f45a259
// declared property getter: - (id)interactionAssistant;	// 0x2f4f16fd
// converted property getter: - (id)interactionDelegate;	// 0x2f6807e1
- (id)interactionElement;	// 0x2f68080d
- (CGPoint)interactionLocation;	// 0x2f680821
- (BOOL)isCaretInEmptyParagraph;	// 0x2f4e9cb9
- (BOOL)isClassicViewportMode;	// 0x2f675921
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x2f6772cd
- (BOOL)isEditable;	// 0x2f523ea1
- (BOOL)isEditing;	// 0x2f4f5fd1
- (BOOL)isEditingSingleLineElement;	// 0x2f677851
- (BOOL)isInInteraction;	// 0x2f561415
- (BOOL)isInPrintMode;	// 0x2f68218d
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x2f570e8d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x2f4e4189
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x2f4e41c1
- (BOOL)isShowingFullScreenPlugInUI;	// 0x2f48f275
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x2f67743d
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x2f676ac9
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x2f6774c1
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x2f525da5
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x2f574c35
- (BOOL)keyboardInputChanged:(id)changed;	// 0x2f4f5bd1
- (void)keyboardInputChangedSelection:(id)selection;	// 0x2f4f178d
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x2f679001
- (void)layoutSubviews;	// 0x2f45db05
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x2f674ced
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x2f523de9
- (void)loadRequest:(id)request;	// 0x2f50af31
// converted property getter: - (BOOL)loadsSynchronously;	// 0x2f674e21
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x2f679f39
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x2f679f29
- (BOOL)makeWKFirstResponder;	// 0x2f4f1979
// declared property getter: - (id)markedTextRange;	// 0x2f45c671
// declared property getter: - (id)markedTextStyle;	// 0x2f67ad7d
- (float)maximumDoubleTapScale;	// 0x2f67a375
- (float)maximumScale;	// 0x2f674edd
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x2f50ba6d
- (id)metadataDictionariesForDictationResults;	// 0x2f4ef845
- (id)methodSignatureForSelector:(SEL)selector;	// 0x2f488e6d
- (float)minimumScale;	// 0x2f48976d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x2f674ebd
- (float)minimumScaleForSize:(CGSize)size;	// 0x2f67b0fd
- (BOOL)mouseEventsChangeSelection;	// 0x2f68325d
- (BOOL)needsScrollNotifications;	// 0x2f675945
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x2f676009
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x2f6789a1
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x2f4f5ac9
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x2f72ec55
- (void)paste:(id)paste;	// 0x2f679bf5
- (void)performClick:(id)click;	// 0x2f67f809
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x2f67f0a1
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x2f6767b9
- (BOOL)playsNicelyWithGestures;	// 0x2f523fb1
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x2f730151
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x2f67aced
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x2f4f2385
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x2f4c253d
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x2f67aee5
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x2f681e9d
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x2f678b0d
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x2f678ad9
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x2f4c2369
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x2f67aae9
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x2f67b4c1
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x2f6769c5
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x2f67b10d
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x2f6787ed
- (void)redrawScaledDocument;	// 0x2f676e09
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x2f67827d
// declared property getter: - (unsigned)renderTreeSize;	// 0x2f67b509
// declared property getter: - (unsigned)renderTreeSizeThresholdForReset;	// 0x2f67b519
- (void)replace:(id)replace;	// 0x2f679e1d
- (void)replaceCurrentWordWithText:(id)text;	// 0x2f678595
- (void)replaceRange:(id)range withText:(id)text;	// 0x2f67abcd
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x2f574ee5
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x2f678a3d
- (BOOL)requiresKeyEvents;	// 0x2f4ce651
- (void)resetInteraction;	// 0x2f514a65
- (void)resetTilingAfterLoadComplete;	// 0x2f48cfa9
- (BOOL)resignFirstResponder;	// 0x2f4b4fdd
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x2f4bae85
- (void)saveStateToCurrentHistoryItem;	// 0x2f48d041
- (id)scriptingInfoWithChildren;	// 0x2f509dc9
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x2f72ff09
- (void)scrollViewWasRemoved;	// 0x2f517abd
- (void)select:(id)select;	// 0x2f679d61
- (void)selectAll;	// 0x2f678c21
- (void)selectAll:(id)all;	// 0x2f679dad
- (void)selectWord;	// 0x2f72eab1
- (id)selectedDOMRange;	// 0x2f4ba94d
// declared property getter: - (id)selectedTextRange;	// 0x2f4ba8f5
// declared property getter: - (int)selectionAffinity;	// 0x2f4ba97d
- (BOOL)selectionAtDocumentStart;	// 0x2f678bc1
- (BOOL)selectionAtWordStart;	// 0x2f678bf1
- (int)selectionBaseWritingDirection;	// 0x2f4f04a9
- (void)selectionChanged;	// 0x2f4b9c81
- (void)selectionChanged:(id)changed;	// 0x2f4b9bf9
// declared property getter: - (int)selectionGranularity;	// 0x2f67afe9
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x2f72f52d
- (NSRange)selectionRange;	// 0x2f574bf5
- (id)selectionRects;	// 0x2f72f245
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x2f4e48a5
- (id)selectionRectsForRange:(id)range;	// 0x2f570c69
// declared property getter: - (int)selectionState;	// 0x2f4e9d1d
- (id)selectionView;	// 0x2f6792c9
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x2f50b7b5
- (void)sendScrollEventIfNecessary;	// 0x2f675959
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x2f514e15
- (void)sendScrollWheelEvents;	// 0x2f68057d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x2f56125d
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x2f48a175
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x2f6807f5
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x2f45b3e5
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x2f4896b1
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x2f72f58d
- (void)setBaseWritingDirection:(int)direction;	// 0x2f72ede5
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x2f4f2401
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x2f67a041
- (void)setBottomBufferHeight:(float)height;	// 0x2f679075
- (void)setCaretChangeListener:(id)listener;	// 0x2f678fb5
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x2f45d5cd
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x2f4c1c89
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x2f4895d1
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x2f48a0bd
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x2f674e39
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x2f677289
- (void)setDrawsBackground:(BOOL)background;	// 0x2f45bbad
// declared property setter: - (void)setFixedPositionContentInset:(UIEdgeInsets)inset;	// 0x2f676445
- (void)setFrame:(CGRect)frame;	// 0x2f459ed5
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x2f45b891
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x2f524a51
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x2f675ce1
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x2f45b331
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x2f4c15c9
- (void)setInteractionAssistantGestureRecognizers;	// 0x2f6775a9
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x2f48a0cd
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x2f51a169
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x2f6774a1
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x2f45b92d
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x2f678655
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x2f67ad81
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x2f45b3a9
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x2f67723d
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x2f45b36d
- (void)setMinimumSize:(CGSize)size;	// 0x2f45b189
- (void)setMinimumSize:(CGSize)size updateCurrentViewportConfigurationSize:(BOOL)size2;	// 0x2f675d05
- (void)setOpaque:(BOOL)opaque;	// 0x2f45bb69
- (void)setPaused:(BOOL)paused;	// 0x2f6790e1
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x2f48f28d
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x2f67b4d1
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x2f72ee19
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x2f72ee79
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x2f72ee49
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x2f72ef39
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x2f72efd9
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x2f72ef09
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x2f72eed9
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x2f72f401
// declared property setter: - (void)setRenderTreeSizeThresholdForReset:(unsigned)reset;	// 0x2f67b061
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x2f72f18d
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x2f4f1e85
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x2f4f1db1
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x2f67aa09
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x2f67afe5
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x2f4e4551
- (void)setSelectionToEnd;	// 0x2f72f485
- (void)setSelectionToStart;	// 0x2f72f4d9
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x2f72f075
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x2f72ff0d
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x2f524a75
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x2f677209
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x2f67553d
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x2f48a0e5
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x2f677451
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x2f524d49
// converted property setter: - (void)setText:(id)text;	// 0x2f678c75
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x2f48ad19
- (void)setTilingArea:(int)area;	// 0x2f48a381
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x2f6748a9
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x2f675eb5
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x2f674ea5
- (void)setUserStyleSheet:(id)sheet;	// 0x2f5707c1
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x2f45b425
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x2f67584d
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x2f677229
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x2f67b3d1
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x2f6755ad
- (void)smartExtendRangedSelection:(int)selection;	// 0x2f72f3cd
// converted property getter: - (id)standaloneEditingElement;	// 0x2f677491
- (BOOL)startActionSheet;	// 0x2f67f205
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x2f72f6ad
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x2f67f105
- (void)stopLoading:(id)loading;	// 0x2f524ce5
- (id)subviews;	// 0x2f45b681
- (id)superviewForSheet;	// 0x2f68083d
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x2f4dcfad
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x2f6806e1
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x2f67b4e1
- (void)takeTraitsFrom:(id)from;	// 0x2f67929d
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x2f67f15d
// converted property getter: - (id)text;	// 0x2f678df5
- (id)textColorForCaretSelection;	// 0x2f6787b1
- (id)textFormElement;	// 0x2f677435
- (id)textInDOMRange:(id)domrange;	// 0x2f72f211
- (id)textInRange:(id)range;	// 0x2f4c26f9
- (id)textInputTraits;	// 0x2f45adbd
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x2f4c2659
- (void)toggleBaseWritingDirection;	// 0x2f72ed91
- (void)toggleBoldface:(id)boldface;	// 0x2f679535
- (void)toggleItalics:(id)italics;	// 0x2f679581
- (void)toggleUnderline:(id)underline;	// 0x2f6795cd
// declared property getter: - (id)tokenizer;	// 0x2f45c645
// converted property getter: - (id)typingAttributes;	// 0x2f674775
// converted property getter: - (id)undoManager;	// 0x2f4b4829
- (id)undoManagerForWebView:(id)webView;	// 0x2f4b484d
- (void)unmarkText;	// 0x2f51df15
- (void)updateInteractionElements;	// 0x2f6770a9
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x2f6774d5
- (void)updateSelection;	// 0x2f679319
// converted property getter: - (BOOL)updatesScrollView;	// 0x2f675ed5
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x2f48895d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x2f67f1ad
- (void)viewportHandler:(id)handler didChangeViewportSize:(CGSize)size;	// 0x2f67508d
- (void)viewportHandlerDidChangeScales:(id)viewportHandler;	// 0x2f674f01
- (CGRect)visibleBounds;	// 0x2f72ffbd
- (CGRect)visibleContentFrame;	// 0x2f679ff1
- (CGRect)visibleContentRect;	// 0x2f67b0c1
- (CGRect)visibleFrame;	// 0x2f679fd9
// converted property getter: - (id)webSelectionAssistant;	// 0x2f679f49
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x2f45b4dd
// converted property getter: - (id)webView;	// 0x2f45b475
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x2f675c91
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x2f48af19
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x2f675bcd
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x2f48cc51
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x2f45b485
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x2f6791f5
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x2f68005d
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x2f50b5a1
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments;	// 0x2f675861
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x2f514ec5
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x2f50b821
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x2f48bfcd
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x2f675b19
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x2f50b351
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x2f4baae5
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x2f50c199
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x2f6791a1
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x2f45dc21
- (void)webViewDidDrawTiles:(id)webView;	// 0x2f45dd41
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x2f675ad9
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x2f680085
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x2f675bb5
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x2f675a99
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x2f459801
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x2f4e3b61
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x2f67f2e9
- (void)willMoveToSuperview:(id)superview;	// 0x2f45bc15
- (void)willRotateInteractionSheet;	// 0x2f67713d
- (void)willStartScroll;	// 0x2f67a049
- (void)willStartScrollToTop;	// 0x2f67a0cd
- (void)willStartZoom;	// 0x2f67a201
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x2f67b471
- (void)willZoomToMinimumScale;	// 0x2f67b3c1
- (id)wordAtPoint:(CGPoint)point;	// 0x2f72f12d
- (int)wordOffsetInRange:(id)range;	// 0x2f678a09
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x2f676639
- (float)zoomedDocumentScale;	// 0x2f67b0a1
@end

