/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import </libobjc.A.h>
#import "MPAVPlaylistFeeder.h"

@class NSDictionary, RadioStation, MPAVController;

@interface MPQueueFeeder : NSObject <MPAVPlaylistFeeder> {
	MPAVController *_avController;	// 4 = 0x4
	CFSetRef _itemsWithReferencesToClear;	// 8 = 0x8
	unsigned _repeatType;	// 12 = 0xc
	unsigned _shuffleType;	// 16 = 0x10
	CFDictionaryRef _nextStartTimes;	// 20 = 0x14
	id _representedObject;	// 24 = 0x18
	BOOL _fullScreenPlaybackQueue;	// 28 = 0x1c
	BOOL _isSourceChangeInProgress;	// 29 = 0x1d
	BOOL _deallocating;	// 30 = 0x1e
	unsigned _activeShuffleType;	// 32 = 0x20
}
@property(assign, nonatomic) __weak MPAVController *AVController;	// G=0x2e25ea61; S=0x2e25ea81; @synthesize=_avController
@property(assign, nonatomic) unsigned activeShuffleType;	// G=0x2e25ead5; S=0x2e25eae5; @synthesize=_activeShuffleType
@property(assign, nonatomic) BOOL fullScreenPlaybackQueue;	// G=0x2e25eb19; S=0x2e25eb29; @synthesize=_fullScreenPlaybackQueue
@property(readonly, assign, nonatomic) unsigned initialPlaybackQueueDepth;	// G=0x2e25e3fd; 
@property(assign, nonatomic) BOOL isSourceChangeInProgress;	// G=0x2e25eb39; S=0x2e25df9d; @synthesize=_isSourceChangeInProgress
@property(readonly, assign, nonatomic) Class itemClass;	// G=0x2e25e13d; 
@property(readonly, assign, nonatomic) unsigned itemCount;	// G=0x2e25e401; 
@property(readonly, assign, nonatomic) unsigned nonRepeatingItemCount;	// G=0x2e25ea51; 
@property(readonly, assign, nonatomic) BOOL playerPreparesItemsForPlaybackAsynchronously;	// G=0x2e25e15d; 
@property(readonly, assign, nonatomic) NSDictionary *preferredLanguages;	// G=0x2e25e161; 
@property(readonly, assign, nonatomic) unsigned realRepeatType;	// G=0x2e25e32d; 
@property(readonly, assign, nonatomic) unsigned realShuffleType;	// G=0x2e25e33d; 
@property(assign, nonatomic) unsigned repeatType;	// G=0x2e25ea95; S=0x2e25eaa5; @synthesize=_repeatType
@property(retain, nonatomic) id<NSObject> representedObject;	// G=0x2e25eaf5; S=0x2e25eb05; @synthesize=_representedObject
@property(assign, nonatomic) unsigned shuffleType;	// G=0x2e25eab5; S=0x2e25eac5; @synthesize=_shuffleType
@property(readonly, assign, nonatomic) RadioStation *station;	// G=0x2e35d54d; 
@property(readonly, assign, nonatomic) BOOL trackChangesCanEndPlayback;	// G=0x2e25e165; 
@property(readonly, assign, nonatomic) BOOL userCanChangeShuffleAndRepeatType;	// G=0x2e25e169; 
+ (void)restoreAVControllerPlaybackQueue:(id)queue fromUnarchiver:(id)unarchiver feederClass:(Class)aClass;	// 0x2e25e68d
- (void).cxx_destruct;	// 0x2e25eb49
// declared property getter: - (id)AVController;	// 0x2e25ea61
- (BOOL)_canPurgeNextStartTimes;	// 0x2e25e5e1
- (void)_fixNextStartTimesByInsertingRange:(NSRange)range;	// 0x2e25dda5
- (void)_fixNextStartTimesByRemovingRange:(NSRange)range;	// 0x2e25de49
// declared property getter: - (unsigned)activeShuffleType;	// 0x2e25ead5
- (void)addReferenceToItem:(id)item;	// 0x2e25e16d
- (void)archiveAVControllerPlaybackQueue:(id)queue toArchiver:(id)archiver;	// 0x2e25e73d
- (void)assumeOwnershipOfItems:(id)items;	// 0x2e25e351
- (void)beginSourceChange;	// 0x2e25dffd
- (BOOL)canSeek;	// 0x2e25e131
- (BOOL)canSkipItem:(id)item;	// 0x2e25e135
- (BOOL)canSkipToPreviousItem;	// 0x2e25e139
- (void)clearReferencesToItem:(id)item;	// 0x2e25e229
- (void)commitSourceChangeWithStartQueueIndex:(unsigned)startQueueIndex;	// 0x2e25e095
- (void)contentInvalidated;	// 0x2e25e559
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned)index;	// 0x2e25e4c1
- (void)contentsDidChangeByRemovingRange:(NSRange)contents;	// 0x2e25e471
- (void)controller:(id)controller willChangePlaybackIndexBy:(int)by deltaType:(int)type ignoreElapsedTime:(BOOL)time allowSkippingAds:(BOOL)ads;	// 0x2e25e34d
- (id)copyRawItemAtIndex:(unsigned)index;	// 0x2e25e269
- (void)dealloc;	// 0x2e25dd11
- (id)errorResolverForItem:(id)item;	// 0x2e25e121
// declared property getter: - (BOOL)fullScreenPlaybackQueue;	// 0x2e25eb19
- (BOOL)hasItemForIndex:(unsigned)index;	// 0x2e25e3e5
- (BOOL)hasValidItemAtIndex:(unsigned)index;	// 0x2e25e309
// declared property getter: - (unsigned)initialPlaybackQueueDepth;	// 0x2e25e3fd
- (void)invalidateQueueCaches;	// 0x2e25df55
// declared property getter: - (BOOL)isSourceChangeInProgress;	// 0x2e25eb39
// declared property getter: - (Class)itemClass;	// 0x2e25e13d
// declared property getter: - (unsigned)itemCount;	// 0x2e25e401
- (id)itemForIndex:(unsigned)index;	// 0x2e25e405
- (unsigned)itemTypeForIndex:(unsigned)index;	// 0x2e25e159
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)item withRegularTextAttributes:(id)regularTextAttributes emphasizedTextAttributes:(id)attributes;	// 0x2e25e769
- (id)localizedPositionInPlaylistString:(id)playlistString;	// 0x2e25e8f5
// declared property getter: - (unsigned)nonRepeatingItemCount;	// 0x2e25ea51
- (id)pathAtIndex:(unsigned)index;	// 0x2e25ea31
- (id)playbackInfoAtIndex:(unsigned)index;	// 0x2e25e5e5
// declared property getter: - (BOOL)playerPreparesItemsForPlaybackAsynchronously;	// 0x2e25e15d
// declared property getter: - (id)preferredLanguages;	// 0x2e25e161
// declared property getter: - (unsigned)realRepeatType;	// 0x2e25e32d
// declared property getter: - (unsigned)realShuffleType;	// 0x2e25e33d
- (BOOL)reloadWithDataSource:(id)dataSource;	// 0x2e25df81
- (BOOL)reloadWithDataSource:(id)dataSource keepPlayingCurrentItemIfPossible:(BOOL)possible;	// 0x2e25df99
// declared property getter: - (unsigned)repeatType;	// 0x2e25ea95
// declared property getter: - (id)representedObject;	// 0x2e25eaf5
- (void)restoreAVControllerPlaybackQueue:(id)queue fromUnarchiver:(id)unarchiver;	// 0x2e25e709
// declared property setter: - (void)setAVController:(id)controller;	// 0x2e25ea81
// declared property setter: - (void)setActiveShuffleType:(unsigned)type;	// 0x2e25eae5
// declared property setter: - (void)setFullScreenPlaybackQueue:(BOOL)queue;	// 0x2e25eb29
// declared property setter: - (void)setIsSourceChangeInProgress:(BOOL)progress;	// 0x2e25df9d
- (void)setNextStartTime:(double)time forIndex:(unsigned)index;	// 0x2e25dea9
// declared property setter: - (void)setRepeatType:(unsigned)type;	// 0x2e25eaa5
// declared property setter: - (void)setRepresentedObject:(id)object;	// 0x2e25eb05
// declared property setter: - (void)setShuffleType:(unsigned)type;	// 0x2e25eac5
- (void)setSubsequenceFocused:(BOOL)focused currentItemIndex:(unsigned)index;	// 0x2e25df79
- (BOOL)shouldBeginPlaybackOfItem:(id)item error:(id *)error;	// 0x2e25e125
- (BOOL)shouldReloadForChangeFromNetworkType:(int)networkType toNetworkType:(int)networkType2;	// 0x2e25e46d
- (void)shuffleItemsWithAnchor:(unsigned *)anchor;	// 0x2e25df7d
// declared property getter: - (unsigned)shuffleType;	// 0x2e25eab5
// declared property getter: - (id)station;	// 0x2e35d54d
// declared property getter: - (BOOL)trackChangesCanEndPlayback;	// 0x2e25e165
// declared property getter: - (BOOL)userCanChangeShuffleAndRepeatType;	// 0x2e25e169
@end

