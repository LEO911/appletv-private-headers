/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MCProfileConnectionObserver.h"
#import "MPQueueFeeder.h"
#import "MediaPlayer-Structs.h"

@class NSDictionary, ADBannerView, NSMutableArray, NSData, RadioStation, MPRadioAdObserver, NSArray, MPAudioDeviceController;
@protocol OS_dispatch_source, OS_dispatch_queue;

@interface MPRadioQueueFeeder : MPQueueFeeder <MCProfileConnectionObserver> {
	MPRadioAdObserver *_adObserver;	// 36 = 0x24
	MPAudioDeviceController *_audioDeviceController;	// 40 = 0x28
	BOOL _didFailToFetchTracks;	// 44 = 0x2c
	BOOL _isExplicitContentRestricted;	// 45 = 0x2d
	BOOL _isFetchingTracks;	// 46 = 0x2e
	BOOL _deviceIsDocked;	// 47 = 0x2f
	BOOL _deviceIsLocked;	// 48 = 0x30
	int _lockStateNotifyToken;	// 52 = 0x34
	BOOL _lockStateNotifyTokenIsValid;	// 56 = 0x38
	NSDictionary *_pickedRoute;	// 60 = 0x3c
	BOOL _playbackIsPaused;	// 64 = 0x40
	NSObject<OS_dispatch_source> *_playbackTimerSource;	// 68 = 0x44
	ADBannerView *_skipAdView;	// 72 = 0x48
	NSData *_skipAdTrackData;	// 76 = 0x4c
	RadioStation *_station;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_trackHistoryQueue;	// 84 = 0x54
	NSMutableArray *_tracks;	// 88 = 0x58
	BOOL _wasUsingBackgroundNetwork;	// 92 = 0x5c
	unsigned _initialTrackIndex;	// 96 = 0x60
}
@property(assign, nonatomic) unsigned initialTrackIndex;	// G=0x2e35d46d; S=0x2e35d47d; @synthesize=_initialTrackIndex
@property(retain, nonatomic) RadioStation *station;	// G=0x2e35bb01; S=0x2e35b89d; @synthesize=_station
@property(copy, nonatomic) NSArray *tracks;	// G=0x2e35bb15; S=0x2e35bac1; 
+ (void)_radioConfigurationDidChangeNotification:(id)_radioConfiguration;	// 0x2e357e99
+ (id)imageCache;	// 0x2e35b2d9
+ (void)initialize;	// 0x2e357be1
+ (BOOL)shouldRestorePlaybackQueue;	// 0x2e35b369
- (id)init;	// 0x2e357fe9
- (void).cxx_destruct;	// 0x2e35d48d
- (void)_bufferingStateDidChangeNotification:(id)_bufferingState;	// 0x2e359e9d
- (void)_cancelPlaybackTimer;	// 0x2e35bb45
- (void)_cancelScheduledAds;	// 0x2e35bb95
- (void)_cellularNetworkingAllowedDidChangeNotification:(id)_cellularNetworkingAllowed;	// 0x2e35a075
- (void)_didFailToLoadAdNotification:(id)loadAdNotification;	// 0x2e35a0f5
- (BOOL)_endPlaybackIfNecessaryForNetworkType;	// 0x2e35bd01
- (void)_fetchAdditionalTracksAndKeepExistingTracks:(BOOL)tracks withCompletionHandler:(id)completionHandler;	// 0x2e35be2d
- (unsigned)_indexOfCurrentItem;	// 0x2e35c32d
- (void)_insertAdTrack:(id)track afterCurrentItemIndex:(unsigned)index;	// 0x2e35c4dd
- (void)_itemDidFinishLoadingNotification:(id)_item;	// 0x2e35ab8d
- (void)_itemIsBannedDidChangedNotification:(id)_itemIsBanned;	// 0x2e35ac5d
- (void)_itemWillChangeNotification:(id)_item;	// 0x2e35a229
- (void)_networkTypeDidChangeNotification:(id)_networkType;	// 0x2e35ad4d
- (void)_playbackStateDidChangeNotification:(id)_playbackState;	// 0x2e35adcd
- (void)_prefetchArtworkForNextTrack;	// 0x2e35c899
- (void)_radioModelDidChangeNotification:(id)_radioModel;	// 0x2e35ae31
- (void)_songBeganResponseNotification:(id)notification;	// 0x2e35b031
- (id)_trackAtIndex:(unsigned)index;	// 0x2e3588b9
- (id)_tracksWithPromotionalContentFromTracks:(id)tracks;	// 0x2e35cadd
- (void)_updateIsExplicitContentRestrictedForProfileConnection:(id)profileConnection;	// 0x2e35cdb1
- (void)_updatePlaybackTimerForDeviceStateChange;	// 0x2e35cf75
- (void)audioDeviceControllerAudioRoutesChanged:(id)changed;	// 0x2e359c95
- (BOOL)canSeek;	// 0x2e358849
- (BOOL)canSkipItem:(id)item;	// 0x2e35884d
- (BOOL)canSkipToPreviousItem;	// 0x2e3588b5
- (void)controller:(id)controller willChangePlaybackIndexBy:(int)by deltaType:(int)type ignoreElapsedTime:(BOOL)time allowSkippingAds:(BOOL)ads;	// 0x2e358db5
- (id)copyRawItemAtIndex:(unsigned)index;	// 0x2e359141
- (void)dealloc;	// 0x2e35850d
- (BOOL)hasValidItemAtIndex:(unsigned)index;	// 0x2e3593d9
- (unsigned)initialPlaybackQueueDepth;	// 0x2e359e41
// declared property getter: - (unsigned)initialTrackIndex;	// 0x2e35d46d
- (Class)itemClass;	// 0x2e359455
- (unsigned)itemCount;	// 0x2e3594cd
- (unsigned)itemTypeForIndex:(unsigned)index;	// 0x2e3594fd
- (void)loadArtworkImageForItem:(id)item completionHandler:(id)handler;	// 0x2e35b411
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)item withRegularTextAttributes:(id)regularTextAttributes emphasizedTextAttributes:(id)attributes;	// 0x2e359501
- (id)localizedPositionInPlaylistString:(id)playlistString;	// 0x2e359591
- (int)playbackMode;	// 0x2e3595b1
- (BOOL)playerPreparesItemsForPlaybackAsynchronously;	// 0x2e3595dd
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)profileConnection userInfo:(id)info;	// 0x2e359e45
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)profileConnection userInfo:(id)info;	// 0x2e359e71
- (void)reloadTracksForPlayingStation;	// 0x2e35b641
- (BOOL)reloadWithDataSource:(id)dataSource keepPlayingCurrentItemIfPossible:(BOOL)possible;	// 0x2e3595e1
- (BOOL)reloadWithDataSource:(id)dataSource keepPlayingCurrentItemIfPossible:(BOOL)possible initialTrackIndex:(unsigned)index startPlayback:(BOOL)playback;	// 0x2e35bb41
- (void)setAVController:(id)controller;	// 0x2e359611
// declared property setter: - (void)setInitialTrackIndex:(unsigned)index;	// 0x2e35d47d
// declared property setter: - (void)setStation:(id)station;	// 0x2e35b89d
// declared property setter: - (void)setTracks:(id)tracks;	// 0x2e35bac1
- (BOOL)shouldBeginPlaybackOfItem:(id)item error:(id *)error;	// 0x2e359819
// declared property getter: - (id)station;	// 0x2e35bb01
// declared property getter: - (id)tracks;	// 0x2e35bb15
@end

