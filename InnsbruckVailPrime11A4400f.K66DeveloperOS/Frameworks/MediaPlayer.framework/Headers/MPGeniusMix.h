/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSSecureCoding.h"
#import </libobjc.A.h>
#import "MPStoreDownloadManagerObserver.h"
#import "NSCopying.h"
#import "MediaPlayer-Structs.h"

@class MPMediaQuery, MPMediaPlaylist, NSString, NSArray;

@interface MPGeniusMix : NSObject <MPStoreDownloadManagerObserver, NSSecureCoding, NSCopying> {
	MPMediaPlaylist *_playlist;	// 4 = 0x4
	MPMediaQuery *_seedTracksQuery;	// 8 = 0x8
	NSArray *_representativeArtists;	// 12 = 0xc
	NSArray *_representativeImageItems;	// 16 = 0x10
}
@property(readonly, assign, nonatomic) float downloadProgress;	// G=0x2e2dc255; 
@property(readonly, assign, nonatomic) BOOL isCloudMix;	// G=0x2e2dc5ed; 
@property(readonly, assign, nonatomic) BOOL isDownloading;	// G=0x2e2dc64d; 
@property(readonly, assign, nonatomic) NSString *name;	// G=0x2e2dc989; 
@property(readonly, assign, nonatomic) MPMediaPlaylist *playlist;	// G=0x2e2df15d; @synthesize=_playlist
@property(readonly, assign, nonatomic) NSArray *representativeArtists;	// G=0x2e2dc9b9; 
@property(readonly, assign, nonatomic) MPMediaQuery *seedTracksQuery;	// G=0x2e2de93d; 
+ (id)artworkCacheDirectoryPath;	// 0x2e2db589
+ (id)artworkImageForMediaItem:(id)mediaItem;	// 0x2e2db58d
+ (id)artworkImageForMediaItem:(id)mediaItem scaleMode:(int)mode;	// 0x2e2dbb95
+ (id)mixQueue;	// 0x2e2daefd
+ (BOOL)supportsSecureCoding;	// 0x2e2db30d
- (id)initWithCoder:(id)coder;	// 0x2e2db311
- (id)initWithMPMediaPlaylist:(id)mpmediaPlaylist;	// 0x2e2daf81
- (void).cxx_destruct;	// 0x2e2df16d
- (id)_alreadyLoadedRepresentativeImageWithTileLength:(float)tileLength loadCompletionBlock:(id)block;	// 0x2e2de425
- (id)_cacheDirectoryPath;	// 0x2e2dea29
- (id)_cachedRepresentativeImagePathWithTileLength:(float)tileLength;	// 0x2e2deb29
- (unsigned long long)_entityArtworkCacheHashForRepresentativeItems:(id)representativeItems ensureItemArtworkFilesExist:(BOOL)exist;	// 0x2e2debb9
- (void)_generateMixImageWithTileLength:(float)tileLength imageDidLoadBlock:(id)image;	// 0x2e2de245
- (BOOL)_observeMixImageLoadingWithImageDidLoadBlock:(id)_observeMixImageLoadingWithImage;	// 0x2e2de10d
- (void)_onQueueLoadRepresentativeImageWithTileLength:(float)tileLength;	// 0x2e2dd849
- (id)_placeholderImageWithTileLength:(float)tileLength;	// 0x2e2dcf0d
- (id)_placeholderMixImageWithTileLength:(float)tileLength;	// 0x2e2dd2d1
- (id)_representativeImageItemsWithMaxCount:(unsigned)maxCount;	// 0x2e2dedfd
- (BOOL)canPlayUsingNetworkType:(int)type;	// 0x2e2dba05
- (void)cancelDownload;	// 0x2e2db61d
- (id)copyWithZone:(NSZone *)zone;	// 0x2e2db545
- (void)dealloc;	// 0x2e2db0a5
- (id)description;	// 0x2e2db115
- (void)downloadManager:(id)manager downloadDidFinish:(id)download;	// 0x2e2dccd1
- (void)downloadMixWithPermissionHandler:(id)permissionHandler;	// 0x2e2dbd09
// declared property getter: - (float)downloadProgress;	// 0x2e2dc255
- (void)encodeWithCoder:(id)coder;	// 0x2e2db4ad
- (unsigned)hash;	// 0x2e2db1d1
// declared property getter: - (BOOL)isCloudMix;	// 0x2e2dc5ed
// declared property getter: - (BOOL)isDownloading;	// 0x2e2dc64d
- (BOOL)isEqual:(id)equal;	// 0x2e2db229
- (id)loadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x2e2de815
// declared property getter: - (id)name;	// 0x2e2dc989
// declared property getter: - (id)playlist;	// 0x2e2df15d
- (void)preloadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x2e2de66d
// declared property getter: - (id)representativeArtists;	// 0x2e2dc9b9
// declared property getter: - (id)seedTracksQuery;	// 0x2e2de93d
@end

