/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSSecureCoding.h"
#import </libobjc.A.h>
#import "NSCopying.h"
#import "MediaPlayer-Structs.h"

@class MPMediaQueryCriteria, MPMediaLibrary, MPMediaPlaylist, MPMediaItemCollection, NSSet, MPMediaQuerySectionInfo, NSArray;

@interface MPMediaQuery : NSObject <NSSecureCoding, NSCopying> {
	MPMediaLibrary *_mediaLibrary;	// 4 = 0x4
	MPMediaQueryCriteria *_criteria;	// 8 = 0x8
	int _isFilteringDisabled;	// 12 = 0xc
	NSArray *_staticEntities;	// 16 = 0x10
	int _staticEntityType;	// 20 = 0x14
}
@property(readonly, assign, nonatomic) unsigned _countOfCollections;	// G=0x2e2a934d; 
@property(readonly, assign, nonatomic) unsigned _countOfItems;	// G=0x2e2a931d; 
@property(readonly, assign, nonatomic) BOOL _hasCollections;	// G=0x2e2a92e5; 
@property(readonly, assign, nonatomic) BOOL _hasItems;	// G=0x2e2a92ad; 
@property(readonly, assign, nonatomic) MPMediaItemCollection *collectionByJoiningCollections;	// G=0x2e2fe839; 
@property(readonly, assign, nonatomic) NSArray *collectionPersistentIdentifiers;	// G=0x2e2a93ad; 
@property(copy, nonatomic) NSSet *collectionPropertiesToFetch;	// G=0x2e2a91fd; S=0x2e2a9221; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *collectionSectionInfo;	// G=0x2e2a9425; 
@property(readonly, assign, nonatomic) NSArray *collectionSections;	// G=0x2e2a9a95; 
@property(readonly, assign, nonatomic) NSArray *collections;	// G=0x2e2a8731; 
@property(readonly, assign, nonatomic) MPMediaPlaylist *containingPlaylist;	// G=0x2e2fe361; 
@property(retain) MPMediaQueryCriteria *criteria;	// G=0x2e2aa669; S=0x2e2aa67d; converted property
@property(readonly, assign, nonatomic) BOOL excludesEntitiesWithBlankNames;	// G=0x2e2a961d; 
@property(retain, nonatomic) NSSet *filterPredicates;	// G=0x2e2a834d; S=0x2e2a8389; 
@property(assign, nonatomic) int groupingType;	// G=0x2e2a879d; S=0x2e2a87bd; 
@property(readonly, assign, nonatomic) NSArray *itemPersistentIdentifiers;	// G=0x2e2a937d; 
@property(copy, nonatomic) NSSet *itemPropertiesToFetch;	// G=0x2e2a914d; S=0x2e2a9171; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *itemSectionInfo;	// G=0x2e2a93dd; 
@property(readonly, assign, nonatomic) NSArray *itemSections;	// G=0x2e2a9a4d; 
@property(readonly, assign, nonatomic) NSArray *items;	// G=0x2e2a85f1; 
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary;	// G=0x2e2a8599; S=0x2e2a85ad; 
@property(copy, nonatomic, getter=_orderingProperties, setter=_setOrderingProperties:) NSArray *orderingProperties;	// G=0x2e2a94f9; S=0x2e2a946d; 
@property(assign, nonatomic) BOOL sortItems;	// G=0x2e2a957d; S=0x2e2a951d; 
@property(readonly, assign, nonatomic) BOOL specifiesPlaylistItems;	// G=0x2e2a999d; 
@property(assign, nonatomic) BOOL useSections;	// G=0x2e2a95fd; S=0x2e2a95a5; 
@property(readonly, assign, nonatomic) BOOL willGroupEntities;	// G=0x2e2a99c5; 
+ (void)initFilteringDisabled;	// 0x2e2a8839
+ (id)ITunesUAudioQuery;	// 0x2e2a7cf9
+ (id)ITunesUQuery;	// 0x2e2a7c05
+ (id)activeGeniusPlaylist;	// 0x2e2fdffd
+ (id)albumsQuery;	// 0x2e2a77d5
+ (id)artistsQuery;	// 0x2e2a78c9
+ (id)audibleAudiobooksQuery;	// 0x2e2a80b9
+ (id)audiobooksQuery;	// 0x2e2a7fb9
+ (id)compilationsQuery;	// 0x2e2a815d
+ (id)composersQuery;	// 0x2e2a82ad
+ (id)currentDevicePurchasesPlaylist;	// 0x2e2fe259
+ (id)geniusMixesQuery;	// 0x2e2a9011
+ (id)genresQuery;	// 0x2e2a82fd
+ (id)homeVideosQuery;	// 0x2e2a8cc1
+ (void)initialize;	// 0x2e2a6b69
+ (BOOL)isFilteringDisabled;	// 0x2e2a895d
+ (id)movieRentalsQuery;	// 0x2e2a8e89
+ (id)moviesQuery;	// 0x2e2a8da5
+ (id)musicVideosQuery;	// 0x2e2a8af9
+ (id)playlistsQuery;	// 0x2e2a7abd
+ (id)podcastsQuery;	// 0x2e2a7b0d
+ (void)setFilteringDisabled:(BOOL)disabled;	// 0x2e2a8891
+ (id)songsQuery;	// 0x2e2a79bd
+ (BOOL)supportsSecureCoding;	// 0x2e2a70b5
+ (id)tvShowsQuery;	// 0x2e2a8bdd
+ (id)videoITunesUQuery;	// 0x2e2a7e65
+ (id)videoPodcastsQuery;	// 0x2e2a8f2d
+ (id)videosQuery;	// 0x2e2a8a15
- (id)init;	// 0x2e2a6bb1
- (id)initWithCoder:(id)coder;	// 0x2e2a70b9
- (id)initWithCriteria:(id)criteria library:(id)library;	// 0x2e2a6bc5
- (id)initWithEntities:(id)entities entityType:(int)type;	// 0x2e2a6d35
- (id)initWithFilterPredicates:(id)filterPredicates;	// 0x2e2a6d25
- (id)initWithFilterPredicatesInternal:(id)filterPredicatesInternal;	// 0x2e2a6c75
- (void).cxx_destruct;	// 0x2e2aa6b9
- (BOOL)MPSD_hasDownloadableEntities;	// 0x2e391a6d
- (BOOL)MPSD_hasDownloadingEntities;	// 0x2e391c79
- (id)MPSD_mediaQueryForDownloadableEntities;	// 0x2e391cb5
- (id)MPSD_mediaQueryForDownloadingEntities;	// 0x2e392161
// declared property getter: - (unsigned)_countOfCollections;	// 0x2e2a934d
// declared property getter: - (unsigned)_countOfItems;	// 0x2e2a931d
- (void)_enumerateCollectionsInOrder:(BOOL)order usingBlock:(id)block;	// 0x2e2aa269
- (void)_enumerateCollectionsUsingBlock:(id)block;	// 0x2e2aa241
- (void)_enumerateItemsInOrder:(BOOL)order usingBlock:(id)block;	// 0x2e2aa069
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x2e2aa041
- (void)_enumerateUnorderedCollectionsUsingBlock:(id)block;	// 0x2e2aa255
- (void)_enumerateUnorderedItemsUsingBlock:(id)block;	// 0x2e2aa055
// declared property getter: - (BOOL)_hasCollections;	// 0x2e2a92e5
// declared property getter: - (BOOL)_hasItems;	// 0x2e2a92ad
- (BOOL)_isFilteringDisabled;	// 0x2e2aa009
// declared property getter: - (id)_orderingProperties;	// 0x2e2a94f9
// declared property setter: - (void)_setOrderingProperties:(id)properties;	// 0x2e2a946d
- (BOOL)_updatePredicateForProperty:(id)property withPropertyPredicate:(id)propertyPredicate;	// 0x2e2fe781
- (id)_valueForAggregateFunction:(id)aggregateFunction onProperty:(id)property entityType:(int)type;	// 0x2e2a9add
- (void)addFilterPredicate:(id)predicate;	// 0x2e2a8421
// declared property getter: - (id)collectionByJoiningCollections;	// 0x2e2fe839
// declared property getter: - (id)collectionPersistentIdentifiers;	// 0x2e2a93ad
// declared property getter: - (id)collectionPropertiesToFetch;	// 0x2e2a91fd
// declared property getter: - (id)collectionSectionInfo;	// 0x2e2a9425
// declared property getter: - (id)collectionSections;	// 0x2e2a9a95
// declared property getter: - (id)collections;	// 0x2e2a8731
// declared property getter: - (id)containingPlaylist;	// 0x2e2fe361
- (id)copyByRemovingStaticEntities;	// 0x2e2a7779
- (id)copyWithZone:(NSZone *)zone;	// 0x2e2a75d5
// converted property getter: - (id)criteria;	// 0x2e2aa669
- (id)description;	// 0x2e2a6d9d
- (void)encodeWithCoder:(id)coder;	// 0x2e2a73c5
// declared property getter: - (BOOL)excludesEntitiesWithBlankNames;	// 0x2e2a961d
// declared property getter: - (id)filterPredicates;	// 0x2e2a834d
- (unsigned)groupingThreshold;	// 0x2e2a99c1
// declared property getter: - (int)groupingType;	// 0x2e2a879d
- (unsigned)hash;	// 0x2e2a7075
- (BOOL)isEqual:(id)equal;	// 0x2e2a6fa1
// declared property getter: - (id)itemPersistentIdentifiers;	// 0x2e2a937d
// declared property getter: - (id)itemPropertiesToFetch;	// 0x2e2a914d
// declared property getter: - (id)itemSectionInfo;	// 0x2e2a93dd
// declared property getter: - (id)itemSections;	// 0x2e2a9a4d
// declared property getter: - (id)items;	// 0x2e2a85f1
// declared property getter: - (id)mediaLibrary;	// 0x2e2a8599
- (id)predicateForProperty:(id)property;	// 0x2e2fe409
- (void)removeFilterPredicate:(id)predicate;	// 0x2e2a84ed
- (void)removePredicatesForProperty:(id)property;	// 0x2e2fe575
// declared property setter: - (void)setCollectionPropertiesToFetch:(id)fetch;	// 0x2e2a9221
// converted property setter: - (void)setCriteria:(id)criteria;	// 0x2e2aa67d
- (void)setFilterPredicate:(id)predicate forProperty:(id)property;	// 0x2e2fe6e1
// declared property setter: - (void)setFilterPredicates:(id)predicates;	// 0x2e2a8389
- (void)setFilterPropertyPredicate:(id)predicate;	// 0x2e2fe725
// declared property setter: - (void)setGroupingType:(int)type;	// 0x2e2a87bd
// declared property setter: - (void)setItemPropertiesToFetch:(id)fetch;	// 0x2e2a9171
// declared property setter: - (void)setMediaLibrary:(id)library;	// 0x2e2a85ad
// declared property setter: - (void)setSortItems:(BOOL)items;	// 0x2e2a951d
- (void)setStaticEntities:(id)entities entityType:(int)type;	// 0x2e2aa621
// declared property setter: - (void)setUseSections:(BOOL)sections;	// 0x2e2a95a5
// declared property getter: - (BOOL)sortItems;	// 0x2e2a957d
// declared property getter: - (BOOL)specifiesPlaylistItems;	// 0x2e2a999d
// declared property getter: - (BOOL)useSections;	// 0x2e2a95fd
- (id)valueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property;	// 0x2e2a9fc5
- (id)valueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property;	// 0x2e2a9f81
// declared property getter: - (BOOL)willGroupEntities;	// 0x2e2a99c5
@end

