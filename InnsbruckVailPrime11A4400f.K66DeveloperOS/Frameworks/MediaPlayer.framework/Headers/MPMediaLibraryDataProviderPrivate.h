/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaLibraryDataProvider.h"
#import "MediaPlayer-Structs.h"

@class NSArray, NSString;

@protocol MPMediaLibraryDataProviderPrivate <MPMediaLibraryDataProvider>
@optional
@property(readonly, assign, nonatomic) NSString *databasePath;
@property(readonly, assign, nonatomic) BOOL isGeniusEnabled;
@property(readonly, assign, nonatomic) NSArray *localizedSectionIndexTitles;
@property(readonly, assign, nonatomic) NSArray *preferredAudioLanguages;
@property(readonly, assign, nonatomic) NSArray *preferredSubtitleLanguages;
- (void)addItemWithIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier2 completionBlock:(id)block;
- (void)addItemsWithIdentifiers:(long long *)identifiers count:(unsigned)count toPlaylistWithIdentifier:(long long)identifier completionBlock:(id)block;
- (long long)addPlaylistWithValuesForProperties:(id)properties;
- (id)artworkCacheIDForItemWithIdentifier:(long long)identifier atPlaybackTime:(double)playbackTime;
- (void *)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long *)seedItemIdentifiers count:(unsigned)count error:(id *)error;
// declared property getter: - (id)databasePath;
- (long long *)generateItemIdentifiersForGeniusClusterPlaylist:(void *)geniusClusterPlaylist count:(unsigned *)count error:(id *)error;
- (BOOL)hasArtworkImageForItemWithIdentifier:(long long)identifier;
- (BOOL)hasGeniusMixes;
- (BOOL)hasMediaOfType:(unsigned)type;
- (BOOL)hasUbiquitousBookmarkableItems;
- (BOOL)isArtworkImageIdenticalForItemWithIdentifier:(long long)identifier otherItemWithIdentifier:(long long)identifier2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;
- (BOOL)isCurrentThreadInTransaction;
// declared property getter: - (BOOL)isGeniusEnabled;
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;
- (long long)itemPersistentIDForStoreID:(long long)storeID;
- (id)lastModifiedDate;
- (void)loadArtworkImageForFormat:(int)format ofItemWithArtworkCacheID:(id)artworkCacheID canUseSurfaceBackedImage:(BOOL)image completionBlock:(id)block;
- (void)loadArtworkImageForFormat:(int)format ofItemWithIdentifier:(long long)identifier completionBlock:(id)block;
- (void)loadBestArtworkImageForSize:(CGSize)size forArtworkCacheID:(id)artworkCacheID completionBlock:(id)block;
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;
// declared property getter: - (id)localizedSectionIndexTitles;
- (void)moveItemFromIndex:(unsigned)index toIndex:(unsigned)index2 inPlaylistWithIdentifier:(long long)identifier completionBlock:(id)block;
- (void)performReadTransactionWithBlock:(id)block;
- (BOOL)performTransactionWithBlock:(id)block;
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;
- (void)populateLocationPropertiesOfItemWithIdentifier:(long long)identifier withPath:(id)path;
// declared property getter: - (id)preferredAudioLanguages;
// declared property getter: - (id)preferredSubtitleLanguages;
- (void)releaseGeniusClusterPlaylist:(void *)playlist;
- (void)removeAllItemsInPlaylistWithIdentifier:(long long)identifier;
- (void)removeItemsWithIdentifiers:(long long *)identifiers atFilteredIndexes:(id)filteredIndexes inPlaylistWithIdentifier:(long long)identifier completionBlock:(id)block;
- (BOOL)removeItemsWithIdentifiers:(long long *)identifiers count:(unsigned)count hideFromPurchaseHistory:(BOOL)purchaseHistory;
- (BOOL)removePlaylistWithIdentifier:(long long)identifier;
- (void)seedPlaylistWithIdentifier:(long long)identifier withItemWithIdentifier:(long long)identifier2 completionBlock:(id)block;
- (void)setValue:(id)value forProperty:(id)property ofCollectionWithIdentifier:(long long)identifier groupingType:(int)type completionBlock:(id)block;
- (void)setValue:(id)value forProperty:(id)property ofItemWithIdentifier:(long long)identifier completionBlock:(id)block;
- (void)setValue:(id)value forProperty:(id)property ofPlaylistWithIdentifier:(long long)identifier completionBlock:(id)block;
- (BOOL)supportsEntityChangeTrackingForMediaEntityType:(int)mediaEntityType collectionGroupingType:(int)type dataProviderClass:(out Class *)aClass;
- (void)updateEntitesToCurrentRevision;
@end

