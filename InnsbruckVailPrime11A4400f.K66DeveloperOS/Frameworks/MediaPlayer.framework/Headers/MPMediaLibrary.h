/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSSecureCoding.h"
#import </libobjc.A.h>

@class NSMutableArray, QueryCriteriaResultsCache, NSMutableDictionary, NSDate, NSHashTable, CADisplayLink, NSString, NSURL;
@protocol OS_dispatch_queue, MPMediaLibraryDataProviderPrivate;

@interface MPMediaLibrary : NSObject <NSSecureCoding> {
	id<MPMediaLibraryDataProviderPrivate> _libraryDataProvider;	// 4 = 0x4
	int _libraryChangeObservers;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_entityCacheQueue;	// 12 = 0xc
	QueryCriteriaResultsCache *_itemsForCriteriaCache;	// 16 = 0x10
	QueryCriteriaResultsCache *_hasItemsForCriteriaCache;	// 20 = 0x14
	QueryCriteriaResultsCache *_countOfItemsForCriteriaCache;	// 24 = 0x18
	QueryCriteriaResultsCache *_itemResultSetsForCriteriaCache;	// 28 = 0x1c
	QueryCriteriaResultsCache *_collectionsForCriteriaCache;	// 32 = 0x20
	QueryCriteriaResultsCache *_hasCollectionsForCriteriaCache;	// 36 = 0x24
	QueryCriteriaResultsCache *_countOfCollectionsForCriteriaCache;	// 40 = 0x28
	QueryCriteriaResultsCache *_collectionsResultSetsForCriteriaCache;	// 44 = 0x2c
	NSMutableDictionary *_hasItemsDidLoadForCriteria;	// 48 = 0x30
	NSMutableDictionary *_hasCollectionsDidLoadForCriteria;	// 52 = 0x34
	NSMutableDictionary *_countOfCollectionsDidLoadForCriteria;	// 56 = 0x38
	NSMutableDictionary *_countOfItemsDidLoadForCriteria;	// 60 = 0x3c
	NSMutableArray *_additionalLibraryFilterPredicates;	// 64 = 0x40
	NSObject<OS_dispatch_queue> *_additionalLibraryFilterPredicatesAccessQueue;	// 68 = 0x44
	NSHashTable *_connectionAssertions;	// 72 = 0x48
	BOOL _disconnectAfterReleasingAssertions;	// 76 = 0x4c
	float _connectionProgress;	// 80 = 0x50
	CADisplayLink *_connectionProgressDisplayLink;	// 84 = 0x54
	double _connectionProgressStartTime;	// 88 = 0x58
	int _removalReason;	// 96 = 0x60
	unsigned _determinedHasMedia : 1;	// 100 = 0x64
	unsigned _hasMedia : 1;	// 100 = 0x64
	unsigned _determinedHasSongs : 1;	// 100 = 0x64
	unsigned _hasSongs : 1;	// 100 = 0x64
	unsigned _determinedHasGeniusMixes : 1;	// 100 = 0x64
	unsigned _hasGeniusMixes : 1;	// 100 = 0x64
	unsigned _determinedHasPlaylists : 1;	// 100 = 0x64
	unsigned _hasPlaylists : 1;	// 100 = 0x64
	unsigned _determinedHasComposers : 1;	// 101 = 0x65
	unsigned _hasComposers : 1;	// 101 = 0x65
	unsigned _determinedHasPodcasts : 1;	// 101 = 0x65
	unsigned _hasPodcasts : 1;	// 101 = 0x65
	unsigned _determinedHasUbiquitousBookmarkableItems : 1;	// 101 = 0x65
	unsigned _hasUbiquitousBookmarkableContent : 1;	// 101 = 0x65
	unsigned _determinedHasAudiobooks : 1;	// 101 = 0x65
	unsigned _hasAudiobooks : 1;	// 101 = 0x65
	int _cloudFilteringType;	// 104 = 0x68
	BOOL _filteringDisabled;	// 108 = 0x6c
	BOOL _hasVideos;	// 109 = 0x6d
	BOOL _determinedHasVideos;	// 110 = 0x6e
	BOOL _hasMusicVideos;	// 111 = 0x6f
	BOOL _determinedHasMusicVideos;	// 112 = 0x70
	BOOL _hasAudibleAudioBooks;	// 113 = 0x71
	BOOL _determinedHasAudibleAudioBooks;	// 114 = 0x72
	BOOL _hasMovies;	// 115 = 0x73
	BOOL _determinedHasMovies;	// 116 = 0x74
	BOOL _hasCompilations;	// 117 = 0x75
	BOOL _determinedHasCompilations;	// 118 = 0x76
	BOOL _hasITunesU;	// 119 = 0x77
	BOOL _determinedHasITunesU;	// 120 = 0x78
	BOOL _hasVideoITunesU;	// 121 = 0x79
	BOOL _determinedHasVideoITunesU;	// 122 = 0x7a
	BOOL _hasMovieRentals;	// 123 = 0x7b
	BOOL _determinedHasMovieRentals;	// 124 = 0x7c
	BOOL _hasTVShows;	// 125 = 0x7d
	BOOL _determinedHasTVShows;	// 126 = 0x7e
	BOOL _hasHomeVideos;	// 127 = 0x7f
	BOOL _determinedHasHomeVideos;	// 128 = 0x80
	BOOL _hasVideoPodcasts;	// 129 = 0x81
	BOOL _determinedHasVideoPodcasts;	// 130 = 0x82
	unsigned char _originalCellNetworkFlags;	// 131 = 0x83
	unsigned char _originalWiFiNetworkFlags;	// 132 = 0x84
}
@property(readonly, assign, nonatomic) NSString *_syncValidity;	// G=0x2e2bb459; 
@property(readonly, retain) NSMutableArray *additionalLibraryFilterPredicates;	// G=0x2e2b5099; converted property
@property(assign) int cloudFilteringType;	// G=0x2e2b9de5; S=0x2e2b9dbd; converted property
@property(readonly, assign) float connectionProgress;	// G=0x2e2b79e5; converted property
@property(readonly, assign) BOOL hasAudibleAudioBooks;	// G=0x2e2b6029; converted property
@property(readonly, assign) BOOL hasCompilations;	// G=0x2e2b6155; converted property
@property(readonly, assign) BOOL hasHomeVideos;	// G=0x2e2b64e5; converted property
@property(readonly, assign) BOOL hasMovieRentals;	// G=0x2e2b63b9; converted property
@property(readonly, assign) BOOL hasMovies;	// G=0x2e2b60b9; converted property
@property(readonly, assign) BOOL hasMusicVideos;	// G=0x2e2b5f8d; converted property
@property(readonly, assign) BOOL hasTVShows;	// G=0x2e2b6449; converted property
@property(readonly, assign) BOOL hasVideoPodcasts;	// G=0x2e2b6581; converted property
@property(readonly, assign) BOOL hasVideos;	// G=0x2e2b5ef1; converted property
@property(readonly, assign, nonatomic) NSDate *lastModifiedDate;	// G=0x2e2b4e75; 
@property(readonly, assign, nonatomic) NSURL *protectedContentSupportStorageURL;	// G=0x2e2bb105; 
@property(assign, nonatomic) int removalReason;	// G=0x2e2b5395; S=0x2e2b53a5; 
+ (id)_libraryDataProviders;	// 0x2e2baa01
+ (id)_libraryForDataProvider:(id)dataProvider;	// 0x2e2ba8f5
+ (id)_mediaLibraries;	// 0x2e2ba711
+ (void)addLibraryDataProvider:(id)provider;	// 0x2e2baa95
+ (void)beginDiscoveringMediaLibraries;	// 0x2e2b47d1
+ (id)defaultMediaLibrary;	// 0x2e2b2f8d
+ (id)deviceMediaLibrary;	// 0x2e2b32c5
+ (void)endDiscoveringMediaLibraries;	// 0x2e2b47ed
+ (void)initialize;	// 0x2e2b2f3d
+ (BOOL)isLibraryServerDisabled;	// 0x2e2b7a15
+ (id)libraryDataProviders;	// 0x2e2baa55
+ (id)mediaLibraries;	// 0x2e2ba78d
+ (id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x2e2ba7cd
+ (void)reloadDisplayValuesForLibraryDataProvider:(id)libraryDataProvider;	// 0x2e2badd1
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x2e2bad59
+ (void)reloadInvisiblePropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x2e2bad95
+ (void)reloadLibraryDataProvider:(id)provider;	// 0x2e2bad1d
+ (void)removeLibraryDataProvider:(id)provider removalReason:(int)reason;	// 0x2e2babd5
+ (void)setDefaultMediaLibrary:(id)library;	// 0x2e2b312d
+ (void)setLibraryServerDisabled:(BOOL)disabled;	// 0x2e2b7a19
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x2e2b7a1d
+ (BOOL)supportsSecureCoding;	// 0x2e2b3a79
+ (void)syncGenerationDidChangeForLibraryDataProvider:(id)syncGeneration;	// 0x2e2bae79
+ (void)uniqueIdentifierDidChangeForLibraryDataProvider:(id)uniqueIdentifier;	// 0x2e2baee9
- (id)init;	// 0x2e2b333d
- (id)initWithCoder:(id)coder;	// 0x2e2b3b91
- (void).cxx_destruct;	// 0x2e2baf91
- (void)_canShowCloudTracksDidChangeNotification:(id)_canShowCloudTracks;	// 0x2e2b46cd
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined mediaType:(unsigned)type queryHasEntitiesBlock:(id)block;	// 0x2e2b5e71
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined queryHasEntitiesBlock:(id)block;	// 0x2e2b5e51
- (void)_clearCachedContentDataAndResultSets:(BOOL)sets withCompletionBlock:(id)completionBlock;	// 0x2e2b3f89
- (void)_clearCachedEntitiesIncludingResultSets:(BOOL)sets completionBlock:(id)block;	// 0x2e2b3e19
- (void)_clearPendingDisconnection;	// 0x2e2b9da9
- (id)_collectionPersistentIdentifiersForQueryCriteria:(id)queryCriteria;	// 0x2e2b99c9
- (id)_collectionsForQueryCriteria:(id)queryCriteria;	// 0x2e2b9f1d
- (void)_connectionProgressDisplayLinkCallback:(id)callback;	// 0x2e2ba371
- (unsigned)_countOfCollectionsForQueryCriteria:(id)queryCriteria;	// 0x2e2b9429
- (unsigned)_countOfItemsForQueryCriteria:(id)queryCriteria;	// 0x2e2b9269
- (void)_didReceiveMemoryWarning:(id)warning;	// 0x2e2b46dd
- (void)_displayValuesDidChangeNotification:(id)_displayValues;	// 0x2e2b46f1
- (void)_enabledMediaTypesDidChangeNotification:(id)_enabledMediaTypes;	// 0x2e2b4769
- (id)_getCachedValueForQueryCritiera:(id)queryCritiera valueCriteriaCache:(id)cache entitiesForCriteriaCache:(id)criteriaCache didLoadBlocksByQueryCriteria:(id)criteria valueLoadedFromEntitiesArrayBlock:(id)entitiesArrayBlock loadValueFromDataProviderBlock:(id)dataProviderBlock;	// 0x2e2b84b5
- (BOOL)_hasCollectionsForQueryCriteria:(id)queryCriteria;	// 0x2e2b90a1
- (BOOL)_hasItemsForQueryCriteria:(id)queryCriteria;	// 0x2e2b8ed9
- (id)_initWithLibraryDataProvider:(id)libraryDataProvider;	// 0x2e2ba5cd
- (id)_itemPersistentIdentifiersForQueryCriteria:(id)queryCriteria;	// 0x2e2b95e9
- (id)_itemsForQueryCriteria:(id)queryCriteria;	// 0x2e2b7fbd
- (unsigned long long)_persistentIDForAssetURL:(id)assetURL;	// 0x2e2b7add
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;	// 0x2e2b42b5
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x2e2b4479
- (void)_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x2e2b463d
- (void)_reloadLibraryForRestrictionsChange;	// 0x2e2b4111
- (void)_removeConnectionAssertion:(id)assertion;	// 0x2e2ba441
- (void)_stopConnectionProgressDisplayLink;	// 0x2e2ba535
// declared property getter: - (id)_syncValidity;	// 0x2e2bb459
- (void)addLibraryFilterPredicate:(id)predicate;	// 0x2e2b51b5
- (id)addPlaylistWithName:(id)name;	// 0x2e2b6911
- (id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;	// 0x2e2b6925
// converted property getter: - (id)additionalLibraryFilterPredicates;	// 0x2e2b5099
- (void)beginGeneratingLibraryChangeNotifications;	// 0x2e2b4809
// converted property getter: - (int)cloudFilteringType;	// 0x2e2b9de5
- (void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;	// 0x2e2b76e1
- (void)connectWithCompletionHandler:(id)completionHandler;	// 0x2e2b481d
- (id)connectionAssertionWithIdentifier:(id)identifier;	// 0x2e2b7779
// converted property getter: - (float)connectionProgress;	// 0x2e2b79e5
- (unsigned long long)currentEntityRevision;	// 0x2e2b4ee5
- (id)databasePath;	// 0x2e2b53d5
- (void)dealloc;	// 0x2e2b3799
- (id)description;	// 0x2e2b3905
- (void)disconnect;	// 0x2e2b4dbd
- (void)downloadAsset:(id)asset completionHandler:(id)handler;	// 0x2e2b6c7d
- (void)encodeWithCoder:(id)coder;	// 0x2e2b3a7d
- (void)endGeneratingLibraryChangeNotifications;	// 0x2e2b4e5d
- (void)enumerateEntityChangesAfterSyncAnchor:(id)anchor usingBlock:(id)block;	// 0x2e2bb479
- (id)errorResolverForMediaItem:(id)mediaItem;	// 0x2e2e315d
- (BOOL)hasAlbums;	// 0x2e2b59f9
- (BOOL)hasArtists;	// 0x2e2b59e1
// converted property getter: - (BOOL)hasAudibleAudioBooks;	// 0x2e2b6029
- (BOOL)hasAudioITunesUContent;	// 0x2e2b6281
- (BOOL)hasAudiobooks;	// 0x2e2b5d61
// converted property getter: - (BOOL)hasCompilations;	// 0x2e2b6155
- (BOOL)hasComposers;	// 0x2e2b5cd1
- (BOOL)hasGeniusMixes;	// 0x2e2b58a5
- (BOOL)hasGenres;	// 0x2e2b5cb9
// converted property getter: - (BOOL)hasHomeVideos;	// 0x2e2b64e5
- (BOOL)hasITunesUContent;	// 0x2e2b61e5
- (BOOL)hasMedia;	// 0x2e2b57a1
- (BOOL)hasMediaOfType:(unsigned)type;	// 0x2e2b5725
// converted property getter: - (BOOL)hasMovieRentals;	// 0x2e2b63b9
// converted property getter: - (BOOL)hasMovies;	// 0x2e2b60b9
// converted property getter: - (BOOL)hasMusicVideos;	// 0x2e2b5f8d
- (BOOL)hasPlaylists;	// 0x2e2b5959
- (BOOL)hasPodcasts;	// 0x2e2b5b09
- (BOOL)hasSongs;	// 0x2e2b5a11
// converted property getter: - (BOOL)hasTVShows;	// 0x2e2b6449
- (BOOL)hasUbiquitousBookmarkableItems;	// 0x2e2b5c05
- (BOOL)hasVideoITunesUContent;	// 0x2e2b631d
// converted property getter: - (BOOL)hasVideoPodcasts;	// 0x2e2b6581
// converted property getter: - (BOOL)hasVideos;	// 0x2e2b5ef1
- (unsigned)hash;	// 0x2e2b3a3d
- (BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;	// 0x2e2b6bc1
- (BOOL)isCurrentThreadInTransaction;	// 0x2e2b799d
- (BOOL)isEqual:(id)equal;	// 0x2e2b39a1
- (BOOL)isGeniusEnabled;	// 0x2e2b7195
- (BOOL)isValidAssetURL:(id)url;	// 0x2e2b7a21
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;	// 0x2e2b7d7d
- (id)itemWithPersistentID:(unsigned long long)persistentID;	// 0x2e2b661d
- (id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;	// 0x2e2b6641
- (id)itemWithStoreID:(unsigned long long)storeID;	// 0x2e2b66a5
// declared property getter: - (id)lastModifiedDate;	// 0x2e2b4e75
- (id)libraryDataProvider;	// 0x2e2ba6fd
- (BOOL)libraryHasBeenModifiedWithToken:(id)token;	// 0x2e2b5599
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x2e2b68b5
- (id)localizedSectionIndexTitles;	// 0x2e2b68d5
- (id)modificationToken;	// 0x2e2b53f5
- (id)name;	// 0x2e2b5375
- (id)newPlaylistWithPersistentID:(unsigned long long)persistentID;	// 0x2e2b672d
- (id)pathForAssetURL:(id)assetURL;	// 0x2e2b7a3d
- (void)performReadTransactionWithBlock:(id)block;	// 0x2e2b792d
- (BOOL)performTransactionWithBlock:(id)block;	// 0x2e2b78bd
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;	// 0x2e2b7e9d
- (long long)playlistGeneration;	// 0x2e2b4f7d
- (id)playlistWithPersistentID:(unsigned long long)persistentID;	// 0x2e2b68f5
- (void)populateLocationPropertiesOfItem:(id)item withPath:(id)path;	// 0x2e2b7109
- (id)preferredAudioLanguages;	// 0x2e2b71dd
- (id)preferredSubtitleLanguages;	// 0x2e2b7231
// declared property getter: - (id)protectedContentSupportStorageURL;	// 0x2e2bb105
// declared property getter: - (int)removalReason;	// 0x2e2b5395
- (BOOL)removeItems:(id)items;	// 0x2e2b6b2d
- (BOOL)removeItems:(id)items hideFromPurchaseHistory:(BOOL)purchaseHistory;	// 0x2e2b6a3d
- (void)removeLibraryFilterPredicate:(id)predicate;	// 0x2e2b7285
- (BOOL)removePlaylist:(id)playlist;	// 0x2e2b6b45
- (void)replaceLibraryFilterPredicate:(id)predicate withPredicate:(id)predicate2;	// 0x2e2b7425
- (BOOL)requiresAuthentication;	// 0x2e2b7699
// converted property setter: - (void)setCloudFilteringType:(int)type;	// 0x2e2b9dbd
- (void)setLibraryFilterPredicates;	// 0x2e2b9df5
// declared property setter: - (void)setRemovalReason:(int)reason;	// 0x2e2b53a5
- (int)status;	// 0x2e2b5015
- (unsigned long long)syncGenerationID;	// 0x2e2b4f31
- (id)syncValidity;	// 0x2e2b79f5
- (id)uniqueIdentifier;	// 0x2e2b53b5
- (BOOL)writable;	// 0x2e2b4fcd
@end

