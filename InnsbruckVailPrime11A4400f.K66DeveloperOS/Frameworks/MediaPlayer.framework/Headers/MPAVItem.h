/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import </libobjc.A.h>

@class MPRadioAdTrack, MPAlternateTextTrack, NSData, MPAlternateTracks, NSString, MPQueueFeeder, NSArray, MPMediaItem, AVAsset, AVPlayerItem, MPAVController, RadioTrack, RadioAudioClip, NSURL, MPImageCache;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVAsset *_asset;	// 4 = 0x4
	NSObject<OS_dispatch_queue> *_assetQueue;	// 8 = 0x8
	AVPlayerItem *_avPlayerItem;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
	BOOL _hasPostedNaturalSizeChange;	// 94 = 0x5e
	BOOL _limitReadAhead;	// 95 = 0x5f
	float _loudnessInfoVolumeNormalization;	// 96 = 0x60
}
@property(readonly, assign, nonatomic) MPRadioAdTrack *adTrack;	// G=0x2e361c81; 
@property(readonly, assign, nonatomic) NSString *album;	// G=0x2e2597c1; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x2e2597c9; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x2e2597d1; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x2e2597cd; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x2e259bd9; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x2e25da09; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic, getter=isAlwaysLive) BOOL alwaysLive;	// G=0x2e259b0d; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x2e2597c5; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x2e2597d9; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x2e2597dd; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x2e25b36d; S=0x2e25da19; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x2e259115; 
@property(readonly, assign, nonatomic) NSString *assetFlavor;	// G=0x2e2ceef5; 
@property(readonly, assign, nonatomic) RadioAudioClip *audioClip;	// G=0x2e36b06d; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x2e2597e1; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x2e25b33d; S=0x2e25da41; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x2e25b455; S=0x2e25b3cd; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x2e2597e5; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x2e25980d; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x2e259849; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x2e259bd5; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x2e25da9d; S=0x2e25daad; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x2e2597ed; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x2e2597e9; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x2e2598b5; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x2e259861; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x2e25bcb1; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x2e25bd09; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x2e25bda9; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x2e25bd21; 
@property(readonly, assign, nonatomic, getter=isExplicitTrack) BOOL explicitTrack;	// G=0x2e259805; 
@property(assign, nonatomic) __weak MPQueueFeeder *feeder;	// G=0x2e25da69; S=0x2e25da89; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x2e259d49; S=0x2e259ded; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x2e259809; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x2e259971; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x2e259975; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x2e259979; S=0x2e259e9d; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x2e259fd5; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x2e25dabd; S=0x2e25dacd; @synthesize=_indexInQueueFeeder
@property(readonly, assign, nonatomic) BOOL isAd;	// G=0x2e259b09; 
@property(assign) BOOL isAssetLoaded;	// G=0x2e25dadd; S=0x2e25daf5; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isRadioItem;	// G=0x2e355ab9; 
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x2e366bc9; 
@property(assign) BOOL limitReadAhead;	// G=0x2e259b99; S=0x2e259ef5; converted property
@property(readonly, assign, nonatomic) NSString *localizedPositionInPlaylistString;	// G=0x2e25baf9; 
@property(assign, nonatomic) float loudnessInfoVolumeNormalization;	// G=0x2e25db79; S=0x2e25db89; @synthesize=_loudnessInfoVolumeNormalization
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x2e2598c5; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x2e259bf9; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x2e331225; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x2e259bfd; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x2e25b969; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x2e25bf29; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x2e25bf41; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x2e2594d1; S=0x2e2594e9; 
@property(assign, nonatomic) __weak MPAVController *player;	// G=0x2e25db0d; S=0x2e25db2d; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x2e259269; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x2e259c69; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x2e259d01; 
@property(readonly, assign, nonatomic) RadioTrack *radioTrack;	// G=0x2e355abd; 
@property(retain, nonatomic) MPAlternateTextTrack *selectedAlternateTextTrack;	// G=0x2e259ed5; S=0x2e259f29; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x2e25db41; S=0x2e259f49; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x2e259439; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x2e259b11; 
@property(assign) int subtitleTrackID;	// G=0x2e259509; S=0x2e25950d; converted property
@property(readonly, assign, nonatomic) BOOL supportsAddStation;	// G=0x2e259f85; 
@property(readonly, assign, nonatomic) BOOL supportsHistory;	// G=0x2e259f89; 
@property(readonly, assign, nonatomic) BOOL supportsLikeOrBan;	// G=0x2e259f8d; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x2e259f81; 
@property(readonly, assign, nonatomic) BOOL supportsShare;	// G=0x2e259f95; 
@property(readonly, assign, nonatomic) BOOL supportsSkip;	// G=0x2e259f91; 
@property(readonly, assign, nonatomic) BOOL supportsTrackInfo;	// G=0x2e259f99; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x2e25c059; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x2e25bf59; 
@property(readonly, assign, nonatomic) NSArray *timedMetadataIfAvailable;	// G=0x2e25a101; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x2e25b955; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x2e25b39d; S=0x2e25db51; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x2e25a155; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x2e25b965; 
@property(assign) BOOL userSkippedPlayback;	// G=0x2e259551; S=0x2e25952d; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x2e25bc19; S=0x2e25bc61; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x2e366cc9; 
+ (id)URLFromPath:(id)path;	// 0x2e25893d
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x2e2597d5
+ (unsigned)defaultScaleMode;	// 0x2e258929
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x2e25892d
- (id)init;	// 0x2e258a79
- (id)initWithAsset:(id)asset;	// 0x2e258b39
- (id)initWithURL:(id)url;	// 0x2e258a8d
- (id)initWithURL:(id)url options:(id)options;	// 0x2e258ad9
- (void).cxx_destruct;	// 0x2e25db99
- (BOOL)MPSPWD_prioritizeDownloadSession;	// 0x2e395fed
- (void)_applicationDidBecomeActive:(id)_application;	// 0x2e25c455
- (void)_captionAppearanceSettingsChanged;	// 0x2e25c411
- (void)_checkAllowsBlockingDurationCall;	// 0x2e25d38d
- (void)_clearAsset;	// 0x2e25ca21
- (double)_durationFromExternalMetadataIfAvailable;	// 0x2e25bd49
- (double)_durationInSeconds;	// 0x2e259565
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x2e25b789
- (void)_itemAttributeAvailableKey:(id)key;	// 0x2e25c1c1
- (void)_loadAssetAndPlayerItem;	// 0x2e258fe5
- (void)_loadAssetProperties;	// 0x2e25c739
- (void)_loadTimeMarkersAsync;	// 0x2e25b1ed
- (void)_loadTimeMarkersBlocking;	// 0x2e25a159
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x2e25c611
- (id)_plistKeyForMPMediaItemProperty:(id)mpmediaItemProperty;	// 0x2e355ac1
- (void)_realoadEmbeddedTimeMarkers;	// 0x2e259f9d
- (void)_releaseAllTimeMarkers;	// 0x2e258df9
- (id)_seekableTimeRanges;	// 0x2e25c529
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x2e25b469
- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;	// 0x2e25c795
// declared property getter: - (id)adTrack;	// 0x2e361c81
- (void)addDerivedStationForArtist:(BOOL)artist withCompletionHandler:(id)completionHandler;	// 0x2e3554d5
// declared property getter: - (id)album;	// 0x2e2597c1
// declared property getter: - (id)albumArtist;	// 0x2e2597c9
// declared property getter: - (unsigned)albumTrackCount;	// 0x2e2597d1
// declared property getter: - (unsigned)albumTrackNumber;	// 0x2e2597cd
// declared property getter: - (BOOL)allowsEQ;	// 0x2e259bd9
// declared property getter: - (id)alternateTracks;	// 0x2e25da09
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x2e259949
// declared property getter: - (id)artist;	// 0x2e2597c5
// declared property getter: - (id)artworkImageData;	// 0x2e2597d9
// declared property getter: - (id)artworkMIMEType;	// 0x2e2597dd
- (id)artworkTimeMarkerForTime:(double)time;	// 0x2e25b669
// declared property getter: - (id)artworkTimeMarkers;	// 0x2e25b36d
// declared property getter: - (id)asset;	// 0x2e259115
// declared property getter: - (id)assetFlavor;	// 0x2e2ceef5
// declared property getter: - (id)audioClip;	// 0x2e36b06d
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x2e25c7e5
// declared property getter: - (BOOL)canSeedGenius;	// 0x2e2597e1
- (id)chapterTimeMarkerForTime:(double)time;	// 0x2e25b609
// declared property getter: - (id)chapterTimeMarkers;	// 0x2e25b33d
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x2e25b729
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x2e25b455
// declared property getter: - (id)composer;	// 0x2e2597e5
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x2e25980d
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x2e259849
// declared property getter: - (int)customAVEQPreset;	// 0x2e259bd5
- (void)dealloc;	// 0x2e258e55
// declared property getter: - (float)defaultPlaybackRate;	// 0x2e25da9d
// declared property getter: - (unsigned)discCount;	// 0x2e2597ed
// declared property getter: - (unsigned)discNumber;	// 0x2e2597e9
// declared property getter: - (id)displayableText;	// 0x2e2598b5
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x2e259861
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x2e25bcb1
// declared property getter: - (double)durationFromExternalMetadata;	// 0x2e25bd09
// declared property getter: - (double)durationIfAvailable;	// 0x2e25bda9
- (double)durationInSeconds;	// 0x2e2595d9
// declared property getter: - (BOOL)durationIsValid;	// 0x2e25bd21
// declared property getter: - (id)feeder;	// 0x2e25da69
- (void)flushNowPlayingCaches;	// 0x2e258fc9
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x2e259d49
// declared property getter: - (id)genre;	// 0x2e259809
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x2e259921
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x2e259971
// declared property getter: - (BOOL)hasDisplayableText;	// 0x2e259975
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x2e259979
// declared property getter: - (id)imageCache;	// 0x2e259fd5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x2e259fd9
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x2e25a005
- (id)inBandAlternateTextTracks;	// 0x2e25998d
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x2e25dabd
// declared property getter: - (BOOL)isAd;	// 0x2e259b09
// declared property getter: - (BOOL)isAlwaysLive;	// 0x2e259b0d
// declared property getter: - (BOOL)isAssetLoaded;	// 0x2e25dadd
- (BOOL)isAssetURLValid;	// 0x2e259801
// declared property getter: - (BOOL)isExplicitTrack;	// 0x2e259805
- (BOOL)isPlaceholderForItem:(id)item;	// 0x2e2597fd
// declared property getter: - (BOOL)isRadioItem;	// 0x2e355ab9
// declared property getter: - (BOOL)isStreamable;	// 0x2e259b11
// declared property getter: - (BOOL)isStreamingQuality;	// 0x2e366bc9
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x2e258931
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x2e2597f1
// converted property getter: - (BOOL)limitReadAhead;	// 0x2e259b99
- (void)loadAssetAndPlayerItem;	// 0x2e258fe1
- (id)localeForAssetTrack:(id)assetTrack;	// 0x2e25d541
- (id)localizedAttributedPositionInPlaylistStringWithRegularTextAttributes:(id)regularTextAttributes emphasizedTextAttributes:(id)attributes;	// 0x2e25b975
// declared property getter: - (id)localizedPositionInPlaylistString;	// 0x2e25baf9
// declared property getter: - (float)loudnessInfoVolumeNormalization;	// 0x2e25db79
// declared property getter: - (id)lyrics;	// 0x2e2598c5
// declared property getter: - (id)mainTitle;	// 0x2e259bf9
// declared property getter: - (id)mediaItem;	// 0x2e331225
// declared property getter: - (CGSize)naturalSize;	// 0x2e259bfd
- (void)notePlaybackFinishedByHittingEnd;	// 0x2e2594b5
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x2e25c475
- (id)path;	// 0x2e259649
// declared property getter: - (unsigned long long)persistentID;	// 0x2e25b969
// declared property getter: - (double)playableDuration;	// 0x2e25bf29
// declared property getter: - (double)playableDurationIfAvailable;	// 0x2e25bf41
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x2e2594d1
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x2e259c6d
// declared property getter: - (id)player;	// 0x2e25db0d
// declared property getter: - (id)playerItem;	// 0x2e259269
// declared property getter: - (id)podcastURL;	// 0x2e259c69
// declared property getter: - (CGSize)presentationSize;	// 0x2e259d01
// declared property getter: - (id)radioTrack;	// 0x2e355abd
- (void)reevaluateType;	// 0x2e25d5a5
- (void)replaceOutOfBandAlternateTextTracksWithArray:(id)array;	// 0x2e259d9d
- (void)replacePlayerItemWithPlayerItem:(id)playerItem;	// 0x2e25d8d1
- (void)resetBookkeeping;	// 0x2e259459
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x2e259e41
// declared property getter: - (id)selectedAlternateTextTrack;	// 0x2e259ed5
- (void)setAlternateAudioTrackID:(int)anId;	// 0x2e2594ad
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x2e25da19
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x2e25da41
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x2e25b3cd
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x2e25daad
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x2e25da89
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x2e259ded
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x2e259e9d
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x2e25dacd
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x2e25daf5
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x2e259ef5
// declared property setter: - (void)setLoudnessInfoVolumeNormalization:(float)normalization;	// 0x2e25db89
- (void)setOverrideDuration:(double)duration;	// 0x2e259ec1
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x2e2594e9
- (void)setPlaybackFinishedTime:(double)time;	// 0x2e2594ed
- (void)setPlaybackStoppedTime:(double)time;	// 0x2e2594b1
// declared property setter: - (void)setPlayer:(id)player;	// 0x2e25db2d
- (void)setPlayerItem:(id)item;	// 0x2e2593a9
- (void)setRating:(float)rating;	// 0x2e259505
// declared property setter: - (void)setSelectedAlternateTextTrack:(id)track;	// 0x2e259f29
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x2e259f49
// converted property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x2e25950d
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x2e25db51
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x2e259511
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x2e25952d
// declared property setter: - (void)setVideoID:(id)anId;	// 0x2e25bc61
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x2e25caa5
- (void)setupPlaybackInfo;	// 0x2e25cb19
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x2e25db41
// declared property getter: - (int)status;	// 0x2e259439
// converted property getter: - (int)subtitleTrackID;	// 0x2e259509
// declared property getter: - (BOOL)supportsAddStation;	// 0x2e259f85
// declared property getter: - (BOOL)supportsHistory;	// 0x2e259f89
// declared property getter: - (BOOL)supportsLikeOrBan;	// 0x2e259f8d
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x2e259f81
// declared property getter: - (BOOL)supportsShare;	// 0x2e259f95
// declared property getter: - (BOOL)supportsSkip;	// 0x2e259f91
// declared property getter: - (BOOL)supportsTrackInfo;	// 0x2e259f99
// declared property getter: - (double)timeOfSeekableEnd;	// 0x2e25c059
// declared property getter: - (double)timeOfSeekableStart;	// 0x2e25bf59
// declared property getter: - (id)timedMetadataIfAvailable;	// 0x2e25a101
- (id)titlesForTime:(double)time;	// 0x2e25a151
// declared property getter: - (unsigned)type;	// 0x2e25b955
- (id)url;	// 0x2e25971d
- (id)urlTimeMarkerForTime:(double)time;	// 0x2e25b6c9
// declared property getter: - (id)urlTimeMarkers;	// 0x2e25b39d
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x2e25a155
// declared property getter: - (float)userRating;	// 0x2e25b965
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x2e259551
// declared property getter: - (id)videoID;	// 0x2e25bc19
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x2e366cc9
@end

