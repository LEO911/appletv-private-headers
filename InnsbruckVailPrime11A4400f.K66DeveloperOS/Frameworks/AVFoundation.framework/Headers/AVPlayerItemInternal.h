/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVCustomVideoCompositorSession, AVVideoComposition, NSMutableDictionary, NSDate, NSError, NSArray, NSDictionary, NSString, AVAsset, AVWeakReference, NSMutableArray, AVPropertyStorage, AVAudioMix, NSURL, AVPlayerItem, AVPlayerConnection;
@protocol AVPlayerItemDelegate, OS_dispatch_queue;

@interface AVPlayerItemInternal : NSObject {
	AVWeakReference *weakReference;	// 4 = 0x4
	AVPlayerItem *previousItem;	// 8 = 0x8
	AVPlayerItem *nextItem;	// 12 = 0xc
	OpaqueFigPlaybackItem *figPlaybackItem;	// 16 = 0x10
	OpaqueFigCPEProtector *figCPEProtector;	// 20 = 0x14
	OpaqueCMTimebase *figTimebase;	// 24 = 0x18
	id<AVPlayerItemDelegate> delegate;	// 28 = 0x1c
	AVWeakReference *playerReference;	// 32 = 0x20
	AVPlayerConnection *playerConnection;	// 36 = 0x24
	BOOL isCurrentPlayerItem;	// 40 = 0x28
	NSObject<OS_dispatch_queue> *stateDispatchQueue;	// 44 = 0x2c
	AVPropertyStorage *propertyStorage;	// 48 = 0x30
	int status;	// 52 = 0x34
	NSError *error;	// 56 = 0x38
	NSURL *URL;	// 60 = 0x3c
	AVAsset *asset;	// 64 = 0x40
	NSArray *automaticallyLoadedAssetKeys;	// 68 = 0x44
	AVAsset *assetWithFigPlaybackItem;	// 72 = 0x48
	NSArray *trackIDsForAssetWithFigPlaybackItem;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *syncLayersQ;	// 80 = 0x50
	NSMutableArray *syncLayers;	// 84 = 0x54
	NSArray *timedMetadata;	// 88 = 0x58
	XXStruct_pwHToB initialTime;	// 92 = 0x5c
	XXStruct_pwHToB initialToleranceBefore;	// 116 = 0x74
	XXStruct_pwHToB initialToleranceAfter;	// 140 = 0x8c
	XXStruct_pwHToB forwardPlaybackEndTime;	// 164 = 0xa4
	XXStruct_pwHToB reversePlaybackEndTime;	// 188 = 0xbc
	NSDate *initialDate;	// 212 = 0xd4
	NSDate *initialEstimatedDate;	// 216 = 0xd8
	BOOL initialLimitReadAhead;	// 220 = 0xdc
	int initialPlaybackLikelyToKeepUpTrigger;	// 224 = 0xe0
	BOOL initialAlwaysMonitorsPlayability;	// 228 = 0xe4
	BOOL initialWillNeverSeekBackwardsHint;	// 229 = 0xe5
	BOOL initialContinuesPlayingDuringPrerollForSeek;	// 230 = 0xe6
	BOOL initialContinuesPlayingDuringPrerollForRateChange;	// 231 = 0xe7
	double initialBufferingTargetMinimum;	// 232 = 0xe8
	double initialBufferingTargetMaximum;	// 240 = 0xf0
	CFStringRef initialFigTimePitchAlgorithm;	// 248 = 0xf8
	BOOL savesDownloadedDataToDiskWhenDone;	// 252 = 0xfc
	BOOL nonForcedSubtitlesEnabled;	// 253 = 0xfd
	BOOL networkUsuallyExceedsMaxBitRate;	// 254 = 0xfe
	BOOL allowProgressiveSwitchUp;	// 255 = 0xff
	float maximumBitRate;	// 256 = 0x100
	AVAudioMix *audioMix;	// 260 = 0x104
	AVVideoComposition *videoComposition;	// 264 = 0x108
	void *figVideoCompositor;	// 268 = 0x10c
	AVCustomVideoCompositorSession *customVideoCompositorSession;	// 272 = 0x110
	BOOL seekingWaitsForVideoCompositionRendering;	// 276 = 0x114
	NSArray *textStyleRules;	// 280 = 0x118
	NSDictionary *gaplessInfo;	// 284 = 0x11c
	int initialVariantIndex;	// 288 = 0x120
	NSDictionary *audibleDRMInfo;	// 292 = 0x124
	NSDictionary *rampInOutInfo;	// 296 = 0x128
	float soundCheckVolumeNormalization;	// 300 = 0x12c
	float volumeAdjustment;	// 304 = 0x130
	NSMutableArray *handlersToCallWhenReadyForEnqueueing;	// 308 = 0x134
	NSMutableDictionary *mediaOptionsSelectedByClient;	// 312 = 0x138
	BOOL haveInitialSamples;	// 316 = 0x13c
	BOOL haveCPEProtector;	// 317 = 0x13d
	BOOL didSetAssetToAssetWithFigPlaybackItem;	// 318 = 0x13e
	BOOL didBecomeReadyForBasicInspection;	// 319 = 0x13f
	BOOL didBecomeReadyForInspectionOfMediaSelectionOptions;	// 320 = 0x140
	BOOL didBecomeReadyForInspectionOfTracks;	// 321 = 0x141
	BOOL didBecomeReadyForInspectionOfPresentationSize;	// 322 = 0x142
	BOOL didBecomeReadyForInspectionOfDuration;	// 323 = 0x143
	BOOL didInformObserversAboutAvailabilityOfTracks;	// 324 = 0x144
	BOOL didFireKVOForAssetForNonStreamingItem;	// 325 = 0x145
	BOOL didApplyInitialAudioMix;	// 326 = 0x146
	BOOL wasInitializedWithURL;	// 327 = 0x147
	BOOL needTimedMetadataNotification;	// 328 = 0x148
	BOOL externalSubtitlesEnabled;	// 329 = 0x149
	BOOL externalProtectionRequested;	// 330 = 0x14a
	BOOL requiresAccessLog;	// 331 = 0x14b
	int eqPreset;	// 332 = 0x14c
	OpaqueFigSimpleMutex *seekIDMutex;	// 336 = 0x150
	int nextSeekIDToGenerate;	// 340 = 0x154
	int pendingSeekID;	// 344 = 0x158
	id seekCompletionHandler;	// 348 = 0x15c
	NSString *dataYouTubeID;	// 352 = 0x160
	NSArray *itemOutputs;	// 356 = 0x164
	NSMutableArray *itemVideoOutputs;	// 360 = 0x168
	NSMutableArray *itemLegibleOutputs;	// 364 = 0x16c
	NSString *serviceIdentifier;	// 368 = 0x170
	NSString *mediaKind;	// 372 = 0x174
	unsigned restrictions;	// 376 = 0x178
}
@end

