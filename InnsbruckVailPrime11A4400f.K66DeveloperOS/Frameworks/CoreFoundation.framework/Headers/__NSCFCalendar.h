/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

#import "NSCalendar.h"
#import "CoreFoundation-Structs.h"


__attribute__((visibility("hidden")))
@interface __NSCFCalendar : NSCalendar {
}
@property(assign) unsigned firstWeekday;	// G=0x2d30534d; S=0x2d3052a9; converted property
@property(retain) id gregorianStartDate;	// G=0x2d3055b9; S=0x2d305401; converted property
@property(retain) id locale;	// G=0x2d305159; S=0x2d285161; converted property
@property(assign) unsigned minimumDaysInFirstWeek;	// G=0x2d3053f9; S=0x2d305355; converted property
@property(retain) id timeZone;	// G=0x2d285c75; S=0x2d285155; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x2d3050e1
+ (id)calendarWithIdentifier:(id)identifier;	// 0x2d3067e9
- (id)initWithCalendarIdentifier:(id)calendarIdentifier;	// 0x2d2850e9
- (BOOL)_isDeallocating;	// 0x2d305091
- (BOOL)_tryRetain;	// 0x2d305081
- (id)calendarIdentifier;	// 0x2d2936e9
- (int)compareDate:(id)date toDate:(id)date2 toUnitGranularity:(unsigned)unitGranularity;	// 0x2d306e71
- (int)component:(unsigned)component fromDate:(id)date;	// 0x2d306b2d
- (id)components:(unsigned)components fromDate:(id)date;	// 0x2d279409
- (id)components:(unsigned)components fromDate:(id)date toDate:(id)date3 options:(unsigned)options;	// 0x2d2924d9
- (id)components:(unsigned)components fromDateComponents:(id)dateComponents toDateComponents:(id)dateComponents3 options:(unsigned)options;	// 0x2d3074e5
- (id)componentsInTimeZone:(id)timeZone fromDate:(id)date;	// 0x2d306e09
- (id)copyWithZone:(NSZone *)zone;	// 0x2d2860dd
- (id)dateByAddingComponents:(id)components toDate:(id)date options:(unsigned)options;	// 0x2d286691
- (id)dateByAddingUnit:(unsigned)unit value:(int)value toDate:(id)date options:(unsigned)options;	// 0x2d3074e9
- (id)dateBySettingHour:(int)hour minute:(int)minute second:(int)second toDate:(id)date options:(unsigned)options;	// 0x2d3078c1
- (id)dateBySettingUnit:(unsigned)unit value:(int)value toDate:(id)date options:(unsigned)options;	// 0x2d3078bd
- (id)dateFromComponents:(id)components;	// 0x2d285791
- (id)dateWithEra:(int)era year:(int)year month:(int)month day:(int)day hour:(int)hour minute:(int)minute second:(int)second nanosecond:(int)nanosecond;	// 0x2d306bdd
- (id)dateWithEra:(int)era yearForWeekOfYear:(int)year weekOfYear:(int)year3 weekday:(int)weekday hour:(int)hour minute:(int)minute second:(int)second nanosecond:(int)nanosecond;	// 0x2d306cd5
- (void)finalize;	// 0x2d3050a1
// converted property getter: - (unsigned)firstWeekday;	// 0x2d30534d
- (void)getEra:(out int *)era year:(out int *)year month:(out int *)month day:(out int *)day fromDate:(id)date;	// 0x2d306825
- (void)getEra:(out int *)era yearForWeekOfYear:(out int *)year weekOfYear:(out int *)year3 weekday:(out int *)weekday fromDate:(id)date;	// 0x2d306925
- (void)getHour:(out int *)hour minute:(out int *)minute second:(out int *)second nanosecond:(out int *)nanosecond fromDate:(id)date;	// 0x2d306a29
// converted property getter: - (id)gregorianStartDate;	// 0x2d3055b9
- (unsigned)hash;	// 0x2d305079
- (BOOL)isDate:(id)date equalToDate:(id)date2 toUnitGranularity:(unsigned)unitGranularity;	// 0x2d306e75
- (BOOL)isDate:(id)date inSameDayAsDate:(id)sameDayAsDate;	// 0x2d306f91
- (BOOL)isDateInToday:(id)today;	// 0x2d3070ad
- (BOOL)isDateInTomorrow:(id)tomorrow;	// 0x2d307299
- (BOOL)isDateInWeekend:(id)weekend;	// 0x2d3073c9
- (BOOL)isDateInYesterday:(id)yesterday;	// 0x2d307171
- (BOOL)isEqual:(id)equal;	// 0x2d286679
// converted property getter: - (id)locale;	// 0x2d305159
- (NSRange)maximumRangeOfUnit:(unsigned)unit;	// 0x2d291da5
// converted property getter: - (unsigned)minimumDaysInFirstWeek;	// 0x2d3053f9
- (NSRange)minimumRangeOfUnit:(unsigned)unit;	// 0x2d305675
- (id)nextDateAfterDate:(id)date matchingComponents:(id)components options:(unsigned)options;	// 0x2d307561
- (id)nextDateAfterDate:(id)date matchingHour:(int)hour minute:(int)minute second:(int)second options:(unsigned)options;	// 0x2d3077a9
- (id)nextDateAfterDate:(id)date matchingUnit:(unsigned)unit value:(int)value options:(unsigned)options;	// 0x2d3076bd
- (BOOL)nextWeekendStartDate:(out id *)date interval:(out double *)interval options:(unsigned)options afterDate:(id)date4;	// 0x2d307a65
- (unsigned)ordinalityOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x2d3058f1
- (NSRange)rangeOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x2d292f1d
- (BOOL)rangeOfUnit:(unsigned)unit startDate:(id *)date interval:(double *)interval forDate:(id)date4;	// 0x2d305e81
- (BOOL)rangeOfWeekendStartDate:(out id *)weekendStartDate interval:(out double *)interval containingDate:(id)date;	// 0x2d3073fd
- (oneway void)release;	// 0x2d27cadd
- (id)retain;	// 0x2d28517d
- (unsigned)retainCount;	// 0x2d30509d
// converted property setter: - (void)setFirstWeekday:(unsigned)weekday;	// 0x2d3052a9
// converted property setter: - (void)setGregorianStartDate:(id)date;	// 0x2d305401
// converted property setter: - (void)setLocale:(id)locale;	// 0x2d285161
// converted property setter: - (void)setMinimumDaysInFirstWeek:(unsigned)firstWeek;	// 0x2d305355
// converted property setter: - (void)setTimeZone:(id)zone;	// 0x2d285155
- (id)startOfDayForDate:(id)date;	// 0x2d306dcd
// converted property getter: - (id)timeZone;	// 0x2d285c75
@end

