/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

#import "CoreMotion-Structs.h"
#import </libobjc.A.h>

@class CMGyroData, CMAccelerometerData, CMDeviceMotion, CMMagnetometerData;

@interface CMMotionManager : NSObject {
	id _internal;	// 4 = 0x4
}
@property(readonly, assign, nonatomic, getter=isAccelerometerActive) BOOL accelerometerActive;	// G=0x2d911d65; @dynamic
@property(readonly, assign, nonatomic, getter=isAccelerometerAvailable) BOOL accelerometerAvailable;	// G=0x2d911d55; @dynamic
@property(readonly, assign) CMAccelerometerData *accelerometerData;	// G=0x2d911e49; @dynamic
@property(assign, nonatomic) double accelerometerUpdateInterval;	// G=0x2d911e21; S=0x2d911d89; @dynamic
@property(readonly, assign, nonatomic) int attitudeReferenceFrame;	// G=0x2d912b4d; @dynamic
@property(readonly, assign) CMDeviceMotion *deviceMotion;	// G=0x2d912b6d; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionActive) BOOL deviceMotionActive;	// G=0x2d912a69; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionAvailable) BOOL deviceMotionAvailable;	// G=0x2d912a41; @dynamic
@property(assign, nonatomic) double deviceMotionUpdateInterval;	// G=0x2d912b25; S=0x2d912a8d; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroActive) BOOL gyroActive;	// G=0x2d9123d9; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroAvailable) BOOL gyroAvailable;	// G=0x2d9123c9; @dynamic
@property(readonly, assign) CMGyroData *gyroData;	// G=0x2d9124bd; @dynamic
@property(assign, nonatomic) double gyroUpdateInterval;	// G=0x2d912495; S=0x2d9123fd; @dynamic
@property(readonly, assign, nonatomic, getter=isMagnetometerActive) BOOL magnetometerActive;	// G=0x2d9139b1; 
@property(readonly, assign, nonatomic, getter=isMagnetometerAvailable) BOOL magnetometerAvailable;	// G=0x2d9139a1; 
@property(readonly, assign) CMMagnetometerData *magnetometerData;	// G=0x2d913a95; 
@property(assign, nonatomic) double magnetometerUpdateInterval;	// G=0x2d913a6d; S=0x2d9139d5; 
@property(assign, nonatomic) BOOL showsDeviceMovementDisplay;	// G=0x2d9140a1; S=0x2d914019; 
@property(assign) BOOL useAccelerometer;	// G=0x2d9114dd; S=0x2d9114b5; converted property
+ (unsigned)availableAttitudeReferenceFrames;	// 0x2d9115ad
+ (void)dummySelector:(id)selector;	// 0x2d9162ad
+ (void)initialize;	// 0x2d9114fd
+ (void)setAllowInBackground:(BOOL)background;	// 0x2d9115cd
- (id)init;	// 0x2d9115d1
- (id)initPrivate;	// 0x2d911759
- (id)initUsing6AxisSensorFusion;	// 0x2d914189
- (id)initUsingGyroOnlySensorFusion;	// 0x2d9141d9
// declared property getter: - (id)accelerometerData;	// 0x2d911e49
// declared property getter: - (double)accelerometerUpdateInterval;	// 0x2d911e21
// declared property getter: - (int)attitudeReferenceFrame;	// 0x2d912b4d
- (void)dealloc;	// 0x2d911ad9
- (void)deallocPrivate;	// 0x2d911c3d
// declared property getter: - (id)deviceMotion;	// 0x2d912b6d
// declared property getter: - (double)deviceMotionUpdateInterval;	// 0x2d912b25
- (void)didBecomeActive:(id)active;	// 0x2d916155
- (void)didBecomeActivePrivate:(id)aPrivate;	// 0x2d916269
- (void)dismissDeviceMovementDisplay;	// 0x2d914149
// declared property getter: - (id)gyroData;	// 0x2d9124bd
// declared property getter: - (double)gyroUpdateInterval;	// 0x2d912495
- (int)gyttNumTemperatures;	// 0x2d913889
// declared property getter: - (BOOL)isAccelerometerActive;	// 0x2d911d65
// declared property getter: - (BOOL)isAccelerometerAvailable;	// 0x2d911d55
// declared property getter: - (BOOL)isDeviceMotionActive;	// 0x2d912a69
// declared property getter: - (BOOL)isDeviceMotionAvailable;	// 0x2d912a41
// declared property getter: - (BOOL)isGyroActive;	// 0x2d9123d9
// declared property getter: - (BOOL)isGyroAvailable;	// 0x2d9123c9
// declared property getter: - (BOOL)isMagnetometerActive;	// 0x2d9139b1
// declared property getter: - (BOOL)isMagnetometerAvailable;	// 0x2d9139a1
// declared property getter: - (id)magnetometerData;	// 0x2d913a95
// declared property getter: - (double)magnetometerUpdateInterval;	// 0x2d913a6d
- (void)onAccelerometer:(const Sample *)accelerometer;	// 0x2d915339
- (void)onDeviceMotion:(const Sample *)motion;	// 0x2d915971
- (void)onGeomagneticModel:(const XXStruct_01mbIB *)model;	// 0x2d91603d
- (void)onGyro:(const Sample *)gyro;	// 0x2d915549
- (void)onMagnetometer:(const Sample *)magnetometer;	// 0x2d915761
- (void)rebuildGytt;	// 0x2d913565
- (void)setAccelerometerDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x2d914225
// declared property setter: - (void)setAccelerometerUpdateInterval:(double)interval;	// 0x2d911d89
- (void)setAccelerometerUpdateIntervalPrivate:(double)aPrivate;	// 0x2d9120c1
- (void)setDeviceMotionCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval fsync:(BOOL)fsync;	// 0x2d914855
// declared property setter: - (void)setDeviceMotionUpdateInterval:(double)interval;	// 0x2d912a8d
- (void)setDeviceMotionUpdateIntervalPrivate:(double)aPrivate;	// 0x2d912fd1
- (void)setGyroDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x2d91453d
// declared property setter: - (void)setGyroUpdateInterval:(double)interval;	// 0x2d9123fd
- (void)setGyroUpdateIntervalPrivate:(double)aPrivate;	// 0x2d912739
// declared property setter: - (void)setMagnetometerUpdateInterval:(double)interval;	// 0x2d9139d5
- (void)setMagnetometerUpdateIntervalPrivate:(double)aPrivate;	// 0x2d913d11
- (void)setMaxAccelerationVarianceForStability:(float)stability;	// 0x2d9151b9
- (void)setSensorThrottleTime:(double)time;	// 0x2d914e99
- (void)setSensorTurnOffTime:(double)time;	// 0x2d915029
// declared property setter: - (void)setShowsDeviceMovementDisplay:(BOOL)display;	// 0x2d914019
- (void)setShowsDeviceMovementDisplayPrivate:(BOOL)aPrivate;	// 0x2d9140c1
// converted property setter: - (void)setUseAccelerometer:(BOOL)accelerometer;	// 0x2d9114b5
- (void)setWantsPowerConservativeDeviceMotion:(BOOL)motion;	// 0x2d914d1d
- (void)showDeviceMovementDisplay;	// 0x2d9140fd
// declared property getter: - (BOOL)showsDeviceMovementDisplay;	// 0x2d9140a1
- (void)startAccelerometerUpdates;	// 0x2d911ef9
- (void)startAccelerometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x2d912129
- (void)startAccelerometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x2d911f79
- (void)startDeviceMotionUpdates;	// 0x2d912c41
- (void)startDeviceMotionUpdatesPrivateUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x2d913041
- (void)startDeviceMotionUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x2d912ce1
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame;	// 0x2d912dd9
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x2d912e6d
- (void)startGyroUpdates;	// 0x2d91256d
- (void)startGyroUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x2d9127a1
- (void)startGyroUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x2d9125ed
- (void)startMagnetometerUpdates;	// 0x2d913b45
- (void)startMagnetometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x2d913d79
- (void)startMagnetometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x2d913bc5
- (void)stopAccelerometerUpdates;	// 0x2d912045
- (void)stopAccelerometerUpdatesPrivate;	// 0x2d91231d
- (void)stopDeviceMotionUpdates;	// 0x2d912f51
- (void)stopDeviceMotionUpdatesPrivate;	// 0x2d913481
- (void)stopGyroUpdates;	// 0x2d9126b9
- (void)stopGyroUpdatesPrivate;	// 0x2d912995
- (void)stopMagnetometerUpdates;	// 0x2d913c91
- (void)stopMagnetometerUpdatesPrivate;	// 0x2d913f6d
// converted property getter: - (BOOL)useAccelerometer;	// 0x2d9114dd
- (void)willResignActive:(id)active;	// 0x2d9160a5
- (void)willResignActivePrivate:(id)aPrivate;	// 0x2d916205
@end

