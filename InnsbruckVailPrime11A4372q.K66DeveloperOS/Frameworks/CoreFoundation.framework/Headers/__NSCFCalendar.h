/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

#import "NSCalendar.h"
#import "CoreFoundation-Structs.h"


__attribute__((visibility("hidden")))
@interface __NSCFCalendar : NSCalendar {
}
@property(assign) unsigned firstWeekday;	// G=0x2d28c285; S=0x2d28c1e1; converted property
@property(retain) id gregorianStartDate;	// G=0x2d28c4f1; S=0x2d28c339; converted property
@property(retain) id locale;	// G=0x2d28c091; S=0x2d20baf9; converted property
@property(assign) unsigned minimumDaysInFirstWeek;	// G=0x2d28c331; S=0x2d28c28d; converted property
@property(retain) id timeZone;	// G=0x2d20c60d; S=0x2d20baed; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x2d28c019
+ (id)calendarWithIdentifier:(id)identifier;	// 0x2d28d721
- (id)initWithCalendarIdentifier:(id)calendarIdentifier;	// 0x2d20ba81
- (BOOL)_isDeallocating;	// 0x2d28bfc9
- (BOOL)_tryRetain;	// 0x2d28bfb9
- (id)calendarIdentifier;	// 0x2d21a0f9
- (int)compareDate:(id)date toDate:(id)date2 toUnitGranularity:(unsigned)unitGranularity;	// 0x2d28dda9
- (int)component:(unsigned)component fromDate:(id)date;	// 0x2d28da65
- (id)components:(unsigned)components fromDate:(id)date;	// 0x2d1ffcb9
- (id)components:(unsigned)components fromDate:(id)date toDate:(id)date3 options:(unsigned)options;	// 0x2d218ef9
- (id)components:(unsigned)components fromDateComponents:(id)dateComponents toDateComponents:(id)dateComponents3 options:(unsigned)options;	// 0x2d28e41d
- (id)componentsInTimeZone:(id)timeZone fromDate:(id)date;	// 0x2d28dd41
- (id)copyWithZone:(NSZone *)zone;	// 0x2d20ca75
- (id)dateByAddingComponents:(id)components toDate:(id)date options:(unsigned)options;	// 0x2d20d029
- (id)dateByAddingUnit:(unsigned)unit value:(int)value toDate:(id)date options:(unsigned)options;	// 0x2d28e421
- (id)dateBySettingHour:(int)hour minute:(int)minute second:(int)second toDate:(id)date options:(unsigned)options;	// 0x2d28e7f9
- (id)dateBySettingUnit:(unsigned)unit value:(int)value toDate:(id)date options:(unsigned)options;	// 0x2d28e7f5
- (id)dateFromComponents:(id)components;	// 0x2d20c129
- (id)dateWithEra:(int)era year:(int)year month:(int)month day:(int)day hour:(int)hour minute:(int)minute second:(int)second nanosecond:(int)nanosecond;	// 0x2d28db15
- (id)dateWithEra:(int)era yearForWeekOfYear:(int)year weekOfYear:(int)year3 weekday:(int)weekday hour:(int)hour minute:(int)minute second:(int)second nanosecond:(int)nanosecond;	// 0x2d28dc0d
- (void)finalize;	// 0x2d28bfd9
// converted property getter: - (unsigned)firstWeekday;	// 0x2d28c285
- (void)getEra:(out int *)era year:(out int *)year month:(out int *)month day:(out int *)day fromDate:(id)date;	// 0x2d28d75d
- (void)getEra:(out int *)era yearForWeekOfYear:(out int *)year weekOfYear:(out int *)year3 weekday:(out int *)weekday fromDate:(id)date;	// 0x2d28d85d
- (void)getHour:(out int *)hour minute:(out int *)minute second:(out int *)second nanosecond:(out int *)nanosecond fromDate:(id)date;	// 0x2d28d961
// converted property getter: - (id)gregorianStartDate;	// 0x2d28c4f1
- (unsigned)hash;	// 0x2d28bfb1
- (BOOL)isDate:(id)date equalToDate:(id)date2 toUnitGranularity:(unsigned)unitGranularity;	// 0x2d28ddad
- (BOOL)isDate:(id)date inSameDayAsDate:(id)sameDayAsDate;	// 0x2d28dec9
- (BOOL)isDateInToday:(id)today;	// 0x2d28dfe5
- (BOOL)isDateInTomorrow:(id)tomorrow;	// 0x2d28e1d1
- (BOOL)isDateInWeekend:(id)weekend;	// 0x2d28e301
- (BOOL)isDateInYesterday:(id)yesterday;	// 0x2d28e0a9
- (BOOL)isEqual:(id)equal;	// 0x2d20d011
// converted property getter: - (id)locale;	// 0x2d28c091
- (NSRange)maximumRangeOfUnit:(unsigned)unit;	// 0x2d2187c5
// converted property getter: - (unsigned)minimumDaysInFirstWeek;	// 0x2d28c331
- (NSRange)minimumRangeOfUnit:(unsigned)unit;	// 0x2d28c5ad
- (id)nextDateAfterDate:(id)date matchingComponents:(id)components options:(unsigned)options;	// 0x2d28e499
- (id)nextDateAfterDate:(id)date matchingHour:(int)hour minute:(int)minute second:(int)second options:(unsigned)options;	// 0x2d28e6e1
- (id)nextDateAfterDate:(id)date matchingUnit:(unsigned)unit value:(int)value options:(unsigned)options;	// 0x2d28e5f5
- (BOOL)nextWeekendStartDate:(out id *)date interval:(out double *)interval options:(unsigned)options afterDate:(id)date4;	// 0x2d28e99d
- (unsigned)ordinalityOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x2d28c829
- (NSRange)rangeOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x2d21992d
- (BOOL)rangeOfUnit:(unsigned)unit startDate:(id *)date interval:(double *)interval forDate:(id)date4;	// 0x2d28cdb9
- (BOOL)rangeOfWeekendStartDate:(out id *)weekendStartDate interval:(out double *)interval containingDate:(id)date;	// 0x2d28e335
- (oneway void)release;	// 0x2d2033bd
- (id)retain;	// 0x2d20bb15
- (unsigned)retainCount;	// 0x2d28bfd5
// converted property setter: - (void)setFirstWeekday:(unsigned)weekday;	// 0x2d28c1e1
// converted property setter: - (void)setGregorianStartDate:(id)date;	// 0x2d28c339
// converted property setter: - (void)setLocale:(id)locale;	// 0x2d20baf9
// converted property setter: - (void)setMinimumDaysInFirstWeek:(unsigned)firstWeek;	// 0x2d28c28d
// converted property setter: - (void)setTimeZone:(id)zone;	// 0x2d20baed
- (id)startOfDayForDate:(id)date;	// 0x2d28dd05
// converted property getter: - (id)timeZone;	// 0x2d20c60d
@end

