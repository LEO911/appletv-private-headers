/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 */

#import "CFNetwork-Structs.h"
#import "NSSecureCoding.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSString, NSHTTPCookieStorage, NSDictionary, NSArray, NSURLCredentialStorage, NSURLCache;

@interface __NSCFURLSessionConfiguration : NSObject <NSCopying, NSSecureCoding> {
	CFURLStorageSessionRef _legacyStorageSystem;	// 4 = 0x4
	BOOL _backgroundSession;	// 8 = 0x8
	BOOL _allowsCellularAccess;	// 9 = 0x9
	BOOL _discretionary;	// 10 = 0xa
	BOOL _HTTPShouldUsePipelining;	// 11 = 0xb
	BOOL _HTTPShouldSetCookies;	// 12 = 0xc
	BOOL __credStorageSet;	// 13 = 0xd
	BOOL __urlCacheSet;	// 14 = 0xe
	BOOL __cookieStorageSet;	// 15 = 0xf
	BOOL _tasks_created_suspended;	// 16 = 0x10
	BOOL _skip_download_unlink;	// 17 = 0x11
	BOOL __preventsIdleSleep;	// 18 = 0x12
	BOOL __usePipeliningHeuristics;	// 19 = 0x13
	BOOL __startSynchronously;	// 20 = 0x14
	NSString *_identifier;	// 24 = 0x18
	unsigned _requestCachePolicy;	// 28 = 0x1c
	unsigned _networkServiceType;	// 32 = 0x20
	NSDictionary *_connectionProxyDictionary;	// 36 = 0x24
	int _TLSMinimumSupportedProtocol;	// 40 = 0x28
	int _TLSMaximumSupportedProtocol;	// 44 = 0x2c
	unsigned _HTTPCookieAcceptPolicy;	// 48 = 0x30
	NSDictionary *_HTTPAdditionalHeaders;	// 52 = 0x34
	int _HTTPMaximumConnectionsPerHost;	// 56 = 0x38
	NSArray *_protocolClasses;	// 60 = 0x3c
	NSURLCredentialStorage *_URLCredentialStorage;	// 64 = 0x40
	NSURLCredentialStorage *__credStorage;	// 68 = 0x44
	NSURLCache *__urlCache;	// 72 = 0x48
	NSHTTPCookieStorage *__cookieStorage;	// 76 = 0x4c
	NSString *_disposition;	// 80 = 0x50
	CFHSTSPolicyRef _HSTSPolicy;	// 84 = 0x54
	NSDictionary *__cfurlConnectionProperties;	// 88 = 0x58
	NSDictionary *__socketStreamProperties;	// 92 = 0x5c
	NSArray *__contentDispHeadEncFallback;	// 96 = 0x60
	double _timeoutIntervalForRequest;	// 100 = 0x64
	double _timeoutIntervalForResource;	// 108 = 0x6c
	double _connectionCachePurgeTimeout;	// 116 = 0x74
	double _connectionCacheCellPurgeTimeout;	// 124 = 0x7c
}
@property(retain) CFHSTSPolicyRef HSTSPolicy;	// G=0x2cf37021; S=0x2cf37035; @synthesize=_HSTSPolicy
@property(copy) NSDictionary *HTTPAdditionalHeaders;	// G=0x2cf36e71; S=0x2cf36e85; @synthesize=_HTTPAdditionalHeaders
@property(assign) unsigned HTTPCookieAcceptPolicy;	// G=0x2cf36e45; S=0x2cf36e59; @synthesize=_HTTPCookieAcceptPolicy
@property(retain, getter=HTTPCookieStorage, setter=setHTTPCookieStorage:) NSHTTPCookieStorage *HTTPCookieStorage;	// G=0x2cf35cad; S=0x2cf35d91; 
@property(assign) int HTTPMaximumConnectionsPerHost;	// G=0x2cf36e95; S=0x2cf36ea9; @synthesize=_HTTPMaximumConnectionsPerHost
@property(assign) BOOL HTTPShouldSetCookies;	// G=0x2cf36e15; S=0x2cf36e2d; @synthesize=_HTTPShouldSetCookies
@property(assign) BOOL HTTPShouldUsePipelining;	// G=0x2cf36de5; S=0x2cf36dfd; @synthesize=_HTTPShouldUsePipelining
@property(assign) int TLSMaximumSupportedProtocol;	// G=0x2cf36db9; S=0x2cf36dcd; @synthesize=_TLSMaximumSupportedProtocol
@property(assign) int TLSMinimumSupportedProtocol;	// G=0x2cf36d8d; S=0x2cf36da1; @synthesize=_TLSMinimumSupportedProtocol
@property(retain, getter=URLCache, setter=setURLCache:) NSURLCache *URLCache;	// G=0x2cf35ddd; S=0x2cf35e9d; 
@property(readonly, retain) NSURLCredentialStorage *URLCredentialStorage;	// G=0x2cf35ee9; converted property
@property(retain, getter=URLCredentialStoreage, setter=setURLCredentialStorage:) NSURLCredentialStorage *URLCredentialStorage;	// G=0x2cf36ee5; S=0x2cf35fa9; @synthesize=_URLCredentialStorage
@property(copy) NSDictionary *_cfurlConnectionProperties;	// G=0x2cf37175; S=0x2cf37189; @synthesize=__cfurlConnectionProperties
@property(copy) NSArray *_contentDispHeadEncFallback;	// G=0x2cf3724d; S=0x2cf37261; @synthesize=__contentDispHeadEncFallback
@property(retain) NSHTTPCookieStorage *_cookieStorage;	// G=0x2cf36fa1; S=0x2cf36fb5; @synthesize=__cookieStorage
@property(assign) BOOL _cookieStorageSet;	// G=0x2cf36fc5; S=0x2cf36fdd; @synthesize=__cookieStorageSet
@property(retain) NSURLCredentialStorage *_credStorage;	// G=0x2cf36ef9; S=0x2cf36f0d; @synthesize=__credStorage
@property(assign) BOOL _credStorageSet;	// G=0x2cf36f1d; S=0x2cf36f35; @synthesize=__credStorageSet
@property(assign) BOOL _preventsIdleSleep;	// G=0x2cf371bd; S=0x2cf371d5; @synthesize=__preventsIdleSleep
@property(copy) NSDictionary *_socketStreamProperties;	// G=0x2cf37199; S=0x2cf371ad; @synthesize=__socketStreamProperties
@property(assign) BOOL _startSynchronously;	// G=0x2cf3721d; S=0x2cf37235; @synthesize=__startSynchronously
@property(retain) NSURLCache *_urlCache;	// G=0x2cf36f4d; S=0x2cf36f61; @synthesize=__urlCache
@property(assign) BOOL _urlCacheSet;	// G=0x2cf36f71; S=0x2cf36f89; @synthesize=__urlCacheSet
@property(assign) BOOL _usePipeliningHeuristics;	// G=0x2cf371ed; S=0x2cf37205; @synthesize=__usePipeliningHeuristics
@property(assign) BOOL allowsCellularAccess;	// G=0x2cf36d09; S=0x2cf36d21; @synthesize=_allowsCellularAccess
@property(assign, getter=isBackgroundSession) BOOL backgroundSession;	// G=0x2cf36b8d; S=0x2cf36ba5; @synthesize=_backgroundSession
@property(assign) double connectionCacheCellPurgeTimeout;	// G=0x2cf370ad; S=0x2cf370e1; @synthesize=_connectionCacheCellPurgeTimeout
@property(assign) double connectionCachePurgeTimeout;	// G=0x2cf37045; S=0x2cf37079; @synthesize=_connectionCachePurgeTimeout
@property(copy) NSDictionary *connectionProxyDictionary;	// G=0x2cf36d69; S=0x2cf36d7d; @synthesize=_connectionProxyDictionary
@property(assign, getter=isDiscretionary) BOOL discretionary;	// G=0x2cf36d39; S=0x2cf36d51; @synthesize=_discretionary
@property(assign) NSString *disposition;	// G=0x2cf36ff5; S=0x2cf37009; @synthesize=_disposition
@property(copy) NSString *identifier;	// G=0x2cf36bbd; S=0x2cf36bd1; @synthesize=_identifier
@property(assign) unsigned networkServiceType;	// G=0x2cf36cdd; S=0x2cf36cf1; @synthesize=_networkServiceType
@property(copy) NSArray *protocolClasses;	// G=0x2cf36ec1; S=0x2cf36ed5; @synthesize=_protocolClasses
@property(assign) unsigned requestCachePolicy;	// G=0x2cf36be1; S=0x2cf36bf5; @synthesize=_requestCachePolicy
@property(assign) BOOL skip_download_unlink;	// G=0x2cf37145; S=0x2cf3715d; @synthesize=_skip_download_unlink
@property(assign) BOOL tasks_created_suspended;	// G=0x2cf37115; S=0x2cf3712d; @synthesize=_tasks_created_suspended
@property(assign) double timeoutIntervalForRequest;	// G=0x2cf36c0d; S=0x2cf36c41; @synthesize=_timeoutIntervalForRequest
@property(assign) double timeoutIntervalForResource;	// G=0x2cf36c75; S=0x2cf36ca9; @synthesize=_timeoutIntervalForResource
+ (id)backgroundSessionConfiguration:(id)configuration;	// 0x2cf36769
+ (id)defaultSessionConfiguration;	// 0x2cf36595
+ (id)ephemeralSessionConfiguration;	// 0x2cf36681
+ (BOOL)supportsSecureCoding;	// 0x2cf36b21
- (id)initWithCoder:(id)coder;	// 0x2cf369b1
- (id)initWithDisposition:(id)disposition;	// 0x2cf35a61
// declared property getter: - (CFHSTSPolicyRef)HSTSPolicy;	// 0x2cf37021
// declared property getter: - (id)HTTPAdditionalHeaders;	// 0x2cf36e71
// declared property getter: - (unsigned)HTTPCookieAcceptPolicy;	// 0x2cf36e45
// declared property getter: - (id)HTTPCookieStorage;	// 0x2cf35cad
- (id)HTTPCookieStorage_ifSet;	// 0x2cf35d6d
// declared property getter: - (int)HTTPMaximumConnectionsPerHost;	// 0x2cf36e95
// declared property getter: - (BOOL)HTTPShouldSetCookies;	// 0x2cf36e15
// declared property getter: - (BOOL)HTTPShouldUsePipelining;	// 0x2cf36de5
// declared property getter: - (int)TLSMaximumSupportedProtocol;	// 0x2cf36db9
// declared property getter: - (int)TLSMinimumSupportedProtocol;	// 0x2cf36d8d
// declared property getter: - (id)URLCache;	// 0x2cf35ddd
// converted property getter: - (id)URLCredentialStorage;	// 0x2cf35ee9
// declared property getter: - (id)URLCredentialStoreage;	// 0x2cf36ee5
// declared property getter: - (id)_cfurlConnectionProperties;	// 0x2cf37175
// declared property getter: - (id)_contentDispHeadEncFallback;	// 0x2cf3724d
// declared property getter: - (id)_cookieStorage;	// 0x2cf36fa1
// declared property getter: - (BOOL)_cookieStorageSet;	// 0x2cf36fc5
// declared property getter: - (id)_credStorage;	// 0x2cf36ef9
// declared property getter: - (BOOL)_credStorageSet;	// 0x2cf36f1d
// declared property getter: - (BOOL)_preventsIdleSleep;	// 0x2cf371bd
// declared property getter: - (id)_socketStreamProperties;	// 0x2cf37199
// declared property getter: - (BOOL)_startSynchronously;	// 0x2cf3721d
// declared property getter: - (id)_urlCache;	// 0x2cf36f4d
// declared property getter: - (BOOL)_urlCacheSet;	// 0x2cf36f71
// declared property getter: - (BOOL)_usePipeliningHeuristics;	// 0x2cf371ed
// declared property getter: - (BOOL)allowsCellularAccess;	// 0x2cf36d09
// declared property getter: - (double)connectionCacheCellPurgeTimeout;	// 0x2cf370ad
// declared property getter: - (double)connectionCachePurgeTimeout;	// 0x2cf37045
// declared property getter: - (id)connectionProxyDictionary;	// 0x2cf36d69
- (id)copyWithZone:(NSZone *)zone;	// 0x2cf35ff5
- (void)dealloc;	// 0x2cf36b25
// declared property getter: - (id)disposition;	// 0x2cf36ff5
- (void)encodeWithCoder:(id)coder;	// 0x2cf36861
// declared property getter: - (id)identifier;	// 0x2cf36bbd
// declared property getter: - (BOOL)isBackgroundSession;	// 0x2cf36b8d
// declared property getter: - (BOOL)isDiscretionary;	// 0x2cf36d39
// declared property getter: - (unsigned)networkServiceType;	// 0x2cf36cdd
// declared property getter: - (id)protocolClasses;	// 0x2cf36ec1
// declared property getter: - (unsigned)requestCachePolicy;	// 0x2cf36be1
// declared property setter: - (void)setAllowsCellularAccess:(BOOL)access;	// 0x2cf36d21
// declared property setter: - (void)setBackgroundSession:(BOOL)session;	// 0x2cf36ba5
// declared property setter: - (void)setConnectionCacheCellPurgeTimeout:(double)timeout;	// 0x2cf370e1
// declared property setter: - (void)setConnectionCachePurgeTimeout:(double)timeout;	// 0x2cf37079
// declared property setter: - (void)setConnectionProxyDictionary:(id)dictionary;	// 0x2cf36d7d
// declared property setter: - (void)setDiscretionary:(BOOL)discretionary;	// 0x2cf36d51
// declared property setter: - (void)setDisposition:(id)disposition;	// 0x2cf37009
// declared property setter: - (void)setHSTSPolicy:(CFHSTSPolicyRef)policy;	// 0x2cf37035
// declared property setter: - (void)setHTTPAdditionalHeaders:(id)headers;	// 0x2cf36e85
// declared property setter: - (void)setHTTPCookieAcceptPolicy:(unsigned)policy;	// 0x2cf36e59
// declared property setter: - (void)setHTTPCookieStorage:(id)storage;	// 0x2cf35d91
// declared property setter: - (void)setHTTPMaximumConnectionsPerHost:(int)host;	// 0x2cf36ea9
// declared property setter: - (void)setHTTPShouldSetCookies:(BOOL)setCookies;	// 0x2cf36e2d
// declared property setter: - (void)setHTTPShouldUsePipelining:(BOOL)usePipelining;	// 0x2cf36dfd
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x2cf36bd1
// declared property setter: - (void)setNetworkServiceType:(unsigned)type;	// 0x2cf36cf1
// declared property setter: - (void)setProtocolClasses:(id)classes;	// 0x2cf36ed5
// declared property setter: - (void)setRequestCachePolicy:(unsigned)policy;	// 0x2cf36bf5
// declared property setter: - (void)setSkip_download_unlink:(BOOL)unlink;	// 0x2cf3715d
// declared property setter: - (void)setTLSMaximumSupportedProtocol:(int)protocol;	// 0x2cf36dcd
// declared property setter: - (void)setTLSMinimumSupportedProtocol:(int)protocol;	// 0x2cf36da1
// declared property setter: - (void)setTasks_created_suspended:(BOOL)suspended;	// 0x2cf3712d
// declared property setter: - (void)setTimeoutIntervalForRequest:(double)request;	// 0x2cf36c41
// declared property setter: - (void)setTimeoutIntervalForResource:(double)resource;	// 0x2cf36ca9
// declared property setter: - (void)setURLCache:(id)cache;	// 0x2cf35e9d
// declared property setter: - (void)setURLCredentialStorage:(id)storage;	// 0x2cf35fa9
// declared property setter: - (void)set_cfurlConnectionProperties:(id)properties;	// 0x2cf37189
// declared property setter: - (void)set_contentDispHeadEncFallback:(id)fallback;	// 0x2cf37261
// declared property setter: - (void)set_cookieStorage:(id)storage;	// 0x2cf36fb5
// declared property setter: - (void)set_cookieStorageSet:(BOOL)set;	// 0x2cf36fdd
// declared property setter: - (void)set_credStorage:(id)storage;	// 0x2cf36f0d
// declared property setter: - (void)set_credStorageSet:(BOOL)set;	// 0x2cf36f35
// declared property setter: - (void)set_preventsIdleSleep:(BOOL)sleep;	// 0x2cf371d5
// declared property setter: - (void)set_socketStreamProperties:(id)properties;	// 0x2cf371ad
// declared property setter: - (void)set_startSynchronously:(BOOL)synchronously;	// 0x2cf37235
// declared property setter: - (void)set_urlCache:(id)cache;	// 0x2cf36f61
// declared property setter: - (void)set_urlCacheSet:(BOOL)set;	// 0x2cf36f89
// declared property setter: - (void)set_usePipeliningHeuristics:(BOOL)heuristics;	// 0x2cf37205
// declared property getter: - (BOOL)skip_download_unlink;	// 0x2cf37145
// declared property getter: - (BOOL)tasks_created_suspended;	// 0x2cf37115
// declared property getter: - (double)timeoutIntervalForRequest;	// 0x2cf36c0d
// declared property getter: - (double)timeoutIntervalForResource;	// 0x2cf36c75
@end

