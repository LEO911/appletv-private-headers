/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, NSLock, NSData, NSDictionary;

@interface NetflixPlaybackManager : XXUnknownSuperclass {
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
	BOOL trickplayIsOn_;	// 152 = 0x98
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x582fc9; S=0x582fd9; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x582bcd; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x5831e5; S=0x5831fd; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x583211; S=0x583229; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x58314d; S=0x58315d; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x582c11; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x582c75; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x582d35; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x582f15; S=0x582f25; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x583199; S=0x5831b1; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x58316d; S=0x583185; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x583069; S=0x583079; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x583089; S=0x583099; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x582ef5; S=0x57e211; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x582f05; S=0x57e325; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x582ead; S=0x582ec1; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x5831c5; S=0x5831d5; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x5830d5; S=0x5830ed; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x582e8d; S=0x582e9d; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x582ed1; S=0x582ee5; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x58300d; S=0x583025; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x582fe9; S=0x582ffd; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x583121; S=0x583139; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x583101; S=0x583111; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x582f35; S=0x582f45; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x58323d; S=0x583255; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x583269; S=0x58327d; @synthesize=stalled_
@property(assign) int state;	// G=0x58303d; S=0x583051; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x582f79; S=0x582f91; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x582f55; S=0x582f69; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x582fa9; S=0x582fb9; @synthesize=subtitlesTrackIndex_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x5830a9; S=0x5830c1; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x58328d; S=0x58329d; @synthesize=totalNumberOfStalls_
@property(assign) BOOL trickplay;	// G=0x582e75; S=0x582e65; converted property
@property(assign) BOOL trickplayIsOn;	// G=0x5832ad; S=0x5832c5; @synthesize=trickplayIsOn_
+ (void)initialize;	// 0x57df09
+ (id)sharedInstance;	// 0x57df0d
- (id)init;	// 0x57dff9
- (void)audioSelect:(id)select;	// 0x57fb61
- (void)audioSelectAsync:(id)async;	// 0x57fb9d
// declared property getter: - (int)audioTrackIndex;	// 0x582fc9
// declared property getter: - (unsigned)bitrate;	// 0x582bcd
- (void)buffering:(double)buffering;	// 0x57e8b9
- (void)bufferingComplete:(double)complete;	// 0x57e9d1
// declared property getter: - (long long)bufferingStartBytes;	// 0x5831e5
// declared property getter: - (double)bufferingStartTime;	// 0x583211
// declared property getter: - (BwEntry *)bwEntry;	// 0x58314d
// declared property getter: - (long long)bytes;	// 0x582c11
// declared property getter: - (long long)bytesForInterface;	// 0x582c75
- (id)capitalizeAudioTracksArray:(id)array;	// 0x580735
- (id)capitalizeSubtitlesForMovieDetails:(id)movieDetails;	// 0x580825
- (id)capitalizeSubtitlesForTrackCombinationArray:(id)trackCombinationArray;	// 0x580645
- (id)capitalizeTrackCombination:(id)combination;	// 0x580571
- (id)capitalizeTracks:(id)tracks;	// 0x580481
- (void)clearErrorStack;	// 0x582e3d
- (void)close;	// 0x57e7c1
- (id)createErrorFromStack;	// 0x580b85
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x582d35
- (void)dealloc;	// 0x57e0fd
- (void)end:(double)end reason:(id)reason;	// 0x57e5e1
// declared property getter: - (id)errorStack;	// 0x582f15
- (int)fetchBookmark:(id)bookmark;	// 0x5828dd
- (void)getAppCert;	// 0x57ff39
- (void)getFpsCkc:(id)ckc forAssetId:(id)assetId;	// 0x58015d
- (id)getFpsCkcWithSpcData:(id)spcData forAssetId:(id)assetId;	// 0x5802f1
// declared property getter: - (long long)lastBwEntryBytes;	// 0x583199
// declared property getter: - (double)lastBwEntryTime;	// 0x58316d
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x583069
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x583089
// declared property getter: - (IMediaControl *)mediaControl;	// 0x582ef5
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x582f05
- (void)mediaDidAcquireLicense;	// 0x581195
- (void)mediaDidAuthorize;	// 0x581065
- (void)mediaDidBuildPlaylists;	// 0x58122d
- (void)mediaDidCdnSelect;	// 0x5810fd
- (void)mediaDidClose;	// 0x5809d1
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x5813e1
- (void)mediaDidFailOpen:(id)media;	// 0x580edd
- (void)mediaDidHandleNccpError:(id)media;	// 0x580a45
- (void)mediaDidLoadSubtitles:(id)media;	// 0x581311
- (void)mediaDidSelectAudio:(id)media allowsOff:(BOOL)off;	// 0x582d6d
- (void)mediaDidSetSpeed:(float)media;	// 0x581279
- (void)mediaOpenComplete:(id)complete;	// 0x5808f9
- (void)mediaWillAcquireLicense;	// 0x581149
- (void)mediaWillAuthorize;	// 0x581019
- (void)mediaWillBuildPlaylists;	// 0x5811e1
- (void)mediaWillCdnSelect;	// 0x5810b1
- (void)mediaWillLoadSubtitles;	// 0x58130d
// declared property getter: - (id)movieDetails;	// 0x582ead
// declared property getter: - (int)networkInterfaceType;	// 0x5831c5
- (void)networkSelection:(id)selection;	// 0x57f951
- (int)networkTypeStringToType:(id)type;	// 0x57f8dd
// declared property getter: - (double)observedBitrate;	// 0x5830d5
- (void)open:(id)open;	// 0x57e349
- (void)openAsync:(id)async;	// 0x581819
// declared property getter: - (BOOL)openNotificationSent;	// 0x582e8d
- (void)pause:(double)pause;	// 0x57e401
- (void)play:(double)play;	// 0x57e389
// declared property getter: - (id)playReadyKey;	// 0x582ed1
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x58300d
// declared property getter: - (id)playbackCommandLock;	// 0x582fe9
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x582a61
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x57f5f1
// declared property getter: - (long long)pollBytesStart;	// 0x583121
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x583101
- (void)postMediaCloseFailure;	// 0x581711
- (void)postMediaOpenFailure:(int)failure;	// 0x581561
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x581639
- (void)postMediaOpenSuccess:(id)success;	// 0x5814c5
// declared property getter: - (id)reportableActionId;	// 0x582f35
- (void)reposition:(double)reposition;	// 0x57e4f1
// declared property getter: - (double)sampleReportWindow;	// 0x58323d
- (void)selectedPlaylist:(id)playlist;	// 0x57f701
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x582fd9
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x5831fd
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x583229
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x58315d
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x582f25
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x5831b1
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x583185
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x583079
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x583099
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x57e211
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x57e325
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x582ec1
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x5831d5
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x5830ed
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x582e9d
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x582ee5
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x583025
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x582ffd
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x583139
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x583111
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x582f45
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x583255
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x58327d
// declared property setter: - (void)setState:(int)state;	// 0x583051
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x582f91
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x582f69
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x582fb9
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x5830c1
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x58329d
// converted property setter: - (void)setTrickplay:(BOOL)trickplay;	// 0x582e65
// declared property setter: - (void)setTrickplayIsOn:(BOOL)on;	// 0x5832c5
// declared property getter: - (bool)stalled;	// 0x583269
// declared property getter: - (int)state;	// 0x58303d
- (void)stop:(double)stop;	// 0x57e569
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x57eb71
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x582f79
// declared property getter: - (id)subtitlesProcessingLock;	// 0x582f55
- (void)subtitlesSelect:(id)select;	// 0x57f8a1
- (void)subtitlesSelectAsync:(id)async;	// 0x5825bd
// declared property getter: - (int)subtitlesTrackIndex;	// 0x582fa9
// declared property getter: - (long long)totalBytesTransferred;	// 0x5830a9
// declared property getter: - (int)totalNumberOfStalls;	// 0x58328d
- (id)trackWithCapitalizedDescriptionFromTrack:(id)track;	// 0x5803a1
// converted property getter: - (BOOL)trickplay;	// 0x582e75
// declared property getter: - (BOOL)trickplayIsOn;	// 0x5832ad
- (void)unpause:(double)unpause;	// 0x57e479
- (void)updatePts:(double)pts;	// 0x57ebf9
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x57f159
@end

