/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "BRSingleton.h"

@class BRStateMachine, NSTimer, ATVSliderMenuItemView, NSDictionary, NSArray;

__attribute__((visibility("hidden")))
@interface ATVAirTunesManager : BRSingleton {
	BRStateMachine *_stateMachine;	// 4 = 0x4
	BOOL _alternateSpeakersEnabled;	// 8 = 0x8
	BOOL _shouldReconnectOnRouteChange;	// 9 = 0x9
	BOOL _preparingToSleep;	// 10 = 0xa
	NSTimer *_speakerSleepTimer;	// 12 = 0xc
	NSArray *_pickableRoutes;	// 16 = 0x10
	NSArray *_pickableSpeakers;	// 20 = 0x14
	NSArray *_pickableScreens;	// 24 = 0x18
	NSDictionary *_cachedDefaultRoute;	// 28 = 0x1c
	NSDictionary *_previousRoute;	// 32 = 0x20
	BOOL _updatesDisabledForScreenSaver;	// 36 = 0x24
	NSTimer *_disableRouteTimer;	// 40 = 0x28
	ATVSliderMenuItemView *_onScreenVolumeSlider;	// 44 = 0x2c
}
@property(retain) ATVSliderMenuItemView *onScreenVolumeSlider;	// G=0xb5139; S=0xb514d; @synthesize=_onScreenVolumeSlider
@property(readonly, retain) NSArray *pickableScreens;	// G=0xb44b9; converted property
@property(readonly, retain) NSArray *pickableSpeakers;	// G=0xb4181; converted property
+ (void)setSingleton:(id)singleton;	// 0xb27fd
+ (id)singleton;	// 0xb27ed
- (id)init;	// 0xb2821
- (void).cxx_destruct;	// 0xb515d
- (void)_airPlayActiveAudioRouteChanged:(id)changed;	// 0xb6861
- (id)_airPlayAuthFailed:(id)failed;	// 0xb5dc5
- (void)_airPlayPickableRoutesChanged:(id)changed;	// 0xb6769
- (id)_cleanUpSpeakerState:(id)state;	// 0xb6335
- (void)_deviceWillSleep:(id)_device;	// 0xb3445
- (void)_deviceWillWake:(id)_device;	// 0xb349d
- (void)_displayModeChanged:(id)changed;	// 0xb35d9
- (float)_displayVolumeValue;	// 0xb2cb1
- (void)_initializeStateMachine:(id)machine;	// 0xb521d
- (BOOL)_isMuted;	// 0xb2d29
- (BOOL)_isRouteToMe:(id)me;	// 0xb66b5
- (id)_newPasswordDialogForSpeaker:(id)speaker;	// 0xb4ca1
- (void)_portStatusDidChange:(id)_portStatus;	// 0xb68f5
- (void)_postSpeakerWasSelectedNotificationForSpeaker:(id)speaker;	// 0xb6379
- (void)_refreshSpeakerUpdateState;	// 0xb36a5
- (void)_screenSaverActivated:(id)activated;	// 0xb3665
- (void)_screenSaverDeactivated:(id)deactivated;	// 0xb3685
- (id)_selectRoute:(id)route withPassword:(id)password showDialog:(BOOL)dialog isTransient:(BOOL)transient;	// 0xb4831
- (id)_selectedSpeakerInfo;	// 0xb3f39
- (void)_setSelectedSpeakerInfo:(id)info;	// 0xb40f9
- (id)_supportedMediaTypes;	// 0xb64f1
- (void)_updateSpeakerSelectionAfterSleep:(id)sleep;	// 0xb351d
- (BOOL)areAlternateSpeakersSelected;	// 0xb3839
- (id)bonjourDeviceID;	// 0xb3905
- (id)cachedPasswordForSpeaker:(id)speaker;	// 0xb4ef9
- (void)configureSelectedSpeakerSliderMenuItem:(id)item;	// 0xb2d75
- (void)dealloc;	// 0xb2c19
- (id)defaultRoute;	// 0xb4621
- (BOOL)destinationIsAppleTV;	// 0xb3865
- (BOOL)disableSelectedRoute;	// 0xb4b69
- (void)disableSelectedRouteWithDelay:(float)delay;	// 0xb4c31
- (BOOL)doesSpeakerHavePINCode:(id)code;	// 0xb3cfd
- (BOOL)doesSpeakerHavePassword:(id)password;	// 0xb3cb1
- (BOOL)doesSpeakerSupportAirPlayAudio:(id)audio;	// 0xb3d49
- (BOOL)doesSpeakerSupportAirPlayScreen:(id)screen;	// 0xb3de1
- (BOOL)doesSpeakerSupportAirPlayVideo:(id)video;	// 0xb3d95
- (BOOL)enableSelectedRoute;	// 0xb4a75
- (BOOL)isActivelyUsingAlternateSpeakers;	// 0xb37fd
- (BOOL)isDefaultRoute:(id)route;	// 0xb3c55
- (BOOL)isSpeakerConnectedForInfo:(id)info;	// 0xb3b6d
- (int)numPickableRoutes;	// 0xb3921
- (int)numPickableScreens;	// 0xb3941
- (int)numPickableSpeakers;	// 0xb397d
// declared property getter: - (id)onScreenVolumeSlider;	// 0xb5139
// converted property getter: - (id)pickableScreens;	// 0xb44b9
// converted property getter: - (id)pickableSpeakers;	// 0xb4181
- (id)remoteSpeakerInfoAtIndex:(int)index;	// 0xb39b9
- (id)remoteSpeakerInfoWithUID:(id)uid;	// 0xb3a05
- (BOOL)selectRoute:(id)route;	// 0xb477d
- (void)setCachedPassword:(id)password forSpeaker:(id)speaker;	// 0xb4ff1
// declared property setter: - (void)setOnScreenVolumeSlider:(id)slider;	// 0xb514d
- (id)speakerNameForInfo:(id)info;	// 0xb3e51
- (id)speakerUIDForInfo:(id)info;	// 0xb3e2d
- (id)speakersProviderWithHandler:(id)handler title:(id)title initialSelection:(long *)selection disableAlternateRoutes:(BOOL)routes;	// 0xb2fb5
@end

