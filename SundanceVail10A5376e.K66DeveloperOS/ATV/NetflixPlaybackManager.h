/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AppleTV-Structs.h"

@class NSMutableArray, NSData, NSDictionary, NSLock;

@interface NetflixPlaybackManager : XXUnknownSuperclass {
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x4cd389; S=0x4cd399; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x4cced9; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x4cd5a5; S=0x4cd5bd; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x4cd5d1; S=0x4cd5e9; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x4cd50d; S=0x4cd51d; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x4ccf1d; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x4ccf81; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x4cd041; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x4cd2d5; S=0x4cd2e5; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x4cd559; S=0x4cd571; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x4cd52d; S=0x4cd545; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x4cd429; S=0x4cd439; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x4cd449; S=0x4cd459; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x4cd2b5; S=0x4c8875; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x4cd2c5; S=0x4c8989; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x4cd26d; S=0x4cd281; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x4cd585; S=0x4cd595; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x4cd495; S=0x4cd4ad; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x4cd24d; S=0x4cd25d; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x4cd291; S=0x4cd2a5; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x4cd3cd; S=0x4cd3e5; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x4cd3a9; S=0x4cd3bd; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x4cd4e1; S=0x4cd4f9; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x4cd4c1; S=0x4cd4d1; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x4cd2f5; S=0x4cd305; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x4cd5fd; S=0x4cd615; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x4cd629; S=0x4cd63d; @synthesize=stalled_
@property(assign) int state;	// G=0x4cd3fd; S=0x4cd411; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x4cd339; S=0x4cd351; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x4cd315; S=0x4cd329; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x4cd369; S=0x4cd379; @synthesize=subtitlesTrackIndex_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x4cd469; S=0x4cd481; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x4cd64d; S=0x4cd65d; @synthesize=totalNumberOfStalls_
+ (void)initialize;	// 0x4c8579
+ (id)sharedInstance;	// 0x4c857d
- (id)init;	// 0x4c8669
- (void)audioSelect:(id)select;	// 0x4ca245
- (void)audioSelectAsync:(id)async;	// 0x4ca281
// declared property getter: - (int)audioTrackIndex;	// 0x4cd389
// declared property getter: - (unsigned)bitrate;	// 0x4cced9
- (void)buffering:(double)buffering;	// 0x4c8f19
- (void)bufferingComplete:(double)complete;	// 0x4c9031
// declared property getter: - (long long)bufferingStartBytes;	// 0x4cd5a5
// declared property getter: - (double)bufferingStartTime;	// 0x4cd5d1
// declared property getter: - (BwEntry *)bwEntry;	// 0x4cd50d
// declared property getter: - (long long)bytes;	// 0x4ccf1d
// declared property getter: - (long long)bytesForInterface;	// 0x4ccf81
- (id)capitalizeAudioTracksArray:(id)array;	// 0x4ca761
- (id)capitalizeSubtitlesForMovieDetails:(id)movieDetails;	// 0x4ca851
- (id)capitalizeSubtitlesForTrackCombinationArray:(id)trackCombinationArray;	// 0x4ca671
- (id)capitalizeTrackCombination:(id)combination;	// 0x4ca59d
- (id)capitalizeTracks:(id)tracks;	// 0x4ca4ad
- (void)clearErrorStack;	// 0x4cd225
- (void)close;	// 0x4c8e21
- (id)createErrorFromStack;	// 0x4cab9d
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x4cd041
- (void)dealloc;	// 0x4c8761
- (void)end:(double)end reason:(id)reason;	// 0x4c8c41
// declared property getter: - (id)errorStack;	// 0x4cd2d5
- (int)fetchBookmark:(id)bookmark;	// 0x4ccbe9
// declared property getter: - (long long)lastBwEntryBytes;	// 0x4cd559
// declared property getter: - (double)lastBwEntryTime;	// 0x4cd52d
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x4cd429
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x4cd449
// declared property getter: - (IMediaControl *)mediaControl;	// 0x4cd2b5
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x4cd2c5
- (void)mediaDidAcquireLicense;	// 0x4cb1ad
- (void)mediaDidAuthorize;	// 0x4cb07d
- (void)mediaDidBuildPlaylists;	// 0x4cb245
- (void)mediaDidCdnSelect;	// 0x4cb115
- (void)mediaDidClose;	// 0x4ca9e9
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x4cb4a5
- (void)mediaDidFailOpen:(id)media;	// 0x4caef5
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x4cd15d
- (void)mediaDidHandleNccpError:(id)media;	// 0x4caa5d
- (void)mediaDidLoadSubtitles:(id)media;	// 0x4cb371
- (void)mediaDidSelectAudio:(id)media;	// 0x4cd079
- (void)mediaDidSetSpeed:(float)media;	// 0x4cb291
- (void)mediaOpenComplete:(id)complete;	// 0x4ca929
- (void)mediaWillAcquireLicense;	// 0x4cb161
- (void)mediaWillAuthorize;	// 0x4cb031
- (void)mediaWillBuildPlaylists;	// 0x4cb1f9
- (void)mediaWillCdnSelect;	// 0x4cb0c9
- (void)mediaWillLoadSubtitles;	// 0x4cb325
// declared property getter: - (id)movieDetails;	// 0x4cd26d
// declared property getter: - (int)networkInterfaceType;	// 0x4cd585
- (void)networkSelection:(id)selection;	// 0x4ca035
- (int)networkTypeStringToType:(id)type;	// 0x4c9fc1
// declared property getter: - (double)observedBitrate;	// 0x4cd495
- (void)open:(id)open;	// 0x4c89ad
- (void)openAsync:(id)async;	// 0x4cb919
// declared property getter: - (BOOL)openNotificationSent;	// 0x4cd24d
- (void)pause:(double)pause;	// 0x4c8a61
- (void)play:(double)play;	// 0x4c89e9
// declared property getter: - (id)playReadyKey;	// 0x4cd291
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x4cd3cd
// declared property getter: - (id)playbackCommandLock;	// 0x4cd3a9
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x4ccd6d
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x4c9c51
// declared property getter: - (long long)pollBytesStart;	// 0x4cd4e1
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x4cd4c1
- (void)postMediaCloseFailure;	// 0x4cb815
- (void)postMediaOpenFailure:(int)failure;	// 0x4cb665
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x4cb73d
- (void)postMediaOpenSuccess:(id)success;	// 0x4cb5c9
// declared property getter: - (id)reportableActionId;	// 0x4cd2f5
- (void)reposition:(double)reposition;	// 0x4c8b51
// declared property getter: - (double)sampleReportWindow;	// 0x4cd5fd
- (void)selectedPlaylist:(id)playlist;	// 0x4c9d61
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x4cd399
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x4cd5bd
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x4cd5e9
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x4cd51d
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x4cd2e5
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x4cd571
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x4cd545
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x4cd439
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x4cd459
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x4c8875
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x4c8989
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x4cd281
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x4cd595
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x4cd4ad
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x4cd25d
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x4cd2a5
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x4cd3e5
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x4cd3bd
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x4cd4f9
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x4cd4d1
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x4cd305
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x4cd615
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x4cd63d
// declared property setter: - (void)setState:(int)state;	// 0x4cd411
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x4cd351
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x4cd329
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x4cd379
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x4cd481
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x4cd65d
// declared property getter: - (bool)stalled;	// 0x4cd629
// declared property getter: - (int)state;	// 0x4cd3fd
- (void)stop:(double)stop;	// 0x4c8bc9
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x4c91d1
- (void)subtitlesDisable;	// 0x4c9f3d
- (void)subtitlesDisableAsync;	// 0x4ccab9
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x4cd339
// declared property getter: - (id)subtitlesProcessingLock;	// 0x4cd315
- (void)subtitlesSelect:(id)select;	// 0x4c9f01
- (void)subtitlesSelectAbort;	// 0x4c9f79
- (void)subtitlesSelectAsync:(id)async;	// 0x4cc6b1
// declared property getter: - (int)subtitlesTrackIndex;	// 0x4cd369
// declared property getter: - (long long)totalBytesTransferred;	// 0x4cd469
// declared property getter: - (int)totalNumberOfStalls;	// 0x4cd64d
- (id)trackWithCapitalizedDescriptionFromTrack:(id)track;	// 0x4ca3cd
- (void)unpause:(double)unpause;	// 0x4c8ad9
- (void)updatePts:(double)pts;	// 0x4c9259
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x4c97b9
@end

