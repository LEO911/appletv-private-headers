/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import "BRTabControlDelegate.h"
#import "BRTextFieldCharacterInputDelegate.h"
#import "BRControl.h"

@class BRTextFieldControl, NSMutableSet, BRTextFieldBackgroundLayer, BRCursorControl, BRDeviceKeyboardMessage, BRScrollControl, BRTextEntryPlayPauseMessage, NSArray, BRTabControl, BRTextControl, NSAttributedString, BRInputMethod, NSString, BRKeyboard, BRKeyboardControl;

__attribute__((visibility("hidden")))
@interface BRTextEntryControl : BRControl <BRTabControlDelegate, BRTextFieldCharacterInputDelegate> {
	int _textEntryStyle;	// 84 = 0x54
	BRInputMethod *_inputMethod;	// 88 = 0x58
	BRKeyboard *_activeKeyboard;	// 92 = 0x5c
	NSMutableSet *_validInputCharacterSet;	// 96 = 0x60
	BOOL _displayTextEntryHistory;	// 100 = 0x64
	NSString *_textEntryHistoryClient;	// 104 = 0x68
	NSString *_textEntryHistoryBehavior;	// 108 = 0x6c
	BRTextEntryPlayPauseMessage *_playPauseMessage;	// 112 = 0x70
	BRControl *_candidatesBackground;	// 116 = 0x74
	BRScrollControl *_candidatesKeysContainer;	// 120 = 0x78
	BRKeyboardControl *_keyboardControl;	// 124 = 0x7c
	BRScrollControl *_keyboardContainer;	// 128 = 0x80
	BRControl *_actionKeysContainer;	// 132 = 0x84
	BRTextFieldBackgroundLayer *_textFieldBackground;	// 136 = 0x88
	BRTextControl *_textFieldLabel;	// 140 = 0x8c
	NSAttributedString *_textFieldLabelString;	// 144 = 0x90
	BRTextFieldControl *_textField;	// 148 = 0x94
	BRTabControl *_tabControl;	// 152 = 0x98
	BRCursorControl *_cursor;	// 156 = 0x9c
	BOOL _providesOwnCursor;	// 160 = 0xa0
	NSArray *_customizedTextFieldControls;	// 164 = 0xa4
	BRDeviceKeyboardMessage *_deviceKeyboardMessage;	// 168 = 0xa8
	BRKeyboard *_popupKeyboard;	// 172 = 0xac
	CGPoint _focusedMainKeyRemembery;	// 176 = 0xb0
	BOOL _displayPopupKeyboardAfterKeyboardSwitch;	// 184 = 0xb8
	CGColorRef _popupBackgroundColor;	// 188 = 0xbc
	CGColorRef _popupBorderColor;	// 192 = 0xc0
	int _popupShadowStyle;	// 196 = 0xc4
	BOOL _constrainCursorToPopupKeyboard;	// 200 = 0xc8
	BRKeyboardControl *_popupKeyboardControl;	// 204 = 0xcc
	CGPoint _previousKeyboardFocus;	// 208 = 0xd0
	int _textLengthLimit;	// 216 = 0xd8
	BOOL _showUserEnteredText;	// 220 = 0xdc
	BOOL _textFieldIsInternal;	// 221 = 0xdd
	BOOL _shouldRestoreTextFieldCursor;	// 222 = 0xde
	BOOL _shouldWrapHorizontally;	// 223 = 0xdf
	BOOL _shouldWrapVertically;	// 224 = 0xe0
	BOOL _clientHasSpecifiedHorizontalWrapping;	// 225 = 0xe1
	BOOL _clientHasSpecifiedVerticalWrapping;	// 226 = 0xe2
	BOOL _displayPlayPauseMessage;	// 227 = 0xe3
	NSString *_uniqueIDForPlayPauseRegistration;	// 228 = 0xe4
	NSString *_lastStringSetIntoTextField;	// 232 = 0xe8
}
@property(assign) BOOL canWrapHorizontally;	// G=0x2f51d5; S=0x2f51f9; converted property
@property(assign) BOOL canWrapVertically;	// G=0x2f5241; S=0x2f5265; converted property
@property(assign) CGPoint keyboardFocus;	// G=0x2f56f5; S=0x2f5725; converted property
@property(assign) BOOL providesOwnFocusCursor;	// G=0x2f5551; S=0x2f5561; converted property
@property(retain) BRTabControl *tabControl;	// G=0x2f58d1; S=0x2f58e1; converted property
@property(assign) int textEntryStyle;	// G=0x2f4c45; S=0x2f4811; converted property
@property(retain) BRTextFieldControl *textField;	// G=0x2f4fdd; S=0x2f4fed; converted property
@property(assign) id textFieldDelegate;	// G=0x2f5329; S=0x2f5309; converted property
@property(assign) int textLengthLimit;	// G=0x2f4f99; S=0x2f4fa9; converted property
- (id)init;	// 0x2f3599
- (id)initWithTextEntryStyle:(int)textEntryStyle;	// 0x2f3905
- (void)_addCursor;	// 0x2f5e21
- (void)_addCustomizedTextFieldControls;	// 0x2f66fd
- (void)_addMainKeyboardContainerForKeyboard:(id)keyboard;	// 0x2f635d
- (void)_addOrRemoveCandidatesContainer:(id)container;	// 0x2f6461
- (void)_addOrRemoveTabControl;	// 0x2f5ef1
- (id)_bestKeyboardLanguage:(int)language;	// 0x2f681d
- (id)_currentTextEntryStyleName;	// 0x2f8229
- (void)_customizeTextEntryControls;	// 0x2f6465
- (void)_finalizeControlWasFocused;	// 0x2f69b1
- (void)_generateKeyEventWithCharacters:(id)characters immediatelyObscureCharacters:(BOOL)characters2;	// 0x2f7915
- (void)_handleDisplayPopupKeyboardEvent:(BOOL)event;	// 0x2f7a5d
- (void)_inputActionAppendCandidate:(id)candidate;	// 0x2f6d59
- (void)_inputActionAppendText:(id)text;	// 0x2f6b29
- (void)_inputActionClearText:(id)text;	// 0x2f6dc5
- (void)_inputActionDeleteText:(id)text;	// 0x2f6e4d
- (void)_inputActionEscape:(id)escape;	// 0x2f787d
- (void)_inputActionSwitchInputMethod:(id)method;	// 0x2f766d
- (void)_inputActionSwitchKeyboard:(id)keyboard;	// 0x2f6f31
- (void)_invokeInputActionWithDictionary:(id)dictionary;	// 0x2f6a11
- (id)_keyboardMappingData;	// 0x2f5cad
- (void)_registerAsTextFieldCharacterInputDelegate;	// 0x2f7fd9
- (void)_removeActionKeysRow;	// 0x2f6425
- (void)_removeCursor;	// 0x2f5eb5
- (void)_removeCustomizedTextFieldControls;	// 0x2f67b1
- (void)_removePopupKeyboard;	// 0x2f7dcd
- (void)_saveTextEntryHistory;	// 0x2f7edd
- (void)_setActiveKeyboard:(id)keyboard;	// 0x2f62fd
- (BOOL)_shouldIgnoreKey:(id)key forTextField:(id)textField;	// 0x2f5c15
- (id)_stringFromRect:(CGRect)rect;	// 0x2f81c1
- (void)_stripTrailingDotIfNecessary:(id)necessary;	// 0x2f6c0d
- (void)_swapPopupkeyboard;	// 0x2f7a1d
- (void)_textDidChangeNotification:(id)_text;	// 0x2f827d
- (void)_textDidEndEditingNotification:(id)_text;	// 0x2f8309
- (void)_unregisterAsTextFieldCharacterInputDelegate;	// 0x2f8175
- (void)_wrapAroundEdge:(int)edge;	// 0x2f6819
- (id)accessibilityLabel;	// 0x2f3b9d
- (id)accessibilityScreenContent;	// 0x2f3bdd
- (id)accessibilityValue;	// 0x2f3bbd
- (BOOL)brEventAction:(id)action;	// 0x2f42d5
// converted property getter: - (BOOL)canWrapHorizontally;	// 0x2f51d5
// converted property getter: - (BOOL)canWrapVertically;	// 0x2f5241
- (void)completeTextEntry;	// 0x2f5181
- (void)controlWasActivated;	// 0x2f3e3d
- (void)controlWasDeactivated;	// 0x2f3ec9
- (void)controlWasFocused;	// 0x2f41bd
- (void)controlWasUnfocused;	// 0x2f4255
- (void)dealloc;	// 0x2f393d
- (void)deleteAllHistoryItemsForClients:(id)clients;	// 0x2f4f29
- (void)deleteTextEntryHistoryItem:(id)item forTextEntryHistoryClients:(id)textEntryHistoryClients textEntryBehaviors:(id)behaviors;	// 0x2f4e75
- (void)deviceKeyboardClose;	// 0x2f8319
- (void)deviceKeyboardMessageHandler:(id)handler;	// 0x2f8529
- (void)deviceKeyboardUpdate:(BOOL)update;	// 0x2f83a1
- (void)dismissPopupKeyboard;	// 0x2f5a0d
- (void)displayTextEntryHistoryForClients:(id)clients textEntryBehaviors:(id)behaviors;	// 0x2f4ca9
- (BOOL)focusIsAtRightEdge;	// 0x2f5649
- (void)invokeInputActionWithDictionary:(id)dictionary;	// 0x2f5c05
// converted property getter: - (CGPoint)keyboardFocus;	// 0x2f56f5
- (void)layoutSubcontrols;	// 0x2f3f41
// converted property getter: - (BOOL)providesOwnFocusCursor;	// 0x2f5551
- (void)reset;	// 0x2f5425
- (void)saveTextEntryHistory;	// 0x2f4e51
- (void)saveTextEntryHistoryUsingClient:(id)client textEntryBehavior:(id)behavior;	// 0x2f4e0d
// converted property setter: - (void)setCanWrapHorizontally:(BOOL)horizontally;	// 0x2f51f9
// converted property setter: - (void)setCanWrapVertically:(BOOL)vertically;	// 0x2f5265
- (void)setConstrainCursorToPopupKeyboard:(BOOL)popupKeyboard;	// 0x2f59fd
- (void)setDeviceKeyboardTitle:(id)title subText:(id)text;	// 0x2f587d
- (void)setDisplayPlayPauseMessage:(BOOL)message;	// 0x2f5a2d
- (void)setDisplayTextEntryHistory:(BOOL)history;	// 0x2f4c55
- (void)setFocusToGlyphNamed:(id)glyphNamed;	// 0x2f55a1
- (void)setInitialText:(id)text;	// 0x2f5349
// converted property setter: - (void)setKeyboardFocus:(CGPoint)focus;	// 0x2f5725
- (void)setPopupBackgroundColor:(CGColorRef)color;	// 0x2f599d
- (void)setPopupOutlineColor:(CGColorRef)color;	// 0x2f59d5
- (void)setPopupShadowStyle:(int)style;	// 0x2f59c5
// converted property setter: - (void)setProvidesOwnFocusCursor:(BOOL)cursor;	// 0x2f5561
- (void)setShowUserEnteredText:(BOOL)text;	// 0x2f52ad
// converted property setter: - (void)setTabControl:(id)control;	// 0x2f58e1
- (void)setTextEntryHistoryClient:(id)client textEntryBehavior:(id)behavior;	// 0x2f4d9d
// converted property setter: - (void)setTextEntryStyle:(int)style;	// 0x2f4811
// converted property setter: - (void)setTextField:(id)field;	// 0x2f4fed
// converted property setter: - (void)setTextFieldDelegate:(id)delegate;	// 0x2f5309
- (void)setTextFieldLabel:(id)label;	// 0x2f548d
// converted property setter: - (void)setTextLengthLimit:(int)limit;	// 0x2f4fa9
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x2f3bfd
- (void)startSpinning;	// 0x2f5195
- (void)stopSpinning;	// 0x2f51b5
- (void)switchToKeyboardNamed:(id)keyboardNamed focusOnKeyboardAfterSwitch:(BOOL)aSwitch;	// 0x2f57ad
// converted property getter: - (id)tabControl;	// 0x2f58d1
- (void)tabControl:(id)control didSelectTabItem:(id)item;	// 0x2f5c45
- (void)tabControl:(id)control willSelectTabItem:(id)item;	// 0x2f5ca5
- (void)tabControlDidChangeNumberOfTabItems:(id)tabControl;	// 0x2f5ca9
// converted property getter: - (int)textEntryStyle;	// 0x2f4c45
// converted property getter: - (id)textField;	// 0x2f4fdd
// converted property getter: - (id)textFieldDelegate;	// 0x2f5329
// converted property getter: - (int)textLengthLimit;	// 0x2f4f99
@end

