/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import "ATVDataClient.h"

@class NSString, ATVHSConnectionStream, NSURL, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface ATVHSDataClient : ATVDataClient {
	FPSAPContextOpaque_Ref _fpsapContext;	// 4 = 0x4
	ATVHSConnectionStream *_connectionStream;	// 8 = 0x8
	unsigned long long _pairingID;	// 12 = 0xc
	unsigned long long _machineID;	// 20 = 0x14
	unsigned long _sessionID;	// 28 = 0x1c
	NSString *_homeShareGroupID;	// 32 = 0x20
	NSURL *_serverURL;	// 36 = 0x24
	NSURL *_serverIPURL;	// 40 = 0x28
	int _serverPort;	// 44 = 0x2c
	NSString *_databaseName;	// 48 = 0x30
	unsigned long _databaseID;	// 52 = 0x34
	unsigned long long _databasePersistentID;	// 56 = 0x38
	unsigned long _dpapDatabaseID;	// 64 = 0x40
	unsigned long long _dpapDatabasePersistentID;	// 68 = 0x44
	unsigned long _basePlaylistID;	// 76 = 0x4c
	unsigned long long _basePlaylistPersistentID;	// 80 = 0x50
	unsigned short _daapProtocolMajorVersion;	// 88 = 0x58
	unsigned short _daapProtocolMinorVersion;	// 90 = 0x5a
	unsigned short _dpapProtocolMajorVersion;	// 92 = 0x5c
	unsigned short _dpapProtocolMinorVersion;	// 94 = 0x5e
	BOOL _enhancedClient;	// 96 = 0x60
	BOOL _supportsDRMTokenEncryption;	// 97 = 0x61
	unsigned long _databaseRevision;	// 100 = 0x64
	unsigned long _drmRevision;	// 104 = 0x68
	unsigned long _photoDBRevision;	// 108 = 0x6c
	BOOL _dpapImportInProgress;	// 112 = 0x70
	NSMutableDictionary *_artworkRequestMap;	// 116 = 0x74
}
@property(retain, nonatomic) NSMutableDictionary *artworkRequestMap;	// G=0xdb4ed; S=0xdb4fd; @synthesize=_artworkRequestMap
@property(assign, nonatomic) unsigned long basePlaylistID;	// G=0xdb361; S=0xdb371; @synthesize=_basePlaylistID
@property(assign, nonatomic) unsigned long long basePlaylistPersistentID;	// G=0xdb381; S=0xdb399; @synthesize=_basePlaylistPersistentID
@property(assign, nonatomic) unsigned short daapProtocolMajorVersion;	// G=0xdb3ad; S=0xdb3bd; @synthesize=_daapProtocolMajorVersion
@property(assign, nonatomic) unsigned short daapProtocolMinorVersion;	// G=0xdb3cd; S=0xdb3dd; @synthesize=_daapProtocolMinorVersion
@property(assign, nonatomic) unsigned long databaseID;	// G=0xdb2c9; S=0xdb2d9; @synthesize=_databaseID
@property(retain, nonatomic) NSString *databaseName;	// G=0xdb2a9; S=0xdb2b9; @synthesize=_databaseName
@property(assign, nonatomic) unsigned long long databasePersistentID;	// G=0xdb2e9; S=0xdb301; @synthesize=_databasePersistentID
@property(assign, nonatomic) unsigned long databaseRevision;	// G=0xdb46d; S=0xdb47d; @synthesize=_databaseRevision
@property(assign, nonatomic) unsigned long dpapDatabaseID;	// G=0xdb315; S=0xdb325; @synthesize=_dpapDatabaseID
@property(assign, nonatomic) unsigned long long dpapDatabasePersistentID;	// G=0xdb335; S=0xdb34d; @synthesize=_dpapDatabasePersistentID
@property(assign, nonatomic) BOOL dpapImportInProgress;	// G=0xdb4cd; S=0xdb4dd; @synthesize=_dpapImportInProgress
@property(assign, nonatomic) unsigned short dpapProtocolMajorVersion;	// G=0xdb3ed; S=0xdb3fd; @synthesize=_dpapProtocolMajorVersion
@property(assign, nonatomic) unsigned short dpapProtocolMinorVersion;	// G=0xdb40d; S=0xdb41d; @synthesize=_dpapProtocolMinorVersion
@property(assign, nonatomic) unsigned long drmRevision;	// G=0xdb48d; S=0xdb49d; @synthesize=_drmRevision
@property(assign, nonatomic) BOOL enhancedClient;	// G=0xdb42d; S=0xdb43d; @synthesize=_enhancedClient
@property(retain, nonatomic) NSString *homeShareGroupID;	// G=0xdb231; S=0xdb241; @synthesize=_homeShareGroupID
@property(assign, nonatomic) unsigned long long machineID;	// G=0xdb1e5; S=0xdb1fd; @synthesize=_machineID
@property(assign, nonatomic) unsigned long long pairingID;	// G=0xdb1b9; S=0xdb1d1; @synthesize=_pairingID
@property(assign, nonatomic) unsigned long photoDBRevision;	// G=0xdb4ad; S=0xdb4bd; @synthesize=_photoDBRevision
@property(copy) NSURL *serverIPURL;	// G=0xdb265; S=0xdb279; @synthesize=_serverIPURL
@property(assign, nonatomic) int serverPort;	// G=0xdb289; S=0xdb299; @synthesize=_serverPort
@property(copy, nonatomic) NSURL *serverURL;	// G=0xdb251; S=0xda6f9; @synthesize=_serverURL
@property(assign, nonatomic) unsigned long sessionID;	// G=0xdb211; S=0xdb221; @synthesize=_sessionID
@property(assign, nonatomic) BOOL supportsDRMTokenEncryption;	// G=0xdb44d; S=0xdb45d; @synthesize=_supportsDRMTokenEncryption
+ (id)hsDataClientWithServerURL:(id)serverURL serverName:(id)name hsGroupID:(id)anId machineID:(unsigned long long)anId4 pairingID:(unsigned long long)anId5 clientType:(unsigned long)type;	// 0xda3a9
- (id)initWithServerURL:(id)serverURL hsGroupID:(id)anId machineID:(unsigned long long)anId3 pairingID:(unsigned long long)anId4 clientName:(id)name clientType:(unsigned long)type;	// 0xda415
- (void)_dataClientConnectionHandler:(id)handler;	// 0xdb0f1
- (void)artworkRequestCompletedForIdentifier:(id)identifier;	// 0xea6f1
// declared property getter: - (id)artworkRequestMap;	// 0xdb4ed
// declared property getter: - (unsigned long)basePlaylistID;	// 0xdb361
// declared property getter: - (unsigned long long)basePlaylistPersistentID;	// 0xdb381
- (id)baseURL;	// 0xda8b5
- (id)browseRequestWithQuery:(id)query;	// 0xe7f85
- (void)cancelArtworkRequestForIdentifier:(id)identifier;	// 0xea5dd
- (void)cancelImageRequest:(id)request;	// 0xdaec1
- (void)concreteDataClientConnect;	// 0xda8e9
- (void)concreteDataClientDisconnect;	// 0xdaa91
// declared property getter: - (unsigned short)daapProtocolMajorVersion;	// 0xdb3ad
// declared property getter: - (unsigned short)daapProtocolMinorVersion;	// 0xdb3cd
// declared property getter: - (unsigned long)databaseID;	// 0xdb2c9
// declared property getter: - (id)databaseName;	// 0xdb2a9
// declared property getter: - (unsigned long long)databasePersistentID;	// 0xdb2e9
// declared property getter: - (unsigned long)databaseRevision;	// 0xdb46d
- (void)dealloc;	// 0xda569
- (id)description;	// 0xda5fd
- (void)determineBasePlaylist;	// 0xe28c9
- (void)determineDAAPDatabase;	// 0xe2495
- (void)determineDPAPDatabase;	// 0xe26e5
- (void)determineDPAPDatabaseOnUpdate;	// 0xe43e1
- (void)determinePhotoDatabase;	// 0xe4a4d
- (void)disconnectClient;	// 0xe394d
// declared property getter: - (unsigned long)dpapDatabaseID;	// 0xdb315
// declared property getter: - (unsigned long long)dpapDatabasePersistentID;	// 0xdb335
// declared property getter: - (BOOL)dpapImportInProgress;	// 0xdb4cd
// declared property getter: - (unsigned short)dpapProtocolMajorVersion;	// 0xdb3ed
// declared property getter: - (unsigned short)dpapProtocolMinorVersion;	// 0xdb40d
// declared property getter: - (unsigned long)drmRevision;	// 0xdb48d
- (id)drmTokenRequestWithQuery:(id)query;	// 0xe7a21
- (void)drmUpdate;	// 0xe39f1
// declared property getter: - (BOOL)enhancedClient;	// 0xdb42d
- (BOOL)establishFairPlayContextWithServerFPVer:(unsigned long)serverFPVer;	// 0xe1a9d
- (void)executeQuery:(id)query withCompletionQueue:(id)completionQueue completionHandler:(id)handler;	// 0xdadb9
- (FPSAPContextOpaque_Ref)fairPlayContext;	// 0xda8a5
- (BOOL)groupingSupportsProperty:(id)property;	// 0xdad39
- (id)groupsRequestWithQuery:(id)query;	// 0xe80f5
- (void)handleDAAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xe8691
- (void)handleDPAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xe9185
- (unsigned)hash;	// 0xda681
// declared property getter: - (id)homeShareGroupID;	// 0xdb231
- (void)homeShareVerify;	// 0xe1fc1
- (void)iTunesDPAPDatabaseUpdate;	// 0xe40b9
- (void)iTunesDatabaseUpdate;	// 0xe3561
- (void)iTunesPhotoDatabaseUpdate;	// 0xe3d19
- (id)imageRequestWithAsset:(id)asset artworkIdentifier:(id)identifier requestedSize:(CGSize)size crop:(BOOL)crop withContext:(void *)context;	// 0xe9c61
- (id)imageRequestWithAsset:(id)asset imageID:(id)anId size:(CGSize)size crop:(BOOL)crop context:(id)context;	// 0xdae8d
- (BOOL)isEqual:(id)equal;	// 0xda651
- (id)itemsRequestWithQuery:(id)query;	// 0xe6f11
- (void)logErrorWithRequest:(id)request httpStatus:(long)status;	// 0xe3505
- (void)loginToITunes;	// 0xe1709
- (void)loginToPhotoApp;	// 0xe4709
// declared property getter: - (unsigned long long)machineID;	// 0xdb1e5
- (void)machineVerify;	// 0xe2239
- (void)mediaItemPropertyUpdateHandler:(id)handler;	// 0xe8cdd
- (id)networkTestURLWithOptions:(id)options headers:(id *)headers;	// 0xdaed9
// declared property getter: - (unsigned long long)pairingID;	// 0xdb1b9
- (void)photoAppDatabaseUpdate;	// 0xe4c19
- (id)photoDBRequestWithQuery:(id)query;	// 0xe82cd
// declared property getter: - (unsigned long)photoDBRevision;	// 0xdb4ad
- (BOOL)photosShared;	// 0xda849
- (id)playbackURLWithItemID:(unsigned long)itemID;	// 0xda7a5
- (id)playlistRequestWithQuery:(id)query;	// 0xe84ed
- (BOOL)processQueryAsync:(id)async;	// 0xdadb5
- (BOOL)queryFilterSupportsProperty:(id)property;	// 0xdacbd
- (id)rentalRequestWithQuery:(id)query;	// 0xe7dc9
// declared property getter: - (id)serverIPURL;	// 0xdb265
- (void)serverInfo;	// 0xe2d2d
// declared property getter: - (int)serverPort;	// 0xdb289
// declared property getter: - (id)serverURL;	// 0xdb251
- (id)serverURLStr;	// 0xda77d
// declared property getter: - (unsigned long)sessionID;	// 0xdb211
// declared property setter: - (void)setArtworkRequestMap:(id)map;	// 0xdb4fd
// declared property setter: - (void)setBasePlaylistID:(unsigned long)anId;	// 0xdb371
// declared property setter: - (void)setBasePlaylistPersistentID:(unsigned long long)anId;	// 0xdb399
// declared property setter: - (void)setDaapProtocolMajorVersion:(unsigned short)version;	// 0xdb3bd
// declared property setter: - (void)setDaapProtocolMinorVersion:(unsigned short)version;	// 0xdb3dd
// declared property setter: - (void)setDatabaseID:(unsigned long)anId;	// 0xdb2d9
// declared property setter: - (void)setDatabaseName:(id)name;	// 0xdb2b9
// declared property setter: - (void)setDatabasePersistentID:(unsigned long long)anId;	// 0xdb301
// declared property setter: - (void)setDatabaseRevision:(unsigned long)revision;	// 0xdb47d
- (BOOL)setDatabaseWithResponse:(id)response daapResponse:(BOOL)response2;	// 0xe3181
// declared property setter: - (void)setDpapDatabaseID:(unsigned long)anId;	// 0xdb325
// declared property setter: - (void)setDpapDatabasePersistentID:(unsigned long long)anId;	// 0xdb34d
// declared property setter: - (void)setDpapImportInProgress:(BOOL)progress;	// 0xdb4dd
// declared property setter: - (void)setDpapProtocolMajorVersion:(unsigned short)version;	// 0xdb3fd
// declared property setter: - (void)setDpapProtocolMinorVersion:(unsigned short)version;	// 0xdb41d
// declared property setter: - (void)setDrmRevision:(unsigned long)revision;	// 0xdb49d
// declared property setter: - (void)setEnhancedClient:(BOOL)client;	// 0xdb43d
// declared property setter: - (void)setHomeShareGroupID:(id)anId;	// 0xdb241
// declared property setter: - (void)setMachineID:(unsigned long long)anId;	// 0xdb1fd
// declared property setter: - (void)setPairingID:(unsigned long long)anId;	// 0xdb1d1
// declared property setter: - (void)setPhotoDBRevision:(unsigned long)revision;	// 0xdb4bd
// declared property setter: - (void)setServerIPURL:(id)ipurl;	// 0xdb279
// declared property setter: - (void)setServerPort:(int)port;	// 0xdb299
// declared property setter: - (void)setServerURL:(id)url;	// 0xda6f9
// declared property setter: - (void)setSessionID:(unsigned long)anId;	// 0xdb221
// declared property setter: - (void)setSupportsDRMTokenEncryption:(BOOL)encryption;	// 0xdb45d
- (void)submitPropertyUpdateQueryWithURLStr:(id)urlstr property:(id)property propertyValue:(unsigned long)value itemID:(id)anId;	// 0xe8fad
// declared property getter: - (BOOL)supportsDRMTokenEncryption;	// 0xdb44d
- (BOOL)supportsProperty:(id)property;	// 0xdac89
@end

