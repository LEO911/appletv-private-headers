/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSArray, NSMutableSet, NSMutableDictionary, EKDaemonConnection, EKCalendar, NSNumber, NSString, NSTimeZone;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject {
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKCalendar *_defaultCalendarForNewEvents;	// 32 = 0x20
	EKCalendar *_defaultCalendarForNewReminders;	// 36 = 0x24
	EKDaemonConnection *_database;	// 40 = 0x28
	double _lastDatabaseNotificationTimestamp;	// 44 = 0x2c
	unsigned long _flags;	// 52 = 0x34
	NSTimeZone *_timeZone;	// 56 = 0x38
	NSMutableDictionary *_calendars;	// 60 = 0x3c
	NSMutableDictionary *_sources;	// 64 = 0x40
	NSMutableSet *_objectsPendingCommit;	// 68 = 0x44
	NSObject<OS_dispatch_queue> *_calendarQueue;	// 72 = 0x48
	NSObject<OS_dispatch_queue> *_registeredQueue;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *_unsavedChangesQueue;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_dbChangedQueue;	// 84 = 0x54
	NSMutableDictionary *_cachedValidatedEmails;	// 88 = 0x58
}
@property(retain, nonatomic) NSMutableDictionary *_cachedValidatedEmails;	// G=0x367ec375; S=0x367ec385; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x367ec295; S=0x367ec2a5; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewEvents;	// G=0x367ec209; S=0x367a3651; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewReminders;	// G=0x367ec219; S=0x367ac429; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x367ec2b5; S=0x367ec2c5; @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *calendarQueue;	// G=0x367ec2f5; S=0x367ec305; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x367e4991; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x367ec229; S=0x367ec239; @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;	// G=0x367ec355; S=0x367ec365; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x367b35b5; S=0x367ec059; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x367a33d1; 
@property(retain) EKCalendar *defaultCalendarForNewReminders;	// G=0x367ac0bd; S=0x367e6edd; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x367b1691; S=0x367ec015; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x367ec1c9; S=0x367ec1d9; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x367e43ed; 
@property(assign, nonatomic) unsigned long flags;	// G=0x367ec275; S=0x367ec285; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x367ec1a9; S=0x367ec1b9; @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// G=0x367ec249; S=0x367ec261; @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x367ec2d5; S=0x367ec2e5; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x367ec189; S=0x367ec199; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x367ec169; S=0x367ec179; @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;	// G=0x367ec315; S=0x367ec325; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x367a2161; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x367a3665; S=0x3679e809; @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;	// G=0x367ec335; S=0x367ec345; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x367ec1e9; S=0x367ec1f9; @synthesize=_updatedObjects
+ (BOOL)_isAuthorizationRestrictedForService:(CFStringRef)service;	// 0x367e2f89
+ (int)authorizationStatusForEntityType:(unsigned)entityType;	// 0x3679e5bd
+ (Class)classForEntityName:(id)entityName;	// 0x3679f6d1
+ (Class)publicClassForEntityName:(id)entityName;	// 0x367aa8c9
- (id)init;	// 0x367e299d
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x367e29b1
- (void)_accessStatusChanged;	// 0x367e3175
- (id)_addFetchedObjectWithID:(id)anId;	// 0x3679f411
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x367b8d71
- (id)_allCalendars;	// 0x3679ea55
// declared property getter: - (id)_cachedValidatedEmails;	// 0x367ec375
- (BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;	// 0x367a3265
- (id)_calendarItemsMatchingPredicate:(id)predicate;	// 0x367e7595
- (id)_calendarWithID:(id)anId;	// 0x367a3529
// declared property getter: - (id)_calendars;	// 0x367ec295
- (void)_databaseChangedExternally;	// 0x367bab09
// declared property getter: - (id)_defaultCalendarForNewEvents;	// 0x367ec209
// declared property getter: - (id)_defaultCalendarForNewReminders;	// 0x367ec219
- (void)_deleteObject:(id)object;	// 0x367e9d2d
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x367e5a01
- (void)_forgetRegisteredObjects;	// 0x367e9465
- (void)_insertObject:(id)object;	// 0x367b5f65
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x367e56c1
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x367e6309
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x367ac6a9
- (void)_protectedDataDidBecomeAvailable;	// 0x367ec00d
- (void)_protectedDataWillBecomeUnavailable;	// 0x367ec009
- (void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;	// 0x367e9021
- (void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;	// 0x367e8db1
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x367ae145
- (void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x367e8eed
- (void)_registerObject:(id)object;	// 0x367b126d
- (void)_registerObjectImmediate:(id)immediate;	// 0x3679fb2d
- (void)_requestAccessForEntityType:(unsigned)entityType;	// 0x367e2fed
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x367ba53d
- (void)_saveWithoutNotify;	// 0x367e444d
// declared property getter: - (id)_sources;	// 0x367ec2b5
- (void)_trackModifiedObject:(id)object;	// 0x367e9a15
- (void)_unregisterObject:(id)object;	// 0x367b1545
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x367baced
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x367eb759
- (id)alarmWithUUID:(id)uuid;	// 0x367eb66d
- (void)cacheValidationStatusForEmail:(id)email status:(int)status;	// 0x367ec09d
- (id)calendarItemWithIdentifier:(id)identifier;	// 0x367e7311
- (id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;	// 0x367e7431
// declared property getter: - (id)calendarQueue;	// 0x367ec2f5
- (id)calendarWithExternalURI:(id)externalURI;	// 0x367e826d
- (id)calendarWithID:(id)anId;	// 0x367a9a8d
- (id)calendarWithIdentifier:(id)identifier;	// 0x367a2c41
// declared property getter: - (id)calendars;	// 0x367e4991
- (id)calendarsForEntityType:(unsigned)entityType;	// 0x3679e851
- (void)cancelFetchRequest:(id)request;	// 0x367eb611
- (id)changesSinceSequenceNumber:(int)number;	// 0x367e3229
- (id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;	// 0x367e8181
- (BOOL)commit:(id *)commit;	// 0x367b8de1
- (id)connection;	// 0x367a6251
- (CGColorRef)copyCGColorForNewCalendar;	// 0x367e6aad
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x367ac901
- (void)daemonRestarted;	// 0x367e43a1
// declared property getter: - (id)database;	// 0x367ec229
// declared property getter: - (id)dbChangedQueue;	// 0x367ec355
- (void)dealloc;	// 0x367e2c99
- (id)defaultAllDayAlarm;	// 0x367b3541
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x367b35b5
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x367a33d1
// converted property getter: - (id)defaultCalendarForNewReminders;	// 0x367ac0bd
- (id)defaultTimedAlarm;	// 0x367b161d
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x367b1691
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x367e5499
// declared property getter: - (id)deletedObjects;	// 0x367ec1c9
- (id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x367e8619
- (int)emailAddressValidationStatus:(id)status;	// 0x367ec131
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x367eb3a5
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x367e5c2d
- (id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;	// 0x367abfb1
// declared property getter: - (id)eventStoreIdentifier;	// 0x367e43ed
- (id)eventWithIdentifier:(id)identifier;	// 0x367e55c9
- (id)eventWithUUID:(id)uuid;	// 0x367e8091
- (id)eventWithUniqueId:(id)uniqueId;	// 0x367e5c55
- (id)eventsMatchingPredicate:(id)predicate;	// 0x367a580d
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x367a59c9
- (BOOL)fetchProperties:(id)properties forReminders:(id)reminders;	// 0x367e7d81
- (id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x367e7815
// declared property getter: - (unsigned long)flags;	// 0x367ec275
- (BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id *)error;	// 0x367e4add
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x367e622d
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x367e6869
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x367e6405
- (id)insertNewEvent;	// 0x367e834d
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x367e83a9
- (id)insertNewReminder;	// 0x367e7755
// declared property getter: - (id)insertedObjects;	// 0x367ec1a9
- (id)inviteReplyNotifications;	// 0x367a8e19
- (int)inviteReplyNotificationsCount;	// 0x367e89b1
- (BOOL)isDataProtected;	// 0x367a7729
// declared property getter: - (double)lastDatabaseNotificationTimestamp;	// 0x367ec249
- (id)localSource;	// 0x367e4781
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x367eba61
- (BOOL)markCalendarAlerted:(id)alerted;	// 0x367e4ca5
- (void)markEventAlerted:(id)alerted;	// 0x367e61a9
- (BOOL)markInviteReplyNotificationAlerted:(id)alerted;	// 0x367e8b29
- (void)markNotificationsAlertedAndSave:(id)save;	// 0x367e83ed
- (BOOL)markResourceChangeAlerted:(id)alerted error:(id *)error;	// 0x367e8719
- (int)notifiableEventCount;	// 0x367e85ed
- (id)objectWithObjectID:(id)objectID;	// 0x367ac211
// declared property getter: - (id)objectsPendingCommit;	// 0x367ec2d5
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;	// 0x367ab6b9
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;	// 0x367abced
- (BOOL)occurrenceCacheOccurrencesAreBeingGenerated;	// 0x367abc01
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x367e7b6d
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x367e7b39
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x367e7c01
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;	// 0x367e7a19
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x367ad301
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x367e7b01
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x367ebd45
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;	// 0x367a5309
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x367ebe55
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;	// 0x367e7acd
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x367ac66d
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;	// 0x367e7969
- (id)predicateForNotifiableEvents;	// 0x367a8bb5
- (id)predicateForNotificationCenterVisibleEvents;	// 0x367ebf99
- (id)predicateForRemindersInCalendars:(id)calendars;	// 0x367e7921
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x367e7c25
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x367e7ba5
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x367e7c65
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;	// 0x367e7ca1
- (id)predicateForUnacknowledgedEvents;	// 0x367ebfb5
- (id)predicateForUnalertedEvents;	// 0x367ebfd1
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x367ebfed
- (id)publicObjectWithObjectID:(id)objectID;	// 0x367e9729
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x367a17d1
// declared property getter: - (id)publicRegisteredObjects;	// 0x367ec189
- (int)readWriteCalendarCountForEntityType:(unsigned)entityType;	// 0x367a3169
- (id)readWriteCalendarsForEntityType:(unsigned)entityType;	// 0x367e5115
- (void)refreshSourcesIfNecessary;	// 0x367e9261
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x367ade89
- (id)registerFetchedObjectWithID:(id)anId;	// 0x367a044d
- (id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;	// 0x3679f2b1
// declared property getter: - (id)registeredObjects;	// 0x367ec169
// declared property getter: - (id)registeredQueue;	// 0x367ec315
- (oneway void)release;	// 0x367a3089
- (id)reminderWithExternalURI:(id)externalURI;	// 0x367e71d5
- (id)remindersMatchingPredicate:(id)predicate;	// 0x367ad339
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x367e53dd
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x367e52e9
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x367e5d6d
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x367e5d45
- (BOOL)removeInviteReplyNotification:(id)notification error:(id *)error;	// 0x367e8c19
- (BOOL)removeInviteReplyNotifications:(id)notifications error:(id *)error;	// 0x367e8c55
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x367e70fd
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x367e70dd
- (BOOL)removeResourceChange:(id)change error:(id *)error;	// 0x367e8819
- (BOOL)removeResourceChanges:(id)changes error:(id *)error;	// 0x367e8855
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x367e4909
- (void)requestAccessToEntityType:(unsigned)entityType completion:(id)completion;	// 0x367e30c1
- (void)reset;	// 0x367ea341
- (id)resourceChangesForEntityTypes:(unsigned)entityTypes;	// 0x367a907d
- (void)rollback;	// 0x367ea041
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x367e5309
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x367e52c9
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x367b4eb9
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x367b4e91
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x367e7009
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x367e6fe9
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x367e4861
- (int)sequenceNumber;	// 0x367e31d1
- (unsigned)serverPort;	// 0x3679ebe5
// declared property setter: - (void)setCalendarQueue:(id)queue;	// 0x367ec305
// declared property setter: - (void)setDatabase:(id)database;	// 0x367ec239
// declared property setter: - (void)setDbChangedQueue:(id)queue;	// 0x367ec365
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x367ec059
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x367e6ce1
// converted property setter: - (void)setDefaultCalendarForNewReminders:(id)newReminders;	// 0x367e6edd
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x367ec015
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x367ec1d9
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x367ec285
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x367ec1b9
- (BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id *)error;	// 0x367e5e41
- (BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id *)error;	// 0x367e5f65
// declared property setter: - (void)setLastDatabaseNotificationTimestamp:(double)timestamp;	// 0x367ec261
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x367ec2e5
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x367ec199
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x367ec179
// declared property setter: - (void)setRegisteredQueue:(id)queue;	// 0x367ec325
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x3679e809
// declared property setter: - (void)setUnsavedChangesQueue:(id)queue;	// 0x367ec345
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x367ec1f9
// declared property setter: - (void)set_cachedValidatedEmails:(id)emails;	// 0x367ec385
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x367ec2a5
// declared property setter: - (void)set_defaultCalendarForNewEvents:(id)newEvents;	// 0x367a3651
// declared property setter: - (void)set_defaultCalendarForNewReminders:(id)newReminders;	// 0x367ac429
// declared property setter: - (void)set_sources:(id)sources;	// 0x367ec2c5
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;	// 0x367a2da1
- (id)sourceWithIdentifier:(id)identifier;	// 0x367a2075
// converted property getter: - (id)sources;	// 0x367a2161
// declared property getter: - (id)timeZone;	// 0x367a3665
- (int)unacknowledgedEventCount;	// 0x367e85c1
// declared property getter: - (id)unsavedChangesQueue;	// 0x367ec335
// declared property getter: - (id)updatedObjects;	// 0x367ec1e9
@end

