/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

#import "CoreMotion-Structs.h"
#import <NSObject.h> // Unknown library

@class CMDeviceMotion, CMGyroData, CMAccelerometerData, CMMagnetometerData;

@interface CMMotionManager : NSObject {
	id _internal;	// 4 = 0x4
}
@property(readonly, assign, nonatomic, getter=isAccelerometerActive) BOOL accelerometerActive;	// G=0x307c411d; @dynamic
@property(readonly, assign, nonatomic, getter=isAccelerometerAvailable) BOOL accelerometerAvailable;	// G=0x307c410d; @dynamic
@property(readonly, assign) CMAccelerometerData *accelerometerData;	// G=0x307c4205; @dynamic
@property(assign, nonatomic) double accelerometerUpdateInterval;	// G=0x307c41dd; S=0x307c4141; @dynamic
@property(readonly, assign, nonatomic) int attitudeReferenceFrame;	// G=0x307c4d4d; @dynamic
@property(readonly, assign) CMDeviceMotion *deviceMotion;	// G=0x307c4d6d; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionActive) BOOL deviceMotionActive;	// G=0x307c4c65; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionAvailable) BOOL deviceMotionAvailable;	// G=0x307c4c3d; @dynamic
@property(assign, nonatomic) double deviceMotionUpdateInterval;	// G=0x307c4d25; S=0x307c4c89; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroActive) BOOL gyroActive;	// G=0x307c46b5; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroAvailable) BOOL gyroAvailable;	// G=0x307c46a5; @dynamic
@property(readonly, assign) CMGyroData *gyroData;	// G=0x307c479d; @dynamic
@property(assign, nonatomic) double gyroUpdateInterval;	// G=0x307c4775; S=0x307c46d9; @dynamic
@property(readonly, assign, nonatomic, getter=isMagnetometerActive) BOOL magnetometerActive;	// G=0x307c55d9; 
@property(readonly, assign, nonatomic, getter=isMagnetometerAvailable) BOOL magnetometerAvailable;	// G=0x307c55c9; 
@property(readonly, assign) CMMagnetometerData *magnetometerData;	// G=0x307c56c1; 
@property(assign, nonatomic) double magnetometerUpdateInterval;	// G=0x307c5699; S=0x307c55fd; 
@property(assign, nonatomic) BOOL showsDeviceMovementDisplay;	// G=0x307c5be9; S=0x307c5b65; 
@property(assign) BOOL useAccelerometer;	// G=0x307c37e9; S=0x307c37c1; converted property
+ (unsigned)availableAttitudeReferenceFrames;	// 0x307c38bd
+ (void)dummySelector:(id)selector;	// 0x307c74d1
+ (void)initialize;	// 0x307c380d
+ (void)setAllowInBackground:(BOOL)background;	// 0x307c38dd
- (id)init;	// 0x307c38e1
- (id)initPrivate;	// 0x307c3a71
- (id)initUsing6AxisSensorFusion;	// 0x307c5cd9
- (id)initUsingGyroOnlySensorFusion;	// 0x307c5d29
// declared property getter: - (id)accelerometerData;	// 0x307c4205
// declared property getter: - (double)accelerometerUpdateInterval;	// 0x307c41dd
// declared property getter: - (int)attitudeReferenceFrame;	// 0x307c4d4d
- (void)dealloc;	// 0x307c3de1
- (void)deallocPrivate;	// 0x307c3f4d
// declared property getter: - (id)deviceMotion;	// 0x307c4d6d
// declared property getter: - (double)deviceMotionUpdateInterval;	// 0x307c4d25
- (void)didBecomeActive:(id)active;	// 0x307c7379
- (void)didBecomeActivePrivate:(id)aPrivate;	// 0x307c7489
- (void)dismissDeviceMovementDisplay;	// 0x307c5c99
// declared property getter: - (id)gyroData;	// 0x307c479d
// declared property getter: - (double)gyroUpdateInterval;	// 0x307c4775
// declared property getter: - (BOOL)isAccelerometerActive;	// 0x307c411d
// declared property getter: - (BOOL)isAccelerometerAvailable;	// 0x307c410d
// declared property getter: - (BOOL)isDeviceMotionActive;	// 0x307c4c65
// declared property getter: - (BOOL)isDeviceMotionAvailable;	// 0x307c4c3d
// declared property getter: - (BOOL)isGyroActive;	// 0x307c46b5
// declared property getter: - (BOOL)isGyroAvailable;	// 0x307c46a5
// declared property getter: - (BOOL)isMagnetometerActive;	// 0x307c55d9
// declared property getter: - (BOOL)isMagnetometerAvailable;	// 0x307c55c9
// declared property getter: - (id)magnetometerData;	// 0x307c56c1
// declared property getter: - (double)magnetometerUpdateInterval;	// 0x307c5699
- (void)onAccelerometer:(const Sample *)accelerometer;	// 0x307c6459
- (void)onDeviceMotion:(const Sample *)motion;	// 0x307c6b09
- (void)onGeomagneticModel:(const XXStruct_01mbIB *)model;	// 0x307c7251
- (void)onGyro:(const Sample *)gyro;	// 0x307c6691
- (void)onMagnetometer:(const Sample *)magnetometer;	// 0x307c68d1
- (void)setAccelerometerDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x307c5d75
// declared property setter: - (void)setAccelerometerUpdateInterval:(double)interval;	// 0x307c4141
- (void)setAccelerometerUpdateIntervalPrivate:(double)aPrivate;	// 0x307c4479
- (void)setDeviceMotionCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval fsync:(BOOL)fsync;	// 0x307c61ad
// declared property setter: - (void)setDeviceMotionUpdateInterval:(double)interval;	// 0x307c4c89
- (void)setDeviceMotionUpdateIntervalPrivate:(double)aPrivate;	// 0x307c5221
- (void)setGyroDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x307c5f91
// declared property setter: - (void)setGyroUpdateInterval:(double)interval;	// 0x307c46d9
- (void)setGyroUpdateIntervalPrivate:(double)aPrivate;	// 0x307c4a11
// declared property setter: - (void)setMagnetometerUpdateInterval:(double)interval;	// 0x307c55fd
- (void)setMagnetometerUpdateIntervalPrivate:(double)aPrivate;	// 0x307c5939
// declared property setter: - (void)setShowsDeviceMovementDisplay:(BOOL)display;	// 0x307c5b65
- (void)setShowsDeviceMovementDisplayPrivate:(BOOL)aPrivate;	// 0x307c5c0d
// converted property setter: - (void)setUseAccelerometer:(BOOL)accelerometer;	// 0x307c37c1
- (void)showDeviceMovementDisplay;	// 0x307c5c45
// declared property getter: - (BOOL)showsDeviceMovementDisplay;	// 0x307c5be9
- (void)startAccelerometerUpdates;	// 0x307c42b5
- (void)startAccelerometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x307c44e1
- (void)startAccelerometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x307c4331
- (void)startDeviceMotionUpdates;	// 0x307c4ea5
- (void)startDeviceMotionUpdatesPrivateUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x307c5289
- (void)startDeviceMotionUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x307c4f41
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame;	// 0x307c5031
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x307c50c1
- (void)startGyroUpdates;	// 0x307c484d
- (void)startGyroUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x307c4a79
- (void)startGyroUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x307c48c9
- (void)startMagnetometerUpdates;	// 0x307c5771
- (void)startMagnetometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x307c59a1
- (void)startMagnetometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x307c57ed
- (void)stopAccelerometerUpdates;	// 0x307c4401
- (void)stopAccelerometerUpdatesPrivate;	// 0x307c45f9
- (void)stopDeviceMotionUpdates;	// 0x307c51a5
- (void)stopDeviceMotionUpdatesPrivate;	// 0x307c54dd
- (void)stopGyroUpdates;	// 0x307c4999
- (void)stopGyroUpdatesPrivate;	// 0x307c4b91
- (void)stopMagnetometerUpdates;	// 0x307c58bd
- (void)stopMagnetometerUpdatesPrivate;	// 0x307c5ab9
// converted property getter: - (BOOL)useAccelerometer;	// 0x307c37e9
- (void)willResignActive:(id)active;	// 0x307c72cd
- (void)willResignActivePrivate:(id)aPrivate;	// 0x307c7425
@end

