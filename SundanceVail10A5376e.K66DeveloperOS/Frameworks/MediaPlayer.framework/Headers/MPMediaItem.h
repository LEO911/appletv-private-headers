/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSString, NSArray, MPMediaItemArtwork, NSDate;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x36ce005d; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x36ce00b9; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x36ce00d5; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x36ce00f1; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x36ce010d; S=0x36ce0141; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x36cdf82d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x36ce0185; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x36ce0079; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x36ce0381; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x36ce01a1; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x36ce078d; S=0x36ce07bd; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x36ce0281; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x36ce01bd; 
@property(readonly, assign, nonatomic) BOOL isUsableAsRepresentativeItem;	// G=0x36ce0f25; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x36ce05f5; S=0x36ce0611; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x36ce0755; S=0x36ce0771; 
@property(copy, nonatomic) NSDate *lastUsedDate;	// G=0x36ce062d; S=0x36ce0649; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x36ce02b1; 
@property(readonly, assign, nonatomic) BOOL mediaTypeCanSeedGenius;	// G=0x36d74ce9; 
@property(assign, nonatomic) unsigned playCount;	// G=0x36ce0505; S=0x36ce0539; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x36ce057d; S=0x36ce05b1; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x36ce02e5; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x36ce03c5; 
@property(assign, nonatomic) unsigned rating;	// G=0x36ce03e1; S=0x36ce0415; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x36ce0459; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x36ce0801; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x36ce0665; S=0x36ce0699; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x36ce06dd; S=0x36ce0711; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x36ce0319; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x36ce034d; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x36ce0475; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x36ce0491; 
+ (void)_createFilterableDictionary;	// 0x36cdf849
+ (BOOL)_isValidItemProperty:(id)property;	// 0x36ce0019
+ (BOOL)canFilterByProperty:(id)property;	// 0x36cdef9d
+ (id)dynamicProperties;	// 0x36cdf701
+ (id)fallbackTitlePropertyForGroupingType:(int)groupingType;	// 0x36cdf6e5
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x36cdf5f5
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x36cdf661
- (id)initWithCoder:(id)coder;	// 0x36cdee99
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x36cded8d
- (id)_bestStoreURL;	// 0x36cdf53d
- (id)_directStoreURL;	// 0x36ce0f29
- (id)_libraryLinkArtist;	// 0x36ce10d1
- (id)_libraryLinkKind;	// 0x36ce1145
- (id)_libraryLinkPlaylistName;	// 0x36ce1205
- (id)_libraryLinkURL;	// 0x36ce1299
// declared property getter: - (id)albumArtist;	// 0x36ce005d
// declared property getter: - (id)albumTitle;	// 0x36ce00b9
// declared property getter: - (id)artist;	// 0x36ce00d5
// declared property getter: - (id)artwork;	// 0x36ce00f1
// declared property getter: - (double)bookmarkTime;	// 0x36ce010d
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x36ce0965
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x36ce0a51
// declared property getter: - (id)chapters;	// 0x36cdf82d
- (id)chaptersOfType:(int)type;	// 0x36ce0831
- (void)clearBookmarkTime;	// 0x36cdf4bd
// declared property getter: - (id)composer;	// 0x36ce0185
- (unsigned)countOfChaptersOfType:(int)type;	// 0x36ce0b85
- (void)didReceiveMemoryWarning;	// 0x36cdf539
- (BOOL)didSkipWithPlayedToTime:(double)time;	// 0x36cdf151
// declared property getter: - (id)effectiveAlbumArtist;	// 0x36ce0079
// declared property getter: - (double)effectiveStopTime;	// 0x36ce0381
- (void)encodeWithCoder:(id)coder;	// 0x36cdef21
- (BOOL)existsInLibrary;	// 0x36cdf575
- (void)gaplessHeuristicInfo:(unsigned *)info durationInSamples:(unsigned long long *)samples lastPacketsResync:(unsigned long long *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x36ce0c65
// declared property getter: - (id)genre;	// 0x36ce01a1
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x36ce078d
- (unsigned)hash;	// 0x36cdede9
- (void)incrementPlayCountForPlayingToEnd;	// 0x36cdf345
- (BOOL)incrementPlayCountForStopTime:(double)stopTime;	// 0x36cdf3c1
- (void)incrementSkipCount;	// 0x36cdf2c9
- (BOOL)isDownloadInProgress;	// 0x36d700ad
- (BOOL)isDownloadable;	// 0x36d6fe8d
- (BOOL)isEqual:(id)equal;	// 0x36cdee01
// declared property getter: - (BOOL)isITunesU;	// 0x36ce0281
// declared property getter: - (BOOL)isRental;	// 0x36ce01bd
// declared property getter: - (BOOL)isUsableAsRepresentativeItem;	// 0x36ce0f25
// declared property getter: - (id)lastPlayedDate;	// 0x36ce05f5
// declared property getter: - (id)lastSkippedDate;	// 0x36ce0755
// declared property getter: - (id)lastUsedDate;	// 0x36ce062d
- (void)markNominalAmountHasBeenPlayed;	// 0x36cdf1d1
// declared property getter: - (int)mediaType;	// 0x36ce02b1
// declared property getter: - (BOOL)mediaTypeCanSeedGenius;	// 0x36d74ce9
- (void)noteWasPlayedToTime:(double)time skipped:(BOOL)skipped;	// 0x36cdf24d
// declared property getter: - (unsigned)playCount;	// 0x36ce0505
// declared property getter: - (unsigned)playCountSinceSync;	// 0x36ce057d
// declared property getter: - (double)playbackDuration;	// 0x36ce02e5
// declared property getter: - (id)podcastTitle;	// 0x36ce03c5
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x36cdf7f9
- (id)predicateForProperty:(id)property;	// 0x36ce04c5
// declared property getter: - (unsigned)rating;	// 0x36ce03e1
// declared property getter: - (id)releaseDate;	// 0x36ce0459
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x36ce0801
- (id)representativeItem;	// 0x36cdf571
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x36ce0141
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x36ce07bd
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x36ce0611
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x36ce0771
// declared property setter: - (void)setLastUsedDate:(id)date;	// 0x36ce0649
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x36ce0539
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x36ce05b1
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x36ce0415
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x36ce0699
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x36ce0711
// declared property getter: - (unsigned)skipCount;	// 0x36ce0665
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x36ce06dd
// declared property getter: - (double)startTime;	// 0x36ce0319
// declared property getter: - (double)stopTime;	// 0x36ce034d
// declared property getter: - (id)title;	// 0x36ce0475
- (void)updateLastUsedDateToCurrentDate;	// 0x36cdf441
- (id)valueForProperty:(id)property;	// 0x36cdf029
- (id)valuesForProperties:(id)properties;	// 0x36cdf0d1
// declared property getter: - (unsigned)year;	// 0x36ce0491
@end

