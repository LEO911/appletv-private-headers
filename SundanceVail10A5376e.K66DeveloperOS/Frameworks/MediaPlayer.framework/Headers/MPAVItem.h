/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class MPImageCache, MPAlternateTracks, MPQueueFeeder, MPAVController, AVPlayerItem, NSString, NSData, AVAsset, NSArray, NSURL, MPMediaItem;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x36c9a571; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x36c9a579; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x36c9a581; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x36c9a57d; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x36c9a771; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x36c9ca75; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x36c9a575; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x36c9a589; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x36c9a58d; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x36c9bb55; S=0x36c9ca85; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x36c99e8d; 
@property(retain, nonatomic) AVPlayerItem *avPlayerItem;	// G=0x36c9d831; S=0x36c9d841; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x36c9a591; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x36c9bb2d; S=0x36c9ca95; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x36c9bc21; S=0x36c9bba5; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x36c9a595; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x36c9a5b9; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x36c9a5e1; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x36c9a76d; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x36c9cac5; S=0x36c9cad5; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x36c9a59d; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x36c9a599; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x36c9a641; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x36c9a5f9; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x36c9c141; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x36c9c189; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x36c9c229; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x36c9c1a1; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x36c9caa5; S=0x36c9cab5; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x36c9a8c1; S=0x36c9a905; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x36c9a5b5; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x36c9a6d9; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x36c9a6dd; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x36c9a6e1; S=0x36c9a9a9; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x36c9aa8d; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x36c9cae5; S=0x36c9caf5; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x36c9cb05; S=0x36c9cb1d; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x36d685e5; 
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x36c9a651; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x36c9a791; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x36d47a8d; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x36c9a795; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x36c9c001; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x36c9c369; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x36c9c381; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x36c9a2f1; S=0x36c9a309; 
@property(assign, nonatomic) MPAVController *player;	// G=0x36c9cb35; S=0x36c9cb45; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x36c9a07d; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x36c9a7ed; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x36c9a885; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x36c9cb55; S=0x36c9a9e1; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x36c9a259; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x36c9a6f5; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x36c9a329; S=0x36c9a32d; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x36c9aa51; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x36c9c479; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x36c9c399; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x36c9bfed; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x36c9bb7d; S=0x36c9cb65; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x36c9ab9d; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x36c9bffd; 
@property(assign) BOOL userSkippedPlayback;	// G=0x36c9a399; S=0x36c9a375; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x36c9c0ed; S=0x36c9c115; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x36c9c00d; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x36d6869d; 
+ (id)URLFromPath:(id)path;	// 0x36c997e5
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x36c9a585
+ (unsigned)defaultScaleMode;	// 0x36c997d1
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x36c997d5
- (id)init;	// 0x36c99895
- (id)initWithAsset:(id)asset;	// 0x36c99921
- (id)initWithURL:(id)url;	// 0x36c998a9
- (id)initWithURL:(id)url options:(id)options;	// 0x36c998e5
- (void)_applicationDidBecomeActive:(id)_application;	// 0x36c9c7e1
- (void)_checkAllowsBlockingDurationCall;	// 0x36c9d3d9
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x36c9c7c1
- (double)_durationFromExternalMetadataIfAvailable;	// 0x36c9c1c9
- (double)_durationInSeconds;	// 0x36c9a3ad
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x36c9be89
- (void)_itemAttributeAvailableKey:(id)key;	// 0x36c9c5b9
- (void)_loadAssetAndPlayerItem;	// 0x36c99d5d
- (void)_loadAssetProperties;	// 0x36c9ca19
- (void)_loadTimeMarkersAsync;	// 0x36c9ba0d
- (void)_loadTimeMarkersBlocking;	// 0x36c9aba1
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x36c9c929
- (void)_realoadEmbeddedTimeMarkers;	// 0x36c9aa55
- (void)_releaseAllTimeMarkers;	// 0x36c99b15
- (id)_seekableTimeRanges;	// 0x36c9c869
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x36c9bc31
// declared property getter: - (id)album;	// 0x36c9a571
// declared property getter: - (id)albumArtist;	// 0x36c9a579
// declared property getter: - (unsigned)albumTrackCount;	// 0x36c9a581
// declared property getter: - (unsigned)albumTrackNumber;	// 0x36c9a57d
// declared property getter: - (BOOL)allowsEQ;	// 0x36c9a771
// declared property getter: - (id)alternateTracks;	// 0x36c9ca75
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x36c9a6b5
// declared property getter: - (id)artist;	// 0x36c9a575
// declared property getter: - (id)artworkImageData;	// 0x36c9a589
// declared property getter: - (id)artworkMIMEType;	// 0x36c9a58d
- (id)artworkTimeMarkerForTime:(double)time;	// 0x36c9bdd5
// declared property getter: - (id)artworkTimeMarkers;	// 0x36c9bb55
// declared property getter: - (id)asset;	// 0x36c99e8d
// declared property getter: - (id)avPlayerItem;	// 0x36c9d831
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x36c9cb75
// declared property getter: - (BOOL)canSeedGenius;	// 0x36c9a591
- (id)chapterTimeMarkerForTime:(double)time;	// 0x36c9bd99
// declared property getter: - (id)chapterTimeMarkers;	// 0x36c9bb2d
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x36c9be4d
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x36c9bc21
// declared property getter: - (id)composer;	// 0x36c9a595
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x36c9a5b9
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x36c9a5e1
// declared property getter: - (int)customAVEQPreset;	// 0x36c9a76d
- (void)dealloc;	// 0x36c99b95
// declared property getter: - (float)defaultPlaybackRate;	// 0x36c9cac5
// declared property getter: - (unsigned)discCount;	// 0x36c9a59d
// declared property getter: - (unsigned)discNumber;	// 0x36c9a599
// declared property getter: - (id)displayableText;	// 0x36c9a641
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x36c9a5f9
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x36c9c141
// declared property getter: - (double)durationFromExternalMetadata;	// 0x36c9c189
// declared property getter: - (double)durationIfAvailable;	// 0x36c9c229
- (double)durationInSeconds;	// 0x36c9a401
// declared property getter: - (BOOL)durationIsValid;	// 0x36c9c1a1
// declared property getter: - (id)feeder;	// 0x36c9caa5
- (void)flushNowPlayingCaches;	// 0x36c99d2d
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x36c9a8c1
// declared property getter: - (id)genre;	// 0x36c9a5b5
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x36c9a691
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x36c9a6d9
// declared property getter: - (BOOL)hasDisplayableText;	// 0x36c9a6dd
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x36c9a6e1
// declared property getter: - (id)imageCache;	// 0x36c9aa8d
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x36c9aa91
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x36c9aabd
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x36c9cae5
// declared property getter: - (BOOL)isAssetLoaded;	// 0x36c9cb05
- (BOOL)isAssetURLValid;	// 0x36c9a5b1
- (BOOL)isPlaceholderForItem:(id)item;	// 0x36c9a5ad
// declared property getter: - (BOOL)isStreamable;	// 0x36c9a6f5
// declared property getter: - (BOOL)isStreamingQuality;	// 0x36d685e5
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x36c997d9
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x36c9a5a1
- (void)loadAssetAndPlayerItem;	// 0x36c99d59
- (id)localeForAssetTrack:(id)assetTrack;	// 0x36c9d50d
- (id)localizedPositionInPlaylistString;	// 0x36c9c011
// declared property getter: - (id)lyrics;	// 0x36c9a651
// declared property getter: - (id)mainTitle;	// 0x36c9a791
// declared property getter: - (id)mediaItem;	// 0x36d47a8d
// declared property getter: - (CGSize)naturalSize;	// 0x36c9a795
- (void)notePlaybackFinishedByHittingEnd;	// 0x36c9a2d5
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x36c9c801
- (id)path;	// 0x36c9a471
// declared property getter: - (unsigned long long)persistentID;	// 0x36c9c001
// declared property getter: - (double)playableDuration;	// 0x36c9c369
// declared property getter: - (double)playableDurationIfAvailable;	// 0x36c9c381
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x36c9a2f1
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x36c9a7f1
// declared property getter: - (id)player;	// 0x36c9cb35
// declared property getter: - (id)playerItem;	// 0x36c9a07d
// declared property getter: - (id)podcastURL;	// 0x36c9a7ed
// declared property getter: - (CGSize)presentationSize;	// 0x36c9a885
- (BOOL)prioritizeDownloadSession;	// 0x36d70375
- (void)reevaluateType;	// 0x36c9d56d
- (void)replaceAVPlayerItemWith:(id)with;	// 0x36c9d8c9
- (void)resetBookkeeping;	// 0x36c9a279
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x36c9a94d
- (void)setAlternateAudioTrackID:(int)anId;	// 0x36c9a2cd
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x36c9ca85
// declared property setter: - (void)setAvPlayerItem:(id)item;	// 0x36c9d841
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x36c9ca95
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x36c9bba5
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x36c9cad5
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x36c9cab5
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x36c9a905
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x36c9a9a9
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x36c9caf5
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x36c9cb1d
- (void)setOverrideDuration:(double)duration;	// 0x36c9a9cd
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x36c9a309
- (void)setPlaybackFinishedTime:(double)time;	// 0x36c9a30d
- (void)setPlaybackStoppedTime:(double)time;	// 0x36c9a2d1
// declared property setter: - (void)setPlayer:(id)player;	// 0x36c9cb45
- (void)setRating:(float)rating;	// 0x36c9a325
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x36c9a9e1
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x36c9a32d
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x36c9cb65
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x36c9a331
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x36c9a349
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x36c9a375
// declared property setter: - (void)setVideoID:(id)anId;	// 0x36c9c115
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x36c9cd29
- (void)setupPlaybackInfo;	// 0x36c9cd91
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x36c9cb55
// declared property getter: - (int)status;	// 0x36c9a259
// declared property getter: - (int)subtitleTrackID;	// 0x36c9a329
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x36c9aa51
// declared property getter: - (double)timeOfSeekableEnd;	// 0x36c9c479
// declared property getter: - (double)timeOfSeekableStart;	// 0x36c9c399
- (id)titlesForTime:(double)time;	// 0x36c9ab99
// declared property getter: - (unsigned)type;	// 0x36c9bfed
- (id)url;	// 0x36c9a4fd
- (id)urlTimeMarkerForTime:(double)time;	// 0x36c9be11
// declared property getter: - (id)urlTimeMarkers;	// 0x36c9bb7d
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x36c9ab9d
// declared property getter: - (float)userRating;	// 0x36c9bffd
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x36c9a399
// declared property getter: - (id)videoID;	// 0x36c9c0ed
// declared property getter: - (BOOL)wantsSubtitles;	// 0x36c9c00d
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x36d6869d
@end

