/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library
#import "NSCoding.h"
#import "SSDownloadManagerObserver.h"

@class MPMediaPlaylist, MPMediaQuery, NSString, NSArray;

@interface MPGeniusMix : NSObject <SSDownloadManagerObserver, NSCoding, NSCopying> {
	MPMediaPlaylist *_playlist;	// 4 = 0x4
	MPMediaQuery *_seedTracksQuery;	// 8 = 0x8
	NSArray *_representativeArtists;	// 12 = 0xc
	NSArray *_representativeImageItems;	// 16 = 0x10
}
@property(readonly, assign, nonatomic) float downloadProgress;	// G=0x36d02c51; 
@property(readonly, assign, nonatomic) BOOL isCloudMix;	// G=0x36d02dc1; 
@property(readonly, assign, nonatomic) BOOL isDownloading;	// G=0x36d02e09; 
@property(readonly, assign, nonatomic) NSString *name;	// G=0x36d02e35; 
@property(readonly, assign, nonatomic) MPMediaPlaylist *playlist;	// G=0x36d04879; @synthesize=_playlist
@property(readonly, assign, nonatomic) NSArray *representativeArtists;	// G=0x36d02e61; 
@property(readonly, assign, nonatomic) MPMediaQuery *seedTracksQuery;	// G=0x36d04201; 
+ (id)artworkCacheDirectoryPath;	// 0x36d022f9
+ (id)artworkImageForMediaItem:(id)mediaItem;	// 0x36d022fd
+ (id)artworkImageForMediaItem:(id)mediaItem scaleMode:(int)mode;	// 0x36d02671
+ (id)mixQueue;	// 0x36d01b85
- (id)initWithCoder:(id)coder;	// 0x36d01f01
- (id)initWithMPMediaPlaylist:(id)mpmediaPlaylist;	// 0x36d01bf1
- (id)_cacheDirectoryPath;	// 0x36d042bd
- (id)_cachedRepresentativeImagePath;	// 0x36d04379
- (unsigned long long)_entityArtworkCacheHashForRepresentativeItems:(id)representativeItems ensureItemArtworkFilesExist:(BOOL)exist;	// 0x36d043ad
- (void)_generateMixImageWithTileLength:(float)tileLength imageDidLoadBlock:(id)image;	// 0x36d03d61
- (CGImageRef)_getAlreadyLoadedRepresentativeImageWithTileLength:(float)tileLength loadCompletionBlock:(id)block;	// 0x36d03eb5
- (BOOL)_observeMixImageLoadingWithImageDidLoadBlock:(id)_observeMixImageLoadingWithImage;	// 0x36d03ca5
- (void)_onQueueLoadRepresentativeImageWithTileLength:(float)tileLength;	// 0x36d036f1
- (CGImageRef)_placeholderImageWithTileLength:(float)tileLength;	// 0x36d030f5
- (CGImageRef)_placeholderMixImageWithTileLength:(float)tileLength;	// 0x36d0332d
- (id)_representativeImageItemsWithMaxCount:(unsigned)maxCount;	// 0x36d0459d
- (BOOL)canPlayUsingNetworkType:(int)type;	// 0x36d02549
- (void)cancelDownload;	// 0x36d0236d
- (id)copyWithZone:(NSZone *)zone;	// 0x36d020d1
- (void)dealloc;	// 0x36d01cbd
- (id)description;	// 0x36d01d75
- (void)downloadManager:(id)manager downloadStatesDidChange:(id)downloadStates;	// 0x36d02115
- (void)downloadMixWithCompletionHandler:(id)completionHandler;	// 0x36d027e9
// declared property getter: - (float)downloadProgress;	// 0x36d02c51
- (void)encodeWithCoder:(id)coder;	// 0x36d02065
- (unsigned)hash;	// 0x36d01e05
// declared property getter: - (BOOL)isCloudMix;	// 0x36d02dc1
// declared property getter: - (BOOL)isDownloading;	// 0x36d02e09
- (BOOL)isEqual:(id)equal;	// 0x36d01e49
- (CGImageRef)loadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x36d04171
// declared property getter: - (id)name;	// 0x36d02e35
// declared property getter: - (id)playlist;	// 0x36d04879
- (void)preloadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x36d04061
// declared property getter: - (id)representativeArtists;	// 0x36d02e61
// declared property getter: - (id)seedTracksQuery;	// 0x36d04201
@end

