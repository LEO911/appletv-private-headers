/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"
#import <DOMNode.h> // Unknown library

@class UIResponder, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x304507d1
- (id)createPickerCell;	// 0x304507d9
- (id)createSelectedItem;	// 0x304507d5
- (id)itemTitle;	// 0x304507e1
- (void)populateCell:(id)cell;	// 0x304507dd
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x304679a1
- (id)urlScheme;	// 0x304679f9
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x304749e1
- (BOOL)isSecure;	// 0x30474af1
- (BOOL)isTextControl;	// 0x30474aed
- (int)keyboardType;	// 0x30474af5
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30476751; S=0x30476755; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x3047697d; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x30476109; S=0x3047610d; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x304769b5; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x30476121; S=0x30476125; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30477465; S=0x304774bd; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x3047667d; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x30475381; S=0x30475015; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30477071; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x304775fd; S=0x30477601; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x30476119; S=0x3047611d; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x304767b1; S=0x30476909; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30477a09; S=0x30477a61; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x30475e4d; S=0x30475db9; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x30476111; S=0x30476115; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x30476101; S=0x30476105; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x30474d69; S=0x30474d6d; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30477461; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x30476d81
- (NSRange)_markedTextNSRange;	// 0x304758fd
- (CGRect)_selectionClipRect;	// 0x30476721
- (id)_textSelectingContainer;	// 0x30476759
- (void)acceptedAutoFillWord:(id)word;	// 0x304765c9
- (id)automaticallySelectedOverlay;	// 0x30476129
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30477815
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30476751
- (void)beginSelectionChange;	// 0x30474d09
// declared property getter: - (id)beginningOfDocument;	// 0x3047697d
- (CGRect)caretRect;	// 0x30475f5d
- (CGRect)caretRectForPosition:(id)position;	// 0x30477519
- (unsigned short)characterAfterCaretSelection;	// 0x304755a5
- (unsigned short)characterBeforeCaretSelection;	// 0x30474fd5
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30474f91
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x304776c5
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x304777a9
- (id)closestPositionToPoint:(CGPoint)point;	// 0x30477605
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30477665
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x30477189
- (void)confirmMarkedText:(id)text;	// 0x30475181
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30476599
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x30475cb9
- (id)content;	// 0x30476745
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x30476109
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x30476071
- (id)delegate;	// 0x30474cbd
- (void)deleteBackward;	// 0x30474d71
- (BOOL)editable;	// 0x30477a01
- (BOOL)editing;	// 0x30477a05
// declared property getter: - (id)endOfDocument;	// 0x304769b5
- (void)endSelectionChange;	// 0x30474d39
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30475861
- (void)extendCurrentSelection:(int)selection;	// 0x30475ad1
- (CGRect)firstRectForRange:(id)range;	// 0x30476c69
- (id)fontForCaretSelection;	// 0x304755e9
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30474f4d
- (void)handleKeyWebEvent:(id)event;	// 0x30474cc5
- (BOOL)hasContent;	// 0x30474b25
- (BOOL)hasSelection;	// 0x30475b61
- (BOOL)hasText;	// 0x30477171
// converted property getter: - (int)initialSelectionBehavior;	// 0x30476121
// declared property getter: - (id)inputDelegate;	// 0x30477465
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x30474e9d
- (id)insertDictationResultPlaceholder;	// 0x30474ef5
- (void)insertText:(id)text;	// 0x30474de5
// declared property getter: - (id)interactionAssistant;	// 0x3047667d
- (BOOL)isAutoFillMode;	// 0x30476625
- (BOOL)isEditable;	// 0x30476749
- (BOOL)isEditing;	// 0x3047674d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x304772cd
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x30477381
- (BOOL)isShowingPlaceholder;	// 0x304760fd
// converted property getter: - (id)markedText;	// 0x30475381
// declared property getter: - (id)markedTextRange;	// 0x30477071
// declared property getter: - (id)markedTextStyle;	// 0x304775fd
- (id)metadataDictionariesForDictationResults;	// 0x30474ecd
- (void)moveBackward:(unsigned)backward;	// 0x30475c11
- (void)moveDown;	// 0x30476ffd
- (void)moveForward:(unsigned)forward;	// 0x30475c15
- (void)moveLeft;	// 0x30476f15
- (void)moveRight;	// 0x30476ea1
- (void)moveUp;	// 0x30476f89
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x3047579d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x304771c5
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x3047726d
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30477201
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x30477315
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30477741
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30475771
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30475a95
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30475a59
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x304773c9
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30476ad9
- (CGRect)rectContainingCaretSelection;	// 0x304756ed
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30475271
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x3047531d
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30474f1d
- (void)replaceCurrentWordWithText:(id)text;	// 0x304754d5
- (void)replaceRange:(id)range withText:(id)text;	// 0x30476c21
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x30476b25
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x304753f1
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30476c45
- (BOOL)requiresKeyEvents;	// 0x30474cc1
// declared property getter: - (int)returnKeyType;	// 0x30476119
- (void)selectAll;	// 0x30475c19
- (id)selectedDOMRange;	// 0x304759a9
// declared property getter: - (id)selectedTextRange;	// 0x304767b1
// declared property getter: - (int)selectionAffinity;	// 0x30477a09
- (BOOL)selectionAtDocumentStart;	// 0x30475ba1
- (BOOL)selectionAtWordStart;	// 0x30475bd9
- (NSRange)selectionRange;	// 0x3047595d
- (id)selectionRectsForRange:(id)range;	// 0x3047781d
- (int)selectionState;	// 0x30475c79
- (id)selectionView;	// 0x304766f5
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30477819
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30476755
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x3047610d
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x30476125
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x304774bd
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30475015
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x304750c5
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30477601
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x3047611d
- (void)setSecure:(BOOL)secure;	// 0x30474cb9
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x304759e1
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30476909
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30476821
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30477a61
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30475f39
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x30475e9d
// converted property setter: - (void)setText:(id)text;	// 0x30475db9
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x30476115
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x30476105
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x30474d6d
- (void)setupPlaceholderTextIfNeeded;	// 0x30474b65
- (void)takeTraitsFrom:(id)from;	// 0x30474af9
// converted property getter: - (id)text;	// 0x30475e4d
- (id)textColorForCaretSelection;	// 0x304756d1
- (id)textDocument;	// 0x30477a65
- (id)textInRange:(id)range;	// 0x304769ed
- (id)textInputTraits;	// 0x30474b69
// declared property getter: - (int)textLoupeVisibility;	// 0x30476111
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30476a41
// declared property getter: - (id)textSuggestionDelegate;	// 0x30476101
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x30474d69
// declared property getter: - (id)tokenizer;	// 0x30477461
- (id)uiWebDocumentView;	// 0x30474e55
- (void)unmarkText;	// 0x304770ed
- (void)updateAutoscroll:(id)autoscroll;	// 0x30476171
- (void)updateSelection;	// 0x3047671d
- (id)wordContainingCaretSelection;	// 0x30475809
- (int)wordOffsetInRange:(id)range;	// 0x304758c1
- (id)wordRangeContainingCaretSelection;	// 0x304757c9
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x304d8389
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x304d8549
- (BOOL)alwaysAttemptToShowTapHighlight;	// 0x304d84ed
- (BOOL)isLikelyToBeginPageLoad;	// 0x304d8559
- (BOOL)nodeCanBecomeFirstResponder;	// 0x304d855d
- (BOOL)showsTapHighlight;	// 0x304d84e9
- (id)tapHighlightColor;	// 0x304d8505
- (BOOL)touchCalloutEnabled;	// 0x304d8545
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x30507d01
- (id)asDomRange;	// 0x30507d05
- (id)asElement;	// 0x305079e5
- (CGRect)boundingRect;	// 0x3050802d
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x3050808d
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x30508015
- (BOOL)containsBlock:(id)block;	// 0x30507b51
- (BOOL)containsNode:(id)node;	// 0x30507951
- (BOOL)containsRange:(id)range;	// 0x30507de5
- (id)enclosingDocument;	// 0x305080fd
- (id)enclosingElementIncludingSelf;	// 0x30507a09
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x30508309
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x3050810d
- (BOOL)hasCustomLineHeight;	// 0x30507ac5
- (BOOL)isSameBlock:(id)block;	// 0x30507b01
- (id)largerParent;	// 0x30507c09
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x305083a9
- (id)parentBlock;	// 0x30507a69
- (id)rangeOfContents;	// 0x30507eed
- (BOOL)rendersAsBlock;	// 0x30507ce9
- (BOOL)selectable;	// 0x30507a79
- (BOOL)strictlyContainsBlock:(id)block;	// 0x30507bc1
- (BOOL)strictlyContainsNode:(id)node;	// 0x305079a1
- (id)webFrame;	// 0x30507a41
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x3051951d; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x3051c335; 
- (unsigned long)_characterAfterCaretSelection;	// 0x30519661
- (unsigned long)_characterBeforeCaretSelection;	// 0x30519675
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x30519689
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x30519701
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x3051a901
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x3051a371
- (void)_deleteByWord;	// 0x3051a00d
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x3051a399
- (void)_deleteToEndOfLine;	// 0x3051a215
- (void)_deleteToStartOfLine;	// 0x3051a0b9
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x30519e01
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x30519e15
- (void)_extendCurrentSelection:(int)selection;	// 0x30519c4d
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x3051a7b9
- (id)_fontForCaretSelection;	// 0x3051aa25
- (id)_fullRange;	// 0x3051a761
- (id)_fullText;	// 0x30519969
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x30519be5
- (int)_indexForTextPosition:(id)textPosition;	// 0x3051958d
- (BOOL)_isEmptySelection;	// 0x30519b71
- (id)_keyInput;	// 0x3051952d
- (CGRect)_lastRectForRange:(id)range;	// 0x3051a569
- (void)_moveCurrentSelection:(int)selection;	// 0x30519d1d
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x3051bda9
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x3051bf9d
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x3051c099
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x3051ba9d
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x3051b481
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x3051b7f5
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x3051b195
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x3051b9e1
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x3051b2f9
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x3051b609
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x3051af21
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x3051bbb5
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x3051c701
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x305195d1
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x3051c7f1
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x3051c199
// declared property getter: - (id)_proxyTextInput;	// 0x3051951d
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x3051a66d
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x3051a6d9
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x3051a71d
- (void)_replaceCurrentWordWithText:(id)text;	// 0x3051a4f5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x3051a669
- (id)_selectableText;	// 0x305194fd
- (int)_selectionAffinity;	// 0x3051c23d
- (NSRange)_selectionAsNSRange;	// 0x30519531
- (BOOL)_selectionAtDocumentEnd;	// 0x30519add
- (BOOL)_selectionAtDocumentStart;	// 0x30519a6d
- (BOOL)_selectionAtWordStart;	// 0x305199d5
- (CGRect)_selectionClipRect;	// 0x30519b4d
- (void)_setCaretSelectionAtEndOfSelection;	// 0x30519f85
- (void)_setGestureRecognizers;	// 0x3051c339
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x3051ad69
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x3051c581
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x3051c1c9
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x3051ab15
- (id)_textColorForCaretSelection;	// 0x3051a965
// declared property getter: - (id)_textSelectingContainer;	// 0x3051c335
- (void)_unmarkText;	// 0x3051c6a9
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x3051aae5
- (id)_wordContainingCaretSelection;	// 0x305198d1
- (int)selectionAffinity;	// 0x3051cd49
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x3051cf31
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x305541c5
- (id)_nextAssistedNode;	// 0x305541c9
- (id)_previousAssistedNode;	// 0x3055420d
- (BOOL)_requiresAccessoryView;	// 0x3055418d
- (BOOL)_requiresInputView;	// 0x305541a5
- (void)_startAssistingDocumentView:(id)view;	// 0x30554101
- (void)_stopAssistingDocumentView:(id)view;	// 0x30554135
- (BOOL)_supportsAccessoryClear;	// 0x305541c1
- (BOOL)_supportsAutoFill;	// 0x305541bd
- (id)_textFormElement;	// 0x30554251
@end

