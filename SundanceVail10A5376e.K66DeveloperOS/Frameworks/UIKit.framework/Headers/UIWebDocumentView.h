/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIWebTiledView.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "UIWebFileUploadPanelDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class UIColor, UIImage, WebThreadSafeUndoManager, UITextInteractionAssistant, WebViewReachabilityObserver, UIWebRotatingSheet, NSMutableSet, NSArray, NSTimer, UITextChecker, DOMHTMLElement, UILongPressGestureRecognizer, UIAutoscroll, UITapGestureRecognizer, CALayer, UIPanGestureRecognizer, WebView, DOMNode, UITextInputTraits, DOMElement, DOMRange, UITextRange, NSDictionary, UITextPosition, UIView, UIWebSelectionAssistant, _UITextServiceSession, UIWebFileUploadPanel;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	unsigned _previousScrollWasScrollToTop : 1;	// 545 = 0x221
	unsigned _skipResettingNeedsScrollNotifications : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	UIWebFileUploadPanel *_fileUploadPanel;	// 580 = 0x244
	int _selectionAffinity;	// 584 = 0x248
	DOMElement *_dictationResultPlaceholder;	// 588 = 0x24c
	id _dictationResultPlaceholderRemovalObserver;	// 592 = 0x250
	DOMRange *_rangeToRestoreAfterDictation;	// 596 = 0x254
	_UITextServiceSession *_definitionSession;	// 600 = 0x258
	_UITextServiceSession *_learnSession;	// 604 = 0x25c
	BOOL _suppressesIncrementalRendering;	// 608 = 0x260
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x303891c1; S=0x30479861; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x304ecec9; S=0x304ece59; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30472db9; S=0x30472dbd; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x3030f121; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x304ec635; S=0x3029c5b9; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x3029a941; S=0x302ca565; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x30345b4d; S=0x302cb839; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x3046d815; S=0x3046d7bd; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x302cc091; converted property
@property(readonly, assign) int documentType;	// G=0x302cc081; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x3046fb21; S=0x3046fadd; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x3046fd99; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30332185; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x302fbf09; S=0x3030d069; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x303459d9; 
@property(assign) id interactionDelegate;	// G=0x304796e5; S=0x302cb849; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x3046fdf5; S=0x30371b15; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x3046fe71; S=0x3046fe59; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x3046d7a5; S=0x3029a391; converted property
@property(retain) id markedText;	// G=0x30375d25; S=0x303da81d; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x3029b3f1; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30473af9; S=0x30473afd; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x30361271; S=0x3046fa91; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x30474091; S=0x304740a1; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x303040b5; S=0x303460d9; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30304141; S=0x30473d59; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x30473d5d; S=0x303324b5; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x3033981d; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x3046dbf9; S=0x3037de59; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x3046fa7d; S=0x3046fa65; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x3046dbe1; S=0x3046db79; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x3046fe49; S=0x3046fe09; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x304740b1; S=0x3037e071; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x30471c25; S=0x30471af9; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x3029b3bd; 
@property(retain) id typingAttributes;	// G=0x3046d0d9; S=0x3046d22d; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x302fbf5d; converted property
@property(assign) BOOL updatesScrollView;	// G=0x3046e145; S=0x3046e12d; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x30472c9d; converted property
@property(readonly, retain) WebView *webView;	// G=0x30299f09; converted property
+ (id)_createDefaultHighlightView;	// 0x3036c1b1
+ (id)_sharedHighlightView;	// 0x3036c179
+ (double)getTimestamp;	// 0x3046cdd9
+ (BOOL)hasLandscapeOrientation;	// 0x302d102d
+ (void)initialize;	// 0x30284c79
+ (Class)layerClass;	// 0x30298641
+ (id)standardTextViewPreferences;	// 0x30297d95
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x30297f31
- (id)initWithFrame:(CGRect)frame;	// 0x302c90a9
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x3029808d
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x30360f19
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x303891c1
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x3047847d
- (void)_addAdditionalSubview:(id)subview;	// 0x3046efa1
- (void)_addShortcut:(id)shortcut;	// 0x304727b9
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x3036c589
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x302ccffd
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x3047b011
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x3047b2b5
- (void)_cancelLongPressGestureRecognizer;	// 0x3036c3d1
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x303606cd
- (void)_cleanupSheet;	// 0x303738b5
- (void)_clearAllConsoleMessages;	// 0x3046fde9
- (void)_clearDoubleTapRect;	// 0x302cea7d
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x3047313d
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x30473409
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x3047a05d
- (BOOL)_dataDetectionIsActivated;	// 0x302ca621
- (void)_define:(id)define;	// 0x30472691
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x304705d5
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x3029c831
- (void)_didScroll;	// 0x3036bdb1
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x3046ceb5
- (float)_documentScale;	// 0x3036223d
- (id)_documentUrl;	// 0x30473d71
- (CGRect)_documentViewVisibleRect;	// 0x302cb4cd
- (id)_doubleTapGestureRecognizer;	// 0x3047984d
- (void)_doubleTapRecognized:(id)recognized;	// 0x304783f5
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x3047baf1
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x303433b9
- (void)_finishedUsingDictationPlaceholder;	// 0x30470c69
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x30473549
- (id)_focusedOrMainFrame;	// 0x3029a065
- (id)_groupName;	// 0x303d5b89
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x3046fd21
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x3046fb45
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x3046fd5d
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x3046f489
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x30478601
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x3046ce01
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x3046ce19
- (BOOL)_isInspectorSearchingForNode;	// 0x303627a1
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x30386e51
- (CGRect)_lastRectForRange:(id)range;	// 0x30383661
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x302cb2ad
- (void)_longPressRecognized:(id)recognized;	// 0x304786e1
- (NSRange)_markedTextNSRange;	// 0x30471831
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x3046ef01
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x3046ee95
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x302988d9
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x3046e41d
- (void)_notifyPlugInViewsOfDidZoom;	// 0x3046e531
- (void)_notifyPlugInViewsOfScaleChange;	// 0x302cb149
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x3046e30d
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x3046f449
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x3046f345
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x3046f2e1
- (id)_parentTextView;	// 0x3030d345
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30473a0d
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x3046ce51
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x3047ac09
- (Class)_printFormatterClass;	// 0x3058b991
- (void)_promptForReplace:(id)replace;	// 0x30472c45
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x302d1429
- (void)_removeAdditionalSubview:(id)subview;	// 0x3046f00d
- (void)_removeDefinitionController:(BOOL)controller;	// 0x30304221
- (void)_removeShortcutController:(BOOL)controller;	// 0x3046ce31
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x3046f511
- (void)_resetForNewPage;	// 0x302d08dd
- (void)_resetFormDataForFrame:(id)frame;	// 0x3046fde5
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x30387ff1
- (void)_resetShowingTextStyle:(id)style;	// 0x303924e5
- (void)_reshapePlugInViews;	// 0x3029ce85
- (id)_responderForBecomeFirstResponder;	// 0x3046ff31
- (void)_restoreFlattenedContentLayers;	// 0x304736cd
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x302d0b89
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x30299c51
- (void)_runLoadBlock:(id)block;	// 0x30360751
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x302cf9f1
- (id)_scriptingInfoForForm:(id)form;	// 0x30474341
- (id)_scriptingInfoForLink:(id)link;	// 0x304740c5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30473a95
- (CGRect)_selectionClipRect;	// 0x30472105
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x30343375
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x30478d4d
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x30479861
- (void)_setDocumentScale:(float)scale;	// 0x302cade9
- (void)_setDocumentType:(int)type;	// 0x302ca661
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x302ca681
- (void)_setFont:(id)font;	// 0x3046cf11
- (void)_setParentTextView:(id)view;	// 0x3029a5b5
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x30362221
- (void)_setTextColor:(id)color;	// 0x3046cfe1
- (CGRect)_shortcutPresentationRect;	// 0x304725e9
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x304732f5
- (BOOL)_shouldResetForNewPage;	// 0x302d0899
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x3029a1bd
- (BOOL)_shouldUseInitialScale;	// 0x304730fd
- (void)_showDataDetectorsSheet;	// 0x3047a855
- (void)_showImageSheet;	// 0x3047a311
- (void)_showLinkSheet;	// 0x3047a5ed
- (void)_showPendingContentLayers;	// 0x302d0f21
- (void)_showTextStyleOptions:(id)options;	// 0x3047242d
- (void)_singleTapRecognized:(id)recognized;	// 0x30387f41
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x3032b005
- (id)_targetURL;	// 0x304792d1
- (id)_textSelectingContainer;	// 0x303463f5
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x30478439
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x30478759
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x304700ed
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x30470041
- (void)_updateFixedPositionContent;	// 0x3036c50d
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x3046e685
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x302d0ed1
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x302cb299
- (void)_updateScrollViewBoundaryZoomScales;	// 0x3029a6a5
- (void)_updateSize;	// 0x302cecdd
- (void)_updateSubviewCaches;	// 0x30362251
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x30361b45
- (float)_zoomedDocumentScale;	// 0x302ce7d5
- (void)actionDidFinish;	// 0x3047a805
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x30479381
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x30479431
- (void)addInputString:(id)string;	// 0x304701d5
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x30470199
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x30388c69
- (id)asText;	// 0x304ed9e5
- (void)assistFormNode:(id)node;	// 0x3046fdd1
- (void)attemptClick:(id)click;	// 0x30388d1d
- (id)automaticallySelectedOverlay;	// 0x30386be9
- (CGRect)autoscrollContentFrame;	// 0x30472d91
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x304ecec9
- (CGRect)autoscrollDragFrame;	// 0x30472d6d
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30473d35
- (BOOL)becomeFirstResponder;	// 0x30389039
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30472db9
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x3047b801
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x3047b5fd
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x3047b799
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x3047b571
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x3047b5a1
- (void)beginSelectionChange;	// 0x30303031
// declared property getter: - (id)beginningOfDocument;	// 0x3030f121
- (BOOL)canBecomeFirstResponder;	// 0x303891a5
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x3032a3b1
- (BOOL)canResignFirstResponder;	// 0x3046fefd
- (void)cancelAutoscroll;	// 0x304ed755
- (void)cancelInteraction;	// 0x30388071
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x3036bf89
- (BOOL)cancelMouseTracking;	// 0x3046e29d
- (BOOL)cancelTouchTracking;	// 0x3046e2d5
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x304ec635
- (CGRect)caretRect;	// 0x30347631
- (CGRect)caretRectForPosition:(id)position;	// 0x303059d1
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x30305c7d
- (unsigned short)characterAfterCaretSelection;	// 0x30339881
- (unsigned short)characterBeforeCaretSelection;	// 0x30339851
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30471295
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30473bd5
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30473cc9
- (id)checkSpellingOfString:(id)string;	// 0x30380071
- (void)clearInteractionTimer;	// 0x3036c139
- (void)clearRangedSelectionInitialExtent;	// 0x304ec775
- (void)clearSelection;	// 0x304ec3b1
- (BOOL)clearWKFirstResponder;	// 0x3038072d
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x304ec451
- (id)closestPositionToPoint:(CGPoint)point;	// 0x30331a81
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30473b05
- (void)collapseSelection;	// 0x304ec5e1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x30331e39
- (void)completeInteraction;	// 0x30373945
- (void)confirmMarkedText:(id)text;	// 0x3047120d
- (BOOL)considerHeightForDoubleTap;	// 0x30473f79
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x3047bf71
- (BOOL)containsOnlySelectableElements;	// 0x3047374d
- (CGRect)contentFrameForView:(id)view;	// 0x304ecf45
- (id)contentView;	// 0x30473de5
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x30478181
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x30471dcd
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x3046da79
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x3046da31
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x30331b61
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x3046db1d
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x3046dac1
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x30305d79
- (void)copy:(id)copy;	// 0x30472319
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x3046e225
- (float)currentDocumentScale;	// 0x30473df9
- (void)cut:(id)cut;	// 0x3047224d
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x3029a941
- (void)dealloc;	// 0x3037339d
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x30478f8d
- (void)deferInteraction;	// 0x30479281
- (void)deferredBecomeFirstResponder;	// 0x3046ff01
// converted property getter: - (id)delegate;	// 0x30345b4d
- (void)deleteBackward;	// 0x30470221
- (void)deleteFromInput;	// 0x304701e9
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x3046d815
- (id)dictationInterpretations;	// 0x30470f9d
- (id)dictationResultMetadataForRange:(id)range;	// 0x30470575
- (void)didEndScroll;	// 0x30472ebd
- (void)didEndZoom;	// 0x30473041
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x3046d4b9
- (void)didMoveToSuperview;	// 0x3029a691
- (void)didRemovePlugInView:(id)view;	// 0x30362951
- (void)didRotateInteractionSheet;	// 0x3046f9fd
- (void)didZoom;	// 0x30472fe9
- (void)disableClearsOnInsertion;	// 0x3037f735
// converted property getter: - (CGRect)documentBounds;	// 0x302cc091
// converted property getter: - (int)documentType;	// 0x302cc081
// converted property getter: - (CGRect)doubleTapRect;	// 0x3046fd99
- (BOOL)doubleTapRectIsReplaced;	// 0x3046fdbd
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x30473f19
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x3047bd2d
- (unsigned)effectiveDataDetectorTypes;	// 0x3037e201
- (void)enableReachability;	// 0x302c97fd
- (id)enclosingScrollView;	// 0x30473dd5
// declared property getter: - (id)endOfDocument;	// 0x30332185
- (void)endPrintMode;	// 0x3047b96d
- (void)endSelectionChange;	// 0x30304629
- (void)ensureSelection;	// 0x3037ea19
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30471711
- (void)extendCurrentSelection:(int)selection;	// 0x304718ed
- (void)fileUploadPanelDidDismiss:(id)fileUploadPanel;	// 0x3046e0ed
- (CGRect)firstRectForRange:(id)range;	// 0x30383119
- (id)fontForCaretSelection;	// 0x303846c9
- (void)forceLayout;	// 0x3046e159
- (id)formElement;	// 0x30331bcd
- (void)forwardInvocation:(id)invocation;	// 0x302c9efd
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x3046e9c9
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30470bd9
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x30387d99
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x30387c59
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x30386de9
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x30387ccd
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x3038792d
- (int)getPasteboardChangeCount;	// 0x3046ecf5
- (int)getPasteboardItemsCount;	// 0x3046e995
- (void)handleKeyWebEvent:(id)event;	// 0x30471e8d
- (BOOL)hasContent;	// 0x3029cabd
- (BOOL)hasDrawnTiles;	// 0x302ccd7d
- (BOOL)hasEditableSelection;	// 0x3032aba5
- (BOOL)hasMarkedText;	// 0x304ec405
- (BOOL)hasPlugInSubviews;	// 0x30472061
- (BOOL)hasRangedSelection;	// 0x304705b5
- (BOOL)hasRichlyEditableSelection;	// 0x303396e1
- (BOOL)hasSelection;	// 0x3029a02d
- (BOOL)hasSimpleTextOnlyStructure;	// 0x30473789
- (BOOL)hasText;	// 0x30376ef5
- (void)hideTapHighlight;	// 0x30479045
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x30479089
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x3038808d
- (id)hostViewForSheet:(id)sheet;	// 0x3047ac5d
- (id)implementationWebView;	// 0x30471de1
- (BOOL)inPopover;	// 0x30472cad
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x3047ac6d
- (float)initialScale;	// 0x302cac21
// declared property getter: - (id)inputDelegate;	// 0x302fbf09
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x304702fd
- (id)insertDictationResultPlaceholder;	// 0x3047063d
- (void)insertText:(id)text;	// 0x30375659
- (void)installGestureRecognizers;	// 0x30298be1
- (float)integralScaleForScale:(float)scale;	// 0x302cb085
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x302cb09d
// declared property getter: - (id)interactionAssistant;	// 0x303459d9
// converted property getter: - (id)interactionDelegate;	// 0x304796e5
- (id)interactionElement;	// 0x30479711
- (CGPoint)interactionLocation;	// 0x30479725
- (BOOL)isCaretInEmptyParagraph;	// 0x303397bd
- (BOOL)isClassicViewportMode;	// 0x3046dc0d
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x3046fb21
- (BOOL)isEditable;	// 0x3037d2b1
- (BOOL)isEditing;	// 0x3034a1d5
- (BOOL)isEditingSingleLineElement;	// 0x30470265
- (BOOL)isInInteraction;	// 0x303c11c1
- (BOOL)isInPrintMode;	// 0x3047aebd
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x303d6559
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x303320f1
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x30332129
- (BOOL)isShowingFullScreenPlugInUI;	// 0x302d1e1d
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x3046fdf5
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x3046ed29
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x3046fe71
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x3037ecd5
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x303da4b5
- (BOOL)keyboardInputChanged:(id)changed;	// 0x30349e69
- (void)keyboardInputChangedSelection:(id)selection;	// 0x30345a6d
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x30471de9
- (void)layoutSubviews;	// 0x3029cb75
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x3046d671
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x3037d1fd
- (void)loadRequest:(id)request;	// 0x30360675
// converted property getter: - (BOOL)loadsSynchronously;	// 0x3046d7a5
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x30472c8d
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x30472c7d
- (BOOL)makeWKFirstResponder;	// 0x30345c79
// converted property getter: - (id)markedText;	// 0x30375d25
// declared property getter: - (id)markedTextRange;	// 0x3029b3f1
// declared property getter: - (id)markedTextStyle;	// 0x30473af9
- (float)maximumDoubleTapScale;	// 0x304730f1
- (float)maximumScale;	// 0x3046da19
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x30361271
- (id)metadataDictionariesForDictationResults;	// 0x30343cf9
- (id)methodSignatureForSelector:(SEL)selector;	// 0x302c9ead
- (float)minimumScale;	// 0x302cab5d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x3046d845
- (float)minimumScaleForSize:(CGSize)size;	// 0x30473e49
- (BOOL)mouseEventsChangeSelection;	// 0x3047bf59
- (void)moveBackward:(unsigned)backward;	// 0x304719cd
- (void)moveForward:(unsigned)forward;	// 0x30471a39
- (BOOL)needsScrollNotifications;	// 0x3046dc21
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x3046e249
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30471661
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x30349d65
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x304ec515
- (void)paste:(id)paste;	// 0x30472969
- (void)performClick:(id)click;	// 0x30478829
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x304780e9
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x3046ea19
- (BOOL)playsNicelyWithGestures;	// 0x3037d415
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x304ed9e9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30473a6d
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30346699
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x3030f0c5
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30473c5d
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x3047ace9
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x304715f9
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x304718b9
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30471885
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x3030eef9
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30473865
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x30474091
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x3046ec25
- (CGRect)rectContainingCaretSelection;	// 0x30471551
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30471309
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x30473e59
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x3047139d
- (void)redrawScaledDocument;	// 0x3046f6bd
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30470ca1
- (void)replace:(id)replace;	// 0x30472b71
- (void)replaceCurrentWordWithText:(id)text;	// 0x304710a9
- (void)replaceRange:(id)range withText:(id)text;	// 0x30473949
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x30470fd5
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x303da725
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x30471799
- (BOOL)requiresKeyEvents;	// 0x3031bf41
- (void)resetInteraction;	// 0x3036c101
- (void)resetTilingAfterLoadComplete;	// 0x302cf7b5
- (BOOL)resignFirstResponder;	// 0x302fc625
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x303045ed
- (void)saveStateToCurrentHistoryItem;	// 0x302cf99d
- (id)scriptingInfoWithChildren;	// 0x3035f509
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x304ed775
- (void)scrollViewWasRemoved;	// 0x3036f469
- (void)select:(id)select;	// 0x30472ad5
- (void)selectAll;	// 0x30471aa5
- (void)selectAll:(id)all;	// 0x30472b21
- (void)selectWord;	// 0x304ec35d
- (id)selectedDOMRange;	// 0x3030410d
// declared property getter: - (id)selectedTextRange;	// 0x303040b5
// declared property getter: - (int)selectionAffinity;	// 0x30304141
- (BOOL)selectionAtDocumentStart;	// 0x3047196d
- (BOOL)selectionAtWordStart;	// 0x3047199d
- (int)selectionBaseWritingDirection;	// 0x303448c9
- (void)selectionChanged;	// 0x303033bd
- (void)selectionChanged:(id)changed;	// 0x303032bd
// declared property getter: - (int)selectionGranularity;	// 0x30473d5d
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x304ecdf9
- (NSRange)selectionRange;	// 0x303da475
- (id)selectionRects;	// 0x304ecb11
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x30332b79
- (id)selectionRectsForRange:(id)range;	// 0x303d632d
// declared property getter: - (int)selectionState;	// 0x3033981d
- (id)selectionView;	// 0x304720b9
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x30360fb9
- (void)sendScrollEventIfNecessary;	// 0x3046dc35
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x3036c669
- (void)sendScrollWheelEvents;	// 0x3047947d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x303c0b51
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x302cb8f9
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x304796f9
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x30299e89
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x302ca645
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x304ece59
- (void)setBaseWritingDirection:(int)direction;	// 0x304ec6b1
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x3034671d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30472dbd
- (void)setBottomBufferHeight:(float)height;	// 0x30471e5d
- (void)setCaretChangeListener:(id)listener;	// 0x30471d9d
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x3029c5b9
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x3030de1d
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x302ca565
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x302cb839
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x3046d7bd
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x3046fadd
- (void)setDrawsBackground:(BOOL)background;	// 0x3029a60d
- (void)setFrame:(CGRect)frame;	// 0x302986a1
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x3029a2f9
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x3037de41
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x3046df95
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30299dd5
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x3030d069
- (void)setInteractionAssistantGestureRecognizers;	// 0x3046ff61
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x302cb849
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x30371b15
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x3046fe59
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x3029a391
// converted property setter: - (void)setMarkedText:(id)text;	// 0x303da81d
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30471171
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30473afd
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30299e4d
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x3046fa91
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30299e11
- (void)setMinimumSize:(CGSize)size;	// 0x30299c2d
- (void)setMinimumSize:(CGSize)size updateCurrentViewportConfigurationSize:(BOOL)size2;	// 0x3046dfb1
- (void)setOpaque:(BOOL)opaque;	// 0x3029a5c9
- (void)setPaused:(BOOL)paused;	// 0x30471ec9
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x302d1e35
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x304740a1
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x304ec6e5
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x304ec745
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x304ec715
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x304ec805
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x304ec8a5
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x304ec7d5
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x304ec7a5
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x304ecccd
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x304eca59
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x303461a5
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x303460d9
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x304737c5
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30473d59
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x303324b5
- (void)setSelectionToEnd;	// 0x304ecd51
- (void)setSelectionToStart;	// 0x304ecda5
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x304ec941
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x304ed779
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x3037de59
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x3046fa65
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x3046db79
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x302cb861
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x3046fe09
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x3037e071
// converted property setter: - (void)setText:(id)text;	// 0x30471af9
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x302cce01
- (void)setTilingArea:(int)area;	// 0x302cbb71
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x3046d22d
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x3046e12d
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x3046d829
- (void)setUserStyleSheet:(id)sheet;	// 0x303d5a95
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x30299ec1
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x3046dbf9
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x3046fa7d
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x30473fa1
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x3046dbe1
- (void)smartExtendRangedSelection:(int)selection;	// 0x304ecc99
// converted property getter: - (id)standaloneEditingElement;	// 0x3046fe49
- (BOOL)startActionSheet;	// 0x30478251
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x304ecf7d
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x3047814d
- (void)stopLoading:(id)loading;	// 0x3037e011
- (id)subviews;	// 0x3029a0ed
- (id)superviewForSheet;	// 0x30479741
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x3032afcd
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x304795e5
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x304740b1
- (void)takeTraitsFrom:(id)from;	// 0x3047208d
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x304781a9
// converted property getter: - (id)text;	// 0x30471c25
- (id)textColorForCaretSelection;	// 0x304712cd
- (id)textFormElement;	// 0x3046fdf1
- (id)textInDOMRange:(id)domrange;	// 0x304ecadd
- (id)textInRange:(id)range;	// 0x3030f289
- (id)textInputTraits;	// 0x30299755
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x3030f1e5
- (void)toggleBaseWritingDirection;	// 0x304ec65d
- (void)toggleBoldface:(id)boldface;	// 0x30472349
- (void)toggleItalics:(id)italics;	// 0x30472395
- (void)toggleUnderline:(id)underline;	// 0x304723e1
// declared property getter: - (id)tokenizer;	// 0x3029b3bd
// converted property getter: - (id)typingAttributes;	// 0x3046d0d9
// converted property getter: - (id)undoManager;	// 0x302fbf5d
- (id)undoManagerForWebView:(id)webView;	// 0x302fbf81
- (void)unmarkText;	// 0x30375e65
- (void)updateInteractionElements;	// 0x3046f905
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x3046fe85
- (void)updateSelection;	// 0x30472101
// converted property getter: - (BOOL)updatesScrollView;	// 0x3046e145
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x302c99a1
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x304781f9
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x302ca7f1
- (float)viewportHeight;	// 0x302cb741
- (float)viewportWidth;	// 0x302cacf5
- (CGRect)visibleBounds;	// 0x304ed829
- (CGRect)visibleContentFrame;	// 0x30472d49
- (CGRect)visibleContentRect;	// 0x30473e09
- (CGRect)visibleFrame;	// 0x30472d25
// converted property getter: - (id)webSelectionAssistant;	// 0x30472c9d
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x30299f75
// converted property getter: - (id)webView;	// 0x30299f09
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x3046df41
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x302cd6a1
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x3046f075
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x3046de7d
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x302cf45d
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x30299f1d
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x30471fe5
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x30478f5d
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x30360e01
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x302ccfa1
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x3036c719
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x30361025
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x302ce829
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x3046ddcd
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x30360b8d
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x303042a1
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x303619a1
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x3046f251
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x30471f91
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x3029cc5d
- (void)webViewDidDrawTiles:(id)webView;	// 0x3029cf5d
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x3046dd8d
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x30478f85
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x3046de65
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x3046dd4d
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x30298009
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x30331acd
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x30478335
- (void)willMoveToSuperview:(id)superview;	// 0x3029a671
- (void)willRotateInteractionSheet;	// 0x3046f999
- (void)willStartScroll;	// 0x30472dc5
- (void)willStartScrollToTop;	// 0x30472e49
- (void)willStartZoom;	// 0x30472f7d
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x30474041
- (void)willZoomToMinimumScale;	// 0x30473f8d
- (id)wordAtPoint:(CGPoint)point;	// 0x304ec9f9
- (id)wordContainingCaretSelection;	// 0x304716c9
- (int)wordOffsetInRange:(id)range;	// 0x30471765
- (id)wordRangeContainingCaretSelection;	// 0x304715c9
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x3046e89d
- (float)zoomedDocumentScale;	// 0x30473de9
@end

