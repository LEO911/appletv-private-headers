/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class NSArray, NSTimer, NSMutableDictionary, UITextInputTraits, UITextInputArrowKeyHistory, UIKeyboardCandidate, UIAlertView, NSString, UIKeyboardInputManager, UIAutocorrectInlinePrompt, UIKeyboardLayout, UIDelayedAction, NSMutableArray;
@protocol UIKeyInput, UITextInput, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList, UIKeyboardRecording, UIApplicationEventRecording, UIKeyboardTypology;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 84 = 0x54
	UIView *m_languageIndicator;	// 88 = 0x58
	NSString *m_previousInputString;	// 92 = 0x5c
	UIKeyboardInputManager *m_inputManager;	// 96 = 0x60
	UIKeyboardCandidate *m_autocorrection;	// 100 = 0x64
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 104 = 0x68
	UIDelayedAction *m_autocorrectPromptAction;	// 108 = 0x6c
	NSMutableDictionary *m_autocorrectHistoryLists;	// 112 = 0x70
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 116 = 0x74
	NSArray *m_candidates;	// 120 = 0x78
	id<UIKeyboardCandidateList> m_candidateList;	// 124 = 0x7c
	UIView *m_markedTextOverlay;	// 128 = 0x80
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 132 = 0x84
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 136 = 0x88
	UIKeyboardLayout *m_layout;	// 140 = 0x8c
	NSMutableDictionary *m_keyedLayouts;	// 144 = 0x90
	NSString *m_inputModeLastChosen;	// 148 = 0x94
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 152 = 0x98
	NSTimer *m_autoDeleteTimer;	// 164 = 0xa4
	BOOL m_autoDeleteJustFired;	// 168 = 0xa8
	unsigned m_autoDeleteCount;	// 172 = 0xac
	double m_autoDeleteLastDelete;	// 176 = 0xb0
	double m_autoDeleteInterval;	// 184 = 0xb8
	unsigned long m_autoDeleteShiftCharacter;	// 192 = 0xc0
	UIDelayedAction *m_longPressAction;	// 196 = 0xc4
	int m_orientation;	// 200 = 0xc8
	int m_originalOrientation;	// 204 = 0xcc
	CGPoint m_inputPoint;	// 208 = 0xd0
	int m_changeCount;	// 216 = 0xd8
	double m_changeTime;	// 220 = 0xdc
	id m_changedDelegate;	// 228 = 0xe4
	CFRunLoopObserverRef m_observer;	// 232 = 0xe8
	unsigned m_textInputChangingCount;	// 236 = 0xec
	BOOL m_textInputChangingText;	// 240 = 0xf0
	BOOL m_textInputChangingDirection;	// 241 = 0xf1
	BOOL m_textInputChangesIgnored;	// 242 = 0xf2
	BOOL m_insideKeyInputDelegateCall;	// 243 = 0xf3
	UITextInputTraits *m_defaultTraits;	// 244 = 0xf4
	UITextInputTraits *m_traits;	// 248 = 0xf8
	int m_returnKeyState;	// 252 = 0xfc
	int m_currentDirection;	// 256 = 0x100
	int m_contextWordDepth;	// 260 = 0x104
	BOOL m_autoDeleteOK;	// 264 = 0x108
	BOOL m_autocapitalizationPreference;	// 265 = 0x109
	BOOL m_autocorrectPromptTimerFired;	// 266 = 0x10a
	BOOL m_autocorrectionPreference;	// 267 = 0x10b
	BOOL m_autoshift;	// 268 = 0x10c
	BOOL m_caretShowingNow;	// 269 = 0x10d
	BOOL m_changeNotificationDisabled;	// 270 = 0x10e
	BOOL m_correctionLearningAllowed;	// 271 = 0x10f
	BOOL m_delegateIsSMSTextView;	// 272 = 0x110
	BOOL m_delegateRequiresKeyEvents;	// 273 = 0x111
	BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;	// 274 = 0x112
	BOOL m_doubleSpacePeriodPreference;	// 275 = 0x113
	BOOL m_hardwareKeyboardAttached;	// 276 = 0x114
	BOOL m_inDealloc;	// 277 = 0x115
	BOOL m_inHardwareKeyboardMode;	// 278 = 0x116
	BOOL m_initializationDone;	// 279 = 0x117
	BOOL m_performDecomposingDelete;	// 280 = 0x118
	BOOL m_performanceLoggingEnabled;	// 281 = 0x119
	BOOL m_selecting;	// 282 = 0x11a
	BOOL m_shift;	// 283 = 0x11b
	BOOL m_shiftLocked;	// 284 = 0x11c
	BOOL m_shiftLockedEnabled;	// 285 = 0x11d
	BOOL m_settingShift;	// 286 = 0x11e
	BOOL m_shouldSkipCandidateSelection;	// 287 = 0x11f
	BOOL m_suggestionsShownForCurrentDeletion;	// 288 = 0x120
	BOOL m_originalShouldSkipCandidateSelection;	// 289 = 0x121
	BOOL m_updatingPreferences;	// 290 = 0x122
	BOOL m_changingGeometryWithSameOrientation;	// 291 = 0x123
	BOOL m_suppressGeometryChangeNotifications;	// 292 = 0x124
	BOOL m_acceptingCandidate;	// 293 = 0x125
	BOOL m_userChangedSelection;	// 294 = 0x126
	BOOL m_shouldChargeKeys;	// 295 = 0x127
	BOOL m_longPress;	// 296 = 0x128
	BOOL m_syntheticInput;	// 297 = 0x129
	BOOL m_replacingWord;	// 298 = 0x12a
	BOOL m_shiftNeedsUpdate;	// 299 = 0x12b
	BOOL m_shiftPreventAutoshift;	// 300 = 0x12c
	BOOL m_shiftHeldDownNeedsUpdated;	// 301 = 0x12d
	BOOL m_delegateAdoptsTextInput;	// 302 = 0x12e
	BOOL m_delegateAdoptsTextInputPrivate;	// 303 = 0x12f
	BOOL m_delegateAdoptsKeyboardInput;	// 304 = 0x130
	BOOL m_clientVariantSupportEnabled;	// 305 = 0x131
	BOOL m_clientVariantSupportEnabledEver;	// 306 = 0x132
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 308 = 0x134
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 312 = 0x138
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 316 = 0x13c
	BOOL m_preRotateShift;	// 320 = 0x140
	BOOL m_preRotateShiftLocked;	// 321 = 0x141
	BOOL m_showInputModeIndicator;	// 322 = 0x142
	BOOL m_suppressUpdateCandidateView;	// 323 = 0x143
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 324 = 0x144
	BOOL m_shouldSetInputModeInNextRun;	// 325 = 0x145
	BOOL m_rivenCenterFilled;	// 326 = 0x146
	float m_splitProgress;	// 328 = 0x148
	NSString *m_currentUsedInputMode;	// 332 = 0x14c
	NSString *m_lastUsedInputMode;	// 336 = 0x150
	BOOL m_needsCandidates;	// 340 = 0x154
	BOOL m_shouldSkipCandidateGeneration;	// 341 = 0x155
	BOOL m_updateLayoutOnShowKeyboard;	// 342 = 0x156
	BOOL m_receivedCandidatesInCurrentInputMode;	// 343 = 0x157
	BOOL m_markedTextChangesIgnored;	// 344 = 0x158
	int _currentAlertReason;	// 348 = 0x15c
	id<UIKeyboardTypology> typologyRecorder;	// 352 = 0x160
	BOOL m_showsCandidateBar;	// 356 = 0x164
	BOOL m_showsCandidateInline;	// 357 = 0x165
	UIAlertView *keyboardAlertView;	// 360 = 0x168
	BOOL committingCandidate;	// 364 = 0x16c
	BOOL geometryIsChanging;	// 365 = 0x16d
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x30341b49; S=0x30332761; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x3030d67d; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x30343411; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x303396c1; S=0x3030ba1d; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x3030b9e9; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x30456ee9; S=0x30456f1d; converted property
@property(assign) BOOL caretBlinks;	// G=0x3045cde5; S=0x3030f2ed; converted property
@property(assign) BOOL caretVisible;	// G=0x3033f685; S=0x3030f371; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x3045654d; 
@property(readonly, assign) int changeCount;	// G=0x3030cfa1; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x304582a1; S=0x304582b1; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x3030d249; S=0x3030d259; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x303177bd; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x3045d039; S=0x3045d049; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x30342a11; S=0x3030c021; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x30307249; S=0x3030c705; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x30457f55; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x3030d299; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x3030813d; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x3030c6f1; S=0x3030c3b1; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x3045d059; S=0x3031c8c9; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x30457451; S=0x30457489; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x303096f5; S=0x303408b1; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x303094f1; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x3030b419; S=0x3030b409; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x30457bb9; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x303ba811; S=0x303ba821; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x3045d029; S=0x303babf1; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x3030f559; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x30374e7d; S=0x3045d365; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x30458619; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x30456765; 
@property(assign) unsigned phraseBoundary;	// G=0x30459125; S=0x3045909d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x30307225; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x3030c011; S=0x303ba92d; 
@property(assign) BOOL returnKeyEnabled;	// G=0x3031a8e5; S=0x3030d47d; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x304566d5; S=0x30456709; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x30318bc9; S=0x30458b01; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x30458b69; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x3045bf79; S=0x3030d449; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x3045d009; S=0x3045d019; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x3031b499; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x3037544d; S=0x303105bd; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x3035cd71; S=0x3045cff9; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x3030c629; S=0x3031b5ed; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x303ba191; S=0x303b86b1; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x3031bf89; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x3030b429; S=0x303ba969; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x3045d2dd
+ (id)activeInstance;	// 0x30229c4d
+ (float)additionalInstanceHeight;	// 0x3030c5d9
+ (float)additionalInstanceHeightLoading;	// 0x304561f5
+ (void)applicationDidEnterBackground:(id)application;	// 0x303b9fc5
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x3036ca29
+ (void)applicationWillEnterForeground:(id)application;	// 0x303bb54d
+ (void)applicationWillResignActive:(id)application;	// 0x303b9c29
+ (void)applicationWillSuspend:(id)application;	// 0x303b9c5d
+ (CGSize)defaultSize;	// 0x30456199
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x30289e25
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x3045c4e1
+ (int)interfaceOrientationForSize:(CGSize)size;	// 0x3030c409
+ (BOOL)isSplit;	// 0x3030fee1
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x3030fc19
+ (void)markElapsed:(id)elapsed;	// 0x3030c341
+ (void)markPerformance:(id)performance;	// 0x30306ecd
+ (id)normalizedInputModesFromPreference;	// 0x304561bd
+ (int)persistentDictationTargetZone;	// 0x30456915
+ (CGPoint)persistentDictationWindowOffset;	// 0x30456b11
+ (CGPoint)persistentOffset;	// 0x3028c869
+ (float)persistentSplitProgress;	// 0x304567c9
+ (void)refreshRivenStateWithTraits:(id)traits isKeyboard:(BOOL)keyboard;	// 0x30307ed9
+ (void)releaseSharedInstance;	// 0x3029f2f5
+ (BOOL)rivenInstalled;	// 0x302905ad
+ (BOOL)rivenPreference;	// 0x30218545
+ (BOOL)rivenTranslationPreference;	// 0x3028f56d
+ (void)setParentTestForProfiling:(id)profiling;	// 0x3045d101
+ (void)setPersistentDictationTargetZone:(int)zone;	// 0x3045695d
+ (void)setPersistentDictationWindowOffset:(CGPoint)offset;	// 0x304569b9
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x30348ac1
+ (void)setPersistentSplitProgress:(float)progress;	// 0x30456835
+ (id)sharedInstance;	// 0x30306935
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x30289cc9
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x3030fc95
+ (float)splitProgress;	// 0x30456825
+ (BOOL)supportsSplit;	// 0x30312969
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x30456901
- (id)initWithFrame:(CGRect)frame;	// 0x30306b09
- (id)UILanguagePreference;	// 0x303081f9
- (id)_autocorrectPromptRects;	// 0x30382cfd
- (int)_clipCornersOfView:(id)view;	// 0x304582c5
- (id)_getAutocorrection;	// 0x3045d5f1
- (id)_getCurrentKeyboardName;	// 0x3045d509
- (id)_getCurrentKeyplaneName;	// 0x3045d4a5
- (id)_getLocalizedInputMode;	// 0x3045d56d
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x3045ca51
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x3045cba9
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x3045cb2d
- (BOOL)_hasCandidates;	// 0x30308e49
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x3045d721
- (id)_inputForAutocorrectionCandidate;	// 0x30380015
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x3045d1a1
- (id)_layout;	// 0x3030fc75
- (BOOL)_needsCandidates;	// 0x3045d6d1
- (int)_positionInCandidateList:(id)candidateList;	// 0x3045d611
- (id)_rangeForAutocorrectionText:(id)autocorrectionText;	// 0x30382f55
- (void)_releaseInputManager;	// 0x3045d701
- (void)_remapKeyEvent:(GSEventRef)event;	// 0x303409d9
- (void)_resetInputLocation;	// 0x3045d6e1
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x3045d5d1
- (void)_setInputManager:(id)manager;	// 0x3045d13d
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x3045d6c1
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x3045d14d
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x30342a21
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x3030c6c1
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x3031b4b5
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x3030d079
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x3031c6dd
- (void)acceptAutocorrection;	// 0x3034a05d
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x3045a075
- (void)acceptCurrentCandidate;	// 0x3045a445
- (void)acceptCurrentCandidateIfSelected;	// 0x30319e49
- (BOOL)acceptInputString:(id)string;	// 0x3033d971
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x3037bf9d
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x3045bf4d
- (void)addInputObject:(id)object;	// 0x3045a6e9
- (void)addInputString:(id)string;	// 0x30458e19
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x30341d0d
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x304577d1
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x3045be91
- (void)animateAutocorrection;	// 0x303da991
- (void)applicationResumedEventsOnly:(id)only;	// 0x304562e9
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x3045627d
- (void)applyAutocorrection;	// 0x303da58d
// declared property getter: - (id)arrowKeyHistory;	// 0x30341b49
- (void)autoDeleteTimerFired:(id)fired;	// 0x3045c0c1
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x3030d67d
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x303d6a01
// converted property getter: - (id)autocorrectPrompt;	// 0x30343411
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x303396c1
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x303db471
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x3030b9e9
- (BOOL)autocorrectionPreferenceForTraits;	// 0x3030b975
- (id)autocorrectionRecordForWord:(id)word;	// 0x303d69c9
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x30456ee9
- (void)callChanged;	// 0x3033af95
- (void)callChangedSelection;	// 0x3030f4dd
- (BOOL)callLayoutIgnoresShiftState;	// 0x30375525
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x3031b86d
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x3031b81d
- (void)callLayoutLongPressAction;	// 0x3045d06d
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x3030fac5
- (void)callLayoutSetShift:(BOOL)shift;	// 0x3030fa6d
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x3045d0b5
- (void)callLayoutUpdateLocalizedKeys;	// 0x3030b92d
- (void)callLayoutUpdateReturnKey;	// 0x3030d4a9
- (BOOL)callLayoutUsesAutoShift;	// 0x3030f955
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x30458011
- (BOOL)callShouldInsertText:(id)call;	// 0x30342d31
- (BOOL)callShouldReplaceExtendedRange:(unsigned)call withText:(id)text includeMarkedText:(BOOL)text3;	// 0x303da221
- (BOOL)canHandleKeyHitTest;	// 0x3031b185
- (void)cancelAllKeyEvents;	// 0x3035e309
- (void)cancelSplitTransition;	// 0x30456cfd
- (id)candidateList;	// 0x3045a5ad
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x3045a50d
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x3045a531
// converted property getter: - (BOOL)caretBlinks;	// 0x3045cde5
// converted property getter: - (BOOL)caretVisible;	// 0x3033f685
// declared property getter: - (BOOL)centerFilled;	// 0x3045654d
// converted property getter: - (int)changeCount;	// 0x3030cfa1
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x304582a1
// declared property getter: - (id)changedDelegate;	// 0x3030d249
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x3045bf89
- (BOOL)checkSpellingPreference;	// 0x3030bb39
- (BOOL)checkSpellingPreferenceForTraits;	// 0x3030bac5
- (void)clearAnimations;	// 0x303ba1f1
- (void)clearAutocorrectPromptTimer;	// 0x30309659
- (void)clearChangeTimeAndCount;	// 0x3030cfb5
- (void)clearDelegate;	// 0x303ba1b5
- (void)clearExcessKeyboardMemory;	// 0x30374b2d
- (void)clearInput;	// 0x30308b55
- (void)clearKeyAreas;	// 0x3031b1a9
- (void)clearLanguageIndicator;	// 0x3045d375
- (void)clearLayouts;	// 0x3030c031
- (void)clearLongPressTimer;	// 0x303298a9
- (void)clearSelection;	// 0x3045ce0d
- (void)clearShiftState;	// 0x30344669
- (void)clearTimers;	// 0x303ba23d
- (void)clearTransientState;	// 0x3030d269
- (id)clientOverrideForKey:(id)key;	// 0x30456d9d
- (id)clientVariantDelegate;	// 0x3030d53d
- (id)clientVariantsForKey:(id)key;	// 0x30456d45
// declared property getter: - (BOOL)committingCandidate;	// 0x3045d039
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x303834d5
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x3030ef79
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x3034a279
- (float)currentLandscapeHeight;	// 0x30456025
- (float)currentLandscapeWidth;	// 0x30455f79
- (float)currentPortraitHeight;	// 0x3031be55
- (float)currentPortraitWidth;	// 0x3031bd6d
// declared property getter: - (id)currentUsedInputMode;	// 0x30342a11
- (void)dealloc;	// 0x303ba97d
- (void)defaultsDidChange;	// 0x304562fd
- (void)delayedInit;	// 0x3032861d
// declared property getter: - (id)delegate;	// 0x30307249
// declared property getter: - (id)delegateAsResponder;	// 0x30457f55
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x3030d299
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x3045b9f9
- (BOOL)delegateSupportsCorrectionUI;	// 0x3037ffe9
- (void)deleteBackward;	// 0x30458e05
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x30458d25
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x30458d95
- (void)deleteFromInput;	// 0x30459931
- (void)detach;	// 0x303ba831
- (void)dismissKeyboard;	// 0x3045c89d
- (BOOL)displaysCandidates;	// 0x3033acfd
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x3030813d
- (CGSize)dragGestureSize;	// 0x3045669d
- (void)enable;	// 0x30457ffd
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x3045779d
- (void)fadeAutocorrectPrompt;	// 0x3045b779
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x3045d415
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x3045c5b9
- (BOOL)flushKeyplaneName:(id)name;	// 0x3034a331
- (void)forceShiftUpdate;	// 0x303d68dd
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x3033bf81
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x30456669
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x303d87fd
- (void)generateCandidates;	// 0x303298f5
- (void)generateCandidatesWithOptions:(int)options;	// 0x30329909
- (void)geometryChangeDone:(BOOL)done;	// 0x303297d9
// declared property getter: - (id)geometryDelegate;	// 0x3030c6f1
// declared property getter: - (BOOL)geometryIsChanging;	// 0x3045d059
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x3045bebd
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x3045beed
- (void)handleAutoDelete;	// 0x3045c269
- (void)handleDelete;	// 0x30458d0d
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x30458c41
- (void)handleDeleteWithNonZeroInputCount;	// 0x304596d9
- (void)handleDeleteWithZeroInputCount;	// 0x3045933d
- (BOOL)handleDoubleSpacePeriodForInputString:(id)inputString afterSpace:(BOOL)space elapsedTime:(double)time;	// 0x3037c5d9
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x30340a79
- (void)handleKeyEvent:(GSEventRef)event;	// 0x303400a1
- (void)handleObserverCallback;	// 0x3033aef9
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x30341c51
- (void)hardwareAutoRepeat:(id)repeat;	// 0x3045c599
- (void)hardwareKeyboardAvailabilityChanged;	// 0x3045c515
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x30457451
- (BOOL)hasAutoRepeat;	// 0x3045d15d
- (BOOL)hasEditableMarkedText;	// 0x3030edd5
- (BOOL)hasMarkedText;	// 0x3030ee21
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x30456c5d
- (void)hideKeyboard;	// 0x3045c641
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x3033b539
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x3045bf1d
// declared property getter: - (id)inputDelegate;	// 0x303094f1
// declared property getter: - (id)inputManager;	// 0x3030b419
- (id)inputModeFirstPreference;	// 0x30456ffd
// converted property getter: - (id)inputModeLastChosen;	// 0x30457bb9
- (id)inputModeLastChosenPreference;	// 0x3045704d
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x304571b9
- (id)inputModeLastUsedPreference;	// 0x303084b5
- (id)inputModePreference;	// 0x30308181
- (id)inputOverlayContainer;	// 0x303831b9
- (id)inputStringFromPhraseBoundary;	// 0x304586c5
- (void)insertText:(id)text;	// 0x303755e9
- (void)installRecorder;	// 0x3030c11d
- (void)installTypology;	// 0x3030c1d5
- (int)interfaceOrientation;	// 0x3032b9f9
- (BOOL)isAllowedInputMode:(id)mode;	// 0x30308545
- (BOOL)isAutoDeleteActive;	// 0x3045d29d
- (BOOL)isAutoFillMode;	// 0x30385c49
- (BOOL)isAutoShifted;	// 0x30312a59
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x303177bd
- (BOOL)isDesiredInputMode:(id)mode;	// 0x3030e1bd
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x303096f5
// converted property getter: - (BOOL)isLongPress;	// 0x30374e7d
- (BOOL)isMinimized;	// 0x3030b475
// converted property getter: - (BOOL)isShiftLocked;	// 0x30318bc9
- (BOOL)isShifted;	// 0x3033b1d9
- (BOOL)isUsingDictationLayout;	// 0x3045ac3d
- (BOOL)isValidKeyInput:(id)input;	// 0x30341b59
- (void)keyActivated;	// 0x30458c29
- (void)keyDeactivated;	// 0x30458c39
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x3033cd39
// declared property getter: - (id)keyboardAlertView;	// 0x303ba811
- (void)keyboardDidHide:(id)keyboard;	// 0x30374c85
- (BOOL)keyboardDrawsOpaque;	// 0x30371025
- (BOOL)keyboardRecordingEnabled;	// 0x3030c15d
- (BOOL)keyboardsExpandedPreference;	// 0x30456eb5
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x30456e49
// declared property getter: - (id)lastUsedInputMode;	// 0x3045d029
- (void)launchTypologyApplication;	// 0x3045d33d
- (void)layoutHasChanged;	// 0x303b7ebd
// declared property getter: - (id)legacyInputDelegate;	// 0x3030f559
- (void)longPressAction;	// 0x3045c49d
// converted property getter: - (id)markedTextOverlay;	// 0x30458619
- (void)mediaKeyDown:(GSEventRef)down;	// 0x3045cd35
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x30456765
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x30459145
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x3045ab61
- (BOOL)noContent;	// 0x30376e85
- (void)notifyShiftState;	// 0x3030f9a5
- (void)performClientVariantActionNamed:(id)named;	// 0x30456df5
- (BOOL)performanceLoggingPreference;	// 0x30328775
// converted property getter: - (unsigned)phraseBoundary;	// 0x30459125
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x3032b6dd
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x3033b1fd
- (void)prepareForGeometryChange;	// 0x3031c769
- (void)prepareForSelectionChange;	// 0x303316ad
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x30457c65
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x3030d635
// declared property getter: - (id)privateInputDelegate;	// 0x30307225
- (void)pushRecentAutocorrectionSuggestion:(id)suggestion;	// 0x30382c49
- (id)recentAutocorrectionSuggestionForTypedString:(id)typedString;	// 0x3037c50d
- (void)recomputeActiveInputModes;	// 0x30458ab5
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x3030de79
- (void)recordAcceptedAutocorrection:(id)autocorrection;	// 0x303db191
- (void)recordRejectedAutocorrection:(id)autocorrection;	// 0x3045b9a9
// declared property getter: - (id)recorder;	// 0x3030c011
- (void)refreshRivenPreferences;	// 0x30307ea9
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x3031b351
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x303123bd
- (void)releaseSuppressUpdateCandidateView;	// 0x30328e0d
- (void)removeAutocorrectPrompt;	// 0x30309519
- (void)removeAutocorrection;	// 0x3045a045
- (void)removeFromSuperview;	// 0x303ba761
- (void)replaceText:(id)text;	// 0x3045a7e1
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x3045ac85
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x30313be9
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x3031240d
- (id)returnKeyDisplayName;	// 0x3031a905
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x3031a8e5
- (int)returnKeyType;	// 0x3031a97d
// declared property getter: - (BOOL)rivenSplitLock;	// 0x304566d5
- (void)saveInputModesPreference:(id)preference;	// 0x30456fc1
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x3045a991
- (id)searchStringForMarkedText;	// 0x3045868d
- (void)selectionDidChange:(id)selection;	// 0x30332525
- (id)selectionView;	// 0x3030f319
- (void)selectionWillChange:(id)selection;	// 0x3033166d
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x30332761
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x3030ba1d
- (void)setAutocorrection:(id)autocorrection;	// 0x30308be9
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x30456f1d
- (void)setCandidateList:(id)list updateCandidateView:(BOOL)view;	// 0x3045a9cd
- (void)setCandidates:(id)candidates;	// 0x30308ce1
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x3030f2ed
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x3030f371
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x304582b1
- (void)setChanged;	// 0x3033a7c5
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x3030d259
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x3045d049
- (void)setCorrectionLearningAllowed:(BOOL)allowed;	// 0x30457e61
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x3030c021
- (void)setDefaultTextInputTraits:(id)traits;	// 0x3031c64d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x3030c705
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x3030c719
- (void)setFrame:(CGRect)frame;	// 0x30306f39
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x3030c3b1
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x3031c8c9
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x30457489
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x303408b1
- (void)setInitialDirection;	// 0x3030f3a1
// declared property setter: - (void)setInputManager:(id)manager;	// 0x3030b409
- (void)setInputMode:(id)mode;	// 0x3030864d
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x30308661
- (void)setInputModeFromPreferences;	// 0x3030828d
- (void)setInputModeLastChosenPreference;	// 0x304570a9
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x30457b6d
- (void)setInputModeToNextInPreferredList;	// 0x304579c9
- (void)setInputObject:(id)object;	// 0x3045a5c1
- (void)setInputPoint:(CGPoint)point;	// 0x3033d9ad
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x303ba821
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x303babf1
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x3045d365
- (void)setMarkedText;	// 0x3045851d
- (void)setOrientation;	// 0x30306fe1
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x3045909d
- (void)setPreviousInputString:(id)string;	// 0x3033a4a9
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x303ba92d
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x3030d47d
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x30456709
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30458751
- (void)setShift:(BOOL)shift;	// 0x3033a641
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x3033a655
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x30458b01
- (void)setShiftLockedForced:(BOOL)forced;	// 0x30458b3d
- (void)setShiftNeedsUpdate;	// 0x3033a6f1
- (void)setShiftOffIfNeeded;	// 0x3033a5b5
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x3033a7a1
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x3030d449
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x3045d019
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x303105bd
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x30457441
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x3045cff9
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x3031b5ed
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x303b86b1
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x3045d3b9
- (void)setSplitProgress:(float)progress;	// 0x3045676d
- (void)setTextInputChangesIgnored:(BOOL)ignored;	// 0x3045d495
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x303ba969
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x30319f41
- (unsigned)shiftFlagsForInputString;	// 0x303754ad
- (BOOL)shiftLockPreference;	// 0x30308109
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x30458b69
- (BOOL)shouldAcceptCandidate:(id)candidate beforeInputString:(id)string;	// 0x30458e59
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x3045bf79
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x30459295
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x3045d009
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x3031b499
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x3037544d
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x3045ceb9
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x3030e7a9
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x30457855
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x3035cd71
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x304579b1
- (void)showKeyboard;	// 0x3045c6ed
- (void)showNextCandidates;	// 0x3045a4ed
// declared property getter: - (BOOL)showsCandidateBar;	// 0x3030c629
// declared property getter: - (BOOL)showsCandidateInline;	// 0x303ba191
- (id)sortingMethods;	// 0x3045be3d
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x3031bf89
- (void)startAutoDeleteTimer;	// 0x3045c429
- (void)startCaretBlinkIfNeeded;	// 0x3045cdb9
- (void)startKeyboardRecording;	// 0x30515809
- (void)stopAutoDelete;	// 0x3030d14d
- (void)stopKeyboardRecording;	// 0x30515911
- (void)storeDelegateConformance;	// 0x3030cfdd
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x3033aa19
- (BOOL)suppliesCompletions;	// 0x30458b79
- (BOOL)supportsNumberKeySelection;	// 0x30458c05
- (BOOL)swipeToTabPreference;	// 0x30310571
- (void)takeTextInputTraitsFromDelegate;	// 0x303070bd
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x3045d279
- (void)textChanged:(id)changed;	// 0x3033a1e5
- (void)textDidChange:(id)text;	// 0x3033a1d5
- (void)textFrameChanged:(id)changed;	// 0x30343051
- (int)textInputChangingCount;	// 0x3045d269
- (id)textInputTraits;	// 0x3030fc85
- (void)textWillChange:(id)text;	// 0x3033a125
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x3033db69
- (void)timeMark:(unsigned)mark;	// 0x3033d9c5
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x3033d8ad
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x3045be65
- (void)toggleShift;	// 0x30458ad9
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x3045bfa9
- (void)touchAutocorrectPromptTimer;	// 0x3031a3e9
- (void)touchLongPressTimer;	// 0x3033d7a1
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x3033d7b9
- (void)trackUsageForAcceptedAutocorrection:(id)acceptedAutocorrection promptWasShowing:(BOOL)showing;	// 0x303db2ad
- (void)trackUsageForPromptedCorrection:(id)promptedCorrection inputString:(id)string previousPrompt:(id)prompt;	// 0x3045cee1
- (BOOL)typologyEnabled;	// 0x3030c309
// declared property getter: - (id)typologyRecorder;	// 0x3030b429
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x30309039
- (void)updateAutocorrectPromptAction;	// 0x3032b4b5
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x3045b67d
- (void)updateCandidateDisplay;	// 0x30308ebd
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x3045aa89
- (void)updateChangeTimeAndIncrementCount;	// 0x30342c81
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned long)character;	// 0x30458e2d
- (void)updateDoubleSpacePeriodStateForString:(id)string;	// 0x30375c71
- (void)updateForChangedSelection;	// 0x3030e7f5
- (void)updateFromTextInputTraits;	// 0x3045d171
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x304587ad
- (void)updateInputManagerAutocapitalizationType;	// 0x303080a9
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x30457789
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x3045752d
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x30340839
- (void)updateKeysWithDelegates;	// 0x3031bf21
- (void)updateLastUsedInputMode:(id)mode;	// 0x30342905
- (void)updateLayout;	// 0x3030b4b1
- (void)updateLayoutAndSetShift;	// 0x3045930d
- (void)updateLayoutIfNeeded;	// 0x3031c8d9
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x30457d15
- (void)updateMarkedTextIfChanged;	// 0x3033264d
- (void)updateObserverState;	// 0x3033a711
- (void)updateReturnKey;	// 0x30375c59
- (void)updateReturnKey:(BOOL)key;	// 0x3031a7ad
- (void)updateShiftState;	// 0x3030f651
- (void)updateTextCandidateView;	// 0x3045ae55
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;	// 0x30459f25
@end

