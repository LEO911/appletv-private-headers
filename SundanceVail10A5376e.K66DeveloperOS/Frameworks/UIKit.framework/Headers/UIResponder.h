/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "UITextInput_Internal.h"

@class NSString, UIView, NSUndoManager;
@protocol UITextInputPrivate, UITextInput;

@interface UIResponder : NSObject <UITextInput_Internal> {
}
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x3037d41d; 
@property(readonly, assign, nonatomic) UIResponder *_editingDelegate;	// G=0x303396bd; 
@property(readonly, assign, nonatomic) UIResponder *_responderForEditing;	// G=0x30339699; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x303320ed; 
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;	// G=0x3051cd99; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x3051cd79; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x3051cd7d; 
@property(readonly, assign) UIView *inputAccessoryView;	// G=0x3021818d; 
@property(readonly, assign) UIView *inputView;	// G=0x302180f5; 
@property(copy, nonatomic) NSString *restorationIdentifier;	// G=0x3065a57d; S=0x302a9081; 
@property(readonly, assign, nonatomic) NSUndoManager *undoManager;	// G=0x30429f51; 
+ (void)_cleanupAllStateRestorationTables;	// 0x30284ec9
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;	// 0x30284f0d
+ (void)_finishStateRestoration;	// 0x3065aad5
+ (void)_prepareForSecondPassStateRestoration;	// 0x3065aac5
+ (void)_setRestoredIdentifierPathForObject:(id)object identifierPath:(id)path;	// 0x3065a9d5
+ (void)_startTrackingObjectsWithIdentifiers;	// 0x30272569
+ (void)_stopTrackingObjectsWithIdentifiers;	// 0x30284f51
+ (void)_updateStateRestorationIdentifierMap;	// 0x3065a8f1
+ (id)objectWithRestorationIdentifierPath:(id)restorationIdentifierPath;	// 0x3065a58d
- (id)_asTextSelection;	// 0x3051cd95
- (void)_becomeFirstResponder;	// 0x3021769d
- (void)_becomeFirstResponderAndMakeVisible;	// 0x3042a0dd
- (BOOL)_becomeFirstResponderWhenPossible;	// 0x30283ae1
- (void)_beginPinningInputViews;	// 0x30369ec5
- (BOOL)_canBecomeFirstResponderWhenPossible;	// 0x3042a22d
// declared property getter: - (CGRect)_caretRect;	// 0x3051cd99
- (unsigned long)_characterAfterCaretSelection;	// 0x30346709
- (unsigned long)_characterBeforeCaretSelection;	// 0x3034640d
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x30346421
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x30346499
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x3037b779
- (void)_clearBecomeFirstResponderWhenCapable;	// 0x302fb7f9
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event;	// 0x3022640d
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event index:(unsigned)index;	// 0x30226431
- (BOOL)_containedInAbsoluteResponderChain;	// 0x30283ab9
- (BOOL)_containsResponder:(id)responder;	// 0x302297f1
- (void)_controlMouseDown:(GSEventRef)down;	// 0x3042a071
- (void)_controlMouseDragged:(GSEventRef)dragged;	// 0x3042a079
- (void)_controlMouseUp:(GSEventRef)up;	// 0x3042a075
- (void)_controlTouchBegan:(id)began withEvent:(id)event;	// 0x302fd3bd
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;	// 0x3031dfa9
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;	// 0x3035e5e1
- (id)_deepestDefaultFirstResponder;	// 0x30284e09
- (id)_deepestDefaultFirstResponderMatching:(id)matching;	// 0x3042a0ed
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x30516e49
- (void)_deleteByWord;	// 0x30516ae5
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x30516e71
- (void)_deleteToEndOfLine;	// 0x30516ced
- (void)_deleteToStartOfLine;	// 0x30516b91
// declared property getter: - (id)_editingDelegate;	// 0x303396bd
- (void)_endPinningInputViews;	// 0x302fb985
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x305168d9
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x305168ed
- (void)_extendCurrentSelection:(int)selection;	// 0x30516725
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x30331fa1
- (void)_finishResignFirstResponder;	// 0x30229b29
- (id)_firstResponder;	// 0x30229ad5
- (id)_fontForCaretSelection;	// 0x30384605
- (id)_fullRange;	// 0x305171d1
- (id)_fullText;	// 0x303d65a1
- (void)_handleKeyEvent:(GSEventRef)event;	// 0x30340035
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x305166bd
- (int)_indexForTextPosition:(id)textPosition;	// 0x303da94d
- (BOOL)_isEmptySelection;	// 0x30516649
- (BOOL)_isPinningInputViews;	// 0x302fb925
- (BOOL)_isRootForKeyResponderCycle;	// 0x30429f4d
- (BOOL)_isTransitioningFromView:(id)view;	// 0x3034555d
- (BOOL)_isViewController;	// 0x3042a191
- (id)_keyInput;	// 0x3051646d
- (id)_keyboardResponder;	// 0x30218265
- (CGRect)_lastRectForRange:(id)range;	// 0x30517041
- (void)_moveCurrentSelection:(int)selection;	// 0x305167f5
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x305185b1
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x305187a5
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x305188a1
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x305182a5
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x30517c89
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30517ffd
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x3051799d
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x305181e9
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x30517b01
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30517e11
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x30517729
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x305183bd
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x30518eb1
- (id)_nextFirstResponderIfAllowed;	// 0x302299e5
- (id)_nextKeyResponder;	// 0x30429f45
- (id)_nextViewControllerInResponderChain;	// 0x3042a195
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x303da8b9
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x30518fa1
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x305189a1
- (id)_previousKeyResponder;	// 0x30429f49
- (BOOL)_promoteDeepestDefaultFirstResponder;	// 0x30284cb5
// declared property getter: - (id)_proxyTextInput;	// 0x3037d41d
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x3030ee4d
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x30517149
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x3051718d
- (void)_replaceCurrentWordWithText:(id)text;	// 0x30516fcd
- (BOOL)_requiresKeyboardResetOnReload;	// 0x30217f1d
- (BOOL)_requiresKeyboardWhenFirstResponder;	// 0x302181e5
- (void)_resignFirstResponder;	// 0x30229c5d
- (id)_responderForBecomeFirstResponder;	// 0x302297ed
// declared property getter: - (id)_responderForEditing;	// 0x30339699
- (id)_restorationIdentifierPath;	// 0x3065a625
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30517141
- (id)_selectableText;	// 0x3030eeb9
- (int)_selectionAffinity;	// 0x30518a45
- (NSRange)_selectionAsNSRange;	// 0x30516471
- (BOOL)_selectionAtDocumentEnd;	// 0x305165d5
- (BOOL)_selectionAtDocumentStart;	// 0x30516565
- (BOOL)_selectionAtWordStart;	// 0x305164cd
- (CGRect)_selectionClipRect;	// 0x30346a9d
- (void)_setCaretSelectionAtEndOfSelection;	// 0x30516a5d
- (void)_setFirstResponder:(id)responder;	// 0x302176b1
- (void)_setGestureRecognizers;	// 0x30518b41
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30517571
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30518d89
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x305189d1
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x3051731d
- (BOOL)_shouldUseDefaultFirstResponder;	// 0x30284e91
- (BOOL)_shouldUseKeyWindowStack;	// 0x30229afd
- (BOOL)_shouldUseNextFirstResponder;	// 0x30229a31
- (id)_showServiceForText:(id)text type:(int)type fromRect:(CGRect)rect inView:(id)view;	// 0x3042a1dd
- (id)_targetForAction:(SEL)action withSender:(id)sender;	// 0x3042a07d
- (id)_textColorForCaretSelection;	// 0x3051722d
// declared property getter: - (id)_textSelectingContainer;	// 0x303320ed
- (void)_trackObjectWithIdentifier:(id)identifier;	// 0x302a90b5
- (void)_unmarkText;	// 0x30375de1
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x305172ed
- (id)_window;	// 0x3028b40d
- (void)_windowBecameKey;	// 0x303454ed
- (void)_windowResignedKey;	// 0x303454e9
- (id)_wordContainingCaretSelection;	// 0x303cda69
- (BOOL)becomeFirstResponder;	// 0x30217209
- (void)beginSelectionChange;	// 0x3051ce1d
- (BOOL)canBecomeFirstResponder;	// 0x30229ad1
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x302f6069
- (BOOL)canResignFirstResponder;	// 0x302299e1
- (void)decodeRestorableStateWithCoder:(id)coder;	// 0x3065aae9
- (id)defaultFirstResponder;	// 0x30284e8d
- (void)encodeRestorableStateWithCoder:(id)coder;	// 0x3065aae5
- (void)endSelectionChange;	// 0x3051ce5d
- (id)firstResponder;	// 0x30217539
- (void)gestureChanged:(GSEventRef)changed;	// 0x30429f41
- (void)gestureEnded:(GSEventRef)ended;	// 0x30429f3d
- (void)gestureStarted:(GSEventRef)started;	// 0x30429f39
// declared property getter: - (id)inputAccessoryView;	// 0x3021818d
// declared property getter: - (id)inputView;	// 0x302180f5
- (id)interactionAssistant;	// 0x3051cd75
// declared property getter: - (BOOL)isEditable;	// 0x3051cd79
// declared property getter: - (BOOL)isEditing;	// 0x3051cd7d
- (BOOL)isFirstResponder;	// 0x30217981
- (void)motionBegan:(int)began withEvent:(id)event;	// 0x30429f25
- (void)motionCancelled:(int)cancelled withEvent:(id)event;	// 0x30429f2d
- (void)motionEnded:(int)ended withEvent:(id)event;	// 0x30429f29
- (void)mouseDown:(GSEventRef)down;	// 0x30429ecd
- (void)mouseDragged:(GSEventRef)dragged;	// 0x30429f15
- (void)mouseEntered:(GSEventRef)entered;	// 0x30429f19
- (void)mouseExited:(GSEventRef)exited;	// 0x30429f1d
- (void)mouseMoved:(GSEventRef)moved;	// 0x30429f21
- (void)mouseUp:(GSEventRef)up;	// 0x30429f11
- (id)nextFirstResponder;	// 0x30229a65
- (id)nextResponder;	// 0x30218189
- (void)reloadInputViews;	// 0x302178d5
- (void)reloadInputViewsWithoutReset;	// 0x30429f89
- (void)remoteControlReceivedWithEvent:(id)event;	// 0x30429f31
- (BOOL)resignFirstResponder;	// 0x30229831
// declared property getter: - (id)restorationIdentifier;	// 0x3065a57d
- (void)scrollWheel:(GSEventRef)wheel;	// 0x30429f35
- (int)selectionAffinity;	// 0x305194f9
// declared property setter: - (void)setRestorationIdentifier:(id)identifier;	// 0x302a9081
- (id)textInputView;	// 0x3051cd4d
- (void)touchesBegan:(id)began withEvent:(id)event;	// 0x30354069
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;	// 0x3037eccd
- (void)touchesEnded:(id)ended withEvent:(id)event;	// 0x303565cd
- (void)touchesMoved:(id)moved withEvent:(id)event;	// 0x3035e9bd
// declared property getter: - (id)undoManager;	// 0x30429f51
@end

