/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardInput.h"

@class UITextRange, NSDictionary, UITextPosition, UITextInputTraits, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface UIDefaultKeyboardInput : UIView <UIKeyboardInput> {
	UITextInputTraits *m_traits;	// 84 = 0x54
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x304635b5; S=0x304635b1; @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign) BOOL becomesEditableWithGestures;	// G=0x304635cd; S=0x304635d1; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x30463605; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30463609; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x304636b1; S=0x304636b5; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x304635bd; 
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x30463479; S=0x30463471; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30463661; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30463665; S=0x30463669; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, getter=isSecure) BOOL secure;	// G=0x304635a9; S=0x304635ad; converted property
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x304635fd; S=0x30463601; 
@property(assign, nonatomic) int selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x30463561; S=0x3046355d; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x304636ad; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (NSRange)_markedTextNSRange;	// 0x30463531
// declared property getter: - (BOOL)acceptsEmoji;	// 0x304635b5
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30463681
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x304635cd
// declared property getter: - (id)beginningOfDocument;	// 0x30463605
- (CGRect)caretRect;	// 0x30463569
- (CGRect)caretRectForPosition:(id)position;	// 0x3046363d
- (unsigned short)characterAfterCaretSelection;	// 0x30463485
- (unsigned short)characterBeforeCaretSelection;	// 0x30463481
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x3046347d
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30463675
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x3046367d
- (id)closestPositionToPoint:(CGPoint)point;	// 0x3046366d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30463671
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x3046368d
- (void)confirmMarkedText:(id)text;	// 0x30463475
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x3046358d
- (void)dealloc;	// 0x30381289
- (id)delegate;	// 0x30463455
- (void)deleteBackward;	// 0x30463459
// declared property getter: - (id)endOfDocument;	// 0x30463609
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30463505
- (void)extendCurrentSelection:(int)selection;	// 0x3046354d
- (CGRect)firstRectForRange:(id)range;	// 0x30463619
- (id)fontForCaretSelection;	// 0x30463489
- (void)forwardInvocation:(id)invocation;	// 0x30463351
- (BOOL)hasContent;	// 0x30463511
- (BOOL)hasSelection;	// 0x30463515
- (BOOL)hasText;	// 0x304635f9
// declared property getter: - (id)inputDelegate;	// 0x304636b1
- (void)insertText:(id)text;	// 0x3046345d
// declared property getter: - (id)interactionAssistant;	// 0x304635bd
- (BOOL)isEditable;	// 0x304635c1
- (BOOL)isEditing;	// 0x304635c5
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3046369d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x304636a5
// converted property getter: - (BOOL)isSecure;	// 0x304635a9
- (BOOL)isShowingPlaceholder;	// 0x304635a1
// converted property getter: - (id)markedText;	// 0x30463479
// declared property getter: - (id)markedTextRange;	// 0x30463661
// declared property getter: - (id)markedTextStyle;	// 0x30463665
- (id)methodSignatureForSelector:(SEL)selector;	// 0x304633d9
- (void)moveBackward:(unsigned)backward;	// 0x30463551
- (void)moveForward:(unsigned)forward;	// 0x30463555
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x304634f9
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x30463691
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30463699
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30463695
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x304636a1
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30463679
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x304634f5
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30463549
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30463545
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x304636a9
- (CGRect)rectContainingCaretSelection;	// 0x304634d1
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x304634a9
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x304634cd
- (void)replaceCurrentWordWithText:(id)text;	// 0x30463465
- (void)replaceRange:(id)range withText:(id)text;	// 0x30463615
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x30463461
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30463469
- (void)selectAll;	// 0x30463559
- (id)selectedDOMRange;	// 0x3046353d
// declared property getter: - (id)selectedTextRange;	// 0x304635fd
- (BOOL)selectionAtDocumentStart;	// 0x3046351d
- (BOOL)selectionAtWordStart;	// 0x30463521
- (NSRange)selectionRange;	// 0x30463525
- (id)selectionRectsForRange:(id)range;	// 0x304636b9
- (int)selectionState;	// 0x30463519
- (id)selectionView;	// 0x304635b9
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x304635b1
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30463685
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x304635d1
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x304636b5
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30463471
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x3046346d
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30463669
// converted property setter: - (void)setSecure:(BOOL)secure;	// 0x304635ad
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x30463541
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30463601
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30463565
// converted property setter: - (void)setText:(id)text;	// 0x3046355d
- (void)setupPlaceholderTextIfNeeded;	// 0x304635a5
- (void)takeTraitsFrom:(id)from;	// 0x30463429
// converted property getter: - (id)text;	// 0x30463561
- (id)textColorForCaretSelection;	// 0x3046348d
- (id)textInRange:(id)range;	// 0x3046360d
- (id)textInputTraits;	// 0x30463301
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30463611
// declared property getter: - (id)tokenizer;	// 0x304636ad
- (void)unmarkText;	// 0x30463689
- (void)updateSelection;	// 0x304635c9
- (CGRect)visibleBounds;	// 0x304635d5
- (id)wordContainingCaretSelection;	// 0x30463501
- (int)wordOffsetInRange:(id)range;	// 0x30463509
- (id)wordRangeContainingCaretSelection;	// 0x304634fd
@end

