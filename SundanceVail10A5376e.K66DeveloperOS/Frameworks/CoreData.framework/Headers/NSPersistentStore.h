/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, NSMutableDictionary, NSDictionary, NSURL, NSPersistentStoreCoordinator;

@interface NSPersistentStore : NSObject {
	NSPersistentStoreCoordinator *_coordinator;	// 4 = 0x4
	NSString *_configurationName;	// 8 = 0x8
	NSURL *_url;	// 12 = 0xc
	NSDictionary *_options;	// 16 = 0x10
	NSMutableDictionary *_oidFactories;	// 20 = 0x14
	id _defaultFaultHandler;	// 24 = 0x18
	objectStoreFlags _flags;	// 28 = 0x1c
	void *_temporaryIDClass;	// 32 = 0x20
	id _externalRecordsMonitor;	// 36 = 0x24
	void *_reserved3;	// 40 = 0x28
}
@property(retain) id URL;	// G=0x35be114d; S=0x35c662b9; converted property
@property(readonly, retain) NSString *configurationName;	// G=0x35c66295; converted property
@property(retain) id identifier;	// G=0x35c66311; S=0x35c66381; converted property
@property(retain) id metadata;	// G=0x35c66415; S=0x35c6647d; converted property
@property(readonly, retain) NSDictionary *options;	// G=0x35be1009; converted property
@property(retain) id persistentStoreCoordinator;	// G=0x35be7671; S=0x35c66bf9; converted property
@property(assign, getter=isReadOnly) BOOL readOnly;	// G=0x35be09e5; S=0x35c6627d; converted property
+ (BOOL)_destroyPersistentStoreAtURL:(id)url options:(id)options error:(id *)error;	// 0x35c667e1
+ (id)_figureOutWhereExternalReferencesEndedUpRelativeTo:(id)to;	// 0x35c66c11
+ (BOOL)_replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url3 sourceOptions:(id)options4 error:(id *)error;	// 0x35c66571
+ (BOOL)accessInstanceVariablesDirectly;	// 0x35c65d4d
+ (BOOL)doURLStuff:(id)stuff createdStubFile:(BOOL *)file readOnly:(BOOL *)only error:(id *)error options:(id)options;	// 0x35bda73d
+ (void)initialize;	// 0x35bd14c1
+ (id)metadataForPersistentStoreWithURL:(id)url error:(id *)error;	// 0x35c65d51
+ (Class)migrationManagerClass;	// 0x35c66555
+ (BOOL)setMetadata:(id)metadata forPersistentStoreWithURL:(id)url error:(id *)error;	// 0x35c65d85
- (id)initWithPersistentStoreCoordinator:(id)persistentStoreCoordinator configurationName:(id)name URL:(id)url options:(id)options;	// 0x35bdab69
// converted property getter: - (id)URL;	// 0x35be114d
- (id)_defaultMetadata;	// 0x35c66ff5
- (void)_didLoadMetadata;	// 0x35be621d
- (BOOL)_isMetadataDirty;	// 0x35be079d
- (Class)_objectIDClass;	// 0x35c668cd
- (void)_preflightCrossCheck;	// 0x35c66c15
- (BOOL)_prepareForExecuteRequest:(id)executeRequest withContext:(id)context error:(id *)error;	// 0x35c66eed
- (id)_rawMetadata__;	// 0x35c66449
- (void)_setMetadataDirty:(BOOL)dirty;	// 0x35be6221
- (BOOL)_unload:(id *)unload;	// 0x35c66a79
- (void)_updateMetadata;	// 0x35be7591
- (id)_updatedMetadataWithSeed:(id)seed includeVersioning:(BOOL)versioning;	// 0x35be5e6d
// converted property getter: - (id)configurationName;	// 0x35c66295
- (id)copyWithZone:(NSZone *)zone;	// 0x35c65e85
- (void)dealloc;	// 0x35c65fe5
- (id)description;	// 0x35c661b1
- (void)didAddToPersistentStoreCoordinator:(id)persistentStoreCoordinator;	// 0x35be77f5
- (void)doFilesystemCleanupOnRemove:(BOOL)remove;	// 0x35c66e9d
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;	// 0x35c66eb9
- (id)faultHandler;	// 0x35c668e9
- (Class)faultHandlerClass;	// 0x35c66941
- (void)finalize;	// 0x35c65e95
// converted property getter: - (id)identifier;	// 0x35c66311
// converted property getter: - (BOOL)isReadOnly;	// 0x35be09e5
- (id *)knownKeyValuesForObjectID:(id)objectID withContext:(id)context;	// 0x35c66eb5
- (BOOL)load:(id *)load;	// 0x35c6696d
- (BOOL)loadMetadata:(id *)metadata;	// 0x35c66551
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;	// 0x35c66f59
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;	// 0x35c66f8d
// converted property getter: - (id)metadata;	// 0x35c66415
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x35c66f25
- (id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x35c66ef1
- (Class)objectIDClassForEntity:(id)entity;	// 0x35c6695d
- (id)objectIDFactoryForEntity:(id)entity;	// 0x35bf5b5d
- (id)obtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x35c66fc1
// converted property getter: - (id)options;	// 0x35be1009
// converted property getter: - (id)persistentStoreCoordinator;	// 0x35be7671
// converted property setter: - (void)setIdentifier:(id)identifier;	// 0x35c66381
// converted property setter: - (void)setMetadata:(id)metadata;	// 0x35c6647d
// converted property setter: - (void)setPersistentStoreCoordinator:(id)coordinator;	// 0x35c66bf9
// converted property setter: - (void)setReadOnly:(BOOL)only;	// 0x35c6627d
// converted property setter: - (void)setURL:(id)url;	// 0x35c662b9
- (id)type;	// 0x35c664d1
- (void)willRemoveFromPersistentStoreCoordinator:(id)persistentStoreCoordinator;	// 0x35c664ed
@end

