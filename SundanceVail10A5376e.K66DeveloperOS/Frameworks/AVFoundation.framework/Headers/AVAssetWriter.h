/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAssetWriterHelper, NSError, NSString, NSURL, NSArray, AVAssetWriterInternal;

@interface AVAssetWriter : NSObject {
	AVAssetWriterInternal *_internal;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) NSArray *availableMediaTypes;	// G=0x368b859d; 
@property(readonly, assign) NSError *error;	// G=0x368b8695; 
@property(readonly, assign, getter=_helper) AVAssetWriterHelper *helper;	// G=0x368b808d; 
@property(readonly, assign, nonatomic) NSArray *inputs;	// G=0x368b88e1; 
@property(copy, nonatomic) NSArray *metadata;	// G=0x368b8b61; S=0x368b8b89; 
@property(assign) XXStruct_pwHToB movieFragmentInterval;	// G=0x368b86bd; S=0x368b8701; converted property
@property(assign) int movieTimeScale;	// G=0x368b8835; S=0x368b885d; converted property
@property(readonly, assign, nonatomic) NSString *outputFileType;	// G=0x368b8565; 
@property(readonly, assign, nonatomic) NSURL *outputURL;	// G=0x368b853d; 
@property(assign, nonatomic) BOOL shouldOptimizeForNetworkUse;	// G=0x368b87e1; S=0x368b8809; 
@property(readonly, assign) int status;	// G=0x368b8645; 
+ (id)_errorForOSStatus:(long)osstatus;	// 0x368b8e41
+ (id)assetWriterWithURL:(id)url fileType:(id)type error:(id *)error;	// 0x368b7b55
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x368b85c5
+ (void)initialize;	// 0x368b7b25
+ (id)keyPathsForValuesAffectingError;	// 0x368b866d
+ (id)keyPathsForValuesAffectingStatus;	// 0x368b861d
- (id)init;	// 0x368b7bad
- (id)initWithURL:(id)url fileType:(id)type error:(id *)error;	// 0x368b7bd1
// declared property getter: - (id)_helper;	// 0x368b808d
- (BOOL)_setHelper:(id)helper ifCurrentHelper:(id)helper2;	// 0x368b826d
- (BOOL)_setHelper:(id)helper ifCurrentHelper:(id)helper2 withBlock:(id)block;	// 0x368b8291
- (void)_transitionToFailedStatusWithError:(id)error;	// 0x368b8e79
- (void)addInput:(id)input;	// 0x368b89e1
- (void)addInputGroup:(id)group;	// 0x368b8ae1
// declared property getter: - (id)availableMediaTypes;	// 0x368b859d
- (BOOL)canAddInput:(id)input;	// 0x368b8961
- (BOOL)canAddInputGroup:(id)group;	// 0x368b8a61
- (BOOL)canApplyOutputSettings:(id)settings forMediaType:(id)mediaType;	// 0x368b8931
- (void)cancelWriting;	// 0x368b8d51
- (void)dealloc;	// 0x368b7ef5
- (id)description;	// 0x368b8009
- (void)endSessionAtSourceTime:(XXStruct_pwHToB)sourceTime;	// 0x368b8ca5
// declared property getter: - (id)error;	// 0x368b8695
- (void)finalize;	// 0x368b7fad
- (BOOL)finishWriting;	// 0x368b8d79
- (void)finishWritingWithCompletionHandler:(id)completionHandler;	// 0x368b8dc1
- (id)inputGroups;	// 0x368b8909
// declared property getter: - (id)inputs;	// 0x368b88e1
// declared property getter: - (id)metadata;	// 0x368b8b61
// converted property getter: - (XXStruct_pwHToB)movieFragmentInterval;	// 0x368b86bd
// converted property getter: - (int)movieTimeScale;	// 0x368b8835
// declared property getter: - (id)outputFileType;	// 0x368b8565
// declared property getter: - (id)outputURL;	// 0x368b853d
// declared property setter: - (void)setMetadata:(id)metadata;	// 0x368b8b89
// converted property setter: - (void)setMovieFragmentInterval:(XXStruct_pwHToB)interval;	// 0x368b8701
// converted property setter: - (void)setMovieTimeScale:(int)scale;	// 0x368b885d
// declared property setter: - (void)setShouldOptimizeForNetworkUse:(BOOL)optimizeForNetworkUse;	// 0x368b8809
// declared property getter: - (BOOL)shouldOptimizeForNetworkUse;	// 0x368b87e1
- (void)startSessionAtSourceTime:(XXStruct_pwHToB)sourceTime;	// 0x368b8bf9
- (BOOL)startWriting;	// 0x368b8bb5
// declared property getter: - (int)status;	// 0x368b8645
@end

