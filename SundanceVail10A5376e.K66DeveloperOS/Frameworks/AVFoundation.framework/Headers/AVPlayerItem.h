/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSDate, NSArray, AVPlayerItemInternal, NSString, NSError;

@interface AVPlayerItem : NSObject <NSCopying> {
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x368aa999; S=0x368aaa4d; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x368aab01; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x368aac15; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x368aadcd; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x368aacb9; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x368aad29; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x368aab71; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x368a5de1; S=0x368a5f8d; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x368aa6b9; 
@property(retain) id audioMix;	// G=0x368a6ced; S=0x368a6f41; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x368aa69d; 
@property(assign) double bufferingTargetMaximum;	// G=0x368a59f9; S=0x368a5b8d; converted property
@property(assign) double bufferingTargetMinimum;	// G=0x368a5bb1; S=0x368a5d45; converted property
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x368aba6d; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x368aa711; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x368a6a69; S=0x368a6c15; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x368a6751; S=0x368a68fd; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x368aba29; S=0x368ab991; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x368abb85; S=0x368abb01; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x368a2399; 
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x368a4ed9; S=0x368a50b5; converted property
@property(retain) id gaplessInfo;	// G=0x368a86fd; S=0x368a8ab9; converted property
@property(retain) id initialDate;	// G=0x368a4b91; S=0x368a4bd5; converted property
@property(retain) id initialEstimatedDate;	// G=0x368a4cb5; S=0x368a4cf9; converted property
@property(assign) BOOL limitReadAhead;	// G=0x368a5761; S=0x368a5909; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x368a9b91; S=0x368a9bb1; converted property
@property(readonly, assign, nonatomic) NSArray *outputs;	// G=0x368ac321; 
@property(assign) int playbackLikelyToKeepUpTrigger;	// G=0x368a6125; S=0x368a62cd; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x368a52d1; S=0x368a54ad; converted property
@property(assign) BOOL seekingWaitsForVideoCompositionRendering;	// G=0x368a7635; S=0x368a76d5; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x368a8ca1; S=0x368a8c01; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x368a2379; 
@property(retain) id textStyleRules;	// G=0x368a7765; S=0x368a782d; converted property
@property(retain) id variableSpeedAudioProcessor;	// G=0x368a79b9; S=0x368a7aad; converted property
@property(retain) id videoComposition;	// G=0x368a7005; S=0x368a7049; converted property
@property(assign) float volumeAdjustment;	// G=0x368a8dd5; S=0x368a8d35; converted property
@property(assign) BOOL willNeverSeekBackwardsHint;	// G=0x368a6439; S=0x368a65e5; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x3689f52d
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x3689f519
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x368aa769
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x368aa935
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x368a6061
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x368aa67d
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x368a7001
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;	// 0x368a5b91
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;	// 0x368a5d49
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x368a6ce9
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x368a69d1
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x368a51cd
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x368a8b8d
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x368a59dd
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x368aa691
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x368a9c7d
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x368aa685
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x368aa689
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x368aa681
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;	// 0x368a63a1
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x368aa695
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x368a55c5
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x368aa68d
+ (BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;	// 0x368a7761
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x368a8cc1
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x368aa679
+ (BOOL)automaticallyNotifiesObserversOfTextStyleRules;	// 0x368a78ed
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x368aa699
+ (BOOL)automaticallyNotifiesObserversOfVariableSpeedAudioProcessor;	// 0x368a7c15
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x368a72e1
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x368a8df5
+ (BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;	// 0x368a66b9
+ (void)initialize;	// 0x3689f4b1
+ (id)playerItemWithAsset:(id)asset;	// 0x3689f589
+ (id)playerItemWithURL:(id)url;	// 0x3689f541
- (id)init;	// 0x3689f875
- (id)initWithAsset:(id)asset;	// 0x3689faf5
- (id)initWithURL:(id)url;	// 0x3689f9ed
- (int)_CreateSeekID;	// 0x368a40e1
- (id)_URL;	// 0x368a1f3d
- (void)_addFPListeners;	// 0x368a2e49
- (void)_addSyncLayer:(id)layer;	// 0x368aa085
- (BOOL)_alwaysMonitorsPlayability;	// 0x368a5d4d
- (void)_applyAudioMix;	// 0x368a6d31
- (void)_applyInitialAudioMix;	// 0x368a6eed
- (void)_applyMediaSelectionOptions;	// 0x368a92dd
- (void)_applySeekingWaitsForVideoCompositionRendering;	// 0x368a7655
- (void)_applyTextStyleRules;	// 0x368a77a9
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x368a90b5
- (void)_attachOutputs;	// 0x368abf35
- (void)_attachToFigPlayer;	// 0x368a1561
- (void)_attachToPlayer:(id)player;	// 0x368a1435
- (long long)_availableFileSize;	// 0x368ab905
- (double)_bufferingTargetMaximum;	// 0x368a59e1
- (double)_bufferingTargetMinimum;	// 0x368a5b99
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x368a9489
- (id)_cachedValueForKey:(id)key;	// 0x368a0745
- (BOOL)_canPlayFastForward;	// 0x368a36e9
- (BOOL)_canPlayFastReverse;	// 0x368a383d
- (BOOL)_canPlayReverse;	// 0x368a39e9
- (BOOL)_canPlaySlowForward;	// 0x368a3add
- (BOOL)_canPlaySlowReverse;	// 0x368a3bd1
- (BOOL)_canStepBackward;	// 0x368a3dbd
- (BOOL)_canStepForward;	// 0x368a3cc5
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x368a413d
- (void)_changeStatusToFailedWithError:(id)error;	// 0x368a23dd
- (void)_configurePlaybackItem;	// 0x368a09fd
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x368a69d5
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x368a66bd
- (OpaqueCMTimebase *)_copyTimebase;	// 0x368a55c9
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x368a139d
- (void)_createPlayerItemInternal;	// 0x3689f5d1
- (void)_dequeueFromPlayer;	// 0x368a1e09
- (void)_detachOutputs;	// 0x368ac035
- (void)_didAccessKVOForKey:(id)key;	// 0x368a079d
- (XXStruct_pwHToB)_duration;	// 0x368a25a5
- (void)_enqueueWithPlayer:(id)player shouldAppendItem:(BOOL)item;	// 0x368a1d39
- (void)_evaluateSuppression;	// 0x368aa551
- (void)_evaluateVisualContexts;	// 0x368abcd5
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x368a9c81
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x368a0705
- (long long)_fileSize;	// 0x368ab879
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x368a4dd9
- (id)_fpNotificationNames;	// 0x368a2be1
- (BOOL)_hasEnabledVideoMedia;	// 0x368aa341
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x368a22d1
- (void)_insertAfterItem:(id)item;	// 0x368a1e6d
- (void)_invokeReadyForEnqueueingHandlers;	// 0x368a327d
- (BOOL)_isAFileBasedItemThatsReadyToPlay;	// 0x368a3991
- (BOOL)_isCurrentPlayerItem;	// 0x368a11f1
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x368aa999
// declared property getter: - (BOOL)_isRental;	// 0x368aab01
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x368aacb9
- (void)_kickAssetObserversIfAppropriate;	// 0x368a2235
- (BOOL)_limitReadAhead;	// 0x368a56cd
- (id)_loadedTimeRanges;	// 0x368a837d
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x368a20a5
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x368a33d1
- (id)_nextItem;	// 0x368a1e2d
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x368aa2dd
- (int)_playbackLikelyToKeepUpTrigger;	// 0x368a6065
- (id)_playbackProperties;	// 0x368a8741
- (id)_player;	// 0x368a11c5
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x368a1e1d
- (id)_playerConnection;	// 0x368a1325
- (CGSize)_presentationSize;	// 0x368a3eb1
- (id)_previousItem;	// 0x368a1e4d
- (id)_propertyStorage;	// 0x368a0725
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x368a5ebd
- (void)_quietlySetBufferingTargetMaximum:(double)maximum;	// 0x368a5ad5
- (void)_quietlySetBufferingTargetMinimum:(double)minimum;	// 0x368a5c8d
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x368a6b45
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x368a682d
- (void)_quietlySetEQPreset:(int)preset;	// 0x368ab7a9
- (void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)algorithm;	// 0x368a7a5d
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x368a4ff1
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x368a583d
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x368a6201
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x368a87e5
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x368a53e9
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x368a8b91
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x368a8cc5
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)_quietlySet;	// 0x368a6515
- (void)_removeFPListeners;	// 0x368a3045
- (void)_removeFromItems;	// 0x368a1ed5
- (void)_removeSyncLayer:(id)layer;	// 0x368a9e79
- (void)_renderingSuppressionDidChangeForOutput:(id)_renderingSuppression;	// 0x368aa629
// declared property getter: - (id)_rentalExpirationDate;	// 0x368aac15
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x368aadcd
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x368aad29
// declared property getter: - (id)_rentalStartDate;	// 0x368aab71
- (void)_respondToBecomingReadyForBasicInspection;	// 0x368a3191
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x368a51d1
- (id)_seekableTimeRanges;	// 0x368a7ffd
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x368a977d
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x368a9801
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x368a9851
- (void)_selectMediaOption:(id)option usingFigSelectedMediaArrayObtainedFromGroup:(id)group;	// 0x368a955d
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x368a8fc5
- (void)_setAsset:(id)asset;	// 0x368a1f9d
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x368a215d
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x368a1ff5
- (void)_setAudibleDRMInfo:(id)info;	// 0x368ab709
- (void)_setEQPreset:(int)preset;	// 0x368ab819
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x368a8f51
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x368aaa4d
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x368a1211
- (void)_setPlayerConnection:(id)connection;	// 0x368a1345
- (void)_setRampInOutInfo:(id)outInfo;	// 0x368ab669
- (void)_setSyncLayersOnFigPlaybackItem:(id)item;	// 0x368a9e09
- (void)_setTimebaseOnOutputs:(OpaqueCMTimebase *)outputs;	// 0x368abe65
- (void)_setTimedMetadata:(id)metadata;	// 0x368a9d99
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x368a204d
- (void)_setURL:(id)url;	// 0x368a1f5d
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x368a72e5
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x368a746d
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x368a73f1
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x368a7381
- (void)_setVideoCompositor:(id)compositor;	// 0x368a7529
- (id)_stateDispatchQueue;	// 0x368a06e5
- (BOOL)_suppressionForOutputs:(id)outputs;	// 0x368aa48d
- (id)_trackWithTrackID:(int)trackID;	// 0x368a2af9
- (id)_tracks;	// 0x368a279d
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)seekID finished:(BOOL)finished;	// 0x368a4315
- (void)_updateTimebase;	// 0x368a5641
- (id)_variableSpeedAudioProcessor;	// 0x368a78f1
- (id)_weakReference;	// 0x368a06c5
- (void)_willAccessKVOForKey:(id)key;	// 0x368a0771
- (BOOL)_willNeverSeekBackwardsHint;	// 0x368a63a5
- (id)accessLog;	// 0x368aae71
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x368a0889
- (void)addOutput:(id)output;	// 0x368ac115
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x368a5de1
- (id)asset;	// 0x368a2561
// converted property getter: - (id)audioMix;	// 0x368a6ced
// converted property getter: - (double)bufferingTargetMaximum;	// 0x368a59f9
// converted property getter: - (double)bufferingTargetMinimum;	// 0x368a5bb1
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x368aba6d
- (BOOL)canPlayFastForward;	// 0x368a3761
- (BOOL)canPlayFastReverse;	// 0x368a38b5
- (BOOL)canPlayReverse;	// 0x368a3a01
- (BOOL)canPlaySlowForward;	// 0x368a3af5
- (BOOL)canPlaySlowReverse;	// 0x368a3be9
- (BOOL)canStepBackward;	// 0x368a3dd5
- (BOOL)canStepForward;	// 0x368a3ce1
- (void)cancelPendingSeeks;	// 0x368a4a1d
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x368a6a69
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x368a6751
- (id)copyWithZone:(NSZone *)zone;	// 0x368a0149
- (id)currentDate;	// 0x368a4a31
- (id)currentEstimatedDate;	// 0x368a4c2d
- (XXStruct_pwHToB)currentTime;	// 0x368a4039
// declared property getter: - (id)dataYouTubeID;	// 0x368aba29
- (void)dealloc;	// 0x3689fc29
- (id)description;	// 0x368a0559
- (void)didChangeValueForKey:(id)key;	// 0x368a0829
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x368abba5
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x368abb85
- (XXStruct_pwHToB)duration;	// 0x368a265d
// declared property getter: - (id)error;	// 0x368a2399
- (id)errorLog;	// 0x368aaf39
- (void)finalize;	// 0x3689ffe5
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x368a4ed9
// converted property getter: - (id)gaplessInfo;	// 0x368a86fd
// converted property getter: - (id)initialDate;	// 0x368a4b91
// converted property getter: - (id)initialEstimatedDate;	// 0x368a4cb5
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x368aa6b9
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x368aa69d
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x368aa711
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x368a9b91
- (BOOL)isPlaybackBufferEmpty;	// 0x368a7e09
- (BOOL)isPlaybackBufferFull;	// 0x368a7d11
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x368a7c19
// converted property getter: - (BOOL)limitReadAhead;	// 0x368a5761
- (id)loadedTimeRanges;	// 0x368a8665
// declared property getter: - (id)outputs;	// 0x368ac321
- (id)playabilityMetrics;	// 0x368a7f79
// converted property getter: - (int)playbackLikelyToKeepUpTrigger;	// 0x368a6125
- (CGSize)presentationSize;	// 0x368a3f3d
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x368a7f01
- (void)removeOutput:(id)output;	// 0x368ac22d
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x368a52d1
- (BOOL)seekToDate:(id)date;	// 0x368a4b79
- (BOOL)seekToDate:(id)date completionHandler:(id)handler;	// 0x368a4ab9
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x368a43c9
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x368a4485
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x368a4401
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x368a44fd
- (id)seekableTimeRanges;	// 0x368a82e5
// converted property getter: - (BOOL)seekingWaitsForVideoCompositionRendering;	// 0x368a7635
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x368a9915
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x368a91dd
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x368a9939
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x368a8df9
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x368a5f8d
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x368a6f41
// converted property setter: - (void)setBufferingTargetMaximum:(double)maximum;	// 0x368a5b8d
// converted property setter: - (void)setBufferingTargetMinimum:(double)minimum;	// 0x368a5d45
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x368a6c15
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x368a68fd
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x368ab991
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x368abb01
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x368a50b5
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x368a8ab9
// converted property setter: - (void)setInitialDate:(id)date;	// 0x368a4bd5
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x368a4cf9
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x368a5909
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x368a9bb1
// converted property setter: - (void)setPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x368a62cd
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x368a54ad
// converted property setter: - (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)videoCompositionRendering;	// 0x368a76d5
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x368a8c01
// converted property setter: - (void)setTextStyleRules:(id)rules;	// 0x368a782d
// converted property setter: - (void)setVariableSpeedAudioProcessor:(id)processor;	// 0x368a7aad
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x368a7049
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x368a8d35
// converted property setter: - (void)setWillNeverSeekBackwardsHint:(BOOL)neverSeekBackwardsHint;	// 0x368a65e5
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x368a8ca1
// declared property getter: - (int)status;	// 0x368a2379
- (void)stepByCount:(int)count;	// 0x368a4d51
// converted property getter: - (id)textStyleRules;	// 0x368a7765
- (OpaqueCMTimebase *)timebase;	// 0x368a5621
- (id)timedMetadata;	// 0x368a9d55
- (id)tracks;	// 0x368a2a41
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x368a063d
// converted property getter: - (id)variableSpeedAudioProcessor;	// 0x368a79b9
// converted property getter: - (id)videoComposition;	// 0x368a7005
// converted property getter: - (float)volumeAdjustment;	// 0x368a8dd5
- (void)willChangeValueForKey:(id)key;	// 0x368a07c9
// converted property getter: - (BOOL)willNeverSeekBackwardsHint;	// 0x368a6439
@end

