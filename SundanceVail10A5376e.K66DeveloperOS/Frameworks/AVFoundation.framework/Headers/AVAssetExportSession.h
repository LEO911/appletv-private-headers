/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, AVAudioMix, NSURL, NSArray, AVVideoComposition, NSString, NSError, AVAssetExportSessionInternal;

@interface AVAssetExportSession : NSObject {
	AVAssetExportSessionInternal *_exportSession;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x368cf3bd; 
@property(copy, nonatomic) AVAudioMix *audioMix;	// G=0x368d0d6d; S=0x368d0d8d; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x368cffd5; 
@property(readonly, assign, nonatomic) long long estimatedOutputFileLength;	// G=0x368d0b79; 
@property(assign, nonatomic) long long fileLengthLimit;	// G=0x368d0cc9; S=0x368d0ced; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB maxDuration;	// G=0x368d0afd; 
@property(copy, nonatomic) NSArray *metadata;	// G=0x368d0bfd; S=0x368d0c1d; 
@property(copy, nonatomic) NSString *outputFileType;	// G=0x368cfb61; S=0x368cfb81; 
@property(copy, nonatomic) NSURL *outputURL;	// G=0x368cfd51; S=0x368cfd71; 
@property(readonly, assign, nonatomic) NSString *presetName;	// G=0x368cf3dd; 
@property(readonly, assign, nonatomic) float progress;	// G=0x368d025d; 
@property(assign, nonatomic) BOOL shouldOptimizeForNetworkUse;	// G=0x368d102d; S=0x368d104d; 
@property(readonly, assign, nonatomic) int status;	// G=0x368cfe55; 
@property(readonly, assign, nonatomic) NSArray *supportedFileTypes;	// G=0x368cf639; 
@property(assign, nonatomic) XXStruct_yD8eWC timeRange;	// G=0x368d09d5; S=0x368d0a31; 
@property(assign) BOOL usesHardwareVideoEncoderIfAvailable;	// G=0x368d10c9; S=0x368d10e9; converted property
@property(copy, nonatomic) AVVideoComposition *videoComposition;	// G=0x368d0e39; S=0x368d0e59; 
+ (id)_audioOnlyPresets;	// 0x368d1165
+ (id)_audioVideoPresets;	// 0x368d11f9
+ (BOOL)_canWriteMediaOfAsset:(id)asset toFileType:(id)fileType;	// 0x368ce9e5
+ (long long)_estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x368d2979
+ (id)_figRemakerNotificationNames;	// 0x368d24bd
+ (int)_getPassthroughExportPolicyForAssetTrack:(id)assetTrack fileType:(id)type asChapterTrack:(BOOL)track;	// 0x368cf3fd
+ (BOOL)_isCompositionWithMultipleNonEmptyEdits:(id)multipleNonEmptyEdits;	// 0x368cf525
+ (BOOL)_isExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x368d1cb5
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x368d1c59
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAssetContainingPlayableAudio:(BOOL)assetContainingPlayableAudio playableVideo:(BOOL)video outputFileType:(id)type;	// 0x368d1aa1
+ (BOOL)_isPassthroughExportPresetCompatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x368d17b5
+ (BOOL)_isPassthroughSupportedForAsset:(id)asset;	// 0x368ce9b5
+ (XXStruct_pwHToB)_maximumDurationForPreset:(id)preset fileSizeBytesLimit:(long long)limit properties:(id)properties;	// 0x368d255d
+ (id)_settingForPreset:(id)preset;	// 0x368d1d1d
+ (id)_utTypesForAudioOnly;	// 0x368d16d1
+ (id)_utTypesForDefaultPassthroughPreset;	// 0x368d1595
+ (id)_utTypesForPresets;	// 0x368d12cd
+ (id)allExportPresets;	// 0x368ce691
+ (void)determineCompatibilityOfExportPreset:(id)exportPreset withAsset:(id)asset outputFileType:(id)type completionHandler:(id)handler;	// 0x368ceb01
+ (long long)estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x368ced3d
+ (id)exportPresetsCompatibleWithAsset:(id)asset;	// 0x368ce87d
+ (id)exportSessionWithAsset:(id)asset presetName:(id)name;	// 0x368cec71
+ (XXStruct_pwHToB)maximumDurationForPreset:(id)preset properties:(id)properties;	// 0x368cecbd
- (id)init;	// 0x368ced81
- (id)initWithAsset:(id)asset presetName:(id)name;	// 0x368ced95
- (id)_actualPresetName;	// 0x368d2e29
- (id)_actualSettingForPreset:(id)preset;	// 0x368d1d61
- (void)_addListeners;	// 0x368d34cd
- (BOOL)_canPassThroughAudio:(id)audio checkEnabled:(BOOL)enabled checkProtected:(BOOL)aProtected;	// 0x368d3cf9
- (BOOL)_canPassThroughVideo:(id)video checkEnabled:(BOOL)enabled checkAll:(BOOL)all checkProtected:(BOOL)aProtected;	// 0x368d4979
- (OpaqueFigRemaker *)_createFigRemaker;	// 0x368d55f1
- (id)_determineCompatibleFileTypes;	// 0x368cf6a9
- (CGSize)_getSourceDimension;	// 0x368d3625
- (int)_getTrackCountOfType:(id)type checkEnabled:(BOOL)enabled;	// 0x368d3849
- (void)_handleFigRemakerNotification:(id)notification payload:(id)payload;	// 0x368d2ba5
- (void)_handleFigRemakerNotificationAsync:(id)async payload:(id)payload;	// 0x368d2d51
- (BOOL)_hasProtectedNonAudioVideoTracks;	// 0x368d397d
- (BOOL)_isAudioMixdownRequired:(CFStringRef)required error:(id *)error;	// 0x368d55b9
- (void)_removeListeners;	// 0x368d3315
- (id)_retrieveChannelSpecificAudioSettingForAudioTrack:(id)audioTrack fromAudioSetting:(id)audioSetting;	// 0x368d46a1
- (id)_settingForFigRemaker;	// 0x368d480d
- (BOOL)_totalSizeOfTracksIsWithinFileLengthLimit:(id)tracksIsWithinFileLengthLimit forSetting:(id)setting;	// 0x368d3b5d
- (void)_transitionToStatus:(int)status error:(id)error;	// 0x368d2e5d
- (void)_updateProgress;	// 0x368d01b5
- (BOOL)_validateSettablePropertiesReturningError:(id *)error;	// 0x368d03fd
// declared property getter: - (id)asset;	// 0x368cf3bd
// declared property getter: - (id)audioMix;	// 0x368d0d6d
- (void)cancelExport;	// 0x368d09c1
- (void)dealloc;	// 0x368cf041
- (id)description;	// 0x368cf319
- (void)determineCompatibleFileTypesWithCompletionHandler:(id)completionHandler;	// 0x368cfa45
// declared property getter: - (id)error;	// 0x368cffd5
// declared property getter: - (long long)estimatedOutputFileLength;	// 0x368d0b79
- (void)exportAsynchronouslyWithCompletionHandler:(id)completionHandler;	// 0x368d061d
// declared property getter: - (long long)fileLengthLimit;	// 0x368d0cc9
- (void)finalize;	// 0x368cf239
// declared property getter: - (XXStruct_pwHToB)maxDuration;	// 0x368d0afd
// declared property getter: - (id)metadata;	// 0x368d0bfd
// declared property getter: - (id)outputFileType;	// 0x368cfb61
// declared property getter: - (id)outputURL;	// 0x368cfd51
// declared property getter: - (id)presetName;	// 0x368cf3dd
// declared property getter: - (float)progress;	// 0x368d025d
// declared property setter: - (void)setAudioMix:(id)mix;	// 0x368d0d8d
// declared property setter: - (void)setFileLengthLimit:(long long)limit;	// 0x368d0ced
// declared property setter: - (void)setMetadata:(id)metadata;	// 0x368d0c1d
// declared property setter: - (void)setOutputFileType:(id)type;	// 0x368cfb81
// declared property setter: - (void)setOutputURL:(id)url;	// 0x368cfd71
// declared property setter: - (void)setShouldOptimizeForNetworkUse:(BOOL)optimizeForNetworkUse;	// 0x368d104d
// declared property setter: - (void)setTimeRange:(XXStruct_yD8eWC)range;	// 0x368d0a31
// converted property setter: - (void)setUsesHardwareVideoEncoderIfAvailable:(BOOL)available;	// 0x368d10e9
// declared property setter: - (void)setVideoComposition:(id)composition;	// 0x368d0e59
// declared property getter: - (BOOL)shouldOptimizeForNetworkUse;	// 0x368d102d
// declared property getter: - (int)status;	// 0x368cfe55
// declared property getter: - (id)supportedFileTypes;	// 0x368cf639
// declared property getter: - (XXStruct_yD8eWC)timeRange;	// 0x368d09d5
// converted property getter: - (BOOL)usesHardwareVideoEncoderIfAvailable;	// 0x368d10c9
// declared property getter: - (id)videoComposition;	// 0x368d0e39
@end

