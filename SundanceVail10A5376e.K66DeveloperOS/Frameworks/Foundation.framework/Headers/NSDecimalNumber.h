/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x34de5de5
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x34de5f5d
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x34de5eed
+ (id)decimalNumberWithString:(id)string;	// 0x34de5fd9
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x34de602d
+ (id)defaultBehavior;	// 0x34de6d0d
+ (id)maximumDecimalNumber;	// 0x34de6265
+ (id)minimumDecimalNumber;	// 0x34de61f9
+ (id)notANumber;	// 0x34de6381
+ (id)numberWithBool:(BOOL)aBool;	// 0x34de83a9
+ (id)numberWithChar:(BOOL)aChar;	// 0x34de7f75
+ (id)numberWithDouble:(double)aDouble;	// 0x34de8359
+ (id)numberWithFloat:(float)aFloat;	// 0x34de830d
+ (id)numberWithInt:(int)int;	// 0x34de80a5
+ (id)numberWithInteger:(int)integer;	// 0x34de80f1
+ (id)numberWithLong:(long)aLong;	// 0x34de81d5
+ (id)numberWithLongLong:(long long)longLong;	// 0x34de826d
+ (id)numberWithShort:(short)aShort;	// 0x34de800d
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x34de7fc1
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x34de813d
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x34de8189
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x34de8221
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x34de82bd
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x34de8059
+ (id)one;	// 0x34de6311
+ (void)setDefaultBehavior:(id)behavior;	// 0x34de6cb9
+ (id)zero;	// 0x34de62d1
- (id)initWithCoder:(id)coder;	// 0x34de6175
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x34de60c1
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x34de6085
- (id)initWithString:(id)string;	// 0x34de60fd
- (id)initWithString:(id)string locale:(id)locale;	// 0x34de6139
- (bool)_getCString:(char *)string length:(int)length multiplier:(double)multiplier;	// 0x34de7131
- (BOOL)boolValue;	// 0x34de710d
- (BOOL)charValue;	// 0x34de6f91
- (Class)classForCoder;	// 0x34de6d7d
- (int)compare:(id)compare;	// 0x34de63f1
- (id)copy;	// 0x34de5e45
- (id)copyWithZone:(NSZone *)zone;	// 0x34de5e55
- (id)decimalNumberByAdding:(id)adding;	// 0x34de65bd
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x34de660d
- (id)decimalNumberByDividingBy:(id)by;	// 0x34de6971
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x34de69c1
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x34de6899
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x34de68e9
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x34de6b21
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x34de6b71
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x34de6a49
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x34de6a99
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x34de6bf9
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x34de6771
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x34de67b1
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x34de67c1
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x34de6811
- (XXStruct_9isexA)decimalValue;	// 0x34de61cd
- (id)description;	// 0x34de61b1
- (id)descriptionWithLocale:(id)locale;	// 0x34de61c5
- (double)doubleValue;	// 0x34de64c9
- (void)encodeWithCoder:(id)coder;	// 0x34de6d99
- (float)floatValue;	// 0x34de70e9
- (void)getValue:(void *)value;	// 0x34de65a1
- (int)intValue;	// 0x34de7021
- (BOOL)isEqual:(id)equal;	// 0x34de6471
- (long long)longLongValue;	// 0x34de70b1
- (long)longValue;	// 0x34de7069
- (const char *)objCType;	// 0x34de64b9
- (short)shortValue;	// 0x34de6fd9
- (unsigned char)unsignedCharValue;	// 0x34de6fb5
- (unsigned)unsignedIntValue;	// 0x34de7045
- (unsigned long long)unsignedLongLongValue;	// 0x34de70cd
- (unsigned long)unsignedLongValue;	// 0x34de708d
- (unsigned short)unsignedShortValue;	// 0x34de6ffd
@end

