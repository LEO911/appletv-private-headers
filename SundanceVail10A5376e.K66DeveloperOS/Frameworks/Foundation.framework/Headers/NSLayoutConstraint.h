/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISConstraint.h"

@class NSString;

@interface NSLayoutConstraint : NSObject <NSISConstraint> {
	id _container;	// 4 = 0x4
	id _firstItem;	// 8 = 0x8
	id _secondItem;	// 12 = 0xc
	float _constant;	// 16 = 0x10
	float _loweredConstant;	// 20 = 0x14
	id _markerAndPositiveExtraVar;	// 24 = 0x18
	id _negativeExtraVar;	// 28 = 0x1c
	float _coefficient;	// 32 = 0x20
	float _priority;	// 36 = 0x24
	unsigned long long _layoutConstraintFlags;	// 40 = 0x28
	id _flange;	// 48 = 0x30
}
@property(retain) id animations;	// G=0x34e7c149; S=0x34e7c159; converted property
@property(assign) float constant;	// G=0x34e7cc31; S=0x34e7cced; 
@property(assign) id container;	// G=0x34e7c53d; S=0x34e7c561; 
@property(assign) int firstAttribute;	// G=0x34e7b859; 
@property(assign) id firstItem;	// G=0x34e800bd; @synthesize=_firstItem
@property(readonly, assign) BOOL hasBeenLowered;	// G=0x34e7bf21; 
@property(copy) NSString *identifier;	// G=0x34e7c129; S=0x34e7c139; 
@property(assign) float multiplier;	// G=0x34e7b9dd; 
@property(assign) float priority;	// G=0x34e7bc29; S=0x34e7bc39; 
@property(assign) int relation;	// G=0x34e7b915; 
@property(assign) int secondAttribute;	// G=0x34e7bb39; 
@property(assign) id secondItem;	// G=0x34e800e9; @synthesize=_secondItem
@property(assign) BOOL shouldBeArchived;	// G=0x34e7bbfd; S=0x34e7bc11; 
@property(copy) NSString *symbolicConstant;	// G=0x34e7cedd; S=0x34e7ceed; 
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by constant:(float)constant;	// 0x34e80081
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5;	// 0x34e80049
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 constant:(float)constant;	// 0x34e80009
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier;	// 0x34e7ffd1
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier constant:(float)constant;	// 0x34e7fcc9
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant;	// 0x34e7f9c1
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant theme:(id)theme;	// 0x34e7f9b1
+ (id)constraintsWithVisualFormat:(id)visualFormat options:(unsigned)options metrics:(id)metrics views:(id)views;	// 0x34e7f995
- (id)init;	// 0x34e7cf01
- (id)initWithCoder:(id)coder;	// 0x34e7e1b5
- (void)_addToEngine:(id)engine;	// 0x34e7ed01
- (BOOL)_addToEngine:(id)engine integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x34e7ea7d
- (float)_allowedMagnitudeForIntegralizationAdjustment;	// 0x34e7c1a9
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)markerScaling;	// 0x34e7c319
- (void)_clearWeakContainerReference;	// 0x34e7c579
- (id)_constantDescriptionForDTrace;	// 0x34e7cbb9
- (id)_constraintByReplacingItem:(id)item withItem:(id)item2;	// 0x34e7e535
- (id)_constraintByReplacingView:(id)view withView:(id)view2;	// 0x34e7e735
- (int)_constraintType;	// 0x34e7cfe1
- (void)_containerGeometryDidChange;	// 0x34e7c6d9
- (BOOL)_deferDTraceLogging;	// 0x34e7c4b1
- (BOOL)_describesSameRestrictionAsConstraint:(id)constraint;	// 0x34e7e745
- (id)_descriptionforSymbolicConstant;	// 0x34e7cb31
- (BOOL)_effectiveConstant:(float *)constant error:(id *)error;	// 0x34e7c7fd
- (CGSize)_engineToContainerScalingCoefficients;	// 0x34e7f05d
- (float)_fudgeIncrement;	// 0x34e7c199
- (id)_identifier;	// 0x34e7bf4d
- (BOOL)_isFudgeable;	// 0x34e7c16d
- (BOOL)_loweredConstantIsRounded;	// 0x34e7c54d
- (id)_loweredExpression;	// 0x34e7f369
- (id)_loweredExpressionReportingConstantIsRounded:(BOOL *)rounded;	// 0x34e7f09d
- (void)_makeExtraVars;	// 0x34e7ee65
- (id)_markerAndPositiveExtraVar;	// 0x34e7c409
- (id)_negativeExtraVar;	// 0x34e7c45d
- (BOOL)_nsib_isRedundant;	// 0x34e7f955
- (BOOL)_nsib_isRedundantInEngine:(id)engine;	// 0x34e7f539
- (int)_primitiveConstraintType;	// 0x34e7c4dd
- (id)_priorityDescription;	// 0x34e7d725
- (void)_removeFromEngine:(id)engine;	// 0x34e7ed21
- (void)_setDeferDTraceLogging:(BOOL)logging;	// 0x34e7c4c5
- (void)_setFirstAttribute:(int)attribute;	// 0x34e7b869
- (void)_setFirstItem:(id)item;	// 0x34e800d1
- (void)_setIdentifier:(id)identifier;	// 0x34e7bfd9
- (void)_setMarkerAndPositiveErrorVar:(id)var;	// 0x34e7c419
- (void)_setMultiplier:(float)multiplier;	// 0x34e7b9ed
- (void)_setNegativeExtraVar:(id)var;	// 0x34e7c46d
- (void)_setPrimitiveConstraintType:(int)type;	// 0x34e7c509
- (void)_setRelation:(int)relation;	// 0x34e7b92d
- (void)_setSecondAttribute:(int)attribute;	// 0x34e7bb4d
- (void)_setSecondItem:(id)item;	// 0x34e800fd
- (void)_setSymbolicConstant:(id)constant;	// 0x34e7cda1
- (void)_setSymbolicConstant:(id)constant constant:(float)constant2;	// 0x34e7c8a1
- (id)_symbolicConstant;	// 0x34e7cd01
- (BOOL)_tryToChangeContainerGeometryWithUndoHandler:(id)undoHandler;	// 0x34e7c58d
// converted property getter: - (id)animations;	// 0x34e7c149
- (id)asciiArtDescription;	// 0x34e7d2e5
// declared property getter: - (float)constant;	// 0x34e7cc31
// declared property getter: - (id)container;	// 0x34e7c53d
- (void)dealloc;	// 0x34e7cf55
- (id)description;	// 0x34e7db6d
- (id)descriptionAccessory;	// 0x34e7d7a5
- (void)encodeWithCoder:(id)coder;	// 0x34e7df01
- (id)equationDescription;	// 0x34e7d7a9
// declared property getter: - (int)firstAttribute;	// 0x34e7b859
// declared property getter: - (id)firstItem;	// 0x34e800bd
// declared property getter: - (BOOL)hasBeenLowered;	// 0x34e7bf21
// declared property getter: - (id)identifier;	// 0x34e7c129
// declared property getter: - (float)multiplier;	// 0x34e7b9dd
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)marker;	// 0x34e7c3ed
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x34e7f3bd
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x34e7c401
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x34e7c3fd
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x34e7c405
// declared property getter: - (float)priority;	// 0x34e7bc29
- (float)priorityForVariable:(id)variable;	// 0x34e7ea6d
// declared property getter: - (int)relation;	// 0x34e7b915
// declared property getter: - (int)secondAttribute;	// 0x34e7bb39
// declared property getter: - (id)secondItem;	// 0x34e800e9
// converted property setter: - (void)setAnimations:(id)animations;	// 0x34e7c159
// declared property setter: - (void)setConstant:(float)constant;	// 0x34e7cced
// declared property setter: - (void)setContainer:(id)container;	// 0x34e7c561
- (void)setHasBeenLowered:(BOOL)lowered;	// 0x34e7bf35
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x34e7c139
// declared property setter: - (void)setPriority:(float)priority;	// 0x34e7bc39
// declared property setter: - (void)setShouldBeArchived:(BOOL)beArchived;	// 0x34e7bc11
// declared property setter: - (void)setSymbolicConstant:(id)constant;	// 0x34e7ceed
// declared property getter: - (BOOL)shouldBeArchived;	// 0x34e7bbfd
// declared property getter: - (id)symbolicConstant;	// 0x34e7cedd
@end

