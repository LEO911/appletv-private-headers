/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x34df16e9; S=0x34d41221; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x34df189d; S=0x34df1965; converted property
@property(retain) id currencyCode;	// G=0x34df2c21; S=0x34df2ce1; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x34df19e9; S=0x34df1aa9; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x34df4865; S=0x34df4925; converted property
@property(retain) id currencySymbol;	// G=0x34df2d81; S=0x34df2e41; converted property
@property(retain) id decimalSeparator;	// G=0x34df1729; S=0x34df17e9; converted property
@property(retain) id exponentSymbol;	// G=0x34df35c1; S=0x34df3681; converted property
@property(assign) unsigned formatWidth;	// G=0x34df39b9; S=0x34df3a85; converted property
@property(assign) unsigned formatterBehavior;	// G=0x34df1035; S=0x34df1075; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x34df0fed; S=0x34d69cf1; converted property
@property(retain) id groupingSeparator;	// G=0x34df1c95; S=0x34df1d55; converted property
@property(assign) unsigned groupingSize;	// G=0x34df3721; S=0x34df37ed; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x34df2ee1; S=0x34df2fa1; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x34df49c5; S=0x34df4aa1; converted property
@property(retain) id locale;	// G=0x34df0f45; S=0x34d69c85; converted property
@property(retain) id maximum;	// G=0x34df47a9; S=0x34df47d1; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x34df45a1; S=0x34df466d; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x34df4309; S=0x34df43d5; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x34df4dd1; S=0x34df4e9d; converted property
@property(retain) id minimum;	// G=0x34df46ed; S=0x34df4715; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x34df4455; S=0x34df4521; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x34df41bd; S=0x34df4289; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x34df4c85; S=0x34df4d51; converted property
@property(retain) id minusSign;	// G=0x34df3301; S=0x34df33c1; converted property
@property(retain) id multiplier;	// G=0x34df3b05; S=0x34df3bc5; converted property
@property(retain) id negativeFormat;	// G=0x34df10d9; S=0x34df11ad; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x34df2541; S=0x34d411c9; converted property
@property(retain) id negativePrefix;	// G=0x34df2961; S=0x34df2a21; converted property
@property(retain) id negativeSuffix;	// G=0x34df2ac1; S=0x34df2b81; converted property
@property(retain) id nilSymbol;	// G=0x34df2045; S=0x34d41119; converted property
@property(retain) id notANumberSymbol;	// G=0x34df21a5; S=0x34df2265; converted property
@property(assign) unsigned numberStyle;	// G=0x34df0ea5; S=0x34d412a1; converted property
@property(retain) id paddingCharacter;	// G=0x34df3c65; S=0x34df3d25; converted property
@property(assign) unsigned paddingPosition;	// G=0x34df3dc5; S=0x34df3e91; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x34df4f1d; S=0x34df4f65; converted property
@property(retain) id perMillSymbol;	// G=0x34df31a1; S=0x34df3261; converted property
@property(retain) id percentSymbol;	// G=0x34df3041; S=0x34df3101; converted property
@property(retain) id plusSign;	// G=0x34df3461; S=0x34df3521; converted property
@property(retain) id positiveFormat;	// G=0x34df1409; S=0x34df14c1; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x34df23e1; S=0x34d41171; converted property
@property(retain) id positivePrefix;	// G=0x34df26a1; S=0x34df2761; converted property
@property(retain) id positiveSuffix;	// G=0x34df2801; S=0x34df28c1; converted property
@property(retain) id roundingIncrement;	// G=0x34df405d; S=0x34df411d; converted property
@property(assign) unsigned roundingMode;	// G=0x34df3f11; S=0x34df3fdd; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x34df386d; S=0x34df3939; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x34df25c5; S=0x34df2649; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x34df132d; S=0x34df13b1; converted property
@property(retain) id textAttributesForNil;	// G=0x34df20c9; S=0x34df214d; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x34df2305; S=0x34df2389; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x34df2465; S=0x34df24e9; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x34df160d; S=0x34df1691; converted property
@property(retain) id textAttributesForZero;	// G=0x34df1f69; S=0x34df1fed; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x34df1b49; S=0x34df1c11; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x34df4b25; S=0x34df4c01; converted property
@property(retain) id zeroSymbol;	// G=0x34df1e09; S=0x34df1ec9; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x34d410e5
+ (void)initialize;	// 0x34d60f55
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x34df0e2d
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x34d60f79
- (id)init;	// 0x34d40d65
- (id)initWithCoder:(id)coder;	// 0x34df03f1
- (void *)__Keynote_NOOP;	// 0x34df0121
- (void)_clearFormatter;	// 0x34d4127d
- (void)_regenerateFormatter;	// 0x34d4144d
- (void)_reset;	// 0x34df0125
- (void)_setUsesCharacterDirection:(BOOL)direction;	// 0x34df509d
- (BOOL)_usesCharacterDirection;	// 0x34df4fc1
// converted property getter: - (BOOL)allowsFloats;	// 0x34df16e9
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x34df189d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x34df0571
- (id)copyWithZone:(NSZone *)zone;	// 0x34df02e1
// converted property getter: - (id)currencyCode;	// 0x34df2c21
// converted property getter: - (id)currencyDecimalSeparator;	// 0x34df19e9
// converted property getter: - (id)currencyGroupingSeparator;	// 0x34df4865
// converted property getter: - (id)currencySymbol;	// 0x34df2d81
- (void)dealloc;	// 0x34d6a871
// converted property getter: - (id)decimalSeparator;	// 0x34df1729
- (void)encodeWithCoder:(id)coder;	// 0x34df0349
// converted property getter: - (id)exponentSymbol;	// 0x34df35c1
- (void)finalize;	// 0x34df029d
// converted property getter: - (unsigned)formatWidth;	// 0x34df39b9
// converted property getter: - (unsigned)formatterBehavior;	// 0x34df1035
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x34df0fed
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x34df0575
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x34df0dd5
// converted property getter: - (id)groupingSeparator;	// 0x34df1c95
// converted property getter: - (unsigned)groupingSize;	// 0x34df3721
// converted property getter: - (id)internationalCurrencySymbol;	// 0x34df2ee1
// converted property getter: - (BOOL)isLenient;	// 0x34df49c5
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x34df4f1d
// converted property getter: - (id)locale;	// 0x34df0f45
// converted property getter: - (id)maximum;	// 0x34df47a9
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x34df45a1
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x34df4309
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x34df4dd1
// converted property getter: - (id)minimum;	// 0x34df46ed
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x34df4455
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x34df41bd
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x34df4c85
// converted property getter: - (id)minusSign;	// 0x34df3301
// converted property getter: - (id)multiplier;	// 0x34df3b05
// converted property getter: - (id)negativeFormat;	// 0x34df10d9
// converted property getter: - (id)negativeInfinitySymbol;	// 0x34df2541
// converted property getter: - (id)negativePrefix;	// 0x34df2961
// converted property getter: - (id)negativeSuffix;	// 0x34df2ac1
// converted property getter: - (id)nilSymbol;	// 0x34df2045
// converted property getter: - (id)notANumberSymbol;	// 0x34df21a5
- (id)numberFromString:(id)string;	// 0x34df0df5
// converted property getter: - (unsigned)numberStyle;	// 0x34df0ea5
// converted property getter: - (id)paddingCharacter;	// 0x34df3c65
// converted property getter: - (unsigned)paddingPosition;	// 0x34df3dc5
// converted property getter: - (id)perMillSymbol;	// 0x34df31a1
// converted property getter: - (id)percentSymbol;	// 0x34df3041
// converted property getter: - (id)plusSign;	// 0x34df3461
// converted property getter: - (id)positiveFormat;	// 0x34df1409
// converted property getter: - (id)positiveInfinitySymbol;	// 0x34df23e1
// converted property getter: - (id)positivePrefix;	// 0x34df26a1
// converted property getter: - (id)positiveSuffix;	// 0x34df2801
// converted property getter: - (id)roundingIncrement;	// 0x34df405d
// converted property getter: - (unsigned)roundingMode;	// 0x34df3f11
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x34df386d
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x34d41221
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x34df1965
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x34df2ce1
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x34df1aa9
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x34df4925
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x34df2e41
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x34df17e9
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x34df3681
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x34df3a85
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x34df1075
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x34d69cf1
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x34df1d55
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x34df37ed
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x34df2fa1
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x34df4aa1
// converted property setter: - (void)setLocale:(id)locale;	// 0x34d69c85
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x34df47d1
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x34df466d
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x34df43d5
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x34df4e9d
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x34df4715
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x34df4521
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x34df4289
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x34df4d51
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x34df33c1
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x34df3bc5
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x34df11ad
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x34d411c9
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x34df2a21
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x34df2b81
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x34d41119
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x34df2265
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x34d412a1
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x34df3d25
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x34df3e91
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x34df4f65
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x34df3261
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x34df3101
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x34df3521
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x34df14c1
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x34d41171
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x34df2761
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x34df28c1
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x34df411d
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x34df3fdd
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x34df3939
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x34df2649
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x34df13b1
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x34df214d
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x34df2389
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x34df24e9
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x34df1691
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x34df1fed
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x34df1c11
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x34df4c01
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x34df1ec9
- (id)stringForObjectValue:(id)objectValue;	// 0x34d41305
- (id)stringFromNumber:(id)number;	// 0x34d69d4d
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x34df25c5
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x34df132d
// converted property getter: - (id)textAttributesForNil;	// 0x34df20c9
// converted property getter: - (id)textAttributesForNotANumber;	// 0x34df2305
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x34df2465
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x34df160d
// converted property getter: - (id)textAttributesForZero;	// 0x34df1f69
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x34df1b49
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x34df4b25
// converted property getter: - (id)zeroSymbol;	// 0x34df1e09
@end

