/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import <NSObject.h> // Unknown library
#import "Notes-Structs.h"

@class NSNumber, NSManagedObjectModel, NSManagedObjectContext, NSPersistentStoreCoordinator, NSPredicate, CPExclusiveLock, NoteStoreObject, NoteAccountObject, NSMutableDictionary, NSString;

@interface NoteContext : NSObject {
	NSManagedObjectModel *_managedObjectModel;	// 4 = 0x4
	NSManagedObjectContext *_managedObjectContext;	// 8 = 0x8
	NSPersistentStoreCoordinator *_persistentStoreCoordinator;	// 12 = 0xc
@private
	NSPredicate *_searchPredicate;	// 16 = 0x10
	NoteStoreObject *_localStore;	// 20 = 0x14
@protected
	NoteAccountObject *_localAccount;	// 24 = 0x18
	CXIndexRef __SharedNoteStoreSearchIndex;	// 28 = 0x1c
	CPExclusiveLock *__SharedNoteStoreSearchIndexLock;	// 32 = 0x20
	int __SharedNoteStoreSearchIndexCount;	// 36 = 0x24
	BOOL _isIndexing;	// 40 = 0x28
	NSManagedObjectContext *_nextIdContext;	// 44 = 0x2c
	CPExclusiveLock *_nextIdLock;	// 48 = 0x30
	NSNumber *_nextId;	// 52 = 0x34
	CPExclusiveLock *_objectCreationLock;	// 56 = 0x38
	unsigned _notificationCount;	// 60 = 0x3c
	BOOL _logChanges;	// 64 = 0x40
	BOOL _indexInBatches;	// 65 = 0x41
	BOOL _hasPriorityInSaveConflicts;	// 66 = 0x42
	BOOL _inMigrator;	// 67 = 0x43
	NSString *_testingFilePrefix;	// 68 = 0x44
	NSString *_testingFilePath;	// 72 = 0x48
@private
	NSMutableDictionary *_notePropertyObjectsRealized;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL isIndexing;	// G=0x30e51cdd; @synthesize=_isIndexing
@property(readonly, retain) NoteAccountObject *localAccount;	// G=0x30e49fc1; converted property
@property(readonly, retain) NoteStoreObject *localStore;	// G=0x30e49f29; converted property
@property(readonly, assign, nonatomic) NSManagedObjectContext *managedObjectContext;	// G=0x30e4cc41; 
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x30e4cde9; converted property
@property(readonly, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;	// G=0x30e4d009; converted property
+ (BOOL)databaseIsCorrupt:(id)corrupt;	// 0x30e44839
+ (BOOL)shouldLogIndexing;	// 0x30e447b9
- (id)init;	// 0x30e469a9
- (id)initForMigrator;	// 0x30e465fd
- (id)initWithTestingFilePrefix:(id)testingFilePrefix;	// 0x30e46661
- (id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;	// 0x30e466d1
- (id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;	// 0x30e46575
- (void).cxx_destruct;	// 0x30e51cfd
- (void)_createLocalAccount:(id *)account andStore:(id *)store;	// 0x30e44b19
- (id)_notePropertyObjectForKey:(id)key;	// 0x30e4a841
- (id)accountForAccountId:(id)accountId;	// 0x30e49af5
- (id)allAccounts;	// 0x30e49795
- (id)allNotes;	// 0x30e489bd
- (id)allNotesInCollection:(id)collection;	// 0x30e48acd
- (id)allNotesMatchingPredicate:(id)predicate;	// 0x30e48ba5
- (id)allNotesWithoutBodiesInCollection:(id)collection;	// 0x30e48f11
- (id)allStores;	// 0x30e49281
- (id)allVisibleNotes;	// 0x30e4820d
- (id)allVisibleNotesInCollection:(id)collection;	// 0x30e48255
- (id)allVisibleNotesMatchingPredicate:(id)predicate;	// 0x30e4832d
- (void)cleanUpLocks;	// 0x30e519f9
- (void)clearCaches;	// 0x30e470d5
- (id)collectionForInfo:(id)info;	// 0x30e49065
- (id)collectionForObjectID:(id)objectID;	// 0x30e4731d
- (id)copyNotesForSearch:(void *)search complete:(char *)complete;	// 0x30e5101d
- (id)copyNotesForSearch:(void *)search predicate:(id)predicate complete:(char *)complete;	// 0x30e51055
- (unsigned)countOfNotes;	// 0x30e48a4d
- (unsigned)countOfNotesInCollection:(id)collection;	// 0x30e48b3d
- (unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;	// 0x30e48c5d
- (unsigned)countOfStores;	// 0x30e4956d
- (unsigned)countOfVisibleNotes;	// 0x30e48231
- (unsigned)countOfVisibleNotesInCollection:(id)collection;	// 0x30e482c5
- (unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;	// 0x30e484b9
- (void)dealloc;	// 0x30e46a09
- (id)defaultStoreForNewNote;	// 0x30e49ded
- (BOOL)deleteAccount:(id)account;	// 0x30e4a441
- (void)deleteChanges:(id)changes;	// 0x30e476fd
- (BOOL)deleteIndexFile;	// 0x30e51c61
- (void)deleteNote:(id)note;	// 0x30e4744d
- (void)deleteNoteRegardlessOfConstraints:(id)constraints;	// 0x30e476a9
- (BOOL)deleteStore:(id)store;	// 0x30e4a4cd
- (void)destroySearchIndex;	// 0x30e4e709
- (void)enableChangeLogging:(BOOL)logging;	// 0x30e47855
- (id)findNotesWithText:(id)text betweenDate:(id)date andDate:(id)date3;	// 0x30e513c9
- (BOOL)forceDeleteAccount:(id)account;	// 0x30e4a29d
- (void)forceSetUpUniqueObjects;	// 0x30e456bd
- (id)getNextIdObject;	// 0x30e4bb7d
- (void)handleMigration;	// 0x30e4ad59
- (BOOL)handleSaveErrors:(id)errors;	// 0x30e47aa1
- (BOOL)hasMultipleEnabledStores;	// 0x30e4a771
- (void)indexInBatches:(BOOL)batches;	// 0x30e4ec31
- (void)indexNotes:(id)notes;	// 0x30e4d919
- (void)invalidate;	// 0x30e47879
// declared property getter: - (BOOL)isIndexing;	// 0x30e51cdd
- (id)liveNotesNeedingBodiesPredicate;	// 0x30e46b11
// converted property getter: - (id)localAccount;	// 0x30e49fc1
// converted property getter: - (id)localStore;	// 0x30e49f29
// declared property getter: - (id)managedObjectContext;	// 0x30e4cc41
// converted property getter: - (id)managedObjectModel;	// 0x30e4cde9
- (id)newFRCForCollection:(id)collection delegate:(id)delegate;	// 0x30e46b95
- (id)newFetchRequestForNotes;	// 0x30e46f39
- (void *)newSearchContextWithText:(id)text;	// 0x30e50f91
- (id)newlyAddedAccount;	// 0x30e49a81
- (id)newlyAddedNote;	// 0x30e471bd
- (id)newlyAddedStore;	// 0x30e4920d
- (id)nextIndex;	// 0x30e4c2b5
- (id)noteChangeWithType:(int)type store:(id)store;	// 0x30e4fb49
- (id)noteForObjectID:(id)objectID;	// 0x30e48d05
- (BOOL)noteIsSafeToAccess:(id)access;	// 0x30e51a6d
- (id)notesForIntegerIds:(id)integerIds;	// 0x30e48d9d
- (id)notesToResumeIndexing;	// 0x30e4d80d
- (id)pathForIndex;	// 0x30e4c981
- (id)pathForPersistentStore;	// 0x30e4c815
// converted property getter: - (id)persistentStoreCoordinator;	// 0x30e4d009
- (id)propertyValueForKey:(id)key;	// 0x30e4acf1
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;	// 0x30e4ec55
- (void)removeConflictingSqliteAndIdxFiles;	// 0x30e460a9
- (void)removeSqliteAndIdxFiles;	// 0x30e45e29
- (void)resetNotificationCount;	// 0x30e4ed81
- (void)resumeIndexing;	// 0x30e4eaf5
- (id)rootDirectory;	// 0x30e4c7e1
- (BOOL)save:(id *)save;	// 0x30e47939
- (void)saveNotesToResumeIndexing:(id)resumeIndexing;	// 0x30e4d53d
- (BOOL)saveOutsideApp:(id *)app;	// 0x30e47911
- (BOOL)saveSilently:(id *)silently;	// 0x30e48069
- (CXIndexRef)searchIndex:(char *)index;	// 0x30e4e0dd
- (void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;	// 0x30e4cb55
- (void)setPropertyValue:(id)value forKey:(id)key;	// 0x30e4abc5
- (void)setUpCoreDataStack;	// 0x30e461d9
- (BOOL)setUpLastIndexTid;	// 0x30e451c9
- (BOOL)setUpLocalAccountAndStore;	// 0x30e44c91
- (void)setUpUniqueObjects;	// 0x30e45809
- (BOOL)shouldDisableLocalStore;	// 0x30e4a6c5
- (BOOL)shouldResumeIndexing;	// 0x30e4d791
- (void)sortNotes:(id)notes;	// 0x30e47101
- (id)storeForObjectID:(id)objectID;	// 0x30e473b5
- (id)storeOptions;	// 0x30e449cd
- (void)tearDownCoreDataStack;	// 0x30e4645d
- (void)trackChanges:(id)changes;	// 0x30e4fd2d
- (void)updateSearchIndex:(id)index;	// 0x30e4eda5
- (id)urlForPersistentStore;	// 0x30e4caed
- (id)visibleNoteForObjectID:(id)objectID;	// 0x30e48635
- (id)visibleNotesForIntegerIds:(id)integerIds;	// 0x30e487a1
- (id)visibleNotesPredicate;	// 0x30e46a59
- (void)wrapUpIndexing;	// 0x30e4e7f9
@end

