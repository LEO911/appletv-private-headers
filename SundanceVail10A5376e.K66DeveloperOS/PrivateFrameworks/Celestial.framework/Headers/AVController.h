/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import <NSObject.h> // Unknown library


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x3298566d; S=0x3299d7e1; converted property
@property(assign) id delegate;	// G=0x3299e795; S=0x32984fe1; converted property
@property(assign) BOOL muted;	// G=0x3299d989; S=0x3299da85; converted property
@property(retain) id outputQTESFilePath;	// G=0x32989ea5; S=0x3299dc61; converted property
@property(retain) id queue;	// G=0x3299cb15; S=0x32982bed; converted property
@property(retain) id queueFeeder;	// G=0x3299d2d9; S=0x3298d7c9; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x3299dce5; S=0x32985191; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x3299c4d1; S=0x3299c4e9; converted property
@property(retain) id vibrationPattern;	// G=0x3299c5c1; S=0x3299c541; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x3299db9d; S=0x3299dbb1; converted property
@property(assign) float volume;	// G=0x32984f3d; S=0x3298dbe5; converted property
+ (id)avController;	// 0x3299c7b9
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x3299c7f5
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x3299c601
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x3299c839
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x3298c819
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x3299c765
+ (BOOL)isSupportedMimeType:(id)type;	// 0x3299c711
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x3298dcb5
- (id)init;	// 0x329824b5
- (id)initForStreaming;	// 0x3299c981
- (id)initWithError:(id *)error;	// 0x329829ed
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x329824c9
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x32982501
- (id)_figPlayerNotifications;	// 0x3299e84d
- (BOOL)activate:(id *)activate;	// 0x3299d659
- (id)addNextFeederItemToQueue;	// 0x329859a5
- (void)applyDesiredRepeatMode;	// 0x3299e339
- (id)attributeForKey:(id)key;	// 0x32984731
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x32983539
- (BOOL)beginInterruption:(id *)interruption;	// 0x3299d531
- (BOOL)beginRepeatGap;	// 0x3298e171
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x32987531
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x32987559
- (BOOL)canBeginInterruption;	// 0x3299d5e5
- (void)cancelAllCGImageRequests;	// 0x3299e125
- (void)cancelContinueAfterRepeatGap;	// 0x329894c5
- (void)checkQueueSpace;	// 0x32985919
- (void)continueAfterRepeatGap;	// 0x3299d305
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x3299cb09
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x32989d41
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x3298575d
- (id)currentItem;	// 0x3298577d
- (void)currentItemHasChanged:(id)changed;	// 0x32987e59
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x329879c1
// converted property getter: - (double)currentTime;	// 0x3298566d
- (void)dealloc;	// 0x3299357d
// converted property getter: - (id)delegate;	// 0x3299e795
- (void)dequeueDeadItem;	// 0x3299f1f9
- (void)dequeueFirstItem;	// 0x3298cbbd
- (void)endInterruptionWithStatus:(id)status;	// 0x3299d745
- (void)ensurePlaybackQueueImmed;	// 0x3299f0bd
- (int)eqPreset;	// 0x3299db89
- (id)errorWithDescription:(id)description code:(long)code;	// 0x3299d495
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x3299d0f1
- (void)feederRangeWasInserted:(id)inserted;	// 0x3299cb29
- (void)feederRangeWasRemoved:(id)removed;	// 0x3299ce31
- (void)figPlayerNotificationHandler:(id)handler;	// 0x3299f221
- (void)fmpEffectiveVolumeDidChange;	// 0x3299e1ed
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x32988319
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x3299307d
- (BOOL)havePlayedCurrentItem;	// 0x3299d2f1
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x3298c8f5
- (BOOL)isCurrentItemReady;	// 0x3299f06d
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x3299cb05
- (BOOL)isValid;	// 0x3299e7ed
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x3298e089
- (id)lkLayer;	// 0x3299dccd
- (void)logPerformanceDataForCurrentItem;	// 0x3299eb05
- (void)makeCurrentItemReady;	// 0x32989501
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x3298d785
// converted property getter: - (BOOL)muted;	// 0x3299d989
- (BOOL)okToNotifyFromThisThread;	// 0x32987d29
// converted property getter: - (id)outputQTESFilePath;	// 0x32989ea5
- (void)pause;	// 0x3298c8e1
- (BOOL)play:(id *)play;	// 0x3299d35d
- (BOOL)playNextItem:(id *)item;	// 0x3298cb15
- (AVControllerPrivate *)privateStorage;	// 0x3299caf5
// converted property getter: - (id)queue;	// 0x3299cb15
// converted property getter: - (id)queueFeeder;	// 0x3299d2d9
- (float)rate;	// 0x32987fdd
- (void)rateDidChangeToRate:(float)rate;	// 0x3298b6d9
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x3299ef01
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x3298d425
- (int)repeatMode;	// 0x3298d7b5
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x3299de81
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x3299de5d
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x3299d37d
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x3299e7a9
- (void)scheduleQueueSpaceCheck;	// 0x32989259
- (void)scheduleUpdateTimeMarkerObservations;	// 0x3298807d
- (void)seekToDate:(id)date;	// 0x3299d851
- (void)setAVItemClass:(Class)aClass;	// 0x3299c925
- (void)setApplyVideoTrackMatrix;	// 0x3299dcfd
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x32983859
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x3299d7e1
- (void)setCurrentTime:(double)time options:(int)options;	// 0x3298d8c5
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x32984fe1
- (void)setEQPreset:(int)preset;	// 0x32985069
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x3298c95d
- (void)setLayer:(id)layer;	// 0x32985291
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x3299da85
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x3299dc61
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x3299f121
// converted property setter: - (void)setQueue:(id)queue;	// 0x32982bed
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x3298d7c9
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x329853b1
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x32989335
- (BOOL)setRepeatMode:(int)mode;	// 0x3298533d
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x32985191
- (void)setSubtitleRecipient:(id)recipient;	// 0x32985115
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x3299c4e9
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x3299c541
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x3299dbb1
// converted property setter: - (void)setVolume:(float)volume;	// 0x3298dbe5
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x3298a905
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x3299dce5
- (void)stepByCount:(int)count;	// 0x3299d8ed
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x3298d2a1
- (long)updateActionAtEnd;	// 0x329851a9
- (void)updateTimeMarkerObservations;	// 0x3298ab21
// converted property getter: - (BOOL)vibrationEnabled;	// 0x3299c4d1
// converted property getter: - (id)vibrationPattern;	// 0x3299c5c1
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x3299db9d
// converted property getter: - (float)volume;	// 0x32984f3d
@end

