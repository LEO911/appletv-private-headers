/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import "AVRecorderImpl.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary;

@interface AVRecorderAudioQueueImpl : NSObject <AVRecorderImpl> {
	BOOL _isActive;	// 4 = 0x4
	BOOL _isRecording;	// 5 = 0x5
	BOOL _isWriting;	// 6 = 0x6
	NSMutableDictionary *_attributes;	// 8 = 0x8
	unsigned long _fileType;	// 12 = 0xc
	unsigned long _audioCodec;	// 16 = 0x10
	long long _maxPCMFramesToRecord;	// 20 = 0x14
	BOOL _haveRecordedMaxPCMFrames;	// 28 = 0x1c
	AudioStreamBasicDescription _recordingFormat;	// 32 = 0x20
	OpaqueAudioFileID *_audioFile;	// 72 = 0x48
	OpaqueAudioQueue *_audioQueue;	// 76 = 0x4c
	unsigned long _numDeviceChannels;	// 80 = 0x50
	AudioQueueLevelMeterState *_audioLevels;	// 84 = 0x54
	AudioQueueLevelMeterState *_audioLevelsDB;	// 88 = 0x58
	unsigned long _totalBytesRecorded;	// 92 = 0x5c
	unsigned long _totalPacketsRecorded;	// 96 = 0x60
	unsigned long _totalFramesRecorded;	// 100 = 0x64
	AudioQueueBuffer *_buffers[3];	// 104 = 0x68
	BOOL _bufferUsed[3];	// 116 = 0x74
}
@property(retain) id filePath;	// G=0x329a4941; S=0x329a48f1; converted property
@property(readonly, assign) BOOL isActive;	// G=0x329a50ad; converted property
@property(readonly, assign) BOOL isRecording;	// G=0x329a5491; converted property
@property(assign) float micVolume;	// G=0x329a54a1; S=0x329a5505; converted property
- (id)init;	// 0x329a4689
- (id)initWithAttributes:(id)attributes;	// 0x329a46c5
- (BOOL)activate:(id *)activate;	// 0x329a4ab9
- (id)attributeForKey:(id)key;	// 0x329a4a99
- (BOOL)audioCurrentAverageDecibelLevels:(float *)levels andPeakDecibelLevels:(float *)levels2;	// 0x329a5755
- (BOOL)audioCurrentAverageVolumeLevels:(float *)levels andPeakVolumeLevels:(float *)levels2;	// 0x329a5731
- (BOOL)audioCurrentAverageVolumeLevels:(float *)levels andPeakVolumeLevels:(float *)levels2 useDB:(BOOL)db;	// 0x329a565d
- (unsigned)audioNumDeviceChannels;	// 0x329a5619
- (BOOL)autoFocusAtPoint:(CGPoint)point;	// 0x329a50c1
- (void)copyEncoderCookieToFile;	// 0x329a5779
- (void)deactivate;	// 0x329a4f05
- (void)dealloc;	// 0x329a4855
// converted property getter: - (id)filePath;	// 0x329a4941
- (void)haveABuffer:(AudioQueueBuffer *)buffer withTimeStamp:(const AudioTimeStamp *)timeStamp andNumPackets:(unsigned long)packets andPacketDescs:(const AudioStreamPacketDescription *)descs;	// 0x329a585d
// converted property getter: - (BOOL)isActive;	// 0x329a50ad
// converted property getter: - (BOOL)isRecording;	// 0x329a5491
// converted property getter: - (float)micVolume;	// 0x329a54a1
- (double)recordedDuration;	// 0x329a55b5
- (long long)recordedFileSizeInBytes;	// 0x329a5571
- (void)setAttribute:(id)attribute forKey:(id)key;	// 0x329a4971
// converted property setter: - (void)setFilePath:(id)path;	// 0x329a48f1
// converted property setter: - (void)setMicVolume:(float)volume;	// 0x329a5505
- (BOOL)start;	// 0x329a50c5
- (void)stop;	// 0x329a5361
- (BOOL)takePhoto;	// 0x329a50bd
@end

