/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DABookmarkDAV.framework/DABookmarkDAV
 */

#import <DAAccount.h> // Unknown library
#import "CoreDAVAccountInfoProvider.h"
#import "CoreDAVLogDelegate.h"
#import "CoreDAVDiscoveryTaskGroupDelegate.h"

@class DACoreDAVTaskManager, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger;

@interface BookmarkDAVAccount : DAAccount <CoreDAVAccountInfoProvider, CoreDAVLogDelegate, CoreDAVDiscoveryTaskGroupDelegate> {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 64 = 0x40
	DACoreDAVLogger *_curLogger;	// 68 = 0x44
}
@property(assign) int bookmarkDAVAccountVersion;	// G=0x30e1a6e5; S=0x30e1a701; 
@property(retain) id host;	// G=0x30e1a4c9; S=0x30e1a4e5; converted property
@property(assign) int port;	// G=0x30e1a561; S=0x30e1a57d; converted property
@property(retain) id principalURL;	// G=0x30e1a311; S=0x30e1a271; converted property
@property(retain) id scheme;	// G=0x30e1a599; S=0x30e1a5b5; converted property
@property(retain) id serverComplianceClasses;	// G=0x30e1aa15; S=0x30e1aa19; converted property
@property(retain) id serverRoot;	// G=0x30e1a6dd; S=0x30e1a6e1; converted property
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x30e19d29; converted property
@property(assign) BOOL useSSL;	// G=0x30e1a67d; S=0x30e1a6ad; converted property
@property(retain) id username;	// G=0x30e1a431; S=0x30e1a44d; converted property
+ (Class)accountClass;	// 0x30e195a1
+ (Class)clientClass;	// 0x30e195bd
+ (id)defaultProperties;	// 0x30e1929d
+ (id)supportedDataclasses;	// 0x30e195d9
- (id)init;	// 0x30e193e9
- (id)initWithProperties:(id)properties;	// 0x30e19429
- (id)_oldURLsForKeychain;	// 0x30e19de1
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x30e19f0d
- (id)_validationErrorFromRawError:(id)rawError;	// 0x30e19989
- (BOOL)accountNeedsUpgrade;	// 0x30e1a17d
// declared property getter: - (int)bookmarkDAVAccountVersion;	// 0x30e1a6e5
- (void)checkValidityWithConsumer:(id)consumer;	// 0x30e19605
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x30e1ab31
- (int)coreDAVLogLevel;	// 0x30e1ab11
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x30e1ab99
- (int)coreDAVOutputLevel;	// 0x30e1ab29
- (void)coreDAVTransmittedDataFinished;	// 0x30e1abb9
- (void)dealloc;	// 0x30e194e5
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x30e19ba5
- (BOOL)handleCertificateError:(id)error;	// 0x30e1ab0d
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x30e1aadd
// converted property getter: - (id)host;	// 0x30e1a4c9
- (BOOL)isEqualToAccount:(id)account;	// 0x30e1a71d
- (id)localizedIdenticalAccountFailureMessage;	// 0x30e1a8ed
- (id)localizedInvalidPasswordMessage;	// 0x30e1a965
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x30e1a371
// converted property getter: - (int)port;	// 0x30e1a561
// converted property getter: - (id)principalURL;	// 0x30e1a311
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x30e1aa49
// converted property getter: - (id)scheme;	// 0x30e1a599
// converted property getter: - (id)serverComplianceClasses;	// 0x30e1aa15
// converted property getter: - (id)serverRoot;	// 0x30e1a6dd
// declared property setter: - (void)setBookmarkDAVAccountVersion:(int)version;	// 0x30e1a701
// converted property setter: - (void)setHost:(id)host;	// 0x30e1a4e5
// converted property setter: - (void)setPort:(int)port;	// 0x30e1a57d
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x30e1a271
// converted property setter: - (void)setScheme:(id)scheme;	// 0x30e1a5b5
// converted property setter: - (void)setServerComplianceClasses:(id)classes;	// 0x30e1aa19
// converted property setter: - (void)setServerRoot:(id)root;	// 0x30e1a6e1
- (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x30e19945
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x30e1a6ad
// converted property setter: - (void)setUsername:(id)username;	// 0x30e1a44d
- (BOOL)shouldLogTransmittedData;	// 0x30e1ab75
- (id)spinnerIdentifiers;	// 0x30e1aa21
- (id)stateString;	// 0x30e19d79
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x30e195f9
// converted property getter: - (id)taskManager;	// 0x30e19d29
- (BOOL)upgradeAccount;	// 0x30e1a0f5
// converted property getter: - (BOOL)useSSL;	// 0x30e1a67d
- (id)userAgentHeader;	// 0x30e1aa1d
// converted property getter: - (id)username;	// 0x30e1a431
@end

