/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "NSCoding.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import "MPFilterSupport.h"
#import "ATVSlideshow-Structs.h"
#import "MPAudioSupport.h"
#import "MPActionableSupport.h"
#import "MPGeometrySupport.h"
#import "MPEffectSupport.h"
#import "MPActionableSupportInternal.h"
#import <NSObject.h> // Unknown library

@class MPEffectContainer, MCContainerEffect, NSString, NSArray, NSMutableDictionary, NSMutableArray, MCPlugParallel, MPAudioPlaylist;
@protocol MZEffectTiming;

@interface MPEffect : NSObject <MPActionableSupportInternal, NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport, MPAudioSupport, MPActionableSupport, MPGeometrySupport, MPEffectSupport> {
	NSMutableArray *_slides;	// 4 = 0x4
	NSMutableArray *_secondarySlides;	// 8 = 0x8
	NSMutableArray *_texts;	// 12 = 0xc
	NSMutableArray *_filters;	// 16 = 0x10
	NSMutableDictionary *_attributes;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCContainerEffect *_container;	// 28 = 0x1c
	MCPlugParallel *_plug;	// 32 = 0x20
	MPAudioPlaylist *_audioPlaylist;	// 36 = 0x24
	MPEffectContainer *_parentContainer;	// 40 = 0x28
	BOOL _replaceSlides;	// 44 = 0x2c
	BOOL _supportsEffectTiming;	// 45 = 0x2d
	BOOL _skipEffectTiming;	// 46 = 0x2e
	NSObject<MZEffectTiming> *_effectTiming;	// 48 = 0x30
	float _opacity;	// 52 = 0x34
	CGPoint _position;	// 56 = 0x38
	float _zPosition;	// 64 = 0x40
	CGSize _size;	// 68 = 0x44
	float _rotationAngle;	// 76 = 0x4c
	float _xRotationAngle;	// 80 = 0x50
	float _yRotationAngle;	// 84 = 0x54
	float _scale;	// 88 = 0x58
	double _timeIn;	// 92 = 0x5c
	double _phaseInDuration;	// 100 = 0x64
	double _phaseOutDuration;	// 108 = 0x6c
	double _mainDuration;	// 116 = 0x74
	NSString *_effectID;	// 124 = 0x7c
	NSString *_presetID;	// 128 = 0x80
	int _audioPriority;	// 132 = 0x84
	int _randomSeed;	// 136 = 0x88
	NSString *_uuid;	// 140 = 0x8c
	int _liveIndex;	// 144 = 0x90
	BOOL _cleaningUp;	// 148 = 0x94
}
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x361e5a15; converted property
@property(retain) MPAudioPlaylist *audioPlaylist;	// G=0x361e5c85; S=0x361e5c95; converted property
@property(assign) int audioPriority;	// G=0x361e5dc1; S=0x361e5dd1; converted property
@property(retain) MCContainerEffect *container;	// G=0x361e5f75; S=0x361e88ad; converted property
@property(retain) id effectAttributes;	// G=0x361e1a19; S=0x361e1a29; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x361e17e9; S=0x361e17f9; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x361e5ea5; @synthesize=_effectTiming
@property(readonly, retain) NSMutableArray *filters;	// G=0x361e534d; converted property
@property(assign) double fullDuration;	// G=0x361e2359; S=0x361e23b9; converted property
@property(assign) float height;	// G=0x361e9f91; S=0x361e9fc5; converted property
@property(assign) int liveIndex;	// G=0x361e5f55; S=0x361e5f65; converted property
@property(assign, nonatomic) double mainDuration;	// G=0x361e2949; S=0x361e2961; 
@property(assign) float opacity;	// G=0x361e1b49; S=0x361e1b59; converted property
@property(retain) MPEffectContainer *parentContainer;	// G=0x361e5df5; S=0x361e9139; converted property
@property(assign, nonatomic) double phaseInDuration;	// G=0x361e2425; S=0x361e243d; 
@property(assign, nonatomic) double phaseOutDuration;	// G=0x361e26b5; S=0x361e26cd; 
@property(retain) MCPlugParallel *plug;	// G=0x361e5f85; S=0x361e830d; converted property
@property(assign) CGPoint position;	// G=0x361e1d39; S=0x361e1d51; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x361e1951; S=0x361e1975; 
@property(assign) int randomSeed;	// G=0x361e5e05; S=0x361e5e15; converted property
@property(assign, nonatomic) BOOL replaceSlides;	// G=0x361e4825; S=0x361e4835; 
@property(assign) float rotationAngle;	// G=0x361e1f5d; S=0x361e1f6d; converted property
@property(assign) float scale;	// G=0x361e1c41; S=0x361e1c51; converted property
@property(retain) id scriptingAnimations;	// G=0x361ea061; S=0x361ea3cd; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x361e3fa1; converted property
@property(assign) CGSize size;	// G=0x361e204d; S=0x361e2065; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x361e2c55; 
@property(readonly, assign) BOOL supportsEffectTiming;	// G=0x361e7481; converted property
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x361e4ba1; 
@property(readonly, retain) NSString *uuid;	// G=0x361e78e9; converted property
@property(assign) float width;	// G=0x361e9ff9; S=0x361ea02d; converted property
@property(assign) float xPosition;	// G=0x361e9ec1; S=0x361e9ef5; converted property
@property(assign) float xRotationAngle;	// G=0x361e2179; S=0x361e2189; converted property
@property(assign) float yPosition;	// G=0x361e9f29; S=0x361e9f5d; converted property
@property(assign) float yRotationAngle;	// G=0x361e2269; S=0x361e2279; converted property
@property(assign) float zPosition;	// G=0x361e1e6d; S=0x361e1e7d; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x361df6d1
+ (id)effectWithEffectID:(id)effectID;	// 0x361df721
+ (id)effectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x361df75d
+ (id)effectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x361df79d
+ (id)effectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x361df7dd
- (id)init;	// 0x361dfc49
- (id)initWithCoder:(id)coder;	// 0x361e09e1
- (id)initWithEffectID:(id)effectID;	// 0x361df825
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x361df839
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x361df989
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x361dfadd
- (id)_effectAttributes;	// 0x361e71fd
- (void)_updateEffectTiming;	// 0x361e4845
- (void)_updateTiming:(BOOL)timing;	// 0x361e49c9
- (void)addFilter:(id)filter;	// 0x361e535d
- (void)addFilters:(id)filters;	// 0x361e53bd
- (void)addSecondarySlide:(id)slide;	// 0x361e3fb1
- (void)addSecondarySlides:(id)slides;	// 0x361e403d
- (void)addSlide:(id)slide;	// 0x361e2c65
- (void)addSlides:(id)slides;	// 0x361e2cf1
- (void)addText:(id)text;	// 0x361e4bb1
- (void)addTexts:(id)texts;	// 0x361e4c3d
- (id)animationPathForKey:(id)key;	// 0x361e5a25
// converted property getter: - (id)animationPaths;	// 0x361e5a15
- (void)applyFormattedAttributes;	// 0x361e73a9
// converted property getter: - (id)audioPlaylist;	// 0x361e5c85
// converted property getter: - (int)audioPriority;	// 0x361e5dc1
- (void)cleanup;	// 0x361e81a5
// converted property getter: - (id)container;	// 0x361e5f75
- (void)copyAnimationPaths:(id)paths;	// 0x361e8059
- (void)copyAudioPlaylist:(id)playlist;	// 0x361e8161
- (void)copyFilters:(id)filters;	// 0x361e7f19
- (void)copySecondarySlides:(id)slides;	// 0x361e7c99
- (void)copySlides:(id)slides;	// 0x361e7b59
- (void)copyTexts:(id)texts;	// 0x361e7dd9
- (void)copyVars:(id)vars;	// 0x361e7971
- (id)copyWithZone:(NSZone *)zone;	// 0x361e14e5
- (int)countOfFilters;	// 0x361e9d91
- (int)countOfSlides;	// 0x361e9b31
- (int)countOfTexts;	// 0x361e9c61
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x361e6921
- (void)createSlidesWithPaths:(id)paths;	// 0x361e676d
- (void)createTextsWithDefaultStrings;	// 0x361e5f95
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x361e6381
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x361e63a5
- (void)dealloc;	// 0x361e163d
- (id)description;	// 0x361dfe79
- (void)dump;	// 0x361e6d7d
- (id)effectAttributeForKey:(id)key;	// 0x361e1a81
// converted property getter: - (id)effectAttributes;	// 0x361e1a19
// declared property getter: - (id)effectID;	// 0x361e17e9
- (id)effectPresetID;	// 0x361e7179
// declared property getter: - (id)effectTiming;	// 0x361e5ea5
- (void)encodeWithCoder:(id)coder;	// 0x361e02a1
// converted property getter: - (id)filters;	// 0x361e534d
- (void)finalize;	// 0x361e15fd
- (id)formattedAttributes;	// 0x361e72a5
- (id)fullDebugLog;	// 0x361e6da5
// converted property getter: - (double)fullDuration;	// 0x361e2359
- (BOOL)hasBreaksInDocument:(id)document;	// 0x361e9831
- (BOOL)hasMovies;	// 0x361e9761
// converted property getter: - (float)height;	// 0x361e9f91
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x361e5401
- (void)insertObject:(id)object inFiltersAtIndex:(int)index;	// 0x361e9dd1
- (void)insertObject:(id)object inSlidesAtIndex:(int)index;	// 0x361e9b71
- (void)insertObject:(id)object inTextsAtIndex:(int)index;	// 0x361e9ca1
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x361e4081
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x361e2d35
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x361e4c81
- (BOOL)isTextOnly;	// 0x361e5301
// converted property getter: - (int)liveIndex;	// 0x361e5f55
- (double)lowestDisplayTime;	// 0x361e4b69
// declared property getter: - (double)mainDuration;	// 0x361e2949
- (int)maxNumberOfSecondarySlides;	// 0x361e5f05
- (int)maxNumberOfSlides;	// 0x361e5eb5
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x361e5921
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x361e3ea9
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x361e5209
- (id)nearestLayerGroup;	// 0x361e9901
- (id)nearestPlug;	// 0x361e7931
- (BOOL)needsParallelizer;	// 0x361e9199
- (id)objectID;	// 0x361e78c1
- (id)objectInFiltersAtIndex:(int)index;	// 0x361e9db1
- (id)objectInSlidesAtIndex:(int)index;	// 0x361e9b51
- (id)objectInTextsAtIndex:(int)index;	// 0x361e9c81
// converted property getter: - (float)opacity;	// 0x361e1b49
// converted property getter: - (id)parentContainer;	// 0x361e5df5
- (id)parentDocument;	// 0x361e78f9
// declared property getter: - (double)phaseInDuration;	// 0x361e2425
// declared property getter: - (double)phaseOutDuration;	// 0x361e26b5
// converted property getter: - (id)plug;	// 0x361e5f85
- (id)plugID;	// 0x361e7899
// converted property getter: - (CGPoint)position;	// 0x361e1d39
// declared property getter: - (id)presetID;	// 0x361e1951
// converted property getter: - (int)randomSeed;	// 0x361e5e05
- (void)reconfigureSlides;	// 0x361e6ad5
- (void)removeAllFilters;	// 0x361e5881
- (void)removeAllSecondarySlides;	// 0x361e4729
- (void)removeAllSlides;	// 0x361e3c29
- (void)removeAllTexts;	// 0x361e5169
- (void)removeAnimationPathForKey:(id)key;	// 0x361e5bdd
- (void)removeFiltersAtIndices:(id)indices;	// 0x361e56ed
- (void)removeObjectFromFiltersAtIndex:(int)index;	// 0x361e9e11
- (void)removeObjectFromSlidesAtIndex:(int)index;	// 0x361e9bb1
- (void)removeObjectFromTextsAtIndex:(int)index;	// 0x361e9ce1
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x361e44e9
- (void)removeSlidesAtIndices:(id)indices;	// 0x361e378d
- (void)removeTextsAtIndices:(id)indices;	// 0x361e5001
- (void)replaceObjectInFiltersAtIndex:(int)index withObject:(id)object;	// 0x361e9e4d
- (void)replaceObjectInSlidesAtIndex:(int)index withObject:(id)object;	// 0x361e9bed
- (void)replaceObjectInTextsAtIndex:(int)index withObject:(id)object;	// 0x361e9d1d
- (void)replaceSlide:(id)slide atIndex:(int)index;	// 0x361e3e91
- (void)replaceSlideAtIndex:(int)index withSlide:(id)slide;	// 0x361e3ccd
// declared property getter: - (BOOL)replaceSlides;	// 0x361e4825
- (void)replaceTextsWitStrings:(id)strings;	// 0x361e60f9
// converted property getter: - (float)rotationAngle;	// 0x361e1f5d
// converted property getter: - (float)scale;	// 0x361e1c41
- (void)scaleMainDuration;	// 0x361e93b1
// converted property getter: - (id)scriptingAnimations;	// 0x361ea061
// converted property getter: - (id)secondarySlides;	// 0x361e3fa1
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x361e5a51
// converted property setter: - (void)setAudioPlaylist:(id)playlist;	// 0x361e5c95
// converted property setter: - (void)setAudioPriority:(int)priority;	// 0x361e5dd1
// converted property setter: - (void)setContainer:(id)container;	// 0x361e88ad
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x361e1aad
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x361e1a29
// declared property setter: - (void)setEffectID:(id)anId;	// 0x361e17f9
// converted property setter: - (void)setFullDuration:(double)duration;	// 0x361e23b9
// converted property setter: - (void)setHeight:(float)height;	// 0x361e9fc5
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x361e5f65
// declared property setter: - (void)setMainDuration:(double)duration;	// 0x361e2961
// converted property setter: - (void)setOpacity:(float)opacity;	// 0x361e1b59
// converted property setter: - (void)setParentContainer:(id)container;	// 0x361e9139
// declared property setter: - (void)setPhaseInDuration:(double)duration;	// 0x361e243d
// declared property setter: - (void)setPhaseOutDuration:(double)duration;	// 0x361e26cd
// converted property setter: - (void)setPlug:(id)plug;	// 0x361e830d
// converted property setter: - (void)setPosition:(CGPoint)position;	// 0x361e1d51
// declared property setter: - (void)setPresetID:(id)anId;	// 0x361e1975
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x361e5e15
// declared property setter: - (void)setReplaceSlides:(BOOL)slides;	// 0x361e4835
// converted property setter: - (void)setRotationAngle:(float)angle;	// 0x361e1f6d
// converted property setter: - (void)setScale:(float)scale;	// 0x361e1c51
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x361ea3cd
// converted property setter: - (void)setSize:(CGSize)size;	// 0x361e2065
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x361e71d9
// converted property setter: - (void)setWidth:(float)width;	// 0x361ea02d
// converted property setter: - (void)setXPosition:(float)position;	// 0x361e9ef5
// converted property setter: - (void)setXRotationAngle:(float)angle;	// 0x361e2189
// converted property setter: - (void)setYPosition:(float)position;	// 0x361e9f5d
// converted property setter: - (void)setYRotationAngle:(float)angle;	// 0x361e2279
// converted property setter: - (void)setZPosition:(float)position;	// 0x361e1e7d
// converted property getter: - (CGSize)size;	// 0x361e204d
- (id)slideForMCSlide:(id)mcslide;	// 0x361e9929
- (id)slideInformation;	// 0x361e7491
// declared property getter: - (id)slides;	// 0x361e2c55
// converted property getter: - (BOOL)supportsEffectTiming;	// 0x361e7481
- (BOOL)supportsUnlimitedSlides;	// 0x361e47cd
// declared property getter: - (id)texts;	// 0x361e4ba1
- (void)updateEffectAttributes;	// 0x361e77f9
- (void)updateTiming;	// 0x361e71e9
// converted property getter: - (id)uuid;	// 0x361e78e9
- (id)videoPaths;	// 0x361e7079
// converted property getter: - (float)width;	// 0x361e9ff9
// converted property getter: - (float)xPosition;	// 0x361e9ec1
// converted property getter: - (float)xRotationAngle;	// 0x361e2179
// converted property getter: - (float)yPosition;	// 0x361e9f29
// converted property getter: - (float)yRotationAngle;	// 0x361e2269
- (int)zIndex;	// 0x361e2be1
// converted property getter: - (float)zPosition;	// 0x361e1e6d
@end

