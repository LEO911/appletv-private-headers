/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/FactoryDiags.framework/FactoryDiags
 */

#import <NSObject.h> // Unknown library

@class NSString, NSDictionary, NSArray;

@interface OSDIOAccessory : NSObject {
	unsigned _accessoryService;	// 4 = 0x4
}
@property(readonly, assign, getter=_CFBundleIdentifier) NSString *CFBundleIdentifier;	// G=0x3511f141; 
@property(readonly, assign, getter=_IOAccessoryDetect) BOOL IOAccessoryDetect;	// G=0x3511f175; 
@property(readonly, assign, getter=_IOAccessoryID) int IOAccessoryID;	// G=0x3511f2b5; 
@property(readonly, assign, getter=_IOAccessoryManagerSleepPower) BOOL IOAccessoryManagerSleepPower;	// G=0x3511f1b5; 
@property(readonly, assign, getter=_IOAccessoryManagerSystemID) int IOAccessoryManagerSystemID;	// G=0x3511f2f9; 
@property(readonly, assign, getter=_IOAccessoryManagerType) int IOAccessoryManagerType;	// G=0x3511f33d; 
@property(readonly, assign, getter=_IOAccessoryOrientation) int IOAccessoryOrientation;	// G=0x3511f381; 
@property(readonly, assign, getter=_IOAccessoryPowerCurrentLimits) NSArray *IOAccessoryPowerCurrentLimits;	// G=0x3511f5d5; 
@property(readonly, assign, getter=_IOAccessoryPowerHandshake) BOOL IOAccessoryPowerHandshake;	// G=0x3511f235; 
@property(readonly, assign, getter=_IOAccessoryPowerMode) int IOAccessoryPowerMode;	// G=0x3511f3c5; 
@property(readonly, assign, getter=_IOAccessoryPrimaryDevicePort) int IOAccessoryPrimaryDevicePort;	// G=0x3511f409; 
@property(readonly, assign, getter=_IOAccessorySupportedPowerModes) NSArray *IOAccessorySupportedPowerModes;	// G=0x3511f5a1; 
@property(readonly, assign, getter=_IOAccessoryUSBActive) BOOL IOAccessoryUSBActive;	// G=0x3511f275; 
@property(readonly, assign, getter=_IOAccessoryUSBConnectType) int IOAccessoryUSBConnectType;	// G=0x3511f44d; 
@property(readonly, assign, getter=_IOAccessoryUSBCurrentLimit) int IOAccessoryUSBCurrentLimit;	// G=0x3511f491; 
@property(readonly, assign, getter=_IOAccessoryUSBCurrentLimitBase) int IOAccessoryUSBCurrentLimitBase;	// G=0x3511f4d5; 
@property(readonly, assign, getter=_IOAccessoryUSBCurrentLimitOffset) int IOAccessoryUSBCurrentLimitOffset;	// G=0x3511f519; 
@property(readonly, assign, getter=_IOAccessoryUSBPower) BOOL IOAccessoryUSBPower;	// G=0x3511f1f5; 
@property(readonly, assign, getter=_IOClass) NSString *IOClass;	// G=0x3511f63d; 
@property(readonly, assign, getter=_IOGeneralInterest) NSString *IOGeneralInterest;	// G=0x3511f671; 
@property(readonly, assign, getter=_IOMatchCategory) NSString *IOMatchCategory;	// G=0x3511f6a5; 
@property(readonly, assign, getter=_IONameMatch) NSArray *IONameMatch;	// G=0x3511f609; 
@property(readonly, assign, getter=_IONameMatched) NSString *IONameMatched;	// G=0x3511f6d9; 
@property(readonly, assign, getter=_IOProbeScore) int IOProbeScore;	// G=0x3511f55d; 
@property(readonly, assign, getter=_IOProviderClass) NSString *IOProviderClass;	// G=0x3511f70d; 
@property(readonly, assign, getter=_IOUserClientClass) NSString *IOUserClientClass;	// G=0x3511f741; 
@property(readonly, assign, getter=_TriStarREV) int TriStarREV;	// G=0x3511f775; 
@property(readonly, assign, getter=_getAccessoryProperties) NSDictionary *getAccessoryProperties;	// G=0x3511f0fd; 
@property(readonly, assign, getter=_getAccessoryService) unsigned getAccessoryService;	// G=0x3511f0b9; 
+ (void)initialize;	// 0x3511f7b9
+ (id)sharedInstance;	// 0x3511f811
- (id)init;	// 0x3511f821
// declared property getter: - (id)_CFBundleIdentifier;	// 0x3511f141
// declared property getter: - (BOOL)_IOAccessoryDetect;	// 0x3511f175
// declared property getter: - (int)_IOAccessoryID;	// 0x3511f2b5
// declared property getter: - (BOOL)_IOAccessoryManagerSleepPower;	// 0x3511f1b5
// declared property getter: - (int)_IOAccessoryManagerSystemID;	// 0x3511f2f9
// declared property getter: - (int)_IOAccessoryManagerType;	// 0x3511f33d
// declared property getter: - (int)_IOAccessoryOrientation;	// 0x3511f381
// declared property getter: - (id)_IOAccessoryPowerCurrentLimits;	// 0x3511f5d5
// declared property getter: - (BOOL)_IOAccessoryPowerHandshake;	// 0x3511f235
// declared property getter: - (int)_IOAccessoryPowerMode;	// 0x3511f3c5
// declared property getter: - (int)_IOAccessoryPrimaryDevicePort;	// 0x3511f409
// declared property getter: - (id)_IOAccessorySupportedPowerModes;	// 0x3511f5a1
// declared property getter: - (BOOL)_IOAccessoryUSBActive;	// 0x3511f275
// declared property getter: - (int)_IOAccessoryUSBConnectType;	// 0x3511f44d
// declared property getter: - (int)_IOAccessoryUSBCurrentLimit;	// 0x3511f491
// declared property getter: - (int)_IOAccessoryUSBCurrentLimitBase;	// 0x3511f4d5
// declared property getter: - (int)_IOAccessoryUSBCurrentLimitOffset;	// 0x3511f519
// declared property getter: - (BOOL)_IOAccessoryUSBPower;	// 0x3511f1f5
// declared property getter: - (id)_IOClass;	// 0x3511f63d
// declared property getter: - (id)_IOGeneralInterest;	// 0x3511f671
// declared property getter: - (id)_IOMatchCategory;	// 0x3511f6a5
// declared property getter: - (id)_IONameMatch;	// 0x3511f609
// declared property getter: - (id)_IONameMatched;	// 0x3511f6d9
// declared property getter: - (int)_IOProbeScore;	// 0x3511f55d
// declared property getter: - (id)_IOProviderClass;	// 0x3511f70d
// declared property getter: - (id)_IOUserClientClass;	// 0x3511f741
// declared property getter: - (int)_TriStarREV;	// 0x3511f775
// declared property getter: - (id)_getAccessoryProperties;	// 0x3511f0fd
// declared property getter: - (unsigned)_getAccessoryService;	// 0x3511f0b9
- (void)dealloc;	// 0x3511f8b9
@end

