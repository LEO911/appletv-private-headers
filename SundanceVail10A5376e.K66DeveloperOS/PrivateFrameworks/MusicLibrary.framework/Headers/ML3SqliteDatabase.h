/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3SqliteDatabaseContext, MLSQLiteConnectionQueue, NSString;

@interface ML3SqliteDatabase : NSObject {
	NSString *_identifier;	// 4 = 0x4
	ML3SqliteDatabaseContext *_mainDatabaseContext;	// 8 = 0x8
	ML3SqliteDatabaseContext *_backgroundDatabaseContext;	// 12 = 0xc
	MLSQLiteConnectionQueue *_backgroundConnectionQueue;	// 16 = 0x10
	NSString *_backgroundQueueIdentifier;	// 20 = 0x14
	NSString *_path;	// 24 = 0x18
	BOOL _enableWrites;	// 28 = 0x1c
}
@property(readonly, assign, nonatomic) NSString *path;	// G=0x3485b2bd; @synthesize=_path
+ (id)allSchemaSQL;	// 0x3485aa89
+ (BOOL)attachAuxiliaryDatabases:(sqlite3 *)databases;	// 0x348124d5
+ (BOOL)buildDatabaseTablesUsingHandle:(sqlite3 *)handle usingTransaction:(BOOL)transaction;	// 0x3485ab2d
+ (void)closeDatabaseHandle:(sqlite3 *)handle;	// 0x348126e5
+ (int)currentUserVersion;	// 0x3485ab29
+ (id)databasePath;	// 0x34859e89
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x3485a6a5
+ (void)limitCacheSize:(sqlite3 *)size;	// 0x348124d9
+ (BOOL)migrateFromVersion:(int)version outUserVersion:(int *)version2 usingHandle:(sqlite3 *)handle;	// 0x3485b0ed
+ (BOOL)migrateToCurrentUserVersionUsingHandle:(sqlite3 *)currentUserVersionUsingHandle;	// 0x3485b0f1
+ (BOOL)orderingLanguageMatchesSystemUsingHandle:(sqlite3 *)handle;	// 0x3485af11
+ (void)registerCustomCallbacksOnHandle:(sqlite3 *)handle;	// 0x348124dd
+ (void)registerFunctionsOnHandle:(sqlite3 *)handle;	// 0x348124ed
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x3485a145
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x3482234d
+ (void)stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x34822375
+ (id)systemCurrentLanguage;	// 0x3485aa8d
+ (BOOL)userVersionMatchesSystemUsingHandle:(sqlite3 *)handle;	// 0x34812bd9
+ (int)userVersionUsingHandle:(sqlite3 *)handle;	// 0x348124f9
- (id)initWithIdentifier:(id)identifier path:(id)path backgroundConnectionQueue:(id)queue enableWrites:(BOOL)writes;	// 0x34859c81
- (void).cxx_destruct;	// 0x3485b2d1
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x348128b1
- (void)_debugLoggingOptionsDidChangeNotification:(id)_debugLoggingOptions;	// 0x34859f0d
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x3485a1e1
- (id)_onBackgroundQueueDatabaseContext;	// 0x348129ed
- (id)_onMainQueueDatabaseContext;	// 0x34822079
- (BOOL)_openDatabaseWithOpenHandler:(id)openHandler;	// 0x3481234d
- (void)accessDatabaseContextUsingBlock:(id)block;	// 0x348128a1
- (void)accessDatabaseUsingBlock:(id)block;	// 0x34812841
- (BOOL)buildDatabaseTables;	// 0x3485ad15
- (BOOL)canWriteToDatabase;	// 0x34859f61
- (BOOL)coerceValidDatabase;	// 0x34811efd
- (void)dealloc;	// 0x34859e8d
- (BOOL)deleteAndRecreateDatabaseUsingHandle:(sqlite3 **)handle;	// 0x3485b209
- (id)description;	// 0x34859e01
- (void)didCommitInDatabaseContext:(id)databaseContext;	// 0x3485a7b1
- (void)didRollbackInDatabaseContext:(id)databaseContext;	// 0x3485a7c5
- (BOOL)executeSQL:(id)sql;	// 0x34859fc5
- (id)newDatabaseContext;	// 0x34812a2d
- (BOOL)openDatabaseHandle:(sqlite3 **)handle;	// 0x34812231
- (sqlite3 *)openedDatabaseHandle;	// 0x3481220d
// declared property getter: - (id)path;	// 0x3485b2bd
- (void)performOperationInBackground:(id)background;	// 0x3485a719
- (void)performTransactionWithBlock:(id)block;	// 0x3485a7d9
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x34821fd5
- (void)reconnectBackgroundDatabaseContext;	// 0x3485a189
- (void)reconnectMainDatabaseContext;	// 0x3485a171
- (void)reconnectToDatabaseWithCompletionHandler:(id)completionHandler;	// 0x3485a3f9
- (BOOL)requiresPostProcessing;	// 0x34812729
@end

