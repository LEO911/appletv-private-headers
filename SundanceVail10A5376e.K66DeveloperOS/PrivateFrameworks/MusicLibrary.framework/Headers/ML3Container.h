/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "ML3Entity.h"
#import "MusicLibrary-Structs.h"

@class NSArray, NSString, ML3Predicate;

@interface ML3Container : ML3Entity {
}
@property(readonly, assign) NSArray *cloudDisplayOrderingTerms;	// G=0x3484dac5; 
@property(readonly, assign) NSArray *displayOrderingTerms;	// G=0x3484db41; 
@property(readonly, assign) ML3Predicate *dynamicPredicate;	// G=0x3484d691; 
@property(readonly, assign, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;	// G=0x3484d791; 
@property(readonly, assign) NSArray *limitOrderingTerms;	// G=0x3484d981; 
@property(readonly, assign) long long limitValue;	// G=0x3484d9fd; 
@property(readonly, assign, getter=isLimitedByCount) BOOL limitedByCount;	// G=0x3484d745; 
@property(readonly, assign) NSString *limitingProperty;	// G=0x3484d87d; 
@property(readonly, assign) ML3Predicate *staticPredicate;	// G=0x3484d635; 
+ (void)_insertNewSmartPlaylist:(id)playlist criteriaBlob:(id)blob evaluationOrder:(unsigned long)order limited:(BOOL)limited trackOrder:(unsigned long)order5 distinguishedKind:(int)kind inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x3484c44d
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs;	// 0x3484d025
+ (BOOL)createMissingBuiltInSmartPlaylists:(id)smartPlaylists;	// 0x3484c879
+ (id)databaseTable;	// 0x3481c3d1
+ (id)defaultOrderingProperties;	// 0x34821829
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs inLibrary:(id)library;	// 0x3484d36d
+ (id)extraTablesToDelete;	// 0x3484af95
+ (id)foreignColumnForProperty:(id)property;	// 0x3484af79
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x3484af5d
+ (BOOL)hasCriterionInCriteriaList:(SearchCriteriaList *)criteriaList forITDBTrackField:(int)itdbtrackField;	// 0x3484c0bd
+ (void)initialize;	// 0x3481a8b5
+ (id)joinClausesForProperty:(id)property;	// 0x3481c349
+ (id)nextFilepathForPlaylistType:(int)playlistType withPersistentID:(unsigned long long)persistentID inLibrary:(id)library;	// 0x3484afc1
+ (id)persistentIDColumnForTable:(id)table;	// 0x3484afa5
+ (void)populateDynamicContainersInLibrary:(id)library;	// 0x3484e871
+ (void)populateDynamicContainersInLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x3484e895
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library;	// 0x3484e8b9
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x3484e8f1
+ (void)populateSortOrdersOfPropertyValues:(id)propertyValues inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x3484b1ad
+ (void)populateStaticItemsOfDynamicContainersInLibrary:(id)library;	// 0x3484dfc9
+ (id)predicateForCriteriaList:(SearchCriteriaList *)criteriaList dynamicCriteria:(BOOL)criteria;	// 0x3484c16d
+ (int)revisionTrackingCode;	// 0x3484af3d
+ (id)sectionPropertyForProperty:(id)property;	// 0x3484af41
+ (BOOL)smartCriteriaCanBeEvaluated:(id)evaluated;	// 0x3484b109
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x3484b3fd
- (void)_accessCurrentSwappedPersisentIDsUsingBlock:(id)block;	// 0x3484f371
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size;	// 0x3484f329
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size notify:(BOOL)notify;	// 0x3484f07d
- (BOOL)addTrackWithPersistentID:(long long)persistentID;	// 0x348500b5
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count;	// 0x348500e1
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x34850105
- (void)bindPopulateStatement:(id)statement withStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x3484df3d
// declared property getter: - (id)cloudDisplayOrderingTerms;	// 0x3484dac5
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x3484bf35
// declared property getter: - (id)displayOrderingTerms;	// 0x3484db41
// declared property getter: - (id)dynamicPredicate;	// 0x3484d691
- (id)evaluationOrderingTerms;	// 0x3484d905
- (SearchCriteriaList *)importedCriteriaList;	// 0x3484d5a1
- (BOOL)isCustomContainerOrderingDescending;	// 0x3484d831
- (BOOL)isEvaluationOrderingDescending;	// 0x3484d6ed
// declared property getter: - (BOOL)isLimitOrderingDescending;	// 0x3484d791
// declared property getter: - (BOOL)isLimitedByCount;	// 0x3484d745
// declared property getter: - (id)limitOrderingTerms;	// 0x3484d981
// declared property getter: - (long long)limitValue;	// 0x3484d9fd
// declared property getter: - (id)limitingProperty;	// 0x3484d87d
- (BOOL)moveTrackFromIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x348504d1
- (id)populateSQLWithStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x3484dd45
- (BOOL)removeAllTracks;	// 0x3484f34d
- (BOOL)removeTracksAtIndexes:(id)indexes;	// 0x3484ff29
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify;	// 0x3484ff05
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify indexesTransformBlock:(id)block;	// 0x3484f6e1
- (BOOL)removeTracksWithPersistentIDs:(const long long *)persistentIDs atFilteredIndexes:(id)filteredIndexes;	// 0x3484ff49
- (BOOL)setContainsTrack:(BOOL)track forPersistentID:(long long)persistentID notify:(BOOL)notify;	// 0x3484fc05
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count;	// 0x348508d1
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x348508f5
- (BOOL)setTracksWithSwappedPersistentIDData:(id)swappedPersistentIDData;	// 0x34850c6d
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x3484ba55
// declared property getter: - (id)staticPredicate;	// 0x3484d635
@end

