/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, ML3DatabaseMetadata, ML3NondurableWriteSet, ML3UbiquitousDatabase, MLSQLiteConnection, ML3Container, NSCountedSet, NSMutableArray, ML3MusicLibrary_SQLiteDatabaseContext, NSArray, ML3SqliteDatabase;
@protocol OS_dispatch_queue;

@interface ML3MusicLibrary : NSObject {
	NSString *_path;	// 4 = 0x4
	BOOL _enableWrites;	// 8 = 0x8
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 12 = 0xc
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 16 = 0x10
	MLSQLiteConnection *_inMemoryDatabaseConnection;	// 20 = 0x14
	NSObject<OS_dispatch_queue> *_atomicityQueue;	// 24 = 0x18
	ML3UbiquitousDatabase *_ubiquitousDatabase;	// 28 = 0x1c
	ML3SqliteDatabase *_geniusDatabase;	// 32 = 0x20
	NSCountedSet *_notifyNamesToIgnore;	// 36 = 0x24
	NSMutableArray *_pendingNotifyPostNames;	// 40 = 0x28
	NSString *_notifyName;	// 44 = 0x2c
	int _notifyToken;	// 48 = 0x30
	NSString *_nonContentsNotifyName;	// 52 = 0x34
	int _nonContentsNotifyToken;	// 56 = 0x38
	NSString *_invisiblePropertyNotifyName;	// 60 = 0x3c
	int _invisiblePropertyNotifyToken;	// 64 = 0x40
	NSString *_displayValuesNotifyName;	// 68 = 0x44
	int _displayValuesNotifyToken;	// 72 = 0x48
	NSString *_syncGenerationNotifyName;	// 76 = 0x4c
	int _syncGenerationNotifyToken;	// 80 = 0x50
	NSString *_libraryUIDNotifyName;	// 84 = 0x54
	int _libraryUIDNotifyToken;	// 88 = 0x58
	BOOL _requiresProcessAssertion;	// 92 = 0x5c
	int _backupDisabledCount;	// 96 = 0x60
	BOOL _backupNeeded;	// 100 = 0x64
	BOOL _hasEverConnectedToDatabase;	// 101 = 0x65
	id _mcSettingsObserver;	// 104 = 0x68
	id _loggingObserver;	// 108 = 0x6c
	NSObject<OS_dispatch_queue> *_nondurableConcurrentQueue;	// 112 = 0x70
	ML3NondurableWriteSet *_nondurableWriteSet;	// 116 = 0x74
	NSString *_artworkDirectory;	// 120 = 0x78
	BOOL _artworkDirectoryFilesystemRepresentation[1024];	// 124 = 0x7c
	BOOL _hasEverConnectedTo;	// 1148 = 0x47c
	BOOL _keepPresignedValidyAfterVerification;	// 1149 = 0x47d
}
@property(readonly, assign) long long autoFilledTracksTotalSize;	// G=0x3483a38d; 
@property(readonly, assign) long long currentContentRevision;	// G=0x34816ef9; 
@property(readonly, assign) long long currentRevision;	// G=0x3480fb5d; 
@property(readonly, assign) ML3DatabaseMetadata *databaseInfo;	// G=0x34812cdd; 
@property(readonly, retain) ML3SqliteDatabase *geniusDatabase;	// G=0x34821ba1; converted property
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x3483e3a1; @synthesize=_hasEverConnectedTo
@property(assign, nonatomic) BOOL keepPresignedValidyAfterVerification;	// G=0x3483e3b1; S=0x3483e3c1; @synthesize=_keepPresignedValidyAfterVerification
@property(retain) id libraryUID;	// G=0x3481b5c9; S=0x34839065; converted property
@property(readonly, assign) NSArray *localizedSectionIndexTitles;	// G=0x34819d89; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x348159c1; 
@property(readonly, assign, nonatomic, getter=isNondurableWritingActive) BOOL nondurableWritingActive;	// G=0x3481ff39; 
@property(readonly, assign) NSString *path;	// G=0x3481162d; @synthesize=_path
@property(readonly, assign) long long persistentID;	// G=0x34838fd1; 
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x34812c55; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x34815211; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x34836e01; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x34811645; 
@property(assign) long long syncGenerationID;	// G=0x3481c201; S=0x34838fed; 
@property(readonly, retain) ML3UbiquitousDatabase *ubiquitousDatabase;	// G=0x34811d75; converted property
@property(readonly, assign, nonatomic) BOOL writable;	// G=0x3483484d; 
+ (BOOL)_inTransactionUpdateSearchMapOnConnection:(id)transactionUpdateSearchMapOnConnection;	// 0x34868c61
+ (BOOL)_inTransactionUpdateSortMapOnConnection:(id)transactionUpdateSortMapOnConnection;	// 0x34868241
+ (id)_newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes forLibrary:(id)library;	// 0x34809d05
+ (id)_purgeableTrackPredicateWithUrgency:(int)urgency;	// 0x34839c21
+ (void)_stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x34834f19
+ (id)allArtworkFormatSizes;	// 0x3483a92d
+ (id)allSchemaSQL;	// 0x34863085
+ (MLArtworkFormatSpec)artworkFormatSpecForArtworkFormatID:(unsigned)artworkFormatID;	// 0x3481bce9
+ (void)beginDatabaseMigrationIfNecessary;	// 0x34811549
+ (BOOL)buildDatabaseTablesUsingConnection:(id)connection;	// 0x34863509
+ (void)connection:(id)connection didOpenDBHandle:(sqlite3 *)handle;	// 0x34834add
+ (void)connection:(id)connection willCloseDBHandle:(sqlite3 *)handle;	// 0x34834b11
+ (id)controlDirectoryPathWithBasePath:(id)basePath;	// 0x3487f025
+ (BOOL)createIndexesUsingConnection:(id)connection;	// 0x34865869
+ (int)currentUserVersion;	// 0x348119d9
+ (BOOL)dropIndexesUsingConnection:(id)connection;	// 0x34865849
+ (BOOL)dropIndexesUsingConnection:(id)connection tableNames:(const char *)names;	// 0x348655f1
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x348389f1
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x348366d5
+ (id)fallbackGeniusDatabaseFilePath;	// 0x34834941
+ (id)geniusDatabaseFilePath;	// 0x34821ce5
+ (BOOL)importationEnabled;	// 0x3483417d
+ (id)indexSchemaSQL;	// 0x348633cd
+ (void)initialize;	// 0x34807a9d
+ (id)itemIndexSchemaSQL;	// 0x34863345
+ (id)itemSchemaSQL;	// 0x3486306d
+ (id)localizedSectionHeaderForSectionHeader:(id)sectionHeader;	// 0x3481d719
+ (id)localizedSectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x3481d699
+ (id)mainDatabasePath;	// 0x34809285
+ (id)mediaFolderPath;	// 0x3487ef2d
+ (id)mediaFolderRelativePath:(id)path;	// 0x3487ef55
+ (BOOL)migrateToCurrentUserVersionUsingConnection:(id)currentUserVersionUsingConnection;	// 0x3486391d
+ (id)newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes;	// 0x34809ce1
+ (unsigned)numberOfArtworkStyles;	// 0x3483ae1d
+ (BOOL)orderingLanguageMatchesSystemUsingConnection:(id)connection;	// 0x348119e5
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder;	// 0x3487f701
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base createParentFolderIfNecessary:(BOOL)necessary;	// 0x3487f725
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base isFolder:(BOOL *)folder;	// 0x3487f041
+ (unsigned)readableArtworkFormatIDForArtworkFormatID:(unsigned)artworkFormatID;	// 0x3483ab4d
+ (id)sectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x3481d2d9
+ (id)sectionIndexTitles;	// 0x3481d271
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x34807f31
+ (id)sharedLibrary;	// 0x34808085
+ (id)sortMapSchemaSQL;	// 0x34863055
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x34834eed
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x34834ec5
+ (id)storeLinkSchemaSQL;	// 0x3486303d
+ (id)systemCurrentLanguage;	// 0x34811cd5
+ (BOOL)updateSortMapOnConnection:(id)connection;	// 0x34868ce1
+ (BOOL)updateTrackIntegrityOnConnection:(id)connection;	// 0x3483480d
+ (BOOL)userVersionMatchesSystemUsingConnection:(id)connection;	// 0x34811931
+ (int)userVersionUsingConnection:(id)connection;	// 0x34811991
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x34808aa1
- (void).cxx_destruct;	// 0x3483e3d1
- (void)_accessAccountCacheDBForSQL:(id)sql usingBlock:(id)block;	// 0x3483d6e1
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x3480fd31
- (id)_albumArtistGroupingNameFromDataSource:(id)dataSource;	// 0x348723fd
- (long long)_albumArtistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingAlbumArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoAlbumArtistStatement:(id)statement;	// 0x3487275d
- (id)_albumGroupingIdentifierFromDataSource:(id)dataSource albumArtistPersistentID:(long long)anId groupingKeysForGroupingNames:(id)groupingNames;	// 0x34872c81
- (long long)_albumPIDFromDataSource:(id)dataSource sortableNames:(id)names albumArtistPID:(long long)pid existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers insertIntoAlbumStatement:(id)statement groupingKeysForGroupingNames:(id)groupingNames;	// 0x348730ad
- (id)_artistGroupingNameFromDataSource:(id)dataSource;	// 0x34871a95
- (long long)_artistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoItemArtistStatement:(id)statement;	// 0x34871dad
- (long long)_baseLocationPIDFromDataSource:(id)dataSource;	// 0x34874695
- (BOOL)_commitNondurableWrites;	// 0x3481e895
- (id)_composerGroupingNameFromDataSource:(id)dataSource;	// 0x34873e85
- (long long)_composerPIDFromDataSource:(id)dataSource sortableNames:(id)names existingComposerPIDsForGroupingKeys:(id)groupingKeys insertIntoComposerStatement:(id)statement;	// 0x34874065
- (void)_delayableNotifyPost:(id)post localNotificationName:(id)name;	// 0x34820621
- (BOOL)_drawAndWriteImage:(CGImageRef)image outputWidth:(unsigned long)width outputHeight:(unsigned long)height colorSpace:(CGColorSpaceRef)space cacheID:(id)anId formatID:(unsigned)anId6 artworkStyle:(XXStruct_$eUQoB *)style resultingImageSubRect:(CGRect *)rect resultingLength:(unsigned *)length;	// 0x34835e01
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x34833ec5
- (void)_enumeratePurgeableTracksForUrgency:(int)urgency respectSongMattress:(BOOL)mattress usingBlock:(id)block;	// 0x34839e01
- (id)_existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers;	// 0x34877c55
- (id)_existingCollectionPIDsForTable:(id)table groupingNames:(id)names groupingKeysForGroupingNames:(id)groupingNames;	// 0x3487744d
- (id)_genreGroupingNameFromDataSource:(id)dataSource;	// 0x34873925
- (long long)_genrePIDFromDataSource:(id)dataSource sortableNames:(id)names existingGenrePIDsForGroupingKeys:(id)groupingKeys insertIntoGenreStatement:(id)statement;	// 0x34873aed
- (id)_insertIntoAlbumArtistStatement;	// 0x34872589
- (id)_insertIntoAlbumStatement;	// 0x34872e65
- (id)_insertIntoChapterUsingVtabSQL;	// 0x34876ec1
- (id)_insertIntoComposerStatement;	// 0x34873ea5
- (id)_insertIntoGenreStatement;	// 0x34873945
- (id)_insertIntoItemArtistStatement;	// 0x34871bc1
- (id)_insertIntoItemExtraUsingVtabSQL;	// 0x34875975
- (id)_insertIntoItemSearchUsingVtabSQL;	// 0x3487694d
- (id)_insertIntoItemStatsUsingVtabSQL;	// 0x348764a1
- (id)_insertIntoItemUsingVtabSQL;	// 0x34874cb1
- (id)_insertIntoPurgeableListUsingVtabSQL;	// 0x34876ba9
- (id)_insertStringsIntoSortMapOrFail:(id)fail;	// 0x348662d1
- (long long)_int64ValueForFirstRowAndColumnWithSQL:(id)sql;	// 0x3480fb7d
- (long long)_locationKindPIDFromDataSource:(id)dataSource;	// 0x348744bd
- (void)_migrateArtworkFrom:(unsigned)from to:(unsigned)to;	// 0x3483cd6d
- (BOOL)_mustProcessLanguageChange;	// 0x34838b55
- (id)_newGeniusDBConnectionAtPath:(id)path;	// 0x34821d01
- (void)_onBackgroundQueuePerformDatabaseContextBlock:(id)block;	// 0x3480ff31
- (void)_onMainQueuePerformDatabaseContextBlock:(id)block;	// 0x34813d95
- (void)_populateNameOrderForPID:(unordered_map<long long, ML3NameOrder, std::tr1::hash<long long>, std::equal_to<long long>, std::allocator<std::pair<const long long, ML3NameOrder>>, false> *)pid table:(id)table nameSQL:(id)sql;	// 0x34877045
- (void)_postChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x348388cd
- (void)_postDisplayValuesChangeNotificationLocalOnly:(BOOL)only;	// 0x348389bd
- (void)_postInvisiblePropertyChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x34838989
- (void)_postLibraryNotification:(id)notification isSourceExternal:(BOOL)external userInfo:(id)info;	// 0x34820db9
- (void)_postNonContentsChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x348205ed
- (id)_replaceIntoPurgeableListUsingVtabSQL;	// 0x34876d45
- (BOOL)_runStatementWithSQL:(id)sql bindingValue:(id)value :(id)arg3;	// 0x34835c05
- (void)_scheduleCommitNondurableWritesAfterTimeInterval:(double)interval;	// 0x3483dcf1
- (BOOL)_writeCGImage:(CGImageRef)image length:(unsigned long)length forCacheID:(id)cacheID formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x34836209
- (BOOL)_writeImageBytes:(const void *)bytes length:(unsigned long)length formatID:(unsigned)anId cacheID:(id)anId4;	// 0x348362f1
- (void)accessConnectionUsingBlock:(id)block;	// 0x3481178d
- (void)accessDatabaseUsingBlock:(id)block;	// 0x34835319
- (void)accessSortKeyBuilder:(id)builder;	// 0x3481a49d
- (long long)addStringToSortMap:(id)sortMap;	// 0x34838bf1
- (id)albumArtistForEffectiveAlbumArtistName:(id)effectiveAlbumArtistName;	// 0x34858a91
- (id)albumForAlbumArtistPersistentID:(long long)albumArtistPersistentID albumName:(id)name feedURL:(id)url seasonNumber:(id)number compilation:(BOOL)compilation;	// 0x34845c89
- (id)appleIDForDSID:(unsigned long long)dsid;	// 0x3483d9e1
- (id)artistForArtistName:(id)artistName seriesName:(id)name;	// 0x34844d15
- (id)artistGroupingKeyForArtistName:(id)artistName seriesName:(id)name;	// 0x34844ca9
- (id)artworkDataForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x3481be35
// declared property getter: - (long long)autoFilledTracksTotalSize;	// 0x3483a38d
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency;	// 0x3483a3a1
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency respectSongMattress:(BOOL)mattress;	// 0x3483a3b5
- (BOOL)buildDatabaseTables;	// 0x348637cd
- (BOOL)coerceValidDatabase;	// 0x34865cb5
- (BOOL)compactArtwork;	// 0x3483c285
- (id)composerForComposerName:(id)composerName;	// 0x34857e29
- (BOOL)createIndexes;	// 0x34865abd
// declared property getter: - (long long)currentContentRevision;	// 0x34816ef9
// declared property getter: - (long long)currentRevision;	// 0x3480fb5d
// declared property getter: - (id)databaseInfo;	// 0x34812cdd
- (void)dealloc;	// 0x34834a05
- (BOOL)deleteAllArtwork;	// 0x3483b8a1
- (BOOL)deleteAndRecreateDatabaseUsingConnection:(id)connection;	// 0x34865c31
- (BOOL)deleteArtworkForCacheID:(id)cacheID;	// 0x3483bac1
- (BOOL)deleteArtworkForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x3483bf4d
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize;	// 0x3483a511
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency;	// 0x3483a535
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency respectSongMattress:(BOOL)mattress;	// 0x3483a559
- (BOOL)deleteDatabase;	// 0x348358dd
- (void)deletePresignedValidity;	// 0x34834429
- (BOOL)dropItemIndexes;	// 0x34865961
- (void)enumeratePersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(unsigned)code usingBlock:(id)block;	// 0x348390b5
- (void)enumeratePersistentIDsAfterRevision:(long long)revision usingBlock:(id)block;	// 0x348395e9
- (BOOL)executeSQL:(id)sql;	// 0x34834e85
// converted property getter: - (id)geniusDatabase;	// 0x34821ba1
- (id)genreForGenre:(id)genre;	// 0x3484a279
- (void)getChangedPersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(int)code usingBlock:(id)block;	// 0x34839819
- (id)groupingKeyForString:(id)string;	// 0x348353d1
- (id)groupingKeysForStrings:(id)strings;	// 0x348355e5
- (BOOL)handlePrepareDatabase;	// 0x348590d5
- (BOOL)hasArtworkForCacheID:(id)cacheID;	// 0x3483ab91
- (BOOL)hasArtworkForCacheID:(id)cacheID ensureArtworkFileExists:(BOOL)exists;	// 0x3483aba9
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x3483e3a1
- (BOOL)hasPresignedValidity;	// 0x34834485
- (BOOL)importTracksFromDataSource:(id)dataSource;	// 0x3487b195
- (BOOL)importTracksFromDataSource:(id)dataSource progressHandler:(id)handler;	// 0x3487b1b9
- (BOOL)insertArtworkWithImageData:(id)imageData forCacheID:(id)cacheID;	// 0x3483b719
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x34867885
- (id)insertStringsIntoSortMap:(id)map;	// 0x348676a1
// declared property getter: - (BOOL)isNondurableWritingActive;	// 0x3481ff39
- (BOOL)isReadable;	// 0x34838bed
// declared property getter: - (BOOL)keepPresignedValidyAfterVerification;	// 0x3483e3b1
// converted property getter: - (id)libraryUID;	// 0x3481b5c9
- (void)loadArtworkForCacheID:(id)cacheID formatID:(unsigned)anId completionHandler:(id)handler;	// 0x3481bd89
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x3481a2f9
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x34819d89
- (id)locationKindForKind:(id)kind;	// 0x3486b8f9
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x348159c1
- (void)migrateAlbumGridBGRA1xToJPEG1x;	// 0x3483d521
- (void)migrateAlbumListJPEGToBGRA;	// 0x3483d5d9
- (BOOL)migrateLegacyArtworkFromArtworkBlobFilePath:(id)artworkBlobFilePath;	// 0x3483c85d
- (void)migratePresignedValidity;	// 0x348347a9
- (XXStruct_Cy4r_A)nameOrderForString:(id)string;	// 0x34866041
- (id)newDatabaseConnection;	// 0x34809b6d
- (id)nondurableWriteSetForReading;	// 0x34814415
- (id)nondurableWriteSetForWriting;	// 0x3481df0d
- (void)notifyContentsDidChange;	// 0x34836ba9
- (void)notifyDisplayValuesPropertyDidChange;	// 0x34836d41
- (void)notifyInvisiblePropertyDidChange;	// 0x34836c81
- (void)notifyNonContentsPropertyDidChange;	// 0x348203a1
// declared property getter: - (id)path;	// 0x3481162d
- (void)performTransactionAllowingWrites:(BOOL)writes withBlock:(id)block;	// 0x34817091
- (void)performTransactionKind:(int)kind waitIfBusy:(BOOL)busy withBlock:(id)block;	// 0x348170bd
- (void)performTransactionKind:(int)kind withBlock:(id)block;	// 0x3483676d
- (void)performTransactionWithBlock:(id)block;	// 0x3481f1e9
// declared property getter: - (long long)persistentID;	// 0x34838fd1
- (BOOL)persistentID:(long long)anId changedAfterRevision:(long long)revision revisionTrackingCode:(int)code;	// 0x34839675
- (BOOL)populateArtworkCacheWithArtworkData:(id)artworkData trackValues:(id)values;	// 0x3485facd
- (BOOL)populateStaticItemsOfDynamicContainers;	// 0x34834e9d
// declared property getter: - (id)preferredAudioTracks;	// 0x34812c55
// declared property getter: - (id)preferredSubtitleTracks;	// 0x34815211
- (void)prepareStatementForSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x348364c1
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x3483669d
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x34836e01
- (void)reconnectToDatabase;	// 0x34834fa1
- (void)reconnectToDatabaseWithCompletionHandler:(id)completionHandler;	// 0x34834fb5
- (BOOL)removeLocationsForItemsMissingAssets;	// 0x34868d9d
- (void)removeOrphanedTracks;	// 0x3483de5d
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x34811645
- (BOOL)resetAllContents;	// 0x34869235
- (void)resetUbiquitousMetadata;	// 0x3483485d
- (BOOL)runStatementWithSQL:(id)sql bindingValue:(id)value;	// 0x34835a3d
- (void)savePlaylists;	// 0x34837da5
- (void)savePlaylistsSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x34837dc9
- (void)saveTrackMetadata;	// 0x34837365
- (void)saveTrackMetadataSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x34837389
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x3481a60d
- (BOOL)setAppleID:(id)anId forDSID:(unsigned long long)dsid;	// 0x3483d829
// declared property setter: - (void)setKeepPresignedValidyAfterVerification:(BOOL)verification;	// 0x3483e3c1
// converted property setter: - (void)setLibraryUID:(id)uid;	// 0x34839065
// declared property setter: - (void)setSyncGenerationID:(long long)anId;	// 0x34838fed
- (BOOL)setValue:(id)value forDatabaseProperty:(id)databaseProperty;	// 0x3483dbdd
- (id)statementWithSQL:(id)sql;	// 0x34824321
- (void)statementWithSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x3480fc95
- (void)statementWithSQL:(id)sql usingBlock:(id)block;	// 0x34813cd1
- (void)statementWithSQLPrefix:(id)sqlprefix inPersistentIDs:(const long long *)persistentIDs count:(unsigned)count usingBlock:(id)block;	// 0x348337bd
// declared property getter: - (long long)syncGenerationID;	// 0x3481c201
// converted property getter: - (id)ubiquitousDatabase;	// 0x34811d75
- (BOOL)updateActivePlaylistNamesForCurrentLanguage;	// 0x34859815
- (void)updateOrderingLanguagesForCurrentLanguage;	// 0x348599c1
- (BOOL)updateSortMap;	// 0x34838ded
- (void)updateTrackIntegrity;	// 0x34834831
- (id)valueForDatabaseProperty:(id)databaseProperty;	// 0x3481b5e5
- (BOOL)verifyPresignedValidity;	// 0x348344f9
// declared property getter: - (BOOL)writable;	// 0x3483484d
- (BOOL)writeToDatabaseArtworkForCacheID:(id)cacheID length:(unsigned long)length formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x3483b3f9
- (BOOL)writeToDiskArtworkWithImageData:(id)imageData forCacheID:(id)cacheID resultingLengths:(unsigned **)lengths formatIDs:(unsigned **)ids imageSubRects:(CGRect **)rects count:(unsigned *)count;	// 0x3483ae21
@end

