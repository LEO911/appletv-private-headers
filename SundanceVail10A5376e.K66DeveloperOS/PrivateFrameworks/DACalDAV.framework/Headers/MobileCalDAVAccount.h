/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, NSDate, MobileCalDAVPrincipal, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString, NSSet;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x35f3e1f1; S=0x35f3e225; 
@property(readonly, assign) NSSet *calendars;	// G=0x35f3e9c1; 
@property(retain) NSURL *collectionSetURL;	// G=0x35f3e6d9; S=0x35f3e71d; 
@property(retain) id host;	// G=0x35f42f85; S=0x35f42ffd; converted property
@property(assign) BOOL isRefreshing;	// G=0x35f43379; S=0x35f43391; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x35f3e7ad; S=0x35f3e819; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x35f433fd; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x35f43425; S=0x35f43439; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x35f43411; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x35f433cd; S=0x35f433e5; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x35f3f3d5; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x35f3f39d; 
@property(assign) int overriddenPort;	// G=0x35f3e345; S=0x35f3e2e5; 
@property(retain) NSString *overriddenScheme;	// G=0x35f3e3d9; S=0x35f3e379; 
@property(retain) NSString *overriddenServer;	// G=0x35f3e2c9; S=0x35f3e269; 
@property(assign) int port;	// G=0x35f4328d; S=0x35f43205; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x35f4345d; S=0x35f43471; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x35f43489; S=0x35f4349d; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x35f3e3f5; S=0x35f3e415; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x35f43449; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x35f433a9; S=0x35f433bd; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x35f430c5; S=0x35f4313d; converted property
@property(retain) id searchPropertySet;	// G=0x35f3e759; S=0x35f3e769; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x35f434b5; S=0x35f434cd; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x35f3f1b9; S=0x35f3f231; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x35f3f40d; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x35f3f4a5; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x35f3f459; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x35f3e1d1; S=0x35f3e135; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x35f3f5d1; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x35f3f50d; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x35f3f625; converted property
@property(assign) BOOL useSSL;	// G=0x35f43349; S=0x35f43319; converted property
@property(retain) id username;	// G=0x35f42e51; S=0x35f42eb9; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x35f3f381; 
@property(assign) BOOL wasMigrated;	// G=0x35f3e85d; S=0x35f3e8a5; 
+ (Class)accountClass;	// 0x35f3d3b1
+ (Class)clientClass;	// 0x35f3d3cd
+ (id)defaultProperties;	// 0x35f3cb15
+ (id)supportedDataclasses;	// 0x35f3d3e9
- (id)init;	// 0x35f3cc59
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x35f3cad1
- (id)initWithProperties:(id)properties;	// 0x35f3ca8d
- (id)_calendarConstraintsPath;	// 0x35f3f779
- (id)_calendarConstraintsResource;	// 0x35f3f675
- (void)_clearOrphanedCalendarItemChangesOfType:(int)type withContext:(id)context goodCalendarIds:(id)ids;	// 0x35f3ff51
- (void)_clearOrphanedChangesWithChangesCall:(/*function-pointer*/ void *)changesCall clearChanges:(/*function-pointer*/ void *)changes withContext:(id)context;	// 0x35f401b9
- (void)_clearOrphanedChangesWithContext:(id)context;	// 0x35f40405
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x35f40d95
- (void)_collectMoveActions;	// 0x35f412a9
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x35f3dbd5
- (id)_oldURLsForKeychain;	// 0x35f3d97d
- (id)_powerAssertionContext;	// 0x35f428ad
- (id)_powerAssertionGroupIdentifier;	// 0x35f428b1
- (void)_setSpinning:(BOOL)spinning;	// 0x35f3fe15
- (void)_updateCalendarStore:(BOOL)store;	// 0x35f3fc45
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x35f3fb41
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x35f3f845
- (void)_upgradeAccountToTelluride;	// 0x35f3d481
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x35f3dbe1
- (BOOL)accountNeedsUpgrade;	// 0x35f3e039
- (void)addCalendar:(id)calendar;	// 0x35f3e8fd
- (void)addPrincipal:(id)principal;	// 0x35f3f125
// declared property getter: - (int)calDAVAccountVersion;	// 0x35f3e1f1
// declared property getter: - (id)calendars;	// 0x35f3e9c1
- (void)cancelAllSearchQueries;	// 0x35f42161
- (void)cancelRefresh;	// 0x35f3fe79
- (void)cancelSearchQuery:(id)query;	// 0x35f41ffd
- (void)checkValidityWithConsumer:(id)consumer;	// 0x35f42665
// declared property getter: - (id)collectionSetURL;	// 0x35f3e6d9
- (void)configureAccount;	// 0x35f3c5d5
- (void *)copyCalStore;	// 0x35f3f7f1
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x35f42dc5
- (int)coreDAVLogLevel;	// 0x35f42da5
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x35f42e2d
- (int)coreDAVOutputLevel;	// 0x35f42dbd
- (void)coreDAVTransmittedDataFinished;	// 0x35f42e4d
- (void)dealloc;	// 0x35f3cc99
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x35f422c1
- (void)dropPowerAssertions;	// 0x35f429cd
// converted property getter: - (id)host;	// 0x35f42f85
- (BOOL)isCalDAVAccount;	// 0x35f42a6d
- (BOOL)isEqualToAccount:(id)account;	// 0x35f42a71
// declared property getter: - (BOOL)isRefreshing;	// 0x35f43379
// declared property getter: - (BOOL)isWritable;	// 0x35f3e7ad
// declared property getter: - (id)itemIDsToMoveActions;	// 0x35f433fd
- (id)localizedIdenticalAccountFailureMessage;	// 0x35f42c7d
- (id)localizedInvalidPasswordMessage;	// 0x35f42cf5
// declared property getter: - (id)mainPrincipal;	// 0x35f43425
// declared property getter: - (id)movedItemURLStrings;	// 0x35f43411
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x35f433cd
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x35f3f3d5
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x35f3f39d
// declared property getter: - (int)overriddenPort;	// 0x35f3e345
// declared property getter: - (id)overriddenScheme;	// 0x35f3e3d9
// declared property getter: - (id)overriddenServer;	// 0x35f3e2c9
- (void)performSearchQuery:(id)query;	// 0x35f41c71
// converted property getter: - (int)port;	// 0x35f4328d
// declared property getter: - (int)preferredEventDaysToSync;	// 0x35f4345d
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x35f43489
- (void)prepareForAccountSave;	// 0x35f3ceed
// converted property getter: - (id)principalURL;	// 0x35f3e3f5
// declared property getter: - (id)principals;	// 0x35f43449
- (id)properties;	// 0x35f3d371
- (void)reattainPowerAssertions;	// 0x35f42a1d
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x35f40609
// declared property getter: - (id)refreshContext;	// 0x35f433a9
- (void)refreshWithContext:(id)context;	// 0x35f41581
- (void)releasePowerAssertion;	// 0x35f42925
- (void)reloadCalendars;	// 0x35f3f055
- (void)removeCalendar:(id)calendar;	// 0x35f3e955
- (void)removePrincipal:(id)principal;	// 0x35f3f17d
- (void)retainPowerAssertion;	// 0x35f428c1
// converted property getter: - (id)scheme;	// 0x35f430c5
// declared property getter: - (id)searchPropertySet;	// 0x35f3e759
- (BOOL)searchQueriesRunning;	// 0x35f42291
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x35f434b5
- (id)serverBaseURL;	// 0x35f3e5f1
// declared property getter: - (id)serverVersion;	// 0x35f3f1b9
- (void)setAccountDescription:(id)description;	// 0x35f3e695
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x35f3e225
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x35f3e71d
// converted property setter: - (void)setHost:(id)host;	// 0x35f42ffd
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x35f43391
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x35f3e819
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x35f43439
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x35f433e5
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x35f3e2e5
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x35f3e379
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x35f3e269
// converted property setter: - (void)setPort:(int)port;	// 0x35f43205
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x35f43471
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x35f4349d
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x35f3e415
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x35f433bd
// converted property setter: - (void)setScheme:(id)scheme;	// 0x35f4313d
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x35f3e769
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x35f434cd
// declared property setter: - (void)setServerVersion:(id)version;	// 0x35f3f231
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x35f3e135
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x35f43319
// converted property setter: - (void)setUsername:(id)username;	// 0x35f42eb9
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x35f3e8a5
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x35f3f40d
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x35f3f4a5
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x35f3f459
- (BOOL)shouldLogTransmittedData;	// 0x35f42e09
- (void)shutdown;	// 0x35f422bd
- (id)spinnerIdentifiers;	// 0x35f3fdb5
- (id)stateString;	// 0x35f3d419
// declared property getter: - (id)subscribedCalendars;	// 0x35f3e1d1
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x35f3d409
// declared property getter: - (BOOL)supportsEvents;	// 0x35f3f5d1
// declared property getter: - (BOOL)supportsReminders;	// 0x35f3f50d
- (void)task:(id)task didFinishWithError:(id)error;	// 0x35f41939
// converted property getter: - (id)taskManager;	// 0x35f3f625
- (BOOL)upgradeAccount;	// 0x35f3dfb1
// converted property getter: - (BOOL)useSSL;	// 0x35f43349
// converted property getter: - (id)username;	// 0x35f42e51
- (BOOL)usesTokenAuth;	// 0x35f3f621
// declared property getter: - (id)viewedTimeZone;	// 0x35f3f381
// declared property getter: - (BOOL)wasMigrated;	// 0x35f3e85d
- (id)wellKnownPaths;	// 0x35f424cd
@end

