/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x311c833d; S=0x311c899d; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x311cba75; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x311cc83d; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x311ce045; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x311c7e51; S=0x311cbced; 
@property(copy) NSString *emailAddress;	// G=0x311ca091; S=0x311ca119; 
@property(copy) NSArray *emailAddresses;	// G=0x311ca1f1; S=0x311ca28d; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x311cc7f9; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x311ca4e5; 
@property(copy) NSString *host;	// G=0x311c9de1; S=0x311c9e69; 
@property(readonly, assign) NSData *identityPersist;	// G=0x311cb0f9; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x311cb3b5; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x311cafb9; 
@property(assign) BOOL needsRediscovery;	// G=0x311caa6d; S=0x311caa8d; 
@property(copy) NSString *password;	// G=0x311c9a1d; S=0x311c9b75; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x311c7bb5; 
@property(assign) int port;	// G=0x311ca5f9; S=0x311ca685; 
@property(copy) NSURL *principalURL;	// G=0x311ca825; S=0x311ca8e5; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x311caaa9; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x311c896d; 
@property(copy) NSString *scheme;	// G=0x311ca711; S=0x311ca799; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x311cc851; S=0x311cc865; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x311caa31; S=0x311caa51; 
@property(assign, nonatomic) BOOL shouldFailAllTasks;	// G=0x311cb5bd; S=0x311cc889; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x311cc80d; S=0x311cc825; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x311cc899; S=0x311cc8b1; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x311ca3d1; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x311cc875; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x311d9665; S=0x311d9669; converted property
@property(assign) BOOL useSSL;	// G=0x311c9f41; S=0x311c9fc9; 
@property(copy) NSString *user;	// G=0x311cba09; S=0x311cba19; 
@property(copy) NSString *username;	// G=0x311c8ad5; S=0x311c8bc5; 
@property(retain) id version;	// G=0x311c9d39; S=0x311c9d85; converted property
+ (Class)accountClass;	// 0x311c8885
+ (Class)classForAccountType:(id)accountType;	// 0x311cbc5d
+ (Class)clientClass;	// 0x311c92a9
+ (Class)daemonClass;	// 0x311c92f5
+ (id)defaultProperties;	// 0x311cbc59
+ (id)newAccountOfAccountType:(id)accountType;	// 0x311cbc95
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x311c8785
- (id)initWithProperties:(id)properties;	// 0x311c7831
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x311cc8c9
- (id)_exceptionsDict;	// 0x311cb1dd
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x311cdce5
- (BOOL)_isIdentityManagedByProfile;	// 0x311cb1bd
- (void)_removeHostsToTrust;	// 0x311cbdfd
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x311cd539
- (id)_serverSuffixesToAlwaysFail;	// 0x311cc9cd
- (void)_setPersistentUUID:(id)uuid;	// 0x311c8981
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x311cbe2d
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x311c9551
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x311ca2f1
// declared property getter: - (id)accountDescription;	// 0x311c833d
- (id)accountID;	// 0x311c7ab9
- (int)accountIntPropertyForKey:(id)key;	// 0x311c95b9
- (BOOL)accountNeedsUpgrade;	// 0x311cbd09
- (id)accountPropertyForKey:(id)key;	// 0x311c9341
- (id)addUsernameToURL:(id)url;	// 0x311cb045
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x311cba75
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x311caa2d
- (id)backingACAccountTypeIdentifier;	// 0x311cbfe1
// declared property getter: - (id)backingAccountInfo;	// 0x311cc83d
// declared property getter: - (id)backingCredentialAccount;	// 0x311ce045
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x311ce2b5
- (void)cancelAllSearchQueries;	// 0x311d74f9
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x311ce35d
- (void)cancelSearchQuery:(id)query;	// 0x311d74f5
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x311ce3fd
- (void)checkValidityWithConsumer:(id)consumer;	// 0x311ca9e5
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x311cb755
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x311cb819
- (void)cleanupAccountFiles;	// 0x311cb355
- (id)consumerForTask:(id)task;	// 0x311c983d
- (id)contactsFolders;	// 0x311ce42d
- (CFURLStorageSessionRef)copyStorageSession;	// 0x311cb81d
// declared property getter: - (int)daAccountVersion;	// 0x311c7e51
- (id)dataclassProperties;	// 0x311c9191
- (void)dealloc;	// 0x311c7d4d
- (id)defaultContactsFolder;	// 0x311ce429
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x311cac21
- (id)defaultEventsFolder;	// 0x311ce2a5
- (id)defaultNotesFolder;	// 0x311e8b9d
- (id)defaultToDosFolder;	// 0x311d9659
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x311ce495
- (id)deletedItemsFolder;	// 0x311ce48d
- (id)description;	// 0x311cb979
- (id)displayName;	// 0x311c8a79
- (id)domainOnly;	// 0x311c9ddd
// declared property getter: - (id)emailAddress;	// 0x311ca091
// declared property getter: - (id)emailAddresses;	// 0x311ca1f1
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x311cc7f9
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x311c8d11
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x311ca4e5
- (id)eventsFolders;	// 0x311ce2a9
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x311cb1f9
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x311efacd
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x311cca59
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x311cd1f9
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x311cb3b9
// declared property getter: - (id)host;	// 0x311c9de1
// declared property getter: - (id)identityPersist;	// 0x311cb0f9
- (id)inboxFolder;	// 0x311ce485
- (BOOL)isActiveSyncAccount;	// 0x311cb739
- (BOOL)isCalDAVAccount;	// 0x311cb741
- (BOOL)isCalDAVChildAccount;	// 0x311cb74d
- (BOOL)isCardDAVAccount;	// 0x311cb749
// declared property getter: - (BOOL)isChildAccount;	// 0x311cb3b5
- (BOOL)isDAMMeAccount;	// 0x311cb745
- (BOOL)isDisabled;	// 0x311c8241
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x311c8dd9
- (BOOL)isEqualToAccount:(id)account;	// 0x311cb691
- (BOOL)isHotmailAccount;	// 0x311cb751
- (BOOL)isLDAPAccount;	// 0x311cb73d
// declared property getter: - (int)keychainAccessibilityType;	// 0x311cafb9
- (id)localizedIdenticalAccountFailureMessage;	// 0x311cdef5
- (id)localizedInvalidPasswordMessage;	// 0x311cdf9d
- (BOOL)monitorFolderWithID:(id)anId;	// 0x311cab21
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x311cab1d
// declared property getter: - (BOOL)needsRediscovery;	// 0x311caa6d
- (id)notesFolders;	// 0x311e8ba1
// declared property getter: - (id)password;	// 0x311c9a1d
- (id)passwordWithExpected:(BOOL)expected;	// 0x311c9875
- (void)performSearchQuery:(id)query;	// 0x311d7451
// declared property getter: - (id)persistentUUID;	// 0x311c7bb5
// declared property getter: - (int)port;	// 0x311ca5f9
- (void)prepareForAccountSave;	// 0x311cac7d
// declared property getter: - (id)principalURL;	// 0x311ca825
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x311ce491
- (void)removeAccountPropertyForKey:(id)key;	// 0x311c94ed
- (void)removeClientCertificateData;	// 0x311cac25
- (void)removeConsumerForTask:(id)task;	// 0x311c9859
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x311ce055
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x311caaa9
- (void)resetAccountID;	// 0x311c88a1
- (BOOL)resetCertWarnings;	// 0x311cb4c1
- (void)resetStatusReport;	// 0x311cb4ed
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x311ce361
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x311c9621
- (void)saveAccountProperties;	// 0x311cac81
- (void)saveAccountSettings;	// 0x311cbba1
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x311cbb51
// declared property getter: - (id)scheduleIdentifier;	// 0x311c896d
// declared property getter: - (id)scheme;	// 0x311ca711
- (BOOL)searchQueriesRunning;	// 0x311d74fd
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x311ce2b1
- (id)sentItemsFolder;	// 0x311ce489
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x311c9579
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x311c899d
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x311c95e1
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x311c9415
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x311c97e1
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x311cbced
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x311ca119
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x311ca28d
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x311c8eb5
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x311ca56d
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x311cb23d
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x311cb3fd
// declared property setter: - (void)setHost:(id)host;	// 0x311c9e69
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x311cb115
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x311caa8d
// declared property setter: - (void)setPassword:(id)password;	// 0x311c9b75
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x311c9a55
// declared property setter: - (void)setPort:(int)port;	// 0x311ca685
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x311ca8e5
// declared property setter: - (void)setScheme:(id)scheme;	// 0x311ca799
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x311cc865
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x311caa51
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x311cc889
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x311cc825
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x311cc8b1
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x311ca459
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x311d9669
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x311c9fc9
// declared property setter: - (void)setUser:(id)user;	// 0x311cba19
// declared property setter: - (void)setUsername:(id)username;	// 0x311c8bc5
// converted property setter: - (void)setVersion:(id)version;	// 0x311c9d85
// declared property getter: - (id)settingsTemplate;	// 0x311cc851
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x311caa31
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x311cb5bd
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x311cc80d
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x311cc899
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x311ca3d1
- (id)spinnerIdentifiers;	// 0x311c925d
- (id)stateString;	// 0x311c9731
// declared property getter: - (id)statusReport;	// 0x311cc875
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x311c96cd
- (void)stopMonitoringFolders;	// 0x311cabbd
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x311cab59
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x311c8cc5
- (int)supportsEmailFlagging;	// 0x311d7505
- (int)supportsMailboxSearch;	// 0x311d7501
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x311c9669
- (id)syncStoreIdentifier;	// 0x311c7d3d
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x311efad1
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x311ce431
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x311ce2ad
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x311e8ba5
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x311d9661
- (void)tearDown;	// 0x311caab9
- (id)toDosFolders;	// 0x311d965d
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x311d9665
- (BOOL)upgradeAccount;	// 0x311cbf81
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x311cbfdd
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x311cbfe5
- (void)upgradeToHoodooAccountInfo;	// 0x311cbfd9
- (id)urlForKeychain;	// 0x311cba29
// declared property getter: - (BOOL)useSSL;	// 0x311c9f41
// declared property getter: - (id)user;	// 0x311cba09
// declared property getter: - (id)username;	// 0x311c8ad5
- (id)usernameWithoutDomain;	// 0x311c9dcd
- (BOOL)usesLegacyAccountSettings;	// 0x311cb961
// converted property getter: - (id)version;	// 0x311c9d39
@end

