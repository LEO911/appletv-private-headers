/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import <NSObject.h> // Unknown library

@class NSString, NSMutableArray, MZTaskAssertion, NSError;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface MZAsynchronousTask : NSObject {
	NSObject<OS_dispatch_queue> *_handlerQueue;	// 4 = 0x4
	NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
	NSObject<OS_dispatch_source> *_timeoutTimer;	// 12 = 0xc
	BOOL _taskInvalidationDisabled;	// 16 = 0x10
	double _timeout;	// 20 = 0x14
	int _cancelType;	// 28 = 0x1c
	id _result;	// 32 = 0x20
	NSError *_error;	// 36 = 0x24
	id _expirationHandler;	// 40 = 0x28
	id _finishedHandler;	// 44 = 0x2c
	NSString *_debugDescription;	// 48 = 0x30
	NSMutableArray *_completions;	// 52 = 0x34
	MZTaskAssertion *_taskAssertion;	// 56 = 0x38
}
@property(assign, nonatomic) int cancelType;	// G=0x300f6941; S=0x300f6899; @synthesize=_cancelType
@property(retain, nonatomic) NSMutableArray *completions;	// G=0x300f79fd; S=0x300f7a0d; @synthesize=_completions
@property(copy, nonatomic) NSString *debugDescription;	// G=0x300f79d9; S=0x300f79ed; @synthesize=_debugDescription
@property(retain, nonatomic) NSError *error;	// G=0x300f6d95; S=0x300f6cb5; @synthesize=_error
@property(copy, nonatomic) id expirationHandler;	// G=0x300f6395; S=0x300f62b5; @synthesize=_expirationHandler
@property(copy, nonatomic) id finishedHandler;	// G=0x300f6639; S=0x300f6559; @synthesize=_finishedHandler
@property(retain, nonatomic) id result;	// G=0x300f6af1; S=0x300f6a11; @synthesize=_result
@property(retain, nonatomic) MZTaskAssertion *taskAssertion;	// G=0x300f7a1d; S=0x300f7a2d; @synthesize=_taskAssertion
- (id)initWithHandlerQueue:(id)handlerQueue timeout:(double)timeout debugDescription:(id)description;	// 0x300f5ef1
- (void)_invalidateAssertion:(BOOL)assertion;	// 0x300f72b5
- (void)_invalidateTimer;	// 0x300f61ad
- (void)_onQueueFireExpirationHandlerIfNecesary;	// 0x300f67e9
- (void)addTaskCompletionBlock:(id)block;	// 0x300f74e9
- (void)beginTaskOperation;	// 0x300f6f45
// declared property getter: - (int)cancelType;	// 0x300f6941
// declared property getter: - (id)completions;	// 0x300f79fd
- (void)dealloc;	// 0x300f60b1
// declared property getter: - (id)debugDescription;	// 0x300f79d9
- (id)description;	// 0x300f6245
- (void)endTaskOperation;	// 0x300f7281
// declared property getter: - (id)error;	// 0x300f6d95
// declared property getter: - (id)expirationHandler;	// 0x300f6395
- (void)finishTaskOperationWithResult:(id)result error:(id)error;	// 0x300f71a5
// declared property getter: - (id)finishedHandler;	// 0x300f6639
- (void)invalidate;	// 0x300f7491
- (void)invokeTaskCompletionBlocksWithBlock:(id)block;	// 0x300f7541
// declared property getter: - (id)result;	// 0x300f6af1
// declared property setter: - (void)setCancelType:(int)type;	// 0x300f6899
// declared property setter: - (void)setCompletions:(id)completions;	// 0x300f7a0d
// declared property setter: - (void)setDebugDescription:(id)description;	// 0x300f79ed
// declared property setter: - (void)setError:(id)error;	// 0x300f6cb5
// declared property setter: - (void)setExpirationHandler:(id)handler;	// 0x300f62b5
// declared property setter: - (void)setFinishedHandler:(id)handler;	// 0x300f6559
// declared property setter: - (void)setResult:(id)result;	// 0x300f6a11
// declared property setter: - (void)setTaskAssertion:(id)assertion;	// 0x300f7a2d
// declared property getter: - (id)taskAssertion;	// 0x300f7a1d
@end

