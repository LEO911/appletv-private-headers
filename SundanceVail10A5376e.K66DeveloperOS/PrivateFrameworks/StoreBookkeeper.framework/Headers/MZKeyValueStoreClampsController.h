/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import <NSObject.h> // Unknown library
#import "NSCoding.h"

@class NSMutableDictionary;

@interface MZKeyValueStoreClampsController : NSObject <NSCoding> {
	id _networkTypeObserver;	// 4 = 0x4
	BOOL _pendingSave;	// 8 = 0x8
	NSMutableDictionary *_transactionClamps;	// 12 = 0xc
	double _dsidCheckTimestamp;	// 16 = 0x10
	double _authenticationNeededTimestamp;	// 24 = 0x18
	double _userAcceptedSyncTimestamp;	// 32 = 0x20
	double _networkingBlockedUntil;	// 40 = 0x28
	double _backOffUntil;	// 48 = 0x30
	double _userCancelledSignInBackOffUntil;	// 56 = 0x38
	double _nextUserCancelBackOffInterval;	// 64 = 0x40
}
@property(assign) double authenticationNeededTimestamp;	// G=0x300e6681; S=0x300e66b5; @synthesize=_authenticationNeededTimestamp
@property(assign) double backOffUntil;	// G=0x300e67b9; S=0x300e67ed; @synthesize=_backOffUntil
@property(assign) double dsidCheckTimestamp;	// G=0x300e6619; S=0x300e664d; @synthesize=_dsidCheckTimestamp
@property(assign) double networkingBlockedUntil;	// G=0x300e6751; S=0x300e6785; @synthesize=_networkingBlockedUntil
@property(assign) double nextUserCancelBackOffInterval;	// G=0x300e6889; S=0x300e68bd; @synthesize=_nextUserCancelBackOffInterval
@property(retain, nonatomic) NSMutableDictionary *transactionClamps;	// G=0x300e65f9; S=0x300e6609; @synthesize=_transactionClamps
@property(assign) double userAcceptedSyncTimestamp;	// G=0x300e66e9; S=0x300e671d; @synthesize=_userAcceptedSyncTimestamp
@property(assign) double userCancelledSignInBackOffUntil;	// G=0x300e6821; S=0x300e6855; @synthesize=_userCancelledSignInBackOffUntil
+ (id)sharedClampsController;	// 0x300e4c61
- (id)init;	// 0x300e4d5d
- (id)initWithCoder:(id)coder;	// 0x300e50c9
- (BOOL)_canScheduleTransactionBasedOfNetworkingBlocked:(id)networkingBlocked error:(id *)error;	// 0x300e60f1
- (BOOL)_canScheduleTransactionBasedOnBackOff:(id)off error:(id *)error;	// 0x300e62f1
- (BOOL)_canScheduleTransactionBasedOnDSIDCheck:(id)check error:(id *)error;	// 0x300e6201
- (BOOL)_canScheduleTransactionBasedOnType:(id)type error:(id *)error;	// 0x300e5f79
- (BOOL)_canScheduleTransactionBasedOnUserCancelledSignIn:(id)anIn error:(id *)error;	// 0x300e6471
- (id)_keyForTransaction:(id)transaction;	// 0x300e5ed5
- (double)_rightNow;	// 0x300e5ea1
// declared property getter: - (double)authenticationNeededTimestamp;	// 0x300e6681
- (void)backOffForTimeInterval:(double)timeInterval;	// 0x300e5d19
// declared property getter: - (double)backOffUntil;	// 0x300e67b9
- (BOOL)canScheduleTransaction:(id)transaction error:(id *)error;	// 0x300e5591
- (void)clearAuthenticationRequest;	// 0x300e58d9
- (void)clearBackOff;	// 0x300e5d71
- (void)clearDSIDCheckTimestamp;	// 0x300e5851
- (void)clearNetworkingBlocked;	// 0x300e5e09
- (void)clearTimestampForTransaction:(id)transaction;	// 0x300e57b1
- (void)clearUserAcceptedSyncTimestamp;	// 0x300e5a89
- (void)clearUserCancelledSignIn;	// 0x300e5cb9
- (void)dealloc;	// 0x300e539d
- (id)description;	// 0x300e5429
// declared property getter: - (double)dsidCheckTimestamp;	// 0x300e6619
- (void)encodeWithCoder:(id)coder;	// 0x300e4f59
- (BOOL)hasAuthenticatedTooRecentlyForTransaction:(id)transaction error:(id *)error;	// 0x300e5919
- (BOOL)hasUserRecentlyAcceptedSync;	// 0x300e5ac9
- (BOOL)isNetworkingBlocked;	// 0x300e5e29
// declared property getter: - (double)networkingBlockedUntil;	// 0x300e6751
// declared property getter: - (double)nextUserCancelBackOffInterval;	// 0x300e6889
- (void)reset;	// 0x300e562d
- (void)saveToUserDefaults;	// 0x300e51fd
// declared property setter: - (void)setAuthenticationNeededTimestamp:(double)timestamp;	// 0x300e66b5
- (void)setAuthenticationRequest;	// 0x300e5891
// declared property setter: - (void)setBackOffUntil:(double)until;	// 0x300e67ed
- (void)setDSIDCheckTimestamp;	// 0x300e5809
// declared property setter: - (void)setDsidCheckTimestamp:(double)timestamp;	// 0x300e664d
- (void)setNetworkingBlocked;	// 0x300e5db1
// declared property setter: - (void)setNetworkingBlockedUntil:(double)until;	// 0x300e6785
// declared property setter: - (void)setNextUserCancelBackOffInterval:(double)interval;	// 0x300e68bd
- (void)setTimestampForTransaction:(id)transaction;	// 0x300e574d
// declared property setter: - (void)setTransactionClamps:(id)clamps;	// 0x300e6609
- (void)setUserAcceptedSyncTimestamp;	// 0x300e5a45
// declared property setter: - (void)setUserAcceptedSyncTimestamp:(double)timestamp;	// 0x300e671d
- (void)setUserCancelledSignIn;	// 0x300e5b71
// declared property setter: - (void)setUserCancelledSignInBackOffUntil:(double)backOffUntil;	// 0x300e6855
// declared property getter: - (id)transactionClamps;	// 0x300e65f9
// declared property getter: - (double)userAcceptedSyncTimestamp;	// 0x300e66e9
// declared property getter: - (double)userCancelledSignInBackOffUntil;	// 0x300e6821
@end

