/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
 */

#import <NSObject.h> // Unknown library

@class NSMutableArray, NSProtocolChecker, Protocol;

@interface IMInvocationQueue : NSObject {
	id _delegate;	// 4 = 0x4
	id _target;	// 8 = 0x8
	double _dequeueRate;	// 12 = 0xc
	NSMutableArray *_queue;	// 20 = 0x14
	NSMutableArray *_options;	// 24 = 0x18
	NSProtocolChecker *_protocolChecker;	// 28 = 0x1c
	BOOL _holdQueue;	// 32 = 0x20
}
@property(readonly, assign, nonatomic) unsigned count;	// G=0x36eafd91; 
@property(assign) id delegate;	// G=0x36eafe25; S=0x36eafe39; @synthesize=_delegate
@property(assign, nonatomic) double dequeueRate;	// G=0x36eafe7d; S=0x36eaed85; @synthesize=_dequeueRate
@property(readonly, assign, nonatomic) BOOL holdQueue;	// G=0x36eafec5; @synthesize=_holdQueue
@property(readonly, assign, nonatomic) BOOL isEmpty;	// G=0x36eafdb1; 
@property(readonly, assign, nonatomic) NSMutableArray *options;	// G=0x36eafea5; @synthesize=_options
@property(retain, nonatomic) Protocol *protocol;	// G=0x36eaed65; S=0x36eaed01; 
@property(readonly, assign, nonatomic) NSProtocolChecker *protocolChecker;	// G=0x36eafeb5; @synthesize=_protocolChecker
@property(readonly, assign, nonatomic) NSMutableArray *queue;	// G=0x36eafe95; @synthesize=_queue
@property(assign) id target;	// G=0x36eafe51; S=0x36eafe65; @synthesize=_target
- (id)init;	// 0x36eaeadd
- (BOOL)_acceptsOptions:(unsigned)options;	// 0x36eaf431
- (void)_checkQueue;	// 0x36eaf055
- (id)_dequeueInvocation;	// 0x36eafa15
- (int)_enqueueInvocation:(id)invocation options:(unsigned)options;	// 0x36eaf859
- (void)_holdQueueNotification:(id)notification;	// 0x36eaedf5
- (BOOL)_insertInvocation:(id)invocation options:(unsigned)options;	// 0x36eaf655
- (BOOL)_invokeInvocation:(id)invocation;	// 0x36eaef7d
- (int)_maxQueueLimitSize;	// 0x36eaf3fd
- (int)_numberOfLimitedMessagesInQueue;	// 0x36eaf2c5
- (unsigned)_optionsForInvocation:(id)invocation;	// 0x36eaf25d
- (void)_releaseQueueNotification:(id)notification;	// 0x36eaee6d
- (BOOL)_replaceSimilarInvocation:(id)invocation;	// 0x36eaf4a1
- (void)_setQueueTimer;	// 0x36eaeec9
- (void)_stepQueueNotification:(id)notification;	// 0x36eaeda9
// declared property getter: - (unsigned)count;	// 0x36eafd91
- (void)dealloc;	// 0x36eaeb7d
// declared property getter: - (id)delegate;	// 0x36eafe25
// declared property getter: - (double)dequeueRate;	// 0x36eafe7d
- (void)forwardInvocation:(id)invocation;	// 0x36eaebf5
// declared property getter: - (BOOL)holdQueue;	// 0x36eafec5
- (void)invokeAll;	// 0x36eafd29
// declared property getter: - (BOOL)isEmpty;	// 0x36eafdb1
- (id)methodSignatureForSelector:(SEL)selector;	// 0x36eaecb5
// declared property getter: - (id)options;	// 0x36eafea5
- (id)peek;	// 0x36eafde1
// declared property getter: - (id)protocol;	// 0x36eaed65
// declared property getter: - (id)protocolChecker;	// 0x36eafeb5
// declared property getter: - (id)queue;	// 0x36eafe95
- (void)removeAllInvocations;	// 0x36eafbbd
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x36eafe39
// declared property setter: - (void)setDequeueRate:(double)rate;	// 0x36eaed85
// declared property setter: - (void)setProtocol:(id)protocol;	// 0x36eaed01
// declared property setter: - (void)setTarget:(id)target;	// 0x36eafe65
// declared property getter: - (id)target;	// 0x36eafe51
@end

