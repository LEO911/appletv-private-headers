/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
 */

#import <NSObject.h> // Unknown library
#import "AFManagedStore.h"

@class DKConnection, NSMutableDictionary, NSString;
@protocol AFAssistantUIService, AFSpeechDelegate;

@interface AFConnection : NSObject <AFManagedStore> {
	DKConnection *_connection;	// 4 = 0x4
	id<AFAssistantUIService> _delegate;	// 8 = 0x8
	id<AFSpeechDelegate> _speechDelegate;	// 12 = 0xc
	float _averagePower;	// 16 = 0x10
	float _peakPower;	// 20 = 0x14
	NSString *_outstandingRequestClass;	// 24 = 0x18
	unsigned _stateInSync : 1;	// 28 = 0x1c
	unsigned _shouldSpeak : 1;	// 28 = 0x1c
	unsigned _isCapturingSpeech : 1;	// 28 = 0x1c
	unsigned _hasOutstandingRequest : 1;	// 28 = 0x1c
	unsigned _replyContextMayInitiateCall : 1;	// 28 = 0x1c
	BOOL _hasActiveRequest;	// 29 = 0x1d
	NSMutableDictionary *_replies;	// 32 = 0x20
}
@property(readonly, assign) float averagePower;	// G=0x346179d5; converted property
@property(assign, nonatomic) __weak id<AFAssistantUIService> delegate;	// G=0x34618461; S=0x346150d1; @synthesize=_delegate
@property(readonly, assign, nonatomic) BOOL isRecording;	// G=0x346179ad; 
@property(readonly, assign) float peakPower;	// G=0x346179e5; converted property
@property(assign, nonatomic) __weak id<AFSpeechDelegate> speechDelegate;	// G=0x34618481; S=0x346184a1; @synthesize=_speechDelegate
+ (void)_reachabilityDidChange:(id)_reachability;	// 0x34616c79
+ (BOOL)assistantIsEnabled;	// 0x34616acd
+ (BOOL)assistantIsSupported;	// 0x34616c6d
+ (BOOL)assistantIsSupportedForLanguageCode:(id)languageCode error:(id *)error;	// 0x34616b25
+ (void)beginMonitoringAvailability;	// 0x34616d05
+ (void)defrost;	// 0x34616efd
+ (void)initialize;	// 0x34615029
+ (BOOL)isAvailable;	// 0x34616d71
+ (void)stopMonitoringAvailability;	// 0x34616e01
+ (BOOL)userDataSyncNeeded;	// 0x34616e5d
- (id)init;	// 0x3461502d
- (void).cxx_destruct;	// 0x346184b5
- (void)_asyncBarrierWithBlock:(id)block;	// 0x34618741
- (void)_barrier;	// 0x34618709
- (void)_cancelRequestTimeout;	// 0x346167e9
- (void)_checkAndSetIsCapturingSpeech:(BOOL)speech;	// 0x34615111
- (void)_clearAssistantInfoForAccountWithIdentifier:(id)identifier;	// 0x34618791
- (void)_clearConnection;	// 0x34616519
- (id)_connection;	// 0x346162a5
- (void)_handleMessage:(id)message;	// 0x346161a5
- (void)_invokeRequestTimeout;	// 0x34616741
- (void)_msgDismissAssistant:(id)assistant;	// 0x34615c69
- (void)_msgDoCommand:(id)command;	// 0x34615891
- (void)_msgOpenURL:(id)url;	// 0x34615a31
- (void)_msgReplyMayInitiateCall:(id)call;	// 0x34615e65
- (void)_msgRequestCompleted:(id)completed;	// 0x34615a01
- (void)_msgRequestError:(id)error;	// 0x34615d2d
- (void)_msgSpeechLevelUpdate:(id)update;	// 0x34615eb1
- (void)_msgSpeechRecognitionDidFail:(id)_msgSpeechRecognition;	// 0x346160f5
- (void)_msgSpeechRecognized:(id)recognized;	// 0x34616035
- (void)_msgSpeechRecordingDidBegin:(id)_msgSpeechRecording;	// 0x34615ea1
- (void)_msgSpeechRecordingDidCancel:(id)_msgSpeechRecording;	// 0x34615f95
- (void)_msgSpeechRecordingDidEnd:(id)_msgSpeechRecording;	// 0x34615f65
- (void)_msgSpeechRecordingDidFail:(id)_msgSpeechRecording;	// 0x34615fc5
- (void)_msgSpeechRecordingWillBegin:(id)_msgSpeechRecording;	// 0x34615e91
- (void)_msgStateUpdate:(id)update;	// 0x34615dc9
- (void)_requestDidEnd;	// 0x34615231
- (void)_requestStateUpdate;	// 0x34616825
- (void)_requestWillBeginWithRequestClass:(id)_request logAggregateData:(BOOL)data;	// 0x346151dd
- (void)_scheduleRequestTimeout:(double)timeout;	// 0x346167ad
- (void)_sendMessage:(id)message withReply:(id)reply;	// 0x34618629
- (void)_sendMessage:(id)message withReplySync:(id)replySync;	// 0x346186a1
- (void)_tellDelegateRequestFailed:(id)failed requestClass:(id)aClass;	// 0x346152d5
- (void)_tellDelegateRequestFinished;	// 0x34615271
- (void)_tellDelegateShouldSpeakChanged:(BOOL)_tellDelegate;	// 0x34615369
- (void)_tellSpeechDelegateDidRecognizeSpeechPhrases:(id)_tellSpeechDelegate correctionIdentifier:(id)identifier;	// 0x34615589
- (void)_tellSpeechDelegateRecognitionDidFail:(id)_tellSpeechDelegateRecognition;	// 0x34615825
- (void)_tellSpeechDelegateRecordingDidBegin;	// 0x34615421
- (void)_tellSpeechDelegateRecordingDidCancel;	// 0x346154c9
- (void)_tellSpeechDelegateRecordingDidEnd;	// 0x34615475
- (void)_tellSpeechDelegateRecordingDidFail:(id)_tellSpeechDelegateRecording;	// 0x3461551d
- (void)_tellSpeechDelegateRecordingWillBegin;	// 0x346153cd
- (void)_unhandledMessage:(id)message;	// 0x34616135
- (void)_willCancelRequest;	// 0x34616a25
- (void)_willCompleteRequest;	// 0x34616a95
- (void)_willFailRequest;	// 0x34616a5d
- (void)_willStartRequest;	// 0x346169dd
// converted property getter: - (float)averagePower;	// 0x346179d5
- (void)cancelRequest;	// 0x3461778d
- (void)cancelSpeech;	// 0x346174f1
- (void)clearAndSetApplicationContext;	// 0x34617efd
- (void)clearAndSetApplicationContextWithBulletins:(id)bulletins;	// 0x34617f11
- (void)clearContext;	// 0x34617e7d
- (void)clearUndoStack;	// 0x346180c5
- (void)dealloc;	// 0x34615091
// declared property getter: - (id)delegate;	// 0x34618461
- (id)domainObjectForKey:(id)key;	// 0x34618145
- (void)endSession;	// 0x34616e69
// declared property getter: - (BOOL)isRecording;	// 0x346179ad
// converted property getter: - (float)peakPower;	// 0x346179e5
- (void)preheat;	// 0x34616fc5
- (void)redoRequest;	// 0x34618045
- (BOOL)replyContextMayInitiateCall;	// 0x346179f5
- (void)rollbackRequest;	// 0x34617831
- (void)sendGenericAceCommand:(id)command;	// 0x34617a09
- (void)sendGenericAceCommand:(id)command conflictHandler:(id)handler;	// 0x34617a1d
- (void)sendReplyCommand:(id)command;	// 0x34617dbd
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x346150d1
- (void)setDomainObject:(id)object forKey:(id)key;	// 0x34618371
- (BOOL)setLanguageCode:(id)code error:(id *)error;	// 0x34617045
- (void)setLockState:(BOOL)state screenLocked:(BOOL)locked;	// 0x34617195
// declared property setter: - (void)setSpeechDelegate:(id)delegate;	// 0x346184a1
- (BOOL)shouldSpeak;	// 0x346179c1
// declared property getter: - (id)speechDelegate;	// 0x34618481
- (void)startRequestWithCorrectedText:(id)correctedText forSpeechIdentifier:(id)speechIdentifier;	// 0x346178b1
- (void)startRequestWithText:(id)text;	// 0x346173b9
- (void)startRequestWithText:(id)text timeout:(double)timeout;	// 0x346172c9
- (void)startSpeechRequestWithOptions:(id)options;	// 0x346173e9
- (void)startSpeechRequestWithSpeechFileAtURL:(id)url;	// 0x34618521
- (void)stopSpeech;	// 0x34617779
- (void)stopSpeechWithOptions:(id)options;	// 0x34617689
- (void)undoRequest;	// 0x34617fc5
- (void)updateSpeechOptions:(id)options;	// 0x346175a9
@end

