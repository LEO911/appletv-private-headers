/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import "CalDAVPrincipal.h"
#import <NSObject.h> // Unknown library

@class NSString, MobileCalDAVAccount, NSSet, NSURL, NSMutableDictionary, NSDictionary, NSNumber, CalDAVRefreshContext, NSDateComponents;
@protocol CalDAVAccount, CoreDAVTaskManager;

@interface MobileCalDAVPrincipal : NSObject <CoreDAVAccountInfoProvider, CalDAVPrincipal> {
	NSString *_uid;	// 4 = 0x4
	MobileCalDAVAccount *_account;	// 8 = 0x8
	NSSet *_calendarUserAddresses;	// 12 = 0xc
	NSMutableDictionary *_calendarUserAddressesPerCalendar;	// 16 = 0x10
	NSURL *_preferredCalendarUserAddress;	// 20 = 0x14
	NSString *_fullName;	// 24 = 0x18
	NSURL *_calendarHomeURL;	// 28 = 0x1c
	NSURL *_principalURL;	// 32 = 0x20
	NSURL *_defaultCalendarURL;	// 36 = 0x24
	NSURL *_notificationCollectionURL;	// 40 = 0x28
	NSString *_notificationCollectionCTag;	// 44 = 0x2c
	NSURL *_inboxURL;	// 48 = 0x30
	NSString *_inboxCTag;	// 52 = 0x34
	NSURL *_outboxURL;	// 56 = 0x38
	NSURL *_dropBoxURL;	// 60 = 0x3c
	NSString *_notificationURLString;	// 64 = 0x40
	NSDictionary *_pushTransports;	// 68 = 0x44
	NSString *_calendarHomePushKey;	// 72 = 0x48
	NSString *_XMPPServer;	// 76 = 0x4c
	NSNumber *_quotaFreeBytes;	// 80 = 0x50
	BOOL _isDelegate;	// 84 = 0x54
	BOOL _isWritable;	// 85 = 0x55
	BOOL _isEnabled;	// 86 = 0x56
	BOOL _isExpandPropertyReportSupported;	// 87 = 0x57
	BOOL _supportsFreebusy;	// 88 = 0x58
	BOOL _supportsPush;	// 89 = 0x59
	BOOL _shouldRefreshPrincipalSearchProperties;	// 90 = 0x5a
	BOOL _shouldUpdatePushDelegate;	// 91 = 0x5b
	BOOL _isDirty;	// 92 = 0x5c
	BOOL _calendarsAreDirty;	// 93 = 0x5d
	int _calendarChangeIndex;	// 96 = 0x60
}
@property(readonly, assign) NSString *APSEnv;	// G=0x3314c4c5; 
@property(readonly, assign) NSURL *APSSubscriptionURL;	// G=0x3314c445; 
@property(readonly, assign) NSString *APSTopic;	// G=0x3314c401; 
@property(retain) NSString *XMPPServer;	// G=0x3314b3f5; S=0x3314b405; 
@property(readonly, assign) id<CalDAVAccount> account;	// G=0x3314a869; 
@property(retain) NSString *calendarHomePushKey;	// G=0x3314b371; S=0x3314b381; 
@property(retain) NSURL *calendarHomeURL;	// G=0x3314ac9d; S=0x3314acbd; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x3314ab71; S=0x3314ab81; 
@property(readonly, assign) NSSet *calendars;	// G=0x3314bb1d; 
@property(assign) BOOL calendarsAreDirty;	// G=0x3314c335; S=0x3314c279; @synthesize=_calendarsAreDirty
@property(retain) NSURL *defaultCalendarURL;	// G=0x3314aded; S=0x3314ae0d; 
@property(readonly, assign) NSSet *deletedCalendarURLs;	// G=0x3314bb3d; 
@property(retain) NSURL *dropBoxURL;	// G=0x3314b195; S=0x3314b1b5; 
@property(readonly, assign) NSDateComponents *eventFilterEndDate;	// G=0x3314b959; 
@property(readonly, assign) NSDateComponents *eventFilterStartDate;	// G=0x3314b8fd; 
@property(retain) NSString *fullName;	// G=0x3314ac19; S=0x3314ac29; 
@property(retain) NSString *inboxCTag;	// G=0x3314b069; S=0x3314b079; 
@property(retain) NSURL *inboxURL;	// G=0x3314afc1; S=0x3314afe1; 
@property(assign) BOOL isDelegate;	// G=0x3314b4e9; S=0x3314b4f9; 
@property(assign) BOOL isDirty;	// G=0x3314cfed; S=0x3314cffd; @synthesize=_isDirty
@property(assign) BOOL isEnabled;	// G=0x3314b579; S=0x3314b589; 
@property(readonly, assign) BOOL isEnabledForEvents;	// G=0x3314b5e5; 
@property(readonly, assign) BOOL isEnabledForTodos;	// G=0x3314b641; 
@property(assign) BOOL isExpandPropertyReportSupported;	// G=0x3314ba6d; S=0x3314ba7d; 
@property(readonly, assign) BOOL isMergeSync;	// G=0x3314b5c1; 
@property(assign) BOOL isWritable;	// G=0x3314b531; S=0x3314b541; 
@property(retain) NSString *notificationCollectionCTag;	// G=0x3314af3d; S=0x3314af4d; 
@property(retain) NSURL *notificationCollectionURL;	// G=0x3314ae95; S=0x3314aeb5; 
@property(retain) NSString *notificationURLString;	// G=0x3314b23d; S=0x3314b24d; 
@property(retain) NSURL *outboxURL;	// G=0x3314b0ed; S=0x3314b10d; 
@property(readonly, assign) NSURL *preferredCalendarUserAddress;	// G=0x3314c835; 
@property(retain) NSURL *principalURL;	// G=0x3314ad45; S=0x3314ad65; 
@property(readonly, assign) NSSet *pushKeys;	// G=0x3314c5b9; 
@property(retain) NSDictionary *pushTransports;	// G=0x3314b2d1; S=0x3314b2e1; 
@property(retain) NSNumber *quotaFreeBytes;	// G=0x3314b479; S=0x3314b489; 
@property(readonly, assign) CalDAVRefreshContext *refreshContext;	// G=0x3314bafd; 
@property(assign) BOOL shouldRefreshPrincipalSearchProperties;	// G=0x3314cfad; S=0x3314cfbd; @synthesize=_shouldRefreshPrincipalSearchProperties
@property(assign) BOOL shouldUpdatePushDelegate;	// G=0x3314cfcd; S=0x3314cfdd; @synthesize=_shouldUpdatePushDelegate
@property(readonly, assign) BOOL supportsExtendedCalendarQuery;	// G=0x3314b69d; 
@property(assign) BOOL supportsFreebusy;	// G=0x3314bab5; S=0x3314bac5; 
@property(assign) BOOL supportsPush;	// G=0x3314d00d; S=0x3314d01d; @synthesize=_supportsPush
@property(readonly, assign) id<CoreDAVTaskManager> taskManager;	// G=0x3314caa5; 
@property(readonly, assign) NSDateComponents *todoFilterEndDate;	// G=0x3314ba29; 
@property(readonly, assign) NSDateComponents *todoFilterStartDate;	// G=0x3314b9cd; 
@property(readonly, assign) NSString *uid;	// G=0x3314cf9d; @synthesize=_uid
+ (id)_preferredCalendarUserAddressFromAddresses:(id)addresses;	// 0x3314c6b9
+ (BOOL)compareAddressURL:(id)url localString:(id)string;	// 0x33149019
- (id)init;	// 0x331491f1
- (id)initWithConfiguration:(id)configuration account:(id)account;	// 0x331493c9
// declared property getter: - (id)APSEnv;	// 0x3314c4c5
// declared property getter: - (id)APSSubscriptionURL;	// 0x3314c445
// declared property getter: - (id)APSTopic;	// 0x3314c401
// declared property getter: - (id)XMPPServer;	// 0x3314b3f5
- (id)_addUsernameIfNeeded:(id)needed;	// 0x3314a809
- (id)_sharedSyncEndDate;	// 0x3314b6d1
- (id)_startDateFromDaysToSync:(int)sync;	// 0x3314b7d1
- (BOOL)_userAddressSet:(id)set isEqualToSet:(id)set2;	// 0x3314a889
// declared property getter: - (id)account;	// 0x3314a869
- (id)accountID;	// 0x3314cc55
- (id)additionalHeaderValues;	// 0x3314cc7d
// declared property getter: - (id)calendarHomePushKey;	// 0x3314b371
// declared property getter: - (id)calendarHomeURL;	// 0x3314ac9d
- (id)calendarOfType:(int)type atURL:(id)url withOptions:(id)options;	// 0x3314bfa5
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)url;	// 0x3314c9c1
// declared property getter: - (id)calendarUserAddresses;	// 0x3314ab71
- (id)calendarUserAddressesForCalendar:(id)calendar;	// 0x3314c199
// declared property getter: - (id)calendars;	// 0x3314bb1d
// declared property getter: - (BOOL)calendarsAreDirty;	// 0x3314c335
- (BOOL)clearCalendarChanges;	// 0x3314bf51
- (id)configuration;	// 0x33149e91
- (void)dealloc;	// 0x33149205
// declared property getter: - (id)defaultCalendarURL;	// 0x3314aded
- (id)defaultEventCalendarTitle;	// 0x3314c151
- (id)defaultTodoCalendarTitle;	// 0x3314c15d
// declared property getter: - (id)deletedCalendarURLs;	// 0x3314bb3d
// declared property getter: - (id)dropBoxURL;	// 0x3314b195
// declared property getter: - (id)eventFilterEndDate;	// 0x3314b959
// declared property getter: - (id)eventFilterStartDate;	// 0x3314b8fd
// declared property getter: - (id)fullName;	// 0x3314ac19
- (BOOL)handleCertificateError:(id)error;	// 0x3314cdbd
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x3314cd95
- (BOOL)hasCalendarUserAddress:(id)address;	// 0x3314c8b1
- (id)host;	// 0x3314cae5
- (id)identityPersist;	// 0x3314cc35
// declared property getter: - (id)inboxCTag;	// 0x3314b069
// declared property getter: - (id)inboxURL;	// 0x3314afc1
// declared property getter: - (BOOL)isDelegate;	// 0x3314b4e9
// declared property getter: - (BOOL)isDirty;	// 0x3314cfed
// declared property getter: - (BOOL)isEnabled;	// 0x3314b579
// declared property getter: - (BOOL)isEnabledForEvents;	// 0x3314b5e5
// declared property getter: - (BOOL)isEnabledForTodos;	// 0x3314b641
// declared property getter: - (BOOL)isExpandPropertyReportSupported;	// 0x3314ba6d
// declared property getter: - (BOOL)isMergeSync;	// 0x3314b5c1
// declared property getter: - (BOOL)isWritable;	// 0x3314b531
- (void)noteFailedNetworkRequest;	// 0x3314ceed
- (void)noteFailedProtocolRequest;	// 0x3314cf25
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x3314cb25
- (void)noteSuccessfulRequestWithNumDownloadedElements:(int)numDownloadedElements;	// 0x3314ceb1
- (void)noteTimeSpentInNetworking:(double)networking;	// 0x3314cf5d
// declared property getter: - (id)notificationCollectionCTag;	// 0x3314af3d
// declared property getter: - (id)notificationCollectionURL;	// 0x3314ae95
// declared property getter: - (id)notificationURLString;	// 0x3314b23d
// declared property getter: - (id)outboxURL;	// 0x3314b0ed
- (id)password;	// 0x3314cc15
- (int)port;	// 0x3314cb05
// declared property getter: - (id)preferredCalendarUserAddress;	// 0x3314c835
- (void)prepareCalendarsForSyncWithCompletionBlock:(id)completionBlock;	// 0x3314bc55
// declared property getter: - (id)principalURL;	// 0x3314ad45
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x3314ccf5
// declared property getter: - (id)pushKeys;	// 0x3314c5b9
// declared property getter: - (id)pushTransports;	// 0x3314b2d1
// declared property getter: - (id)quotaFreeBytes;	// 0x3314b479
// declared property getter: - (id)refreshContext;	// 0x3314bafd
- (void)removeCalendar:(id)calendar;	// 0x3314c169
- (id)scheme;	// 0x3314cac5
- (id)serverComplianceClasses;	// 0x3314cc75
- (id)serverRoot;	// 0x3314cbf1
- (void)setAccount:(id)account;	// 0x3314a879
// declared property setter: - (void)setCalendarHomePushKey:(id)key;	// 0x3314b381
// declared property setter: - (void)setCalendarHomeURL:(id)url;	// 0x3314acbd
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x3314ab81
- (void)setCalendarUserAddresses:(id)addresses forCalendar:(id)calendar;	// 0x3314c1d5
// declared property setter: - (void)setCalendarsAreDirty:(BOOL)dirty;	// 0x3314c279
// declared property setter: - (void)setDefaultCalendarURL:(id)url;	// 0x3314ae0d
// declared property setter: - (void)setDropBoxURL:(id)url;	// 0x3314b1b5
// declared property setter: - (void)setFullName:(id)name;	// 0x3314ac29
// declared property setter: - (void)setInboxCTag:(id)tag;	// 0x3314b079
// declared property setter: - (void)setInboxURL:(id)url;	// 0x3314afe1
// declared property setter: - (void)setIsDelegate:(BOOL)delegate;	// 0x3314b4f9
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x3314cffd
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x3314b589
// declared property setter: - (void)setIsExpandPropertyReportSupported:(BOOL)supported;	// 0x3314ba7d
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x3314b541
// declared property setter: - (void)setNotificationCollectionCTag:(id)tag;	// 0x3314af4d
// declared property setter: - (void)setNotificationCollectionURL:(id)url;	// 0x3314aeb5
// declared property setter: - (void)setNotificationURLString:(id)string;	// 0x3314b24d
// declared property setter: - (void)setOutboxURL:(id)url;	// 0x3314b10d
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x3314ad65
// declared property setter: - (void)setPushTransports:(id)transports;	// 0x3314b2e1
// declared property setter: - (void)setQuotaFreeBytes:(id)bytes;	// 0x3314b489
// declared property setter: - (void)setShouldRefreshPrincipalSearchProperties:(BOOL)refreshPrincipalSearchProperties;	// 0x3314cfbd
// declared property setter: - (void)setShouldUpdatePushDelegate:(BOOL)updatePushDelegate;	// 0x3314cfdd
// declared property setter: - (void)setSupportsFreebusy:(BOOL)freebusy;	// 0x3314bac5
// declared property setter: - (void)setSupportsPush:(BOOL)push;	// 0x3314d01d
// declared property setter: - (void)setXMPPServer:(id)server;	// 0x3314b405
- (BOOL)shouldCompressRequests;	// 0x3314ce2d
- (BOOL)shouldFailAllTasks;	// 0x3314cdc1
- (BOOL)shouldHandleHTTPCookiesForURL:(id)url;	// 0x3314cdc5
// declared property getter: - (BOOL)shouldRefreshPrincipalSearchProperties;	// 0x3314cfad
- (BOOL)shouldSendClientInfoHeaderForURL:(id)url;	// 0x3314cdc9
// declared property getter: - (BOOL)shouldUpdatePushDelegate;	// 0x3314cfcd
- (BOOL)shouldUseOpportunisticSockets;	// 0x3314ce8d
// declared property getter: - (BOOL)supportsExtendedCalendarQuery;	// 0x3314b69d
// declared property getter: - (BOOL)supportsFreebusy;	// 0x3314bab5
// declared property getter: - (BOOL)supportsPush;	// 0x3314d00d
// declared property getter: - (id)taskManager;	// 0x3314caa5
// declared property getter: - (id)todoFilterEndDate;	// 0x3314ba29
// declared property getter: - (id)todoFilterStartDate;	// 0x3314b9cd
// declared property getter: - (id)uid;	// 0x3314cf9d
- (id)user;	// 0x3314cbf5
- (id)userAgentHeader;	// 0x3314cc79
@end

