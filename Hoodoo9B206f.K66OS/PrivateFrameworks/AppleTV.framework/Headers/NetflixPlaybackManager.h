/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTV.framework/AppleTV
 */

#import "AppleTV-Structs.h"
#import <NSObject.h> // Unknown library

@class NSData, NSLock, NSMutableArray, NSDictionary;

__attribute__((visibility("hidden")))
@interface NetflixPlaybackManager : NSObject {
@private
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
	NSDictionary *testStreams_;	// 152 = 0x98
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x36955a4d; S=0x36955a5d; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x369554e1; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x36955c61; S=0x36955c79; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x36955c8d; S=0x36955ca5; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x36955bc9; S=0x36955bd9; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x36955525; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x36955589; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x36955645; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x3695596d; S=0x3695597d; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x36955c15; S=0x36955c2d; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x36955be9; S=0x36955c01; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x36955ae5; S=0x36955af5; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x36955b05; S=0x36955b15; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x3695594d; S=0x369513a9; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x3695595d; S=0x369514ad; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x369558dd; S=0x369558f1; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x36955c41; S=0x36955c51; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x36955b51; S=0x36955b69; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x369558bd; S=0x369558cd; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x36955915; S=0x36955929; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x36955aa5; S=0x36955ab5; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x36955a6d; S=0x36955a81; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x36955b9d; S=0x36955bb5; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x36955b7d; S=0x36955b8d; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x369559a1; S=0x369559b1; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x36955cb9; S=0x36955cd1; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x36955ce5; S=0x36955cf9; @synthesize=stalled_
@property(assign) int state;	// G=0x36955ac5; S=0x36955ad5; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x36955a0d; S=0x36955a1d; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x369559d5; S=0x369559e9; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x36955a2d; S=0x36955a3d; @synthesize=subtitlesTrackIndex_
@property(copy, nonatomic) NSDictionary *testStreams;	// G=0x36955d29; S=0x3695582d; @synthesize=testStreams_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x36955b25; S=0x36955b3d; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x36955d09; S=0x36955d19; @synthesize=totalNumberOfStalls_
+ (void)initialize;	// 0x36951095
+ (id)sharedInstance;	// 0x36951099
- (id)init;	// 0x36951179
- (void)audioSelect:(id)select;	// 0x36952d29
- (void)audioSelectAsync:(id)async;	// 0x36952d65
// declared property getter: - (int)audioTrackIndex;	// 0x36955a4d
// declared property getter: - (unsigned)bitrate;	// 0x369554e1
- (void)buffering:(double)buffering;	// 0x36951a0d
- (void)bufferingComplete:(double)complete;	// 0x36951b21
// declared property getter: - (long long)bufferingStartBytes;	// 0x36955c61
// declared property getter: - (double)bufferingStartTime;	// 0x36955c8d
// declared property getter: - (BwEntry *)bwEntry;	// 0x36955bc9
// declared property getter: - (long long)bytes;	// 0x36955525
// declared property getter: - (long long)bytesForInterface;	// 0x36955589
- (void)clearErrorStack;	// 0x36955895
- (void)close;	// 0x36951919
- (id)createErrorFromStack;	// 0x36953109
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x36955645
- (void)dealloc;	// 0x3695126d
- (void)end:(double)end reason:(id)reason;	// 0x3695173d
// declared property getter: - (id)errorStack;	// 0x3695596d
- (int)fetchBookmark:(id)bookmark;	// 0x36955219
// declared property getter: - (long long)lastBwEntryBytes;	// 0x36955c15
// declared property getter: - (double)lastBwEntryTime;	// 0x36955be9
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x36955ae5
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x36955b05
// declared property getter: - (IMediaControl *)mediaControl;	// 0x3695594d
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x3695595d
- (void)mediaDidAcquireLicense;	// 0x36953745
- (void)mediaDidAuthorize;	// 0x36953615
- (void)mediaDidBuildPlaylists;	// 0x369537dd
- (void)mediaDidCdnSelect;	// 0x369536ad
- (void)mediaDidClose;	// 0x36952f59
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x36953a3d
- (void)mediaDidFailOpen:(id)media;	// 0x36953495
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x36955765
- (void)mediaDidHandleNccpError:(id)media;	// 0x36952fcd
- (void)mediaDidLoadSubtitles:(id)media;	// 0x36953909
- (void)mediaDidSelectAudio:(id)media;	// 0x3695567d
- (void)mediaDidSetSpeed:(float)media;	// 0x36953829
- (void)mediaOpenComplete:(id)complete;	// 0x36952ec1
- (void)mediaWillAcquireLicense;	// 0x369536f9
- (void)mediaWillAuthorize;	// 0x369535c9
- (void)mediaWillBuildPlaylists;	// 0x36953791
- (void)mediaWillCdnSelect;	// 0x36953661
- (void)mediaWillLoadSubtitles;	// 0x369538bd
// declared property getter: - (id)movieDetails;	// 0x369558dd
// declared property getter: - (int)networkInterfaceType;	// 0x36955c41
- (void)networkSelection:(id)selection;	// 0x36952b11
- (int)networkTypeStringToType:(id)type;	// 0x36952a99
// declared property getter: - (double)observedBitrate;	// 0x36955b51
- (void)open:(id)open;	// 0x369514d1
- (void)openAsync:(id)async;	// 0x36953ea9
// declared property getter: - (BOOL)openNotificationSent;	// 0x369558bd
- (void)pause:(double)pause;	// 0x3695157d
- (void)play:(double)play;	// 0x3695150d
// declared property getter: - (id)playReadyKey;	// 0x36955915
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x36955aa5
// declared property getter: - (id)playbackCommandLock;	// 0x36955a6d
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x3695539d
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x3695272d
// declared property getter: - (long long)pollBytesStart;	// 0x36955b9d
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x36955b7d
- (void)postMediaCloseFailure;	// 0x36953da5
- (void)postMediaOpenFailure:(int)failure;	// 0x36953bf9
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x36953cd1
- (void)postMediaOpenSuccess:(id)success;	// 0x36953b5d
// declared property getter: - (id)reportableActionId;	// 0x369559a1
- (void)reposition:(double)reposition;	// 0x3695165d
// declared property getter: - (double)sampleReportWindow;	// 0x36955cb9
- (void)selectedPlaylist:(id)playlist;	// 0x3695283d
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x36955a5d
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x36955c79
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x36955ca5
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x36955bd9
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x3695597d
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x36955c2d
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x36955c01
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x36955af5
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x36955b15
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x369513a9
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x369514ad
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x369558f1
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x36955c51
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x36955b69
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x369558cd
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x36955929
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x36955ab5
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x36955a81
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x36955bb5
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x36955b8d
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x369559b1
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x36955cd1
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x36955cf9
// declared property setter: - (void)setState:(int)state;	// 0x36955ad5
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x36955a1d
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x369559e9
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x36955a3d
// declared property setter: - (void)setTestStreams:(id)streams;	// 0x3695582d
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x36955b3d
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x36955d19
// declared property getter: - (bool)stalled;	// 0x36955ce5
// declared property getter: - (int)state;	// 0x36955ac5
- (void)stop:(double)stop;	// 0x369516cd
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x36951c99
- (void)subtitlesDisable;	// 0x36952a19
- (void)subtitlesDisableAsync;	// 0x369550d9
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x36955a0d
// declared property getter: - (id)subtitlesProcessingLock;	// 0x369559d5
- (void)subtitlesSelect:(id)select;	// 0x369529dd
- (void)subtitlesSelectAbort;	// 0x36952a55
- (void)subtitlesSelectAsync:(id)async;	// 0x36954ce1
// declared property getter: - (int)subtitlesTrackIndex;	// 0x36955a2d
// declared property getter: - (id)testStreams;	// 0x36955d29
// declared property getter: - (long long)totalBytesTransferred;	// 0x36955b25
// declared property getter: - (int)totalNumberOfStalls;	// 0x36955d09
- (void)unpause:(double)unpause;	// 0x369515ed
- (void)updatePts:(double)pts;	// 0x36951d15
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x369522a1
@end

