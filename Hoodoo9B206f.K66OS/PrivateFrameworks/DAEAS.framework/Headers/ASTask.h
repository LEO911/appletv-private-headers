/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "DATask.h"
#import "NSURLConnectionDelegate.h"
#import "DAEAS-Structs.h"
#import <NSObject.h> // Unknown library

@class ASTaskManager, NSDate, NSHTTPURLResponse, NSURLConnection, NSURLRequest, ASItem, NSTimer, DATaskManager, ASParseContext, NSMutableSet, NSString, NSError;

@interface ASTask : NSObject <DATask, NSURLConnectionDelegate> {
	BOOL _haveSwitchedCodePage;	// 4 = 0x4
	BOOL _haveParsedCommand;	// 5 = 0x5
	ASItem *_currentlyParsingItem;	// 8 = 0x8
	id _delegate;	// 12 = 0xc
	NSHTTPURLResponse *_response;	// 16 = 0x10
	ASParseContext *_parseContext;	// 20 = 0x14
	NSURLConnection *_connection;	// 24 = 0x18
@private
	NSURLRequest *_request;	// 28 = 0x1c
	NSMutableSet *_attemptedIdentities;	// 32 = 0x20
	BOOL _isFakingIt;	// 36 = 0x24
	BOOL _didSendRequest;	// 37 = 0x25
	BOOL _didFailWithError;	// 38 = 0x26
	BOOL _didCancel;	// 39 = 0x27
	BOOL _didReceiveResponse;	// 40 = 0x28
	BOOL _didReceiveData;	// 41 = 0x29
	BOOL _didFinishLoading;	// 42 = 0x2a
	BOOL _didReset;	// 43 = 0x2b
	BOOL _finished;	// 44 = 0x2c
	BOOL _inDelegateCallout;	// 45 = 0x2d
	BOOL _finishedByTimeoutEnforcer;	// 46 = 0x2e
	int _interfaceBinding;	// 48 = 0x30
	void *_context;	// 52 = 0x34
	BOOL _isExclusive;	// 56 = 0x38
	BOOL _receivedBadPasswordResponse;	// 57 = 0x39
	BOOL _askedToCancelWhileModal;	// 58 = 0x3a
	BOOL _haveCheckedForTopLevelError;	// 59 = 0x3b
	BOOL _handledTopLevelError;	// 60 = 0x3c
	int _taskID;	// 64 = 0x40
	ASTaskManager *_taskManager;	// 68 = 0x44
	int _modalReason;	// 72 = 0x48
	int _modalPushCount;	// 76 = 0x4c
	NSString *_lastKnownPolicyKey;	// 80 = 0x50
	NSError *_passwordNotificationError;	// 84 = 0x54
	NSString *_lastKnownPassword;	// 88 = 0x58
	NSDate *_dateConnectionWentOut;	// 92 = 0x5c
	NSTimer *_timeoutEnforcer;	// 96 = 0x60
@protected
	BOOL _retry;	// 100 = 0x64
}
@property(assign, nonatomic) BOOL askedToCancelWhileModal;	// G=0x321fcf31; S=0x321fcf41; @synthesize=_askedToCancelWhileModal
@property(assign, nonatomic) void *context;	// G=0x321fce9d; S=0x321fcead; @synthesize=_context
@property(retain, nonatomic) ASItem *currentlyParsingItem;	// G=0x321fcefd; S=0x321fcf0d; @synthesize=_currentlyParsingItem
@property(assign, nonatomic) id delegate;	// G=0x321fce7d; S=0x321fce8d; @synthesize=_delegate
@property(assign, nonatomic) int interfaceBinding;	// G=0x321fcebd; S=0x321fcecd; @synthesize=_interfaceBinding
@property(assign, nonatomic) BOOL isExclusive;	// G=0x321fcedd; S=0x321fceed; @synthesize=_isExclusive
@property(retain, nonatomic) NSString *lastKnownPassword;	// G=0x321fcf51; S=0x321fcf61; @synthesize=_lastKnownPassword
@property(readonly, assign) int taskID;	// G=0x321f7441; converted property
@property(assign, nonatomic) DATaskManager *taskManager;	// G=0x321fce6d; S=0x321fcd45; @synthesize=_taskManager
@property(retain, nonatomic) NSTimer *timeoutEnforcer;	// G=0x321fcf85; S=0x321fce15; @synthesize=_timeoutEnforcer
+ (void)_restoreDefaultTaskTimeout;	// 0x321f7489
+ (void)_setDefaultTaskTimeout:(double)timeout;	// 0x321f7475
- (id)init;	// 0x321f6ee1
- (id)_HTTPMethodForRequest:(id)request;	// 0x321f7465
- (id)_applyAuthenticationChain:(CFArrayRef)chain toRequest:(id)request;	// 0x321fa215
- (void)_continuePerformTask;	// 0x321f916d
- (id)_createBodyData;	// 0x321f8b95
- (id)_easVersion;	// 0x321f7535
- (void)_failImmediately;	// 0x321f8bbd
- (void)_handleBadPasswordResponse;	// 0x321fa361
- (BOOL)_handleCertificateError:(id)error;	// 0x321fa561
- (BOOL)_handleRedirect:(id)redirect;	// 0x321fa61d
- (void)_initFakeParseContext;	// 0x321fcb01
- (BOOL)_isWBXML;	// 0x321f7575
- (id)_policyKey;	// 0x321f7555
- (void)_popModal;	// 0x321f8da5
- (void)_pushModalForReason:(int)reason;	// 0x321f8d41
- (BOOL)_shouldRedirectToHTTPForRequest:(id)request;	// 0x321f7461
- (BOOL)_shouldSendAuthForRequest:(id)request;	// 0x321f745d
- (void)_timeoutEnforcerFired:(id)fired;	// 0x321f7e49
- (id)_url;	// 0x321f74f9
// declared property getter: - (BOOL)askedToCancelWhileModal;	// 0x321fcf31
- (BOOL)attemptRetryWithStatus:(int)status error:(id)error;	// 0x321f9b5d
- (void)cancelTaskWithReason:(int)reason underlyingError:(id)error;	// 0x321fa0c5
- (BOOL)checkForErrorInContext:(id)context;	// 0x321f76e9
- (id)command;	// 0x321f75a9
- (int)commandCode;	// 0x321f75c5
- (BOOL)connection:(id)connection canAuthenticateAgainstProtectionSpace:(id)space;	// 0x321fba41
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x321fc3b5
- (void)connection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;	// 0x321fbadd
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x321fa9c5
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x321fc07d
- (void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;	// 0x321fa929
- (id)connection:(id)connection needNewBodyStream:(id)stream;	// 0x321fb391
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;	// 0x321fb3ed
- (int)connectionActionForResponse:(id)response;	// 0x321f7d5d
- (void)connectionDidFinishLoading:(id)connection;	// 0x321fbcc5
- (id)contentType;	// 0x321f7d2d
// declared property getter: - (void *)context;	// 0x321fce9d
// declared property getter: - (id)currentlyParsingItem;	// 0x321fcefd
- (void)dealloc;	// 0x321f7025
// declared property getter: - (id)delegate;	// 0x321fce7d
- (id)description;	// 0x321f7251
- (void)didCallOutToDelegate;	// 0x321f9dd1
- (void)didProcessContext:(id)context;	// 0x321f7d3d
- (BOOL)expectsWBXML;	// 0x321f75a5
- (void)finishWithError:(id)error;	// 0x321f9e59
- (BOOL)getTopLevelToken:(char *)token outStatusCodePage:(char *)page outStatusToken:(char *)token3;	// 0x321f7665
- (void)handleTopLevelErrorStatus:(id)status;	// 0x321fc8b1
- (id)httpMethod;	// 0x321f7451
// declared property getter: - (int)interfaceBinding;	// 0x321fcebd
// declared property getter: - (BOOL)isExclusive;	// 0x321fcedd
- (BOOL)isInCallOutToDelegate;	// 0x321f9e49
// declared property getter: - (id)lastKnownPassword;	// 0x321fcf51
- (void)loadRequest:(id)request;	// 0x321f7f1d
- (int)numDownloadedElements;	// 0x321fccb5
- (id)parameterData;	// 0x321f7611
- (double)percentComplete;	// 0x321f7ba9
- (void)performTask;	// 0x321f8c69
- (BOOL)processContext:(id)context;	// 0x321f7661
- (void)reportStatusWithError:(id)error;	// 0x321fccb9
- (id)requestBody;	// 0x321f7619
- (id)requestBodyStreamOutKnownSize:(int *)size;	// 0x321f7615
- (BOOL)requiresEASVersionInformaton;	// 0x321f7d55
- (void)reset;	// 0x321fcb81
- (id)responseContentType;	// 0x321f7401
// declared property setter: - (void)setAskedToCancelWhileModal:(BOOL)cancelWhileModal;	// 0x321fcf41
// declared property setter: - (void)setContext:(void *)context;	// 0x321fcead
// declared property setter: - (void)setCurrentlyParsingItem:(id)item;	// 0x321fcf0d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x321fce8d
// declared property setter: - (void)setInterfaceBinding:(int)binding;	// 0x321fcecd
// declared property setter: - (void)setIsExclusive:(BOOL)exclusive;	// 0x321fceed
// declared property setter: - (void)setLastKnownPassword:(id)password;	// 0x321fcf61
// declared property setter: - (void)setTaskManager:(id)manager;	// 0x321fcd45
// declared property setter: - (void)setTimeoutEnforcer:(id)enforcer;	// 0x321fce15
- (BOOL)shouldHandlePasswordErrors;	// 0x321fa925
- (BOOL)shouldHoldPowerAssertion;	// 0x321f7d59
- (BOOL)shouldLogIncomingData;	// 0x321f7d51
- (BOOL)shouldReportTimeInNetwork;	// 0x321fccb1
- (void)startModal;	// 0x321f8de9
// converted property getter: - (int)taskID;	// 0x321f7441
// declared property getter: - (id)taskManager;	// 0x321fce6d
- (void)taskManagerDidFailToUpdatePolicyKey;	// 0x321f912d
- (void)taskManagerDidFindEASVersion;	// 0x321f900d
- (void)taskManagerDidUpdatePolicyKey;	// 0x321f909d
- (int)taskStatusForError:(id)error;	// 0x321f7bb9
- (int)taskStatusForExchangeStatus:(int)exchangeStatus;	// 0x321f7bb5
- (void)tearDownResources;	// 0x321f8abd
// declared property getter: - (id)timeoutEnforcer;	// 0x321fcf85
- (double)timeoutInterval;	// 0x321f74a1
- (void)willCallOutToDelegate;	// 0x321f9c21
- (void)willProcessContext;	// 0x321f7d39
@end

