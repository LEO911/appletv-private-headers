/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import <CAEAGLLayer.h> // Unknown library
#import "ATVSlideshow-Structs.h"
#import "MRMarimbaPlayback.h"
#import "MRMarimbaHitBlobSupport.h"
#import "MRMarimbaBasicPlayback.h"

@class MPDocument, MRRenderer, EAGLContext, NSDictionary, MPFaceDetector;

@interface MRMarimbaLayer : CAEAGLLayer <MRMarimbaHitBlobSupport, MRMarimbaPlayback, MRMarimbaBasicPlayback> {
@private
	MRRenderer *_renderer;	// 52 = 0x34
	MPDocument *_document;	// 56 = 0x38
	BOOL _masterClockIsSet;	// 60 = 0x3c
	BOOL _bailTimeWatcher;	// 61 = 0x3d
	BOOL _stopWithVideo;	// 62 = 0x3e
	BOOL _readOnly;	// 63 = 0x3f
	BOOL _wasSuspended;	// 64 = 0x40
	MPFaceDetector *_faceDetector;	// 68 = 0x44
	float _morphingToAspectRatio;	// 72 = 0x48
	CGSize _frameBufferSize;	// 76 = 0x4c
	NSDictionary *_nextMorphInfo;	// 84 = 0x54
	EAGLContext *_context;	// 88 = 0x58
	unsigned _viewRenderbuffer;	// 92 = 0x5c
	unsigned _viewFramebuffer;	// 96 = 0x60
}
@property(assign) BOOL bailTimeWatcher;	// G=0x30a9dc85; S=0x30a9dc95; converted property
@property(assign, nonatomic) BOOL displaysFPS;	// G=0x30a9c159; S=0x30a9c17d; 
@property(retain, nonatomic) MPDocument *document;	// G=0x30a9b60d; S=0x30a9b825; 
@property(assign, nonatomic) double framesPerSecond;	// G=0x30a9c4fd; S=0x30a9c531; @dynamic
@property(readonly, assign, nonatomic) BOOL isPlaying;	// G=0x30a9bf25; 
@property(readonly, assign, nonatomic) MRRenderer *renderer;	// G=0x30a9c4ed; 
@property(readonly, assign) CGSize size;	// G=0x30a9b7ed; 
@property(assign, nonatomic) BOOL stopWithVideo;	// G=0x30a9c0a9; S=0x30a9c0b9; 
@property(assign, nonatomic) double time;	// G=0x30a9c19d; S=0x30a9c1bd; 
@property(readonly, assign, nonatomic) double timeRemaining;	// G=0x30a9c201; 
@property(assign, nonatomic) float volume;	// G=0x30a9c261; S=0x30a9c281; 
+ (id)layerWithDocument:(id)document;	// 0x30a9b195
+ (id)layerWithDocument:(id)document size:(CGSize)size;	// 0x30a9b121
+ (void)releaseResources;	// 0x30a9b1e5
- (id)init;	// 0x30a9b335
- (id)_currentEffectContainer;	// 0x30a97aa5
- (id)_effectContainerForTime:(double)time;	// 0x30a98259
- (id)_firstEffectContainer;	// 0x30a981ad
- (int)_mainLayerIndex;	// 0x30a98381
- (void)_reauthorForAspectRatioChange;	// 0x30a9ccc1
- (void)_warmupRendererThreaded:(id)threaded;	// 0x30a9c641
- (void)aspectRatioChangedTo:(id)to;	// 0x30a9d989
// converted property getter: - (BOOL)bailTimeWatcher;	// 0x30a9dc85
- (void)beginGesture:(id)gesture;	// 0x30a9a7a1
- (BOOL)beginLiveUpdateForHitBlob:(id)hitBlob;	// 0x30a99f85
- (void)beginMorphingToAspectRatio:(float)aspectRatio withDuration:(double)duration;	// 0x30a9c931
- (id)blobHitAtPoint:(CGPoint)point fromObjectsForObjectIDs:(id)objectIDs localPoint:(CGPoint *)point3;	// 0x30a99a69
- (void)callbackThread:(id)thread;	// 0x30a98435
- (void)cancelGesture:(id)gesture;	// 0x30a9b071
- (void)cleanup;	// 0x30a9b551
- (CGPoint)convertPoint:(CGPoint)point toHitBlob:(id)hitBlob;	// 0x30a99ea9
- (id)currentSlide;	// 0x30a987ad
- (id)currentSlides;	// 0x30a985fd
- (void)dealloc;	// 0x30a9b449
- (void)destroyFramebuffer;	// 0x30a9dca5
- (void)didAddEffects:(id)effects;	// 0x30a9d915
- (void)didApplyStyle:(id)style;	// 0x30a9d725
- (void)didLiveChanged:(id)changed;	// 0x30a9be89
- (id)displayedEffectContainers;	// 0x30a970b9
// declared property getter: - (BOOL)displaysFPS;	// 0x30a9c159
- (void)doGesture:(id)gesture;	// 0x30a9ab51
// declared property getter: - (id)document;	// 0x30a9b60d
- (BOOL)effect:(id)effect requestedNumberOfSlides:(unsigned)slides firstSlideIndexStillNeeded:(unsigned)needed;	// 0x30a9d2c5
- (BOOL)effectRequestedSlidesAfterDelay:(id)delay;	// 0x30a9d5d9
- (void)endGesture:(id)gesture;	// 0x30a9b021
- (BOOL)endLiveUpdateForHitBlob:(id)hitBlob;	// 0x30a9a3a1
- (void)endMorphing;	// 0x30a9caf1
// declared property getter: - (double)framesPerSecond;	// 0x30a9c4fd
- (BOOL)getOnScreenVertices:(CGPoint [4])vertices forHitBlob:(id)hitBlob;	// 0x30a99c71
- (void)goBack;	// 0x30a9c2d9
- (void)goForth;	// 0x30a9c2f9
- (void)gotoBeginning;	// 0x30a9c3d1
- (void)gotoEnd;	// 0x30a9c319
- (void)gotoNextSlide;	// 0x30a98b8d
- (void)gotoPreviousSlide;	// 0x30a991b5
- (void)gotoSlide:(id)slide;	// 0x30a99739
- (void)hitCanceledForKey:(id)key;	// 0x30a9dbd5
- (void)hitForKey:(id)key endsAt:(CGPoint)at withModifiers:(unsigned)modifiers;	// 0x30a9db51
- (void)hitForKey:(id)key startsAt:(CGPoint)at hitCount:(int)count withModifiers:(unsigned)modifiers;	// 0x30a9da61
- (void)hitForKey:(id)key tracksAt:(CGPoint)at hitCount:(int)count withModifiers:(unsigned)modifiers;	// 0x30a9dae5
- (BOOL)isInTransition;	// 0x30a97c69
// declared property getter: - (BOOL)isPlaying;	// 0x30a9bf25
- (void)lockRendering;	// 0x30a9ce59
- (void)morphToAspectRatio:(float)aspectRatio andOrientation:(int)orientation withDuration:(double)duration;	// 0x30a9c6b5
- (void)moveToEffectContainer:(id)effectContainer withStartOffset:(double)startOffset toStopOffset:(double)stopOffset blocking:(BOOL)blocking;	// 0x30a9711d
- (void)moveToNextEffectContainer;	// 0x30a97321
- (void)moveToPreviousEffectContainer;	// 0x30a973fd
- (void)moveToSubtitleForSlide:(id)slide;	// 0x30a977c1
- (void)moveToTitleSlide;	// 0x30a974d5
- (BOOL)nearingEndForSerializer:(id)serializer;	// 0x30a9ce99
- (BOOL)nearingEndForSerializerAfterDelay:(id)serializerAfterDelay;	// 0x30a9d16d
- (void)nextFrame;	// 0x30a9c41d
- (void)pause;	// 0x30a9c029
- (void)play;	// 0x30a9bf49
- (void)prevFrame;	// 0x30a9c485
- (double)relativeTime;	// 0x30a96f61
- (double)relativeTimeForBackgroundAudio;	// 0x30a96fb1
- (double)relativeTimeForLayer:(id)layer;	// 0x30a97011
- (void)removeEffectContainersBeforeTime:(double)time;	// 0x30a98961
- (void)removeFadeIn;	// 0x30a99915
// declared property getter: - (id)renderer;	// 0x30a9c4ed
- (void)requestRendering:(BOOL)rendering;	// 0x30a9c561
- (void)setAsynchronous:(BOOL)asynchronous;	// 0x30a9b61d
// converted property setter: - (void)setBailTimeWatcher:(BOOL)watcher;	// 0x30a9dc95
- (void)setBounds:(CGRect)bounds;	// 0x30a9b621
// declared property setter: - (void)setDisplaysFPS:(BOOL)fps;	// 0x30a9c17d
// declared property setter: - (void)setDocument:(id)document;	// 0x30a9b825
// declared property setter: - (void)setFramesPerSecond:(double)second;	// 0x30a9c531
- (void)setReadOnly:(BOOL)only;	// 0x30a9dc75
// declared property setter: - (void)setStopWithVideo:(BOOL)video;	// 0x30a9c0b9
- (void)setSuspended:(BOOL)suspended;	// 0x30a9c2a1
// declared property setter: - (void)setTime:(double)time;	// 0x30a9c1bd
// declared property setter: - (void)setVolume:(float)volume;	// 0x30a9c281
// declared property getter: - (CGSize)size;	// 0x30a9b7ed
- (CGImageRef)snapshotAsCGImage;	// 0x30a9da41
- (CGImageRef)snapshotAsCGImageForTime:(double)time withSize:(CGSize)size;	// 0x30a9d98d
// declared property getter: - (BOOL)stopWithVideo;	// 0x30a9c0a9
- (void)swipeAt:(CGPoint)at inDirection:(unsigned)direction withModifiers:(unsigned)modifiers;	// 0x30a9dbf5
// declared property getter: - (double)time;	// 0x30a9c19d
// declared property getter: - (double)timeRemaining;	// 0x30a9c201
- (void)togglePlayback;	// 0x30a9bed9
- (void)unlockRendering;	// 0x30a9ce79
- (BOOL)updateFramebuffer;	// 0x30a9dd81
// declared property getter: - (float)volume;	// 0x30a9c261
- (void)warmupRenderer;	// 0x30a9c581
- (void)watcherThread:(id)thread;	// 0x30a9851d
- (void)whenTransitionIsFinishedSendAction:(SEL)action toTarget:(id)target;	// 0x30a97e7d
@end

