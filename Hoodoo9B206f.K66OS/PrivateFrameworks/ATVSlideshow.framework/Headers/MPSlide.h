/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import "MPFilterSupport.h"
#import <NSObject.h> // Unknown library

@class MCSlide, MPLayerGroup, NSMutableDictionary, NSMutableArray, MPSlideInternal, NSString, MPFrame;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport> {
@private
	MPFrame *_frame;	// 4 = 0x4
	NSMutableDictionary *_attributes;	// 8 = 0x8
	NSString *_path;	// 12 = 0xc
	MPLayerGroup *_layerGroup;	// 16 = 0x10
	NSMutableArray *_filters;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCSlide *_slide;	// 28 = 0x1c
	NSObject<MPEffectSupport> *_parent;	// 32 = 0x20
	MPSlideInternal *_internal;	// 36 = 0x24
}
@property(copy, nonatomic) NSString *absolutePath;	// G=0x309fb809; S=0x309fb871; @dynamic
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x309fc9c1; converted property
@property(assign, nonatomic) double audioDuckInDuration;	// G=0x309fdfe1; S=0x309fe001; @dynamic
@property(assign, nonatomic) float audioDuckLevel;	// G=0x309fe199; S=0x309fe1c9; @dynamic
@property(assign, nonatomic) double audioDuckOutDuration;	// G=0x309fe0bd; S=0x309fe0dd; @dynamic
@property(assign, nonatomic) double audioFadeInDuration;	// G=0x309fde29; S=0x309fde49; @dynamic
@property(assign, nonatomic) double audioFadeOutDuration;	// G=0x309fdf05; S=0x309fdf25; @dynamic
@property(assign, nonatomic) float audioVolume;	// G=0x309fdd2d; S=0x309fdd81; @dynamic
@property(assign, nonatomic) CGPoint center;	// G=0x309feb29; S=0x309feb59; @dynamic
@property(assign, nonatomic) double duration;	// G=0x309fdb45; S=0x309fdc39; @dynamic
@property(readonly, retain) NSMutableArray *filters;	// G=0x309fbca5; converted property
@property(retain, nonatomic) MPFrame *frame;	// G=0x309fb4e1; S=0x309fb4f1; @dynamic
@property(assign) BOOL isSecondary;	// G=0x309fedb9; S=0x309ff2e5; converted property
@property(retain, nonatomic) MPLayerGroup *layerGroup;	// G=0x309fbb15; S=0x309fbb25; 
@property(retain) id parent;	// G=0x309fe9ad; S=0x30a00b3d; converted property
@property(copy, nonatomic) NSString *path;	// G=0x309fb5e9; S=0x309fb5f9; @dynamic
@property(assign, nonatomic) float rotation;	// G=0x309fecf1; S=0x309fed11; @dynamic
@property(assign, nonatomic) float scale;	// G=0x309fec29; S=0x309fec49; @dynamic
@property(retain) id scriptingAnimations;	// G=0x30a00d2d; S=0x30a0106d; converted property
@property(retain) id scriptingFrame;	// G=0x30a01295; S=0x30a01359; converted property
@property(copy, nonatomic) NSString *sizingMode;	// G=0x309fe279; S=0x309fe411; @dynamic
@property(retain) MCSlide *slide;	// G=0x309feed9; S=0x309ffbdd; converted property
@property(assign, nonatomic) double startTime;	// G=0x309fd995; S=0x309fda51; @dynamic
+ (id)slide;	// 0x309f9cdd
+ (id)slideWithPath:(id)path;	// 0x309f9d15
- (id)init;	// 0x309f9d51
- (id)initWithCoder:(id)coder;	// 0x309fa7dd
- (id)initWithLayerGroup:(id)layerGroup;	// 0x309fb0c1
- (id)initWithPath:(id)path;	// 0x309fb07d
// declared property getter: - (id)absolutePath;	// 0x309fb809
- (id)action;	// 0x309ff1e5
- (void)addFilter:(id)filter;	// 0x309fbcb5
- (void)addFilters:(id)filters;	// 0x309fbd15
- (id)animationPathForKey:(id)key;	// 0x309fc9d1
// converted property getter: - (id)animationPaths;	// 0x309fc9c1
- (float)aspectRatio;	// 0x309fe995
// declared property getter: - (double)audioDuckInDuration;	// 0x309fdfe1
// declared property getter: - (float)audioDuckLevel;	// 0x309fe199
// declared property getter: - (double)audioDuckOutDuration;	// 0x309fe0bd
// declared property getter: - (double)audioFadeInDuration;	// 0x309fde29
// declared property getter: - (double)audioFadeOutDuration;	// 0x309fdf05
// declared property getter: - (float)audioVolume;	// 0x309fdd2d
// declared property getter: - (CGPoint)center;	// 0x309feb29
- (void)cleanup;	// 0x309ff781
- (void)copyAnimationPaths:(id)paths;	// 0x309ff6a5
- (void)copyFilters:(id)filters;	// 0x309ff589
- (void)copyFrame:(id)frame;	// 0x309ff4b1
- (void)copyLayerGroup:(id)group;	// 0x309ff51d
- (void)copyStruct:(id)aStruct;	// 0x309ff305
- (id)copyWithZone:(NSZone *)zone;	// 0x309fb121
- (int)countOfFilter;	// 0x30a00bad
- (void)dealloc;	// 0x309fb3b9
- (id)description;	// 0x309fb229
- (BOOL)determineShowTime:(double *)time showDuration:(double *)duration;	// 0x309ff8f1
- (void)dump;	// 0x309feee9
- (void)duplicateAnimationPaths;	// 0x30a00885
// declared property getter: - (double)duration;	// 0x309fdb45
- (void)encodeWithCoder:(id)coder;	// 0x309fa001
// converted property getter: - (id)filters;	// 0x309fbca5
- (void)finalize;	// 0x309fb379
// declared property getter: - (id)frame;	// 0x309fb4e1
- (id)fullDebugLog;	// 0x309fef11
- (BOOL)hasMovie;	// 0x309ff081
- (int)index;	// 0x309fe725
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x309fbd59
- (void)insertObject:(id)object inFilterAtIndex:(int)index;	// 0x30a00bed
// converted property getter: - (BOOL)isSecondary;	// 0x309fedb9
// declared property getter: - (id)layerGroup;	// 0x309fbb15
- (int)liveIndex;	// 0x309fe891
- (double)maxDuration;	// 0x309ff1d1
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x309fc705
- (id)nearestLayer;	// 0x309ff86d
- (id)objectInFilterAtIndex:(int)index;	// 0x30a00bcd
// converted property getter: - (id)parent;	// 0x309fe9ad
- (id)parentDocument;	// 0x309ff84d
- (id)parentEffect;	// 0x309fe99d
- (id)parentSubtitleEffect;	// 0x309fe9bd
// declared property getter: - (id)path;	// 0x309fb5e9
- (void)removeAllFilters;	// 0x309fc665
- (void)removeAnimationPathForKey:(id)key;	// 0x309fcfad
- (void)removeFiltersAtIndices:(id)indices;	// 0x309fc2f1
- (void)removeObjectFromFilterAtIndex:(int)index;	// 0x30a00c55
- (void)replaceObjectInFilterAtIndex:(int)index withObject:(id)object;	// 0x30a00cb9
- (void)resetCachedTimes;	// 0x309ff265
// declared property getter: - (float)rotation;	// 0x309fecf1
// declared property getter: - (float)scale;	// 0x309fec29
// converted property getter: - (id)scriptingAnimations;	// 0x30a00d2d
// converted property getter: - (id)scriptingFrame;	// 0x30a01295
// declared property setter: - (void)setAbsolutePath:(id)path;	// 0x309fb871
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x309fcbb9
// declared property setter: - (void)setAudioDuckInDuration:(double)duration;	// 0x309fe001
// declared property setter: - (void)setAudioDuckLevel:(float)level;	// 0x309fe1c9
// declared property setter: - (void)setAudioDuckOutDuration:(double)duration;	// 0x309fe0dd
// declared property setter: - (void)setAudioFadeInDuration:(double)duration;	// 0x309fde49
// declared property setter: - (void)setAudioFadeOutDuration:(double)duration;	// 0x309fdf25
// declared property setter: - (void)setAudioVolume:(float)volume;	// 0x309fdd81
// declared property setter: - (void)setCenter:(CGPoint)center;	// 0x309feb59
// declared property setter: - (void)setDuration:(double)duration;	// 0x309fdc39
// declared property setter: - (void)setFrame:(id)frame;	// 0x309fb4f1
// converted property setter: - (void)setIsSecondary:(BOOL)secondary;	// 0x309ff2e5
// declared property setter: - (void)setLayerGroup:(id)group;	// 0x309fbb25
- (void)setMediaType:(int)type;	// 0x309ff1b1
- (void)setMirrorToDuplicatePaths:(BOOL)duplicatePaths;	// 0x309ff2c5
// converted property setter: - (void)setParent:(id)parent;	// 0x30a00b3d
// declared property setter: - (void)setPath:(id)path;	// 0x309fb5f9
// declared property setter: - (void)setRotation:(float)rotation;	// 0x309fed11
// declared property setter: - (void)setScale:(float)scale;	// 0x309fec49
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x30a0106d
// converted property setter: - (void)setScriptingFrame:(id)frame;	// 0x30a01359
// declared property setter: - (void)setSizingMode:(id)mode;	// 0x309fe411
// converted property setter: - (void)setSlide:(id)slide;	// 0x309ffbdd
// declared property setter: - (void)setStartTime:(double)time;	// 0x309fda51
- (void)setUserInfoAttribute:(id)attribute forKey:(id)key;	// 0x309fee09
- (double)showDisplayStartTime;	// 0x309fd855
- (double)showDisplayTime;	// 0x309fd595
- (double)showDuration;	// 0x309fd3d5
- (double)showTime;	// 0x309fd259
// declared property getter: - (id)sizingMode;	// 0x309fe279
// converted property getter: - (id)slide;	// 0x309feed9
// declared property getter: - (double)startTime;	// 0x309fd995
- (id)userInfoAttributeForKey:(id)key;	// 0x309feddd
@end

