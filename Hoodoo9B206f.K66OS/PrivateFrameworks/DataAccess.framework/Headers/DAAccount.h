/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <BasicAccount.h> // Unknown library
#import "DataAccess-Structs.h"
#import "AccountCreationProtocol.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : BasicAccount <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	int _dataclasses;	// 24 = 0x18
	BOOL _hasDirtyBits;	// 28 = 0x1c
	BOOL _hasInitted;	// 29 = 0x1d
	BOOL _shouldAutodiscoverPrincipalURL;	// 30 = 0x1e
	BOOL _shouldPromptForPassword;	// 31 = 0x1f
	BOOL _shouldFailAllTasks;	// 32 = 0x20
	BOOL _shouldUseOpportunisticSockets;	// 33 = 0x21
	int _originalDataclasses;	// 36 = 0x24
	CFDictionaryRef _changeTypesByDataclass;	// 40 = 0x28
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 44 = 0x2c
	DASettingsTemplate *_settingsTemplate;	// 48 = 0x30
	DAStatusReport *_statusReport;	// 52 = 0x34
	CFDictionaryRef _consumers;	// 56 = 0x38
	CFURLStorageSessionRef _storageSession;	// 60 = 0x3c
}
@property(copy) NSString *accountDescription;	// G=0x31eab939; S=0x31eac039; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x31eab5ad; S=0x31eadb51; 
@property(copy) NSString *emailAddress;	// G=0x31ead005; S=0x31ead051; 
@property(copy) NSArray *emailAddresses;	// G=0x31ead099; S=0x31ead0d1; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x31eae081; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x31ead26d; 
@property(readonly, assign) BOOL hasDirtyBits;	// G=0x31ead551; converted property
@property(copy) NSString *host;	// G=0x31eacedd; S=0x31eacf29; 
@property(readonly, assign) NSData *identityPersist;	// G=0x31ead7c9; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x31eadaf5; 
@property(copy) NSString *password;	// G=0x31eacc19; S=0x31eacd61; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x31eab40d; 
@property(assign) int port;	// G=0x31ead301; S=0x31ead34d; 
@property(copy) NSURL *principalURL;	// G=0x31ead475; S=0x31ead4c1; 
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x31eabffd; 
@property(copy) NSString *scheme;	// G=0x31ead3e1; S=0x31ead42d; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x31eae0b1; S=0x31eae0c5; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x31eae091; S=0x31eae0a1; @synthesize=_shouldAutodiscoverPrincipalURL
@property(assign) BOOL shouldFailAllTasks;	// G=0x31eae0f9; S=0x31eae109; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x31eacbf9; S=0x31eacc09; 
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x31eae119; S=0x31eae129; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x31ead1d9; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x31eae0e9; @synthesize=_statusReport
@property(readonly, assign) NSString *tag;	// G=0x31eac00d; 
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x31eb9645; S=0x31eb9649; converted property
@property(assign) BOOL useSSL;	// G=0x31eacf71; S=0x31eacfbd; 
@property(copy) NSString *user;	// G=0x31eacebd; S=0x31eacecd; 
@property(copy) NSString *username;	// G=0x31eace29; S=0x31eace75; 
@property(retain) id version;	// G=0x31eacd95; S=0x31eacde1; converted property
+ (Class)accountClass;	// 0x31eabf1d
+ (Class)accountClassWithProperties:(id)properties;	// 0x31eac3f9
+ (id)basicAccountProperties;	// 0x31eabd99
+ (Class)classForAccountType:(id)accountType;	// 0x31eac4c1
+ (Class)clientClass;	// 0x31eac429
+ (Class)daemonClass;	// 0x31eac475
+ (id)defaultProperties;	// 0x31eadaf9
+ (id)newAccountOfAccountType:(id)accountType;	// 0x31eadafd
- (id)init;	// 0x31eabe75
- (id)initWithProperties:(id)properties;	// 0x31eab051
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x31eae139
- (id)_exceptionsDict;	// 0x31ead905
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x31eaf5ed
- (BOOL)_isIdentityManagedByProfile;	// 0x31ead8c5
- (void)_removeHostsToTrust;	// 0x31eac945
- (id)_serverSuffixesToAlwaysFail;	// 0x31eae239
- (void)_setPersistentUUID:(id)uuid;	// 0x31eac01d
- (void)_setProperties:(id)properties;	// 0x31ead509
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x31eaca4d
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x31eac4f9
- (int)accountChangeTypeForDataclass:(int)dataclass;	// 0x31eac381
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x31ead119
// declared property getter: - (id)accountDescription;	// 0x31eab939
- (id)accountID;	// 0x31eab351
- (int)accountIntPropertyForKey:(id)key;	// 0x31eac561
- (BOOL)accountNeedsUpgrade;	// 0x31eac975
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x31eac93d
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x31eaf795
- (void)cancelAllSearchQueries;	// 0x31eb7b29
- (void)cancelAutodiscovery;	// 0x31eac941
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x31eaf835
- (void)cancelSearchQuery:(id)query;	// 0x31eb7b25
- (void)checkValidityWithConsumer:(id)consumer;	// 0x31eac8f5
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x31eade61
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x31eadf09
- (void)cleanupAccountFiles;	// 0x31eada99
- (id)consumerForTask:(id)task;	// 0x31eac8b1
- (id)contactsFolders;	// 0x31eaf865
- (CFURLStorageSessionRef)copyStorageSession;	// 0x31eadf0d
// declared property getter: - (int)daAccountVersion;	// 0x31eab5ad
- (void)dealloc;	// 0x31eab4d5
- (id)defaultContactsFolder;	// 0x31eaf861
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x31ead6b1
- (id)defaultEventsFolder;	// 0x31eaf785
- (id)defaultNotesFolder;	// 0x31ec75f5
- (id)defaultToDosFolder;	// 0x31eb9639
- (id)deletedItemsFolder;	// 0x31eaf8c5
- (id)description;	// 0x31eaed6d
- (id)domainOnly;	// 0x31eac855
// declared property getter: - (id)emailAddress;	// 0x31ead005
// declared property getter: - (id)emailAddresses;	// 0x31ead099
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x31eae081
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x31eac0a1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x31ead26d
- (id)eventsFolders;	// 0x31eaf789
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x31ead921
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x31ecd8ed
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x31eae2c1
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x31eaea39
// converted property getter: - (BOOL)hasDirtyBits;	// 0x31ead551
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x31eadb95
// declared property getter: - (id)host;	// 0x31eacedd
// declared property getter: - (id)identityPersist;	// 0x31ead7c9
- (id)inboxFolder;	// 0x31eaf8bd
- (BOOL)isActiveSyncAccount;	// 0x31eade49
- (BOOL)isCalDAVAccount;	// 0x31eade51
- (BOOL)isCalDAVChildAccount;	// 0x31eade59
- (BOOL)isCardDAVAccount;	// 0x31eade55
// declared property getter: - (BOOL)isChildAccount;	// 0x31eadaf5
- (BOOL)isDisabled;	// 0x31eab891
- (BOOL)isEqualToAccount:(id)account;	// 0x31eadda9
- (BOOL)isHotmailAccount;	// 0x31eade5d
- (BOOL)isLDAPAccount;	// 0x31eade4d
- (int)keychainAccessibilityType;	// 0x31eaccc9
- (id)localizedIdenticalAccountFailureMessage;	// 0x31eaedfd
- (id)localizedInvalidPasswordMessage;	// 0x31eaee9d
- (BOOL)monitorFolderWithID:(id)anId;	// 0x31ead5c1
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x31ead5bd
- (id)notesFolders;	// 0x31ec75f9
- (BOOL)originallyEnabledForDADataclass:(int)dadataclass;	// 0x31eac369
// declared property getter: - (id)password;	// 0x31eacc19
- (void)performSearchQuery:(id)query;	// 0x31eb7a81
// declared property getter: - (id)persistentUUID;	// 0x31eab40d
// declared property getter: - (int)port;	// 0x31ead301
// declared property getter: - (id)principalURL;	// 0x31ead475
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x31eaf8c9
- (void)removeClientCertificateData;	// 0x31ead6b5
- (void)removeConsumerForTask:(id)task;	// 0x31eac8d5
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x31eaef3d
- (void)resetAccountID;	// 0x31eabf39
- (BOOL)resetCertWarnings;	// 0x31eadca9
- (void)resetStatusReport;	// 0x31eadcd9
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x31eac5c9
- (void)saveAccountProperties;	// 0x31ead70d
- (void)saveAccountSettings;	// 0x31eadae1
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x31ead77d
// declared property getter: - (id)scheduleIdentifier;	// 0x31eabffd
// declared property getter: - (id)scheme;	// 0x31ead3e1
- (BOOL)searchQueriesRunning;	// 0x31eb7b2d
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x31eaf791
- (id)sentItemsFolder;	// 0x31eaf8c1
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x31eac521
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x31eac039
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x31eac589
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x31eac859
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x31eadb51
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x31ead051
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x31ead0d1
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass changeType:(int)type;	// 0x31eac0b9
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x31ead2b9
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x31ead965
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x31eadbe1
// declared property setter: - (void)setHost:(id)host;	// 0x31eacf29
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x31ead7e5
// declared property setter: - (void)setPassword:(id)password;	// 0x31eacd61
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x31eacccd
// declared property setter: - (void)setPort:(int)port;	// 0x31ead34d
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x31ead4c1
// declared property setter: - (void)setScheme:(id)scheme;	// 0x31ead42d
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x31eae0c5
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x31eae0a1
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x31eae109
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x31eacc09
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x31eae129
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x31ead225
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x31eb9649
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x31eacfbd
// declared property setter: - (void)setUser:(id)user;	// 0x31eacecd
// declared property setter: - (void)setUsername:(id)username;	// 0x31eace75
// converted property setter: - (void)setVersion:(id)version;	// 0x31eacde1
// declared property getter: - (id)settingsTemplate;	// 0x31eae0b1
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x31eae091
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x31eae0f9
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x31eacbf9
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x31eae119
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x31ead1d9
- (id)spinnerIdentifiers;	// 0x31eac3ad
- (id)stateString;	// 0x31eac6c9
// declared property getter: - (id)statusReport;	// 0x31eae0e9
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x31eac66d
- (void)stopMonitoringFolders;	// 0x31ead655
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x31ead5f9
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x31eac059
- (int)supportsEmailFlagging;	// 0x31eb7b35
- (int)supportsMailboxSearch;	// 0x31eb7b31
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x31eac611
- (id)syncStoreIdentifier;	// 0x31eab4c5
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x31ecd8f1
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x31eaf869
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x31eaf78d
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x31ec75fd
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x31eb9641
// declared property getter: - (id)tag;	// 0x31eac00d
- (void)takeValuesFromAccount:(id)account;	// 0x31eac749
- (void)tearDown;	// 0x31ead561
- (id)toDosFolders;	// 0x31eb963d
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x31eb9645
- (BOOL)upgradeAccount;	// 0x31eacba1
- (id)urlForKeychain;	// 0x31ead395
// declared property getter: - (BOOL)useSSL;	// 0x31eacf71
// declared property getter: - (id)user;	// 0x31eacebd
// declared property getter: - (id)username;	// 0x31eace29
- (id)usernameWithoutDomain;	// 0x31eac845
// converted property getter: - (id)version;	// 0x31eacd95
@end

