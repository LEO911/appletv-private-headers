/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "AVAssetInspectorLoader.h"

@class AVAssetCache, NSMutableArray, AVAssetInspector, NSURL;

@interface AVAssetMakeReadyForInspectionLoader : AVAssetInspectorLoader {
	AVAssetInspector *_assetInspector;	// 8 = 0x8
	AVAssetCache *_assetCache;	// 12 = 0xc
	BOOL _shouldMatchDataInCacheByURLPathComponentOnly;	// 16 = 0x10
	BOOL _shouldMatchDataInCacheByURLWithoutQueryComponent;	// 17 = 0x11
	NSURL *_downloadDestinationURL;	// 20 = 0x14
@private
	OpaqueFigFormatReader *_formatReader;	// 24 = 0x18
	OpaqueFigSimpleMutex *_loadingMutex;	// 28 = 0x1c
	NSMutableArray *_keysAwaitingCompletion;	// 32 = 0x20
	int _status;	// 36 = 0x24
	long _basicInspectionFailureCode;	// 40 = 0x28
	NSURL *_URL;	// 44 = 0x2c
}
@property(readonly, assign, nonatomic) NSURL *URL;	// G=0x326f01e1; @synthesize=_URL
@property(readonly, assign, nonatomic) AVAssetCache *assetCache;	// G=0x326f01f1; @synthesize=_assetCache
@property(readonly, retain) AVAssetInspector *assetInspector;	// G=0x326ef6d1; converted property
@property(readonly, assign, nonatomic) NSURL *downloadDestinationURL;	// G=0x326f0221; @synthesize=_downloadDestinationURL
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLPathComponentOnly;	// G=0x326f0201; @synthesize=_shouldMatchDataInCacheByURLPathComponentOnly
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;	// G=0x326f0211; @synthesize=_shouldMatchDataInCacheByURLWithoutQueryComponent
- (id)initWithURL:(id)url;	// 0x326ef525
// declared property getter: - (id)URL;	// 0x326f01e1
- (OpaqueFigFormatReader *)_copyFormatReaderFromFigObjectWithFigErrorCode:(int *)figErrorCode;	// 0x326ef781
- (id)_dictionaryOfSpecialGettersForKeyValueStatus;	// 0x326ef7e5
- (id)_dictionaryOfSpecialLoadingMethodsForKeys;	// 0x326efd15
- (OpaqueFigFormatReader *)_formatReader;	// 0x326ef719
- (id)_getAndPruneCompletionsWhileMutexLocked;	// 0x326ef96d
- (BOOL)_inspectionRequiresAFormatReader;	// 0x326ef7bd
- (BOOL)_isStreaming;	// 0x326f01c5
- (id)_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:(id)keys;	// 0x326efce1
- (id)_loadValuesWhileMutexLockedForKeys:(id)keys;	// 0x326efd41
- (OpaqueFigSimpleMutex *)_loadingMutex;	// 0x326ef76d
- (OpaqueFigPlaybackItem *)_playbackItem;	// 0x326ef7c1
- (BOOL)_providesAccurateTiming;	// 0x326ef77d
- (void)_serverHasDied;	// 0x326f01c9
- (void)_setStatus:(int)status figErrorCode:(long)code;	// 0x326efc09
- (int)_status;	// 0x326efb25
- (id)_statusOfValueForKeyThatIsAlwaysLoaded;	// 0x326ef7c5
- (int)_statusOfValueWhileMutexLockedForKey:(id)key error:(id *)error;	// 0x326ef819
- (BOOL)_statusOfValuesIsTerminalWhileMutexLockedForKeys:(id)keys;	// 0x326ef8c5
- (BOOL)_updateStatusWhileMutexLocked:(int)locked figErrorCode:(long)code;	// 0x326efb35
// declared property getter: - (id)assetCache;	// 0x326f01f1
// converted property getter: - (id)assetInspector;	// 0x326ef6d1
- (void)cancelLoading;	// 0x326ef705
- (id)chapterGroupInfo;	// 0x326f01ad
- (id)copyWithZone:(NSZone *)zone;	// 0x326ef6c1
- (void)dealloc;	// 0x326ef59d
// declared property getter: - (id)downloadDestinationURL;	// 0x326f0221
- (XXStruct_pwHToB)duration;	// 0x326f0145
- (void)finalize;	// 0x326ef665
- (BOOL)hasProtectedContent;	// 0x326f01c1
- (BOOL)isComposable;	// 0x326f01bd
- (BOOL)isExportable;	// 0x326f01b5
- (BOOL)isPlayable;	// 0x326f01b1
- (BOOL)isReadable;	// 0x326f01b9
- (void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id)handler;	// 0x326eff55
- (id)lyrics;	// 0x326f0185
// declared property getter: - (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;	// 0x326f0201
// declared property getter: - (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;	// 0x326f0211
- (int)statusOfValueForKey:(id)key error:(id *)error;	// 0x326efad9
@end

