/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class AVPlayerItemInternal, NSError, NSString, NSDate;

@interface AVPlayerItem : NSObject <NSCopying> {
@private
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x326a4421; S=0x326a44d5; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x326a4589; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x326a469d; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x326a485d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x326a4749; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x326a47b1; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x326a45f1; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x326a0875; S=0x326a0a21; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x326a4135; 
@property(retain) id audioMix;	// G=0x326a1129; S=0x326a1305; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x326a4115; 
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x326a5881; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x326a4189; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x326a0ea5; S=0x326a1051; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x326a0b8d; S=0x326a0d39; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x326a583d; S=0x326a57a1; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x326a5999; S=0x326a5919; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x3269dcc1; @dynamic
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x3269fdfd; S=0x3269ffd1; converted property
@property(retain) id gaplessInfo;	// G=0x326a2419; S=0x326a27bd; converted property
@property(retain) id initialDate;	// G=0x3269fad5; S=0x3269fb19; converted property
@property(retain) id initialEstimatedDate;	// G=0x3269fbfd; S=0x3269fc41; converted property
@property(assign) BOOL limitReadAhead;	// G=0x326a055d; S=0x326a0709; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x326a3b35; S=0x326a3b55; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x326a01d1; S=0x326a03a5; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x326a29b1; S=0x326a2911; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x3269dca1; @dynamic
@property(retain) id videoComposition;	// G=0x326a13d5; S=0x326a1419; converted property
@property(assign) float volumeAdjustment;	// G=0x326a2ae5; S=0x326a2a45; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x3269b5c5
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x3269b5b1
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x326a41dd
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x326a43c1
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x326a0af5
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x326a40f5
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x326a13d1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x326a1125
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x326a0e0d
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x326a00f1
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x326a289d
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x326a07dd
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x326a4109
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x326a3c21
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x326a40fd
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x326a4101
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x326a40f9
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x326a410d
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x326a04c5
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x326a4105
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x326a29d1
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x326a40f1
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x326a4111
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x326a16d1
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x326a2b05
+ (void)initialize;	// 0x3269b551
+ (id)playerItemWithAsset:(id)asset;	// 0x3269b621
+ (id)playerItemWithURL:(id)url;	// 0x3269b5d9
- (id)init;	// 0x3269b969
- (id)initWithAsset:(id)asset;	// 0x3269bae1
- (id)initWithURL:(id)url;	// 0x3269ba25
- (int)_CreateSeekID;	// 0x3269f1a5
- (id)_URL;	// 0x3269d851
- (void)_addFPListeners;	// 0x3269e621
- (void)_addSyncLayer:(id)layer;	// 0x326a3ec9
- (BOOL)_alwaysMonitorsPlayability;	// 0x326a07e1
- (void)_applyAudioMix;	// 0x326a116d
- (void)_applyInitialAudioMix;	// 0x326a12ad
- (void)_applyMediaSelectionOptions;	// 0x326a2d3d
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x326a2ec9
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x3269cf9d
- (long long)_availableFileSize;	// 0x326a5715
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x326a3131
- (id)_cachedValueForKey:(id)key;	// 0x3269c5c5
- (BOOL)_canPlayFastForward;	// 0x3269ecbd
- (BOOL)_canPlayFastReverse;	// 0x3269ee15
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x3269f201
- (void)_changeStatusToFailedWithError:(id)error;	// 0x3269dd05
- (void)_configurePlaybackItemForPlayerType:(int)playerType;	// 0x3269c889
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x326a0e11
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x326a0af9
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x3269cf05
- (void)_createPlayerItemInternal;	// 0x3269b669
- (void)_detachFromPlayer;	// 0x3269d70d
- (void)_didAccessKVOForKey:(id)key;	// 0x3269c61d
- (XXStruct_pwHToB)_duration;	// 0x3269de85
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x326a3c25
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x3269c585
- (long long)_fileSize;	// 0x326a5689
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x3269fd21
- (id)_fpNotificationNames;	// 0x3269e4a1
- (BOOL)_hasEnabledVideoMedia;	// 0x326a3fc1
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x3269dbf1
- (void)_insertAfterItem:(id)item;	// 0x3269d771
- (void)_invokeReadyForEnqueueingHandlers;	// 0x3269ea29
- (BOOL)_isCurrentPlayerItem;	// 0x3269cd71
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x326a4421
// declared property getter: - (BOOL)_isRental;	// 0x326a4589
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x326a4749
- (void)_kickAssetObserversIfAppropriate;	// 0x3269db49
- (BOOL)_limitReadAhead;	// 0x326a04c9
- (id)_loadedTimeRanges;	// 0x326a20b5
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x3269d9c9
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x3269eb25
- (id)_nextItem;	// 0x3269d731
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x326a3f5d
- (id)_playbackProperties;	// 0x326a245d
- (id)_player;	// 0x3269cd45
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x3269d721
- (id)_playerConnection;	// 0x3269ce89
- (CGSize)_presentationSize;	// 0x3269ef6d
- (id)_previousItem;	// 0x3269d751
- (id)_propertyStorage;	// 0x3269c5a5
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x326a0951
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x326a0f81
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x326a0c69
- (void)_quietlySetEQPreset:(int)preset;	// 0x326a55bd
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3269ff0d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x326a0639
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x326a2501
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x326a02e1
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x326a28a1
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x326a29d5
- (void)_removeFPListeners;	// 0x3269e7fd
- (void)_removeFromItems;	// 0x3269d7e5
- (void)_removeSyncLayer:(id)layer;	// 0x326a3e7d
// declared property getter: - (id)_rentalExpirationDate;	// 0x326a469d
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x326a485d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x326a47b1
// declared property getter: - (id)_rentalStartDate;	// 0x326a45f1
- (void)_respondToBecomingReadyForBasicInspection;	// 0x3269e941
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x326a00f5
- (id)_seekableTimeRanges;	// 0x326a1d51
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x326a31f5
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x326a3305
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x326a3471
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x326a3069
- (id)_selectedMediaOptionInAlternateTrackGroup:(id)alternateTrackGroup;	// 0x326a3559
- (id)_selectedMediaOptionInKeyValueGroup:(id)keyValueGroup;	// 0x326a38a1
- (void)_setAsset:(id)asset;	// 0x3269d8b5
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x3269da89
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3269d911
- (void)_setAudibleDRMInfo:(id)info;	// 0x326a5519
- (void)_setEQPreset:(int)preset;	// 0x326a562d
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x326a2ff5
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x326a44d5
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x3269cd91
- (void)_setPlayerConnection:(id)connection;	// 0x3269cea9
- (void)_setRampInOutInfo:(id)outInfo;	// 0x326a5475
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x326a3df5
- (void)_setTimedMetadata:(id)metadata;	// 0x326a3d81
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x3269d96d
- (void)_setURL:(id)url;	// 0x3269d871
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x326a16d5
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x326a1865
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x326a17e1
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x326a1771
- (void)_setVideoCompositor:(id)compositor;	// 0x326a18b5
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x3269c565
- (id)_trackWithTrackID:(int)trackID;	// 0x3269e3d9
- (id)_tracks;	// 0x3269e065
- (id)_unregisterAndReturnRetainedSeekCompletionHandler;	// 0x3269f3a9
- (id)_weakReference;	// 0x3269c545
- (void)_willAccessKVOForKey:(id)key;	// 0x3269c5f1
- (id)accessLog;	// 0x326a4909
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x3269c709
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x326a0875
- (id)asset;	// 0x3269de41
// converted property getter: - (id)audioMix;	// 0x326a1129
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x326a5881
- (BOOL)canPlayFastForward;	// 0x3269ed39
- (BOOL)canPlayFastReverse;	// 0x3269ee91
- (void)cancelPendingSeeks;	// 0x3269f981
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x326a0ea5
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x326a0b8d
- (id)copyWithZone:(NSZone *)zone;	// 0x3269bfe9
- (id)currentDate;	// 0x3269fa09
- (id)currentEstimatedDate;	// 0x3269fb75
- (XXStruct_pwHToB)currentTime;	// 0x3269f0f1
// declared property getter: - (id)dataYouTubeID;	// 0x326a583d
- (void)dealloc;	// 0x3269bbc1
- (id)description;	// 0x3269c3dd
- (void)didChangeValueForKey:(id)key;	// 0x3269c6a9
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x326a59b9
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x326a5999
- (XXStruct_pwHToB)duration;	// 0x3269df29
// declared property getter: - (id)error;	// 0x3269dcc1
- (id)errorLog;	// 0x326a49d5
- (void)finalize;	// 0x3269bee5
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x3269fdfd
// converted property getter: - (id)gaplessInfo;	// 0x326a2419
// converted property getter: - (id)initialDate;	// 0x3269fad5
// converted property getter: - (id)initialEstimatedDate;	// 0x3269fbfd
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x326a4135
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x326a4115
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x326a4189
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x326a3b35
- (BOOL)isPlaybackBufferEmpty;	// 0x326a1b5d
- (BOOL)isPlaybackBufferFull;	// 0x326a1a65
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x326a196d
// converted property getter: - (BOOL)limitReadAhead;	// 0x326a055d
- (id)loadedTimeRanges;	// 0x326a2381
- (id)playabilityMetrics;	// 0x326a1ccd
- (CGSize)presentationSize;	// 0x3269efe5
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x326a1c55
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x326a01d1
- (BOOL)seekToDate:(id)date;	// 0x3269fa91
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x3269f3f5
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x3269f4a9
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x3269f42d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x3269f511
- (id)seekableTimeRanges;	// 0x326a201d
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x326a3535
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x326a2c41
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x326a3a95
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x326a2b09
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x326a0a21
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x326a1305
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x326a1051
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x326a0d39
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x326a57a1
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x326a5919
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x3269ffd1
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x326a27bd
// converted property setter: - (void)setInitialDate:(id)date;	// 0x3269fb19
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x3269fc41
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x326a0709
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x326a3b55
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x326a03a5
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x326a2911
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x326a1419
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x326a2a45
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x326a29b1
// declared property getter: - (int)status;	// 0x3269dca1
- (void)stepByCount:(int)count;	// 0x3269fc9d
- (id)timedMetadata;	// 0x326a3d3d
- (id)tracks;	// 0x3269e321
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x3269c4bd
// converted property getter: - (id)videoComposition;	// 0x326a13d5
// converted property getter: - (float)volumeAdjustment;	// 0x326a2ae5
- (void)willChangeValueForKey:(id)key;	// 0x3269c649
@end

