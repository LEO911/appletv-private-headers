/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSArray, MPMediaItemArtwork, NSString, NSDate;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) BOOL _hasDownloadProgress;	// G=0x303f0331; 
@property(readonly, assign, nonatomic) BOOL _isDownloadable;	// G=0x303f0745; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x3038f4e1; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x3038f539; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x3038f555; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x3038f571; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x3038f58d; S=0x3038f5c1; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x3038ed3d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x3038f605; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x3038f4fd; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x3038f76d; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x3038f621; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x3038fb41; S=0x3038fb71; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x3038f66d; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x3038f63d; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x3038f9e1; S=0x3038f9fd; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x3038fb09; S=0x3038fb25; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x3038f69d; 
@property(assign, nonatomic) unsigned playCount;	// G=0x3038f8f1; S=0x3038f925; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x3038f969; S=0x3038f99d; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x3038f6d1; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x3038f7b1; 
@property(assign, nonatomic) unsigned rating;	// G=0x3038f7cd; S=0x3038f801; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x3038f845; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x3038fbb5; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x3038fa19; S=0x3038fa4d; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x3038fa91; S=0x3038fac5; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x3038f705; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x3038f739; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x3038f861; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x3038f87d; 
+ (void)_createFilterableDictionary;	// 0x3038ed59
+ (BOOL)_hasDownloadProgressForDownloadStatus:(int)downloadStatus downloadIdentifier:(id)identifier isTemporaryCloudDownload:(BOOL)download mediaItemPersistentID:(id)anId;	// 0x303f0265
+ (BOOL)_isDownloadableForRedownloadParameters:(id)redownloadParameters filePath:(id)path downloadStatus:(int)status isTemporaryCloudDownload:(BOOL)download;	// 0x303f0709
+ (BOOL)_isValidItemProperty:(id)property;	// 0x3038f49d
+ (BOOL)canFilterByProperty:(id)property;	// 0x3038e849
+ (id)daapKeyForMediaProperty:(id)mediaProperty;	// 0x303f70f1
+ (id)daapValueFromMediaValue:(id)mediaValue mediaProperty:(id)property;	// 0x303f733d
+ (id)dynamicProperties;	// 0x3038ec4d
+ (id)mediaPropertyForDAAPKey:(id)daapkey;	// 0x303f6fe9
+ (id)mediaValueFromDAAPValue:(id)daapvalue mediaProperty:(id)property;	// 0x303f71fd
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x3038ea35
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x3038eb35
- (id)initWithCoder:(id)coder;	// 0x3038e745
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x3038e639
- (id)_bestStoreURL;	// 0x3038e981
- (id)_directStoreURL;	// 0x30390249
// declared property getter: - (BOOL)_hasDownloadProgress;	// 0x303f0331
// declared property getter: - (BOOL)_isDownloadable;	// 0x303f0745
- (id)_libraryLinkArtist;	// 0x303903ed
- (id)_libraryLinkKind;	// 0x30390461
- (id)_libraryLinkPlaylistName;	// 0x30390521
- (id)_libraryLinkURL;	// 0x303905b5
// declared property getter: - (id)albumArtist;	// 0x3038f4e1
// declared property getter: - (id)albumTitle;	// 0x3038f539
// declared property getter: - (id)artist;	// 0x3038f555
// declared property getter: - (id)artwork;	// 0x3038f571
// declared property getter: - (double)bookmarkTime;	// 0x3038f58d
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x3038fd01
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x3038fdd1
// declared property getter: - (id)chapters;	// 0x3038ed3d
- (id)chaptersOfType:(int)type;	// 0x3038fbe5
// declared property getter: - (id)composer;	// 0x3038f605
- (unsigned)countOfChaptersOfType:(int)type;	// 0x3038fed5
// declared property getter: - (id)effectiveAlbumArtist;	// 0x3038f4fd
// declared property getter: - (double)effectiveStopTime;	// 0x3038f76d
- (void)encodeWithCoder:(id)coder;	// 0x3038e7cd
- (BOOL)existsInLibrary;	// 0x3038e9b9
- (void)gaplessHeuristicInfo:(unsigned *)info duration:(unsigned *)duration lastPacketsResync:(unsigned *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x3038ff95
// declared property getter: - (id)genre;	// 0x3038f621
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x3038fb41
- (unsigned)hash;	// 0x3038e695
- (BOOL)isEqual:(id)equal;	// 0x3038e6ad
// declared property getter: - (BOOL)isITunesU;	// 0x3038f66d
// declared property getter: - (BOOL)isRental;	// 0x3038f63d
// declared property getter: - (id)lastPlayedDate;	// 0x3038f9e1
// declared property getter: - (id)lastSkippedDate;	// 0x3038fb09
// declared property getter: - (int)mediaType;	// 0x3038f69d
// declared property getter: - (unsigned)playCount;	// 0x3038f8f1
// declared property getter: - (unsigned)playCountSinceSync;	// 0x3038f969
// declared property getter: - (double)playbackDuration;	// 0x3038f6d1
// declared property getter: - (id)podcastTitle;	// 0x3038f7b1
- (id)predicateForProperty:(id)property;	// 0x3038f8b1
// declared property getter: - (unsigned)rating;	// 0x3038f7cd
// declared property getter: - (id)releaseDate;	// 0x3038f845
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x3038fbb5
- (id)representativeItem;	// 0x3038e9b5
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x3038f5c1
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x3038fb71
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x3038f9fd
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x3038fb25
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x3038f925
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x3038f99d
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x3038f801
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x3038fa4d
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x3038fac5
// declared property getter: - (unsigned)skipCount;	// 0x3038fa19
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x3038fa91
// declared property getter: - (double)startTime;	// 0x3038f705
// declared property getter: - (double)stopTime;	// 0x3038f739
// declared property getter: - (id)title;	// 0x3038f861
- (id)valueForProperty:(id)property;	// 0x3038e8d9
// declared property getter: - (unsigned)year;	// 0x3038f87d
@end

