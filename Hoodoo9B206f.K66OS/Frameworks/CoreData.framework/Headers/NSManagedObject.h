/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import <NSObject.h> // Unknown library

@class NSManagedObjectContext, NSManagedObjectID;

@interface NSManagedObject : NSObject {
@private
	int _cd_rc;	// 4 = 0x4
	unsigned _cd_stateFlags;	// 8 = 0x8
	id _cd_rawData;	// 12 = 0xc
	id _cd_entity;	// 16 = 0x10
	NSManagedObjectContext *_cd_managedObjectContext;	// 20 = 0x14
	NSManagedObjectID *_cd_objectID;	// 24 = 0x18
	unsigned _cd_extraFlags;	// 28 = 0x1c
	id _cd_observationInfo;	// 32 = 0x20
	id *_cd_snapshots;	// 36 = 0x24
	unsigned _cd_lockingInfo;	// 40 = 0x28
	id _cd_queueReference;	// 44 = 0x2c
}
@property(retain) id observationInfo;	// G=0x3628dfe9; S=0x3628dfd9; converted property
+ (XXStruct_Iy8xuA *)_PFMOClassFactoryData;	// 0x3624ab11
+ (id)_PFPlaceHolderSingleton;	// 0x3629a34d
+ (id)_PFPlaceHolderSingleton_core;	// 0x3628dec1
+ (void)_entityDeallocated;	// 0x36251d8d
+ (BOOL)_hasOverriddenAwake;	// 0x36299cd9
+ (void)_initializeAccessorStubs;	// 0x3629adf9
+ (void)_initializePrimitiveAccessorStubs;	// 0x3629a98d
+ (BOOL)_isGeneratedClass;	// 0x362471e1
+ (BOOL)_isGeneratedClass_1;	// 0x36299ccd
+ (void)_release_1;	// 0x36251e61
+ (id)_retain_1;	// 0x3629a595
+ (char *)_transientPropertiesChangesMask__;	// 0x3628ded1
+ (BOOL)_useFastValidationMethod;	// 0x36299cd1
+ (id)alloc;	// 0x3628e3c5
+ (unsigned)allocBatch:(id *)batch withEntity:(id)entity count:(unsigned)count;	// 0x3629a5b9
+ (id)allocWithEntity:(id)entity;	// 0x36247c3d
+ (id)allocWithZone:(NSZone *)zone;	// 0x3628e3b5
+ (id)allocWithZone_10_4:(NSZone *)zone_10_4;	// 0x3628e3a5
+ (id)alloc_10_4;	// 0x3628e3ad
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x3628e375
+ (id)batchAllocateWithEntity:(id)entity insertIntoManagedObjectContext:(id)context count:(unsigned)count;	// 0x3629a69d
+ (Class)classForEntity:(id)entity;	// 0x362471e5
+ (BOOL)contextShouldIgnoreUnmodeledPropertyChanges;	// 0x36258f35
+ (void)initialize;	// 0x3625664d
+ (void)release;	// 0x36299cd5
+ (BOOL)resolveClassMethod:(SEL)method;	// 0x3629b511
+ (BOOL)resolveInstanceMethod:(SEL)method;	// 0x36248b4d
+ (id)retain;	// 0x36299cc9
- (id)init;	// 0x36290d59
- (id)initWithEntity:(id)entity insertIntoManagedObjectContext:(id)context;	// 0x36247df9
- (id)_allProperties__;	// 0x36291d1d
- (int)_batch_release__;	// 0x3624f3e1
- (id)_calculateDiffsBetweenOrderedSet:(id)set andOrderedSet:(id)set2;	// 0x36291935
- (void)_chainNewError:(id)error toOriginalErrorDoublePointer:(id *)originalErrorDoublePointer;	// 0x36291fad
- (id)_changedTransientProperties__;	// 0x36292b81
- (id)_changedValuesForCurrentEvent;	// 0x362918dd
- (void)_clearAllChanges__;	// 0x3628e0d1
- (void)_clearPendingChanges__;	// 0x3628e085
- (void)_clearRawPropertiesWithHint:(NSRange)hint;	// 0x3624e171
- (void)_clearUnprocessedChanges__;	// 0x3628e0b9
- (void)_commitPhotoshoperyForRelationshipAtIndex:(unsigned)index newValue:(id)value;	// 0x36292d45
- (BOOL)_defaultValidation:(id *)validation error:(id *)error;	// 0x36299cc1
- (id)_descriptionValues;	// 0x36290eb5
- (void)_didChangeValue:(id)value forRelationship:(id)relationship named:(id)named withInverse:(id)inverse;	// 0x36293dfd
- (void)_excludeObject:(id)object fromPropertyWithKey:(id)key andIndex:(unsigned)index;	// 0x36295c79
- (id)_faultHandler__;	// 0x36292805
- (id)_generateErrorDetailForKey:(id)key withValue:(id)value;	// 0x36292099
- (id)_generateErrorWithCode:(int)code andMessage:(id)message forKey:(id)key andValue:(id)value additionalDetail:(id)detail;	// 0x36292229
- (id)_genericMutableOrderedSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x36295839
- (id)_genericMutableSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x36295729
- (void)_genericUpdateFromSnapshot:(id)snapshot;	// 0x36296f85
- (id)_genericValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x3624ab9d
- (BOOL)_hasAnyObservers__;	// 0x3628e051
- (BOOL)_hasPendingChanges;	// 0x3628e069
- (BOOL)_hasRetainedStoreResources__;	// 0x362485b9
- (BOOL)_hasUnprocessedChanges__;	// 0x3628e09d
- (id)_implicitObservationInfo;	// 0x36291f19
- (void)_includeObject:(id)object intoPropertyWithKey:(id)key andIndex:(unsigned)index;	// 0x36295949
- (id)_initWithEntity:(id)entity withID:(id)anId withHandler:(id)handler withContext:(id)context;	// 0x36247d49
- (BOOL)_isDeallocating;	// 0x3628df59
- (BOOL)_isKindOfEntity:(id)entity;	// 0x36292375
- (BOOL)_isPendingDeletion__;	// 0x3628e159
- (BOOL)_isPendingInsertion__;	// 0x3628e191
- (BOOL)_isPendingUpdate__;	// 0x3628e1c9
- (BOOL)_isSuppressingChangeNotifications__;	// 0x3628e0e9
- (BOOL)_isSuppressingKVO__;	// 0x3628e121
- (BOOL)_isUnprocessedDeletion__;	// 0x3628e201
- (BOOL)_isUnprocessedInsertion__;	// 0x3628e239
- (BOOL)_isUnprocessedUpdate__;	// 0x3628e271
- (BOOL)_isValidRelationshipDestination__;	// 0x36295f95
- (id)_lastSnapshot__;	// 0x3628e2b9
- (void)_maintainInverseRelationship:(id)relationship forProperty:(id)property forChange:(unsigned)change onSet:(id)set;	// 0x36293a49
- (void)_maintainInverseRelationship:(id)relationship forProperty:(id)property oldDestination:(id)destination newDestination:(id)destination4;	// 0x362946dd
- (id)_newAllPropertiesWithRelationshipFaultsIntact__;	// 0x36291d71
- (id)_newChangedValuesForRefresh__;	// 0x36292fed
- (id)_newCommittedSnapshotValues;	// 0x362929dd
- (id)_newNestedSaveChangedValuesForParent:(id)parent;	// 0x362951d5
- (id)_newPersistentPropertiesForConflictRecordFaultsIntact__;	// 0x36291e6d
- (id)_newPersistentPropertiesWithRelationshipFaultsIntact__;	// 0x36291e21
- (id)_newPropertiesForRetainedTypes:(unsigned *)retainedTypes andCopiedTypes:(unsigned *)types preserveFaults:(BOOL)faults;	// 0x36292e1d
- (id)_newSetFromSet:(id)set byApplyingDiffs:(id)diffs;	// 0x36292921
- (id)_newSnapshotForUndo__;	// 0x3629347d
- (void)_nilOutReservedCurrentEventSnapshot__;	// 0x362918a1
- (id)_originalSnapshot__;	// 0x3628e315
- (id)_persistentProperties__;	// 0x36291dc5
- (void)_prepropagateDeleteForMerge;	// 0x36291f99
- (void)_propagateDelete;	// 0x36291f85
- (void)_propagateDelete:(BOOL)aDelete;	// 0x36294871
- (id)_referenceQueue__;	// 0x3624f3d1
- (id)_reservedCurrentEventSnapshot;	// 0x3628e2d1
- (void)_setGenericValue:(id)value forKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x3629c365
- (void)_setHasRetainedStoreResources__:(BOOL)_;	// 0x362485cd
- (void)_setLastSnapshot__:(id)_;	// 0x362950e5
- (void)_setObjectID__:(id)_;	// 0x362918ed
- (void)_setOriginalSnapshot__:(id)_;	// 0x36295171
- (void)_setPendingDeletion__:(BOOL)_;	// 0x3628e16d
- (void)_setPendingInsertion__:(BOOL)_;	// 0x3628e1a5
- (void)_setPendingUpdate__:(BOOL)_;	// 0x3628e1dd
- (void)_setSuppressingChangeNotifications__:(BOOL)_;	// 0x3628e0fd
- (void)_setSuppressingKVO__:(BOOL)_;	// 0x3628e135
- (void)_setUnprocessedDeletion__:(BOOL)_;	// 0x3628e215
- (void)_setUnprocessedInsertion__:(BOOL)_;	// 0x3628e24d
- (void)_setUnprocessedUpdate__:(BOOL)_;	// 0x3628e285
- (void)_setVersionReference__:(unsigned)_;	// 0x3628e305
- (unsigned)_stateFlags;	// 0x3628e2a9
- (id)_substituteEntityAndProperty:(id)property inString:(id)string;	// 0x362920f5
- (id)_transientProperties__;	// 0x36291eb9
- (BOOL)_tryRetain;	// 0x36291441
- (void)_updateFromRefreshSnapshot:(id)refreshSnapshot includingTransients:(BOOL)transients;	// 0x362976e9
- (void)_updateFromSnapshot:(id)snapshot;	// 0x362973b9
- (void)_updateFromUndoSnapshot:(id)undoSnapshot;	// 0x36298455
- (void)_updateToManyRelationship:(id)manyRelationship from:(id)from to:(id)to with:(id)with;	// 0x362923a9
- (BOOL)_validateForSave:(id *)save;	// 0x36292809
- (BOOL)_validatePropertiesWithError:(id *)error;	// 0x36294f99
- (BOOL)_validateValue:(id *)value forProperty:(id)property andKey:(id)key withIndex:(unsigned)index error:(id *)error;	// 0x36296021
- (unsigned)_versionReference__;	// 0x3628e2f5
- (void)awakeFromFetch;	// 0x3624cb41
- (void)awakeFromInsert;	// 0x3628dffd
- (void)awakeFromSnapshotEvents:(unsigned)snapshotEvents;	// 0x3628e001
- (id)changedValues;	// 0x3628eb2d
- (id)changedValuesForCurrentEvent;	// 0x3628e3d5
- (id)committedValuesForKeys:(id)keys;	// 0x3628ede9
- (void)dealloc;	// 0x3624f5f5
- (id)description;	// 0x36290ddd
- (id)dictionaryWithValuesForKeys:(id)keys;	// 0x3628f3ad
- (void)didAccessValueForKey:(id)key;	// 0x3628dff9
- (void)didChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;	// 0x3629079d
- (void)didChangeValueForKey:(id)key;	// 0x36290869
- (void)didChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;	// 0x362906cd
- (void)didFireFault;	// 0x3628e045
- (void)didRefresh:(BOOL)refresh;	// 0x3628e04d
- (void)didSave;	// 0x3628e00d
- (void)didTurnIntoFault;	// 0x3624e341
- (void)diffOrderedSets:(id)sets :(id)arg2 :(id *)arg3 :(id *)arg4 :(id *)arg5 :(id *)arg6 :(id *)arg7;	// 0x362966d1
- (id)entity;	// 0x3628df99
- (unsigned)faultingState;	// 0x3628e011
- (void)finalize;	// 0x362913d1
- (BOOL)hasChanges;	// 0x3628e025
- (BOOL)hasFaultForRelationshipNamed:(id)relationshipNamed;	// 0x36290a55
- (unsigned)hash;	// 0x3628ded5
- (BOOL)implementsSelector:(SEL)selector;	// 0x36299dc5
- (BOOL)isDeleted;	// 0x36290cd9
- (BOOL)isEqual:(id)equal;	// 0x3628df39
- (BOOL)isFault;	// 0x3628dfc5
- (BOOL)isInserted;	// 0x3628dfa9
- (BOOL)isUpdated;	// 0x36290d19
- (id)managedObjectContext;	// 0x3628df6d
- (/*function-pointer*/ void *)methodForSelector:(SEL)selector;	// 0x36299d61
- (id)methodSignatureForSelector:(SEL)selector;	// 0x36299e59
- (id)mutableArrayValueForKey:(id)key;	// 0x362900cd
- (id)mutableOrderedSetValueForKey:(id)key;	// 0x3628fdc9
- (id)mutableSetValueForKey:(id)key;	// 0x3628ff4d
- (id)objectID;	// 0x3624df7d
// converted property getter: - (id)observationInfo;	// 0x3628dfe9
- (void)prepareForDeletion;	// 0x3628e005
- (id)primitiveValueForKey:(id)key;	// 0x3628fc41
- (oneway void)release;	// 0x362914a1
- (BOOL)respondsToSelector:(SEL)selector;	// 0x36299cfd
- (id)retain;	// 0x362915d5
- (unsigned)retainCount;	// 0x3628df45
- (void)setNilValueForKey:(id)key;	// 0x3628e7c1
// converted property setter: - (void)setObservationInfo:(id)info;	// 0x3628dfd9
- (void)setPrimitiveValue:(id)value forKey:(id)key;	// 0x3628fb39
- (void)setValue:(id)value forKey:(id)key;	// 0x3628fd41
- (void)setValue:(id)value forUndefinedKey:(id)undefinedKey;	// 0x3628e88d
- (void)setValuesForKeysWithDictionary:(id)dictionary;	// 0x3628f7a1
- (BOOL)validateForDelete:(id *)aDelete;	// 0x36290275
- (BOOL)validateForInsert:(id *)insert;	// 0x3629022d
- (BOOL)validateForUpdate:(id *)update;	// 0x362901e5
- (BOOL)validateValue:(id *)value forKey:(id)key error:(id *)error;	// 0x36290659
- (id)valueForKey:(id)key;	// 0x3624891d
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x3628e9dd
- (void)willAccessValueForKey:(id)key;	// 0x362909a1
- (void)willChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;	// 0x3629080d
- (void)willChangeValueForKey:(id)key;	// 0x36290919
- (void)willChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;	// 0x36290741
- (void)willFireFault;	// 0x3628e041
- (void)willRefresh:(BOOL)refresh;	// 0x3628e049
- (void)willSave;	// 0x3628e009
- (void)willTurnIntoFault;	// 0x3624e16d
@end

