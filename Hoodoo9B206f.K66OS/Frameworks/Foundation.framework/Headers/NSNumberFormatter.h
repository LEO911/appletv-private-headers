/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x31da6961; S=0x31d19c79; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x31da6afd; S=0x31d3a8bd; converted property
@property(retain) id currencyCode;	// G=0x31da7c5d; S=0x31da7d1d; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x31da6bb1; S=0x31da6c71; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x31da96f1; S=0x31da97b1; converted property
@property(retain) id currencySymbol;	// G=0x31da7db9; S=0x31da7e79; converted property
@property(retain) id decimalSeparator;	// G=0x31da69a1; S=0x31da6a61; converted property
@property(retain) id exponentSymbol;	// G=0x31da85e1; S=0x31da86a1; converted property
@property(assign) unsigned formatWidth;	// G=0x31da8971; S=0x31da8a4d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x31da638d; S=0x31d3a6d1; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x31da6345; S=0x31d2968d; converted property
@property(retain) id groupingSeparator;	// G=0x31da6dc1; S=0x31da6e81; converted property
@property(assign) unsigned groupingSize;	// G=0x31da873d; S=0x31d350ed; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x31da7f15; S=0x31da7fd5; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x31da984d; S=0x31da990d; converted property
@property(retain) id locale;	// G=0x31da62d5; S=0x31d29621; converted property
@property(retain) id maximum;	// G=0x31da9635; S=0x31da965d; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x31da949d; S=0x31d2f839; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x31da9269; S=0x31da9345; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x31da9c25; S=0x31da9d01; converted property
@property(retain) id minimum;	// G=0x31da9579; S=0x31da95a1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x31da93c1; S=0x31d3a93d; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x31da918d; S=0x31d3a9b9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x31da9acd; S=0x31da9ba9; converted property
@property(retain) id minusSign;	// G=0x31da8329; S=0x31da83e9; converted property
@property(retain) id multiplier;	// G=0x31da8ac9; S=0x31da8b89; converted property
@property(retain) id negativeFormat;	// G=0x31da63cd; S=0x31da6485; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x31da758d; S=0x31d19c21; converted property
@property(retain) id negativePrefix;	// G=0x31da79a5; S=0x31da7a65; converted property
@property(retain) id negativeSuffix;	// G=0x31da7b01; S=0x31da7bc1; converted property
@property(retain) id nilSymbol;	// G=0x31da7095; S=0x31d19b71; converted property
@property(retain) id notANumberSymbol;	// G=0x31da71f5; S=0x31da72b5; converted property
@property(assign) unsigned numberStyle;	// G=0x31da6255; S=0x31d1ef41; converted property
@property(retain) id paddingCharacter;	// G=0x31da8c25; S=0x31da8ce5; converted property
@property(assign) unsigned paddingPosition;	// G=0x31da8d81; S=0x31da8e5d; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x31da9d7d; S=0x31da9dc5; converted property
@property(retain) id perMillSymbol;	// G=0x31da81cd; S=0x31da828d; converted property
@property(retain) id percentSymbol;	// G=0x31da8071; S=0x31da8131; converted property
@property(retain) id plusSign;	// G=0x31da8485; S=0x31da8545; converted property
@property(retain) id positiveFormat;	// G=0x31da66bd; S=0x31da6759; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x31da742d; S=0x31d19bc9; converted property
@property(retain) id positivePrefix;	// G=0x31da76ed; S=0x31da77ad; converted property
@property(retain) id positiveSuffix;	// G=0x31da7849; S=0x31da7909; converted property
@property(retain) id roundingIncrement;	// G=0x31da9031; S=0x31da90f1; converted property
@property(assign) unsigned roundingMode;	// G=0x31da8ed9; S=0x31da8fb5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x31da8819; S=0x31da88f5; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x31da7611; S=0x31da7695; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x31da65e1; S=0x31da6665; converted property
@property(retain) id textAttributesForNil;	// G=0x31da7119; S=0x31da719d; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x31da7351; S=0x31da73d5; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x31da74b1; S=0x31da7535; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x31da6885; S=0x31da6909; converted property
@property(retain) id textAttributesForZero;	// G=0x31da6fb9; S=0x31da703d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x31da6d0d; S=0x31d1d321; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x31da998d; S=0x31da9a4d; converted property
@property(retain) id zeroSymbol;	// G=0x31d32355; S=0x31da6f1d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x31d19b61
+ (void)initialize;	// 0x31d19791
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x31d3aab1
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x31d197bd
- (id)init;	// 0x31d197d5
- (id)initWithCoder:(id)coder;	// 0x31da579d
- (void *)__Keynote_NOOP;	// 0x31da54cd
- (void)_regenerateFormatter;	// 0x31d19cd5
- (void)_reset;	// 0x31da54d1
// converted property getter: - (BOOL)allowsFloats;	// 0x31da6961
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x31da6afd
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x31da593d
- (id)copyWithZone:(NSZone *)zone;	// 0x31da568d
// converted property getter: - (id)currencyCode;	// 0x31da7c5d
// converted property getter: - (id)currencyDecimalSeparator;	// 0x31da6bb1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x31da96f1
// converted property getter: - (id)currencySymbol;	// 0x31da7db9
- (void)dealloc;	// 0x31d29761
// converted property getter: - (id)decimalSeparator;	// 0x31da69a1
- (void)encodeWithCoder:(id)coder;	// 0x31da56f5
// converted property getter: - (id)exponentSymbol;	// 0x31da85e1
- (void)finalize;	// 0x31da5649
// converted property getter: - (unsigned)formatWidth;	// 0x31da8971
// converted property getter: - (unsigned)formatterBehavior;	// 0x31da638d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x31da6345
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x31da5941
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x31da61f9
// converted property getter: - (id)groupingSeparator;	// 0x31da6dc1
// converted property getter: - (unsigned)groupingSize;	// 0x31da873d
// converted property getter: - (id)internationalCurrencySymbol;	// 0x31da7f15
// converted property getter: - (BOOL)isLenient;	// 0x31da984d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x31da9d7d
// converted property getter: - (id)locale;	// 0x31da62d5
// converted property getter: - (id)maximum;	// 0x31da9635
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x31da949d
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x31da9269
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x31da9c25
// converted property getter: - (id)minimum;	// 0x31da9579
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x31da93c1
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x31da918d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x31da9acd
// converted property getter: - (id)minusSign;	// 0x31da8329
// converted property getter: - (id)multiplier;	// 0x31da8ac9
// converted property getter: - (id)negativeFormat;	// 0x31da63cd
// converted property getter: - (id)negativeInfinitySymbol;	// 0x31da758d
// converted property getter: - (id)negativePrefix;	// 0x31da79a5
// converted property getter: - (id)negativeSuffix;	// 0x31da7b01
// converted property getter: - (id)nilSymbol;	// 0x31da7095
// converted property getter: - (id)notANumberSymbol;	// 0x31da71f5
- (id)numberFromString:(id)string;	// 0x31da6219
// converted property getter: - (unsigned)numberStyle;	// 0x31da6255
// converted property getter: - (id)paddingCharacter;	// 0x31da8c25
// converted property getter: - (unsigned)paddingPosition;	// 0x31da8d81
// converted property getter: - (id)perMillSymbol;	// 0x31da81cd
// converted property getter: - (id)percentSymbol;	// 0x31da8071
// converted property getter: - (id)plusSign;	// 0x31da8485
// converted property getter: - (id)positiveFormat;	// 0x31da66bd
// converted property getter: - (id)positiveInfinitySymbol;	// 0x31da742d
// converted property getter: - (id)positivePrefix;	// 0x31da76ed
// converted property getter: - (id)positiveSuffix;	// 0x31da7849
// converted property getter: - (id)roundingIncrement;	// 0x31da9031
// converted property getter: - (unsigned)roundingMode;	// 0x31da8ed9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x31da8819
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x31d19c79
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x31d3a8bd
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x31da7d1d
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x31da6c71
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x31da97b1
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x31da7e79
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x31da6a61
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x31da86a1
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x31da8a4d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x31d3a6d1
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x31d2968d
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x31da6e81
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x31d350ed
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x31da7fd5
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x31da990d
// converted property setter: - (void)setLocale:(id)locale;	// 0x31d29621
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x31da965d
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x31d2f839
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x31da9345
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x31da9d01
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x31da95a1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x31d3a93d
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x31d3a9b9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x31da9ba9
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x31da83e9
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x31da8b89
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x31da6485
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x31d19c21
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x31da7a65
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x31da7bc1
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x31d19b71
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x31da72b5
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x31d1ef41
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x31da8ce5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x31da8e5d
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x31da9dc5
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x31da828d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x31da8131
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x31da8545
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x31da6759
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x31d19bc9
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x31da77ad
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x31da7909
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x31da90f1
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x31da8fb5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x31da88f5
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x31da7695
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x31da6665
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x31da719d
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x31da73d5
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x31da7535
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x31da6909
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x31da703d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x31d1d321
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x31da9a4d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x31da6f1d
- (id)stringForObjectValue:(id)objectValue;	// 0x31d1d3c1
- (id)stringFromNumber:(id)number;	// 0x31d1d3a1
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x31da7611
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x31da65e1
// converted property getter: - (id)textAttributesForNil;	// 0x31da7119
// converted property getter: - (id)textAttributesForNotANumber;	// 0x31da7351
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x31da74b1
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x31da6885
// converted property getter: - (id)textAttributesForZero;	// 0x31da6fb9
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x31da6d0d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x31da998d
// converted property getter: - (id)zeroSymbol;	// 0x31d32355
@end

