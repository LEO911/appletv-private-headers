/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
@private
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x31d9b8e1
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x31d9b9e5
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x31d9b9a5
+ (id)decimalNumberWithString:(id)string;	// 0x31d9ba35
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x31d9ba65
+ (id)defaultBehavior;	// 0x31d9c72d
+ (id)maximumDecimalNumber;	// 0x31d9bc79
+ (id)minimumDecimalNumber;	// 0x31d9bc0d
+ (id)notANumber;	// 0x31d9bd95
+ (id)numberWithBool:(BOOL)aBool;	// 0x31d9dc2d
+ (id)numberWithChar:(BOOL)aChar;	// 0x31d9d7f9
+ (id)numberWithDouble:(double)aDouble;	// 0x31d9dbdd
+ (id)numberWithFloat:(float)aFloat;	// 0x31d9db91
+ (id)numberWithInt:(int)int;	// 0x31d9d929
+ (id)numberWithInteger:(int)integer;	// 0x31d9d975
+ (id)numberWithLong:(long)aLong;	// 0x31d9da59
+ (id)numberWithLongLong:(long long)longLong;	// 0x31d9daf1
+ (id)numberWithShort:(short)aShort;	// 0x31d9d891
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x31d9d845
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x31d9d9c1
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x31d9da0d
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x31d9daa5
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x31d9db41
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x31d9d8dd
+ (id)one;	// 0x31d9bd25
+ (void)setDefaultBehavior:(id)behavior;	// 0x31d9c6d9
+ (id)zero;	// 0x31d9bce5
- (id)initWithCoder:(id)coder;	// 0x31d9bb89
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x31d9bad5
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x31d9ba99
- (id)initWithString:(id)string;	// 0x31d9bb11
- (id)initWithString:(id)string locale:(id)locale;	// 0x31d9bb4d
- (BOOL)boolValue;	// 0x31d9cb01
- (BOOL)charValue;	// 0x31d9c985
- (Class)classForCoder;	// 0x31d9c79d
- (int)compare:(id)compare;	// 0x31d9be05
- (id)copy;	// 0x31d9b91d
- (id)copyWithZone:(NSZone *)zone;	// 0x31d9b92d
- (id)decimalNumberByAdding:(id)adding;	// 0x31d9bfc9
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x31d9c019
- (id)decimalNumberByDividingBy:(id)by;	// 0x31d9c395
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x31d9c3e5
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x31d9c2b9
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x31d9c309
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x31d9c545
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x31d9c595
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x31d9c471
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x31d9c4c1
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x31d9c619
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x31d9c18d
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x31d9c1cd
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x31d9c1dd
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x31d9c22d
- (XXStruct_9isexA)decimalValue;	// 0x31d9bbe1
- (id)description;	// 0x31d9bbc5
- (id)descriptionWithLocale:(id)locale;	// 0x31d9bbd9
- (double)doubleValue;	// 0x31d9bed5
- (void)encodeWithCoder:(id)coder;	// 0x31d9c7b9
- (float)floatValue;	// 0x31d9cadd
- (void)getValue:(void *)value;	// 0x31d9bfad
- (int)intValue;	// 0x31d9ca15
- (BOOL)isEqual:(id)equal;	// 0x31d9be81
- (long long)longLongValue;	// 0x31d9caa5
- (long)longValue;	// 0x31d9ca5d
- (const char *)objCType;	// 0x31d9bec9
- (short)shortValue;	// 0x31d9c9cd
- (unsigned char)unsignedCharValue;	// 0x31d9c9a9
- (unsigned)unsignedIntValue;	// 0x31d9ca39
- (unsigned long long)unsignedLongLongValue;	// 0x31d9cac1
- (unsigned long)unsignedLongValue;	// 0x31d9ca81
- (unsigned short)unsignedShortValue;	// 0x31d9c9f1
@end

