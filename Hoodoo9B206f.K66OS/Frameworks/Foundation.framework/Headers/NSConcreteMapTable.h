/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSMapTable.h"


__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable {
@private
	NSSlice keys;	// 4 = 0x4
	NSSlice values;	// 68 = 0x44
	unsigned count;	// 132 = 0x84
	unsigned capacity;	// 136 = 0x88
	unsigned keyOptions;	// 140 = 0x8c
	unsigned valueOptions;	// 144 = 0x90
	unsigned mutations;	// 148 = 0x94
	int growLock;	// 152 = 0x98
	bool shouldRehash;	// 156 = 0x9c
}
@property(readonly, assign) unsigned count;	// G=0x31d24d51; converted property
- (id)init;	// 0x31d75d95
- (id)initWithCoder:(id)coder;	// 0x31d764a5
- (id)initWithKeyOptions:(unsigned)keyOptions valueOptions:(unsigned)options capacity:(unsigned)capacity;	// 0x31cf3345
- (id)initWithKeyPointerFunctions:(id)keyPointerFunctions valuePointerFunctions:(id)functions capacity:(unsigned)capacity;	// 0x31d76285
- (void)_initBlock;	// 0x31cf34c1
- (void)_setBackingStore;	// 0x31cf34e5
- (id)allKeys;	// 0x31d770ed
- (id)allValues;	// 0x31d77191
- (void)assign:(unsigned)assign key:(const void *)key value:(const void *)value isNew:(BOOL)aNew;	// 0x31cf3605
- (void)checkCount:(const char *)count;	// 0x31d75e7d
- (Class)classForCoder;	// 0x31d76489
- (BOOL)containsKeys:(const void **)keys values:(const void **)values count:(unsigned)count;	// 0x31d767c1
- (id)copy;	// 0x31d76011
// converted property getter: - (unsigned)count;	// 0x31d24d51
- (unsigned)countByEnumeratingWithState:(XXStruct_kFm5bA *)state objects:(id *)objects count:(unsigned)count;	// 0x31d76e85
- (void)dealloc;	// 0x31cf37ed
- (id)description;	// 0x31d76d51
- (id)dump;	// 0x31d76889
- (void)encodeWithCoder:(id)coder;	// 0x31d76549
- (void *)existingItemForSetItem:(const void *)setItem forAbsentKey:(const void *)absentKey;	// 0x31d76a95
- (void)finalize;	// 0x31d76ced
- (unsigned)getKeys:(const void **)keys values:(const void **)values;	// 0x31d24dad
- (void)grow;	// 0x31d16fc1
- (unsigned)hash;	// 0x31d76fa5
- (BOOL)isEqual:(id)equal;	// 0x31d76fd9
- (id)keyEnumerator;	// 0x31d76f29
- (id)keyPointerFunctions;	// 0x31d766f9
- (BOOL)mapMember:(const void *)member originalKey:(const void **)key value:(const void **)value;	// 0x31d76b49
- (id)objectEnumerator;	// 0x31d76f85
- (id)objectForKey:(id)key;	// 0x31cf30b5
- (void)raiseCountUnderflowException;	// 0x31d75db9
- (unsigned)realCount;	// 0x31d75dfd
- (void)rehash;	// 0x31d76c35
- (unsigned)rehashAround:(unsigned)around;	// 0x31d14ba1
- (void)removeAllItems;	// 0x31d050b5
- (void)removeObjectForKey:(id)key;	// 0x31d12819
- (void)replaceItem:(const void *)item forExistingKey:(const void *)existingKey;	// 0x31d76bc1
- (void)setItem:(const void *)item forAbsentKey:(const void *)absentKey;	// 0x31d7694d
- (void)setItem:(const void *)item forKnownAbsentKey:(const void *)knownAbsentKey;	// 0x31d769dd
- (void)setObject:(id)object forKey:(id)key;	// 0x31cf356d
- (id)valuePointerFunctions;	// 0x31d7675d
- (void)zeroPairedEntries;	// 0x31d75f05
@end

