/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <NSObject.h> // Unknown library
#import "EventKit-Structs.h"

@class NSNumber, NSTimeZone, NSArray, NSString, EKDaemonConnection, EKCalendar, NSMutableDictionary, NSMutableSet;

@interface EKEventStore : NSObject {
@private
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKDaemonConnection *_database;	// 32 = 0x20
	unsigned long _flags;	// 36 = 0x24
	NSTimeZone *_timeZone;	// 40 = 0x28
	NSMutableDictionary *_calendars;	// 44 = 0x2c
	NSMutableDictionary *_sources;	// 48 = 0x30
	NSMutableSet *_objectsPendingCommit;	// 52 = 0x34
	dispatch_queue_s *_calendarQueue;	// 56 = 0x38
	dispatch_queue_s *_registeredQueue;	// 60 = 0x3c
	dispatch_queue_s *_unsavedChangesQueue;	// 64 = 0x40
	dispatch_queue_s *_dbChangedQueue;	// 68 = 0x44
}
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x31f2b549; S=0x31f2b559; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x31f2b57d; S=0x31f2b58d; @synthesize
@property(assign, nonatomic) dispatch_queue_s *calendarQueue;	// G=0x31f2b5d1; S=0x31f2b5e1; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x31effd25; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x31f2b4f5; S=0x31f2b505; @synthesize=_database
@property(assign, nonatomic) dispatch_queue_s *dbChangedQueue;	// G=0x31f2b631; S=0x31f2b641; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x31ef5589; S=0x31f2b411; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x31ef64ad; 
@property(retain) id defaultCalendarForNewTasks;	// G=0x31f00ab1; S=0x31f283f5; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x31ef4259; S=0x31f2b3cd; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x31f2b4b5; S=0x31f2b4c5; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x31f26409; 
@property(assign, nonatomic) unsigned long flags;	// G=0x31f2b529; S=0x31f2b539; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x31f2b495; S=0x31f2b4a5; @synthesize=_insertedObjects
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x31f2b5b1; S=0x31f2b5c1; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x31f2b475; S=0x31f2b485; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x31f2b455; S=0x31f2b465; @synthesize=_registeredObjects
@property(assign, nonatomic) dispatch_queue_s *registeredQueue;	// G=0x31f2b5f1; S=0x31f2b601; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x31ee3fa5; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x31ee2261; S=0x31ee6781; @synthesize=_timeZone
@property(assign, nonatomic) dispatch_queue_s *unsavedChangesQueue;	// G=0x31f2b611; S=0x31f2b621; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x31f2b4d5; S=0x31f2b4e5; @synthesize=_updatedObjects
+ (Class)classForEntityName:(id)entityName;	// 0x31ee45dd
+ (Class)publicClassForEntityName:(id)entityName;	// 0x31eed9c9
+ (id)storeWithOptions:(unsigned long)options path:(id)path;	// 0x31f2572d
- (id)init;	// 0x31ee1cd9
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x31ee1ced
- (id)_addFetchedObjectWithID:(id)anId;	// 0x31ee436d
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x31efc2b5
- (id)_allCalendars;	// 0x31eee9e1
- (BOOL)_calendar:(id)calendar supportsEntityType:(int)type;	// 0x31eeeb99
// declared property getter: - (id)_calendars;	// 0x31f2b549
- (void)_databaseChangedExternally;	// 0x31efe071
- (void)_deleteObject:(id)object;	// 0x31eff9f1
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x31f27429
- (void)_forgetRegisteredObjects;	// 0x31f28ef5
- (void)_insertObject:(id)object;	// 0x31ef840d
- (void)_notifyStoreChanged;	// 0x31f264e9
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x31f270c9
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x31eeee09
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x31eef32d
- (void)_protectedDataDidBecomeAvailable;	// 0x31f2b3c9
- (void)_protectedDataWillBecomeUnavailable;	// 0x31f2b3c5
- (void)_refreshCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x31f28a51
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x31f28bd1
- (void)_registerObject:(id)object;	// 0x31ef3c89
- (void)_registerObjectImmediate:(id)immediate;	// 0x31ee49dd
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x31efda91
- (void)_save;	// 0x31f264d5
- (void)_saveWithNotify:(BOOL)notify;	// 0x31f2644d
// declared property getter: - (id)_sources;	// 0x31f2b57d
- (void)_trackModifiedObject:(id)object;	// 0x31f02221
- (void)_unregisterObject:(id)object;	// 0x31effc45
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x31efe2e1
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x31f2ae41
- (id)alarmWithUUID:(id)uuid;	// 0x31f2ad79
// declared property getter: - (dispatch_queue_s *)calendarQueue;	// 0x31f2b5d1
- (id)calendarWithExternalURI:(id)externalURI;	// 0x31f288a9
- (id)calendarWithID:(id)anId;	// 0x31ee99b9
- (id)calendarWithIdentifier:(id)identifier;	// 0x31eef229
// declared property getter: - (id)calendars;	// 0x31effd25
- (void)cancelFetchRequest:(id)request;	// 0x31f2ad59
- (id)changesSinceSequenceNumber:(int)number;	// 0x31f25801
- (BOOL)commit:(id *)commit;	// 0x31efc319
- (id)connection;	// 0x31ee33d5
- (CGColorRef)copyCGColorForNewCalendar;	// 0x31f28295
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x31eef5c1
- (void)daemonRestarted;	// 0x31f263c1
// declared property getter: - (id)database;	// 0x31f2b4f5
// declared property getter: - (dispatch_queue_s *)dbChangedQueue;	// 0x31f2b631
- (void)dealloc;	// 0x31ee3b8d
- (id)defaultAllDayAlarm;	// 0x31ef5515
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x31ef5589
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x31ef64ad
// converted property getter: - (id)defaultCalendarForNewTasks;	// 0x31f00ab1
- (id)defaultTimedAlarm;	// 0x31ef41e5
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x31ef4259
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x31f26eb5
// declared property getter: - (id)deletedObjects;	// 0x31f2b4b5
- (id)earliestExpiringUnreadEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x31ee22b1
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x31f2ab45
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x31ef2a99
// declared property getter: - (id)eventStoreIdentifier;	// 0x31f26409
- (id)eventWithIdentifier:(id)identifier;	// 0x31f26fe9
- (id)eventWithUUID:(id)uuid;	// 0x31f287dd
- (id)eventWithUniqueId:(id)uniqueId;	// 0x31f27639
- (id)eventsMatchingPredicate:(id)predicate;	// 0x31ee2bc1
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x31ee2d81
- (void)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x31f04fbd
// declared property getter: - (unsigned long)flags;	// 0x31f2b529
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x31f27ac1
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x31f28061
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x31f27bb5
- (id)insertNewEvent;	// 0x31f28989
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x31f289e5
- (id)insertNewReminder;	// 0x31f2862d
// declared property getter: - (id)insertedObjects;	// 0x31f2b495
- (BOOL)isDataProtected;	// 0x31ee225d
- (id)localSource;	// 0x31f26745
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x31eeed85
- (BOOL)markEventRead:(id)read error:(id *)error;	// 0x31f27711
- (BOOL)markEventsRead:(id)read error:(id *)error;	// 0x31f27869
- (id)objectWithObjectID:(id)objectID;	// 0x31ee9a51
// declared property getter: - (id)objectsPendingCommit;	// 0x31f2b5b1
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x31f286ed
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x31ef042d
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x31f2876d
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x31eef2f5
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x31eefdc5
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x31ee9c59
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x31f2b24d
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x31f00195
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x31ef0461
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x31f04f0d
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x31f28725
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x31f28791
- (id)predicateForUnacknowledgedEvents;	// 0x31f2b38d
- (id)predicateForUnalertedEvents;	// 0x31ee2b6d
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x31f2b3a9
- (id)publicObjectWithObjectID:(id)objectID;	// 0x31f291c5
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x31eed2b1
// declared property getter: - (id)publicRegisteredObjects;	// 0x31f2b475
- (int)readWriteCalendarCountForEntityType:(int)entityType;	// 0x31ef4cd1
- (id)readWriteCalendarsForEntityType:(int)entityType;	// 0x31eee8d5
- (void)refreshSourcesIfNecessary;	// 0x31f28cf1
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x31ee5e6d
- (id)registerFetchedObjectWithID:(id)anId;	// 0x31ee420d
// declared property getter: - (id)registeredObjects;	// 0x31f2b455
// declared property getter: - (dispatch_queue_s *)registeredQueue;	// 0x31f2b5f1
- (oneway void)release;	// 0x31ee26fd
- (id)reminderWithExternalURI:(id)externalURI;	// 0x31f28459
- (id)reminderWithUUID:(id)uuid;	// 0x31f28565
- (id)remindersMatchingPredicate:(id)predicate;	// 0x31eefdfd
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x31f26df9
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x31f26d21
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x31eff385
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x31eff361
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x31f0518d
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x31f0516d
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x31f268b1
- (void)reset;	// 0x31f29b41
- (void)rollback;	// 0x31f29845
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x31f26d41
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x31f26d01
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x31ef8261
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x31ef823d
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x31f00d85
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x31f021e5
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x31f26805
- (int)sequenceNumber;	// 0x31f257a9
- (unsigned)serverPort;	// 0x31ee23b1
// declared property setter: - (void)setCalendarQueue:(dispatch_queue_s *)queue;	// 0x31f2b5e1
// declared property setter: - (void)setDatabase:(id)database;	// 0x31f2b505
// declared property setter: - (void)setDbChangedQueue:(dispatch_queue_s *)queue;	// 0x31f2b641
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x31f2b411
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x31f28391
// converted property setter: - (void)setDefaultCalendarForNewTasks:(id)newTasks;	// 0x31f283f5
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x31f2b3cd
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x31f2b4c5
- (void)setEventsAlertedAndSave:(id)save;	// 0x31ee39f9
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x31f2b539
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x31f2b4a5
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x31f2b5c1
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x31f2b485
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x31f2b465
// declared property setter: - (void)setRegisteredQueue:(dispatch_queue_s *)queue;	// 0x31f2b601
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x31ee6781
// declared property setter: - (void)setUnsavedChangesQueue:(dispatch_queue_s *)queue;	// 0x31f2b621
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x31f2b4e5
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x31f2b559
// declared property setter: - (void)set_sources:(id)sources;	// 0x31f2b58d
- (id)sourceWithIdentifier:(id)identifier;	// 0x31eed8e1
// converted property getter: - (id)sources;	// 0x31ee3fa5
// declared property getter: - (id)timeZone;	// 0x31ee2261
- (int)unacknowledgedEventCount;	// 0x31f28a25
- (int)unreadEventCount;	// 0x31ee286d
// declared property getter: - (dispatch_queue_s *)unsavedChangesQueue;	// 0x31f2b611
// declared property getter: - (id)updatedObjects;	// 0x31f2b4d5
@end

