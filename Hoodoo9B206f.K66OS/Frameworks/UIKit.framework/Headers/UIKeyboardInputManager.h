/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UIKit-Structs.h"


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x355ac939; S=0x355ac931; converted property
@property(assign) unsigned phraseBoundary;	// G=0x355ac961; S=0x355ac95d; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x355ac96d; S=0x353f69cd; converted property
+ (id)activeInstance;	// 0x353fd0b1
+ (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x353fd079
+ (void)clearAllCentroids;	// 0x353fd4ed
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x355acb65
+ (void)endRegisteringKeyplane;	// 0x353fd831
+ (id)keyboardUserDirectory;	// 0x35333589
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x353fd7ad
+ (void)releaseSharedInstance;	// 0x35379025
+ (void)removeAllDynamicDictionaries;	// 0x355acc85
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x355acbf5
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x35382061
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x35333555
- (void)acceptInput;	// 0x355ac921
- (BOOL)acceptInputString:(id)string;	// 0x35416acd
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x355ac94d
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x355aca4d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x35446421
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x355ac901
- (id)addInputObject:(id)object;	// 0x355acdc1
- (void)addToTypingHistory:(id)typingHistory;	// 0x355acb49
- (void)appendToInputContext:(id)inputContext;	// 0x355ac925
- (id)autocorrection;	// 0x355ac951
- (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x353fd0c1
- (BOOL)canHandleKeyHitTest;	// 0x355ace59
- (BOOL)canUseGeometryKeyTouch;	// 0x353fd4c9
- (void)candidateAccepted:(id)accepted;	// 0x355acb51
- (id)candidates;	// 0x355ac955
- (CFArrayRef)chargeableKeys;	// 0x355acdb9
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x355acdbd
- (void)clearAllCentroids;	// 0x355acea9
- (void)clearDynamicDictionary;	// 0x355acb61
- (void)clearInput;	// 0x355ac91d
- (void)clearInputContext;	// 0x355ac92d
- (void)clearKeyAreas;	// 0x355ace5d
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x355aca6d
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x35384a25
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x355aca71
- (void)decreaseUserFrequency:(id)frequency;	// 0x355acb5d
- (id)defaultCandidate;	// 0x355ac975
- (unsigned)defaultCandidateIndex;	// 0x355ac979
- (id)deleteFromInput:(unsigned *)input;	// 0x355ac915
- (void)deleteFromStrokeHistory:(BOOL)strokeHistory;	// 0x355acea1
- (void)endRegisteringKeyplane;	// 0x353fd865
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x355ac9dd
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x355ac9e1
- (void)increaseUserFrequency:(id)frequency;	// 0x355acb59
- (unsigned)inputCount;	// 0x355ac93d
- (BOOL)inputEmpty;	// 0x355ac941
// converted property getter: - (unsigned)inputIndex;	// 0x355ac939
- (void)inputLocationChanged;	// 0x355ac949
- (id)inputString;	// 0x355ac945
- (BOOL)isSentenceDelimiter:(unsigned short)delimiter;	// 0x3546aedd
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift;	// 0x355ace65
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x355ace69
- (BOOL)keySlidIntoSwipe;	// 0x355ace9d
- (void)lastAcceptedCandidateCorrected;	// 0x355acb55
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x355ac9e5
- (unsigned)maximumShortcutLengthAllowed;	// 0x355aceb5
// converted property getter: - (unsigned)phraseBoundary;	// 0x355ac961
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x355acea5
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x355ace61
- (id)remainingInput;	// 0x355ac959
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x355ac929
- (id)searchStringForMarkedText;	// 0x355ac981
- (void)setAutoCorrects:(BOOL)corrects;	// 0x355aca55
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x355acdb5
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x355aca65
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x355aca69
- (void)setInput:(id)input;	// 0x355ac90d
- (void)setInput:(id)input typedString:(id)string;	// 0x355ac911
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x355ac931
- (id)setInputObject:(id)object;	// 0x355ace0d
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x355aca61
- (void)setKeyboardMatchType:(int)type;	// 0x35384925
- (void)setLearnsCorrection:(BOOL)correction;	// 0x355acb45
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x355ac95d
- (void)setShallowPrediction:(BOOL)prediction;	// 0x355aca59
- (void)setShift:(BOOL)shift;	// 0x355aca5d
- (void)setTypologyRecorder:(id)recorder;	// 0x355acead
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x353f69cd
- (id)shadowTyping;	// 0x355acdb1
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x355aceb9
- (BOOL)shouldExtendPriorWord;	// 0x3542722d
- (BOOL)shouldShiftAfterChar:(unsigned short)aChar withSpaces:(int)spaces currentShift:(BOOL)shift;	// 0x35427481
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x355ac9cd
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x355ac9d1
- (id)sortingMethods;	// 0x355ac9d5
- (BOOL)stringEndsWord:(id)word;	// 0x3544626d
- (id)stringForDoubleKey:(id)doubleKey;	// 0x355ac995
- (BOOL)suppliesCompletions;	// 0x355ac98d
- (BOOL)supportsNumberKeySelection;	// 0x355aca51
- (BOOL)supportsSetPhraseBoundary;	// 0x355ac969
- (BOOL)supportsShortcutConversion;	// 0x355aceb1
- (BOOL)suppressCompletionsForFieldEditor;	// 0x355ac991
- (BOOL)suppressesCandidateDisplay;	// 0x35468a71
- (void)textAccepted:(id)accepted;	// 0x355acb4d
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x355ac9d9
- (BOOL)usesAutoDeleteWord;	// 0x355ac971
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x355ac96d
- (unsigned)wordHistoryDepth;	// 0x355ac935
@end

