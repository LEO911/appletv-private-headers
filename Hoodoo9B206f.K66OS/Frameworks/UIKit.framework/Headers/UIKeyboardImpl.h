/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class UITextInputTraits, NSMutableArray, UIDelayedAction, UIAutocorrectInlinePrompt, UIKeyboardLayout, NSArray, NSTimer, UITextInputArrowKeyHistory, NSMutableDictionary, UIKeyboardCandidate, UIAlertView, UIKeyboardInputManager, NSString;
@protocol UIKeyInput, UITextInput, UIKeyboardRecording, UIApplicationEventRecording, UIKeyboardTypology, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 48 = 0x30
	UIView *m_languageIndicator;	// 52 = 0x34
	NSString *m_previousInputString;	// 56 = 0x38
	UIKeyboardInputManager *m_inputManager;	// 60 = 0x3c
	UIKeyboardCandidate *m_autocorrection;	// 64 = 0x40
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 68 = 0x44
	UIDelayedAction *m_autocorrectPromptAction;	// 72 = 0x48
	NSMutableDictionary *m_autocorrectHistoryLists;	// 76 = 0x4c
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 80 = 0x50
	NSArray *m_candidates;	// 84 = 0x54
	id<UIKeyboardCandidateList> m_candidateList;	// 88 = 0x58
	UIView *m_markedTextOverlay;	// 92 = 0x5c
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 96 = 0x60
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 100 = 0x64
	UIKeyboardLayout *m_layout;	// 104 = 0x68
	NSMutableDictionary *m_keyedLayouts;	// 108 = 0x6c
	NSString *m_inputModeLastChosen;	// 112 = 0x70
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 116 = 0x74
	NSTimer *m_autoDeleteTimer;	// 128 = 0x80
	unsigned m_autoDeleteCount;	// 132 = 0x84
	double m_autoDeleteLastDelete;	// 136 = 0x88
	double m_autoDeleteInterval;	// 144 = 0x90
	unsigned long m_autoDeleteShiftCharacter;	// 152 = 0x98
	UIDelayedAction *m_longPressAction;	// 156 = 0x9c
	int m_orientation;	// 160 = 0xa0
	int m_originalOrientation;	// 164 = 0xa4
	CGPoint m_inputPoint;	// 168 = 0xa8
	int m_changeCount;	// 176 = 0xb0
	double m_changeTime;	// 180 = 0xb4
	double m_doubleSpacePeriodTime;	// 188 = 0xbc
	id m_changedDelegate;	// 196 = 0xc4
	CFRunLoopObserverRef m_observer;	// 200 = 0xc8
	unsigned m_textInputChangingCount;	// 204 = 0xcc
	BOOL m_textInputChangingText;	// 208 = 0xd0
	BOOL m_textInputChangingDirection;	// 209 = 0xd1
	BOOL m_textInputChangesIgnored;	// 210 = 0xd2
	BOOL m_insideKeyInputDelegateCall;	// 211 = 0xd3
	UITextInputTraits *m_defaultTraits;	// 212 = 0xd4
	UITextInputTraits *m_traits;	// 216 = 0xd8
	int m_returnKeyState;	// 220 = 0xdc
	int m_currentDirection;	// 224 = 0xe0
	int m_learnsCorrections;	// 228 = 0xe4
	BOOL m_anotherTouchWaiting;	// 232 = 0xe8
	BOOL m_autoDeleteOK;	// 233 = 0xe9
	BOOL m_autocapitalizationPreference;	// 234 = 0xea
	BOOL m_autocorrectPromptTimerFired;	// 235 = 0xeb
	BOOL m_autocorrectionPreference;	// 236 = 0xec
	BOOL m_autoshift;	// 237 = 0xed
	BOOL m_caretShowingNow;	// 238 = 0xee
	BOOL m_changeNotificationDisabled;	// 239 = 0xef
	BOOL m_delegateIsSMSTextView;	// 240 = 0xf0
	BOOL m_delegateRequiresKeyEvents;	// 241 = 0xf1
	BOOL m_doubleSpacePeriodPreference;	// 242 = 0xf2
	BOOL m_hardwareKeyboardAttached;	// 243 = 0xf3
	BOOL m_inDealloc;	// 244 = 0xf4
	BOOL m_inHardwareKeyboardMode;	// 245 = 0xf5
	BOOL m_initializationDone;	// 246 = 0xf6
	BOOL m_performDecomposingDelete;	// 247 = 0xf7
	BOOL m_performanceLoggingEnabled;	// 248 = 0xf8
	BOOL m_selecting;	// 249 = 0xf9
	BOOL m_shift;	// 250 = 0xfa
	BOOL m_shiftLocked;	// 251 = 0xfb
	BOOL m_shiftLockedEnabled;	// 252 = 0xfc
	BOOL m_settingShift;	// 253 = 0xfd
	BOOL m_shouldSkipCandidateSelection;	// 254 = 0xfe
	BOOL m_updatingPreferences;	// 255 = 0xff
	BOOL m_changingGeometryWithSameOrientation;	// 256 = 0x100
	BOOL m_suppressGeometryChangeNotifications;	// 257 = 0x101
	BOOL m_acceptingCandidate;	// 258 = 0x102
	BOOL m_userChangedSelection;	// 259 = 0x103
	BOOL m_shouldChargeKeys;	// 260 = 0x104
	BOOL m_longPress;	// 261 = 0x105
	BOOL m_syntheticInput;	// 262 = 0x106
	BOOL m_replacingWord;	// 263 = 0x107
	BOOL m_shiftNeedsUpdate;	// 264 = 0x108
	BOOL m_shiftPreventAutoshift;	// 265 = 0x109
	BOOL m_shiftHeldDownNeedsUpdated;	// 266 = 0x10a
	BOOL m_delegateAdoptsTextInput;	// 267 = 0x10b
	BOOL m_delegateAdoptsTextInputPrivate;	// 268 = 0x10c
	BOOL m_delegateAdoptsKeyboardInput;	// 269 = 0x10d
	BOOL m_clientVariantSupportEnabled;	// 270 = 0x10e
	BOOL m_clientVariantSupportEnabledEver;	// 271 = 0x10f
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 272 = 0x110
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 276 = 0x114
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 280 = 0x118
	BOOL m_preRotateShift;	// 284 = 0x11c
	BOOL m_preRotateShiftLocked;	// 285 = 0x11d
	BOOL m_showInputModeIndicator;	// 286 = 0x11e
	BOOL m_suppressUpdateCandidateView;	// 287 = 0x11f
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 288 = 0x120
	BOOL m_shouldSetInputModeInNextRun;	// 289 = 0x121
	BOOL m_rivenCenterFilled;	// 290 = 0x122
	float m_splitProgress;	// 292 = 0x124
	NSString *m_currentUsedInputMode;	// 296 = 0x128
	NSString *m_lastUsedInputMode;	// 300 = 0x12c
	BOOL m_needsCandidates;	// 304 = 0x130
	BOOL m_shouldSkipCandidateGeneration;	// 305 = 0x131
	BOOL m_updateLayoutOnShowKeyboard;	// 306 = 0x132
	int _currentAlertReason;	// 308 = 0x134
@private
	id<UIKeyboardTypology> typologyRecorder;	// 312 = 0x138
	BOOL m_showsCandidateBar;	// 316 = 0x13c
	BOOL m_showsCandidateInline;	// 317 = 0x13d
	UIAlertView *keyboardAlertView;	// 320 = 0x140
	BOOL committingCandidate;	// 324 = 0x144
	BOOL geometryIsChanging;	// 325 = 0x145
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x35420935; S=0x3540a481; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x353f1979; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x35393565; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x35412175; S=0x3538419d; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x35384169; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x3552696d; S=0x355269a1; converted property
@property(assign) BOOL caretBlinks;	// G=0x3552b761; S=0x353f2ef1; converted property
@property(assign) BOOL caretVisible;	// G=0x3541ea65; S=0x353f2f59; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x3552608d; 
@property(readonly, assign) int changeCount;	// G=0x353f1341; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x35527af9; S=0x35527b09; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x3541370d; S=0x35395511; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x353fadd1; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x3552b935; S=0x3552b945; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x35421ae9; S=0x35395559; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x3537ce65; S=0x35328dc5; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x35527921; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x353f1601; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x3537de8d; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x353f1331; S=0x353f0f95; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x3552b955; S=0x3552b965; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x35526e79; S=0x35526eb1; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x35382051; S=0x3541f9cd; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x35381505; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x35383b5d; S=0x35383b39; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x35527579; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x3552b901; S=0x3552b911; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x3552b8e1; S=0x35395535; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x35380ea5; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x354452e9; S=0x3552bcd1; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x35527ba9; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x35526265; 
@property(readonly, assign) int orientation;	// G=0x35403959; converted property
@property(assign) unsigned phraseBoundary;	// G=0x35528415; S=0x3552838d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x3537ce41; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x35384929; S=0x35395235; 
@property(assign) BOOL returnKeyEnabled;	// G=0x353fd9ad; S=0x353f1751; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x355261d5; S=0x35526209; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x353fb92d; S=0x354b1581; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x354b16cd; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x3552a669; S=0x353f171d; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x3552b8c1; S=0x3552b8d1; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x35384d69; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x35445e11; S=0x353f4029; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x3552b8a1; S=0x3552b8b1; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x3538504d; S=0x35384e71; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x3552b8f1; S=0x35384cad; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x35389661; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x35383b6d; S=0x35395275; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x3552bb89
+ (id)activeInstance;	// 0x35328db5
+ (float)additionalInstanceHeight;	// 0x35384ff5
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x35525a95
+ (void)applicationWillResignActive:(id)application;	// 0x35394685
+ (void)applicationWillSuspend:(id)application;	// 0x3539493d
+ (CGSize)defaultSize;	// 0x35525d0d
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x3537c60d
+ (CGSize)defaultSizeForOrientation:(int)orientation;	// 0x3546d8b1
+ (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x35525d31
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x3552aa35
+ (BOOL)isSplit;	// 0x353866dd
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x3538a29d
+ (void)markElapsed:(id)elapsed;	// 0x35384c45
+ (void)markPerformance:(id)performance;	// 0x3537cb61
+ (id)normalizedInputModesFromPreference;	// 0x35525d69
+ (int)orientationForSize:(CGSize)size;	// 0x353f1045
+ (int)persistentDictationTargetZone;	// 0x35526411
+ (CGPoint)persistentDictationWindowOffset;	// 0x355265f5
+ (CGPoint)persistentOffset;	// 0x35387971
+ (float)persistentSplitProgress;	// 0x355262c1
+ (void)refreshRivenStateWithTraits:(id)traits;	// 0x3537dac9
+ (void)releaseSharedInstance;	// 0x35378f55
+ (BOOL)rivenInstalled;	// 0x3538b3f1
+ (BOOL)rivenPreference;	// 0x353896f1
+ (BOOL)rivenTranslationPreference;	// 0x354169e1
+ (void)setParentTestForProfiling:(id)profiling;	// 0x3552b9b9
+ (void)setPersistentDictationTargetZone:(int)zone;	// 0x35526459
+ (void)setPersistentDictationWindowOffset:(CGPoint)offset;	// 0x355264b5
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x354262b1
+ (void)setPersistentSplitProgress:(float)progress;	// 0x35526335
+ (id)sharedInstance;	// 0x3537c485
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x353862e5
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x35386479
+ (float)splitProgress;	// 0x35526325
+ (BOOL)supportsSplit;	// 0x353f640d
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x35526401
- (id)initWithFrame:(CGRect)frame;	// 0x3537c785
- (id)UILanguagePreference;	// 0x35380bdd
- (CGRect)_autocorrectPromptRect;	// 0x354a78d5
- (id)_getAutocorrection;	// 0x3552befd
- (id)_getCurrentKeyboardName;	// 0x3552be0d
- (id)_getCurrentKeyplaneName;	// 0x354a606d
- (id)_getLocalizedInputMode;	// 0x3552be75
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x3552b3bd
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x3552b519
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x3552b49d
- (BOOL)_hasCandidates;	// 0x353817a9
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x3552c00d
- (id)_inputForAutocorrectionCandidate;	// 0x35469e61
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x3552ba59
- (id)_layout;	// 0x35386459
- (BOOL)_needsCandidates;	// 0x3552bfc1
- (int)_positionInCandidateList:(id)candidateList;	// 0x3552bf1d
- (id)_rangeForAutocorrection;	// 0x354a79ed
- (void)_releaseInputManager;	// 0x3552bff1
- (void)_resetInputLocation;	// 0x3552bfd1
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x3552bedd
- (void)_setInputManager:(id)manager;	// 0x3552b9f5
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x354a6151
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x3552ba05
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x35445ed1
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x353f12d1
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x35384d81
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x353f140d
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x353feb09
- (void)acceptAutocorrection;	// 0x3542754d
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x355288c9
- (void)acceptCurrentCandidate;	// 0x35528c3d
- (void)acceptCurrentCandidateIfSelected;	// 0x353fc9c5
- (BOOL)acceptInputString:(id)string;	// 0x35416a91
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x35468a75
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x3552a63d
- (void)addAutocorrectionRecord:(id)record forTyping:(id)typing;	// 0x3552a029
- (void)addInputObject:(id)object;	// 0x35528e9d
- (void)addInputString:(id)string;	// 0x355281e9
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x35420ae9
- (void)addTyping:(id)typing forAutocorrection:(id)autocorrection;	// 0x354ac0c9
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x35527215
- (void)animateAutocorrection;	// 0x354ab49d
- (void)applicationResumedEventsOnly:(id)only;	// 0x35525e41
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x35525dd5
// declared property getter: - (id)arrowKeyHistory;	// 0x35420935
- (void)autoDeleteTimerFired:(id)fired;	// 0x3552a699
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x353f1979
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x354272a9
// converted property getter: - (id)autocorrectPrompt;	// 0x35393565
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x35412175
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x354ac2f1
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x35384169
- (BOOL)autocorrectionPreferenceForTraits;	// 0x353840f9
- (id)autocorrectionRecordForWord:(id)word;	// 0x35427271
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x3552696d
- (void)callChanged;	// 0x35413d09
- (void)callChangedSelection;	// 0x353f3101
- (BOOL)callLayoutIgnoresShiftState;	// 0x3544639d
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x353fded5
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x353fde85
- (void)callLayoutLongPressAction;	// 0x3552b975
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x353f37c1
- (void)callLayoutSetShift:(BOOL)shift;	// 0x353f376d
- (BOOL)callLayoutShiftKeyRequiresImmediateUpdate;	// 0x354a684d
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x353f322d
- (void)callLayoutUpdateLocalizedKeys;	// 0x353840b1
- (void)callLayoutUpdateReturnKey;	// 0x353f177d
- (BOOL)callLayoutUsesAutoShift;	// 0x353f3635
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x354a1c95
- (BOOL)callShouldInsertText:(id)call;	// 0x35421b4d
- (BOOL)canHandleKeyHitTest;	// 0x353fd481
- (BOOL)canUseGeometryKeyTouch;	// 0x353fd4a5
- (void)cancelAllKeyEvents;	// 0x3532a9f5
- (void)cancelSplitTransition;	// 0x35526785
- (id)candidateList;	// 0x35528d4d
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x35528cd5
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x35528d01
// converted property getter: - (BOOL)caretBlinks;	// 0x3552b761
// converted property getter: - (BOOL)caretVisible;	// 0x3541ea65
// declared property getter: - (BOOL)centerFilled;	// 0x3552608d
// converted property getter: - (int)changeCount;	// 0x353f1341
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x35527af9
// declared property getter: - (id)changedDelegate;	// 0x3541370d
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x3552a679
- (BOOL)checkSpellingPreference;	// 0x353842b5
- (BOOL)checkSpellingPreferenceForTraits;	// 0x35384241
- (void)clearAnimations;	// 0x35394ef5
- (void)clearAutocorrectPromptTimer;	// 0x35381ed1
- (void)clearChangeTimeAndCount;	// 0x353f1351
- (void)clearDelegate;	// 0x35394eb9
- (void)clearEmojiLayout;	// 0x3552bc0d
- (void)clearInput;	// 0x353813e5
- (void)clearKeyAreas;	// 0x353fd4cd
- (void)clearLanguageIndicator;	// 0x35526f1d
- (void)clearLayouts;	// 0x35384939
- (void)clearLongPressTimer;	// 0x35394fcd
- (void)clearSelection;	// 0x3552b7c9
- (void)clearShiftState;	// 0x35422fcd
- (void)clearTimers;	// 0x35394f41
- (void)clearTransientState;	// 0x353f15d1
- (id)clientOverrideForKey:(id)key;	// 0x35526825
- (id)clientVariantDelegate;	// 0x353f1841
- (id)clientVariantsForKey:(id)key;	// 0x355267cd
// declared property getter: - (BOOL)committingCandidate;	// 0x3552b935
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x354a7e51
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x353f2d3d
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x354276c1
- (float)currentLandscapeHeight;	// 0x35525b8d
- (float)currentLandscapeWidth;	// 0x35525a99
- (float)currentPortraitHeight;	// 0x353fe441
- (float)currentPortraitWidth;	// 0x353fe34d
// declared property getter: - (id)currentUsedInputMode;	// 0x35421ae9
- (void)dealloc;	// 0x35395299
- (void)defaultsDidChange;	// 0x35525e55
- (void)delayedInit;	// 0x3538f7e9
// declared property getter: - (id)delegate;	// 0x3537ce65
// declared property getter: - (id)delegateAsResponder;	// 0x35527921
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x353f1601
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x3552a065
- (BOOL)delegateSupportsCorrectionUI;	// 0x35469e31
- (void)deleteBackward;	// 0x355281d5
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x354a2219
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x3552815d
- (void)deleteFromInput;	// 0x354a1731
- (void)detach;	// 0x353950c9
- (void)dismissKeyboard;	// 0x3552adf5
- (BOOL)displaysCandidates;	// 0x35413c2d
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x3537de8d
- (void)enable;	// 0x355279d1
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x355271e1
- (void)fadeAutocorrectPrompt;	// 0x35529ddd
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x3552bd95
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x3552ab01
- (BOOL)flushKeyplaneName:(id)name;	// 0x3542777d
- (void)forceShiftUpdate;	// 0x354a6479
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x3541517d
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x355261a1
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x3552a4d9
- (void)generateCandidates;	// 0x35401d99
- (void)generateCandidatesWithOptions:(int)options;	// 0x35401dad
- (void)geometryChangeDone:(BOOL)done;	// 0x35401c75
// declared property getter: - (id)geometryDelegate;	// 0x353f1331
// declared property getter: - (BOOL)geometryIsChanging;	// 0x3552b955
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x3552a5a1
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x3552a5d1
- (void)handleDelete;	// 0x354a1655
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x354a1669
- (void)handleDeleteWithNonZeroInputCount;	// 0x354a1f91
- (void)handleDeleteWithZeroInputCount;	// 0x355285a9
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x3541fae5
- (void)handleKeyEvent:(GSEventRef)event;	// 0x3541f24d
- (void)handleObserverCallback;	// 0x35413c95
- (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x3552afad
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x35420a3d
- (void)hardwareAutoRepeat:(id)repeat;	// 0x3552aae1
- (void)hardwareKeyboardAvailabilityChanged;	// 0x3552aa69
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x35526e79
- (BOOL)hasAutoRepeat;	// 0x3552ba15
- (BOOL)hasEditableMarkedText;	// 0x353f2b81
- (BOOL)hasMarkedText;	// 0x353814d5
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x35526729
- (void)hideKeyboard;	// 0x3552ab95
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x354144e9
// declared property getter: - (id)inputDelegate;	// 0x35381505
// declared property getter: - (id)inputManager;	// 0x35383b5d
- (id)inputModeFirstPreference;	// 0x35526a4d
// converted property getter: - (id)inputModeLastChosen;	// 0x35527579
- (id)inputModeLastChosenPreference;	// 0x35526a9d
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x35526c09
- (id)inputModeLastUsedPreference;	// 0x35380d35
- (id)inputModePreference;	// 0x3537dee9
- (id)inputOverlayContainer;	// 0x354a7bd5
- (void)insertText:(id)text;	// 0x3544645d
- (void)installRecorder;	// 0x35384a29
- (void)installTypology;	// 0x35384ae1
- (BOOL)isAllowedInputMode:(id)mode;	// 0x35380dc1
- (BOOL)isAutoDeleteActive;	// 0x3552bb49
- (BOOL)isAutoFillMode;	// 0x354aa5d5
- (BOOL)isAutoShifted;	// 0x353f64f1
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x353fadd1
- (BOOL)isDesiredInputMode:(id)mode;	// 0x353f2461
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x35382051
// converted property getter: - (BOOL)isLongPress;	// 0x354452e9
- (BOOL)isMinimized;	// 0x35383bb5
// converted property getter: - (BOOL)isShiftLocked;	// 0x353fb92d
- (BOOL)isShifted;	// 0x35413f01
- (BOOL)isUsingDictationLayout;	// 0x3552939d
- (BOOL)isValidKeyInput:(id)input;	// 0x35420945
- (void)keyActivated;	// 0x35528149
- (void)keyDeactivated;	// 0x35528159
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x35415e0d
- (BOOL)keySlidIntoSwipe;	// 0x35467d61
// declared property getter: - (id)keyboardAlertView;	// 0x3552b901
- (BOOL)keyboardDrawsOpaque;	// 0x353f0f45
- (BOOL)keyboardRecordingEnabled;	// 0x35384a69
- (BOOL)keyboardsExpandedPreference;	// 0x35526939
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x355268c9
// declared property getter: - (id)lastUsedInputMode;	// 0x3552b8e1
- (void)launchTypologyApplication;	// 0x3552bbe5
- (void)layoutHasChanged;	// 0x355279c1
// declared property getter: - (id)legacyInputDelegate;	// 0x35380ea5
- (void)longPressAction;	// 0x3552a9c1
// converted property getter: - (id)markedTextOverlay;	// 0x35527ba9
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x3552a601
- (void)mediaKeyDown:(GSEventRef)down;	// 0x3552b679
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x35526265
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x35528435
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x355292bd
- (BOOL)noContent;	// 0x35445021
- (void)notifyShiftState;	// 0x353f3685
// converted property getter: - (int)orientation;	// 0x35403959
- (void)performClientVariantActionNamed:(id)named;	// 0x3552687d
- (BOOL)performanceLoggingPreference;	// 0x3538f8dd
// converted property getter: - (unsigned)phraseBoundary;	// 0x35528415
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x35403635
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x354145d5
- (void)postEmptyDelegateNotificationIfNeeded;	// 0x35421af9
- (void)prepareForGeometryChange;	// 0x353feb95
- (void)prepareForSelectionChange;	// 0x35409755
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x35527621
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x353f1931
// declared property getter: - (id)privateInputDelegate;	// 0x3537ce41
- (void)recomputeActiveInputModes;	// 0x35528019
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x353f2121
// declared property getter: - (id)recorder;	// 0x35384929
- (void)refreshRivenPreferences;	// 0x3537da9d
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x353fd7e9
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x353f5f95
- (void)releaseSuppressUpdateCandidateView;	// 0x35401c11
- (void)removeAutocorrectPrompt;	// 0x35381dad
- (void)removeAutocorrection;	// 0x35528899
- (void)removeFromSuperview;	// 0x3539501d
- (void)replaceText:(id)text;	// 0x35528fa9
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x355293e5
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x353f6ca9
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x353f5fe1
- (id)returnKeyDisplayName;	// 0x353fd9c9
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x353fd9ad
- (int)returnKeyType;	// 0x353fda3d
// declared property getter: - (BOOL)rivenSplitLock;	// 0x355261d5
- (void)saveInputModesPreference:(id)preference;	// 0x35526a15
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x35529191
- (id)searchStringForMarkedText;	// 0x35527c1d
- (void)selectionDidChange:(id)selection;	// 0x3540a359
- (id)selectionView;	// 0x3552bce1
- (void)selectionWillChange:(id)selection;	// 0x35409715
- (void)setAnotherTouchWaiting:(BOOL)waiting;	// 0x3552aa01
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x3540a481
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x3538419d
- (void)setAutocorrection:(id)autocorrection;	// 0x35381529
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x355269a1
- (void)setCandidates:(id)candidates;	// 0x353816d9
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x353f2ef1
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x353f2f59
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x35527b09
- (void)setChanged;	// 0x3541373d
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x35395511
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x3552b945
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x35395559
- (void)setDefaultTextInputTraits:(id)traits;	// 0x353fea79
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x35328dc5
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x35328dd9
- (void)setFrame:(CGRect)frame;	// 0x3537cbc9
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x353f0f95
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x3552b965
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x35526eb1
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x3541f9cd
- (void)setInitialDirection;	// 0x353f2fc1
// declared property setter: - (void)setInputManager:(id)manager;	// 0x35383b39
- (void)setInputMode:(id)mode;	// 0x35380ed9
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x35380eed
- (void)setInputModeFromPreferences;	// 0x35380c71
- (void)setInputModeLastChosenPreference;	// 0x35526af9
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x3552752d
- (void)setInputModeToNextInPreferredList;	// 0x35527405
- (void)setInputObject:(id)object;	// 0x35528d5d
- (void)setInputPoint:(CGPoint)point;	// 0x35416ad1
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x3552b911
- (void)setLastUsedInputMode;	// 0x35421a8d
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x35395535
- (void)setLearnsCorrections:(int)corrections;	// 0x35527815
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x3552bcd1
- (void)setMarkedText;	// 0x35527b19
- (void)setOrientationForSize:(CGSize)size;	// 0x3537cc31
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x3552838d
- (void)setPreviousInputString:(id)string;	// 0x3541348d
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x35395235
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x353f1751
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x35526209
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x35527c55
- (void)setShift:(BOOL)shift;	// 0x35413555
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x35413569
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x354b1581
- (void)setShiftLockedForced:(BOOL)forced;	// 0x35528065
- (void)setShiftNeedsUpdate;	// 0x35413671
- (void)setShiftOffIfNeeded;	// 0x354134cd
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x3541371d
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x353f171d
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x3552b8d1
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x353f4029
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x35526e69
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x3552b8b1
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x35384e71
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x35384cad
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x3552bd39
- (void)setSplitProgress:(float)progress;	// 0x35526269
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x35395275
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x353f6951
- (unsigned)shiftFlagsForInputString;	// 0x35446325
- (BOOL)shiftLockPreference;	// 0x3537dc65
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x354b16cd
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x3552a669
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x354a244d
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x3552b8c1
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x35384d69
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x35445e11
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x3552b87d
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x353f2555
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x3552729d
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x3552b8a1
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x355273f1
- (void)showKeyboard;	// 0x3552ac41
- (void)showNextCandidates;	// 0x35528cb5
// declared property getter: - (BOOL)showsCandidateBar;	// 0x3538504d
// declared property getter: - (BOOL)showsCandidateInline;	// 0x3552b8f1
- (id)sortingMethods;	// 0x3552a54d
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x35389661
- (void)startAutoDeleteTimer;	// 0x354a24c1
- (void)startCaretBlinkIfNeeded;	// 0x3552b6fd
- (void)startKeyboardRecording;	// 0x355f990d
- (void)stopAutoDelete;	// 0x353f14e1
- (void)stopKeyboardRecording;	// 0x355f9a19
- (void)storeDelegateConformance;	// 0x353f1375
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x353efe11
- (BOOL)suppliesCompletions;	// 0x35528099
- (BOOL)supportsNumberKeySelection;	// 0x35528125
- (BOOL)swipeToTabPreference;	// 0x353f3fe5
- (void)takeTextInputTraitsFromDelegate;	// 0x3537ccd1
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x3552bb25
- (void)textChanged:(id)changed;	// 0x354131fd
- (void)textDidChange:(id)text;	// 0x354131ed
- (void)textFrameChanged:(id)changed;	// 0x355279e5
- (int)textInputChangingCount;	// 0x3552bb15
- (id)textInputTraits;	// 0x35386469
- (void)textWillChange:(id)text;	// 0x35413145
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x35416c71
- (void)timeMark:(unsigned)mark;	// 0x35416ae5
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x354169f1
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x3552a575
- (void)toggleShift;	// 0x3552803d
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x354a2535
- (void)touchAutocorrectPromptTimer;	// 0x353fcfe1
- (void)touchLongPressTimer;	// 0x354168dd
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x354168f5
- (BOOL)typologyEnabled;	// 0x35384c11
// declared property getter: - (id)typologyRecorder;	// 0x35383b6d
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x3538198d
- (void)updateAutocorrectPromptAction;	// 0x354034d5
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x354ab235
- (void)updateCandidateDisplay;	// 0x35381819
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x355291f9
- (void)updateChangeTimeAndIncrementCount;	// 0x3544623d
- (void)updateForChangedSelection;	// 0x353f25a1
- (void)updateFromTextInputTraits;	// 0x3552ba29
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x35527cbd
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x355271cd
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x35526f65
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x3541f959
- (void)updateKeysWithDelegates;	// 0x353fe519
- (void)updateLayout;	// 0x35383bf1
- (void)updateLayoutAndSetShift;	// 0x35528579
- (void)updateLayoutIfNeeded;	// 0x353fecd1
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x355276d5
- (void)updateObserverState;	// 0x35413691
- (void)updateReturnKey;	// 0x35447855
- (void)updateReturnKey:(BOOL)key;	// 0x353fd869
- (void)updateShiftState;	// 0x353f3275
- (void)updateTextCandidateView;	// 0x355295e1
@end

