/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import <DOMNode.h> // Unknown library
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"
#import "UIWebSelectionBlock.h"

@class UITextSelectionView, UITextInteractionAssistant, UIResponder, UIColor, UIImage, UITextRange, NSDictionary, UITextPosition, UIView;
@protocol UITextSelectingContent, UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x3552172d
- (id)createPickerCell;	// 0x35521735
- (id)createSelectedItem;	// 0x35521731
- (id)itemTitle;	// 0x3552173d
- (void)populateCell:(id)cell;	// 0x35521739
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x35535fa1
- (id)urlScheme;	// 0x35535ff9
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x35542e11
- (BOOL)isSecure;	// 0x35542f2d
- (BOOL)isTextControl;	// 0x35542f29
- (int)keyboardType;	// 0x35542f31
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x35544c55; S=0x35544c59; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x35544e8d; 
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x35544c45; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x35544609; S=0x3554460d; 
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x35544c4d; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x35544c51; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x35544ec5; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x35544621; S=0x35544625; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x35545919; S=0x35545971; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x35544c49; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x35543765; S=0x355433f9; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x35545525; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x35545ab1; S=0x35545ab5; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x35544619; S=0x3554461d; 
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x35544cbd; S=0x35544e19; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x35545e89; S=0x35545ee1; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x35544bc5; 
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x3554433d; S=0x355442ad; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextSelection> *textDocument;	// G=0x35545ee5; 
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x35544611; S=0x35544615; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x35544601; S=0x35544605; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x35543151; S=0x35543155; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x35545915; 
- (CGRect)_lastRectForRange:(id)range;	// 0x35545235
- (NSRange)_markedTextNSRange;	// 0x35543df1
- (id)_textSelectingContainer;	// 0x35544c65
- (void)acceptedAutoFillWord:(id)word;	// 0x35544ab1
- (id)automaticallySelectedOverlay;	// 0x35544629
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x35545cc5
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x35544c55
- (void)beginSelectionChange;	// 0x35544b65
// declared property getter: - (id)beginningOfDocument;	// 0x35544e8d
- (CGRect)caretRect;	// 0x35544455
- (CGRect)caretRectForPosition:(id)position;	// 0x355459cd
- (unsigned short)characterAfterCaretSelection;	// 0x35543aa1
- (unsigned short)characterBeforeCaretSelection;	// 0x355433b9
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x35543375
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x35545b79
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x35545c59
- (id)closestPositionToPoint:(CGPoint)point;	// 0x35545ab9
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x35545b19
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x3554563d
- (void)confirmMarkedText:(id)text;	// 0x35543561
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x35544a81
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x355441b1
// declared property getter: - (id)content;	// 0x35544c45
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x35544609
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x3554456d
- (id)delegate;	// 0x35543105
- (void)deleteBackward;	// 0x35543159
- (void)detachInteractionAssistant;	// 0x35544c5d
- (void)detachSelectionView;	// 0x35544c61
- (BOOL)editable;	// 0x35545e81
- (BOOL)editing;	// 0x35545e85
// declared property getter: - (id)endOfDocument;	// 0x35544ec5
- (void)endSelectionChange;	// 0x35544b95
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x35543d55
- (void)extendCurrentSelection:(int)selection;	// 0x35543fc9
- (CGRect)firstRectForRange:(id)range;	// 0x3554511d
- (id)fontForCaretSelection;	// 0x35543ae1
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x35543331
- (void)handleKeyWebEvent:(id)event;	// 0x3554310d
- (BOOL)hasContent;	// 0x35542f61
- (BOOL)hasSelection;	// 0x35544059
- (BOOL)hasText;	// 0x35545625
// converted property getter: - (int)initialSelectionBehavior;	// 0x35544621
// declared property getter: - (id)inputDelegate;	// 0x35545919
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x35543281
- (id)insertDictationResultPlaceholder;	// 0x355432d9
- (void)insertText:(id)text;	// 0x355431c9
// declared property getter: - (id)interactionAssistant;	// 0x35544c49
- (BOOL)isAutoFillMode;	// 0x35544b0d
// declared property getter: - (BOOL)isEditable;	// 0x35544c4d
// declared property getter: - (BOOL)isEditing;	// 0x35544c51
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3554577d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x35545831
- (BOOL)isShowingPlaceholder;	// 0x355445fd
// converted property getter: - (id)markedText;	// 0x35543765
// declared property getter: - (id)markedTextRange;	// 0x35545525
// declared property getter: - (id)markedTextStyle;	// 0x35545ab1
- (id)metadataDictionariesForDictationResults;	// 0x355432b1
- (void)moveBackward:(unsigned)backward;	// 0x35544109
- (void)moveDown;	// 0x355454b1
- (void)moveForward:(unsigned)forward;	// 0x3554410d
- (void)moveLeft;	// 0x355453c9
- (void)moveRight;	// 0x35545355
- (void)moveUp;	// 0x3554543d
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x35543c91
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x35545679
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x3554571d
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x355456b5
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x355457c5
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x35545be9
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x35543c65
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x35543f8d
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x35543f51
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x35545879
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x35544fe9
- (CGRect)rectContainingCaretSelection;	// 0x35543be1
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x35543651
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x35543701
- (id)rectsForRange:(id)range;	// 0x35545ccd
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x35543301
- (void)replaceCurrentWordWithText:(id)text;	// 0x355438bd
- (void)replaceRange:(id)range withText:(id)text;	// 0x35545035
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x355437d9
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x35543989
- (BOOL)requiresKeyEvents;	// 0x35543109
// declared property getter: - (int)returnKeyType;	// 0x35544619
- (void)selectAll;	// 0x35544111
- (id)selectedDOMRange;	// 0x35543ea1
// declared property getter: - (id)selectedTextRange;	// 0x35544cbd
// declared property getter: - (int)selectionAffinity;	// 0x35545e89
- (BOOL)selectionAtDocumentStart;	// 0x35544099
- (BOOL)selectionAtWordStart;	// 0x355440d1
- (CGRect)selectionClipRect;	// 0x35544c21
- (NSRange)selectionRange;	// 0x35543e55
- (int)selectionState;	// 0x35544171
// declared property getter: - (id)selectionView;	// 0x35544bc5
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x35545cc9
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x35544c59
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x3554460d
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x35544625
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x35545971
// converted property setter: - (void)setMarkedText:(id)text;	// 0x355433f9
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x355434a9
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x35545ab5
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x3554461d
- (void)setSecure:(BOOL)secure;	// 0x35543101
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x35543ed9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x35544e19
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x35544d2d
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x35545ee1
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x35544431
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x3554438d
// converted property setter: - (void)setText:(id)text;	// 0x355442ad
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x35544615
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x35544605
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x35543155
- (void)setupPlaceholderTextIfNeeded;	// 0x35542fa1
- (void)takeTraitsFrom:(id)from;	// 0x35542f35
// converted property getter: - (id)text;	// 0x3554433d
- (id)textColorForCaretSelection;	// 0x35543bc5
// declared property getter: - (id)textDocument;	// 0x35545ee5
- (id)textInRange:(id)range;	// 0x35544efd
- (id)textInputTraits;	// 0x35542fa5
// declared property getter: - (int)textLoupeVisibility;	// 0x35544611
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x35544f51
// declared property getter: - (id)textSuggestionDelegate;	// 0x35544601
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x35543151
// declared property getter: - (id)tokenizer;	// 0x35545915
- (id)uiWebDocumentView;	// 0x35543239
- (void)unmarkText;	// 0x355455a1
- (void)updateAutoscroll:(id)autoscroll;	// 0x35544671
- (void)updateSelection;	// 0x35544c1d
- (id)wordContainingCaretSelection;	// 0x35543cfd
- (int)wordOffsetInRange:(id)range;	// 0x35543db5
- (id)wordRangeContainingCaretSelection;	// 0x35543cbd
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x355bf459
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x3545cb6d
- (BOOL)isLikelyToBeginPageLoad;	// 0x355bf5f9
- (BOOL)nodeCanBecomeFirstResponder;	// 0x355bf5fd
- (BOOL)showsTapHighlight;	// 0x3545ca85
- (id)tapHighlightColor;	// 0x355bf5b5
- (BOOL)touchCalloutEnabled;	// 0x355bf5f5
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x355ea825
- (id)asDomRange;	// 0x355ea829
- (id)asElement;	// 0x355ea541
- (CGRect)boundingRect;	// 0x3545aeb9
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x355eab09
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x3545ae05
- (BOOL)containsBlock:(id)block;	// 0x355ea67d
- (BOOL)containsNode:(id)node;	// 0x355ea4b1
- (BOOL)containsRange:(id)range;	// 0x355ea8f9
- (id)enclosingDocument;	// 0x355eab75
- (id)enclosingElementIncludingSelf;	// 0x355ea565
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x355ead81
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x355eab85
- (BOOL)hasCustomLineHeight;	// 0x355ea5f9
- (BOOL)isSameBlock:(id)block;	// 0x355ea62d
- (id)largerParent;	// 0x355ea72d
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x355eae1d
- (id)parentBlock;	// 0x355ea599
- (id)rangeOfContents;	// 0x355ea9f1
- (BOOL)rendersAsBlock;	// 0x355ea80d
- (BOOL)selectable;	// 0x355ea5a9
- (BOOL)strictlyContainsBlock:(id)block;	// 0x355ea6e9
- (BOOL)strictlyContainsNode:(id)node;	// 0x355ea4fd
- (id)webFrame;	// 0x3545aff5
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x355fd7f5
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x356350d9
- (id)_nextAssistedNode;	// 0x356350dd
- (id)_previousAssistedNode;	// 0x3563511d
- (BOOL)_requiresAccessoryView;	// 0x356350a1
- (BOOL)_requiresInputView;	// 0x356350b9
- (void)_startAssistingDocumentView:(id)view;	// 0x35635019
- (void)_stopAssistingDocumentView:(id)view;	// 0x3563504d
- (BOOL)_supportsAccessoryClear;	// 0x356350d5
- (BOOL)_supportsAutoFill;	// 0x356350d1
- (id)_textFormElement;	// 0x3563515d
@end

