/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UITextInputTraits.h"
#import "NSObject.h"
#import "UITextInputTraits_Private.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library
#import "UIKit-Structs.h"

@class UIColor, UIImage;

@protocol UITextInputTraits <NSObject>
@optional
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) int returnKeyType;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(assign, nonatomic) int spellCheckingType;
// declared property getter: - (int)autocapitalizationType;
// declared property getter: - (int)autocorrectionType;
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;
// declared property getter: - (BOOL)isSecureTextEntry;
// declared property getter: - (int)keyboardAppearance;
// declared property getter: - (int)keyboardType;
// declared property getter: - (int)returnKeyType;
// declared property setter: - (void)setAutocapitalizationType:(int)type;
// declared property setter: - (void)setAutocorrectionType:(int)type;
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;
// declared property setter: - (void)setKeyboardType:(int)type;
// declared property setter: - (void)setReturnKeyType:(int)type;
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;
// declared property setter: - (void)setSpellCheckingType:(int)type;
// declared property getter: - (int)spellCheckingType;
@end

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {
	int autocapitalizationType;	// 4 = 0x4
	int autocorrectionType;	// 8 = 0x8
	int spellCheckingType;	// 12 = 0xc
	unsigned keyboardType : 8;	// 16 = 0x10
	unsigned keyboardAppearance : 8;	// 17 = 0x11
	int returnKeyType;	// 20 = 0x14
	BOOL enablesReturnKeyAutomatically;	// 24 = 0x18
	BOOL secureTextEntry;	// 25 = 0x19
	CFCharacterSetRef textTrimmingSet;	// 28 = 0x1c
	UIColor *insertionPointColor;	// 32 = 0x20
	UIColor *selectionBarColor;	// 36 = 0x24
	UIColor *selectionHighlightColor;	// 40 = 0x28
	UIImage *selectionDragDotImage;	// 44 = 0x2c
	unsigned insertionPointWidth;	// 48 = 0x30
	int textLoupeVisibility;	// 52 = 0x34
	int textSelectionBehavior;	// 56 = 0x38
	id textSuggestionDelegate;	// 60 = 0x3c
	BOOL contentsIsSingleValue;	// 64 = 0x40
	BOOL acceptsEmoji;	// 65 = 0x41
	BOOL returnKeyGoesToNextResponder;	// 66 = 0x42
	BOOL acceptsFloatingKeyboard;	// 67 = 0x43
	BOOL acceptsSplitKeyboard;	// 68 = 0x44
	BOOL richText;	// 69 = 0x45
	BOOL displaySecureTextUsingPlainText;	// 70 = 0x46
	BOOL learnsCorrections;	// 71 = 0x47
	int emptyContentReturnKeyType;	// 72 = 0x48
	int shortcutConversionType;	// 76 = 0x4c
	BOOL suppressReturnKeyStyling;	// 80 = 0x50
	BOOL forceEnableDictation;	// 81 = 0x51
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x3537d9fd; S=0x35393c59; @synthesize
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;	// G=0x3537da2d; S=0x35577cfd; @synthesize
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;	// G=0x3537da3d; S=0x35577d0d; @synthesize
@property(assign, nonatomic) int autocapitalizationType;	// G=0x3537d8d1; S=0x35391951; @synthesize
@property(assign, nonatomic) int autocorrectionType;	// G=0x3537d8e1; S=0x35354449; @synthesize
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x3537d9ed; S=0x35432b1d; @synthesize
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;	// G=0x3537da5d; S=0x35577d1d; @synthesize
@property(assign, nonatomic) int emptyContentReturnKeyType;	// G=0x3537da1d; S=0x35577cdd; @synthesize
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// G=0x3537d931; S=0x3535400d; @synthesize
@property(assign, nonatomic) BOOL forceEnableDictation;	// G=0x35577d4d; S=0x35577d5d; @synthesize
@property(retain, nonatomic) UIColor *insertionPointColor;	// G=0x3537d96d; S=0x35350d7d; @synthesize
@property(assign, nonatomic) unsigned insertionPointWidth;	// G=0x3537d9ad; S=0x35577ccd; @synthesize
@property(assign, nonatomic) int keyboardAppearance;	// G=0x3537d911; S=0x35577cbd; @synthesize
@property(assign, nonatomic) int keyboardType;	// G=0x3537d901; S=0x35391971; @synthesize
@property(assign, nonatomic) BOOL learnsCorrections;	// G=0x3537da6d; S=0x35577d2d; @synthesize
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;	// G=0x3537da0d; S=0x35577ced; @synthesize
@property(assign, nonatomic) int returnKeyType;	// G=0x3537d921; S=0x35353ffd; @synthesize
@property(assign, nonatomic, getter=isRichText) BOOL richText;	// G=0x3537da4d; S=0x3546661d; @synthesize
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// G=0x35322f0d; S=0x355772c5; @synthesize
@property(retain, nonatomic) UIColor *selectionBarColor;	// G=0x3537d97d; S=0x35350da1; @synthesize
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// G=0x3537d99d; S=0x35350eb1; @synthesize
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// G=0x3537d98d; S=0x35350e8d; @synthesize
@property(assign, nonatomic) int shortcutConversionType;	// G=0x3537da7d; S=0x35577d3d; @synthesize
@property(assign, nonatomic) int spellCheckingType;	// G=0x3537d8f1; S=0x35391961; @synthesize
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;	// G=0x3537da8d; S=0x3547d8c5; @synthesize
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x3537d9bd; S=0x353cfe8d; @synthesize
@property(assign, nonatomic) int textSelectionBehavior;	// G=0x3537d9cd; S=0x353ee4b1; @synthesize
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x3537d9dd; S=0x35432b2d; @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x35322d15; S=0x3537d941; @dynamic
+ (id)defaultTextInputTraits;	// 0x3545e611
+ (BOOL)keyboardTypeRequiresASCIICapable:(int)capable;	// 0x353f24e1
+ (id)traitsByAdoptingTraits:(id)traits;	// 0x353f16bd
- (id)init;	// 0x35350a61
// declared property getter: - (BOOL)acceptsEmoji;	// 0x3537d9fd
// declared property getter: - (BOOL)acceptsFloatingKeyboard;	// 0x3537da2d
// declared property getter: - (BOOL)acceptsSplitKeyboard;	// 0x3537da3d
// declared property getter: - (int)autocapitalizationType;	// 0x3537d8d1
// declared property getter: - (int)autocorrectionType;	// 0x3537d8e1
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x3537d9ed
- (id)copyWithZone:(NSZone *)zone;	// 0x3537ce75
- (void)dealloc;	// 0x3538f755
- (id)description;	// 0x355772f1
- (id)dictionaryRepresentation;	// 0x35577061
// declared property getter: - (BOOL)displaySecureTextUsingPlainText;	// 0x3537da5d
// declared property getter: - (int)emptyContentReturnKeyType;	// 0x3537da1d
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;	// 0x3537d931
// declared property getter: - (BOOL)forceEnableDictation;	// 0x35577d4d
// declared property getter: - (id)insertionPointColor;	// 0x3537d96d
// declared property getter: - (unsigned)insertionPointWidth;	// 0x3537d9ad
- (BOOL)isEqual:(id)equal;	// 0x355778b9
// declared property getter: - (BOOL)isRichText;	// 0x3537da4d
// declared property getter: - (BOOL)isSecureTextEntry;	// 0x35322f0d
// declared property getter: - (int)keyboardAppearance;	// 0x3537d911
// declared property getter: - (int)keyboardType;	// 0x3537d901
// declared property getter: - (BOOL)learnsCorrections;	// 0x3537da6d
// declared property getter: - (BOOL)returnKeyGoesToNextResponder;	// 0x3537da0d
// declared property getter: - (int)returnKeyType;	// 0x3537d921
// declared property getter: - (id)selectionBarColor;	// 0x3537d97d
// declared property getter: - (id)selectionDragDotImage;	// 0x3537d99d
// declared property getter: - (id)selectionHighlightColor;	// 0x3537d98d
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x35393c59
// declared property setter: - (void)setAcceptsFloatingKeyboard:(BOOL)keyboard;	// 0x35577cfd
// declared property setter: - (void)setAcceptsSplitKeyboard:(BOOL)keyboard;	// 0x35577d0d
// declared property setter: - (void)setAutocapitalizationType:(int)type;	// 0x35391951
// declared property setter: - (void)setAutocorrectionType:(int)type;	// 0x35354449
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x35432b1d
// declared property setter: - (void)setDisplaySecureTextUsingPlainText:(BOOL)text;	// 0x35577d1d
// declared property setter: - (void)setEmptyContentReturnKeyType:(int)type;	// 0x35577cdd
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;	// 0x3535400d
// declared property setter: - (void)setForceEnableDictation:(BOOL)dictation;	// 0x35577d5d
// declared property setter: - (void)setInsertionPointColor:(id)color;	// 0x35350d7d
// declared property setter: - (void)setInsertionPointWidth:(unsigned)width;	// 0x35577ccd
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;	// 0x35577cbd
// declared property setter: - (void)setKeyboardType:(int)type;	// 0x35391971
// declared property setter: - (void)setLearnsCorrections:(BOOL)corrections;	// 0x35577d2d
// declared property setter: - (void)setReturnKeyGoesToNextResponder:(BOOL)nextResponder;	// 0x35577ced
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x35353ffd
// declared property setter: - (void)setRichText:(BOOL)text;	// 0x3546661d
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;	// 0x355772c5
// declared property setter: - (void)setSelectionBarColor:(id)color;	// 0x35350da1
// declared property setter: - (void)setSelectionDragDotImage:(id)image;	// 0x35350eb1
// declared property setter: - (void)setSelectionHighlightColor:(id)color;	// 0x35350e8d
// declared property setter: - (void)setShortcutConversionType:(int)type;	// 0x35577d3d
// declared property setter: - (void)setSpellCheckingType:(int)type;	// 0x35391961
// declared property setter: - (void)setSuppressReturnKeyStyling:(BOOL)styling;	// 0x3547d8c5
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x353cfe8d
// declared property setter: - (void)setTextSelectionBehavior:(int)behavior;	// 0x353ee4b1
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x35432b2d
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x3537d941
- (void)setToDefaultValues;	// 0x35350aa9
- (void)setToSecureValues;	// 0x35576fc1
// declared property getter: - (int)shortcutConversionType;	// 0x3537da7d
// declared property getter: - (int)spellCheckingType;	// 0x3537d8f1
// declared property getter: - (BOOL)suppressReturnKeyStyling;	// 0x3537da8d
- (void)takeTraitsFrom:(id)from;	// 0x3537cec1
// declared property getter: - (int)textLoupeVisibility;	// 0x3537d9bd
// declared property getter: - (int)textSelectionBehavior;	// 0x3537d9cd
// declared property getter: - (id)textSuggestionDelegate;	// 0x3537d9dd
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x35322d15
@end

