/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x33703971; S=0x33676c89; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x33703b0d; S=0x336978cd; converted property
@property(retain) id currencyCode;	// G=0x33704c6d; S=0x33704d2d; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x33703bc1; S=0x33703c81; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x33706701; S=0x337067c1; converted property
@property(retain) id currencySymbol;	// G=0x33704dc9; S=0x33704e89; converted property
@property(retain) id decimalSeparator;	// G=0x337039b1; S=0x33703a71; converted property
@property(retain) id exponentSymbol;	// G=0x337055f1; S=0x337056b1; converted property
@property(assign) unsigned formatWidth;	// G=0x33705981; S=0x33705a5d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x3370339d; S=0x336976e1; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x33703355; S=0x3368669d; converted property
@property(retain) id groupingSeparator;	// G=0x33703dd1; S=0x33703e91; converted property
@property(assign) unsigned groupingSize;	// G=0x3370574d; S=0x336920fd; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x33704f25; S=0x33704fe5; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x3370685d; S=0x3370691d; converted property
@property(retain) id locale;	// G=0x337032e5; S=0x33686631; converted property
@property(retain) id maximum;	// G=0x33706645; S=0x3370666d; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x337064ad; S=0x3368c849; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x33706279; S=0x33706355; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x33706c35; S=0x33706d11; converted property
@property(retain) id minimum;	// G=0x33706589; S=0x337065b1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x337063d1; S=0x3369794d; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x3370619d; S=0x336979c9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x33706add; S=0x33706bb9; converted property
@property(retain) id minusSign;	// G=0x33705339; S=0x337053f9; converted property
@property(retain) id multiplier;	// G=0x33705ad9; S=0x33705b99; converted property
@property(retain) id negativeFormat;	// G=0x337033dd; S=0x33703495; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x3370459d; S=0x33676c31; converted property
@property(retain) id negativePrefix;	// G=0x337049b5; S=0x33704a75; converted property
@property(retain) id negativeSuffix;	// G=0x33704b11; S=0x33704bd1; converted property
@property(retain) id nilSymbol;	// G=0x337040a5; S=0x33676b81; converted property
@property(retain) id notANumberSymbol;	// G=0x33704205; S=0x337042c5; converted property
@property(assign) unsigned numberStyle;	// G=0x33703265; S=0x3367bf51; converted property
@property(retain) id paddingCharacter;	// G=0x33705c35; S=0x33705cf5; converted property
@property(assign) unsigned paddingPosition;	// G=0x33705d91; S=0x33705e6d; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x33706d8d; S=0x33706dd5; converted property
@property(retain) id perMillSymbol;	// G=0x337051dd; S=0x3370529d; converted property
@property(retain) id percentSymbol;	// G=0x33705081; S=0x33705141; converted property
@property(retain) id plusSign;	// G=0x33705495; S=0x33705555; converted property
@property(retain) id positiveFormat;	// G=0x337036cd; S=0x33703769; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x3370443d; S=0x33676bd9; converted property
@property(retain) id positivePrefix;	// G=0x337046fd; S=0x337047bd; converted property
@property(retain) id positiveSuffix;	// G=0x33704859; S=0x33704919; converted property
@property(retain) id roundingIncrement;	// G=0x33706041; S=0x33706101; converted property
@property(assign) unsigned roundingMode;	// G=0x33705ee9; S=0x33705fc5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x33705829; S=0x33705905; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x33704621; S=0x337046a5; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x337035f1; S=0x33703675; converted property
@property(retain) id textAttributesForNil;	// G=0x33704129; S=0x337041ad; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x33704361; S=0x337043e5; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x337044c1; S=0x33704545; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x33703895; S=0x33703919; converted property
@property(retain) id textAttributesForZero;	// G=0x33703fc9; S=0x3370404d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x33703d1d; S=0x3367a331; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x3370699d; S=0x33706a5d; converted property
@property(retain) id zeroSymbol;	// G=0x3368f365; S=0x33703f2d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x33676b71
+ (void)initialize;	// 0x336767a1
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x33697ac1
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x336767cd
- (id)init;	// 0x336767e5
- (id)initWithCoder:(id)coder;	// 0x337027ad
- (void *)__Keynote_NOOP;	// 0x337024dd
- (void)_regenerateFormatter;	// 0x33676ce5
- (void)_reset;	// 0x337024e1
// converted property getter: - (BOOL)allowsFloats;	// 0x33703971
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x33703b0d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x3370294d
- (id)copyWithZone:(NSZone *)zone;	// 0x3370269d
// converted property getter: - (id)currencyCode;	// 0x33704c6d
// converted property getter: - (id)currencyDecimalSeparator;	// 0x33703bc1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x33706701
// converted property getter: - (id)currencySymbol;	// 0x33704dc9
- (void)dealloc;	// 0x33686771
// converted property getter: - (id)decimalSeparator;	// 0x337039b1
- (void)encodeWithCoder:(id)coder;	// 0x33702705
// converted property getter: - (id)exponentSymbol;	// 0x337055f1
- (void)finalize;	// 0x33702659
// converted property getter: - (unsigned)formatWidth;	// 0x33705981
// converted property getter: - (unsigned)formatterBehavior;	// 0x3370339d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x33703355
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x33702951
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x33703209
// converted property getter: - (id)groupingSeparator;	// 0x33703dd1
// converted property getter: - (unsigned)groupingSize;	// 0x3370574d
// converted property getter: - (id)internationalCurrencySymbol;	// 0x33704f25
// converted property getter: - (BOOL)isLenient;	// 0x3370685d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x33706d8d
// converted property getter: - (id)locale;	// 0x337032e5
// converted property getter: - (id)maximum;	// 0x33706645
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x337064ad
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x33706279
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x33706c35
// converted property getter: - (id)minimum;	// 0x33706589
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x337063d1
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x3370619d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x33706add
// converted property getter: - (id)minusSign;	// 0x33705339
// converted property getter: - (id)multiplier;	// 0x33705ad9
// converted property getter: - (id)negativeFormat;	// 0x337033dd
// converted property getter: - (id)negativeInfinitySymbol;	// 0x3370459d
// converted property getter: - (id)negativePrefix;	// 0x337049b5
// converted property getter: - (id)negativeSuffix;	// 0x33704b11
// converted property getter: - (id)nilSymbol;	// 0x337040a5
// converted property getter: - (id)notANumberSymbol;	// 0x33704205
- (id)numberFromString:(id)string;	// 0x33703229
// converted property getter: - (unsigned)numberStyle;	// 0x33703265
// converted property getter: - (id)paddingCharacter;	// 0x33705c35
// converted property getter: - (unsigned)paddingPosition;	// 0x33705d91
// converted property getter: - (id)perMillSymbol;	// 0x337051dd
// converted property getter: - (id)percentSymbol;	// 0x33705081
// converted property getter: - (id)plusSign;	// 0x33705495
// converted property getter: - (id)positiveFormat;	// 0x337036cd
// converted property getter: - (id)positiveInfinitySymbol;	// 0x3370443d
// converted property getter: - (id)positivePrefix;	// 0x337046fd
// converted property getter: - (id)positiveSuffix;	// 0x33704859
// converted property getter: - (id)roundingIncrement;	// 0x33706041
// converted property getter: - (unsigned)roundingMode;	// 0x33705ee9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x33705829
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x33676c89
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x336978cd
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x33704d2d
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x33703c81
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x337067c1
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x33704e89
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x33703a71
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x337056b1
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x33705a5d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x336976e1
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x3368669d
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x33703e91
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x336920fd
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x33704fe5
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x3370691d
// converted property setter: - (void)setLocale:(id)locale;	// 0x33686631
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x3370666d
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x3368c849
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x33706355
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x33706d11
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x337065b1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x3369794d
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x336979c9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x33706bb9
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x337053f9
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x33705b99
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x33703495
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x33676c31
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x33704a75
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x33704bd1
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x33676b81
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x337042c5
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3367bf51
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x33705cf5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x33705e6d
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x33706dd5
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x3370529d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x33705141
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x33705555
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x33703769
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x33676bd9
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x337047bd
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x33704919
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x33706101
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x33705fc5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x33705905
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x337046a5
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x33703675
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x337041ad
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x337043e5
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x33704545
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x33703919
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x3370404d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x3367a331
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x33706a5d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x33703f2d
- (id)stringForObjectValue:(id)objectValue;	// 0x3367a3d1
- (id)stringFromNumber:(id)number;	// 0x3367a3b1
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x33704621
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x337035f1
// converted property getter: - (id)textAttributesForNil;	// 0x33704129
// converted property getter: - (id)textAttributesForNotANumber;	// 0x33704361
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x337044c1
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x33703895
// converted property getter: - (id)textAttributesForZero;	// 0x33703fc9
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x33703d1d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x3370699d
// converted property getter: - (id)zeroSymbol;	// 0x3368f365
@end

