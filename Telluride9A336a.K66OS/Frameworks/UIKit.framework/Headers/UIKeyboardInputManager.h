/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x35357ce1; S=0x35357cd9; converted property
@property(assign) unsigned phraseBoundary;	// G=0x35357d09; S=0x35357d05; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x35357d15; S=0x351a5499; converted property
+ (id)activeInstance;	// 0x351aba95
+ (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x351aba5d
+ (void)clearAllCentroids;	// 0x351abed1
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x35357f0d
+ (void)endRegisteringKeyplane;	// 0x351ac215
+ (id)keyboardUserDirectory;	// 0x350e1fed
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x351ac191
+ (void)releaseSharedInstance;	// 0x35128c85
+ (void)removeAllDynamicDictionaries;	// 0x3535802d
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x35357f9d
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x35131cc9
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x350e1fb9
- (void)acceptInput;	// 0x35357cc9
- (BOOL)acceptInputString:(id)string;	// 0x351c52b9
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x35357cf5
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x35357df5
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x351f4b31
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x35357ca9
- (id)addInputObject:(id)object;	// 0x35358169
- (void)addToTypingHistory:(id)typingHistory;	// 0x35357ef1
- (void)appendToInputContext:(id)inputContext;	// 0x35357ccd
- (id)autocorrection;	// 0x35357cf9
- (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x351abaa5
- (BOOL)canHandleKeyHitTest;	// 0x35358201
- (BOOL)canUseGeometryKeyTouch;	// 0x351abead
- (void)candidateAccepted:(id)accepted;	// 0x35357ef9
- (id)candidates;	// 0x35357cfd
- (CFArrayRef)chargeableKeys;	// 0x35358161
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x35358165
- (void)clearAllCentroids;	// 0x35358251
- (void)clearDynamicDictionary;	// 0x35357f09
- (void)clearInput;	// 0x35357cc5
- (void)clearInputContext;	// 0x35357cd5
- (void)clearKeyAreas;	// 0x35358205
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x35357e15
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x35134689
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x35357e19
- (void)decreaseUserFrequency:(id)frequency;	// 0x35357f05
- (id)defaultCandidate;	// 0x35357d1d
- (unsigned)defaultCandidateIndex;	// 0x35357d21
- (id)deleteFromInput:(unsigned *)input;	// 0x35357cbd
- (void)deleteFromStrokeHistory:(BOOL)strokeHistory;	// 0x35358249
- (void)endRegisteringKeyplane;	// 0x351ac249
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x35357d85
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x35357d89
- (void)increaseUserFrequency:(id)frequency;	// 0x35357f01
- (unsigned)inputCount;	// 0x35357ce5
- (BOOL)inputEmpty;	// 0x35357ce9
// converted property getter: - (unsigned)inputIndex;	// 0x35357ce1
- (void)inputLocationChanged;	// 0x35357cf1
- (id)inputString;	// 0x35357ced
- (BOOL)isSentenceDelimiter:(unsigned short)delimiter;	// 0x35219599
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift;	// 0x3535820d
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x35358211
- (BOOL)keySlidIntoSwipe;	// 0x35358245
- (void)lastAcceptedCandidateCorrected;	// 0x35357efd
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x35357d8d
- (unsigned)maximumShortcutLengthAllowed;	// 0x3535825d
// converted property getter: - (unsigned)phraseBoundary;	// 0x35357d09
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x3535824d
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x35358209
- (id)remainingInput;	// 0x35357d01
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x35357cd1
- (id)searchStringForMarkedText;	// 0x35357d29
- (void)setAutoCorrects:(BOOL)corrects;	// 0x35357dfd
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x3535815d
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x35357e0d
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x35357e11
- (void)setInput:(id)input;	// 0x35357cb5
- (void)setInput:(id)input typedString:(id)string;	// 0x35357cb9
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x35357cd9
- (id)setInputObject:(id)object;	// 0x353581b5
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x35357e09
- (void)setKeyboardMatchType:(int)type;	// 0x35134589
- (void)setLearnsCorrection:(BOOL)correction;	// 0x35357eed
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x35357d05
- (void)setShallowPrediction:(BOOL)prediction;	// 0x35357e01
- (void)setShift:(BOOL)shift;	// 0x35357e05
- (void)setTypologyRecorder:(id)recorder;	// 0x35358255
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x351a5499
- (id)shadowTyping;	// 0x35358159
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x35358261
- (BOOL)shouldExtendPriorWord;	// 0x351d592d
- (BOOL)shouldShiftAfterChar:(unsigned short)aChar withSpaces:(int)spaces currentShift:(BOOL)shift;	// 0x351d5b81
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x35357d75
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x35357d79
- (id)sortingMethods;	// 0x35357d7d
- (BOOL)stringEndsWord:(id)word;	// 0x351f497d
- (id)stringForDoubleKey:(id)doubleKey;	// 0x35357d3d
- (BOOL)suppliesCompletions;	// 0x35357d35
- (BOOL)supportsNumberKeySelection;	// 0x35357df9
- (BOOL)supportsSetPhraseBoundary;	// 0x35357d11
- (BOOL)supportsShortcutConversion;	// 0x35358259
- (BOOL)suppressCompletionsForFieldEditor;	// 0x35357d39
- (BOOL)suppressesCandidateDisplay;	// 0x3521712d
- (void)textAccepted:(id)accepted;	// 0x35357ef5
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x35357d81
- (BOOL)usesAutoDeleteWord;	// 0x35357d19
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x35357d15
- (unsigned)wordHistoryDepth;	// 0x35357cdd
@end

