/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

#import "CoreFoundation-Structs.h"
#import "NSObject.h"
#import "NSCopying.h"
#import "NSCoding.h"


@interface NSCalendar : NSObject <NSCopying, NSCoding> {
}
@property(assign) unsigned firstWeekday;	// G=0x3079673d; S=0x30796719; converted property
@property(retain) id gregorianStartDate;	// G=0x307967ad; S=0x307967a9; converted property
@property(retain) id locale;	// G=0x307966ad; S=0x30796689; converted property
@property(assign) unsigned minimumDaysInFirstWeek;	// G=0x30796785; S=0x30796761; converted property
@property(retain) id timeZone;	// G=0x307966f5; S=0x307966d1; converted property
+ (id)allocWithZone:(NSZone *)zone;	// 0x30724419
+ (id)currentCalendar;	// 0x30726d9d
+ (void)initialize;	// 0x307243ed
- (id)init;	// 0x30796445
- (id)initWithCalendarIdentifier:(id)calendarIdentifier;	// 0x30796641
- (id)initWithCoder:(id)coder;	// 0x30796639
- (id)AMSymbol;	// 0x30796bfd
- (id)PMSymbol;	// 0x30796c81
- (unsigned char)_addComponents:(double *)components :(unsigned long)arg2 :(const char *)arg3 :(void *)arg4;	// 0x307979fd
- (unsigned long)_cfTypeID;	// 0x30796449
- (unsigned char)_composeAbsoluteTime:(double *)time :(const char *)arg2 :(void *)arg3;	// 0x307975bd
- (id)_copyLocale;	// 0x307968e1
- (id)_copyTimeZone;	// 0x30796909
- (unsigned char)_decomposeAbsoluteTime:(double)time :(const char *)arg2 :(void *)arg3;	// 0x3079778d
- (unsigned char)_diffComponents:(double)components :(double)arg2 :(unsigned long)arg3 :(const char *)arg4 :(void *)arg5;	// 0x30797bf9
- (id)_gregorianStartDate;	// 0x30796941
- (XXStruct_K5nmsA)_maximumRangeOfUnit:(unsigned)unit;	// 0x30797405
- (XXStruct_K5nmsA)_minimumRangeOfUnit:(unsigned)unit;	// 0x307973b9
- (long)_ordinalityOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forAT:(double)at;	// 0x307974cd
- (XXStruct_K5nmsA)_rangeOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forAT:(double)at;	// 0x30797451
- (unsigned char)_rangeOfUnit:(unsigned)unit startTime:(double *)time interval:(double *)interval forAT:(double)at;	// 0x30797521
- (void)_setGregorianStartDate:(id)date;	// 0x30796931
- (id)calendarIdentifier;	// 0x30796665
- (id)components:(unsigned)components fromDate:(id)date;	// 0x30796875
- (id)components:(unsigned)components fromDate:(id)date toDate:(id)date3 options:(unsigned)options;	// 0x307968bd
- (id)copyWithZone:(NSZone *)zone;	// 0x30796521
- (id)dateByAddingComponents:(id)components toDate:(id)date options:(unsigned)options;	// 0x30796899
- (id)dateFromComponents:(id)components;	// 0x30796851
- (void)encodeWithCoder:(id)coder;	// 0x3079663d
- (id)eraSymbols;	// 0x30796969
// converted property getter: - (unsigned)firstWeekday;	// 0x3079673d
// converted property getter: - (id)gregorianStartDate;	// 0x307967ad
- (unsigned)hash;	// 0x30796475
- (BOOL)isEqual:(id)equal;	// 0x3079649d
// converted property getter: - (id)locale;	// 0x307966ad
- (id)longEraSymbols;	// 0x30796d05
- (NSRange)maximumRangeOfUnit:(unsigned)unit;	// 0x307967d9
// converted property getter: - (unsigned)minimumDaysInFirstWeek;	// 0x30796785
- (NSRange)minimumRangeOfUnit:(unsigned)unit;	// 0x307967b1
- (id)monthSymbols;	// 0x307969ed
- (unsigned)ordinalityOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x30796829
- (id)quarterSymbols;	// 0x307971a9
- (NSRange)rangeOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x30796801
- (BOOL)rangeOfUnit:(unsigned)unit startDate:(id *)date interval:(double *)interval forDate:(id)date4;	// 0x3079684d
// converted property setter: - (void)setFirstWeekday:(unsigned)weekday;	// 0x30796719
// converted property setter: - (void)setGregorianStartDate:(id)date;	// 0x307967a9
// converted property setter: - (void)setLocale:(id)locale;	// 0x30796689
// converted property setter: - (void)setMinimumDaysInFirstWeek:(unsigned)firstWeek;	// 0x30796761
// converted property setter: - (void)setTimeZone:(id)zone;	// 0x307966d1
- (id)shortMonthSymbols;	// 0x30796a71
- (id)shortQuarterSymbols;	// 0x3079722d
- (id)shortStandaloneMonthSymbols;	// 0x30796e91
- (id)shortStandaloneQuarterSymbols;	// 0x30797335
- (id)shortStandaloneWeekdaySymbols;	// 0x307970a1
- (id)shortWeekdaySymbols;	// 0x30796b79
- (id)standaloneMonthSymbols;	// 0x30796e0d
- (id)standaloneQuarterSymbols;	// 0x307972b1
- (id)standaloneWeekdaySymbols;	// 0x3079701d
// converted property getter: - (id)timeZone;	// 0x307966f5
- (id)veryShortMonthSymbols;	// 0x30796d89
- (id)veryShortStandaloneMonthSymbols;	// 0x30796f15
- (id)veryShortStandaloneWeekdaySymbols;	// 0x30797125
- (id)veryShortWeekdaySymbols;	// 0x30796f99
- (id)weekdaySymbols;	// 0x30796af5
@end

