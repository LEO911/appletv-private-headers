/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSArray, MPMediaLibrary, MPMediaQuerySectionInfo, NSSet;

@interface MPMediaQuery : NSObject <NSCoding, NSCopying> {
@private
	MPMediaQueryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaQueryInternal _internal;	// G=0x35b89525; S=0x35b8954d; @synthesize
@property(copy, nonatomic) NSSet *collectionPropertiesToFetch;	// G=0x35b885c5; S=0x35b8860d; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *collectionSectionInfo;	// G=0x35b8869d; 
@property(readonly, assign, nonatomic) NSArray *collectionSections;	// G=0x35b88b51; 
@property(readonly, assign, nonatomic) NSArray *collections;	// G=0x35b87f2d; 
@property(retain) id criteria;	// G=0x35b894c9; S=0x35b894dd; converted property
@property(readonly, assign, nonatomic) BOOL excludesEntitiesWithBlankNames;	// G=0x35b887cd; 
@property(retain, nonatomic) NSSet *filterPredicates;	// G=0x35b87ca5; S=0x35b87ced; 
@property(assign, nonatomic) int groupingType;	// G=0x35b87f69; S=0x35b87f8d; 
@property(copy, nonatomic) NSSet *itemPropertiesToFetch;	// G=0x35b88539; S=0x35b8855d; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *itemSectionInfo;	// G=0x35b88675; 
@property(readonly, assign, nonatomic) NSArray *itemSections;	// G=0x35b88b29; 
@property(readonly, assign, nonatomic) NSArray *items;	// G=0x35b87ef1; 
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary;	// G=0x35b87e9d; S=0x35b87ead; 
@property(copy, nonatomic, getter=_orderingProperties, setter=_setOrderingProperties:) NSArray *orderingProperties;	// G=0x35b8872d; S=0x35b886c5; 
@property(assign, nonatomic) BOOL sortItems;	// G=0x35b887a1; S=0x35b88775; 
@property(readonly, assign, nonatomic) BOOL specifiesPlaylistItems;	// G=0x35b88a89; 
@property(readonly, assign, nonatomic) BOOL willGroupEntities;	// G=0x35b88ab5; 
+ (id)ITunesUAudioQuery;	// 0x35b878c5
+ (id)activeGeniusPlaylist;	// 0x35bc8175
+ (id)albumsQuery;	// 0x35b87521
+ (id)artistsQuery;	// 0x35b875f1
+ (id)audibleAudiobooksQuery;	// 0x35b87aa1
+ (id)audiobooksQuery;	// 0x35b879e9
+ (id)compilationsQuery;	// 0x35b87b1d
+ (id)composersQuery;	// 0x35b87bed
+ (id)geniusMixesQuery;	// 0x35b88431
+ (id)genresQuery;	// 0x35b87c49
+ (void)initialize;	// 0x35b869b9
+ (id)movieRentalsQuery;	// 0x35b882fd
+ (id)moviesQuery;	// 0x35b88245
+ (id)musicVideosQuery;	// 0x35b880d5
+ (id)playlistsQuery;	// 0x35b87799
+ (id)podcastsQuery;	// 0x35b877f5
+ (void)setFilteringDisabled:(BOOL)disabled;	// 0x35b87fdd
+ (id)songsQuery;	// 0x35b876c1
+ (id)tvShowsQuery;	// 0x35b8818d
+ (id)videoPodcastsQuery;	// 0x35b88379
+ (id)videosQuery;	// 0x35b8801d
- (id)init;	// 0x35b86a09
- (id)initWithCoder:(id)coder;	// 0x35b86f39
- (id)initWithCriteria:(id)criteria library:(id)library;	// 0x35b86a1d
- (id)initWithEntities:(id)entities entityType:(int)type;	// 0x35b86b9d
- (id)initWithFilterPredicates:(id)filterPredicates;	// 0x35b86b29
- (id)initWithFilterPredicatesInternal:(id)filterPredicatesInternal;	// 0x35b86a95
- (void)_enumerateCollectionsUsingBlock:(id)block;	// 0x35b89149
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x35b88fb1
// declared property getter: - (MPMediaQueryInternal)_internal;	// 0x35b89525
- (BOOL)_isFilteringDisabled;	// 0x35b88f65
// declared property getter: - (id)_orderingProperties;	// 0x35b8872d
- (id)_sanitizedQuery;	// 0x35b88b79
// declared property setter: - (void)_setOrderingProperties:(id)properties;	// 0x35b886c5
- (id)_valueForAggregateFunction:(id)aggregateFunction onProperty:(id)property entityType:(int)type;	// 0x35b88be9
- (void)addFilterPredicate:(id)predicate;	// 0x35b87d55
// declared property getter: - (id)collectionPropertiesToFetch;	// 0x35b885c5
// declared property getter: - (id)collectionSectionInfo;	// 0x35b8869d
// declared property getter: - (id)collectionSections;	// 0x35b88b51
// declared property getter: - (id)collections;	// 0x35b87f2d
- (id)copyWithZone:(NSZone *)zone;	// 0x35b873b9
// converted property getter: - (id)criteria;	// 0x35b894c9
- (void)dealloc;	// 0x35b86be9
- (id)description;	// 0x35b86c45
- (void)encodeWithCoder:(id)coder;	// 0x35b871cd
// declared property getter: - (BOOL)excludesEntitiesWithBlankNames;	// 0x35b887cd
// declared property getter: - (id)filterPredicates;	// 0x35b87ca5
- (unsigned)groupingThreshold;	// 0x35b88ab1
// declared property getter: - (int)groupingType;	// 0x35b87f69
- (unsigned)hash;	// 0x35b86ef5
- (BOOL)isEqual:(id)equal;	// 0x35b86e3d
// declared property getter: - (id)itemPropertiesToFetch;	// 0x35b88539
// declared property getter: - (id)itemSectionInfo;	// 0x35b88675
// declared property getter: - (id)itemSections;	// 0x35b88b29
// declared property getter: - (id)items;	// 0x35b87ef1
// declared property getter: - (id)mediaLibrary;	// 0x35b87e9d
- (id)predicateForProperty:(id)property;	// 0x35bc8315
- (void)removeFilterPredicate:(id)predicate;	// 0x35b87df1
- (void)removePredicatesForProperty:(id)property;	// 0x35bc8419
// declared property setter: - (void)setCollectionPropertiesToFetch:(id)fetch;	// 0x35b8860d
// converted property setter: - (void)setCriteria:(id)criteria;	// 0x35b894dd
- (void)setFilterPredicate:(id)predicate forProperty:(id)property;	// 0x35bc8529
// declared property setter: - (void)setFilterPredicates:(id)predicates;	// 0x35b87ced
- (void)setFilterPropertyPredicate:(id)predicate;	// 0x35bc8585
// declared property setter: - (void)setGroupingType:(int)type;	// 0x35b87f8d
// declared property setter: - (void)setItemPropertiesToFetch:(id)fetch;	// 0x35b8855d
// declared property setter: - (void)setMediaLibrary:(id)library;	// 0x35b87ead
// declared property setter: - (void)setSortItems:(BOOL)items;	// 0x35b88775
- (void)setStaticEntities:(id)entities entityType:(int)type;	// 0x35b89471
// declared property setter: - (void)set_internal:(MPMediaQueryInternal)internal;	// 0x35b8954d
// declared property getter: - (BOOL)sortItems;	// 0x35b887a1
// declared property getter: - (BOOL)specifiesPlaylistItems;	// 0x35b88a89
- (id)valueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property;	// 0x35b88f41
- (id)valueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property;	// 0x35b88f1d
// declared property getter: - (BOOL)willGroupEntities;	// 0x35b88ab5
@end

