/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "AVAudioSessionDelegateMediaPlayerOnly.h"
#import <NSObject.h> // Unknown library
#import "MPAVErrorResolverDelegate.h"

@class MPAVItem, NSTimer, NSString, MPAVControllerToAggregateDCommunicator, MPQueuePlayer, MPQueueFeeder, NSArray, MPVideoView, CALayer, MPAVErrorResolver, NSMutableArray, MPAVPlaylistManager, MPAVDestinationBrowser, MPAudioDeviceController, NSDictionary, NSNotification;

@interface MPAVController : NSObject <AVAudioSessionDelegateMediaPlayerOnly, MPAVErrorResolverDelegate> {
	MPAVPlaylistManager *_avPlaylistManager;	// 4 = 0x4
	double _connectionFailTime;	// 8 = 0x8
	BOOL _forceSynchronousQueueFilling;	// 16 = 0x10
	unsigned _valid : 1;	// 17 = 0x11
	int _playbackMode;	// 20 = 0x14
	MPAudioDeviceController *_audioDeviceController;	// 24 = 0x18
	MPQueueFeeder *_feeder;	// 28 = 0x1c
	MPAVErrorResolver *_itemErrorResolver;	// 32 = 0x20
	NSDictionary *_pickedRouteDescription;	// 36 = 0x24
	CALayer *_videoLayer;	// 40 = 0x28
	unsigned _videoLayerUsageCount;	// 44 = 0x2c
	MPVideoView *_videoView;	// 48 = 0x30
	unsigned _tickTimerEnabled;	// 52 = 0x34
	CFRunLoopTimerRef _tickTimer;	// 56 = 0x38
	double _tickInterval;	// 60 = 0x3c
	CFRunLoopTimerRef _currentItemBookkeepingTimer;	// 68 = 0x44
	int _indexChangeDirection;	// 72 = 0x48
	unsigned _itemIndexAtDeath;	// 76 = 0x4c
	int _lastDisconnectReason;	// 80 = 0x50
	double _lastKnownTimeBeforeDeath;	// 84 = 0x54
	double _lastPlaybackIndexChangeTime;	// 92 = 0x5c
	double _lastSetTime;	// 100 = 0x64
	double _lastSetTimeChangeTime;	// 108 = 0x6c
	unsigned _hasDelayedCurrentTimeToSet : 1;	// 116 = 0x74
	unsigned _forceDelayedCurrentTimeToSet : 1;	// 116 = 0x74
	double _delayedCurrentTimeToSet;	// 120 = 0x78
	int _delayedCurrentTimeOptions;	// 128 = 0x80
	unsigned _lastSetTimeMarker;	// 132 = 0x84
	unsigned _autoPlayWhenLikelyToKeepUp : 1;	// 136 = 0x88
	unsigned _autoplayDisabledForCurrentItem : 1;	// 136 = 0x88
	unsigned _closedCaptioningEnabled : 1;	// 136 = 0x88
	int _eqPreset;	// 140 = 0x8c
	double _nextFadeOutDuration;	// 144 = 0x90
	id _boundaryTimeObserver;	// 152 = 0x98
	NSArray *_boundaryTimes;	// 156 = 0x9c
	unsigned _boundaryTimeIndexLastPosted;	// 160 = 0xa0
	float _rateBeforeSeek;	// 164 = 0xa4
	float _inflightSeekRate;	// 168 = 0xa8
	unsigned _scanLevel;	// 172 = 0xac
	int _scanDirection;	// 176 = 0xb0
	int _resetRateAfterSeekingUpdateDisabled;	// 180 = 0xb4
	unsigned _seeklessState;	// 184 = 0xb8
	unsigned _isSeekingOrScrubbing : 1;	// 188 = 0xbc
	unsigned _resetRateAfterSeeking : 1;	// 188 = 0xbc
	unsigned _activeRewindHoldingAtStart : 1;	// 188 = 0xbc
	double _lastSeekableEnd;	// 192 = 0xc0
	double _whenSawSeekableEnd;	// 200 = 0xc8
	double _maxSeekableFwd;	// 208 = 0xd0
	double _seekFwdSlop;	// 216 = 0xd8
	double _lastSeekableStart;	// 224 = 0xe0
	double _whenSawSeekableStart;	// 232 = 0xe8
	double _maxSeekableRev;	// 240 = 0xf0
	double _seekRevSlop;	// 248 = 0xf8
	unsigned _canSeekRev : 1;	// 256 = 0x100
	unsigned _canSeekFwd : 1;	// 256 = 0x100
	unsigned _alwaysPlayWheneverPossible : 1;	// 256 = 0x100
	unsigned _stopAtEnd : 1;	// 256 = 0x100
	unsigned _didReachEnd : 1;	// 256 = 0x100
	unsigned _pausedDuringInterruption : 1;	// 256 = 0x100
	unsigned _useApplicationAudioSession : 1;	// 256 = 0x100
	unsigned _subtitlesEnabled : 1;	// 256 = 0x100
	unsigned _videoFrameDisplayOnResumeDisabled : 1;	// 257 = 0x101
	unsigned _disconnectedVideoLayerOnSuspend : 1;	// 257 = 0x101
	unsigned _playInBackgroundUserDefaultEnabled : 1;	// 257 = 0x101
	unsigned _state;	// 260 = 0x104
	unsigned _displayOverridePlaybackState;	// 264 = 0x108
	unsigned _bufferingState;	// 268 = 0x10c
	NSNotification *_delayedPlaybackStateNotification;	// 272 = 0x110
	dispatch_source_s *_stallTimerSource;	// 276 = 0x114
	NSMutableArray *_queueFeederStateStack;	// 280 = 0x118
	int _feederMode;	// 284 = 0x11c
	MPAVControllerToAggregateDCommunicator *_aggregateDCommunicator;	// 288 = 0x120
	double _itemInitialBookmarkTime;	// 292 = 0x124
	float _rateBeforeResignActive;	// 300 = 0x12c
	int _ubiquitousBookkeepingDisabledCount;	// 304 = 0x130
	double _secondsSinceUbiquitousCheckpoint;	// 308 = 0x134
	NSTimer *_externalProtectionTimer;	// 316 = 0x13c
	BOOL _logContentProtection;	// 320 = 0x140
	BOOL _shouldEnforceHDCP;	// 321 = 0x141
@private
	MPAVDestinationBrowser *_destinationBrowser;	// 324 = 0x144
}
@property(assign, nonatomic) int EQPreset;	// G=0x35b53fb1; S=0x35b4b401; @synthesize=_eqPreset
@property(readonly, assign, nonatomic) unsigned activeRepeatType;	// G=0x35b4af35; 
@property(readonly, assign, nonatomic) unsigned activeShuffleType;	// G=0x35b4af71; 
@property(assign, nonatomic) BOOL allowsAirPlayVideo;	// G=0x35b4afad; S=0x35b4afe1; 
@property(assign, nonatomic) BOOL alwaysPlayWheneverPossible;	// G=0x35b4b251; S=0x35b4b265; 
@property(readonly, assign, nonatomic) MPAudioDeviceController *audioDeviceController;	// G=0x35b4b885; @synthesize=_audioDeviceController
@property(assign, nonatomic) BOOL autoPlayWhenLikelyToKeepUp;	// G=0x35b4b01d; S=0x35b4ac05; 
@property(readonly, assign, nonatomic) MPQueuePlayer *avPlayer;	// G=0x35b4bc25; 
@property(readonly, assign, nonatomic) unsigned bufferingState;	// G=0x35b4b031; @synthesize=_bufferingState
@property(assign, nonatomic) BOOL closedCaptioningEnabled;	// G=0x35b4b041; S=0x35b4b399; 
@property(readonly, assign, nonatomic) MPAVItem *currentItem;	// G=0x35b4b055; 
@property(readonly, assign, nonatomic) BOOL currentItemIsRental;	// G=0x35b4bced; 
@property(readonly, assign, nonatomic) double currentMonotonousTime;	// G=0x35b4a5b5; 
@property(assign, nonatomic) double currentTime;	// G=0x35b4a4c1; S=0x35b4ac39; 
@property(readonly, assign, nonatomic) MPAVDestinationBrowser *destinationBrowser;	// G=0x35b53fa1; @synthesize=_destinationBrowser
@property(assign, nonatomic, getter=destinationIsTVOut, setter=setDestinationIsTVOut:) BOOL destinationIsTVOut;	// G=0x35b4c461; S=0x35b4c489; 
@property(assign, nonatomic) BOOL disableAirPlayMirroringDuringPlayback;	// G=0x35b4b329; S=0x35b4b35d; 
@property(readonly, assign, nonatomic) double durationOfCurrentItemIfAvailable;	// G=0x35b4cb99; 
@property(readonly, assign, nonatomic) MPQueueFeeder *feeder;	// G=0x35b53fc1; @synthesize=_feeder
@property(assign, nonatomic) int feederMode;	// G=0x35b53fd1; S=0x35b53fe1; @synthesize=_feederMode
@property(assign, nonatomic) BOOL forceSynchronousQueueFilling;	// G=0x35b53ff1; S=0x35b4c371; @synthesize=_forceSynchronousQueueFilling
@property(readonly, assign, nonatomic, getter=isFullScreenVideoMode) BOOL fullScreenVideoMode;	// G=0x35b4b785; 
@property(readonly, assign, nonatomic) BOOL hasVolumeControl;	// G=0x35b4b6b9; 
@property(readonly, assign, nonatomic) BOOL isAirPlayVideoActive;	// G=0x35b4b171; 
@property(readonly, assign, nonatomic) BOOL isCurrentItemReady;	// G=0x35b4ba31; 
@property(readonly, assign, nonatomic) BOOL isInExtendedMode;	// G=0x35b4cb95; 
@property(readonly, assign, nonatomic) BOOL muted;	// G=0x35b4b761; 
@property(assign, nonatomic) double nextFadeOutDuration;	// G=0x35b54001; S=0x35b4b441; @synthesize=_nextFadeOutDuration
@property(readonly, assign, nonatomic) unsigned numberOfItems;	// G=0x35b4b27d; 
@property(readonly, assign, nonatomic) double playableDurationOfCurrentItemIfAvailable;	// G=0x35b4cbc1; 
@property(assign, nonatomic) int playbackMode;	// G=0x35b4b81d; S=0x35b4b7ad; 
@property(readonly, assign, nonatomic, getter=isPlaying) BOOL playing;	// G=0x35b4b1a9; 
@property(assign, nonatomic) unsigned repeatType;	// G=0x35b4b2fd; S=0x35b4b545; 
@property(readonly, assign, nonatomic, getter=isRewindHoldingAtStart) BOOL rewindHoldingAtStart;	// G=0x35b4a4ad; 
@property(readonly, assign, nonatomic) NSString *routeNameForVolumeControl;	// G=0x35b4b765; 
@property(assign, nonatomic) BOOL shouldEnforceHDCP;	// G=0x35b54019; S=0x35b54029; @synthesize=_shouldEnforceHDCP
@property(assign, nonatomic) unsigned shuffleType;	// G=0x35b4b675; S=0x35b4b5d5; 
@property(readonly, assign, nonatomic, getter=isShuffled) BOOL shuffled;	// G=0x35b4b1fd; 
@property(assign, nonatomic) unsigned state;	// G=0x35b54039; S=0x35b4cb21; @synthesize=_state
@property(assign, nonatomic) BOOL stopAtEnd;	// G=0x35b4b82d; S=0x35b4b841; 
@property(assign, nonatomic) BOOL subtitlesEnabled;	// G=0x35b4b6a5; S=0x35b4b62d; 
@property(assign, nonatomic) BOOL ubiquitousBookkeepingEnabled;	// G=0x35b4e0e5; S=0x35b4e0c1; 
@property(assign, nonatomic) BOOL useApplicationAudioSession;	// G=0x35b4b8ad; S=0x35b4b8c1; 
@property(readonly, assign, nonatomic, getter=isValid) BOOL valid;	// G=0x35b4b23d; 
@property(assign, nonatomic) BOOL videoFrameDisplayOnResumeDisabled;	// G=0x35b4cb31; S=0x35b4cb45; 
@property(readonly, assign, nonatomic) CALayer *videoLayer;	// G=0x35b4c4b5; @synthesize=_videoLayer
@property(readonly, assign, nonatomic) MPVideoView *videoView;	// G=0x35b4c55d; 
@property(assign, nonatomic) float volume;	// G=0x35b4b70d; S=0x35b4b735; 
+ (id)_controllerKeysToObserve;	// 0x35b50429
+ (id)_itemKeysToObserve;	// 0x35b504a1
+ (id)_playerKeysToObserve;	// 0x35b50565
+ (void)initialize;	// 0x35b49249
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x35b4ae7d
+ (BOOL)outputSupportsAC3;	// 0x35b4b961
+ (id)sharedInstance;	// 0x35b49285
- (id)init;	// 0x35b4933d
// declared property getter: - (int)EQPreset;	// 0x35b53fb1
- (void)_applicationDidBecomeActive:(id)_application;	// 0x35b4f3dd
- (void)_applicationDidFinishSuspensionSnapshot:(id)_application;	// 0x35b4f735
- (void)_applicationSuspended:(id)suspended;	// 0x35b4f6c9
- (void)_applicationSuspendedEventsOnly:(id)only;	// 0x35b4f5a5
- (void)_applicationWillResignActive:(id)_application;	// 0x35b4f20d
- (void)_attemptAutoPlay;	// 0x35b52401
- (id)_avPlaylistManager;	// 0x35b505f9
- (BOOL)_canPlayItem:(id)item;	// 0x35b53d2d
- (void)_cancelStallTimer;	// 0x35b50679
- (void)_cancelUpdateCurrentItemBookkeepingTimer;	// 0x35b52cd1
- (BOOL)_changeChapterTimeMarkerIndexBy:(int)by;	// 0x35b506a9
- (void)_checkForBoundaryTimeCrossing;	// 0x35b51a25
- (void)_clearResetRateAfterSeeking;	// 0x35b52d41
- (void)_clearSeekingIntervalsForStreaming;	// 0x35b53a25
- (void)_clearVideoLayer;	// 0x35b50965
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x35b4f7f1
- (void)_configureAVPlaylistManager:(id)manager;	// 0x35b509fd
- (void)_configureUpdateCurrentItemBookkeepingTimer;	// 0x35b52d01
- (BOOL)_connectAVPlaylistManager;	// 0x35b50d35
- (unsigned)_currentIndexInBoundaryCMTimes:(id)boundaryCMTimes;	// 0x35b51961
- (void)_delayedPlaybackIndexChange;	// 0x35b4f8ed
- (void)_delayedPostPlaybackStateChangedNotification;	// 0x35b52861
- (void)_delayedSetCurrentTime;	// 0x35b53761
- (void)_delayedUpdateScanningRate;	// 0x35b4f93d
- (void)_delayedUpdateTimeMarker;	// 0x35b4f961
- (void)_disconnectAVPlaylistManagerWithReason:(int)reason;	// 0x35b4e565
- (unsigned)_displayPlaybackState;	// 0x35b52b91
- (void)_endSeekAndChangeRate:(BOOL)rate;	// 0x35b50f41
- (id)_extractImageFromMetadata:(id)metadata;	// 0x35b53a95
- (void)_firstVideoFrameDisplayed:(id)displayed;	// 0x35b4d285
- (void)_isAirPlayVideoActiveDidChange:(id)_isAirPlayVideoActive;	// 0x35b4d2cd
- (void)_itemAssetIsLoadedNotification:(id)notification;	// 0x35b4d355
- (void)_itemDidChange:(id)_item;	// 0x35b4d431
- (void)_itemFailedToPlayToEnd:(id)end;	// 0x35b4d711
- (void)_itemFailedToPlayToEndNotification:(id)endNotification;	// 0x35b4d6e1
- (BOOL)_itemIsRestricted:(id)restricted;	// 0x35b53cdd
- (void)_itemPlaybackDidEndNotification:(id)_itemPlayback;	// 0x35b4d7f9
- (void)_itemReadyToPlay:(id)play;	// 0x35b4daed
- (void)_itemTimeMarkersAvailableNotification:(id)notification;	// 0x35b4d3c9
- (void)_itemWillChange:(id)_item;	// 0x35b4db95
- (void)_mediaLibraryDynamicPropertiesDidChangeNotification:(id)_mediaLibraryDynamicProperties;	// 0x35b4f8dd
- (void)_pauseBookkeepingTimer;	// 0x35b52c61
- (void)_pauseTickTimer;	// 0x35b53b95
- (void)_playbackFailedWithError:(id)error canResolve:(BOOL)resolve;	// 0x35b53c05
- (unsigned)_playbackIndexForDelta:(int)delta fromIndex:(unsigned)index ignoreElapsedTime:(BOOL)time;	// 0x35b5115d
- (void)_playerFailedToQueueNotification:(id)queueNotification;	// 0x35b4d695
- (void)_postMPAVControllerItemReadyToPlayNotificationWithItem:(id)item;	// 0x35b4d1c5
- (void)_postMPAVControllerSizeDidChangeNotificationWithItem:(id)_postMPAVControllerSize;	// 0x35b4d105
- (void)_postPlaybackStateChangedNotificationWithOriginalState:(unsigned)originalState newState:(unsigned)state delayable:(BOOL)delayable;	// 0x35b528c9
- (void)_prepareToPlayItem:(id)playItem;	// 0x35b51255
- (void)_protectionStatusTimerCallback:(id)callback;	// 0x35b4fbb1
- (void)_rateDidChange:(id)_rate;	// 0x35b4e245
- (void)_registerForAVItemNotifications:(id)avitemNotifications;	// 0x35b51ccd
- (void)_registerForAVPlaylistManagerObservation:(id)avplaylistManagerObservation;	// 0x35b51f01
- (void)_reloadTimeMarkerObservationsForItem:(id)item;	// 0x35b51b2d
- (void)_resetInternalState;	// 0x35b52145
- (void)_resetQueue:(BOOL)queue videoLayer:(id)layer;	// 0x35b521fd
- (void)_resumeBookkeepingTimer;	// 0x35b52c9d
- (void)_resumeTickTimer;	// 0x35b53bd1
- (void)_scheduleExternalProtectionTimerIfNecessary;	// 0x35b4ff51
- (void)_scheduleUpdateCurrentItemBookkeepingTimer;	// 0x35b52bc1
- (unsigned)_seeklessStateForState:(unsigned)state;	// 0x35b4b0c1
- (void)_serverConnectionDidDie:(id)_serverConnection;	// 0x35b4e7c5
- (void)_setAVControllerQueueFeeder:(id)feeder startQueueIndex:(unsigned)index;	// 0x35b49f99
- (void)_setActionAtEndAttributeForState:(unsigned)state;	// 0x35b527d1
- (void)_setBufferingState:(unsigned)state;	// 0x35b5253d
- (void)_setFeeder:(id)feeder;	// 0x35b4bd35
- (void)_setItemErrorResolver:(id)resolver;	// 0x35b52d69
- (void)_setState:(unsigned)state;	// 0x35b52df9
- (void)_setValid:(BOOL)valid;	// 0x35b53079
- (void)_setVideoLayerOnAVController:(id)controller force:(BOOL)force;	// 0x35b53055
- (void)_setVideoLayerOnAVController:(id)controller force:(BOOL)force pauseIfNecessary:(BOOL)necessary;	// 0x35b52f45
- (BOOL)_showsPlayingWhenInState:(unsigned)state;	// 0x35b4b075
- (void)_sizeDidChange:(id)_size;	// 0x35b4e949
- (void)_stopExternalProtectionTimer;	// 0x35b503c5
- (void)_streamBufferFull:(id)full;	// 0x35b4e979
- (void)_streamLikelyToKeepUp:(id)keepUp;	// 0x35b4e99d
- (void)_streamRanDry:(id)dry;	// 0x35b4e9c1
- (void)_streamUnlikelyToKeepUp:(id)keepUp;	// 0x35b4e9e5
- (void)_switchToFeeder:(id)feeder mode:(int)mode index:(unsigned)index play:(BOOL)play configureFeederBlock:(id)block;	// 0x35b4be45
- (void)_timeHasJumpedNotification:(id)notification;	// 0x35b4ea09
- (void)_timedMetadataAvailable:(id)available;	// 0x35b4eb81
- (void)_tracksDidChange:(id)_tracks;	// 0x35b4ed41
- (void)_unregisterForAVItemNotifications:(id)avitemNotifications;	// 0x35b53155
- (void)_unregisterForAVPlaylistManagerObservation:(id)avplaylistManagerObservation;	// 0x35b53301
- (void)_updateCurrentItemBookkeeping;	// 0x35b4e0fd
- (void)_updateCurrentItemBookkeepingForTimerCallback;	// 0x35b4e1b9
- (void)_updateCurrentTimeToBookmarkTimeForDynamicPropertyChange;	// 0x35b4f815
- (void)_updateCurrentTimeToNextStartTimeForQueueFeeder:(id)queueFeeder withItemIndex:(int)itemIndex;	// 0x35b49e41
- (void)_updateProgress:(CFRunLoopTimerRef)progress;	// 0x35b5351d
- (void)_updateScanningRate;	// 0x35b53665
- (void)_updateSeekingIntervalsForStreaming;	// 0x35b537b9
- (void)_volumeDidChangeNotification:(id)_volume;	// 0x35b4eda9
// declared property getter: - (unsigned)activeRepeatType;	// 0x35b4af35
// declared property getter: - (unsigned)activeShuffleType;	// 0x35b4af71
- (void)airPlayVideoEnded;	// 0x35b4edf1
// declared property getter: - (BOOL)allowsAirPlayVideo;	// 0x35b4afad
// declared property getter: - (BOOL)alwaysPlayWheneverPossible;	// 0x35b4b251
- (void)applicationDidReceiveMemoryWarningAsUrgent:(BOOL)application;	// 0x35b4baa1
- (void)applicationWillTerminate;	// 0x35b4baed
- (void)applyRepeatSettings;	// 0x35b4bb1d
- (void)applyShuffleSettings;	// 0x35b4bbd5
// declared property getter: - (id)audioDeviceController;	// 0x35b4b885
- (void)audioDeviceControllerAudioRoutesChanged:(id)changed;	// 0x35b4cf5d
// declared property getter: - (BOOL)autoPlayWhenLikelyToKeepUp;	// 0x35b4b01d
- (void)autoclearDisplayOverride;	// 0x35b52a7d
// declared property getter: - (id)avPlayer;	// 0x35b4bc25
- (void)beginInterruption;	// 0x35b4df29
- (void)beginSeek:(int)seek;	// 0x35b49b69
- (void)beginTickTimerWithInterval:(double)interval;	// 0x35b4acfd
- (void)beginUsingVideoLayer;	// 0x35b4bca9
// declared property getter: - (unsigned)bufferingState;	// 0x35b4b031
- (BOOL)canSeekBackwards;	// 0x35b4ce3d
- (BOOL)canSeekForwards;	// 0x35b4ce69
- (void)changePlaybackIndexBy:(int)by;	// 0x35b4a0d5
- (void)changePlaybackIndexBy:(int)by deltaType:(int)type;	// 0x35b4a0f5
- (void)changePlaybackIndexBy:(int)by deltaType:(int)type ignoreElapsedTime:(BOOL)time;	// 0x35b4a119
// declared property getter: - (BOOL)closedCaptioningEnabled;	// 0x35b4b041
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned)index;	// 0x35b4bc7d
- (void)contentsDidChangeByRemovingRange:(NSRange)contents;	// 0x35b4bc4d
// declared property getter: - (id)currentItem;	// 0x35b4b055
// declared property getter: - (BOOL)currentItemIsRental;	// 0x35b4bced
// declared property getter: - (double)currentMonotonousTime;	// 0x35b4a5b5
// declared property getter: - (double)currentTime;	// 0x35b4a4c1
- (void)dealloc;	// 0x35b496a1
// declared property getter: - (id)destinationBrowser;	// 0x35b53fa1
// declared property getter: - (BOOL)destinationIsTVOut;	// 0x35b4c461
// declared property getter: - (BOOL)disableAirPlayMirroringDuringPlayback;	// 0x35b4b329
- (void)disableAutoplayForCurrentItem;	// 0x35b4ba71
// declared property getter: - (double)durationOfCurrentItemIfAvailable;	// 0x35b4cb99
- (id)embeddedDataTimesForItem:(id)item;	// 0x35b5130d
- (void)enableAutoplayForCurrentItem;	// 0x35b4ba89
- (void)endInterruptionFromInterruptor:(id)interruptor category:(id)category flags:(unsigned)flags;	// 0x35b4df5d
- (void)endPlayback;	// 0x35b4a64d
- (void)endSeek;	// 0x35b4a435
- (void)endTickTimer;	// 0x35b4ae1d
- (void)endUsingVideoLayer;	// 0x35b4bcf1
- (void)ensureFeederIsClass:(Class)aClass;	// 0x35b4c84d
- (void)ensureFeederIsSubclass:(Class)subclass;	// 0x35b4c8e1
- (void)ensureHasAVPlaylistManager;	// 0x35b4bd25
- (void)errorResolver:(id)resolver didResolveError:(id)error withResolution:(int)resolution;	// 0x35b4d04d
- (BOOL)fadeOutForQuit;	// 0x35b4a449
// declared property getter: - (id)feeder;	// 0x35b53fc1
- (void)feederChangedContents:(id)contents;	// 0x35b4bfed
// declared property getter: - (int)feederMode;	// 0x35b53fd1
- (void)finalizeBookkeepingNow;	// 0x35b4ca39
- (BOOL)forceRestartPlaybackIfNecessary;	// 0x35b4ac9d
// declared property getter: - (BOOL)forceSynchronousQueueFilling;	// 0x35b53ff1
// declared property getter: - (BOOL)hasVolumeControl;	// 0x35b4b6b9
// declared property getter: - (BOOL)isAirPlayVideoActive;	// 0x35b4b171
// declared property getter: - (BOOL)isCurrentItemReady;	// 0x35b4ba31
// declared property getter: - (BOOL)isFullScreenVideoMode;	// 0x35b4b785
// declared property getter: - (BOOL)isInExtendedMode;	// 0x35b4cb95
- (BOOL)isLiveStreaming;	// 0x35b4cdf9
// declared property getter: - (BOOL)isPlaying;	// 0x35b4b1a9
// declared property getter: - (BOOL)isRewindHoldingAtStart;	// 0x35b4a4ad
- (BOOL)isSeekingOrScrubbing;	// 0x35b4a499
// declared property getter: - (BOOL)isShuffled;	// 0x35b4b1fd
- (BOOL)isTickTimerEnabled;	// 0x35b4ae65
// declared property getter: - (BOOL)isValid;	// 0x35b4b23d
// declared property getter: - (BOOL)muted;	// 0x35b4b761
// declared property getter: - (double)nextFadeOutDuration;	// 0x35b54001
// declared property getter: - (unsigned)numberOfItems;	// 0x35b4b27d
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x35b4ee01
- (void)pause;	// 0x35b4a77d
- (void)pauseWithFadeout:(float)fadeout;	// 0x35b4a6c9
- (void)play;	// 0x35b4a8c5
- (void)playChapterTimeMarkerAtIndex:(unsigned)index;	// 0x35b4ab65
- (void)playItemAtIndex:(unsigned)index;	// 0x35b4aab9
- (void)playItemAtIndex:(unsigned)index forceRestart:(BOOL)restart;	// 0x35b4aacd
// declared property getter: - (double)playableDurationOfCurrentItemIfAvailable;	// 0x35b4cbc1
// declared property getter: - (int)playbackMode;	// 0x35b4b81d
- (float)rate;	// 0x35b4b2a5
- (void)reloadFeederWithStartQueueIndex:(unsigned)startQueueIndex;	// 0x35b4c031
// declared property getter: - (unsigned)repeatType;	// 0x35b4b2fd
- (void)restorePreviousFeederState;	// 0x35b4c76d
// declared property getter: - (id)routeNameForVolumeControl;	// 0x35b4b765
- (void)saveCurrentFeederState;	// 0x35b4c5c5
// declared property setter: - (void)setAllowsAirPlayVideo:(BOOL)video;	// 0x35b4afe1
// declared property setter: - (void)setAlwaysPlayWheneverPossible:(BOOL)possible;	// 0x35b4b265
// declared property setter: - (void)setAutoPlayWhenLikelyToKeepUp:(BOOL)keepUp;	// 0x35b4ac05
- (void)setAutoclearingDisplayOverridePlaybackState:(unsigned)state;	// 0x35b52a91
// declared property setter: - (void)setClosedCaptioningEnabled:(BOOL)enabled;	// 0x35b4b399
// declared property setter: - (void)setCurrentTime:(double)time;	// 0x35b4ac39
- (void)setCurrentTime:(double)time options:(int)options;	// 0x35b4c089
// declared property setter: - (void)setDestinationIsTVOut:(BOOL)anOut;	// 0x35b4c489
// declared property setter: - (void)setDisableAirPlayMirroringDuringPlayback:(BOOL)playback;	// 0x35b4b35d
- (void)setDisplayOverridePlaybackState:(unsigned)state;	// 0x35b52ad5
// declared property setter: - (void)setEQPreset:(int)preset;	// 0x35b4b401
// declared property setter: - (void)setFeederMode:(int)mode;	// 0x35b53fe1
// declared property setter: - (void)setForceSynchronousQueueFilling:(BOOL)filling;	// 0x35b4c371
// declared property setter: - (void)setNextFadeOutDuration:(double)duration;	// 0x35b4b441
- (void)setPlaybackIndex:(int)index;	// 0x35b4a091
- (void)setPlaybackIndex:(int)index selectionDirection:(int)direction;	// 0x35b49ff9
// declared property setter: - (void)setPlaybackMode:(int)mode;	// 0x35b4b7ad
- (BOOL)setRate:(float)rate;	// 0x35b4b49d
- (void)setRateForScanning:(float)scanning;	// 0x35b53601
// declared property setter: - (void)setRepeatType:(unsigned)type;	// 0x35b4b545
// declared property setter: - (void)setShouldEnforceHDCP:(BOOL)enforceHDCP;	// 0x35b54029
// declared property setter: - (void)setShuffleType:(unsigned)type;	// 0x35b4b5d5
// declared property setter: - (void)setState:(unsigned)state;	// 0x35b4cb21
// declared property setter: - (void)setStopAtEnd:(BOOL)end;	// 0x35b4b841
// declared property setter: - (void)setSubtitlesEnabled:(BOOL)enabled;	// 0x35b4b62d
// declared property setter: - (void)setUbiquitousBookkeepingEnabled:(BOOL)enabled;	// 0x35b4e0c1
// declared property setter: - (void)setUseApplicationAudioSession:(BOOL)session;	// 0x35b4b8c1
// declared property setter: - (void)setVideoFrameDisplayOnResumeDisabled:(BOOL)disabled;	// 0x35b4cb45
// declared property setter: - (void)setVolume:(float)volume;	// 0x35b4b735
- (BOOL)shouldDisplayAsPlaying;	// 0x35b4b1cd
// declared property getter: - (BOOL)shouldEnforceHDCP;	// 0x35b54019
- (BOOL)shouldHaveNoActionAtEndForState:(unsigned)state;	// 0x35b4cb69
// declared property getter: - (unsigned)shuffleType;	// 0x35b4b675
- (void)skipToSeekableEnd;	// 0x35b4cf21
- (void)skipToSeekableStart;	// 0x35b4ceb5
// declared property getter: - (unsigned)state;	// 0x35b54039
// declared property getter: - (BOOL)stopAtEnd;	// 0x35b4b82d
// declared property getter: - (BOOL)subtitlesEnabled;	// 0x35b4b6a5
- (void)switchToAudioPlayback:(BOOL)audioPlayback forItem:(id)item;	// 0x35b4c3b1
- (void)switchToFeeder:(id)feeder mode:(int)mode index:(unsigned)index play:(BOOL)play;	// 0x35b4bfc1
- (void)switchToVideoPlayback:(BOOL)videoPlayback forItem:(id)item;	// 0x35b4c3e9
- (double)timeOfPlayableEnd;	// 0x35b4ccb1
- (double)timeOfPlayableStart;	// 0x35b4cbe9
- (double)timeOfSeekableEnd;	// 0x35b4cdd1
- (double)timeOfSeekableStart;	// 0x35b4cda9
- (void)togglePlayback;	// 0x35b4ac5d
// declared property getter: - (BOOL)ubiquitousBookkeepingEnabled;	// 0x35b4e0e5
- (void)updateBookkeepingNow;	// 0x35b4c97d
// declared property getter: - (BOOL)useApplicationAudioSession;	// 0x35b4b8ad
// declared property getter: - (BOOL)videoFrameDisplayOnResumeDisabled;	// 0x35b4cb31
// declared property getter: - (id)videoLayer;	// 0x35b4c4b5
// declared property getter: - (id)videoView;	// 0x35b4c55d
// declared property getter: - (float)volume;	// 0x35b4b70d
@end

