/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class AVAsset, AVPlayerItem, MPMediaItem, MPAVController, NSURL, MPAlternateTracks, NSString, MPQueueFeeder, NSArray, NSData;

@interface MPAVItem : NSObject {
	AVAsset *_asset;	// 4 = 0x4
	dispatch_queue_s *_assetQueue;	// 8 = 0x8
	AVPlayerItem *_avPlayerItem;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	NSArray *_chapterTimeMarkers;	// 28 = 0x1c
	NSArray *_artworkTimeMarkers;	// 32 = 0x20
	NSArray *_urlTimeMarkers;	// 36 = 0x24
	NSArray *_closedCaptionTimeMarkers;	// 40 = 0x28
	MPAlternateTracks *_alternateTracks;	// 44 = 0x2c
	double _cachedDuration;	// 48 = 0x30
	double _cachedPlayableDuration;	// 56 = 0x38
	unsigned _type;	// 64 = 0x40
	float _defaultPlaybackRate;	// 68 = 0x44
	unsigned _indexInQueueFeeder;	// 72 = 0x48
	unsigned _advancedDuringPlayback : 1;	// 76 = 0x4c
	unsigned _handledFinishTime : 1;	// 76 = 0x4c
	unsigned _hasPlayedThisSession : 1;	// 76 = 0x4c
	unsigned _wasCountedAsSkipped : 1;	// 76 = 0x4c
	unsigned _isStreamable : 2;	// 76 = 0x4c
	unsigned _useCachedPlayableDuration : 1;	// 76 = 0x4c
	unsigned _watchingAttributes : 1;	// 76 = 0x4c
	unsigned _lyricsAvailable : 1;	// 77 = 0x4d
	unsigned _delayedInvalidateCachedPlayedDurationScheduled : 1;	// 77 = 0x4d
	unsigned _timeMarkersNeedLoading : 1;	// 77 = 0x4d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x35b455f5; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x35b455fd; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x35b45605; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x35b45601; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x35b47ea9; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x35b455f9; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x35b45609; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x35b4560d; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x35b46c4d; S=0x35b47f7d; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x35b44821; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x35b46c25; S=0x35b47f59; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x35b46d19; S=0x35b46c9d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x35b45611; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x35b45635; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x35b4565d; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x35b47ed9; S=0x35b47ee9; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x35b45619; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x35b45615; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x35b456b9; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x35b45671; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x35b474e1; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x35b47521; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x35b475b5; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x35b47535; 
@property(readonly, assign, nonatomic) BOOL externalProtectionEnabled;	// G=0x35b474a1; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x35b47eb9; S=0x35b47ec9; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x35b458b5; S=0x35b458f5; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x35b45631; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x35b45751; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x35b45755; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x35b45759; S=0x35b45999; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x35b47f39; S=0x35b47f49; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x35b47ef9; S=0x35b47f09; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x35b456c9; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x35b457dd; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x35bed3d9; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x35b47341; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x35b476f9; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x35b47879; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x35b44c59; S=0x35b44c6d; 
@property(assign, nonatomic) MPAVController *player;	// G=0x35b47f19; S=0x35b47f29; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x35b449fd; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x35b457e1; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x35b45879; 
@property(readonly, assign, nonatomic) BOOL requiresExternalProtection;	// G=0x35b47479; 
@property(readonly, assign, nonatomic) int status;	// G=0x35b44bc5; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x35b4576d; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x35b47979; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x35b478c1; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x35b4732d; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x35b46c75; S=0x35b47fa1; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x35b45cc9; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x35b4733d; 
@property(assign) BOOL userSkippedPlayback;	// G=0x35b44cfd; S=0x35b44cd5; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x35b47425; S=0x35b4744d; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x35b4734d; 
+ (id)URLFromPath:(id)path;	// 0x35b44309
+ (unsigned)defaultScaleMode;	// 0x35b442d9
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x35b442e9
- (id)init;	// 0x35b443b9
- (id)initWithAsset:(id)asset;	// 0x35b44445
- (id)initWithURL:(id)url;	// 0x35b443cd
- (id)initWithURL:(id)url options:(id)options;	// 0x35b44409
- (void)_checkAllowsBlockingDurationCall;	// 0x35b45a09
- (void)_delayedInvalidateCachedPlayedDuration;	// 0x35b47a79
- (double)_durationFromExternalMetadataIfAvailable;	// 0x35b47559
- (double)_durationInSeconds;	// 0x35b44d11
- (void)_itemAttributeAvailableKey:(id)key;	// 0x35b47aa9
- (void)_loadAssetAndPlayerItem;	// 0x35b44721
- (void)_loadTimeMarkersAsync;	// 0x35b46b05
- (void)_loadTimeMarkersBlocking;	// 0x35b45ccd
- (void)_realoadEmbeddedTimeMarkers;	// 0x35b459d5
- (void)_releaseAllTimeMarkers;	// 0x35b44571
// declared property getter: - (id)album;	// 0x35b455f5
// declared property getter: - (id)albumArtist;	// 0x35b455fd
// declared property getter: - (unsigned)albumTrackCount;	// 0x35b45605
// declared property getter: - (unsigned)albumTrackNumber;	// 0x35b45601
- (BOOL)allowAutoChangingScaleModeToFill;	// 0x35b442d5
// declared property getter: - (id)alternateTracks;	// 0x35b47ea9
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x35b4572d
// declared property getter: - (id)artist;	// 0x35b455f9
// declared property getter: - (id)artworkImageData;	// 0x35b45609
// declared property getter: - (id)artworkMIMEType;	// 0x35b4560d
- (id)artworkTimeMarkerForTime:(double)time;	// 0x35b46e31
// declared property getter: - (id)artworkTimeMarkers;	// 0x35b46c4d
// declared property getter: - (id)asset;	// 0x35b44821
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x35b47ce5
- (id)chapterTimeMarkerForTime:(double)time;	// 0x35b46d29
// declared property getter: - (id)chapterTimeMarkers;	// 0x35b46c25
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x35b47041
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x35b46d19
// declared property getter: - (id)composer;	// 0x35b45611
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x35b45635
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x35b4565d
- (void)dealloc;	// 0x35b445f5
// declared property getter: - (float)defaultPlaybackRate;	// 0x35b47ed9
// declared property getter: - (unsigned)discCount;	// 0x35b45619
// declared property getter: - (unsigned)discNumber;	// 0x35b45615
// declared property getter: - (id)displayableText;	// 0x35b456b9
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x35b45671
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x35b474e1
// declared property getter: - (double)durationFromExternalMetadata;	// 0x35b47521
// declared property getter: - (double)durationIfAvailable;	// 0x35b475b5
- (double)durationInSeconds;	// 0x35b44d59
// declared property getter: - (BOOL)durationIsValid;	// 0x35b47535
// declared property getter: - (BOOL)externalProtectionEnabled;	// 0x35b474a1
// declared property getter: - (id)feeder;	// 0x35b47eb9
- (void)flushNowPlayingCaches;	// 0x35b446f1
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x35b458b5
// declared property getter: - (id)genre;	// 0x35b45631
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x35b45709
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x35b45751
// declared property getter: - (BOOL)hasDisplayableText;	// 0x35b45755
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x35b45759
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x35b45be9
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x35b47f39
// declared property getter: - (BOOL)isAssetLoaded;	// 0x35b47ef9
- (BOOL)isAssetURLValid;	// 0x35b4562d
- (BOOL)isPlaceholderForItem:(id)item;	// 0x35b45629
// declared property getter: - (BOOL)isStreamable;	// 0x35b4576d
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x35b442fd
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x35b4561d
- (void)loadAssetAndPlayerItem;	// 0x35b4471d
- (id)localeForAssetTrack:(id)assetTrack;	// 0x35b45b3d
- (id)localizedPositionInPlaylistString;	// 0x35b47351
// declared property getter: - (id)lyrics;	// 0x35b456c9
// declared property getter: - (id)mainTitle;	// 0x35b457dd
// declared property getter: - (id)mediaItem;	// 0x35bed3d9
- (CGSize)naturalSize;	// 0x35b47ca9
- (void)notePlaybackFinishedByHittingEnd;	// 0x35b44c41
- (id)path;	// 0x35b44dc9
// declared property getter: - (unsigned long long)persistentID;	// 0x35b47341
// declared property getter: - (double)playableDuration;	// 0x35b476f9
// declared property getter: - (double)playableDurationIfAvailable;	// 0x35b47879
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x35b44c59
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x35b457e5
// declared property getter: - (id)player;	// 0x35b47f19
// declared property getter: - (id)playerItem;	// 0x35b449fd
// declared property getter: - (id)podcastURL;	// 0x35b457e1
- (void)postDurationDidChange;	// 0x35b455b1
// declared property getter: - (CGSize)presentationSize;	// 0x35b45879
- (void)reevaluateType;	// 0x35b47149
// declared property getter: - (BOOL)requiresExternalProtection;	// 0x35b47479
- (void)resetBookkeeping;	// 0x35b44be5
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x35b4593d
- (void)setAlternateAudioTrackID:(unsigned)anId;	// 0x35b44c39
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x35b47f7d
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x35b47f59
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x35b46c9d
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x35b47ee9
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x35b47ec9
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x35b458f5
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x35b45999
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x35b47f49
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x35b47f09
- (void)setOverrideDuration:(double)duration;	// 0x35b459c1
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x35b44c6d
- (void)setPlaybackFinishedTime:(double)time;	// 0x35b44c71
- (void)setPlaybackStoppedTime:(double)time;	// 0x35b44c3d
// declared property setter: - (void)setPlayer:(id)player;	// 0x35b47f29
- (void)setRating:(float)rating;	// 0x35b44c89
- (void)setSubtitleTrackID:(unsigned)anId;	// 0x35b44c8d
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x35b47fa1
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x35b44c91
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x35b44ca9
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x35b44cd5
// declared property setter: - (void)setVideoID:(id)anId;	// 0x35b4744d
- (void)setupPlaybackInfo;	// 0x35b44ec1
// declared property getter: - (int)status;	// 0x35b44bc5
// declared property getter: - (double)timeOfSeekableEnd;	// 0x35b47979
// declared property getter: - (double)timeOfSeekableStart;	// 0x35b478c1
- (id)titlesForTime:(double)time;	// 0x35b45cc5
// declared property getter: - (unsigned)type;	// 0x35b4732d
- (void)updateAttributesForDefaultsChange:(id)defaultsChange;	// 0x35b455ad
- (id)url;	// 0x35b44e51
- (id)urlTimeMarkerForTime:(double)time;	// 0x35b46f39
// declared property getter: - (id)urlTimeMarkers;	// 0x35b46c75
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x35b45cc9
// declared property getter: - (float)userRating;	// 0x35b4733d
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x35b44cfd
// declared property getter: - (id)videoID;	// 0x35b47425
// declared property getter: - (BOOL)wantsSubtitles;	// 0x35b4734d
@end

