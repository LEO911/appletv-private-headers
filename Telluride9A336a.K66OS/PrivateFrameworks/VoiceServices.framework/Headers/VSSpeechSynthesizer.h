/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
 */

#import <NSObject.h> // Unknown library
#import "VoiceServices-Structs.h"

@class NSString;
@protocol VSSpeechSynthesizerDelegate;

@interface VSSpeechSynthesizer : NSObject {
@private
	void *_speechJob;	// 4 = 0x4
	void *_keepAlive;	// 8 = 0x8
	id<VSSpeechSynthesizerDelegate> _delegate;	// 12 = 0xc
	NSString *_voice;	// 16 = 0x10
	int _footprint;	// 20 = 0x14
	float _rate;	// 24 = 0x18
	float _pitch;	// 28 = 0x1c
	float _volume;	// 32 = 0x20
	struct {
		unsigned delegateStart : 1;
		unsigned delegateFinish : 1;
		unsigned delegateFinishWithPhonemesSpoken : 1;
		unsigned delegatePause : 1;
		unsigned delegateContinue : 1;
		unsigned delegateWillSpeak : 1;
		unsigned willUseInput : 1;
	} _synthesizerFlags;	// 36 = 0x24
}
@property(assign) int footprint;	// G=0x328e5559; S=0x328e5549; converted property
@property(readonly, assign) float pitch;	// G=0x328e5529; converted property
@property(readonly, assign) float rate;	// G=0x328e5509; converted property
@property(retain) NSString *voice;	// G=0x328e58f5; S=0x328e5959; converted property
@property(readonly, assign) float volume;	// G=0x328e5539; converted property
+ (void)_localeDidChange;	// 0x328e55d1
+ (id)availableLanguageCodes;	// 0x328e5609
+ (id)availableVoices;	// 0x328e5651
+ (id)availableVoicesForLanguageCode:(id)languageCode;	// 0x328e5625
+ (BOOL)isSystemSpeaking;	// 0x328e55fd
- (id)init;	// 0x328e5569
- (id)initForInputFeedback;	// 0x328e628d
- (void)_handleSpeech:(VSSpeechRef)speech completed:(BOOL)completed phonemesSpoken:(CFStringRef)spoken withError:(id)error;	// 0x328e5705
- (void)_handleSpeech:(VSSpeechRef)speech willSpeakMarkType:(int)type inRange:(XXStruct_K5nmsA)range;	// 0x328e56a9
- (void)_handleSpeechContinued:(VSSpeechRef)continued;	// 0x328e57ad
- (void)_handleSpeechPaused:(VSSpeechRef)paused;	// 0x328e57fd
- (void)_handleSpeechStarted:(VSSpeechRef)started;	// 0x328e584d
- (id)continueSpeaking;	// 0x328e5ba5
- (void)dealloc;	// 0x328e6205
// converted property getter: - (int)footprint;	// 0x328e5559
- (BOOL)isSpeaking;	// 0x328e5b7d
- (float)maximumRate;	// 0x328e5521
- (float)minimumRate;	// 0x328e5519
- (id)pauseSpeakingAtNextBoundary:(int)nextBoundary;	// 0x328e5c89
- (id)pauseSpeakingAtNextBoundary:(int)nextBoundary synchronously:(BOOL)synchronously;	// 0x328e5c11
// converted property getter: - (float)pitch;	// 0x328e5529
// converted property getter: - (float)rate;	// 0x328e5509
- (void)setDelegate:(id)delegate;	// 0x328e60c1
// converted property setter: - (void)setFootprint:(int)footprint;	// 0x328e5549
- (void)setMaintainPersistentConnection:(BOOL)connection;	// 0x328e589d
- (id)setPitch:(float)pitch;	// 0x328e5a61
- (id)setRate:(float)rate;	// 0x328e5ad5
// converted property setter: - (void)setVoice:(id)voice;	// 0x328e5959
- (id)setVolume:(float)volume;	// 0x328e59a1
- (id)speechString;	// 0x328e5b49
- (id)startSpeakingAttributedString:(id)string;	// 0x328e5d75
- (id)startSpeakingAttributedString:(id)string toURL:(id)url;	// 0x328e5d51
- (id)startSpeakingAttributedString:(id)string toURL:(id)url withLanguageCode:(id)languageCode;	// 0x328e5d29
- (id)startSpeakingString:(id)string;	// 0x328e60a1
- (id)startSpeakingString:(id)string attributedString:(id)string2 toURL:(id)url withLanguageCode:(id)languageCode;	// 0x328e5dad
- (id)startSpeakingString:(id)string toURL:(id)url;	// 0x328e607d
- (id)startSpeakingString:(id)string toURL:(id)url withLanguageCode:(id)languageCode;	// 0x328e5d89
- (id)startSpeakingString:(id)string withLanguageCode:(id)languageCode;	// 0x328e605d
- (id)stopSpeakingAtNextBoundary:(int)nextBoundary;	// 0x328e5d15
- (id)stopSpeakingAtNextBoundary:(int)nextBoundary synchronously:(BOOL)synchronously;	// 0x328e5c9d
// converted property getter: - (id)voice;	// 0x328e58f5
// converted property getter: - (float)volume;	// 0x328e5539
@end

