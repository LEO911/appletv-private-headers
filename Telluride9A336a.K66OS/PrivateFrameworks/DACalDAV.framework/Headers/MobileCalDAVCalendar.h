/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <NSObject.h> // Unknown library
#import "CalDAVCalendar.h"
#import "DACalDAV-Structs.h"

@class NSTimeZone, NSArray, NSString, NSMutableArray, MobileCalDAVPrincipal, NSSet, NSURL, NSMutableDictionary, NSDictionary, NSMutableSet;
@protocol CalDAVPrincipal;

@interface MobileCalDAVCalendar : NSObject <CalDAVCalendar> {
	MobileCalDAVPrincipal *_principal;	// 4 = 0x4
	NSString *_calGUID;	// 8 = 0x8
	NSURL *_calendarURL;	// 12 = 0xc
	BOOL _isDirty;	// 16 = 0x10
	BOOL _isTaskContainer;	// 17 = 0x11
	BOOL _isEventContainer;	// 18 = 0x12
	BOOL _isSubscribed;	// 19 = 0x13
	BOOL _isScheduleInbox;	// 20 = 0x14
	BOOL _isScheduleOutbox;	// 21 = 0x15
	BOOL _isNotification;	// 22 = 0x16
	BOOL _isEditable;	// 23 = 0x17
	BOOL _isRenameable;	// 24 = 0x18
	BOOL _isEnabled;	// 25 = 0x19
	BOOL _isAffectingAvailability;	// 26 = 0x1a
	BOOL _canBePublished;	// 27 = 0x1b
	NSString *_pushKey;	// 28 = 0x1c
	NSURL *_publishURL;	// 32 = 0x20
	NSString *_syncToken;	// 36 = 0x24
	NSMutableDictionary *_uniqueIdentifierToLocalUIDMap;	// 40 = 0x28
	NSMutableDictionary *_URLToLocalUIDMap;	// 44 = 0x2c
	NSMutableDictionary *_URLToEtagMap;	// 48 = 0x30
	void *_calCalendar;	// 52 = 0x34
	int _mostRecentEventChangeIndex;	// 56 = 0x38
	int _mostRecentTaskChangeIndex;	// 60 = 0x3c
	int _mostRecentAlarmChangeIndex;	// 64 = 0x40
	int _mostRecentAttendeeChangeIndex;	// 68 = 0x44
	int _mostRecentAttachmentChangeIndex;	// 72 = 0x48
	int _mostRecentRecurChangeIndex;	// 76 = 0x4c
	int _mostRecentEventActionChangeIndex;	// 80 = 0x50
	NSArray *_syncActions;	// 84 = 0x54
	NSDictionary *_hrefsToModDeleteActions;	// 88 = 0x58
	NSDictionary *_uuidsToAddActions;	// 92 = 0x5c
	NSMutableSet *_eventUIDsNeedingAttendeeFixup;	// 96 = 0x60
	NSMutableArray *_outstandingTaskGroups;	// 100 = 0x64
	id _syncActionCompletionBlock;	// 104 = 0x68
@private
	BOOL _wasModifiedLocally;	// 108 = 0x6c
}
@property(readonly, assign) NSString *accountID;	// G=0x36079511; 
@property(readonly, assign) NSSet *allEventURLs;	// G=0x360783e1; 
@property(retain) NSDictionary *bulkRequests;	// G=0x36077d41; S=0x36077d75; 
@property(retain) NSURL *calendarURL;	// G=0x360776c9; S=0x360776d9; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x36077ffd; S=0x3607801d; 
@property(assign) BOOL canBePublished;	// G=0x3607df11; S=0x3607df21; @synthesize=_canBePublished
@property(retain) NSString *color;	// G=0x36077c6d; S=0x36077cc1; 
@property(retain) NSString *ctag;	// G=0x360782f5; S=0x3607836d; 
@property(readonly, assign) NSString *displayColor;	// G=0x360794ed; 
@property(retain) NSString *guid;	// G=0x360775e1; S=0x360775f1; 
@property(readonly, assign) NSDictionary *hrefsToModDeleteActions;	// G=0x3607c675; 
@property(assign) BOOL isAffectingAvailability;	// G=0x3607def1; S=0x3607df01; @synthesize=_isAffectingAvailability
@property(assign) BOOL isDirty;	// G=0x3607ded1; S=0x3607dee1; @synthesize=_isDirty
@property(assign) BOOL isEditable;	// G=0x36078265; S=0x36078291; 
@property(assign) BOOL isEnabled;	// G=0x3607deb1; S=0x3607dec1; @synthesize=_isEnabled
@property(assign) BOOL isEventContainer;	// G=0x36077971; S=0x36077995; 
@property(readonly, assign) BOOL isHidden;	// G=0x360794c9; 
@property(assign) BOOL isNotification;	// G=0x3607de71; S=0x3607de81; @synthesize=_isNotification
@property(assign) BOOL isRenameable;	// G=0x3607de91; S=0x3607dea1; @synthesize=_isRenameable
@property(assign) BOOL isScheduleInbox;	// G=0x360779f1; S=0x360779f5; 
@property(assign) BOOL isScheduleOutbox;	// G=0x3607de51; S=0x3607de61; @synthesize=_isScheduleOutbox
@property(assign) BOOL isSubscribed;	// G=0x3607de31; S=0x3607de41; @synthesize=_isSubscribed
@property(assign) BOOL isTaskContainer;	// G=0x360778f1; S=0x36077915; 
@property(retain) NSString *notes;	// G=0x36077b3d; S=0x36077b71; 
@property(assign) int order;	// G=0x36078145; S=0x36078171; 
@property(retain) NSURL *owner;	// G=0x36077e71; S=0x36077ecd; 
@property(retain) NSString *ownerDisplayName;	// G=0x36077f51; S=0x36077f89; 
@property(readonly, assign) id<CalDAVPrincipal> principal;	// G=0x3607ddb1; @synthesize=_principal
@property(retain) NSURL *publishURL;	// G=0x3607ddf9; S=0x3607de0d; @synthesize=_publishURL
@property(retain) NSString *pushKey;	// G=0x3607ddc1; S=0x3607ddd5; @synthesize=_pushKey
@property(assign) int sharingStatus;	// G=0x360781c5; S=0x36078201; 
@property(readonly, assign) NSArray *syncActions;	// G=0x3607c655; 
@property(retain) NSString *syncToken;	// G=0x3607df31; S=0x3607df45; @synthesize=_syncToken
@property(retain) NSTimeZone *timeZone;	// G=0x36078125; S=0x36078141; 
@property(retain) NSString *title;	// G=0x360779f9; S=0x36077a31; 
@property(readonly, assign) NSDictionary *uuidsToAddActions;	// G=0x3607c665; 
@property(assign) BOOL wasModifiedLocally;	// G=0x3607df69; S=0x3607df79; @synthesize=_wasModifiedLocally
+ (int)addedCalendars:(id *)calendars inPrincipal:(id)principal;	// 0x36079dcd
+ (BOOL)clearCalendarChangesToIndex:(int)index inPrincipal:(id)principal;	// 0x3607a6f1
+ (int)deletedCalendars:(id *)calendars inPrincipal:(id)principal;	// 0x3607a4e5
+ (int)modifiedCalendars:(id *)calendars inPrincipal:(id)principal;	// 0x3607a1cd
- (void *)initCalCalendarWithTitle:(id)title;	// 0x36079549
- (id)initNotificationCollectionWithPrincipal:(id)principal;	// 0x360772d9
- (id)initWithCalendarURL:(id)calendarURL calCalendar:(void *)calendar principal:(id)principal;	// 0x3607721d
- (id)initWithCalendarURL:(id)calendarURL principal:(id)principal;	// 0x360772b5
- (id)initWithCalendarURL:(id)calendarURL principal:(id)principal title:(id)title;	// 0x36076fb9
- (int)_addAddedItemsOfType:(int)type toArray:(id)array;	// 0x3607ad3d
- (void)_addCalendarItemWithRowID:(int)rowID toArrayIfNeeded:(id)arrayIfNeeded;	// 0x3607abbd
- (id)_calExternalRep;	// 0x36079d69
- (void *)_copyCalItemWithExternalID:(id)externalID;	// 0x360788a1
- (void *)_copyCalItemWithUniqueIdentifier:(id)uniqueIdentifier inCalendar:(void *)calendar orStore:(void *)store;	// 0x36078811
- (id)_copyDeletedEventActions;	// 0x3607baad
- (id)_createActionsForItems:(id)items withAction:(int)action alreadySentItems:(id)items3 shouldSave:(BOOL *)save;	// 0x3607c0a1
- (void)_dropCalStoreContext;	// 0x36079d05
- (void)_fixUpAttendees;	// 0x3607c685
- (int)_gatherDeletedChanges:(/*function-pointer*/ void *)changes inDictionary:(id)dictionary;	// 0x3607b669
- (int)_gatherModifiedEventsInArray:(id)array;	// 0x3607b139
- (int)_gatherModifiedItemsFromCalChangesCall:(/*function-pointer*/ void *)calChangesCall inArray:(id)array;	// 0x3607b019
- (int)_gatherModifiedTasksInArray:(id)array;	// 0x3607b395
- (id)_itemPropertyDictForItemAtIndex:(int)index withChangedIDs:(CFArrayRef)changedIDs withExternalIDs:(CFArrayRef)externalIDs uniqueIdentifiers:(CFArrayRef)identifiers significantAttributeChanges:(CFArrayRef)changes oldCalendarIDs:(CFArrayRef)ids;	// 0x3607a775
- (BOOL)_removeCalendarItemWithURL:(id)url;	// 0x36079225
- (void)_setSupportsEvents:(BOOL)events supportsTodos:(BOOL)todos;	// 0x360778b1
// declared property getter: - (id)accountID;	// 0x36079511
// declared property getter: - (id)allEventURLs;	// 0x360783e1
- (Class)appSpecificCalendarItemClass;	// 0x3607dd95
// declared property getter: - (id)bulkRequests;	// 0x36077d41
// declared property getter: - (id)calendarURL;	// 0x360776c9
// declared property getter: - (id)calendarUserAddresses;	// 0x36077ffd
// declared property getter: - (BOOL)canBePublished;	// 0x3607df11
- (void)clearEventChanges;	// 0x3607bd19
// declared property getter: - (id)color;	// 0x36077c6d
- (id)copyAddedItems;	// 0x3607aef5
- (id)copyAllItems;	// 0x3607a95d
- (id)copyDeletedItems;	// 0x3607bca9
- (id)copyModifiedItems;	// 0x3607b551
// declared property getter: - (id)ctag;	// 0x360782f5
- (void)dealloc;	// 0x36077335
- (void)deleteCalendar;	// 0x36077515
- (BOOL)deleteResourcesAtURLs:(id)urls;	// 0x360793b9
- (id)description;	// 0x36077485
// declared property getter: - (id)displayColor;	// 0x360794ed
- (id)etagsForEventURLs:(id)eventURLs;	// 0x360785e5
- (void)flushCaches;	// 0x3607dca1
- (void *)getCalCalendar;	// 0x360799f9
// declared property getter: - (id)guid;	// 0x360775e1
- (BOOL)hasEvents;	// 0x36079495
// declared property getter: - (id)hrefsToModDeleteActions;	// 0x3607c675
// declared property getter: - (BOOL)isAffectingAvailability;	// 0x3607def1
// declared property getter: - (BOOL)isDirty;	// 0x3607ded1
// declared property getter: - (BOOL)isEditable;	// 0x36078265
// declared property getter: - (BOOL)isEnabled;	// 0x3607deb1
// declared property getter: - (BOOL)isEventContainer;	// 0x36077971
// declared property getter: - (BOOL)isHidden;	// 0x360794c9
// declared property getter: - (BOOL)isNotification;	// 0x3607de71
// declared property getter: - (BOOL)isRenameable;	// 0x3607de91
// declared property getter: - (BOOL)isScheduleInbox;	// 0x360779f1
// declared property getter: - (BOOL)isScheduleOutbox;	// 0x3607de51
// declared property getter: - (BOOL)isSubscribed;	// 0x3607de31
// declared property getter: - (BOOL)isTaskContainer;	// 0x360778f1
- (int)localUIDForUniqueIdentifier:(id)uniqueIdentifier;	// 0x360789cd
// declared property getter: - (id)notes;	// 0x36077b3d
// declared property getter: - (int)order;	// 0x36078145
// declared property getter: - (id)owner;	// 0x36077e71
// declared property getter: - (id)ownerDisplayName;	// 0x36077f51
- (void)prepareMergeSyncActionsWithCompletionBlock:(id)completionBlock;	// 0x3607d679
- (void)prepareSyncActionsWithCompletionBlock:(id)completionBlock;	// 0x3607ca8d
// declared property getter: - (id)principal;	// 0x3607ddb1
// declared property getter: - (id)publishURL;	// 0x3607ddf9
// declared property getter: - (id)pushKey;	// 0x3607ddc1
- (id)removeInvitationsForItemWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x36078d09
// declared property setter: - (void)setBulkRequests:(id)requests;	// 0x36077d75
// declared property setter: - (void)setCalendarURL:(id)url;	// 0x360776d9
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x3607801d
// declared property setter: - (void)setCanBePublished:(BOOL)published;	// 0x3607df21
// declared property setter: - (void)setColor:(id)color;	// 0x36077cc1
// declared property setter: - (void)setCtag:(id)ctag;	// 0x3607836d
- (BOOL)setEtag:(id)etag forEventAtURL:(id)url;	// 0x36078b69
// declared property setter: - (void)setGuid:(id)guid;	// 0x360775f1
// declared property setter: - (void)setIsAffectingAvailability:(BOOL)availability;	// 0x3607df01
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x3607dee1
// declared property setter: - (void)setIsEditable:(BOOL)editable;	// 0x36078291
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x3607dec1
// declared property setter: - (void)setIsEventContainer:(BOOL)container;	// 0x36077995
// declared property setter: - (void)setIsNotification:(BOOL)notification;	// 0x3607de81
// declared property setter: - (void)setIsRenameable:(BOOL)renameable;	// 0x3607dea1
// declared property setter: - (void)setIsScheduleInbox:(BOOL)inbox;	// 0x360779f5
// declared property setter: - (void)setIsScheduleOutbox:(BOOL)outbox;	// 0x3607de61
// declared property setter: - (void)setIsSubscribed:(BOOL)subscribed;	// 0x3607de41
// declared property setter: - (void)setIsTaskContainer:(BOOL)container;	// 0x36077915
// declared property setter: - (void)setNotes:(id)notes;	// 0x36077b71
// declared property setter: - (void)setOrder:(int)order;	// 0x36078171
// declared property setter: - (void)setOwner:(id)owner;	// 0x36077ecd
// declared property setter: - (void)setOwnerDisplayName:(id)name;	// 0x36077f89
// declared property setter: - (void)setPublishURL:(id)url;	// 0x3607de0d
// declared property setter: - (void)setPushKey:(id)key;	// 0x3607ddd5
- (BOOL)setScheduleTag:(id)tag forEventAtURL:(id)url;	// 0x36078c55
// declared property setter: - (void)setSharingStatus:(int)status;	// 0x36078201
// declared property setter: - (void)setSyncToken:(id)token;	// 0x3607df45
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x36078141
// declared property setter: - (void)setTitle:(id)title;	// 0x36077a31
- (BOOL)setURL:(id)url forResourceWithUUID:(id)uuid;	// 0x36078a0d
- (void)setUniqueIdentifier:(id)identifier forLocalUID:(int)localUID;	// 0x36078961
// declared property setter: - (void)setWasModifiedLocally:(BOOL)locally;	// 0x3607df79
// declared property getter: - (int)sharingStatus;	// 0x360781c5
// declared property getter: - (id)syncActions;	// 0x3607c655
- (void)syncDidFinishWithError:(id)sync;	// 0x3607dd85
// declared property getter: - (id)syncToken;	// 0x3607df31
// declared property getter: - (id)timeZone;	// 0x36078125
// declared property getter: - (id)title;	// 0x360779f9
- (BOOL)updateResourcesFromServer:(id)server;	// 0x36078ec9
// declared property getter: - (id)uuidsToAddActions;	// 0x3607c665
// declared property getter: - (BOOL)wasModifiedLocally;	// 0x3607df69
@end

