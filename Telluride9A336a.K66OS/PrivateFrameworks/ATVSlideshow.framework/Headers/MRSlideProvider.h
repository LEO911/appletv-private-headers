/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "MRLoadable.h"
#import "MRRenderable.h"
#import "ATVSlideshow-Structs.h"
#import <NSObject.h> // Unknown library

@class MCSlide, MRLayerEffect, NSLock, NSDictionary, MRFrame, NSString, MRImage, NSInvocationOperation, MRLayer;

@interface MRSlideProvider : NSObject <MRLoadable, MRRenderable> {
	CGSize mDefaultSize;	// 4 = 0x4
	float mStillTime;	// 12 = 0xc
	NSString *mImageSizeScript;	// 16 = 0x10
	NSDictionary *mEffectAttributes;	// 20 = 0x14
	NSString *mShowTimeScript;	// 24 = 0x18
	NSInvocationOperation *mPreloadOperation;	// 28 = 0x1c
	NSLock *mPreloadOperationLock;	// 32 = 0x20
	MRFrame *mFrame;	// 36 = 0x24
	MRImage *mOriginalImage;	// 40 = 0x28
	MRImage *mOutputImage;	// 44 = 0x2c
	CGSize mRequestedSize;	// 48 = 0x30
	double mShowTime;	// 56 = 0x38
	double mShowDuration;	// 64 = 0x40
	MRLayerEffect *mEffectLayer;	// 72 = 0x48
	MCSlide *mSlide;	// 76 = 0x4c
	int mKenBurnsType;	// 80 = 0x50
	NSString *mAssetPath;	// 84 = 0x54
	float mOriginalImageAspectRatio;	// 88 = 0x58
	MRLayer *mSlideLayer;	// 92 = 0x5c
	CGSize mImageSize;	// 96 = 0x60
	CGSize mLastImageSize;	// 104 = 0x68
	double mLastTime;	// 112 = 0x70
	CGSize mLastDaSize;	// 120 = 0x78
	CGSize mSizeFactor;	// 128 = 0x80
	MCSlide *mSlideCopy;	// 136 = 0x88
	unsigned mSlideIndex;	// 140 = 0x8c
	unsigned mFlags;	// 144 = 0x90
}
@property(assign, nonatomic) CGSize defaultSize;	// G=0x3438e735; S=0x3438aaa1; @synthesize=mDefaultSize
@property(retain, nonatomic) NSDictionary *effectAttributes;	// G=0x3438e781; S=0x3438ac1d; @synthesize=mEffectAttributes
@property(readonly, assign) MRFrame *frame;	// G=0x3438e911; @synthesize=mFrame
@property(readonly, assign) float imageAspectRatio;	// G=0x3438aa91; 
@property(copy, nonatomic) NSString *imageSizeScript;	// G=0x3438e771; S=0x3438abad; @synthesize=mImageSizeScript
@property(readonly, assign) BOOL isAlphaFriendly;	// G=0x3438c75d; 
@property(readonly, assign) BOOL isInfinite;	// G=0x3438c761; 
@property(readonly, assign) BOOL isLoaded;	// G=0x3438ace5; 
@property(assign, nonatomic) BOOL isMonochromatic;	// G=0x3438aaf5; S=0x3438ab09; 
@property(readonly, assign) BOOL isNative3D;	// G=0x3438c68d; 
@property(readonly, assign) BOOL isOpaque;	// G=0x3438c691; 
@property(assign, nonatomic) BOOL isPlaying;	// G=0x3438acd1; S=0x3438b819; 
@property(assign) BOOL isStill;	// G=0x3438ac75; S=0x3438ac89; 
@property(assign) int kenBurnsType;	// G=0x3438e8f1; S=0x3438e901; @synthesize=mKenBurnsType
@property(readonly, assign) CGSize requestedSize;	// G=0x3438e895; @synthesize=mRequestedSize
@property(assign) double showDuration;	// G=0x3438e82d; S=0x3438e861; @synthesize=mShowDuration
@property(assign) double showTime;	// G=0x3438e7c5; S=0x3438e7f9; @synthesize=mShowTime
@property(copy, nonatomic) NSString *showTimeScript;	// G=0x3438e791; S=0x3438e7a1; @synthesize=mShowTimeScript
@property(assign) CGSize sizeFactor;	// G=0x3438e8b1; S=0x3438e8cd; @synthesize=mSizeFactor
@property(retain, nonatomic) MCSlide *slide;	// G=0x3438e8e1; S=0x3438b4bd; @synthesize=mSlide
@property(assign) float stillTime;	// G=0x3438e751; S=0x3438e761; @synthesize=mStillTime
@property(assign) double time;	// G=0x3438b8f5; S=0x3438b909; 
@property(assign) BOOL useMipmapping;	// G=0x3438ab51; S=0x3438ab65; 
+ (void)applyKenBurnsForSlide:(id)slide inPlug:(id)plug forSize:(CGSize)size atTime:(double)time withTargetSize:(CGSize)targetSize kenBurnsType:(int)type translation:(CGPoint *)translation scale:(float *)scale rotation:(float *)rotation;	// 0x3438e921
- (id)initWithEffectLayer:(id)effectLayer;	// 0x3438a62d
- (void)_computeImageSizeInContext:(id)context withArguments:(id)arguments;	// 0x3438c765
- (BOOL)beginLiveUpdate;	// 0x3438b9ed
- (void)cancelLoading;	// 0x3438c615
- (void)cleanup;	// 0x3438a775
- (void)dealloc;	// 0x3438a6f5
// declared property getter: - (CGSize)defaultSize;	// 0x3438e735
// declared property getter: - (id)effectAttributes;	// 0x3438e781
- (BOOL)endLiveUpdate;	// 0x3438ba09
- (void)finalize;	// 0x3438a735
// declared property getter: - (id)frame;	// 0x3438e911
- (CGSize)framedImageSizeAtIndex:(unsigned long)index aspectRatio:(float)ratio;	// 0x3438ad39
// declared property getter: - (float)imageAspectRatio;	// 0x3438aa91
// declared property getter: - (id)imageSizeScript;	// 0x3438e771
// declared property getter: - (BOOL)isAlphaFriendly;	// 0x3438c75d
// declared property getter: - (BOOL)isInfinite;	// 0x3438c761
// declared property getter: - (BOOL)isLoaded;	// 0x3438ace5
- (BOOL)isLoadedForTime:(double)time;	// 0x3438ba25
// declared property getter: - (BOOL)isMonochromatic;	// 0x3438aaf5
// declared property getter: - (BOOL)isNative3D;	// 0x3438c68d
// declared property getter: - (BOOL)isOpaque;	// 0x3438c691
// declared property getter: - (BOOL)isPlaying;	// 0x3438acd1
// declared property getter: - (BOOL)isStill;	// 0x3438ac75
// declared property getter: - (int)kenBurnsType;	// 0x3438e8f1
- (void)loadForTime:(double)time inContext:(id)context withArguments:(id)arguments now:(BOOL)now;	// 0x3438ba39
- (void)loadWithArguments:(id)arguments;	// 0x3438c081
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x3438a8f5
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3438e5f9
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3438d0b5
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3438d3d9
// declared property getter: - (CGSize)requestedSize;	// 0x3438e895
- (id)retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3438d3ed
// declared property setter: - (void)setDefaultSize:(CGSize)size;	// 0x3438aaa1
// declared property setter: - (void)setEffectAttributes:(id)attributes;	// 0x3438ac1d
// declared property setter: - (void)setImageSizeScript:(id)script;	// 0x3438abad
// declared property setter: - (void)setIsMonochromatic:(BOOL)monochromatic;	// 0x3438ab09
// declared property setter: - (void)setIsPlaying:(BOOL)playing;	// 0x3438b819
// declared property setter: - (void)setIsStill:(BOOL)still;	// 0x3438ac89
// declared property setter: - (void)setKenBurnsType:(int)type;	// 0x3438e901
// declared property setter: - (void)setShowDuration:(double)duration;	// 0x3438e861
// declared property setter: - (void)setShowTime:(double)time;	// 0x3438e7f9
// declared property setter: - (void)setShowTimeScript:(id)script;	// 0x3438e7a1
// declared property setter: - (void)setSizeFactor:(CGSize)factor;	// 0x3438e8cd
// declared property setter: - (void)setSlide:(id)slide;	// 0x3438b4bd
// declared property setter: - (void)setStillTime:(float)time;	// 0x3438e761
// declared property setter: - (void)setTime:(double)time;	// 0x3438b909
// declared property setter: - (void)setUseMipmapping:(BOOL)mipmapping;	// 0x3438ab65
// declared property getter: - (double)showDuration;	// 0x3438e82d
// declared property getter: - (double)showTime;	// 0x3438e7c5
// declared property getter: - (id)showTimeScript;	// 0x3438e791
// declared property getter: - (CGSize)sizeFactor;	// 0x3438e8b1
// declared property getter: - (id)slide;	// 0x3438e8e1
// declared property getter: - (float)stillTime;	// 0x3438e751
// declared property getter: - (double)time;	// 0x3438b8f5
- (CGSize)unframedImageSizeForAspectRatio:(float)aspectRatio frameID:(id)anId andFrameAttributes:(id)attributes atIndex:(unsigned long)index framedImageSize:(CGSize *)size;	// 0x3438af75
- (void)unload;	// 0x3438c38d
- (void)updateShowTimeAndDurationWithPlug:(id)plug andAttributes:(id)attributes;	// 0x3438b1d5
- (BOOL)updateStuffWithAssetManager:(id)assetManager;	// 0x3438cc51
// declared property getter: - (BOOL)useMipmapping;	// 0x3438ab51
@end

