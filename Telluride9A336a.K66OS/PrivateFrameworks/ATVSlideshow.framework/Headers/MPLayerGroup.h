/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "NSCoding.h"
#import "NSCopying.h"
#import "MPActionSupport.h"
#import "MPAnimationSupport.h"
#import "ATVSlideshow-Structs.h"
#import "MPLayerableSupportInternal.h"
#import "MPAudioSupport.h"
#import "MPActionableSupport.h"
#import "MPGeometrySupport.h"
#import "MPActionableSupportInternal.h"
#import "MPLayerableSupport.h"
#import <NSObject.h> // Unknown library
#import "MPTimingSupport.h"
#import "MPNavigatorSupportInternal.h"
#import "MPNavigatorSupport.h"
#import "MPAutomaticLayerSupport.h"
#import "MPManualLayerSupport.h"

@class MCPlugParallel, NSArray, MPLayerGroupInternal, NSMutableDictionary, NSMutableArray, MPAudioPlaylist, MCContainerParallelizer;

@interface MPLayerGroup : NSObject <MPActionableSupportInternal, MPNavigatorSupportInternal, MPLayerableSupportInternal, NSCoding, NSCopying, MPAnimationSupport, MPActionableSupport, MPAudioSupport, MPLayerableSupport, MPNavigatorSupport, MPGeometrySupport, MPTimingSupport, MPActionSupport, MPAutomaticLayerSupport, MPManualLayerSupport> {
	MPLayerGroupInternal *_internal;	// 4 = 0x4
	NSMutableArray *_userProvidedVideoPaths;	// 8 = 0x8
	NSMutableArray *_userProvidedAudioPaths;	// 12 = 0xc
	MCPlugParallel *_plug;	// 16 = 0x10
	MCContainerParallelizer *_parallelizer;	// 20 = 0x14
	MPAudioPlaylist *_audioPlaylist;	// 24 = 0x18
	NSMutableArray *_layers;	// 28 = 0x1c
	NSMutableDictionary *_layerDictionary;	// 32 = 0x20
	id _parent;	// 36 = 0x24
	NSMutableDictionary *_authoringOptions;	// 40 = 0x28
	NSMutableDictionary *_animationPaths;	// 44 = 0x2c
	NSMutableDictionary *_actions;	// 48 = 0x30
}
@property(readonly, retain) NSMutableDictionary *actions;	// G=0x342d70c5; converted property
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x342d6369; converted property
@property(copy) NSArray *audioPaths;	// G=0x342d553d; S=0x342d554d; @dynamic
@property(retain) MPAudioPlaylist *audioPlaylist;	// G=0x342d4275; S=0x342d4285; converted property
@property(retain) id authoredVersionInfo;	// G=0x342da765; S=0x342da785; converted property
@property(retain) NSMutableDictionary *authoringOptions;	// G=0x342d2cbd; S=0x342d2e79; converted property
@property(assign) BOOL autoAdjustDuration;	// G=0x342d5ca1; S=0x342d5cc5; @dynamic
@property(assign) CGColorRef backgroundCGColor;	// G=0x342d47ad; S=0x342d4809; @dynamic
@property(assign) double duration;	// G=0x342d3e05; S=0x342d3ead; converted property
@property(assign) double durationPadding;	// G=0x342d96ad; S=0x342d96cd; converted property
@property(assign) BOOL isTriggered;	// G=0x342d40d5; S=0x342d40f9; converted property
@property(assign) int lastSlideUsed;	// G=0x342db8e9; S=0x342db855; converted property
@property(readonly, retain) NSMutableArray *layers;	// G=0x342d30b9; converted property
@property(assign) int loopingMode;	// G=0x342d46a1; S=0x342d46c1; @dynamic
@property(assign) double numberOfLoops;	// G=0x342d56f5; S=0x342d5715; converted property
@property(assign) float opacity;	// G=0x342d66a5; S=0x342d66c5; converted property
@property(retain) id parent;	// G=0x342d4265; S=0x342d7df9; converted property
@property(assign) double phaseInDuration;	// G=0x342d58fd; S=0x342d591d; converted property
@property(assign) double phaseOutDuration;	// G=0x342d5ac5; S=0x342d5ae5; converted property
@property(retain) MCPlugParallel *plug;	// G=0x342d7361; S=0x342d8419; converted property
@property(assign) CGPoint position;	// G=0x342d67b5; S=0x342d67e5; converted property
@property(assign) float rotationAngle;	// G=0x342d6a01; S=0x342d6a21; converted property
@property(assign) float scale;	// G=0x342d6e6d; S=0x342d6e8d; converted property
@property(assign) CGSize size;	// G=0x342d6b11; S=0x342d6b41; converted property
@property(assign) BOOL startsPaused;	// G=0x342d419d; S=0x342d41c1; converted property
@property(assign) double timeIn;	// G=0x342d3ff9; S=0x342d4019; converted property
@property(copy) NSArray *videoPaths;	// G=0x342d52c9; S=0x342d53b9; @dynamic
@property(assign) float xRotationAngle;	// G=0x342d6c4d; S=0x342d6c6d; converted property
@property(assign) float yRotationAngle;	// G=0x342d6d5d; S=0x342d6d7d; converted property
@property(assign) int zIndex;	// G=0x342d6f7d; S=0x342d6ff9; converted property
@property(assign) float zPosition;	// G=0x342d68f1; S=0x342d6911; converted property
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x342d072d
- (id)init;	// 0x342d07b5
- (id)initWithCoder:(id)coder;	// 0x342d159d
- (id)absoluteVideoPaths;	// 0x342d7a59
- (id)actionForKey:(id)key;	// 0x342d70d5
- (id)actionableObjectForID:(id)anId;	// 0x342db955
// converted property getter: - (id)actions;	// 0x342d70c5
- (void)addAudioPath:(id)path;	// 0x342d4f65
- (void)addAudioPaths:(id)paths;	// 0x342d5041
- (void)addLayer:(id)layer;	// 0x342d30c9
- (void)addLayers:(id)layers;	// 0x342d3125
- (void)addVideoPath:(id)path;	// 0x342d4c95
- (void)addVideoPaths:(id)paths;	// 0x342d4dd1
- (id)allEffectContainers;	// 0x342d7371
- (id)allEffects;	// 0x342d7449
- (id)allSlides:(BOOL)slides;	// 0x342d7529
- (id)allSongs;	// 0x342d76c1
- (id)animationPathForKey:(id)key;	// 0x342d6379
// converted property getter: - (id)animationPaths;	// 0x342d6369
// declared property getter: - (id)audioPaths;	// 0x342d553d
// converted property getter: - (id)audioPlaylist;	// 0x342d4275
// converted property getter: - (id)authoredVersionInfo;	// 0x342da765
- (id)authoringOptionForKey:(id)key;	// 0x342d2e59
// converted property getter: - (id)authoringOptions;	// 0x342d2cbd
// declared property getter: - (BOOL)autoAdjustDuration;	// 0x342d5ca1
// declared property getter: - (CGColorRef)backgroundCGColor;	// 0x342d47ad
- (void)cachePaths;	// 0x342d7ca1
- (void)cleanup;	// 0x342d8fc9
- (void)configureActions;	// 0x342d7ee5
- (void)copyActions:(id)actions;	// 0x342da68d
- (void)copyAnimationPaths:(id)paths;	// 0x342da5b5
- (void)copyAudioPlaylist:(id)playlist;	// 0x342da571
- (void)copyLayerDictionary:(id)dictionary;	// 0x342da499
- (void)copyLayers:(id)layers;	// 0x342da391
- (void)copyStruct:(id)aStruct;	// 0x342d9fa9
- (id)copyWithZone:(NSZone *)zone;	// 0x342d2479
- (int)countOfLayers;	// 0x342dbc5d
- (void)dealloc;	// 0x342d261d
- (BOOL)detectFacesInBackground;	// 0x342dbc21
// converted property getter: - (double)duration;	// 0x342d3e05
// converted property getter: - (double)durationPadding;	// 0x342d96ad
- (void)encodeWithCoder:(id)coder;	// 0x342d0b8d
- (void)finalize;	// 0x342d25dd
- (void)insertLayers:(id)layers atIndex:(int)index;	// 0x342d3165
- (void)insertObject:(id)object inLayersAtIndex:(int)index;	// 0x342dbd61
// converted property getter: - (BOOL)isTriggered;	// 0x342d40d5
- (id)keyedLayers;	// 0x342d5dc9
// converted property getter: - (int)lastSlideUsed;	// 0x342db8e9
- (id)layerForKey:(id)key;	// 0x342d5dd9
- (id)layerKey;	// 0x342d5d51
- (id)layerKeyDictionary;	// 0x342dbc01
// converted property getter: - (id)layers;	// 0x342d30b9
- (BOOL)layersCanPositionZIndex;	// 0x342d7c89
// declared property getter: - (int)loopingMode;	// 0x342d46a1
- (id)mainLayers;	// 0x342d562d
- (void)moveLayersFromIndices:(id)indices toIndex:(int)index;	// 0x342d3a69
- (id)navigatorKey;	// 0x342d2791
- (BOOL)nearingEndWithOptions:(id)options;	// 0x342da7a5
- (BOOL)needsToRemoveFadeIn;	// 0x342db235
// converted property getter: - (double)numberOfLoops;	// 0x342d56f5
- (id)objectID;	// 0x342d7c49
- (id)objectInLayersAtIndex:(int)index;	// 0x342dbc7d
- (id)observer;	// 0x342d7d9d
// converted property getter: - (float)opacity;	// 0x342d66a5
- (id)orderedVideoPaths;	// 0x342d52d9
// converted property getter: - (id)parent;	// 0x342d4265
- (id)parentDocument;	// 0x342d7bb1
// converted property getter: - (double)phaseInDuration;	// 0x342d58fd
// converted property getter: - (double)phaseOutDuration;	// 0x342d5ac5
// converted property getter: - (id)plug;	// 0x342d7361
- (id)plugID;	// 0x342d7c29
// converted property getter: - (CGPoint)position;	// 0x342d67b5
- (double)posterTime;	// 0x342d7889
- (void)reconfigureLoopingMode;	// 0x342d98d1
- (void)reconnectAll;	// 0x342d9745
- (void)removeActionForKey:(id)key;	// 0x342d729d
- (void)removeAllAudioPaths;	// 0x342d560d
- (void)removeAllLayers;	// 0x342d349d
- (void)removeAllVideoPaths;	// 0x342d55ed
- (void)removeAnimationPathForKey:(id)key;	// 0x342d65cd
- (double)removeFadeInIfNeeded;	// 0x342db4f5
- (void)removeLayerForKey:(id)key;	// 0x342d60a1
- (void)removeLayersAtIndices:(id)indices;	// 0x342d35a9
- (void)removeObjectFromLayersAtIndex:(int)index;	// 0x342dbda1
- (void)removePath:(id)path;	// 0x342d50ed
- (void)removePaths:(id)paths;	// 0x342d522d
- (void)replaceObjectInLayersAtIndex:(int)index withObject:(id)object;	// 0x342dbddd
- (void)resetDuration;	// 0x342d92ed
// converted property getter: - (float)rotationAngle;	// 0x342d6a01
// converted property getter: - (float)scale;	// 0x342d6e6d
- (void)setAction:(id)action forKey:(id)key;	// 0x342d70f5
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x342d6399
// declared property setter: - (void)setAudioPaths:(id)paths;	// 0x342d554d
// converted property setter: - (void)setAudioPlaylist:(id)playlist;	// 0x342d4285
// converted property setter: - (void)setAuthoredVersionInfo:(id)info;	// 0x342da785
- (void)setAuthoringOption:(id)option forKey:(id)key;	// 0x342d2ccd
// converted property setter: - (void)setAuthoringOptions:(id)options;	// 0x342d2e79
// declared property setter: - (void)setAutoAdjustDuration:(BOOL)duration;	// 0x342d5cc5
// declared property setter: - (void)setBackgroundCGColor:(CGColorRef)color;	// 0x342d4809
- (void)setBackgroundColorString:(id)string;	// 0x342d47cd
- (void)setContainer:(id)container;	// 0x342d8119
// converted property setter: - (void)setDuration:(double)duration;	// 0x342d3ead
// converted property setter: - (void)setDurationPadding:(double)padding;	// 0x342d96cd
- (void)setIsDocumentLayerGroup:(BOOL)group;	// 0x342db935
// converted property setter: - (void)setIsTriggered:(BOOL)triggered;	// 0x342d40f9
// converted property setter: - (void)setLastSlideUsed:(int)used;	// 0x342db855
- (void)setLayer:(id)layer forKey:(id)key;	// 0x342d5df9
// declared property setter: - (void)setLoopingMode:(int)mode;	// 0x342d46c1
// converted property setter: - (void)setNumberOfLoops:(double)loops;	// 0x342d5715
// converted property setter: - (void)setOpacity:(float)opacity;	// 0x342d66c5
// converted property setter: - (void)setParent:(id)parent;	// 0x342d7df9
// converted property setter: - (void)setPhaseInDuration:(double)duration;	// 0x342d591d
// converted property setter: - (void)setPhaseOutDuration:(double)duration;	// 0x342d5ae5
// converted property setter: - (void)setPlug:(id)plug;	// 0x342d8419
// converted property setter: - (void)setPosition:(CGPoint)position;	// 0x342d67e5
// converted property setter: - (void)setRotationAngle:(float)angle;	// 0x342d6a21
// converted property setter: - (void)setScale:(float)scale;	// 0x342d6e8d
// converted property setter: - (void)setSize:(CGSize)size;	// 0x342d6b41
// converted property setter: - (void)setStartsPaused:(BOOL)paused;	// 0x342d41c1
- (unsigned)setStyleID:(id)anId;	// 0x342d280d
// converted property setter: - (void)setTimeIn:(double)anIn;	// 0x342d4019
// declared property setter: - (void)setVideoPaths:(id)paths;	// 0x342d53b9
// converted property setter: - (void)setXRotationAngle:(float)angle;	// 0x342d6c6d
// converted property setter: - (void)setYRotationAngle:(float)angle;	// 0x342d6d7d
// converted property setter: - (void)setZIndex:(int)index;	// 0x342d6ff9
// converted property setter: - (void)setZPosition:(float)position;	// 0x342d6911
// converted property getter: - (CGSize)size;	// 0x342d6b11
// converted property getter: - (BOOL)startsPaused;	// 0x342d419d
- (id)styleID;	// 0x342d27e1
// converted property getter: - (double)timeIn;	// 0x342d3ff9
- (id)uuid;	// 0x342d7c69
- (id)valueInLayersWithName:(id)name;	// 0x342dbc9d
- (double)videoDuration;	// 0x342d3cc1
// declared property getter: - (id)videoPaths;	// 0x342d52c9
// converted property getter: - (float)xRotationAngle;	// 0x342d6c4d
// converted property getter: - (float)yRotationAngle;	// 0x342d6d5d
// converted property getter: - (int)zIndex;	// 0x342d6f7d
// converted property getter: - (float)zPosition;	// 0x342d68f1
@end

