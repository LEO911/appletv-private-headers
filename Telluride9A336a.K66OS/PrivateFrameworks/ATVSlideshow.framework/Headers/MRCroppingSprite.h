/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import <NSObject.h> // Unknown library
#import "ATVSlideshow-Structs.h"


@interface MRCroppingSprite : NSObject {
	CGPoint mPosition;	// 4 = 0x4
	CGSize mHalfSize;	// 12 = 0xc
	float mRotation;	// 20 = 0x14
	CGRect mInnerRect;	// 24 = 0x18
	CGRect mOuterRect;	// 40 = 0x28
	BOOL mPreservesImageAspectRatio;	// 56 = 0x38
	BOOL mHitIsActive;	// 57 = 0x39
	BOOL mNeedsInSpriteCoordinates;	// 58 = 0x3a
	CGSize mSpriteCoordinatesFactor;	// 60 = 0x3c
	CGPoint mSpriteCoordinatesOffset;	// 68 = 0x44
}
@property(readonly, assign) CGSize halfSize;	// G=0x34303ec1; @synthesize=mHalfSize
@property(assign) BOOL hitIsActive;	// G=0x34303f55; S=0x34303f65; @synthesize=mHitIsActive
@property(assign, nonatomic) CGRect innerRect;	// G=0x34303eed; S=0x34301d75; @synthesize=mInnerRect
@property(assign) BOOL needsInSpriteCoordinates;	// G=0x34303f75; S=0x34303f85; @synthesize=mNeedsInSpriteCoordinates
@property(assign, nonatomic) CGRect outerRect;	// G=0x34303f11; S=0x34301e39; @synthesize=mOuterRect
@property(readonly, assign) CGPoint position;	// G=0x34303ea5; @synthesize=mPosition
@property(assign) BOOL preservesImageAspectRatio;	// G=0x34303f35; S=0x34303f45; @synthesize=mPreservesImageAspectRatio
@property(readonly, assign) float rotation;	// G=0x34303edd; @synthesize=mRotation
@property(assign) CGSize spriteCoordinatesFactor;	// G=0x34303f95; S=0x34303fb1; @synthesize=mSpriteCoordinatesFactor
@property(assign) CGPoint spriteCoordinatesOffset;	// G=0x34303fc5; S=0x34303fe1; @synthesize=mSpriteCoordinatesOffset
+ (void)renderDumbImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size;	// 0x34303531
+ (void)renderDumbImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x34303569
+ (void)renderImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size;	// 0x34303749
+ (void)renderImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size withReferenceAspectRatio:(float)referenceAspectRatio andJustifications:(CGPoint)justifications;	// 0x34303bb1
+ (void)renderImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x34303781
+ (void)renderImage:(id)image withMask:(id)mask inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x34303965
- (id)init;	// 0x34301a55
- (id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation context:(id)context;	// 0x34301aed
- (id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation innerRect:(CGRect)rect context:(id)context;	// 0x34301b3d
- (id)initWithPosition:(CGPoint)position size:(CGSize)size zRotation:(float)rotation innerRect:(CGRect)rect outerRect:(CGRect)rect5 context:(id)context;	// 0x34301bbd
- (void)fakeRenderInContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x34301cb9
- (void)getOpaquePosition:(CGPoint *)position andHalfSize:(CGSize *)size;	// 0x34301efd
- (BOOL)getVerticesCoordinates:(CGPoint (*)[4])coordinates withMatrix:(float [16])matrix;	// 0x34303401
// declared property getter: - (CGSize)halfSize;	// 0x34303ec1
- (BOOL)hitAtPoint:(CGPoint)point withInverseMatrix:(float [16])inverseMatrix localPoint:(CGPoint *)point3;	// 0x343032cd
// declared property getter: - (BOOL)hitIsActive;	// 0x34303f55
// declared property getter: - (CGRect)innerRect;	// 0x34303eed
// declared property getter: - (BOOL)needsInSpriteCoordinates;	// 0x34303f75
// declared property getter: - (CGRect)outerRect;	// 0x34303f11
// declared property getter: - (CGPoint)position;	// 0x34303ea5
// declared property getter: - (BOOL)preservesImageAspectRatio;	// 0x34303f35
- (void)renderDumbImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size;	// 0x34302079
- (void)renderDumbImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x343020b1
- (void)renderImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size;	// 0x34302135
- (void)renderImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size withReferenceAspectRatio:(float)referenceAspectRatio andJustifications:(CGPoint)justifications;	// 0x34302271
- (void)renderImage:(id)image inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x3430216d
- (void)renderImage:(id)image withMask:(id)mask inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x343021f1
- (void)renderImageInner:(id)inner inContext:(id)context;	// 0x343022f5
- (void)renderImageInner:(id)inner inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x343031b9
- (void)renderImageMiddle:(id)middle inContext:(id)context;	// 0x343026e5
- (void)renderImageMiddle:(id)middle inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x34303215
- (void)renderImageOuter:(id)outer inContext:(id)context;	// 0x34302c71
- (void)renderImageOuter:(id)outer inContext:(id)context atPosition:(CGPoint)position andSize:(CGSize)size zRotation:(float)rotation;	// 0x34303271
- (void)reset;	// 0x34301c5d
// declared property getter: - (float)rotation;	// 0x34303edd
// declared property setter: - (void)setHitIsActive:(BOOL)active;	// 0x34303f65
// declared property setter: - (void)setInnerRect:(CGRect)rect;	// 0x34301d75
// declared property setter: - (void)setNeedsInSpriteCoordinates:(BOOL)spriteCoordinates;	// 0x34303f85
// declared property setter: - (void)setOuterRect:(CGRect)rect;	// 0x34301e39
// declared property setter: - (void)setPreservesImageAspectRatio:(BOOL)ratio;	// 0x34303f45
// declared property setter: - (void)setSpriteCoordinatesFactor:(CGSize)factor;	// 0x34303fb1
// declared property setter: - (void)setSpriteCoordinatesOffset:(CGPoint)offset;	// 0x34303fe1
// declared property getter: - (CGSize)spriteCoordinatesFactor;	// 0x34303f95
// declared property getter: - (CGPoint)spriteCoordinatesOffset;	// 0x34303fc5
@end

