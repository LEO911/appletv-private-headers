/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <BasicAccount.h> // Unknown library
#import "DataAccess-Structs.h"
#import "AccountCreationProtocol.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : BasicAccount <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	int _dataclasses;	// 24 = 0x18
	BOOL _hasDirtyBits;	// 28 = 0x1c
	BOOL _hasInitted;	// 29 = 0x1d
	BOOL _shouldAutodiscoverPrincipalURL;	// 30 = 0x1e
	BOOL _shouldPromptForPassword;	// 31 = 0x1f
	BOOL _shouldFailAllTasks;	// 32 = 0x20
	BOOL _shouldUseOpportunisticSockets;	// 33 = 0x21
	int _originalDataclasses;	// 36 = 0x24
	CFDictionaryRef _changeTypesByDataclass;	// 40 = 0x28
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 44 = 0x2c
	DASettingsTemplate *_settingsTemplate;	// 48 = 0x30
	DAStatusReport *_statusReport;	// 52 = 0x34
	CFDictionaryRef _consumers;	// 56 = 0x38
	CFURLStorageSessionRef _storageSession;	// 60 = 0x3c
}
@property(copy) NSString *accountDescription;	// G=0x345e8b79; S=0x345e9279; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x345e87ed; S=0x345ead91; 
@property(copy) NSString *emailAddress;	// G=0x345ea245; S=0x345ea291; 
@property(copy) NSArray *emailAddresses;	// G=0x345ea2d9; S=0x345ea311; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x345eb2c1; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x345ea4ad; 
@property(readonly, assign) BOOL hasDirtyBits;	// G=0x345ea791; converted property
@property(copy) NSString *host;	// G=0x345ea11d; S=0x345ea169; 
@property(readonly, assign) NSData *identityPersist;	// G=0x345eaa09; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x345ead35; 
@property(copy) NSString *password;	// G=0x345e9e59; S=0x345e9fa1; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x345e864d; 
@property(assign) int port;	// G=0x345ea541; S=0x345ea58d; 
@property(copy) NSURL *principalURL;	// G=0x345ea6b5; S=0x345ea701; 
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x345e923d; 
@property(copy) NSString *scheme;	// G=0x345ea621; S=0x345ea66d; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x345eb2f1; S=0x345eb305; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x345eb2d1; S=0x345eb2e1; @synthesize=_shouldAutodiscoverPrincipalURL
@property(assign) BOOL shouldFailAllTasks;	// G=0x345eb339; S=0x345eb349; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x345e9e39; S=0x345e9e49; 
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x345eb359; S=0x345eb369; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x345ea419; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x345eb329; @synthesize=_statusReport
@property(readonly, assign) NSString *tag;	// G=0x345e924d; 
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x345f68c9; S=0x345f68cd; converted property
@property(assign) BOOL useSSL;	// G=0x345ea1b1; S=0x345ea1fd; 
@property(copy) NSString *user;	// G=0x345ea0fd; S=0x345ea10d; 
@property(copy) NSString *username;	// G=0x345ea069; S=0x345ea0b5; 
@property(retain) id version;	// G=0x345e9fd5; S=0x345ea021; converted property
+ (Class)accountClass;	// 0x345e915d
+ (Class)accountClassWithProperties:(id)properties;	// 0x345e9639
+ (id)basicAccountProperties;	// 0x345e8fd9
+ (Class)classForAccountType:(id)accountType;	// 0x345e9701
+ (Class)clientClass;	// 0x345e9669
+ (Class)daemonClass;	// 0x345e96b5
+ (id)defaultProperties;	// 0x345ead39
+ (id)newAccountOfAccountType:(id)accountType;	// 0x345ead3d
- (id)init;	// 0x345e90b5
- (id)initWithProperties:(id)properties;	// 0x345e8291
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x345eb379
- (id)_exceptionsDict;	// 0x345eab45
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x345ec82d
- (BOOL)_isIdentityManagedByProfile;	// 0x345eab05
- (void)_removeHostsToTrust;	// 0x345e9b85
- (id)_serverSuffixesToAlwaysFail;	// 0x345eb479
- (void)_setPersistentUUID:(id)uuid;	// 0x345e925d
- (void)_setProperties:(id)properties;	// 0x345ea749
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x345e9c8d
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x345e9739
- (int)accountChangeTypeForDataclass:(int)dataclass;	// 0x345e95c1
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x345ea359
// declared property getter: - (id)accountDescription;	// 0x345e8b79
- (id)accountID;	// 0x345e8591
- (int)accountIntPropertyForKey:(id)key;	// 0x345e97a1
- (BOOL)accountNeedsUpgrade;	// 0x345e9bb5
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x345e9b7d
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x345ec9d5
- (void)cancelAllSearchQueries;	// 0x345f4d69
- (void)cancelAutodiscovery;	// 0x345e9b81
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x345eca75
- (void)cancelSearchQuery:(id)query;	// 0x345f4d65
- (void)checkValidityWithConsumer:(id)consumer;	// 0x345e9b35
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x345eb0a1
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x345eb149
- (void)cleanupAccountFiles;	// 0x345eacd9
- (id)consumerForTask:(id)task;	// 0x345e9af1
- (id)contactsFolders;	// 0x345ecaa5
- (CFURLStorageSessionRef)copyStorageSession;	// 0x345eb14d
// declared property getter: - (int)daAccountVersion;	// 0x345e87ed
- (void)dealloc;	// 0x345e8715
- (id)defaultContactsFolder;	// 0x345ecaa1
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x345ea8f1
- (id)defaultEventsFolder;	// 0x345ec9c5
- (id)defaultNotesFolder;	// 0x3460485d
- (id)defaultToDosFolder;	// 0x345f68bd
- (id)deletedItemsFolder;	// 0x345ecb05
- (id)description;	// 0x345ebfad
- (id)domainOnly;	// 0x345e9a95
// declared property getter: - (id)emailAddress;	// 0x345ea245
// declared property getter: - (id)emailAddresses;	// 0x345ea2d9
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x345eb2c1
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x345e92e1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x345ea4ad
- (id)eventsFolders;	// 0x345ec9c9
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x345eab61
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x3460ab55
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x345eb501
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x345ebc79
// converted property getter: - (BOOL)hasDirtyBits;	// 0x345ea791
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x345eadd5
// declared property getter: - (id)host;	// 0x345ea11d
// declared property getter: - (id)identityPersist;	// 0x345eaa09
- (id)inboxFolder;	// 0x345ecafd
- (BOOL)isActiveSyncAccount;	// 0x345eb089
- (BOOL)isCalDAVAccount;	// 0x345eb091
- (BOOL)isCalDAVChildAccount;	// 0x345eb099
- (BOOL)isCardDAVAccount;	// 0x345eb095
// declared property getter: - (BOOL)isChildAccount;	// 0x345ead35
- (BOOL)isDisabled;	// 0x345e8ad1
- (BOOL)isEqualToAccount:(id)account;	// 0x345eafe9
- (BOOL)isHotmailAccount;	// 0x345eb09d
- (BOOL)isLDAPAccount;	// 0x345eb08d
- (int)keychainAccessibilityType;	// 0x345e9f09
- (id)localizedIdenticalAccountFailureMessage;	// 0x345ec03d
- (id)localizedInvalidPasswordMessage;	// 0x345ec0dd
- (BOOL)monitorFolderWithID:(id)anId;	// 0x345ea801
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x345ea7fd
- (id)notesFolders;	// 0x34604861
- (BOOL)originallyEnabledForDADataclass:(int)dadataclass;	// 0x345e95a9
// declared property getter: - (id)password;	// 0x345e9e59
- (void)performSearchQuery:(id)query;	// 0x345f4cc1
// declared property getter: - (id)persistentUUID;	// 0x345e864d
// declared property getter: - (int)port;	// 0x345ea541
// declared property getter: - (id)principalURL;	// 0x345ea6b5
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x345ecb09
- (void)removeClientCertificateData;	// 0x345ea8f5
- (void)removeConsumerForTask:(id)task;	// 0x345e9b15
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x345ec17d
- (void)resetAccountID;	// 0x345e9179
- (BOOL)resetCertWarnings;	// 0x345eaee9
- (void)resetStatusReport;	// 0x345eaf19
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x345e9809
- (void)saveAccountProperties;	// 0x345ea94d
- (void)saveAccountSettings;	// 0x345ead21
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x345ea9bd
// declared property getter: - (id)scheduleIdentifier;	// 0x345e923d
// declared property getter: - (id)scheme;	// 0x345ea621
- (BOOL)searchQueriesRunning;	// 0x345f4d6d
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x345ec9d1
- (id)sentItemsFolder;	// 0x345ecb01
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x345e9761
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x345e9279
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x345e97c9
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x345e9a99
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x345ead91
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x345ea291
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x345ea311
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass changeType:(int)type;	// 0x345e92f9
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x345ea4f9
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x345eaba5
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x345eae21
// declared property setter: - (void)setHost:(id)host;	// 0x345ea169
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x345eaa25
// declared property setter: - (void)setPassword:(id)password;	// 0x345e9fa1
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x345e9f0d
// declared property setter: - (void)setPort:(int)port;	// 0x345ea58d
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x345ea701
// declared property setter: - (void)setScheme:(id)scheme;	// 0x345ea66d
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x345eb305
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x345eb2e1
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x345eb349
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x345e9e49
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x345eb369
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x345ea465
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x345f68cd
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x345ea1fd
// declared property setter: - (void)setUser:(id)user;	// 0x345ea10d
// declared property setter: - (void)setUsername:(id)username;	// 0x345ea0b5
// converted property setter: - (void)setVersion:(id)version;	// 0x345ea021
// declared property getter: - (id)settingsTemplate;	// 0x345eb2f1
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x345eb2d1
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x345eb339
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x345e9e39
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x345eb359
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x345ea419
- (id)spinnerIdentifiers;	// 0x345e95ed
- (id)stateString;	// 0x345e9909
// declared property getter: - (id)statusReport;	// 0x345eb329
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x345e98ad
- (void)stopMonitoringFolders;	// 0x345ea895
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x345ea839
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x345e9299
- (int)supportsEmailFlagging;	// 0x345f4d75
- (int)supportsMailboxSearch;	// 0x345f4d71
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x345e9851
- (id)syncStoreIdentifier;	// 0x345e8705
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x3460ab59
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x345ecaa9
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x345ec9cd
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x34604865
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x345f68c5
// declared property getter: - (id)tag;	// 0x345e924d
- (void)takeValuesFromAccount:(id)account;	// 0x345e9989
- (void)tearDown;	// 0x345ea7a1
- (id)toDosFolders;	// 0x345f68c1
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x345f68c9
- (BOOL)upgradeAccount;	// 0x345e9de1
- (id)urlForKeychain;	// 0x345ea5d5
// declared property getter: - (BOOL)useSSL;	// 0x345ea1b1
// declared property getter: - (id)user;	// 0x345ea0fd
// declared property getter: - (id)username;	// 0x345ea069
- (id)usernameWithoutDomain;	// 0x345e9a85
// converted property getter: - (id)version;	// 0x345e9fd5
@end

