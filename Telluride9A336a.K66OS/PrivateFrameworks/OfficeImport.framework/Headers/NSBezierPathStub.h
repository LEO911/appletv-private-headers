/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


__attribute__((visibility("hidden")))
@interface NSBezierPathStub : NSObject <NSCopying> {
@private
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x34e4da11; S=0x34e4da15; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x34e4e785; converted property
@property(readonly, assign) int elementCount;	// G=0x34c18b81; converted property
@property(assign) float flatness;	// G=0x34c1aac5; S=0x34c1aad5; converted property
@property(assign) unsigned lineCapStyle;	// G=0x34c196ad; S=0x34c194d5; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x34c196c1; S=0x34c1959d; converted property
@property(assign) float lineWidth;	// G=0x34c1aa95; S=0x34c193bd; converted property
@property(assign) float miterLimit;	// G=0x34c1aaa5; S=0x34c1aab5; converted property
@property(assign) unsigned windingRule;	// G=0x34c19111; S=0x34c18f21; converted property
+ (id)bezierPath;	// 0x34c14de9
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x34e4dca1
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x34cfec69
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x34e4dc4d
+ (void)clipRect:(CGRect)rect;	// 0x34c15fbd
+ (CGContextRef)currentCGContext;	// 0x34c15b51
+ (float)defaultFlatness;	// 0x34e4d769
+ (unsigned)defaultLineCapStyle;	// 0x34e4d7a9
+ (unsigned)defaultLineJoinStyle;	// 0x34e4d7c9
+ (float)defaultLineWidth;	// 0x34e4d7e9
+ (float)defaultMiterLimit;	// 0x34e4d749
+ (unsigned)defaultWindingRule;	// 0x34e4d789
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x34e4da19
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x34c17aa5
+ (void)fillRect:(CGRect)rect;	// 0x34e4dbed
+ (float)flatness;	// 0x34e4f17d
+ (void)initialize;	// 0x34cc94b5
+ (unsigned)lineCapStyle;	// 0x34e4f1bd
+ (unsigned)lineJoinStyle;	// 0x34e4f1dd
+ (float)lineWidth;	// 0x34e4f1fd
+ (float)miterLimit;	// 0x34e4f15d
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x34c0f221
+ (void)setDefaultFlatness:(float)flatness;	// 0x34e4d759
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x34e4d799
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x34e4d7b9
+ (void)setDefaultLineWidth:(float)width;	// 0x34e4d7d9
+ (void)setDefaultMiterLimit:(float)limit;	// 0x34e4d739
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x34e4d779
+ (void)setFlatness:(float)flatness;	// 0x34e4f16d
+ (void)setLineCapStyle:(unsigned)style;	// 0x34e4f1ad
+ (void)setLineJoinStyle:(unsigned)style;	// 0x34e4f1cd
+ (void)setLineWidth:(float)width;	// 0x34e4f1ed
+ (void)setMiterLimit:(float)limit;	// 0x34e4f14d
+ (void)setWindingRule:(unsigned)rule;	// 0x34e4f18d
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x34e4da71
+ (void)strokeRect:(CGRect)rect;	// 0x34e4dafd
+ (unsigned)windingRule;	// 0x34e4f19d
- (id)init;	// 0x34c14e21
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x34c186ed
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x34c187e9
- (id)_copyFlattenedPath;	// 0x34e4eafd
- (void)_deviceClosePath;	// 0x34c19c41
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34c18965
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x34c19be5
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x34c185f5
- (void)_doPath;	// 0x34e4eea9
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x34c19125
- (int)_locationOfPoint:(CGPoint)point;	// 0x34e4dd6d
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x34c18c85
- (void)addClip;	// 0x34cfecfd
- (void)appendBezierPath:(id)path;	// 0x34c18aad
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x34e4e2cd
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x34c18315
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x34c18355
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radiusSize:(CGSize)size startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x34d3c0c9
- (void)appendBezierPathWithArcWithRect:(CGPoint)rect rightBottom:(CGPoint)bottom start:(CGPoint)start end:(CGPoint)end clockwise:(BOOL)clockwise;	// 0x34d3bf51
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x34c181cd
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x34c1b38d
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x34c19acd
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x34e4e049
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes;	// 0x34e44a45
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes spacing:(int *)spacing spacingCount:(int)count;	// 0x34e44a49
- (void)attachBezierPath:(id)path;	// 0x34cdbee1
- (id)bezierPathByFlatteningPath;	// 0x34e4eb4d
- (id)bezierPathByReversingPath;	// 0x34e4e8f1
- (CGRect)bounds;	// 0x34e4e6c5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x34e4da11
- (void)closePath;	// 0x34c19c31
- (BOOL)containsPoint:(CGPoint)point;	// 0x34e4dcf9
// converted property getter: - (CGRect)controlPointBounds;	// 0x34e4e785
- (id)copyWithZone:(NSZone *)zone;	// 0x34c1a905
- (CGPoint)currentPoint;	// 0x34cdc081
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34cdbdb5
- (void)dealloc;	// 0x34c0fd89
- (id)description;	// 0x34e4f20d
- (unsigned)elementAtIndex:(int)index;	// 0x34e4e6b1
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x34c18be9
// converted property getter: - (int)elementCount;	// 0x34c18b81
- (BOOL)equalToCurrentPoint:(CGPoint)currentPoint;	// 0x34cdbff1
- (void)fill;	// 0x34c1909d
- (void)finalize;	// 0x34e4f0c5
// converted property getter: - (float)flatness;	// 0x34c1aac5
- (void)flattenIntoPath:(id)path;	// 0x34e4ebe5
- (id)getGlyphs:(id)glyphs :(id)arg2 :(unsigned *)arg3;	// 0x34e44a41
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x34e4d7f9
- (BOOL)isEmpty;	// 0x34c185dd
- (BOOL)isHitByPath:(id)path;	// 0x34e4da01
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x34e4dce1
- (BOOL)isHitByRect:(CGRect)rect;	// 0x34e4d9fd
- (BOOL)isStrokeHitByPath:(id)path;	// 0x34e4da0d
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x34e4da05
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x34e4da09
// converted property getter: - (unsigned)lineCapStyle;	// 0x34c196ad
// converted property getter: - (unsigned)lineJoinStyle;	// 0x34c196c1
- (void)lineToPoint:(CGPoint)point;	// 0x34c19b71
// converted property getter: - (float)lineWidth;	// 0x34c1aa95
// converted property getter: - (float)miterLimit;	// 0x34c1aaa5
- (void)moveToPoint:(CGPoint)point;	// 0x34c19b61
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x34e4ef89
- (void)relativeLineToPoint:(CGPoint)point;	// 0x34e4f015
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x34e4f06d
- (void)removeAllPoints;	// 0x34cdb9c9
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x34e4e5e5
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x34e4da15
- (void)setClip;	// 0x34cfeca9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x34c1aad5
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x34c194d5
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x34d530e5
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x34c1959d
// converted property setter: - (void)setLineWidth:(float)width;	// 0x34c193bd
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x34c1aab5
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x34c18f21
- (void)stroke;	// 0x34c195c1
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x34e4ecc1
- (void)transformUsingAffineTransform:(id)transform;	// 0x34c189ed
// converted property getter: - (unsigned)windingRule;	// 0x34c19111
@end

