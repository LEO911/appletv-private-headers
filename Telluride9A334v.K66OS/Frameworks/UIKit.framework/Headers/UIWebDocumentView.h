/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UITextSelection.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "UIWebTiledView.h"
#import "UITextSelectingContent.h"

@class DOMNode, UIWebSelectionAssistant, UITextRange, UIAutoscroll, NSDictionary, UITextPosition, UIView, DOMHTMLElement, UIWebRotatingSheet, UITextSelectionView, UITextInteractionAssistant, UIResponder, UITextChecker, CALayer, UIColor, UIImage, WebView, UILongPressGestureRecognizer, UIReferenceLibraryViewController, DOMElement, UIPopoverController, UITapGestureRecognizer, UITextInputTraits, UIPanGestureRecognizer, WebThreadSafeUndoManager, WebViewReachabilityObserver, NSMutableSet, NSArray, NSTimer;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, UITextSelection> {
	int _retainCount;	// 64 = 0x40
	WKWindow *_wkWindow;	// 68 = 0x44
	WebView *_webView;	// 72 = 0x48
	WebViewReachabilityObserver *_reachabilityObserver;	// 76 = 0x4c
	id m_parentTextView;	// 80 = 0x50
	id _delegate;	// 84 = 0x54
	id _textSuggestionDelegate;	// 88 = 0x58
	CGRect _doubleTapRect;	// 92 = 0x5c
	CGRect _mainDocumentDoubleTapRect;	// 108 = 0x6c
	CGPoint _scrollPoint;	// 124 = 0x7c
	CGPoint _doubleTapStartPosition;	// 132 = 0x84
	double _doubleTapStartTime;	// 140 = 0x8c
	CGSize _pendingSize;	// 148 = 0x94
	int _orientation;	// 156 = 0x9c
	DOMHTMLElement *_standaloneEditingElement;	// 160 = 0xa0
	CGPoint _mouseDownPoint;	// 164 = 0xa4
	double _mouseDownTime;	// 172 = 0xac
	UIAutoscroll *_autoscroll;	// 180 = 0xb4
	CFDictionaryRef _plugInViews;	// 184 = 0xb8
	int m_selectionGranularity;	// 188 = 0xbc
	CALayer *_contentLayersHostingLayer;	// 192 = 0xc0
	CALayer *_flattenedRotatingContentLayer;	// 196 = 0xc4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 200 = 0xc8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 204 = 0xcc
	NSMutableSet *_overflowScrollViews;	// 208 = 0xd0
	NSArray *_additionalSubviews;	// 212 = 0xd4
	UITextInputTraits *_traits;	// 216 = 0xd8
	id<UITextInputDelegate> _inputDelegate;	// 220 = 0xdc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 224 = 0xe0
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 228 = 0xe4
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 232 = 0xe8
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 236 = 0xec
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 240 = 0xf0
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 244 = 0xf4
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
	} _interaction;	// 248 = 0xf8
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 296 = 0x128
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 416 = 0x1a0
	CGSize _minimumSize;	// 440 = 0x1b8
	int _documentType;	// 448 = 0x1c0
	float _documentScale;	// 452 = 0x1c4
	float _previousDocumentScale;	// 456 = 0x1c8
	CGRect _documentBounds;	// 460 = 0x1cc
	CGSize _fixedLayoutOriginRoundingDelta;	// 476 = 0x1dc
	CGSize _fixedLayoutSizeRoundingDelta;	// 484 = 0x1e4
	unsigned _customConfigurations;	// 492 = 0x1ec
	unsigned _mouseDownCount;	// 496 = 0x1f0
	unsigned _dataDetectorTypes;	// 500 = 0x1f4
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 504 = 0x1f8
	unsigned _webCoreNeedsDraw : 1;	// 504 = 0x1f8
	unsigned _ignoresFocusingMouse : 1;	// 504 = 0x1f8
	unsigned _ignoresKeyEvents : 1;	// 504 = 0x1f8
	unsigned _autoresizes : 1;	// 504 = 0x1f8
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 504 = 0x1f8
	unsigned _updatingSize : 1;	// 504 = 0x1f8
	unsigned _scalesToFit : 1;	// 504 = 0x1f8
	unsigned _updatesScrollView : 1;	// 505 = 0x1f9
	unsigned _hasCustomScale : 1;	// 505 = 0x1f9
	unsigned _shouldRestoreScrollPosition : 1;	// 505 = 0x1f9
	unsigned _pageNeedsReset : 1;	// 505 = 0x1f9
	unsigned _hasScrollPoint : 1;	// 505 = 0x1f9
	unsigned _gesturesDisabled : 1;	// 505 = 0x1f9
	unsigned _doubleTapRectIsReplaced : 1;	// 505 = 0x1f9
	unsigned _standaloneEditableView : 1;	// 505 = 0x1f9
	unsigned _widgetEditingView : 1;	// 506 = 0x1fa
	unsigned _mouseDragged : 1;	// 506 = 0x1fa
	unsigned _mouseReentrancyGuard : 1;	// 506 = 0x1fa
	unsigned _isShowingFullScreenPlugIn : 1;	// 506 = 0x1fa
	unsigned _isSettingRedrawFrame : 1;	// 506 = 0x1fa
	unsigned _needsScrollNotifications : 1;	// 506 = 0x1fa
	unsigned _loadsSynchronously : 1;	// 506 = 0x1fa
	unsigned _mouseDown : 1;	// 506 = 0x1fa
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 507 = 0x1fb
	unsigned _geolocationDialogAllowed : 1;	// 507 = 0x1fb
	unsigned _usingMinimalTilesDuringLoading : 1;	// 507 = 0x1fb
	unsigned _sheetsCount : 2;	// 507 = 0x1fb
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 507 = 0x1fb
	unsigned _loadInProgress : 1;	// 507 = 0x1fb
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 507 = 0x1fb
	unsigned _classicViewportMode : 1;	// 508 = 0x1fc
	unsigned _sizeUpdatesSuspended : 1;	// 508 = 0x1fc
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 508 = 0x1fc
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 508 = 0x1fc
	unsigned _shouldIgnoreCustomViewport : 1;	// 508 = 0x1fc
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 508 = 0x1fc
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 508 = 0x1fc
	unsigned _shouldRemoveUserStyleSheet : 1;	// 508 = 0x1fc
	unsigned _hasDrawnTiles : 1;	// 509 = 0x1fd
	unsigned _showingTextStyleOptions : 1;	// 509 = 0x1fd
	unsigned _subviewCachesNeedUpdate : 1;	// 509 = 0x1fd
	unsigned _avoidFixedPositionUpdateOnZoomStart : 1;	// 509 = 0x1fd
	WebThreadSafeUndoManager *_undoManager;	// 512 = 0x200
	UIWebSelectionAssistant *_webSelectionAssistant;	// 516 = 0x204
	UITextInteractionAssistant *_textSelectionAssistant;	// 520 = 0x208
	UITextSelectionView *_textSelectionView;	// 524 = 0x20c
	UITextChecker *_textChecker;	// 528 = 0x210
	UIEdgeInsets _caretInsets;	// 532 = 0x214
	int _selectionAffinity;	// 548 = 0x224
	UIPopoverController *_definePopoverController;	// 552 = 0x228
	UIReferenceLibraryViewController *_defineViewController;	// 556 = 0x22c
	DOMElement *_dictationResultPlaceholder;	// 560 = 0x230
	id _dictationResultPlaceholderRemovalObserver;	// 564 = 0x234
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x301d2ffd; S=0x30267f15; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *asText;	// G=0x302f29c5; 
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x302f2095; S=0x302f202d; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30261f45; S=0x30261f49; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x301cf17d; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x302f1805; S=0x300b8acd; converted property
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x302613f1; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x300b81f9; S=0x300d4c19; converted property
@property(assign) id delegate;	// G=0x30147a85; S=0x300d5191; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x3025cbd1; S=0x301d1639; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x300d59d5; converted property
@property(readonly, assign) int documentType;	// G=0x300d5985; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x3025e835; S=0x300bb3a5; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x3025f455; converted property
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x30261481; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x30133fb9; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x3010f941; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30106de1; S=0x30114eb9; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x302613f5; 
@property(assign) id interactionDelegate;	// G=0x30267db9; S=0x300d51a1; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x3025f4a9; S=0x300bd3dd; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x3025f4e5; S=0x3025f4cd; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x3025cbbd; S=0x300b6e31; converted property
@property(retain) id markedText;	// G=0x3016af45; S=0x301cf035; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30116689; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30262a99; S=0x30262a9d; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x3025e7f1; S=0x3025e7a9; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x301129c1; S=0x3010fb85; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30112a45; S=0x30262ced; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x30262cf1; S=0x3012dbc1; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x30262689; 
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x300b7461; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x3025cea9; S=0x3025ce91; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x3025e795; S=0x3025e77d; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x3025ce7d; S=0x3025ce0d; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x3025f4bd; S=0x300bd59d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x30260f45; S=0x30260e1d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextSelection> *textDocument;	// G=0x30262d5d; 
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30116779; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x30114261; converted property
@property(assign) BOOL updatesScrollView;	// G=0x3025d139; S=0x3025d121; converted property
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x30261ea1; converted property
@property(readonly, retain) WebView *webView;	// G=0x30057229; converted property
+ (id)_createDefaultHighlightView;	// 0x3017a875
+ (id)_sharedHighlightView;	// 0x3017a83d
+ (double)getTimestamp;	// 0x3017d525
+ (void)initialize;	// 0x3025c825
+ (Class)layerClass;	// 0x300b5a71
+ (id)standardTextViewPreferences;	// 0x300b5325
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x300b542d
- (id)initWithFrame:(CGRect)frame;	// 0x300bb379
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x300b5595
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x3017758d
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x301d2ffd
- (void)_addAdditionalSubview:(id)subview;	// 0x3025de99
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x3025d635
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x3017691d
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x30269161
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x302693d9
- (void)_bold:(id)bold;	// 0x302615c5
- (void)_cancelLongPressGestureRecognizer;	// 0x3017aa91
- (float)_clampScale:(float)scale toScrollView:(id)scrollView;	// 0x3025eb35
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x300bb8d9
- (void)_clearAllConsoleMessages;	// 0x300bcf4d
- (void)_clearDoubleTapRect;	// 0x300bcee9
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x302620a5
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x30262355
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x302685d1
- (BOOL)_dataDetectionIsActivated;	// 0x300bb995
- (void)_define:(id)define;	// 0x30261885
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x3025fc69
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x300b8e11
- (void)_didScroll;	// 0x3017a441
- (float)_documentScale;	// 0x30178ba9
- (id)_documentUrl;	// 0x30262d61
- (CGRect)_documentViewVisibleRect;	// 0x300bcc29
- (id)_doubleTapGestureRecognizer;	// 0x30267f01
- (void)_doubleTapRecognized:(id)recognized;	// 0x302670d9
- (float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width isPDF:(BOOL)pdf;	// 0x3025e859
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30269bb9
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x300b8465
- (void)_finishedUsingDictationPlaceholder;	// 0x30260029
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x30262491
- (id)_focusedOrMainFrame;	// 0x30056081
- (id)_groupName;	// 0x301c7311
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x3025eb99
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x3025e969
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x3025f325
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x3025e389
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x3017f2d1
- (BOOL)_isDeallocating;	// 0x3025c89d
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x3017c8a5
- (void)_italicize:(id)italicize;	// 0x3026161d
- (CGRect)_lastRectForRange:(id)range;	// 0x302629f1
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x300bca41
- (void)_longPressRecognized:(id)recognized;	// 0x3017ee11
- (NSRange)_markedTextNSRange;	// 0x30260b01
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x3025ddf5
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x3025dd91
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x300b5cd1
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x3025d3f1
- (void)_notifyPlugInViewsOfDidZoom;	// 0x3025d4ed
- (void)_notifyPlugInViewsOfScaleChange;	// 0x300bc829
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x3025d339
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x3025e32d
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node;	// 0x3025e229
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x3025e1bd
- (id)_parentTextView;	// 0x30115169
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30262901
- (Class)_printFormatterClass;	// 0x3038cb1d
- (void)_promptForReplace:(id)replace;	// 0x30261e49
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x300d6f29
- (void)_removeAdditionalSubview:(id)subview;	// 0x3025defd
- (void)_removeDefinitionController:(BOOL)controller;	// 0x3018bced
- (id)_requestWithUDIDHeaderIfAppropriate:(id)udidheaderIfAppropriate;	// 0x3025f4a1
- (void)_resetForNewPage;	// 0x300bd639
- (void)_resetFormDataForFrame:(id)frame;	// 0x300bbe3d
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x3017f415
- (void)_reshapePlugInViews;	// 0x300b9555
- (id)_responderForBecomeFirstResponder;	// 0x301d31d1
- (void)_restoreFlattenedContentLayers;	// 0x3026260d
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x30177751
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x300b69cd
- (void)_runLoadBlock:(id)block;	// 0x300bb965
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x30179545
- (id)_scriptingInfoForForm:(id)form;	// 0x3026301d
- (id)_scriptingInfoForLink:(id)link;	// 0x30262dc5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30262985
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x300b83e9
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x30267571
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x30267f15
- (void)_setDocumentScale:(float)scale;	// 0x300bc4cd
- (void)_setDocumentType:(int)type;	// 0x300d4ced
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x300bbf31
- (void)_setParentTextView:(id)view;	// 0x300b7025
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x30178b91
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x30262235
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x3025e40d
- (void)_showDataDetectorsSheet;	// 0x30268c79
- (void)_showImageSheet;	// 0x30268859
- (void)_showLinkSheet;	// 0x30268acd
- (void)_showPendingContentLayers;	// 0x300bd8c9
- (void)_showTextStyleOptions:(id)options;	// 0x302616cd
- (void)_singleTapRecognized:(id)recognized;	// 0x301d24a5
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x30145905
- (id)_targetURL;	// 0x30267941
- (id)_textSelectingContainer;	// 0x30148061
- (BOOL)_tryRetain;	// 0x3025c841
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x30267125
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x30267171
- (void)_underline:(id)underline;	// 0x30261675
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x3025f729
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x3025f685
- (void)_updateFixedPositionContent;	// 0x3017ac15
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;	// 0x300bc8e1
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x30181a71
- (void)_updateScrollViewBoundaryZoomScales;	// 0x300b7199
- (void)_updateSize;	// 0x301770fd
- (void)_updateSubviewCaches;	// 0x30178d15
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x30178651
- (float)_zoomedDocumentScale;	// 0x30177099
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x302679f5
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x30267af1
- (void)addInputString:(id)string;	// 0x3025f809
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x3025f7cd
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x3017f221
// declared property getter: - (id)asText;	// 0x302f29c5
- (void)assistFormNode:(id)node;	// 0x3025f48d
- (void)attemptClick:(id)click;	// 0x301d2bed
- (id)automaticallySelectedOverlay;	// 0x301cb421
- (CGRect)autoscrollContentFrame;	// 0x30261f1d
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x302f2095
- (CGRect)autoscrollDragFrame;	// 0x30261ef9
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30262ccd
- (BOOL)becomeFirstResponder;	// 0x301d2eb9
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30261f45
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x3026990d
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x30269721
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x302698a5
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x30269695
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x302696c5
- (void)beginSelectionChange;	// 0x3010f911
// declared property getter: - (id)beginningOfDocument;	// 0x301cf17d
- (BOOL)canBecomeFirstResponder;	// 0x301d2fe5
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x30135a11
- (BOOL)canResignFirstResponder;	// 0x301d3201
- (void)cancelAutoscroll;	// 0x302f28e9
- (void)cancelInteraction;	// 0x3017d4f1
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x3017a631
- (BOOL)cancelMouseTracking;	// 0x3025d279
- (BOOL)cancelTouchTracking;	// 0x3025d2cd
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x302f1805
- (CGRect)caretRect;	// 0x300b7e4d
- (CGRect)caretRectForPosition:(id)position;	// 0x30113ff9
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x30114101
- (unsigned short)characterAfterCaretSelection;	// 0x301361b5
- (unsigned short)characterBeforeCaretSelection;	// 0x30136185
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30260559
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30262b71
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30262c61
- (id)checkSpellingOfString:(id)string;	// 0x3018daf5
- (void)clearInteractionTimer;	// 0x3017a7f9
- (void)clearRangedSelectionInitialExtent;	// 0x302f1945
- (void)clearSelection;	// 0x302f15c1
- (BOOL)clearWKFirstResponder;	// 0x30190f19
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x302f1615
- (id)closestPositionToPoint:(CGPoint)point;	// 0x3012d37d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30262aa1
- (void)collapseSelection;	// 0x302f17b1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x301698ad
- (void)completeInteraction;	// 0x30181df1
- (void)confirmMarkedText:(id)text;	// 0x302604d5
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x3026a14d
- (BOOL)containsOnlySelectableElements;	// 0x301d2291
// declared property getter: - (id)content;	// 0x302613f1
- (CGRect)contentFrameForView:(id)view;	// 0x302f2111
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x30266e3d
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x302610dd
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x3017e839
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x3017e7c9
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x3012d461
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x3017e6e9
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x3025cdb1
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x300b7f49
- (void)copy:(id)copy;	// 0x30261595
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x3025d201
- (void)cut:(id)cut;	// 0x302614e1
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x300b81f9
- (void)dealloc;	// 0x3018b80d
- (void)deferInteraction;	// 0x302678f1
- (void)deferredBecomeFirstResponder;	// 0x3025f571
// converted property getter: - (id)delegate;	// 0x30147a85
- (void)deleteBackward;	// 0x301c5aa1
- (void)deleteFromInput;	// 0x3025f81d
- (void)detachInteractionAssistant;	// 0x300b7131
- (void)detachSelectionView;	// 0x300b7111
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x3025cbd1
- (id)dictationInterpretations;	// 0x3026027d
- (id)dictationResultMetadataForRange:(id)range;	// 0x3025fbd1
- (void)didEndScroll;	// 0x301818f5
- (void)didEndZoom;	// 0x30262045
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x3025c8c9
- (void)didMoveToSuperview;	// 0x300b7189
- (void)didRemovePlugInView:(id)view;	// 0x3017935d
- (void)didZoom;	// 0x30261fed
// converted property getter: - (CGRect)documentBounds;	// 0x300d59d5
// converted property getter: - (int)documentType;	// 0x300d5985
// converted property getter: - (CGRect)doubleTapRect;	// 0x3025f455
- (BOOL)doubleTapRectIsReplaced;	// 0x3025f479
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30269ddd
- (unsigned)effectiveDataDetectorTypes;	// 0x301c6f31
- (void)enableReachability;	// 0x300d3fb1
- (void)enclosingScrollerDidScroll;	// 0x3025cee5
// declared property getter: - (id)endOfDocument;	// 0x3010f941
- (void)endPrintMode;	// 0x30269a61
- (void)endSelectionChange;	// 0x3010fe6d
- (void)ensureSelection;	// 0x3018cb5d
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x302609dd
- (void)extendCurrentSelection:(int)selection;	// 0x30260bf1
- (CGRect)firstRectForRange:(id)range;	// 0x301cb2c9
- (id)fontForCaretSelection;	// 0x301cc549
- (void)forceLayout;	// 0x3025d14d
- (id)formElement;	// 0x3012d4d5
- (void)forwardInvocation:(id)invocation;	// 0x300d4691
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x3025d851
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x3017ed55
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x3017ec11
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x3017c83d
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x3017ec85
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x3017e91d
- (int)getPasteboardChangeCount;	// 0x3025daf1
- (int)getPasteboardItemsCount;	// 0x3025d799
- (void)handleKeyWebEvent:(id)event;	// 0x30261195
- (BOOL)hasContent;	// 0x30056029
- (BOOL)hasDrawnTiles;	// 0x30174189
- (BOOL)hasEditableSelection;	// 0x300b842d
- (BOOL)hasMarkedText;	// 0x300b8229
- (BOOL)hasPlugInSubviews;	// 0x302613a1
- (BOOL)hasRangedSelection;	// 0x3025fc49
- (BOOL)hasRichlyEditableSelection;	// 0x3025d7cd
- (BOOL)hasSelection;	// 0x30260c71
- (BOOL)hasSelection;	// 0x30057239
- (BOOL)hasSimpleTextOnlyStructure;	// 0x301d2185
- (BOOL)hasText;	// 0x30168745
- (void)hideTapHighlight;	// 0x301815f9
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x30267719
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x3017f495
- (id)implementationWebView;	// 0x302610f1
- (float)initialScale;	// 0x300bc401
// declared property getter: - (id)inputDelegate;	// 0x30106de1
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x3025f8e9
- (id)insertDictationResultPlaceholder:(CGSize)placeholder;	// 0x3025fccd
- (void)insertText:(id)text;	// 0x30169bad
- (void)installGestureRecognizers;	// 0x300b5d4d
- (float)integralScaleForScale:(float)scale;	// 0x300bc779
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x300bc78d
// declared property getter: - (id)interactionAssistant;	// 0x302613f5
// converted property getter: - (id)interactionDelegate;	// 0x30267db9
- (BOOL)isCaretInEmptyParagraph;	// 0x301360f5
- (BOOL)isClassicViewportMode;	// 0x3025cebd
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x3025e835
// declared property getter: - (BOOL)isEditable;	// 0x30261481
// declared property getter: - (BOOL)isEditing;	// 0x30133fb9
- (BOOL)isEditingSingleLineElement;	// 0x3025f851
- (BOOL)isInInteraction;	// 0x30266ffd
- (BOOL)isInPrintMode;	// 0x3026902d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3012d81d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x3012d851
- (BOOL)isShowingFullScreenPlugInUI;	// 0x30172055
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x3025f4a9
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x3025db25
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x3025f4e5
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x3018cde5
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x3018da1d
- (BOOL)keyboardInputChanged:(id)changed;	// 0x3014aa85
- (void)keyboardInputChangedSelection:(id)selection;	// 0x301479b5
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x302610f5
- (void)layoutSubviews;	// 0x300b9255
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x3025ca91
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x300bb881
- (void)loadRequest:(id)request;	// 0x30174201
// converted property getter: - (BOOL)loadsSynchronously;	// 0x3025cbbd
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x30261e91
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x30261e81
- (BOOL)makeWKFirstResponder;	// 0x30147bd5
// converted property getter: - (id)markedText;	// 0x3016af45
// declared property getter: - (id)markedTextRange;	// 0x30116689
// declared property getter: - (id)markedTextStyle;	// 0x30262a99
- (float)maximumScale;	// 0x3025cd9d
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x3025e7f1
- (id)metadataDictionariesForDictationResults;	// 0x3025fb35
- (id)methodSignatureForSelector:(SEL)selector;	// 0x300b839d
- (float)minimumScale;	// 0x300bce1d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x3025cbe5
- (BOOL)mouseEventsChangeSelection;	// 0x3026a019
- (void)moveBackward:(unsigned)backward;	// 0x30260d01
- (void)moveForward:(unsigned)forward;	// 0x30260d65
- (BOOL)needsScrollNotifications;	// 0x3025ced1
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x3025d225
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x3026090d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x3014a931
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x302f16d9
- (void)paste:(id)paste;	// 0x30261b91
- (void)performClick:(id)click;	// 0x302671f9
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x30266da1
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x3025d8a1
- (BOOL)playsNicelyWithGestures;	// 0x30261f41
- (void)popoverControllerDidDismissPopover:(id)popoverController;	// 0x30261b65
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x302f29c9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30262961
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30147869
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x3012d885
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30262bed
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30260885
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30260bbd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30260b89
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x3011677d
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x3026275d
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x3025dc11
- (CGRect)rectContainingCaretSelection;	// 0x302607dd
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x302605cd
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x3026065d
- (id)rectsForRange:(id)range;	// 0x30262d01
- (void)redrawScaledDocument;	// 0x3025e4b5
- (oneway void)release;	// 0x300b9159
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertText:(BOOL)text;	// 0x30260065
- (void)replace:(id)replace;	// 0x30261d75
- (void)replaceCurrentWordWithText:(id)text;	// 0x30260389
- (void)replaceRange:(id)range withText:(id)text;	// 0x30262841
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x302602b5
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x301cef2d
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x30260a65
- (BOOL)requiresKeyEvents;	// 0x30121ef5
- (void)resetInteraction;	// 0x3017a7c1
- (void)resetShowingTextStyle:(id)style;	// 0x30190d0d
- (void)resetTilingAfterLoadComplete;	// 0x300bd341
- (BOOL)resignFirstResponder;	// 0x300bd3f5
- (id)retain;	// 0x300b7151
- (unsigned)retainCount;	// 0x30189cd5
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x301130f1
- (void)saveStateToCurrentHistoryItem;	// 0x301794f5
- (id)scriptingInfoWithChildren;	// 0x301c8989
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x302f2909
- (void)scrollViewWasRemoved;	// 0x30261fa9
- (void)select:(id)select;	// 0x30261cdd
- (void)selectAll;	// 0x302f1f75
- (void)selectAll;	// 0x30260dc9
- (void)selectAll:(id)all;	// 0x30261d29
- (void)selectWord;	// 0x302f156d
- (id)selectedDOMRange;	// 0x30260b59
- (id)selectedDOMRange;	// 0x30112a15
// declared property getter: - (id)selectedTextRange;	// 0x301129c1
// declared property getter: - (int)selectionAffinity;	// 0x30112a45
- (BOOL)selectionAtDocumentStart;	// 0x30260ca1
- (BOOL)selectionAtWordStart;	// 0x30260cd1
- (int)selectionBaseWritingDirection;	// 0x301468a9
- (void)selectionChanged;	// 0x300b73d9
- (void)selectionChanged:(id)changed;	// 0x300b7361
- (CGRect)selectionClipRect;	// 0x301ce891
// declared property getter: - (int)selectionGranularity;	// 0x30262cf1
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x302f1fc9
- (NSRange)selectionRange;	// 0x3018d9dd
- (id)selectionRects;	// 0x302f1cb5
- (id)selectionRectsForRange:(id)range;	// 0x3012de99
// declared property getter: - (int)selectionState;	// 0x30262689
- (int)selectionState;	// 0x30136155
// declared property getter: - (id)selectionView;	// 0x300b7461
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x301779b9
- (void)sendScrollEventIfNecessary;	// 0x3017acb9
- (void)sendScrollWheelEvents;	// 0x30267b3d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x301c6ead
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x300d5229
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x30267dcd
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x300b6bf9
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x300d4cd5
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x302f202d
- (void)setBaseWritingDirection:(int)direction;	// 0x302f1881
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30147981
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30261f49
- (void)setBottomBufferHeight:(float)height;	// 0x30261165
- (void)setCaretChangeListener:(id)listener;	// 0x302610ad
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x300b8acd
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x30115bad
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x300d4c19
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x300d5191
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x301d1639
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x300bb3a5
- (void)setDrawsBackground:(BOOL)background;	// 0x300b707d
- (void)setFrame:(CGRect)frame;	// 0x300b5ac9
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x300b6d9d
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x3025d321
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x3025d109
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x300b6b45
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x30114eb9
- (void)setInteractionAssistantGestureRecognizers;	// 0x3025f59d
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x300d51a1
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x300bd3dd
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x3025f4cd
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x300b6e31
// converted property setter: - (void)setMarkedText:(id)text;	// 0x301cf035
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30260449
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30262a9d
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x300b6bbd
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x3025e7a9
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x300b6b81
- (void)setMinimumSize:(CGSize)size;	// 0x300b6909
- (void)setOpaque:(BOOL)opaque;	// 0x300b7035
- (void)setPaused:(BOOL)paused;	// 0x302611d1
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x302611e5
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x302f18b5
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x302f1915
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x302f18e5
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x302f19d5
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x302f1a7d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x302f19a5
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x302f1975
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x302f1e41
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x302f1c31
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x3010fdb9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x3010fb85
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x302626b9
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30262ced
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x3012dbc1
- (void)setSelectionToEnd;	// 0x302f1ecd
- (void)setSelectionToStart;	// 0x302f1f21
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x302f1b15
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x302f290d
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x3025ce91
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x3025e77d
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x3025ce0d
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x300d51b5
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x300bd59d
// converted property setter: - (void)setText:(id)text;	// 0x30260e1d
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x3017634d
- (void)setTilingArea:(int)area;	// 0x300bbe41
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x3025d121
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x301d0d19
- (void)setUserStyleSheet:(id)sheet;	// 0x301c721d
- (void)setUsesUIScrollView;	// 0x300d3fad
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x300b6c31
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x3025cea9
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x3025e795
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x3025ce7d
- (void)smartExtendRangedSelection:(int)selection;	// 0x302f1e0d
// converted property getter: - (id)standaloneEditingElement;	// 0x3025f4bd
- (BOOL)startActionSheet;	// 0x30266f1d
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x302f2149
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x30266dfd
- (void)stopLoading:(id)loading;	// 0x30181d91
- (id)subviews;	// 0x300b6cd1
- (id)superviewForSheet;	// 0x30267de5
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x3025dbd9
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x30267cb1
- (void)takeTraitsFrom:(id)from;	// 0x302613c5
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x30266e6d
// converted property getter: - (id)text;	// 0x30260f45
- (id)textColorForCaretSelection;	// 0x3026058d
// declared property getter: - (id)textDocument;	// 0x30262d5d
- (id)textFormElement;	// 0x3025f4a5
- (id)textInDOMRange:(id)domrange;	// 0x3014861d
- (id)textInRange:(id)range;	// 0x3012675d
- (id)textInputTraits;	// 0x300b6889
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x3010fa21
- (void)toggleBaseWritingDirection;	// 0x302f182d
// declared property getter: - (id)tokenizer;	// 0x30116779
// converted property getter: - (id)undoManager;	// 0x30114261
- (id)undoManagerForWebView:(id)webView;	// 0x30114281
- (void)unmarkText;	// 0x3018ca4d
- (void)updateInteractionElements;	// 0x3025e6fd
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x3025f4f9
- (void)updateSelection;	// 0x302614dd
// converted property getter: - (BOOL)updatesScrollView;	// 0x3025d139
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x300d415d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x30266eb9
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x300bc0c5
- (float)viewportHeight;	// 0x300d5099
- (float)viewportWidth;	// 0x300d4d0d
- (CGRect)visibleBounds;	// 0x30133e45
- (CGRect)visibleContentFrame;	// 0x30261ed5
- (CGRect)visibleFrame;	// 0x30261eb1
- (CGRect)visibleRectForSelecting;	// 0x3026a031
// converted property getter: - (id)webSelectionAssistant;	// 0x30261ea1
- (void)webThreadWebViewDidLayout:(id)webThreadWebView;	// 0x3025cf41
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x30057155
// converted property getter: - (id)webView;	// 0x30057229
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x3025d0b9
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x300bb9b1
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node;	// 0x3025df65
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x3017a329
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x300bd075
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x300b6c79
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x30261329
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x302676e5
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x300bcf51
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x3017a39d
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x3017a2c1
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x30177a25
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x301826c1
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x3017a021
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x30112e01
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x30178425
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x3025e131
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x302612d9
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x300b9349
- (void)webViewDidDrawTiles:(id)webView;	// 0x300b95b1
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x3025cf9d
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x30267715
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x3025cf55
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x300b550d
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x3012d3c9
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x30267021
- (void)willMoveToSuperview:(id)superview;	// 0x300b70e1
- (void)willStartScroll;	// 0x30181689
- (void)willStartScrollToTop;	// 0x30261f4d
- (void)willStartZoom;	// 0x30261fbd
- (id)wordAtPoint:(CGPoint)point;	// 0x302f1bc9
- (id)wordContainingCaretSelection;	// 0x30260995
- (int)wordOffsetInRange:(id)range;	// 0x30260a31
- (id)wordRangeContainingCaretSelection;	// 0x30260855
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x3025d6ed
@end

