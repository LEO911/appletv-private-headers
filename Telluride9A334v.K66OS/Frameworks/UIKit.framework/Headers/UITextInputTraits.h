/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UITextInputTraits.h"
#import "NSObject.h"
#import "UITextInputTraits_Private.h"
#import "NSCopying.h"
#import "UIKit-Structs.h"

@class UIImage, UIColor;

@protocol UITextInputTraits <NSObject>
@optional
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) int returnKeyType;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(assign, nonatomic) int spellCheckingType;
// declared property getter: - (int)autocapitalizationType;
// declared property getter: - (int)autocorrectionType;
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;
// declared property getter: - (BOOL)isSecureTextEntry;
// declared property getter: - (int)keyboardAppearance;
// declared property getter: - (int)keyboardType;
// declared property getter: - (int)returnKeyType;
// declared property setter: - (void)setAutocapitalizationType:(int)type;
// declared property setter: - (void)setAutocorrectionType:(int)type;
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;
// declared property setter: - (void)setKeyboardType:(int)type;
// declared property setter: - (void)setReturnKeyType:(int)type;
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;
// declared property setter: - (void)setSpellCheckingType:(int)type;
// declared property getter: - (int)spellCheckingType;
@end

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {
	int autocapitalizationType;	// 4 = 0x4
	int autocorrectionType;	// 8 = 0x8
	int spellCheckingType;	// 12 = 0xc
	unsigned keyboardType : 8;	// 16 = 0x10
	unsigned keyboardAppearance : 8;	// 17 = 0x11
	int returnKeyType;	// 20 = 0x14
	BOOL enablesReturnKeyAutomatically;	// 24 = 0x18
	BOOL secureTextEntry;	// 25 = 0x19
	CFCharacterSetRef textTrimmingSet;	// 28 = 0x1c
	UIColor *insertionPointColor;	// 32 = 0x20
	UIColor *selectionBarColor;	// 36 = 0x24
	UIColor *selectionHighlightColor;	// 40 = 0x28
	UIImage *selectionDragDotImage;	// 44 = 0x2c
	unsigned insertionPointWidth;	// 48 = 0x30
	int textLoupeVisibility;	// 52 = 0x34
	int textSelectionBehavior;	// 56 = 0x38
	id textSuggestionDelegate;	// 60 = 0x3c
	BOOL contentsIsSingleValue;	// 64 = 0x40
	BOOL acceptsEmoji;	// 65 = 0x41
	BOOL returnKeyGoesToNextResponder;	// 66 = 0x42
	BOOL acceptsFloatingKeyboard;	// 67 = 0x43
	BOOL acceptsSplitKeyboard;	// 68 = 0x44
	BOOL richText;	// 69 = 0x45
	BOOL displaySecureTextUsingPlainText;	// 70 = 0x46
	BOOL learnsCorrections;	// 71 = 0x47
	int emptyContentReturnKeyType;	// 72 = 0x48
	int shortcutConversionType;	// 76 = 0x4c
	BOOL suppressReturnKeyStyling;	// 80 = 0x50
	BOOL forceEnableDictation;	// 81 = 0x51
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x300a265d; S=0x300b8be1; @synthesize
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;	// G=0x300a268d; S=0x302980f9; @synthesize
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;	// G=0x300a269d; S=0x30298109; @synthesize
@property(assign, nonatomic) int autocapitalizationType;	// G=0x300a2531; S=0x300b68d9; @synthesize
@property(assign, nonatomic) int autocorrectionType;	// G=0x300a2541; S=0x30077e7d; @synthesize
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x300a264d; S=0x301561dd; @synthesize
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;	// G=0x300a26bd; S=0x30298119; @synthesize
@property(assign, nonatomic) int emptyContentReturnKeyType;	// G=0x300a267d; S=0x302980d9; @synthesize
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// G=0x300a2591; S=0x30077a41; @synthesize
@property(assign, nonatomic) BOOL forceEnableDictation;	// G=0x30298149; S=0x30298159; @synthesize
@property(retain, nonatomic) UIColor *insertionPointColor;	// G=0x300a25cd; S=0x300747cd; @synthesize
@property(assign, nonatomic) unsigned insertionPointWidth;	// G=0x300a260d; S=0x302980c9; @synthesize
@property(assign, nonatomic) int keyboardAppearance;	// G=0x300a2571; S=0x302980b9; @synthesize
@property(assign, nonatomic) int keyboardType;	// G=0x300a2561; S=0x300b68f9; @synthesize
@property(assign, nonatomic) BOOL learnsCorrections;	// G=0x300a26cd; S=0x30298129; @synthesize
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;	// G=0x300a266d; S=0x302980e9; @synthesize
@property(assign, nonatomic) int returnKeyType;	// G=0x300a2581; S=0x30077a31; @synthesize
@property(assign, nonatomic, getter=isRichText) BOOL richText;	// G=0x300a26ad; S=0x30189ce9; @synthesize
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// G=0x30046af1; S=0x302976c1; @synthesize
@property(retain, nonatomic) UIColor *selectionBarColor;	// G=0x300a25dd; S=0x300747f1; @synthesize
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// G=0x300a25fd; S=0x30074901; @synthesize
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// G=0x300a25ed; S=0x300748dd; @synthesize
@property(assign, nonatomic) int shortcutConversionType;	// G=0x300a26dd; S=0x30298139; @synthesize
@property(assign, nonatomic) int spellCheckingType;	// G=0x300a2551; S=0x300b68e9; @synthesize
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;	// G=0x300a26ed; S=0x301a0e69; @synthesize
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x300a261d; S=0x300f40b5; @synthesize
@property(assign, nonatomic) int textSelectionBehavior;	// G=0x300a262d; S=0x3011213d; @synthesize
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x300a263d; S=0x301561ed; @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x300468f9; S=0x300a25a1; @dynamic
+ (id)defaultTextInputTraits;	// 0x30181cdd
+ (BOOL)keyboardTypeRequiresASCIICapable:(int)capable;	// 0x30115f9d
+ (id)traitsByAdoptingTraits:(id)traits;	// 0x30115179
- (id)init;	// 0x300744b1
// declared property getter: - (BOOL)acceptsEmoji;	// 0x300a265d
// declared property getter: - (BOOL)acceptsFloatingKeyboard;	// 0x300a268d
// declared property getter: - (BOOL)acceptsSplitKeyboard;	// 0x300a269d
// declared property getter: - (int)autocapitalizationType;	// 0x300a2531
// declared property getter: - (int)autocorrectionType;	// 0x300a2541
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x300a264d
- (id)copyWithZone:(NSZone *)zone;	// 0x300a1ad5
- (void)dealloc;	// 0x300b4711
- (id)description;	// 0x302976ed
- (id)dictionaryRepresentation;	// 0x3029745d
// declared property getter: - (BOOL)displaySecureTextUsingPlainText;	// 0x300a26bd
// declared property getter: - (int)emptyContentReturnKeyType;	// 0x300a267d
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;	// 0x300a2591
// declared property getter: - (BOOL)forceEnableDictation;	// 0x30298149
// declared property getter: - (id)insertionPointColor;	// 0x300a25cd
// declared property getter: - (unsigned)insertionPointWidth;	// 0x300a260d
- (BOOL)isEqual:(id)equal;	// 0x30297cb5
// declared property getter: - (BOOL)isRichText;	// 0x300a26ad
// declared property getter: - (BOOL)isSecureTextEntry;	// 0x30046af1
// declared property getter: - (int)keyboardAppearance;	// 0x300a2571
// declared property getter: - (int)keyboardType;	// 0x300a2561
// declared property getter: - (BOOL)learnsCorrections;	// 0x300a26cd
// declared property getter: - (BOOL)returnKeyGoesToNextResponder;	// 0x300a266d
// declared property getter: - (int)returnKeyType;	// 0x300a2581
// declared property getter: - (id)selectionBarColor;	// 0x300a25dd
// declared property getter: - (id)selectionDragDotImage;	// 0x300a25fd
// declared property getter: - (id)selectionHighlightColor;	// 0x300a25ed
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x300b8be1
// declared property setter: - (void)setAcceptsFloatingKeyboard:(BOOL)keyboard;	// 0x302980f9
// declared property setter: - (void)setAcceptsSplitKeyboard:(BOOL)keyboard;	// 0x30298109
// declared property setter: - (void)setAutocapitalizationType:(int)type;	// 0x300b68d9
// declared property setter: - (void)setAutocorrectionType:(int)type;	// 0x30077e7d
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x301561dd
// declared property setter: - (void)setDisplaySecureTextUsingPlainText:(BOOL)text;	// 0x30298119
// declared property setter: - (void)setEmptyContentReturnKeyType:(int)type;	// 0x302980d9
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;	// 0x30077a41
// declared property setter: - (void)setForceEnableDictation:(BOOL)dictation;	// 0x30298159
// declared property setter: - (void)setInsertionPointColor:(id)color;	// 0x300747cd
// declared property setter: - (void)setInsertionPointWidth:(unsigned)width;	// 0x302980c9
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;	// 0x302980b9
// declared property setter: - (void)setKeyboardType:(int)type;	// 0x300b68f9
// declared property setter: - (void)setLearnsCorrections:(BOOL)corrections;	// 0x30298129
// declared property setter: - (void)setReturnKeyGoesToNextResponder:(BOOL)nextResponder;	// 0x302980e9
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x30077a31
// declared property setter: - (void)setRichText:(BOOL)text;	// 0x30189ce9
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;	// 0x302976c1
// declared property setter: - (void)setSelectionBarColor:(id)color;	// 0x300747f1
// declared property setter: - (void)setSelectionDragDotImage:(id)image;	// 0x30074901
// declared property setter: - (void)setSelectionHighlightColor:(id)color;	// 0x300748dd
// declared property setter: - (void)setShortcutConversionType:(int)type;	// 0x30298139
// declared property setter: - (void)setSpellCheckingType:(int)type;	// 0x300b68e9
// declared property setter: - (void)setSuppressReturnKeyStyling:(BOOL)styling;	// 0x301a0e69
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x300f40b5
// declared property setter: - (void)setTextSelectionBehavior:(int)behavior;	// 0x3011213d
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x301561ed
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x300a25a1
- (void)setToDefaultValues;	// 0x300744f9
- (void)setToSecureValues;	// 0x302973bd
// declared property getter: - (int)shortcutConversionType;	// 0x300a26dd
// declared property getter: - (int)spellCheckingType;	// 0x300a2551
// declared property getter: - (BOOL)suppressReturnKeyStyling;	// 0x300a26ed
- (void)takeTraitsFrom:(id)from;	// 0x300a1b21
// declared property getter: - (int)textLoupeVisibility;	// 0x300a261d
// declared property getter: - (int)textSelectionBehavior;	// 0x300a262d
// declared property getter: - (id)textSuggestionDelegate;	// 0x300a263d
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x300468f9
@end

