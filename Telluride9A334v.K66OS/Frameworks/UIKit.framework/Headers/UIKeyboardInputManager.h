/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x302ccce1; S=0x302cccd9; converted property
@property(assign) unsigned phraseBoundary;	// G=0x302ccd09; S=0x302ccd05; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x302ccd15; S=0x3011a499; converted property
+ (id)activeInstance;	// 0x30120a95
+ (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x30120a5d
+ (void)clearAllCentroids;	// 0x30120ed1
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x302ccf0d
+ (void)endRegisteringKeyplane;	// 0x30121215
+ (id)keyboardUserDirectory;	// 0x30056fed
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x30121191
+ (void)releaseSharedInstance;	// 0x3009dc85
+ (void)removeAllDynamicDictionaries;	// 0x302cd02d
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x302ccf9d
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x300a6cc9
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x30056fb9
- (void)acceptInput;	// 0x302cccc9
- (BOOL)acceptInputString:(id)string;	// 0x3013a2b9
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x302cccf5
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x302ccdf5
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x30169b31
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x302ccca9
- (id)addInputObject:(id)object;	// 0x302cd169
- (void)addToTypingHistory:(id)typingHistory;	// 0x302ccef1
- (void)appendToInputContext:(id)inputContext;	// 0x302ccccd
- (id)autocorrection;	// 0x302cccf9
- (void)beginRegisteringKeyplaneWithName:(id)name;	// 0x30120aa5
- (BOOL)canHandleKeyHitTest;	// 0x302cd201
- (BOOL)canUseGeometryKeyTouch;	// 0x30120ead
- (void)candidateAccepted:(id)accepted;	// 0x302ccef9
- (id)candidates;	// 0x302cccfd
- (CFArrayRef)chargeableKeys;	// 0x302cd161
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x302cd165
- (void)clearAllCentroids;	// 0x302cd251
- (void)clearDynamicDictionary;	// 0x302ccf09
- (void)clearInput;	// 0x302cccc5
- (void)clearInputContext;	// 0x302cccd5
- (void)clearKeyAreas;	// 0x302cd205
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x302cce15
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x300a9689
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x302cce19
- (void)decreaseUserFrequency:(id)frequency;	// 0x302ccf05
- (id)defaultCandidate;	// 0x302ccd1d
- (unsigned)defaultCandidateIndex;	// 0x302ccd21
- (id)deleteFromInput:(unsigned *)input;	// 0x302cccbd
- (void)deleteFromStrokeHistory:(BOOL)strokeHistory;	// 0x302cd249
- (void)endRegisteringKeyplane;	// 0x30121249
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x302ccd85
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x302ccd89
- (void)increaseUserFrequency:(id)frequency;	// 0x302ccf01
- (unsigned)inputCount;	// 0x302ccce5
- (BOOL)inputEmpty;	// 0x302ccce9
// converted property getter: - (unsigned)inputIndex;	// 0x302ccce1
- (void)inputLocationChanged;	// 0x302cccf1
- (id)inputString;	// 0x302ccced
- (BOOL)isSentenceDelimiter:(unsigned short)delimiter;	// 0x3018e599
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift;	// 0x302cd20d
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x302cd211
- (BOOL)keySlidIntoSwipe;	// 0x302cd245
- (void)lastAcceptedCandidateCorrected;	// 0x302ccefd
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x302ccd8d
- (unsigned)maximumShortcutLengthAllowed;	// 0x302cd25d
// converted property getter: - (unsigned)phraseBoundary;	// 0x302ccd09
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x302cd24d
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x302cd209
- (id)remainingInput;	// 0x302ccd01
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x302cccd1
- (id)searchStringForMarkedText;	// 0x302ccd29
- (void)setAutoCorrects:(BOOL)corrects;	// 0x302ccdfd
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x302cd15d
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x302cce0d
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x302cce11
- (void)setInput:(id)input;	// 0x302cccb5
- (void)setInput:(id)input typedString:(id)string;	// 0x302cccb9
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x302cccd9
- (id)setInputObject:(id)object;	// 0x302cd1b5
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x302cce09
- (void)setKeyboardMatchType:(int)type;	// 0x300a9589
- (void)setLearnsCorrection:(BOOL)correction;	// 0x302cceed
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x302ccd05
- (void)setShallowPrediction:(BOOL)prediction;	// 0x302cce01
- (void)setShift:(BOOL)shift;	// 0x302cce05
- (void)setTypologyRecorder:(id)recorder;	// 0x302cd255
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x3011a499
- (id)shadowTyping;	// 0x302cd159
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x302cd261
- (BOOL)shouldExtendPriorWord;	// 0x3014a92d
- (BOOL)shouldShiftAfterChar:(unsigned short)aChar withSpaces:(int)spaces currentShift:(BOOL)shift;	// 0x3014ab81
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x302ccd75
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x302ccd79
- (id)sortingMethods;	// 0x302ccd7d
- (BOOL)stringEndsWord:(id)word;	// 0x3016997d
- (id)stringForDoubleKey:(id)doubleKey;	// 0x302ccd3d
- (BOOL)suppliesCompletions;	// 0x302ccd35
- (BOOL)supportsNumberKeySelection;	// 0x302ccdf9
- (BOOL)supportsSetPhraseBoundary;	// 0x302ccd11
- (BOOL)supportsShortcutConversion;	// 0x302cd259
- (BOOL)suppressCompletionsForFieldEditor;	// 0x302ccd39
- (BOOL)suppressesCandidateDisplay;	// 0x3018c12d
- (void)textAccepted:(id)accepted;	// 0x302ccef5
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x302ccd81
- (BOOL)usesAutoDeleteWord;	// 0x302ccd19
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x302ccd15
- (unsigned)wordHistoryDepth;	// 0x302cccdd
@end

