/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"

@class NSMutableDictionary, NSString, NSError, NSMutableArray, NSMutableOrderedSet, NSMutableSet;

__attribute__((visibility("hidden")))
@interface NSFileAccessClaim : NSObject {
@private
	xpc_connection_s *_client;	// 4 = 0x4
	NSString *_claimID;	// 8 = 0x8
	NSString *_purposeIDOrNil;	// 12 = 0xc
	BOOL _cameFromSuperarbiter;	// 16 = 0x10
	unsigned _blockageCount;	// 20 = 0x14
	BOOL _didWait;	// 24 = 0x18
	BOOL _isRevoked;	// 25 = 0x19
	unsigned _claimerBlockageCount;	// 28 = 0x1c
	NSError *_claimerError;	// 32 = 0x20
	NSMutableOrderedSet *_pendingClaims;	// 36 = 0x24
	NSMutableSet *_blockingClaims;	// 40 = 0x28
	NSMutableSet *_blockingReactorIDs;	// 44 = 0x2c
	id _providerCancellationProcedure;	// 48 = 0x30
	NSMutableDictionary *_reacquisitionProceduresByPresenterID;	// 52 = 0x34
	NSMutableArray *_revocationProcedures;	// 56 = 0x38
	id _claimerOrNil;	// 60 = 0x3c
	dispatch_semaphore_s *_claimerWaiterOrNull;	// 64 = 0x40
	BOOL _didMakePresentersRelinquishToWriter;	// 68 = 0x44
	BOOL _revokingIsInexorable;	// 69 = 0x45
}
@property(readonly, assign) BOOL cameFromSuperarbiter;	// G=0x307082ed; converted property
@property(readonly, retain) NSString *claimID;	// G=0x30708265; converted property
@property(retain) NSError *claimerError;	// G=0x30708441; S=0x307083fd; converted property
@property(readonly, assign) xpc_connection_s *client;	// G=0x30708255; converted property
@property(readonly, assign) BOOL didWait;	// G=0x30708389; converted property
@property(readonly, assign) BOOL isRevoked;	// G=0x3070950d; converted property
@property(readonly, retain) NSMutableOrderedSet *pendingClaims;	// G=0x30708911; converted property
+ (BOOL)canReadingItemAtLocation:(id)location options:(unsigned)options safelyOverlapWritingItemAtLocation:(id)location3 options:(unsigned)options4;	// 0x30707f21
+ (BOOL)canWritingItemAtLocation:(id)location options:(unsigned)options safelyOverlapWritingItemAtLocation:(id)location3 options:(unsigned)options4;	// 0x30707f79
- (id)initWithClient:(xpc_connection_s *)client claimID:(id)anId purposeID:(id)anId3;	// 0x30707ff5
- (id)initWithClient:(xpc_connection_s *)client messageParameters:(id)parameters replySender:(id)sender;	// 0x307080e1
- (void)addPendingClaim:(id)claim;	// 0x30708819
- (void)block;	// 0x307082fd
- (void)blockClaimer;	// 0x30708399
// converted property getter: - (BOOL)cameFromSuperarbiter;	// 0x307082ed
- (void)cancelled;	// 0x30709425
// converted property getter: - (id)claimID;	// 0x30708265
// converted property getter: - (id)claimerError;	// 0x30708441
- (BOOL)claimerInvokingIsBlockedByReactorWithID:(id)anId;	// 0x30708505
// converted property getter: - (xpc_connection_s *)client;	// 0x30708255
- (void)dealloc;	// 0x307080e5
- (id)description;	// 0x30709765
- (id)descriptionWithIndenting:(id)indenting;	// 0x30709521
- (void)devalueOldClaim:(id)claim;	// 0x307094dd
- (void)devalueSelf;	// 0x3070925d
// converted property getter: - (BOOL)didWait;	// 0x30708389
- (void)evaluateNewClaim:(id)claim;	// 0x307086a5
- (BOOL)evaluateSelfWithRootNode:(id)rootNode checkSubarbitrability:(BOOL)subarbitrability;	// 0x30708479
- (void)finalize;	// 0x30708211
- (void)forwardUsingMessageSender:(id)sender crashHandler:(id)handler;	// 0x307082d5
- (void)granted;	// 0x30708a35
- (void)ifSymbolicLinkAtURL:(id)url withResolutionCount:(int *)resolutionCount thenReevaluateSelf:(id)aSelf elseInvokeClaimer:(id)claimer;	// 0x30709781
- (void)invokeClaimer;	// 0x307091a1
- (BOOL)isBlockedByClaimWithPurposeID:(id)purposeID;	// 0x307085e1
- (BOOL)isBlockedByReadingItemAtLocation:(id)location options:(unsigned)options;	// 0x30708a2d
- (BOOL)isBlockedByWritingItemAtLocation:(id)location options:(unsigned)options;	// 0x30708a31
- (BOOL)isGranted;	// 0x307094e1
// converted property getter: - (BOOL)isRevoked;	// 0x3070950d
- (void)itemAtLocation:(id)location wasReplacedByItemAtLocation:(id)location2;	// 0x3070951d
- (void)makePresentersOfItemAtLocation:(id)location orContainedItem:(BOOL)item relinquishUsingProcedureGetter:(id)getter;	// 0x30708ca1
- (void)makeProviderOfItemAtLocation:(id)location provideThenContinue:(id)aContinue;	// 0x30708a39
- (dispatch_semaphore_s *)newClaimerWaiter;	// 0x307091a5
// converted property getter: - (id)pendingClaims;	// 0x30708911
- (id)purposeID;	// 0x3070829d
- (void)removePendingClaims:(id)claims;	// 0x30708951
- (void)revoked;	// 0x3070921d
- (void)setCameFromSuperarbiter;	// 0x307082d9
// converted property setter: - (void)setClaimerError:(id)error;	// 0x307083fd
- (void)unblock;	// 0x3070832d
- (void)unblockClaimer;	// 0x307083c9
- (void)whenRevokedPerformProcedure:(id)procedure;	// 0x3070847d
- (BOOL)willBeRevoked;	// 0x307091fd
@end

