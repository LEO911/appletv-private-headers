/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x306b3971; S=0x30626c89; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x306b3b0d; S=0x306478cd; converted property
@property(retain) id currencyCode;	// G=0x306b4c6d; S=0x306b4d2d; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x306b3bc1; S=0x306b3c81; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x306b6701; S=0x306b67c1; converted property
@property(retain) id currencySymbol;	// G=0x306b4dc9; S=0x306b4e89; converted property
@property(retain) id decimalSeparator;	// G=0x306b39b1; S=0x306b3a71; converted property
@property(retain) id exponentSymbol;	// G=0x306b55f1; S=0x306b56b1; converted property
@property(assign) unsigned formatWidth;	// G=0x306b5981; S=0x306b5a5d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x306b339d; S=0x306476e1; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x306b3355; S=0x3063669d; converted property
@property(retain) id groupingSeparator;	// G=0x306b3dd1; S=0x306b3e91; converted property
@property(assign) unsigned groupingSize;	// G=0x306b574d; S=0x306420fd; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x306b4f25; S=0x306b4fe5; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x306b685d; S=0x306b691d; converted property
@property(retain) id locale;	// G=0x306b32e5; S=0x30636631; converted property
@property(retain) id maximum;	// G=0x306b6645; S=0x306b666d; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x306b64ad; S=0x3063c849; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x306b6279; S=0x306b6355; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x306b6c35; S=0x306b6d11; converted property
@property(retain) id minimum;	// G=0x306b6589; S=0x306b65b1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x306b63d1; S=0x3064794d; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x306b619d; S=0x306479c9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x306b6add; S=0x306b6bb9; converted property
@property(retain) id minusSign;	// G=0x306b5339; S=0x306b53f9; converted property
@property(retain) id multiplier;	// G=0x306b5ad9; S=0x306b5b99; converted property
@property(retain) id negativeFormat;	// G=0x306b33dd; S=0x306b3495; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x306b459d; S=0x30626c31; converted property
@property(retain) id negativePrefix;	// G=0x306b49b5; S=0x306b4a75; converted property
@property(retain) id negativeSuffix;	// G=0x306b4b11; S=0x306b4bd1; converted property
@property(retain) id nilSymbol;	// G=0x306b40a5; S=0x30626b81; converted property
@property(retain) id notANumberSymbol;	// G=0x306b4205; S=0x306b42c5; converted property
@property(assign) unsigned numberStyle;	// G=0x306b3265; S=0x3062bf51; converted property
@property(retain) id paddingCharacter;	// G=0x306b5c35; S=0x306b5cf5; converted property
@property(assign) unsigned paddingPosition;	// G=0x306b5d91; S=0x306b5e6d; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x306b6d8d; S=0x306b6dd5; converted property
@property(retain) id perMillSymbol;	// G=0x306b51dd; S=0x306b529d; converted property
@property(retain) id percentSymbol;	// G=0x306b5081; S=0x306b5141; converted property
@property(retain) id plusSign;	// G=0x306b5495; S=0x306b5555; converted property
@property(retain) id positiveFormat;	// G=0x306b36cd; S=0x306b3769; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x306b443d; S=0x30626bd9; converted property
@property(retain) id positivePrefix;	// G=0x306b46fd; S=0x306b47bd; converted property
@property(retain) id positiveSuffix;	// G=0x306b4859; S=0x306b4919; converted property
@property(retain) id roundingIncrement;	// G=0x306b6041; S=0x306b6101; converted property
@property(assign) unsigned roundingMode;	// G=0x306b5ee9; S=0x306b5fc5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x306b5829; S=0x306b5905; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x306b4621; S=0x306b46a5; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x306b35f1; S=0x306b3675; converted property
@property(retain) id textAttributesForNil;	// G=0x306b4129; S=0x306b41ad; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x306b4361; S=0x306b43e5; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x306b44c1; S=0x306b4545; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x306b3895; S=0x306b3919; converted property
@property(retain) id textAttributesForZero;	// G=0x306b3fc9; S=0x306b404d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x306b3d1d; S=0x3062a331; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x306b699d; S=0x306b6a5d; converted property
@property(retain) id zeroSymbol;	// G=0x3063f365; S=0x306b3f2d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x30626b71
+ (void)initialize;	// 0x306267a1
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x30647ac1
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x306267cd
- (id)init;	// 0x306267e5
- (id)initWithCoder:(id)coder;	// 0x306b27ad
- (void *)__Keynote_NOOP;	// 0x306b24dd
- (void)_regenerateFormatter;	// 0x30626ce5
- (void)_reset;	// 0x306b24e1
// converted property getter: - (BOOL)allowsFloats;	// 0x306b3971
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x306b3b0d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x306b294d
- (id)copyWithZone:(NSZone *)zone;	// 0x306b269d
// converted property getter: - (id)currencyCode;	// 0x306b4c6d
// converted property getter: - (id)currencyDecimalSeparator;	// 0x306b3bc1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x306b6701
// converted property getter: - (id)currencySymbol;	// 0x306b4dc9
- (void)dealloc;	// 0x30636771
// converted property getter: - (id)decimalSeparator;	// 0x306b39b1
- (void)encodeWithCoder:(id)coder;	// 0x306b2705
// converted property getter: - (id)exponentSymbol;	// 0x306b55f1
- (void)finalize;	// 0x306b2659
// converted property getter: - (unsigned)formatWidth;	// 0x306b5981
// converted property getter: - (unsigned)formatterBehavior;	// 0x306b339d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x306b3355
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x306b2951
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x306b3209
// converted property getter: - (id)groupingSeparator;	// 0x306b3dd1
// converted property getter: - (unsigned)groupingSize;	// 0x306b574d
// converted property getter: - (id)internationalCurrencySymbol;	// 0x306b4f25
// converted property getter: - (BOOL)isLenient;	// 0x306b685d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x306b6d8d
// converted property getter: - (id)locale;	// 0x306b32e5
// converted property getter: - (id)maximum;	// 0x306b6645
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x306b64ad
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x306b6279
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x306b6c35
// converted property getter: - (id)minimum;	// 0x306b6589
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x306b63d1
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x306b619d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x306b6add
// converted property getter: - (id)minusSign;	// 0x306b5339
// converted property getter: - (id)multiplier;	// 0x306b5ad9
// converted property getter: - (id)negativeFormat;	// 0x306b33dd
// converted property getter: - (id)negativeInfinitySymbol;	// 0x306b459d
// converted property getter: - (id)negativePrefix;	// 0x306b49b5
// converted property getter: - (id)negativeSuffix;	// 0x306b4b11
// converted property getter: - (id)nilSymbol;	// 0x306b40a5
// converted property getter: - (id)notANumberSymbol;	// 0x306b4205
- (id)numberFromString:(id)string;	// 0x306b3229
// converted property getter: - (unsigned)numberStyle;	// 0x306b3265
// converted property getter: - (id)paddingCharacter;	// 0x306b5c35
// converted property getter: - (unsigned)paddingPosition;	// 0x306b5d91
// converted property getter: - (id)perMillSymbol;	// 0x306b51dd
// converted property getter: - (id)percentSymbol;	// 0x306b5081
// converted property getter: - (id)plusSign;	// 0x306b5495
// converted property getter: - (id)positiveFormat;	// 0x306b36cd
// converted property getter: - (id)positiveInfinitySymbol;	// 0x306b443d
// converted property getter: - (id)positivePrefix;	// 0x306b46fd
// converted property getter: - (id)positiveSuffix;	// 0x306b4859
// converted property getter: - (id)roundingIncrement;	// 0x306b6041
// converted property getter: - (unsigned)roundingMode;	// 0x306b5ee9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x306b5829
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x30626c89
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x306478cd
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x306b4d2d
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x306b3c81
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x306b67c1
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x306b4e89
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x306b3a71
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x306b56b1
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x306b5a5d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x306476e1
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x3063669d
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x306b3e91
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x306420fd
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x306b4fe5
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x306b691d
// converted property setter: - (void)setLocale:(id)locale;	// 0x30636631
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x306b666d
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x3063c849
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x306b6355
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x306b6d11
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x306b65b1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x3064794d
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x306479c9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x306b6bb9
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x306b53f9
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x306b5b99
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x306b3495
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x30626c31
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x306b4a75
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x306b4bd1
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x30626b81
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x306b42c5
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3062bf51
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x306b5cf5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x306b5e6d
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x306b6dd5
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x306b529d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x306b5141
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x306b5555
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x306b3769
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x30626bd9
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x306b47bd
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x306b4919
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x306b6101
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x306b5fc5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x306b5905
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x306b46a5
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x306b3675
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x306b41ad
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x306b43e5
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x306b4545
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x306b3919
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x306b404d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x3062a331
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x306b6a5d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x306b3f2d
- (id)stringForObjectValue:(id)objectValue;	// 0x3062a3d1
- (id)stringFromNumber:(id)number;	// 0x3062a3b1
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x306b4621
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x306b35f1
// converted property getter: - (id)textAttributesForNil;	// 0x306b4129
// converted property getter: - (id)textAttributesForNotANumber;	// 0x306b4361
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x306b44c1
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x306b3895
// converted property getter: - (id)textAttributesForZero;	// 0x306b3fc9
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x306b3d1d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x306b699d
// converted property getter: - (id)zeroSymbol;	// 0x3063f365
@end

