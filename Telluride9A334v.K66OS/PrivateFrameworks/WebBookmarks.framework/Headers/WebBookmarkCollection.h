/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks
 */

#import "WebBookmarks-Structs.h"
#import <NSObject.h> // Unknown library

@class WebBookmark;

@interface WebBookmarkCollection : NSObject {
	sqlite3 *_db;	// 4 = 0x4
	CFLocaleRef _locale;	// 8 = 0x8
	CFStringTokenizerRef _wordTokenizer;	// 12 = 0xc
	WebBookmark *_rootBookmark;	// 16 = 0x10
	BOOL _merging;	// 20 = 0x14
	BOOL _dirty;	// 21 = 0x15
}
@property(assign, nonatomic, getter=isMerging) BOOL merging;	// G=0x3502138d; S=0x3502139d; @synthesize=_merging
@property(readonly, retain) WebBookmark *rootBookmark;	// G=0x35021451; converted property
+ (void)_postBookmarksChangedSyncNotification;	// 0x35025b51
+ (BOOL)lockSync;	// 0x35025a61
+ (id)safariBookmarkCollection;	// 0x350216e9
+ (id)safariDirectoryPath;	// 0x350217b1
+ (void)unlockSync;	// 0x35025afd
- (id)initWithPath:(id)path;	// 0x350240bd
- (id)initWithPath:(id)path migratingBookmarksPlist:(id)plist syncAnchorPlist:(id)plist3;	// 0x350213ad
- (int)_DAVGeneration;	// 0x35026c75
- (BOOL)_addBookmarkWithTitle:(id)title address:(id)address parentID:(unsigned)anId orderIndex:(unsigned)index isFolder:(BOOL)folder externalUUID:(id)uuid associatedBookmark:(id)bookmark reorderSiblings:(BOOL)siblings updateParentChildCount:(BOOL)count updateAncestorEntries:(BOOL)entries;	// 0x3502a0c1
- (BOOL)_addChildrenOfID:(unsigned)anId toCollection:(id)collection recursive:(BOOL)recursive error:(id *)error;	// 0x35024abd
- (id)_bookmarkDictionaryForSqliteRow:(sqlite3_stmt *)sqliteRow recursive:(BOOL)recursive error:(id *)error;	// 0x3502480d
- (unsigned)_bookmarkIDForServerID:(id)serverID;	// 0x35028bd1
- (id)_bookmarkWithServerID:(id)serverID;	// 0x35027881
- (id)_bookmarkWithSpecialID:(unsigned)specialID;	// 0x35026c95
- (id)_bookmarksFromStatementSelectingIDs:(const char *)statementSelectingIDs withQuery:(id)query;	// 0x35021e55
- (id)_bookmarksInListWhere:(id)listWhere fromIndex:(unsigned)index toIndex:(unsigned)index3;	// 0x35026dcd
- (id)_changeList;	// 0x350268c9
- (BOOL)_clearAllDAVSyncData;	// 0x35028209
- (BOOL)_clearAllSyncKeys;	// 0x35028139
- (BOOL)_clearAllTombstones;	// 0x35029da1
- (void)_clearAndCreateAncestorTable;	// 0x35025cb5
- (void)_clearAndCreateBookmarksTables;	// 0x35025d35
- (void)_clearAndCreateBookmarksTitleWordTable;	// 0x35025c59
- (BOOL)_clearChangeList;	// 0x350287ed
- (BOOL)_clearSyncKeysUnderBookmarkID:(unsigned)anId isFolder:(BOOL)folder;	// 0x35028041
- (BOOL)_clearTitleWordsForBookmarkID:(unsigned)bookmarkID;	// 0x350267fd
- (void)_collectChangesOfType:(int)type withClause:(id)clause intoArray:(id)array;	// 0x35028629
- (void)_createSchema;	// 0x35027a59
- (id)_databaseTitleForSpecialID:(unsigned)specialID;	// 0x35025ba5
- (BOOL)_deleteAncestorTableEntriesForBookmarkID:(unsigned)bookmarkID;	// 0x3502843d
- (BOOL)_deleteBookmark:(id)bookmark leaveTombstone:(BOOL)tombstone;	// 0x350264f9
- (BOOL)_deleteRecursively:(unsigned)recursively;	// 0x35028345
- (BOOL)_deleteSyncPropertyForKey:(id)key;	// 0x350252e1
- (id)_errorForMostRecentSQLiteError;	// 0x35029fcd
- (int)_executeSQL:(id)sql;	// 0x3502a0a9
- (int)_executeSQLWithCString:(const char *)cstring;	// 0x35029d89
- (int)_finalizeStatementIfNotNull:(sqlite3_stmt *)null;	// 0x35029fb9
- (id)_firstBookmarkWithURLMatchingString:(id)urlmatchingString prefixMatch:(BOOL)match inParent:(unsigned)parent;	// 0x35026f81
- (BOOL)_importBookmarksPlist:(id)plist;	// 0x3502641d
- (BOOL)_importSyncAnchorPlist:(id)plist;	// 0x3502647d
- (BOOL)_incrementDAVGeneration;	// 0x35029dd1
- (BOOL)_incrementGeneration;	// 0x3502689d
- (BOOL)_indexAllTitleWords;	// 0x350299a1
- (BOOL)_indexBookmarkID:(unsigned)anId title:(id)title;	// 0x3502bffd
- (BOOL)_insertAncestorTableEntriesForBookmarkID:(unsigned)bookmarkID withAncestorIDs:(id)ancestorIDs;	// 0x3502b7ed
- (BOOL)_insertAncestorTableEntriesForBookmarkID:(unsigned)bookmarkID withParentID:(unsigned)parentID;	// 0x35028d01
- (BOOL)_insertTombstoneWithServerID:(id)serverID;	// 0x35027f39
- (int)_intFromExecutingSQL:(id)executingSQL;	// 0x3502a5dd
- (BOOL)_markBookmarkID:(unsigned)anId added:(BOOL)added;	// 0x350288fd
- (BOOL)_markBookmarkID:(unsigned)anId withSpecialID:(unsigned)specialID;	// 0x3502a581
- (BOOL)_markSpecialBookmarks;	// 0x3502455d
- (id)_mergeCandidateBookmarkWithAddress:(id)address parent:(unsigned)parent;	// 0x350272d1
- (id)_mergeCandidateFolderWithTitle:(id)title parent:(unsigned)parent;	// 0x35027165
- (BOOL)_mergeChildrenOfID:(unsigned)anId referencingBase:(id)base error:(id *)error;	// 0x35025031
- (BOOL)_migrateBookmarksPlist:(id)plist syncAnchorPlist:(id)plist2;	// 0x350297f9
- (void)_migrateSchemaVersion0ToVersion1;	// 0x35025e21
- (void)_migrateSchemaVersion10ToVersion11;	// 0x35026231
- (void)_migrateSchemaVersion11And12And13ToVersion14;	// 0x3502628d
- (void)_migrateSchemaVersion14ToVersion15;	// 0x35027c95
- (void)_migrateSchemaVersion15ToVersion16;	// 0x350262f9
- (void)_migrateSchemaVersion16AndVersion17AndVersion18ToVersion19;	// 0x35026355
- (void)_migrateSchemaVersion19And20ToVersion21;	// 0x350289e9
- (void)_migrateSchemaVersion1And2ToVersion3;	// 0x35025ec5
- (void)_migrateSchemaVersion21ToVersion22;	// 0x3502c399
- (void)_migrateSchemaVersion22ToVersion23;	// 0x35027de1
- (void)_migrateSchemaVersion23ToVersion24;	// 0x350263b1
- (void)_migrateSchemaVersion3ToVersion4;	// 0x35025f69
- (void)_migrateSchemaVersion4ToVersion5;	// 0x35026bb1
- (void)_migrateSchemaVersion5ToVersion6;	// 0x35025ff9
- (void)_migrateSchemaVersion6ToVersion7;	// 0x35026055
- (void)_migrateSchemaVersion7ToVersion8;	// 0x350260f9
- (void)_migrateSchemaVersion8ToVersion9;	// 0x35026155
- (void)_migrateSchemaVersion9ToVersion10;	// 0x350261d5
- (void)_migrateToCurrentSchema;	// 0x35029641
- (BOOL)_moveBookmark:(id)bookmark toIndex:(unsigned)index;	// 0x350228e9
- (void)_normalizeDatabaseURLs;	// 0x35029b21
- (void)_normalizeSearchString:(CFStringRef)string;	// 0x3502bfcd
- (BOOL)_openDatabaseAtPath:(id)path error:(id *)error;	// 0x35023eed
- (BOOL)_orderChildrenWithServerIDs:(id)serverIDs inFolderWithServerID:(id)serverID;	// 0x35026731
- (int)_orderIndexForBookmarkInsertedIntoParent:(unsigned)bookmarkInsertedIntoParent insertAtBeginning:(BOOL)beginning;	// 0x35026af9
- (void)_postBookmarksFolderContentsDidChangeNotification:(unsigned)_postBookmarksFolderContents;	// 0x35026a15
- (void)_postBookmarksSpecialFoldersDidChangeNotification;	// 0x35026aad
- (void)_postDistributedBookmarksDidReloadNotification;	// 0x3502c319
- (void)_postDistributedBookmarksDidReloadNotificationIfChangesWereMade;	// 0x350269e9
- (sqlite3_stmt *)_prefixSearch:(id)search usingColumns:(const char *)columns maxCount:(unsigned)count;	// 0x35022641
- (id)_readingListWithUnreadOnly:(BOOL)unreadOnly;	// 0x35023665
- (BOOL)_rebuildAncestorTable;	// 0x350267b5
- (void)_registerForSyncBookmarksFileChangedNotification;	// 0x3502c2e9
- (BOOL)_reindexBookmarkID:(unsigned)anId title:(id)title;	// 0x3502684d
- (void)_rerunMigrationsIfNecessary;	// 0x350293b9
- (BOOL)_restoreBookmarkBarIfMissing;	// 0x35029e01
- (BOOL)_restoreMissingSpecialBookmarks;	// 0x35027a09
- (void)_restoreOrMergeReadingListFolderWithChangeNotification:(BOOL)changeNotification;	// 0x3502743d
- (BOOL)_saveBookmark:(id)bookmark withSpecialID:(unsigned)specialID updateGeneration:(BOOL)generation;	// 0x3502a7bd
- (sqlite3_stmt *)_selectBookmarksWhere:(id)where;	// 0x350264e5
- (sqlite3_stmt *)_selectBookmarksWhere:(id)where countOnly:(BOOL)only;	// 0x35029f1d
- (id)_serverIDAtOrderIndex:(int)orderIndex inFolderWithServerID:(id)serverID;	// 0x3502b425
- (id)_serverIDForBookmarkID:(unsigned)bookmarkID;	// 0x3502b161
- (id)_serverIDsInFolderWithServerID:(id)serverID;	// 0x3502b2a1
- (BOOL)_setServerID:(id)anId forBookmark:(id)bookmark;	// 0x35028f81
- (BOOL)_setSyncData:(id)data forBookmark:(id)bookmark;	// 0x35029241
- (BOOL)_setSyncKey:(id)key forBookmark:(id)bookmark;	// 0x350290e1
- (unsigned)_specialIDForBookmarkBeingSaved:(id)bookmarkBeingSaved;	// 0x3502a5f5
- (unsigned)_specialIDForBookmarkTitle:(id)bookmarkTitle;	// 0x3502a6bd
- (BOOL)_syncAdd:(id)add toParent:(unsigned)parent withOrderIndex:(unsigned)orderIndex error:(id *)error;	// 0x35024ef5
- (id)_syncKeysForServerIDs:(id)serverIDs;	// 0x3502b5d9
- (BOOL)_syncPropertyExistsForKey:(id)key;	// 0x350251c1
- (id)_uniqueExternalUUID;	// 0x35025bfd
- (BOOL)_unsafeOrderChildrenWithServerIDs:(id)serverIDs inFolderWithServerID:(id)serverID;	// 0x3502babd
- (BOOL)_updateCachedChildCountForParentID:(unsigned)parentID inDirection:(int)direction;	// 0x35026675
- (BOOL)_updateHiddenAncestorCountForBookmarksUnderFolderID:(unsigned)bookmarksUnderFolderID addingOffset:(int)offset;	// 0x3502852d
- (int)_userVersion;	// 0x35025c3d
- (BOOL)beginSyncTransaction;	// 0x35025999
- (id)bookmarkAtPath:(id)path;	// 0x3502383d
- (id)bookmarkWithID:(unsigned)anId;	// 0x35023c6d
- (id)bookmarkWithUUID:(id)uuid;	// 0x35023bb5
- (id)bookmarksBarBookmark;	// 0x35021429
- (id)bookmarksBarList;	// 0x3502160d
- (id)bookmarksDictionary;	// 0x35024c29
- (id)bookmarksMatchingString:(id)string;	// 0x350221e1
- (id)bookmarksWithTitlesMatchingString:(id)titlesMatchingString;	// 0x35021e11
- (id)bookmarksWithURLsMatchingString:(id)urlsMatchingString;	// 0x35021dcd
- (void)commitSyncTransaction;	// 0x350246c1
- (void)dealloc;	// 0x35023e5d
- (BOOL)deleteBookmark:(id)bookmark;	// 0x35023159
- (id)firstReadingListBookmarkWithIconDataWithBaseURL:(id)baseURL;	// 0x35021a5d
- (id)firstReadingListBookmarkWithURLMatchingString:(id)urlmatchingString prefixMatch:(BOOL)match;	// 0x35021cd1
- (unsigned)generation;	// 0x350246a5
- (unsigned)indexOfReadingListBookmark:(id)readingListBookmark countingOnlyUnread:(BOOL)unread;	// 0x35021845
// declared property getter: - (BOOL)isMerging;	// 0x3502138d
- (id)listWithID:(unsigned)anId;	// 0x35021495
- (id)listWithID:(unsigned)anId skipOffset:(unsigned)offset;	// 0x35021511
- (id)listWithID:(unsigned)anId skipOffset:(unsigned)offset includeHidden:(BOOL)hidden;	// 0x35021535
- (id)listWithSpecialID:(unsigned)specialID;	// 0x350214a9
- (void)localeSettingsChanged;	// 0x35023d1d
- (BOOL)mergeWithBookmarksDictionary:(id)bookmarksDictionary clearHidden:(BOOL)hidden error:(id *)error;	// 0x3502459d
- (BOOL)moveBookmark:(id)bookmark toFolderWithID:(unsigned)anId;	// 0x35022bd1
- (id)readingList;	// 0x35021621
- (id)readingListFolder;	// 0x3502143d
- (unsigned)readingListFolderBookmarkID;	// 0x350235f9
- (id)readingListItemsWithIconData:(BOOL)iconData unreadOnly:(BOOL)only;	// 0x35023449
- (BOOL)reorderBookmark:(id)bookmark toIndex:(unsigned)index;	// 0x35021649
- (BOOL)reorderList:(id)list moveBookmarkAtIndex:(unsigned)index toIndex:(unsigned)index3;	// 0x35022811
- (void)retrieveBookmarksMatchingString:(id)string delegate:(id)delegate userInfo:(void *)info;	// 0x350224c1
- (void)rollbackSyncTransaction;	// 0x350246dd
// converted property getter: - (id)rootBookmark;	// 0x35021451
- (id)rootList;	// 0x350215f9
- (BOOL)saveBookmark:(id)bookmark;	// 0x350232b9
// declared property setter: - (void)setMerging:(BOOL)merging;	// 0x3502139d
- (BOOL)setSyncData:(id)data forKey:(id)key;	// 0x350256ad
- (id)subfoldersOfID:(unsigned)anId;	// 0x35023759
- (id)syncDataForKey:(id)key;	// 0x3502584d
- (BOOL)syncSetString:(id)string forKey:(id)key;	// 0x350253f1
- (id)syncStringForKey:(id)key;	// 0x35025571
- (id)unreadReadingList;	// 0x35021635
- (BOOL)vacuum;	// 0x350213fd
@end

