/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import "MPFilterSupport.h"
#import <NSObject.h> // Unknown library

@class MCSlide, MPLayerGroup, NSMutableDictionary, MPSlideInternal, NSMutableArray, NSString, MPFrame;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport> {
@private
	MPFrame *_frame;	// 4 = 0x4
	NSMutableDictionary *_attributes;	// 8 = 0x8
	NSString *_path;	// 12 = 0xc
	MPLayerGroup *_layerGroup;	// 16 = 0x10
	NSMutableArray *_filters;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCSlide *_slide;	// 28 = 0x1c
	NSObject<MPEffectSupport> *_parent;	// 32 = 0x20
	MPSlideInternal *_internal;	// 36 = 0x24
}
@property(copy) NSString *absolutePath;	// G=0x32ecb961; S=0x32ecba01; @dynamic
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x32eccaf1; converted property
@property(assign) double audioDuckInDuration;	// G=0x32ece111; S=0x32ece131; @dynamic
@property(assign) float audioDuckLevel;	// G=0x32ece2c9; S=0x32ece2f9; @dynamic
@property(assign) double audioDuckOutDuration;	// G=0x32ece1ed; S=0x32ece20d; @dynamic
@property(assign) double audioFadeInDuration;	// G=0x32ecdf59; S=0x32ecdf79; @dynamic
@property(assign) double audioFadeOutDuration;	// G=0x32ece035; S=0x32ece055; @dynamic
@property(assign) float audioVolume;	// G=0x32ecde5d; S=0x32ecdeb1; @dynamic
@property(assign) CGPoint center;	// G=0x32ecec01; S=0x32ecec31; @dynamic
@property(assign) double duration;	// G=0x32ecdc75; S=0x32ecdd69; @dynamic
@property(readonly, retain) NSMutableArray *filters;	// G=0x32ecbe35; converted property
@property(retain) MPFrame *frame;	// G=0x32ecb639; S=0x32ecb649; @dynamic
@property(assign) BOOL isSecondary;	// G=0x32ecee91; S=0x32ecf3bd; converted property
@property(retain) MPLayerGroup *layerGroup;	// G=0x32ecbca5; S=0x32ecbcb5; 
@property(retain) id parent;	// G=0x32ecea85; S=0x32ed0b91; converted property
@property(copy) NSString *path;	// G=0x32ecb741; S=0x32ecb751; @dynamic
@property(assign) float rotation;	// G=0x32ecedc9; S=0x32ecede9; @dynamic
@property(assign) float scale;	// G=0x32eced01; S=0x32eced21; @dynamic
@property(retain) id scriptingAnimations;	// G=0x32ed0d31; S=0x32ed1071; converted property
@property(retain) id scriptingFrame;	// G=0x32ed1299; S=0x32ed135d; converted property
@property(copy) NSString *sizingMode;	// G=0x32ece3a9; S=0x32ece541; @dynamic
@property(retain) MCSlide *slide;	// G=0x32ecefb1; S=0x32ecfc95; converted property
@property(assign) double startTime;	// G=0x32ecdac5; S=0x32ecdb81; @dynamic
+ (id)slide;	// 0x32ec9e4d
+ (id)slideWithPath:(id)path;	// 0x32ec9e85
- (id)init;	// 0x32ec9ec1
- (id)initWithCoder:(id)coder;	// 0x32eca955
- (id)initWithLayerGroup:(id)layerGroup;	// 0x32ecb219
- (id)initWithPath:(id)path;	// 0x32ecb1d5
// declared property getter: - (id)absolutePath;	// 0x32ecb961
- (id)action;	// 0x32ecf2bd
- (void)addFilter:(id)filter;	// 0x32ecbe45
- (void)addFilters:(id)filters;	// 0x32ecbea5
- (id)animationPathForKey:(id)key;	// 0x32eccb01
// converted property getter: - (id)animationPaths;	// 0x32eccaf1
- (float)aspectRatio;	// 0x32ecea6d
// declared property getter: - (double)audioDuckInDuration;	// 0x32ece111
// declared property getter: - (float)audioDuckLevel;	// 0x32ece2c9
// declared property getter: - (double)audioDuckOutDuration;	// 0x32ece1ed
// declared property getter: - (double)audioFadeInDuration;	// 0x32ecdf59
// declared property getter: - (double)audioFadeOutDuration;	// 0x32ece035
// declared property getter: - (float)audioVolume;	// 0x32ecde5d
// declared property getter: - (CGPoint)center;	// 0x32ecec01
- (void)cleanup;	// 0x32ecf835
- (void)copyAnimationPaths:(id)paths;	// 0x32ecf759
- (void)copyFilters:(id)filters;	// 0x32ecf661
- (void)copyFrame:(id)frame;	// 0x32ecf589
- (void)copyLayerGroup:(id)group;	// 0x32ecf5f5
- (void)copyStruct:(id)aStruct;	// 0x32ecf3dd
- (id)copyWithZone:(NSZone *)zone;	// 0x32ecb279
- (int)countOfFilter;	// 0x32ed0c01
- (void)dealloc;	// 0x32ecb511
- (id)description;	// 0x32ecb381
- (BOOL)determineShowTime:(double *)time showDuration:(double *)duration;	// 0x32ecf9a5
- (void)dump;	// 0x32ecefc1
- (void)duplicateAnimationPaths;	// 0x32ed08d9
// declared property getter: - (double)duration;	// 0x32ecdc75
- (void)encodeWithCoder:(id)coder;	// 0x32eca171
// converted property getter: - (id)filters;	// 0x32ecbe35
- (void)finalize;	// 0x32ecb4d1
// declared property getter: - (id)frame;	// 0x32ecb639
- (id)fullDebugLog;	// 0x32ecefe9
- (BOOL)hasMovie;	// 0x32ecf159
- (int)index;	// 0x32ece7fd
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x32ecbee9
- (void)insertObject:(id)object inFilterAtIndex:(int)index;	// 0x32ed0c41
// converted property getter: - (BOOL)isSecondary;	// 0x32ecee91
// declared property getter: - (id)layerGroup;	// 0x32ecbca5
- (int)liveIndex;	// 0x32ece969
- (double)maxDuration;	// 0x32ecf2a9
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x32ecc835
- (id)nearestLayer;	// 0x32ecf921
- (id)objectInFilterAtIndex:(int)index;	// 0x32ed0c21
// converted property getter: - (id)parent;	// 0x32ecea85
- (id)parentDocument;	// 0x32ecf901
- (id)parentEffect;	// 0x32ecea75
- (id)parentSubtitleEffect;	// 0x32ecea95
// declared property getter: - (id)path;	// 0x32ecb741
- (void)removeAllFilters;	// 0x32ecc7d1
- (void)removeAnimationPathForKey:(id)key;	// 0x32ecd0dd
- (void)removeFiltersAtIndices:(id)indices;	// 0x32ecc45d
- (void)removeObjectFromFilterAtIndex:(int)index;	// 0x32ed0c81
- (void)replaceObjectInFilterAtIndex:(int)index withObject:(id)object;	// 0x32ed0cbd
- (void)resetCachedTimes;	// 0x32ecf33d
// declared property getter: - (float)rotation;	// 0x32ecedc9
// declared property getter: - (float)scale;	// 0x32eced01
// converted property getter: - (id)scriptingAnimations;	// 0x32ed0d31
// converted property getter: - (id)scriptingFrame;	// 0x32ed1299
// declared property setter: - (void)setAbsolutePath:(id)path;	// 0x32ecba01
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x32eccce9
// declared property setter: - (void)setAudioDuckInDuration:(double)duration;	// 0x32ece131
// declared property setter: - (void)setAudioDuckLevel:(float)level;	// 0x32ece2f9
// declared property setter: - (void)setAudioDuckOutDuration:(double)duration;	// 0x32ece20d
// declared property setter: - (void)setAudioFadeInDuration:(double)duration;	// 0x32ecdf79
// declared property setter: - (void)setAudioFadeOutDuration:(double)duration;	// 0x32ece055
// declared property setter: - (void)setAudioVolume:(float)volume;	// 0x32ecdeb1
// declared property setter: - (void)setCenter:(CGPoint)center;	// 0x32ecec31
// declared property setter: - (void)setDuration:(double)duration;	// 0x32ecdd69
// declared property setter: - (void)setFrame:(id)frame;	// 0x32ecb649
// converted property setter: - (void)setIsSecondary:(BOOL)secondary;	// 0x32ecf3bd
// declared property setter: - (void)setLayerGroup:(id)group;	// 0x32ecbcb5
- (void)setMediaType:(int)type;	// 0x32ecf289
- (void)setMirrorToDuplicatePaths:(BOOL)duplicatePaths;	// 0x32ecf39d
// converted property setter: - (void)setParent:(id)parent;	// 0x32ed0b91
// declared property setter: - (void)setPath:(id)path;	// 0x32ecb751
// declared property setter: - (void)setRotation:(float)rotation;	// 0x32ecede9
// declared property setter: - (void)setScale:(float)scale;	// 0x32eced21
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x32ed1071
// converted property setter: - (void)setScriptingFrame:(id)frame;	// 0x32ed135d
// declared property setter: - (void)setSizingMode:(id)mode;	// 0x32ece541
// converted property setter: - (void)setSlide:(id)slide;	// 0x32ecfc95
// declared property setter: - (void)setStartTime:(double)time;	// 0x32ecdb81
- (void)setUserInfoAttribute:(id)attribute forKey:(id)key;	// 0x32eceee1
- (double)showDisplayStartTime;	// 0x32ecd985
- (double)showDisplayTime;	// 0x32ecd6c5
- (double)showDuration;	// 0x32ecd505
- (double)showTime;	// 0x32ecd389
// declared property getter: - (id)sizingMode;	// 0x32ece3a9
// converted property getter: - (id)slide;	// 0x32ecefb1
// declared property getter: - (double)startTime;	// 0x32ecdac5
- (id)userInfoAttributeForKey:(id)key;	// 0x32eceeb5
@end

