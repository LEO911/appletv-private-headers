/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "ASEvent.h"
#import "NSCoding.h"
#import "ASParsingAcceptingTopLevelLeaves.h"

@class NSMutableDictionary, NSDate, NSNumber;

@interface ASEventException : ASEvent <ASParsingAcceptingTopLevelLeaves, NSCoding> {
	NSNumber *_isDeleted;	// 172 = 0xac
	NSDate *_exceptionStartTime;	// 176 = 0xb0
	NSMutableDictionary *_placeHolder;	// 180 = 0xb4
	ASEvent *_originalEvent;	// 184 = 0xb8
}
@property(retain) id exceptionDate;	// G=0x30a5e149; S=0x30a5e159; converted property
@property(retain) NSDate *exceptionStartTime;	// G=0x30a5e4f9; S=0x30a5e531; converted property
@property(retain) NSNumber *isDeleted;	// G=0x30a5e47d; S=0x30a5e4b5; converted property
@property(retain) ASEvent *originalEvent;	// G=0x30a5e45d; S=0x30a5e46d; converted property
+ (BOOL)acceptsTopLevelLeaves;	// 0x30a5c46d
+ (BOOL)frontingBasicTypes;	// 0x30a5c569
+ (BOOL)notifyOfUnknownTokens;	// 0x30a5c5bd
+ (BOOL)parsingLeafNode;	// 0x30a5c4c1
+ (BOOL)parsingWithSubItems;	// 0x30a5c515
- (id)initWithCalEvent:(void *)calEvent originalEvent:(id)event account:(id)account;	// 0x30a5da69
- (id)initWithCoder:(id)coder;	// 0x30a5e169
- (id)initWithExceptionStartTime:(id)exceptionStartTime;	// 0x30a5dbe9
- (void)_loadAttributesFromCalEvent:(void *)calEvent withKnownExceptionDate:(id)knownExceptionDate forAccount:(id)account;	// 0x30a5d9dd
- (id)_transformedExceptionStartDateForActiveSync:(id)activeSync;	// 0x30a5ccd9
- (id)_transformedExceptionStartDateForCalFramework:(id)calFramework;	// 0x30a5cc89
- (void)appendActiveSyncDataForTask:(id)task toWBXMLData:(id)wbxmldata;	// 0x30a5dc85
- (void)applyPlaceHolder;	// 0x30a5c611
- (id)asParseRules;	// 0x30a5c6cd
- (void)clearPlaceHolder;	// 0x30a5c631
- (void)dealloc;	// 0x30a5e0d5
- (BOOL)deleteFromCalendar;	// 0x30a5dc65
- (id)description;	// 0x30a5e025
- (void)encodeWithCoder:(id)coder;	// 0x30a5e295
// converted property getter: - (id)exceptionDate;	// 0x30a5e149
// converted property getter: - (id)exceptionStartTime;	// 0x30a5e4f9
- (BOOL)hasOccurrenceInTheFuture;	// 0x30a5e3a1
// converted property getter: - (id)isDeleted;	// 0x30a5e47d
- (void)loadClientIDs;	// 0x30a5dfc5
// converted property getter: - (id)originalEvent;	// 0x30a5e45d
- (void)parseASParseContext:(id)context root:(id)root parent:(id)parent callbackDict:(id)dict streamCallbackDict:(id)dict5 account:(id)account;	// 0x30a5cc0d
- (void)postProcessApplicationData;	// 0x30a5d0a1
- (void)saveToCalendarWithParentASEvent:(id)parentASEvent existingRecord:(void *)record intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x30a5cf59
- (id)serverIdForCalFrameworkWithParentEvent:(id)parentEvent;	// 0x30a5cd41
// converted property setter: - (void)setExceptionDate:(id)date;	// 0x30a5e159
// converted property setter: - (void)setExceptionStartTime:(id)time;	// 0x30a5e531
// converted property setter: - (void)setIsDeleted:(id)deleted;	// 0x30a5e4b5
- (void)setObject:(id)object forDCCPT:(int)dccpt;	// 0x30a5c65d
// converted property setter: - (void)setOriginalEvent:(id)event;	// 0x30a5e46d
- (void)takeValuesFromParentForAccount:(id)account;	// 0x30a5d3e5
- (id)uidGeneratedIfNecessaryWithLocalEvent:(void *)localEvent;	// 0x30a5d259
- (BOOL)verifyExternalIds;	// 0x30a5cdbd
@end

