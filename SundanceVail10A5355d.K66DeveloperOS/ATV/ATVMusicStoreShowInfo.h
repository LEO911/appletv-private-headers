/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSString, NSMutableDictionary, ATVDataType, NSDictionary;

__attribute__((visibility("hidden")))
@interface ATVMusicStoreShowInfo : XXUnknownSuperclass {
	NSString *_key;	// 4 = 0x4
	ATVDataType *_mediaType;	// 8 = 0x8
	NSString *_itemID;	// 12 = 0xc
	NSMutableDictionary *_episodeData;	// 16 = 0x10
	int _episodeDataLock;	// 20 = 0x14
	NSDictionary *_itemDictionary;	// 24 = 0x18
}
@property(assign) long bookmarkTimeInMS;	// G=0x3915f1; S=0x39162d; converted property
@property(assign) BOOL hasBeenPlayed;	// G=0x391739; S=0x391771; converted property
@property(assign) BOOL hasBeenRented;	// G=0x3917b5; S=0x3917ed; converted property
@property(assign) BOOL isMarkedAsUnwatched;	// G=0x391851; S=0x391889; converted property
@property(readonly, assign, nonatomic) NSDictionary *itemDictionary;	// G=0x391909; @synthesize=_itemDictionary
@property(readonly, retain) NSString *itemID;	// G=0x3918dd; converted property
@property(readonly, retain) ATVDataType *mediaType;	// G=0x3918cd; converted property
@property(assign) long playCount;	// G=0x3916b9; S=0x3916f5; converted property
+ (id)_guidForItemDictionary:(id)itemDictionary;	// 0x38fd4d
+ (id)_guidForTypeName:(id)typeName episodeID:(id)anId;	// 0x38fd05
+ (id)_lookupShowInfoForTypeName:(id)typeName forEpisodeID:(id)episodeID initIfNotFound:(BOOL)found;	// 0x391919
+ (void)beginBulkUpdate;	// 0x390f65
+ (void)commitBulkUpdate:(id)update;	// 0x390fa1
+ (void)fetchBookmarkTimeForAsset:(id)asset timeout:(double)timeout completionHandler:(id)handler;	// 0x390e01
+ (void)fetchRemoteShowInfoForIDs:(id)ids ofType:(id)type timeout:(double)timeout handler:(id)handler;	// 0x390d71
+ (void)fetchRemoteShowInfoForIDs:(id)ids ofTypes:(id)types timeout:(double)timeout handler:(id)handler;	// 0x38fe29
+ (id)lookupShowInfoForItemDictionary:(id)itemDictionary initIfNotFound:(BOOL)found;	// 0x38fbf9
+ (id)lookupShowInfoForMediaItem:(id)mediaItem initIfNotFound:(BOOL)found;	// 0x38fad1
+ (void)synchronizeUpdates:(id)updates;	// 0x391519
- (id)_initWithDictionary:(id)dictionary withKey:(id)key withItemID:(id)itemID withMediaType:(id)mediaType;	// 0x391a49
- (id)_objectForKey:(id)key;	// 0x391b81
- (void)_setObject:(id)object forKey:(id)key;	// 0x391d25
- (void)_setObject:(id)object forKey:(id)key shouldAutocommit:(BOOL)autocommit;	// 0x391bf1
// converted property getter: - (long)bookmarkTimeInMS;	// 0x3915f1
- (void)dealloc;	// 0x391551
// converted property getter: - (BOOL)hasBeenPlayed;	// 0x391739
// converted property getter: - (BOOL)hasBeenRented;	// 0x3917b5
// converted property getter: - (BOOL)isMarkedAsUnwatched;	// 0x391851
// declared property getter: - (id)itemDictionary;	// 0x391909
// converted property getter: - (id)itemID;	// 0x3918dd
- (void)markAsUnwatched;	// 0x391db5
- (void)markAsWatched;	// 0x391d49
// converted property getter: - (id)mediaType;	// 0x3918cd
// converted property getter: - (long)playCount;	// 0x3916b9
// converted property setter: - (void)setBookmarkTimeInMS:(long)ms;	// 0x39162d
// converted property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x391771
// converted property setter: - (void)setHasBeenRented:(BOOL)rented;	// 0x3917ed
// converted property setter: - (void)setIsMarkedAsUnwatched:(BOOL)unwatched;	// 0x391889
// converted property setter: - (void)setPlayCount:(long)count;	// 0x3916f5
- (id)timestamp;	// 0x3918ed
@end

