/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import "BRApplianceBrowserProtocol.h"
#import "BRControl.h"

@class BRListView, BRCursorControl, BRScrollControl, NSMutableDictionary, BRTopShelfView, NSDate, BRApplianceCategoryListProvider, NSTimer, BRApplianceProvider, NSArray, NSString, BRImageControl;
@protocol BRAppliance;

__attribute__((visibility("hidden")))
@interface BRMainMenuControl : BRControl <BRApplianceBrowserProtocol> {
	int _focusState;	// 80 = 0x50
	BRApplianceProvider *_applianceProvider;	// 84 = 0x54
	id<BRAppliance> _currentAppliance;	// 88 = 0x58
	NSArray *_columns;	// 92 = 0x5c
	long _activeColumn;	// 96 = 0x60
	float _columnScrollAdjustment;	// 100 = 0x64
	long _curPreviewedColumn;	// 104 = 0x68
	long _oldPreviewedColumn;	// 108 = 0x6c
	BRTopShelfView *_curPreview;	// 112 = 0x70
	BRTopShelfView *_oldPreview;	// 116 = 0x74
	NSTimer *_previewTimer;	// 120 = 0x78
	BRImageControl *_logo;	// 124 = 0x7c
	BRImageControl *_backgroundImgControl;	// 128 = 0x80
	BRImageControl *_barGlow;	// 132 = 0x84
	BRControl *_topDivider;	// 136 = 0x88
	BRControl *_bottomDivider;	// 140 = 0x8c
	BRControl *_leftColumnFade;	// 144 = 0x90
	BRControl *_rightColumnFade;	// 148 = 0x94
	BRCursorControl *_cursor;	// 152 = 0x98
	BRScrollControl *_categoryScroller;	// 156 = 0x9c
	BRListView *_categoryList;	// 160 = 0xa0
	BRApplianceCategoryListProvider *_categoryListProvider;	// 164 = 0xa4
	NSString *_logoPath;	// 168 = 0xa8
	NSString *_menuBarGlowPath;	// 172 = 0xac
	NSString *_menuBarGlowInactivePath;	// 176 = 0xb0
	NSString *_gradientBackgroundPath;	// 180 = 0xb4
	NSTimer *_menuTimer;	// 184 = 0xb8
	NSDate *_menuTriggerTime;	// 188 = 0xbc
	NSMutableDictionary *_remembery;	// 192 = 0xc0
	BOOL _createCategoryList;	// 196 = 0xc4
	BOOL _isLoaded;	// 197 = 0xc5
	id _datasource;	// 200 = 0xc8
	id _delegate;	// 204 = 0xcc
}
@property(readonly, assign) id<BRAppliance> currentAppliance;	// G=0x2c5e49; @synthesize=_currentAppliance
@property(readonly, assign) long currentApplianceIndex;	// G=0x2c5e5d; @synthesize=_activeColumn
@property(assign) id datasource;	// G=0x2c5df1; S=0x2c5e05; @synthesize=_datasource
@property(assign) id delegate;	// G=0x2c5e1d; S=0x2c5e31; @synthesize=_delegate
+ (id)_categoryTextAttributes;	// 0x2c8135
- (id)init;	// 0x2c4069
- (BOOL)_activateColumnIndex:(long)index;	// 0x2c7711
- (void)_applianceProviderChanged:(id)changed;	// 0x2c90f9
- (float)_calculateLongestStringForColumn:(long)column;	// 0x2c8969
- (id)_categoryListActions;	// 0x2c8b19
- (void)_categoryListChanged:(id)changed;	// 0x2c88d9
- (id)_categoryListSlowActions;	// 0x2c8bd1
- (void)_categoryListTimerFired:(id)fired;	// 0x2c85c1
- (BOOL)_categorySelected:(id)selected;	// 0x2c766d
- (void)_createCategoryList;	// 0x2c8675
- (id)_currentApplianceKey;	// 0x2c7599
- (id)_currentCategoryIdentifier;	// 0x2c75dd
- (void)_delayedResetColumnsAndReload;	// 0x2c9129
- (void)_expandAndCollapseShelves;	// 0x2c8031
- (long)_focusedCategoryIndex;	// 0x2c8931
- (BOOL)_handleEventInMenuFocusedState:(id)menuFocusedState;	// 0x2c7971
- (BOOL)_handleEventInMenuUnocusedState:(id)menuUnocusedState;	// 0x2c7be9
- (BOOL)_handleEventInShelfFocusedState:(id)shelfFocusedState;	// 0x2c7bed
- (void)_hideCategoryList;	// 0x2c8389
- (void)_highlightDefaultCategory;	// 0x2c8d45
- (BOOL)_isCategoryListActive;	// 0x2c8c7d
- (void)_languageChanged:(id)changed;	// 0x2c9055
- (void)_layoutColumnsUsingFixedSpacing;	// 0x2c6249
- (void)_layoutColumnsUsingVariableSpacing;	// 0x2c5e71
- (id)_leftFadeFilters;	// 0x2c8e2d
- (BOOL)_previewColumnAtIndex:(long)index;	// 0x2c7c71
- (void)_previewTimerFired:(id)fired;	// 0x2c7f69
- (void)_reload;	// 0x2c6571
- (void)_removeCategoryList;	// 0x2c85e1
- (id)_rightFadeFilters;	// 0x2c8f41
- (void)_showCategoryList;	// 0x2c8341
- (void)_unload;	// 0x2c71f1
- (void)_updateAppliance;	// 0x2c72f9
- (void)_updateCategoryList;	// 0x2c83dd
- (void)_updateCategoryListAfterDelay:(double)delay;	// 0x2c8459
- (void)_updateCategoryProvider;	// 0x2c8285
- (void)_updateCategoryRemembery;	// 0x2c8cb9
- (void)_updatePreviewAfterDelay:(double)delay;	// 0x2c7fb1
- (id)accessibilityLabel;	// 0x2c5d81
- (id)accessibilityScreenContent;	// 0x2c8e0d
- (id)actionForCurrentSelection;	// 0x2c45f1
- (BOOL)brEventAction:(id)action;	// 0x2c4d2d
- (void)clearRemembery;	// 0x2c4861
- (void)controlWasActivated;	// 0x2c4ef5
- (void)controlWasDeactivated;	// 0x2c4fd9
- (id)controllerForCurrentSelection;	// 0x2c457d
- (BOOL)controllerMatchesCurrentSelection:(id)selection;	// 0x2c4799
// declared property getter: - (id)currentAppliance;	// 0x2c5e49
// declared property getter: - (long)currentApplianceIndex;	// 0x2c5e5d
// declared property getter: - (id)datasource;	// 0x2c5df1
- (void)dealloc;	// 0x2c42f9
// declared property getter: - (id)delegate;	// 0x2c5e1d
- (id)focusedControlForEvent:(id)event focusPoint:(CGPoint *)point;	// 0x2c4ee5
- (void)highlightApplianceWithKey:(id)key andCategoryWithIdentifier:(id)identifier;	// 0x2c46d5
- (void)highlightItemsForController:(id)controller;	// 0x2c4671
- (BOOL)isAccessibilityElement;	// 0x2c5d3d
- (void)layoutSubcontrols;	// 0x2c5095
- (float)list:(id)list heightForItemAtIndexPath:(id)indexPath;	// 0x2c5d25
- (void)reloadTopShelf;	// 0x2c4881
// declared property setter: - (void)setDatasource:(id)datasource;	// 0x2c5e05
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x2c5e31
- (BOOL)setMenuFocusState:(int)state;	// 0x2c48a1
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x2c453d
- (void)windowMaxBoundsChanged;	// 0x2c503d
@end

