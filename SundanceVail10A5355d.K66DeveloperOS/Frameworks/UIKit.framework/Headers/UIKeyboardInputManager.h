/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x33c76e35; S=0x33c76e2d; converted property
@property(assign) unsigned phraseBoundary;	// G=0x33c76e65; S=0x33c76e61; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x33c76e71; S=0x33ad2ae5; converted property
+ (id)activeInstance;	// 0x33ad811d
+ (void)clearAllCentroids;	// 0x33ad8511
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x33c7707d
+ (id)keyboardUserDirectory;	// 0x33a1ad21
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x33ad8839
+ (void)releaseSharedInstance;	// 0x33a5d8cd
+ (void)removeAllDynamicDictionaries;	// 0x33c7719d
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x33c7710d
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x33a6570d
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x33a1aced
- (void)acceptInput;	// 0x33c76e1d
- (BOOL)acceptInputString:(id)string;	// 0x33aef845
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x33c76e49
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x33c76f69
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x33b1d78d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x33c76e01
- (id)addInputObject:(id)object;	// 0x33c772f5
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x33c76ee5
- (void)appendToInputContext:(id)inputContext;	// 0x33c76e21
- (id)autocorrection;	// 0x33c76e51
- (BOOL)canHandleKeyHitTest;	// 0x33c77391
- (BOOL)canUseGeometryKeyTouch;	// 0x33ad84e9
- (void)candidateRejected:(id)rejected;	// 0x33c7706d
- (id)candidates;	// 0x33c76e59
- (id)candidatesForString:(id)string;	// 0x33c76e55
- (CFArrayRef)chargeableKeys;	// 0x33c772ed
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x33c772f1
- (void)clearAllCentroids;	// 0x33c773a9
- (void)clearDynamicDictionary;	// 0x33c77079
- (void)clearInput;	// 0x33c76e19
- (void)clearInputContext;	// 0x33c76e29
- (void)clearKeyAreas;	// 0x33c77395
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x33c76f85
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x33a67f61
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x33c76f89
- (id)defaultCandidate;	// 0x33c76e79
- (unsigned)defaultCandidateIndex;	// 0x33c76e7d
- (id)deleteFromInput:(unsigned *)input;	// 0x33c76e11
- (void)deleteFromStrokeHistory;	// 0x33c773a1
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x33c76ee9
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x33c76eed
- (BOOL)ignoresDeadKeys;	// 0x33c77061
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x33c76f65
- (unsigned)inputCount;	// 0x33c76e39
- (BOOL)inputEmpty;	// 0x33c76e3d
// converted property getter: - (unsigned)inputIndex;	// 0x33c76e35
- (void)inputLocationChanged;	// 0x33c76e45
- (id)inputString;	// 0x33c76e41
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x33c7739d
- (void)lastAcceptedCandidateCorrected;	// 0x33c77071
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x33c76ef1
- (unsigned)maximumShortcutLengthAllowed;	// 0x33c773b5
- (BOOL)nextInputWouldStartSentence;	// 0x33c76ed1
// converted property getter: - (unsigned)phraseBoundary;	// 0x33c76e65
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x33c773a5
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x33c77399
- (id)remainingInput;	// 0x33c76e5d
- (id)remapKeyWithString:(id)string stringWithoutModifiers:(id)modifiers modifierFlags:(unsigned)flags;	// 0x33c7738d
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x33c76e25
- (id)searchStringForMarkedText;	// 0x33c76e85
- (void)setAutoCorrects:(BOOL)corrects;	// 0x33c76f71
- (void)setAutocapitalizationType:(int)type;	// 0x33c76f75
- (void)setAutocorrectionHistory:(id)history;	// 0x33c77075
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x33c772e9
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x33c76f7d
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x33c76f81
- (void)setInput:(id)input;	// 0x33c76e0d
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x33c76e2d
- (id)setInputObject:(id)object;	// 0x33c77341
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x33c76f79
- (void)setLearnsCorrection:(BOOL)correction;	// 0x33c7705d
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x33c76e61
- (void)setTypologyRecorder:(id)recorder;	// 0x33c773ad
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x33ad2ae5
- (id)shadowTyping;	// 0x33c772e5
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x33c773b9
- (BOOL)shouldAcceptCandidate:(id)candidate;	// 0x33c77069
- (BOOL)shouldExtendPriorWord;	// 0x33affb09
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x33c76ed5
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x33c76ed9
- (id)sortingMethods;	// 0x33c76edd
- (BOOL)stringEndsWord:(id)word;	// 0x33b1d5d5
- (id)stringForDoubleKey:(id)doubleKey;	// 0x33c76e99
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x33c76e4d
- (BOOL)suppliesCompletions;	// 0x33c76e91
- (BOOL)supportsNumberKeySelection;	// 0x33c76f6d
- (BOOL)supportsSetPhraseBoundary;	// 0x33c76e6d
- (BOOL)supportsShortcutConversion;	// 0x33c773b1
- (BOOL)suppressCompletionsForFieldEditor;	// 0x33c76e95
- (BOOL)suppressesCandidateDisplay;	// 0x33b3d5a1
- (void)textAccepted:(id)accepted;	// 0x33c77065
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x33c76ee1
- (BOOL)usesAutoDeleteWord;	// 0x33c76e75
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x33c76e71
- (unsigned)wordHistoryDepth;	// 0x33c76e31
@end

