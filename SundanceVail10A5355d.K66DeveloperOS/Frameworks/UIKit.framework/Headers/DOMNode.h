/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UIKit-Structs.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import <DOMNode.h> // Unknown library
#import "UIKeyInput.h"

@class UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant, UIResponder;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x33bffe59
- (id)createPickerCell;	// 0x33bffe61
- (id)createSelectedItem;	// 0x33bffe5d
- (id)itemTitle;	// 0x33bffe69
- (void)populateCell:(id)cell;	// 0x33bffe65
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x33c16231
- (id)urlScheme;	// 0x33c16289
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x33c23b29
- (BOOL)isSecure;	// 0x33c23c39
- (BOOL)isTextControl;	// 0x33c23c35
- (int)keyboardType;	// 0x33c23c3d
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x33c25899; S=0x33c2589d; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x33c25ac5; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x33c25251; S=0x33c25255; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x33c25afd; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x33c25269; S=0x33c2526d; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x33c265ad; S=0x33c26605; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x33c257c5; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x33c244c9; S=0x33c2415d; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x33c261b9; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x33c26745; S=0x33c26749; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x33c25261; S=0x33c25265; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x33c258f9; S=0x33c25a51; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x33c26b51; S=0x33c26ba9; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x33c24f95; S=0x33c24f01; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x33c25259; S=0x33c2525d; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x33c25249; S=0x33c2524d; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x33c23eb1; S=0x33c23eb5; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x33c265a9; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x33c25ec9
- (NSRange)_markedTextNSRange;	// 0x33c24a45
- (CGRect)_selectionClipRect;	// 0x33c25869
- (id)_textSelectingContainer;	// 0x33c258a1
- (void)acceptedAutoFillWord:(id)word;	// 0x33c25711
- (id)automaticallySelectedOverlay;	// 0x33c25271
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x33c2695d
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x33c25899
- (void)beginSelectionChange;	// 0x33c23e51
// declared property getter: - (id)beginningOfDocument;	// 0x33c25ac5
- (CGRect)caretRect;	// 0x33c250a5
- (CGRect)caretRectForPosition:(id)position;	// 0x33c26661
- (unsigned short)characterAfterCaretSelection;	// 0x33c246ed
- (unsigned short)characterBeforeCaretSelection;	// 0x33c2411d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x33c240d9
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x33c2680d
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x33c268f1
- (id)closestPositionToPoint:(CGPoint)point;	// 0x33c2674d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x33c267ad
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x33c262d1
- (void)confirmMarkedText:(id)text;	// 0x33c242c9
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x33c256e1
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x33c24e01
- (id)content;	// 0x33c2588d
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x33c25251
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x33c251b9
- (id)delegate;	// 0x33c23e05
- (void)deleteBackward;	// 0x33c23eb9
- (BOOL)editable;	// 0x33c26b49
- (BOOL)editing;	// 0x33c26b4d
// declared property getter: - (id)endOfDocument;	// 0x33c25afd
- (void)endSelectionChange;	// 0x33c23e81
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x33c249a9
- (void)extendCurrentSelection:(int)selection;	// 0x33c24c19
- (CGRect)firstRectForRange:(id)range;	// 0x33c25db1
- (id)fontForCaretSelection;	// 0x33c24731
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x33c24095
- (void)handleKeyWebEvent:(id)event;	// 0x33c23e0d
- (BOOL)hasContent;	// 0x33c23c6d
- (BOOL)hasSelection;	// 0x33c24ca9
- (BOOL)hasText;	// 0x33c262b9
// converted property getter: - (int)initialSelectionBehavior;	// 0x33c25269
// declared property getter: - (id)inputDelegate;	// 0x33c265ad
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x33c23fe5
- (id)insertDictationResultPlaceholder;	// 0x33c2403d
- (void)insertText:(id)text;	// 0x33c23f2d
// declared property getter: - (id)interactionAssistant;	// 0x33c257c5
- (BOOL)isAutoFillMode;	// 0x33c2576d
- (BOOL)isEditable;	// 0x33c25891
- (BOOL)isEditing;	// 0x33c25895
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x33c26415
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x33c264c9
- (BOOL)isShowingPlaceholder;	// 0x33c25245
// converted property getter: - (id)markedText;	// 0x33c244c9
// declared property getter: - (id)markedTextRange;	// 0x33c261b9
// declared property getter: - (id)markedTextStyle;	// 0x33c26745
- (id)metadataDictionariesForDictationResults;	// 0x33c24015
- (void)moveBackward:(unsigned)backward;	// 0x33c24d59
- (void)moveDown;	// 0x33c26145
- (void)moveForward:(unsigned)forward;	// 0x33c24d5d
- (void)moveLeft;	// 0x33c2605d
- (void)moveRight;	// 0x33c25fe9
- (void)moveUp;	// 0x33c260d1
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x33c248e5
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x33c2630d
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x33c263b5
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x33c26349
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x33c2645d
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x33c26889
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x33c248b9
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x33c24bdd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x33c24ba1
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x33c26511
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x33c25c21
- (CGRect)rectContainingCaretSelection;	// 0x33c24835
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x33c243b9
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x33c24465
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x33c24065
- (void)replaceCurrentWordWithText:(id)text;	// 0x33c2461d
- (void)replaceRange:(id)range withText:(id)text;	// 0x33c25d69
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x33c25c6d
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x33c24539
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x33c25d8d
- (BOOL)requiresKeyEvents;	// 0x33c23e09
// declared property getter: - (int)returnKeyType;	// 0x33c25261
- (void)selectAll;	// 0x33c24d61
- (id)selectedDOMRange;	// 0x33c24af1
// declared property getter: - (id)selectedTextRange;	// 0x33c258f9
// declared property getter: - (int)selectionAffinity;	// 0x33c26b51
- (BOOL)selectionAtDocumentStart;	// 0x33c24ce9
- (BOOL)selectionAtWordStart;	// 0x33c24d21
- (NSRange)selectionRange;	// 0x33c24aa5
- (id)selectionRectsForRange:(id)range;	// 0x33c26965
- (int)selectionState;	// 0x33c24dc1
- (id)selectionView;	// 0x33c2583d
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x33c26961
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x33c2589d
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x33c25255
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x33c2526d
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x33c26605
// converted property setter: - (void)setMarkedText:(id)text;	// 0x33c2415d
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x33c2420d
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x33c26749
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x33c25265
- (void)setSecure:(BOOL)secure;	// 0x33c23e01
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x33c24b29
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x33c25a51
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33c25969
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x33c26ba9
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x33c25081
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x33c24fe5
// converted property setter: - (void)setText:(id)text;	// 0x33c24f01
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x33c2525d
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x33c2524d
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x33c23eb5
- (void)setupPlaceholderTextIfNeeded;	// 0x33c23cad
- (void)takeTraitsFrom:(id)from;	// 0x33c23c41
// converted property getter: - (id)text;	// 0x33c24f95
- (id)textColorForCaretSelection;	// 0x33c24819
- (id)textDocument;	// 0x33c26bad
- (id)textInRange:(id)range;	// 0x33c25b35
- (id)textInputTraits;	// 0x33c23cb1
// declared property getter: - (int)textLoupeVisibility;	// 0x33c25259
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x33c25b89
// declared property getter: - (id)textSuggestionDelegate;	// 0x33c25249
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x33c23eb1
// declared property getter: - (id)tokenizer;	// 0x33c265a9
- (id)uiWebDocumentView;	// 0x33c23f9d
- (void)unmarkText;	// 0x33c26235
- (void)updateAutoscroll:(id)autoscroll;	// 0x33c252b9
- (void)updateSelection;	// 0x33c25865
- (id)wordContainingCaretSelection;	// 0x33c24951
- (int)wordOffsetInRange:(id)range;	// 0x33c24a09
- (id)wordRangeContainingCaretSelection;	// 0x33c24911
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x33c8c2e1
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x33b3304d
- (BOOL)isLikelyToBeginPageLoad;	// 0x33c8c485
- (BOOL)nodeCanBecomeFirstResponder;	// 0x33c8c489
- (BOOL)showsTapHighlight;	// 0x33b32f6d
- (id)tapHighlightColor;	// 0x33c8c441
- (BOOL)touchCalloutEnabled;	// 0x33c8c481
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x33cc0841
- (id)asDomRange;	// 0x33cc0845
- (id)asElement;	// 0x33cc054d
- (CGRect)boundingRect;	// 0x33b315a5
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x33cc0b55
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x33b3150d
- (BOOL)containsBlock:(id)block;	// 0x33cc0691
- (BOOL)containsNode:(id)node;	// 0x33cc04b9
- (BOOL)containsRange:(id)range;	// 0x33cc0925
- (id)enclosingDocument;	// 0x33cc0bc5
- (id)enclosingElementIncludingSelf;	// 0x33cc0571
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x33cc0dd1
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x33cc0bd5
- (BOOL)hasCustomLineHeight;	// 0x33cc0605
- (BOOL)isSameBlock:(id)block;	// 0x33cc0641
- (id)largerParent;	// 0x33cc0749
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x33cc0e71
- (id)parentBlock;	// 0x33cc05a9
- (id)rangeOfContents;	// 0x33cc0a2d
- (BOOL)rendersAsBlock;	// 0x33cc0829
- (BOOL)selectable;	// 0x33cc05b9
- (BOOL)strictlyContainsBlock:(id)block;	// 0x33cc0701
- (BOOL)strictlyContainsNode:(id)node;	// 0x33cc0509
- (id)webFrame;	// 0x33b316e9
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x33cd4acd; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x33cd78e5; 
- (unsigned long)_characterAfterCaretSelection;	// 0x33cd4c11
- (unsigned long)_characterBeforeCaretSelection;	// 0x33cd4c25
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x33cd4c39
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x33cd4cb1
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x33cd5eb1
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x33cd5921
- (void)_deleteByWord;	// 0x33cd55bd
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x33cd5949
- (void)_deleteToEndOfLine;	// 0x33cd57c5
- (void)_deleteToStartOfLine;	// 0x33cd5669
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x33cd53b1
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x33cd53c5
- (void)_extendCurrentSelection:(int)selection;	// 0x33cd51fd
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x33cd5d69
- (id)_fontForCaretSelection;	// 0x33cd5fd5
- (id)_fullRange;	// 0x33cd5d11
- (id)_fullText;	// 0x33cd4f19
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x33cd5195
- (int)_indexForTextPosition:(id)textPosition;	// 0x33cd4b3d
- (BOOL)_isEmptySelection;	// 0x33cd5121
- (id)_keyInput;	// 0x33cd4add
- (CGRect)_lastRectForRange:(id)range;	// 0x33cd5b19
- (void)_moveCurrentSelection:(int)selection;	// 0x33cd52cd
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x33cd7359
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x33cd754d
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x33cd7649
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x33cd704d
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x33cd6a31
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x33cd6da5
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x33cd6745
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x33cd6f91
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x33cd68a9
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x33cd6bb9
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x33cd64d1
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x33cd7165
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x33cd7cb1
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x33cd4b81
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x33cd7da1
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd7749
// declared property getter: - (id)_proxyTextInput;	// 0x33cd4acd
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x33cd5c1d
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x33cd5c89
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x33cd5ccd
- (void)_replaceCurrentWordWithText:(id)text;	// 0x33cd5aa5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x33cd5c19
- (id)_selectableText;	// 0x33cd4aad
- (int)_selectionAffinity;	// 0x33cd77ed
- (NSRange)_selectionAsNSRange;	// 0x33cd4ae1
- (BOOL)_selectionAtDocumentEnd;	// 0x33cd508d
- (BOOL)_selectionAtDocumentStart;	// 0x33cd501d
- (BOOL)_selectionAtWordStart;	// 0x33cd4f85
- (CGRect)_selectionClipRect;	// 0x33cd50fd
- (void)_setCaretSelectionAtEndOfSelection;	// 0x33cd5535
- (void)_setGestureRecognizers;	// 0x33cd78e9
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd6319
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x33cd7b31
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd7779
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x33cd60c5
- (id)_textColorForCaretSelection;	// 0x33cd5f15
// declared property getter: - (id)_textSelectingContainer;	// 0x33cd78e5
- (void)_unmarkText;	// 0x33cd7c59
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd6095
- (id)_wordContainingCaretSelection;	// 0x33cd4e81
- (int)selectionAffinity;	// 0x33cd82f9
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x33cd8451
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x33d13a35
- (id)_nextAssistedNode;	// 0x33d13a39
- (id)_previousAssistedNode;	// 0x33d13a7d
- (BOOL)_requiresAccessoryView;	// 0x33d139fd
- (BOOL)_requiresInputView;	// 0x33d13a15
- (void)_startAssistingDocumentView:(id)view;	// 0x33d13971
- (void)_stopAssistingDocumentView:(id)view;	// 0x33d139a5
- (BOOL)_supportsAccessoryClear;	// 0x33d13a31
- (BOOL)_supportsAutoFill;	// 0x33d13a2d
- (id)_textFormElement;	// 0x33d13ac1
@end

