/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIControl.h"
#import "UIKit-Structs.h"
#import "NSCoding.h"

@class _UIDatePickerView, NSDate, NSLocale, NSCalendar, NSTimeZone;

@interface UIDatePicker : UIControl <NSCoding> {
	_UIDatePickerView *_pickerView;	// 108 = 0x6c
}
@property(assign, nonatomic, getter=_allowsZeroCountdownDuration, setter=_setAllowsZeroCountdownDuration:) BOOL allowsZeroCountdownDuration;	// G=0x33c42309; S=0x33c4232d; 
@property(copy, nonatomic) NSCalendar *calendar;	// G=0x33c41e45; S=0x33c41e65; @dynamic
@property(assign, nonatomic) double countDownDuration;	// G=0x33c41f41; S=0x33c41f61; @dynamic
@property(retain, nonatomic) NSDate *date;	// G=0x33b698bd; S=0x33c41e85; @dynamic
@property(retain) id dateComponents;	// G=0x33c4208d; S=0x33c420ad; converted property
@property(assign, nonatomic) int datePickerMode;	// G=0x33c41d81; S=0x33b646c1; @dynamic
@property(readonly, assign, nonatomic, getter=_dateUnderSelectionBar) NSDate *dateUnderSelectionBar;	// G=0x33c42245; 
@property(assign, nonatomic, getter=_drawsBackground, setter=_setDrawsBackground:) BOOL drawsBackground;	// G=0x33c422e5; S=0x33c422c5; 
@property(retain, nonatomic) NSLocale *locale;	// G=0x33c41de5; S=0x33c41df5; @dynamic
@property(retain, nonatomic) NSDate *maximumDate;	// G=0x33c41f01; S=0x33c41f21; @dynamic
@property(retain, nonatomic) NSDate *minimumDate;	// G=0x33c41ec1; S=0x33c41ee1; @dynamic
@property(assign, nonatomic) int minuteInterval;	// G=0x33c41f81; S=0x33b64701; @dynamic
@property(assign) double timeInterval;	// G=0x33c4207d; S=0x33c4206d; converted property
@property(retain, nonatomic) NSTimeZone *timeZone;	// G=0x33c41e05; S=0x33c41e25; @dynamic
@property(assign, nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) BOOL usesBlackChrome;	// G=0x33c422a1; S=0x33c42281; 
+ (Class)_pickerViewClass;	// 0x33c417a1
- (id)initWithCoder:(id)coder;	// 0x33c417c1
- (id)initWithFrame:(CGRect)frame;	// 0x33b63b9d
// declared property getter: - (BOOL)_allowsZeroCountdownDuration;	// 0x33c42309
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;	// 0x33c41fa5
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;	// 0x33c41fa9
- (float)_contentWidth;	// 0x33c421e5
// declared property getter: - (id)_dateUnderSelectionBar;	// 0x33c42245
// declared property getter: - (BOOL)_drawsBackground;	// 0x33c422e5
- (void)_insertPickerView;	// 0x33b63ecd
- (CGSize)_intrinsicSizeWithinSize:(CGSize)size;	// 0x33c41fad
- (id)_locale;	// 0x33c41da5
- (void)_populateArchivedSubviews:(id)subviews;	// 0x33c41a91
- (id)_selectedTextForCalendarUnit:(unsigned)calendarUnit;	// 0x33c4234d
// declared property setter: - (void)_setAllowsZeroCountdownDuration:(BOOL)duration;	// 0x33c4232d
// declared property setter: - (void)_setDrawsBackground:(BOOL)background;	// 0x33c422c5
- (void)_setHidesLabels:(BOOL)labels;	// 0x33c42225
- (void)_setHighlightsToday:(BOOL)today;	// 0x33c42205
- (void)_setLocale:(id)locale;	// 0x33c41dc5
// declared property setter: - (void)_setUsesBlackChrome:(BOOL)chrome;	// 0x33c42281
// declared property getter: - (BOOL)_usesBlackChrome;	// 0x33c422a1
- (void)awakeFromNib;	// 0x33c41a19
// declared property getter: - (id)calendar;	// 0x33c41e45
// declared property getter: - (double)countDownDuration;	// 0x33c41f41
// declared property getter: - (id)date;	// 0x33b698bd
// converted property getter: - (id)dateComponents;	// 0x33c4208d
// declared property getter: - (int)datePickerMode;	// 0x33c41d81
- (void)encodeWithCoder:(id)coder;	// 0x33c41ae5
- (int)hour;	// 0x33c4210d
- (void)invalidateIntrinsicContentSize;	// 0x33c42009
// declared property getter: - (id)locale;	// 0x33c41de5
// declared property getter: - (id)maximumDate;	// 0x33c41f01
// declared property getter: - (id)minimumDate;	// 0x33c41ec1
- (int)minute;	// 0x33c4212d
// declared property getter: - (int)minuteInterval;	// 0x33c41f81
- (int)second;	// 0x33c4214d
- (void)setBounds:(CGRect)bounds;	// 0x33c4217d
// declared property setter: - (void)setCalendar:(id)calendar;	// 0x33c41e65
// declared property setter: - (void)setCountDownDuration:(double)duration;	// 0x33c41f61
// declared property setter: - (void)setDate:(id)date;	// 0x33c41e85
- (void)setDate:(id)date animate:(BOOL)animate;	// 0x33c4216d
- (void)setDate:(id)date animated:(BOOL)animated;	// 0x33b64981
// converted property setter: - (void)setDateComponents:(id)components;	// 0x33c420ad
// declared property setter: - (void)setDatePickerMode:(int)mode;	// 0x33b646c1
- (void)setDelegate:(id)delegate;	// 0x33c4204d
- (void)setFrame:(CGRect)frame;	// 0x33b63e65
- (void)setHighlightsToday:(BOOL)today;	// 0x33c420ed
// declared property setter: - (void)setLocale:(id)locale;	// 0x33c41df5
// declared property setter: - (void)setMaximumDate:(id)date;	// 0x33c41f21
// declared property setter: - (void)setMinimumDate:(id)date;	// 0x33c41ee1
// declared property setter: - (void)setMinuteInterval:(int)interval;	// 0x33b64701
- (void)setStaggerTimeIntervals:(BOOL)intervals;	// 0x33c420cd
// converted property setter: - (void)setTimeInterval:(double)interval;	// 0x33c4206d
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x33c41e25
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x33c41fdd
// converted property getter: - (double)timeInterval;	// 0x33c4207d
// declared property getter: - (id)timeZone;	// 0x33c41e05
@end

