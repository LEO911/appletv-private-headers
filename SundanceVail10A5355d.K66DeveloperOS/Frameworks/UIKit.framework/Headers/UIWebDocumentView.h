/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UIWebTiledView.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class UIColor, UIImage, UITextInteractionAssistant, WebThreadSafeUndoManager, NSMutableSet, NSArray, WebViewReachabilityObserver, NSTimer, UIWebRotatingSheet, UITextChecker, DOMHTMLElement, UILongPressGestureRecognizer, UIAutoscroll, UITapGestureRecognizer, CALayer, WebView, DOMNode, DOMElement, UIPanGestureRecognizer, DOMRange, UITextInputTraits, UITextRange, NSDictionary, _UITextServiceSession, UITextPosition, UIView, UIWebSelectionAssistant;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	unsigned _previousScrollWasScrollToTop : 1;	// 545 = 0x221
	unsigned _skipResettingNeedsScrollNotifications : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	int _selectionAffinity;	// 580 = 0x244
	DOMElement *_dictationResultPlaceholder;	// 584 = 0x248
	id _dictationResultPlaceholderRemovalObserver;	// 588 = 0x24c
	DOMRange *_rangeToRestoreAfterDictation;	// 592 = 0x250
	_UITextServiceSession *_definitionSession;	// 596 = 0x254
	_UITextServiceSession *_learnSession;	// 600 = 0x258
	BOOL _suppressesIncrementalRendering;	// 604 = 0x25c
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x33b79e89; S=0x33c288c1; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x33ca5849; S=0x33ca57d9; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x33c21f31; S=0x33c21f35; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x33b76c39; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x33ca4e5d; S=0x33a756f5; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x33a74e9d; S=0x33a90579; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x33afd32d; S=0x33a90b05; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x33c1c6f1; S=0x33b78569; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x33a9127d; converted property
@property(readonly, assign) int documentType;	// G=0x33a91229; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x33c1eae1; S=0x33a784a5; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x33c1ed59; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x33ac7ffd; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x33abeda1; S=0x33acd809; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x33c21205; 
@property(assign) id interactionDelegate;	// G=0x33c28745; S=0x33a90b19; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x33c1edad; S=0x33a7a46d; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x33c1ede9; S=0x33c1edd1; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x33c1c6d9; S=0x33a73ead; converted property
@property(retain) id markedText;	// G=0x33b1ec61; S=0x33b76b99; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x33acefe1; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x33c22b89; S=0x33c22b8d; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x33c1ea99; S=0x33c1ea51; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x33c231c9; S=0x33c231d9; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x33acb2fd; S=0x33ac8221; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x33acb351; S=0x33c22de9; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x33c22ded; S=0x33ae3af5; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x33aeb711; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x33c1ca5d; S=0x33c1ca45; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x33c1ea3d; S=0x33c1ea25; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x33c1ca31; S=0x33c1c9c9; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x33c1edc1; S=0x33a7a5e9; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x33c231e9; S=0x33c231f9; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x33c20d29; S=0x33c20bfd; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x33acf065; 
@property(retain) id typingAttributes;	// G=0x33c1c011; S=0x33c1c165; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x33acce55; converted property
@property(assign) BOOL updatesScrollView;	// G=0x33c1cdd5; S=0x33c1cdbd; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x33c21e89; converted property
@property(readonly, retain) WebView *webView;	// G=0x33a1af45; converted property
+ (id)_createDefaultHighlightView;	// 0x33b2dd81
+ (id)_sharedHighlightView;	// 0x33b2dd49
+ (double)getTimestamp;	// 0x33b30941
+ (BOOL)hasLandscapeOrientation;	// 0x33c1ceb5
+ (void)initialize;	// 0x33c1bb61
+ (Class)layerClass;	// 0x33a72a41
+ (id)standardTextViewPreferences;	// 0x33a72225
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x33a72331
- (id)initWithFrame:(CGRect)frame;	// 0x33a78479
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x33a7248d
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x33b2acf5
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x33b79e89
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x33c275e5
- (void)_addAdditionalSubview:(id)subview;	// 0x33c1de31
- (void)_addShortcut:(id)shortcut;	// 0x33c21985
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x33c1d579
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x33b2a159
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x33c2a021
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x33c2a2c5
- (void)_cancelLongPressGestureRecognizer;	// 0x33b2dfa1
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x33a78a01
- (void)_cleanupSheet;	// 0x33c2844d
- (void)_clearAllConsoleMessages;	// 0x33a79fd1
- (void)_clearDoubleTapRect;	// 0x33a79f69
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x33c22195
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x33c22461
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x33c290bd
- (BOOL)_dataDetectionIsActivated;	// 0x33a78abd
- (void)_define:(id)define;	// 0x33c2185d
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x33c1f68d
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x33a75a89
- (void)_didScroll;	// 0x33b2d981
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x33c1bded
- (float)_documentScale;	// 0x33b2c411
- (id)_documentUrl;	// 0x33c22e59
- (CGRect)_documentViewVisibleRect;	// 0x33a79ccd
- (id)_doubleTapGestureRecognizer;	// 0x33c288ad
- (void)_doubleTapRecognized:(id)recognized;	// 0x33c2755d
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x33c2ab01
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x33a750fd
- (void)_finishedUsingDictationPlaceholder;	// 0x33c1fd05
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x33c225a1
- (id)_focusedOrMainFrame;	// 0x33a19bb1
- (id)_groupName;	// 0x33b6f8fd
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x33c1ece1
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x33c1eb05
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x33c1ed1d
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x33c1e319
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x33b321e1
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x33c1bd39
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x33c1bd51
- (BOOL)_isInspectorSearchingForNode;	// 0x33c22ef9
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x33b2fbe1
- (CGRect)_lastRectForRange:(id)range;	// 0x33c22ad9
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x33a79aad
- (void)_longPressRecognized:(id)recognized;	// 0x33b31e29
- (NSRange)_markedTextNSRange;	// 0x33c208cd
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x33c1dd91
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x33c1dd25
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x33a72cd9
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x33c1d0fd
- (void)_notifyPlugInViewsOfDidZoom;	// 0x33c1d211
- (void)_notifyPlugInViewsOfScaleChange;	// 0x33a79999
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x33c1cfed
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x33c1e2d9
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x33c1e1d5
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x33c1e171
- (id)_parentTextView;	// 0x33acdac5
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33c229ed
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x33c1bd89
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x33c29c19
- (Class)_printFormatterClass;	// 0x33d4c9a1
- (void)_promptForReplace:(id)replace;	// 0x33c21e31
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x33a92815
- (void)_removeAdditionalSubview:(id)subview;	// 0x33c1de9d
- (void)_removeDefinitionController:(BOOL)controller;	// 0x33b3d211
- (void)_removeShortcutController:(BOOL)controller;	// 0x33c1bd69
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x33c1e4d1
- (void)_resetForNewPage;	// 0x33a7a685
- (void)_resetFormDataForFrame:(id)frame;	// 0x33a78f8d
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x33b32319
- (void)_resetShowingTextStyle:(id)style;	// 0x33c1bb85
- (void)_reshapePlugInViews;	// 0x33a7630d
- (id)_responderForBecomeFirstResponder;	// 0x33b7a081
- (void)_restoreFlattenedContentLayers;	// 0x33c22725
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x33b2af19
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x33a73a21
- (void)_runLoadBlock:(id)block;	// 0x33a78a85
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x33b2ce19
- (id)_scriptingInfoForForm:(id)form;	// 0x33c23489
- (id)_scriptingInfoForLink:(id)link;	// 0x33c2320d
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x33c22a75
- (CGRect)_selectionClipRect;	// 0x33c21349
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x33a75081
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x33c27d5d
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x33c288c1
- (void)_setDocumentScale:(float)scale;	// 0x33a7963d
- (void)_setDocumentType:(int)type;	// 0x33a90655
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x33a79095
- (void)_setFont:(id)font;	// 0x33c1be49
- (void)_setParentTextView:(id)view;	// 0x33a740a5
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x33b2c3f9
- (void)_setTextColor:(id)color;	// 0x33c1bf19
- (CGRect)_shortcutPresentationRect;	// 0x33c217b5
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x33c2234d
- (BOOL)_shouldResetForNewPage;	// 0x33c22eb9
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x33c1e3a5
- (BOOL)_shouldUseInitialScale;	// 0x33c22155
- (void)_showDataDetectorsSheet;	// 0x33c29865
- (void)_showImageSheet;	// 0x33c29371
- (void)_showLinkSheet;	// 0x33c2964d
- (void)_showPendingContentLayers;	// 0x33a7a931
- (void)_showTextStyleOptions:(id)options;	// 0x33c215f9
- (void)_singleTapRecognized:(id)recognized;	// 0x33b792c1
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x33afb39d
- (id)_targetURL;	// 0x33c282a1
- (id)_textSelectingContainer;	// 0x33afd73d
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x33c275a1
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x33c27769
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x33c1f035
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x33c1ef89
- (void)_updateCurrentViewportConfigurationSize;	// 0x33c1c955
- (void)_updateFixedPositionContent;	// 0x33b2e0dd
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x33c1d365
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x33b34861
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x33c21fa9
- (void)_updateScrollViewBoundaryZoomScales;	// 0x33a74199
- (void)_updateSize;	// 0x33b2a86d
- (void)_updateSubviewCaches;	// 0x33b2c581
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x33b2bee5
- (float)_zoomedDocumentScale;	// 0x33b2a801
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x33c28351
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x33c28401
- (void)addInputString:(id)string;	// 0x33c1f11d
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x33c1f0e1
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x33b32129
- (id)asText;	// 0x33ca61a9
- (void)assistFormNode:(id)node;	// 0x33c1ed91
- (void)attemptClick:(id)click;	// 0x33b799e5
- (id)automaticallySelectedOverlay;	// 0x33b731cd
- (CGRect)autoscrollContentFrame;	// 0x33c21f09
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x33ca5849
- (CGRect)autoscrollDragFrame;	// 0x33c21ee5
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x33c22dc5
- (BOOL)becomeFirstResponder;	// 0x33b79d01
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x33c21f31
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x33c2a811
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x33c2a60d
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x33c2a7a9
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x33c2a581
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x33c2a5b1
- (void)beginSelectionChange;	// 0x33ac7f7d
// declared property getter: - (id)beginningOfDocument;	// 0x33b76c39
- (BOOL)canBecomeFirstResponder;	// 0x33b79e6d
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x33aeaeb9
- (BOOL)canResignFirstResponder;	// 0x33b7a0b5
- (void)cancelAutoscroll;	// 0x33ca60d5
- (void)cancelInteraction;	// 0x33b30901
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x33b2db59
- (BOOL)cancelMouseTracking;	// 0x33c1cf65
- (BOOL)cancelTouchTracking;	// 0x33c1cf9d
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x33ca4e5d
- (CGRect)caretRect;	// 0x33a74ac9
- (CGRect)caretRectForPosition:(id)position;	// 0x33accaa9
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x33accd55
- (unsigned short)characterAfterCaretSelection;	// 0x33aeb775
- (unsigned short)characterBeforeCaretSelection;	// 0x33aeb745
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x33c20331
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x33c22c65
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x33c22d59
- (id)checkSpellingOfString:(id)string;	// 0x33b3e841
- (void)clearInteractionTimer;	// 0x33b2dd09
- (void)clearRangedSelectionInitialExtent;	// 0x33ca4f9d
- (void)clearSelection;	// 0x33ca4c25
- (BOOL)clearWKFirstResponder;	// 0x33b419d5
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x33ca4c79
- (id)closestPositionToPoint:(CGPoint)point;	// 0x33ae3499
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x33c22b95
- (void)collapseSelection;	// 0x33ca4e09
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x33b1d561
- (void)completeInteraction;	// 0x33b34c35
- (void)confirmMarkedText:(id)text;	// 0x33c202a9
- (BOOL)considerHeightForDoubleTap;	// 0x33c230b1
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x33c2b0c9
- (BOOL)containsOnlySelectableElements;	// 0x33b790ad
- (CGRect)contentFrameForView:(id)view;	// 0x33ca58c5
- (id)contentView;	// 0x33c22f1d
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x33c272c9
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x33c20ed1
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x33b3183d
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x33b317c5
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x33ae3579
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x33b31711
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x33c1c8f5
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x33a74bc1
- (void)copy:(id)copy;	// 0x33c214e5
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x33c1ceed
- (float)currentDocumentScale;	// 0x33c22f31
- (void)cut:(id)cut;	// 0x33c21419
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x33a74e9d
- (void)dealloc;	// 0x33b3cd1d
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x33c27f9d
- (void)deferInteraction;	// 0x33c28251
- (void)deferredBecomeFirstResponder;	// 0x33c1ee79
// converted property getter: - (id)delegate;	// 0x33afd32d
- (void)deleteBackward;	// 0x33b6e889
- (void)deleteFromInput;	// 0x33c1f131
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x33c1c6f1
- (id)dictationInterpretations;	// 0x33c20039
- (id)dictationResultMetadataForRange:(id)range;	// 0x33c1f62d
- (void)didEndScroll;	// 0x33b34755
- (void)didEndZoom;	// 0x33c22099
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x33c1c3ed
- (void)didMoveToSuperview;	// 0x33a74185
- (void)didRemovePlugInView:(id)view;	// 0x33b2cc25
- (void)didRotateInteractionSheet;	// 0x33c1e9bd
- (void)didZoom;	// 0x33c22041
- (void)disableClearsOnInsertion;	// 0x33c1f165
// converted property getter: - (CGRect)documentBounds;	// 0x33a9127d
// converted property getter: - (int)documentType;	// 0x33a91229
// converted property getter: - (CGRect)doubleTapRect;	// 0x33c1ed59
- (BOOL)doubleTapRectIsReplaced;	// 0x33c1ed7d
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x33c23051
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x33c2ad3d
- (unsigned)effectiveDataDetectorTypes;	// 0x33b6f765
- (void)enableReachability;	// 0x33a8f995
- (id)enclosingScrollView;	// 0x33c22f0d
// declared property getter: - (id)endOfDocument;	// 0x33ac7ffd
- (void)endPrintMode;	// 0x33c2a97d
- (void)endSelectionChange;	// 0x33ac850d
- (void)ensureSelection;	// 0x33b3ddc9
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x33c207ad
- (void)extendCurrentSelection:(int)selection;	// 0x33c209b9
- (CGRect)firstRectForRange:(id)range;	// 0x33b72fd1
- (id)fontForCaretSelection;	// 0x33b742fd
- (void)forceLayout;	// 0x33c1cde9
- (id)formElement;	// 0x33ae35e5
- (void)forwardInvocation:(id)invocation;	// 0x33a90049
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x33c1d821
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x33c1fc75
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x33b31d69
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x33b31c21
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x33b2fb79
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x33b31c95
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x33b3191d
- (int)getPasteboardChangeCount;	// 0x33c1db85
- (int)getPasteboardItemsCount;	// 0x33c1d725
- (void)handleKeyWebEvent:(id)event;	// 0x33c20f91
- (BOOL)hasContent;	// 0x33a19b59
- (BOOL)hasDrawnTiles;	// 0x33b27ae9
- (BOOL)hasEditableSelection;	// 0x33a750c5
- (BOOL)hasMarkedText;	// 0x33a74ec1
- (BOOL)hasPlugInSubviews;	// 0x33c211ad
- (BOOL)hasRangedSelection;	// 0x33c1f66d
- (BOOL)hasRichlyEditableSelection;	// 0x33c1d7a1
- (BOOL)hasSelection;	// 0x33c20a39
- (BOOL)hasSimpleTextOnlyStructure;	// 0x33b78f99
- (BOOL)hasText;	// 0x33b1c405
- (void)hideTapHighlight;	// 0x33b34435
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x33c28059
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x33b32395
- (id)hostViewForSheet:(id)sheet;	// 0x33c29c6d
- (id)implementationWebView;	// 0x33c20ee5
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x33c29c7d
- (float)initialScale;	// 0x33a7956d
// declared property getter: - (id)inputDelegate;	// 0x33abeda1
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x33c1f24d
- (id)insertDictationResultPlaceholder;	// 0x33c1f6f5
- (void)insertText:(id)text;	// 0x33b1d839
- (void)installGestureRecognizers;	// 0x33a72d59
- (float)integralScaleForScale:(float)scale;	// 0x33a798d9
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x33a798f1
// declared property getter: - (id)interactionAssistant;	// 0x33c21205
// converted property getter: - (id)interactionDelegate;	// 0x33c28745
- (id)interactionElement;	// 0x33c28771
- (CGPoint)interactionLocation;	// 0x33c28785
- (BOOL)isCaretInEmptyParagraph;	// 0x33aeb6b1
- (BOOL)isClassicViewportMode;	// 0x33c1ca71
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x33c1eae1
- (BOOL)isEditable;	// 0x33c21295
- (BOOL)isEditing;	// 0x33ae9791
- (BOOL)isEditingSingleLineElement;	// 0x33c1f1b5
- (BOOL)isInInteraction;	// 0x33c27479
- (BOOL)isInPrintMode;	// 0x33c29ecd
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x33c1d759
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x33ae3751
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x33ae3789
- (BOOL)isShowingFullScreenPlugInUI;	// 0x33b25909
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x33c1edad
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x33c1dbb9
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x33c1ede9
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x33b3e081
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x33b3e771
- (BOOL)keyboardInputChanged:(id)changed;	// 0x33affc7d
- (void)keyboardInputChangedSelection:(id)selection;	// 0x33afd249
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x33c20eed
- (void)layoutSubviews;	// 0x33a75ffd
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x33c1c5a5
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x33a789a9
- (void)loadRequest:(id)request;	// 0x33b27b69
// converted property getter: - (BOOL)loadsSynchronously;	// 0x33c1c6d9
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x33c21e79
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x33c21e69
- (BOOL)makeWKFirstResponder;	// 0x33afd479
// converted property getter: - (id)markedText;	// 0x33b1ec61
// declared property getter: - (id)markedTextRange;	// 0x33acefe1
// declared property getter: - (id)markedTextStyle;	// 0x33c22b89
- (float)maximumDoubleTapScale;	// 0x33c22149
- (float)maximumScale;	// 0x33c1c8dd
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x33c1ea99
- (id)metadataDictionariesForDictationResults;	// 0x33c1f4c1
- (id)methodSignatureForSelector:(SEL)selector;	// 0x33a75031
- (float)minimumScale;	// 0x33a79ea9
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x33c1c709
- (float)minimumScaleForSize:(CGSize)size;	// 0x33c22f81
- (BOOL)mouseEventsChangeSelection;	// 0x33c2af69
- (void)moveBackward:(unsigned)backward;	// 0x33c20ad1
- (void)moveForward:(unsigned)forward;	// 0x33c20b3d
- (BOOL)needsScrollNotifications;	// 0x33c1ca85
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x33c1cf11
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x33c206fd
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x33affb0d
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x33ca4d3d
- (void)paste:(id)paste;	// 0x33c21b55
- (void)performClick:(id)click;	// 0x33c27839
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x33c27231
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x33c1d871
- (BOOL)playsNicelyWithGestures;	// 0x33c21f2d
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x33ca61ad
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x33c22a4d
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x33afd109
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x33ae37bd
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x33c22ced
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x33c29cf9
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x33c20695
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x33c20985
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x33c20951
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x33acf069
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x33c22845
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x33c231c9
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x33c1dab5
- (CGRect)rectContainingCaretSelection;	// 0x33c205ed
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x33c203a5
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x33c22f91
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x33c20439
- (void)redrawScaledDocument;	// 0x33c1e67d
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x33c1fd3d
- (void)replace:(id)replace;	// 0x33c21d5d
- (void)replaceCurrentWordWithText:(id)text;	// 0x33c20145
- (void)replaceRange:(id)range withText:(id)text;	// 0x33c22929
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x33c20071
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x33b76aa1
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x33c20835
- (BOOL)requiresKeyEvents;	// 0x33ad964d
- (void)resetInteraction;	// 0x33b2dcd1
- (void)resetTilingAfterLoadComplete;	// 0x33a7a3d1
- (BOOL)resignFirstResponder;	// 0x33a7a485
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x33acba4d
- (void)saveStateToCurrentHistoryItem;	// 0x33b2cdc5
- (id)scriptingInfoWithChildren;	// 0x33b71201
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x33ca60f5
- (void)scrollViewWasRemoved;	// 0x33c21fc1
- (void)select:(id)select;	// 0x33c21cc1
- (void)selectAll;	// 0x33c20ba9
- (void)selectAll:(id)all;	// 0x33c21d0d
- (void)selectWord;	// 0x33ca4bd1
- (id)selectedDOMRange;	// 0x33c20921
// declared property getter: - (id)selectedTextRange;	// 0x33acb2fd
// declared property getter: - (int)selectionAffinity;	// 0x33acb351
- (BOOL)selectionAtDocumentStart;	// 0x33c20a71
- (BOOL)selectionAtWordStart;	// 0x33c20aa1
- (int)selectionBaseWritingDirection;	// 0x33afc3b9
- (void)selectionChanged;	// 0x33a743f9
- (void)selectionChanged:(id)changed;	// 0x33a74379
// declared property getter: - (int)selectionGranularity;	// 0x33c22ded
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x33ca5779
- (NSRange)selectionRange;	// 0x33b3e731
- (id)selectionRects;	// 0x33ca5491
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x33ca5305
- (id)selectionRectsForRange:(id)range;	// 0x33c22dfd
// declared property getter: - (int)selectionState;	// 0x33aeb711
- (id)selectionView;	// 0x33a744b5
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x33b2b1b1
- (void)sendScrollEventIfNecessary;	// 0x33b2e181
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x33c1ca9d
- (void)sendScrollWheelEvents;	// 0x33c284dd
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x33b6f6d9
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x33a90bc9
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x33c28759
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x33a73c59
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x33a90639
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x33ca57d9
- (void)setBaseWritingDirection:(int)direction;	// 0x33ca4ed9
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x33afd215
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x33c21f35
- (void)setBottomBufferHeight:(float)height;	// 0x33c20f61
- (void)setCaretChangeListener:(id)listener;	// 0x33c20ea1
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x33a756f5
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x33ace50d
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x33a90579
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x33a90b05
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x33b78569
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x33a784a5
- (void)setDrawsBackground:(BOOL)background;	// 0x33a740fd
- (void)setFrame:(CGRect)frame;	// 0x33a72a9d
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x33a73e11
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x33c1cfd1
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x33c1cda1
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x33a73ba5
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x33acd809
- (void)setInteractionAssistantGestureRecognizers;	// 0x33c1eea9
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x33a90b19
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x33a7a46d
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x33c1edd1
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x33a73ead
// converted property setter: - (void)setMarkedText:(id)text;	// 0x33b76b99
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x33c2020d
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x33c22b8d
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x33a73c1d
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x33c1ea51
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x33a73be1
- (void)setMinimumSize:(CGSize)size;	// 0x33a73951
- (void)setOpaque:(BOOL)opaque;	// 0x33a740b9
- (void)setPaused:(BOOL)paused;	// 0x33c20fcd
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x33c20fe1
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x33c231d9
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x33ca4f0d
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x33ca4f6d
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x33ca4f3d
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x33ca502d
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x33ca50cd
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x33ca4ffd
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x33ca4fcd
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x33ca564d
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x33ca5281
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x33ac8459
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x33ac8221
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33c227a5
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x33c22de9
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x33ae3af5
- (void)setSelectionToEnd;	// 0x33ca56d1
- (void)setSelectionToStart;	// 0x33ca5725
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x33ca5169
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x33ca60f9
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x33c1ca45
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x33c1ea25
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x33c1c9c9
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x33a90b31
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x33a7a5e9
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x33c231f9
// converted property setter: - (void)setText:(id)text;	// 0x33c20bfd
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x33b29b79
- (void)setTilingArea:(int)area;	// 0x33a78f91
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x33c1c165
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x33c1cdbd
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x33b77d15
- (void)setUserStyleSheet:(id)sheet;	// 0x33b6f809
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x33a73c91
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x33c1ca5d
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x33c1ea3d
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x33c230d9
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x33c1ca31
- (void)smartExtendRangedSelection:(int)selection;	// 0x33ca5619
// converted property getter: - (id)standaloneEditingElement;	// 0x33c1edc1
- (BOOL)startActionSheet;	// 0x33c27399
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x33ca58fd
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x33c27295
- (void)stopLoading:(id)loading;	// 0x33b34bd5
- (id)subviews;	// 0x33a73d2d
- (id)superviewForSheet;	// 0x33c287a1
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x33c1da7d
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x33c28645
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x33c231e9
- (void)takeTraitsFrom:(id)from;	// 0x33c211d9
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x33c272f1
// converted property getter: - (id)text;	// 0x33c20d29
- (id)textColorForCaretSelection;	// 0x33c20369
- (id)textFormElement;	// 0x33c1eda9
- (id)textInDOMRange:(id)domrange;	// 0x33afd755
- (id)textInRange:(id)range;	// 0x33addbb9
- (id)textInputTraits;	// 0x33a738d1
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x33ac80cd
- (void)toggleBaseWritingDirection;	// 0x33ca4e85
- (void)toggleBoldface:(id)boldface;	// 0x33c21515
- (void)toggleItalics:(id)italics;	// 0x33c21561
- (void)toggleUnderline:(id)underline;	// 0x33c215ad
// declared property getter: - (id)tokenizer;	// 0x33acf065
// converted property getter: - (id)typingAttributes;	// 0x33c1c011
// converted property getter: - (id)undoManager;	// 0x33acce55
- (id)undoManagerForWebView:(id)webView;	// 0x33acce79
- (void)unmarkText;	// 0x33b3dcbd
- (void)updateInteractionElements;	// 0x33c1e8c5
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x33c1edfd
- (void)updateSelection;	// 0x33c21345
// converted property getter: - (BOOL)updatesScrollView;	// 0x33c1cdd5
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x33a8fb39
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x33c27341
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x33a79205
- (float)viewportHeight;	// 0x33a90a0d
- (float)viewportWidth;	// 0x33a90679
- (CGRect)visibleBounds;	// 0x33ae95d5
- (CGRect)visibleContentFrame;	// 0x33c21ec1
- (CGRect)visibleContentRect;	// 0x33c22f41
- (CGRect)visibleFrame;	// 0x33c21e9d
- (CGRect)visibleRectForSelecting;	// 0x33c2af81
// converted property getter: - (id)webSelectionAssistant;	// 0x33c21e89
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x33a1ae91
// converted property getter: - (id)webView;	// 0x33a1af45
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x33c1cd4d
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x33a78add
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x33c1df05
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x33b2d85d
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x33a7a0f1
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x33a73cd5
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x33c21131
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x33c27f6d
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x33a79fd5
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x33b2d8d5
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x33b2d7f5
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x33b2b221
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x33b35581
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x33c1ccc9
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x33b2d55d
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x33acb701
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x33b2bca5
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x33c1e0e1
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x33c210dd
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x33a760e5
- (void)webViewDidDrawTiles:(id)webView;	// 0x33a763e5
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x33c1cc89
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x33c27f95
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x33c1cd35
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x33c1cc49
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x33a72409
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x33ae34e5
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x33c2749d
- (void)willMoveToSuperview:(id)superview;	// 0x33a74165
- (void)willRotateInteractionSheet;	// 0x33c1e959
- (void)willStartScroll;	// 0x33b344c5
- (void)willStartScrollToTop;	// 0x33c21f39
- (void)willStartZoom;	// 0x33c21fd5
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x33c23179
- (void)willZoomToMinimumScale;	// 0x33c230c5
- (id)wordAtPoint:(CGPoint)point;	// 0x33ca5221
- (id)wordContainingCaretSelection;	// 0x33c20765
- (int)wordOffsetInRange:(id)range;	// 0x33c20801
- (id)wordRangeContainingCaretSelection;	// 0x33c20665
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x33c1d62d
- (float)zoomedDocumentScale;	// 0x33c22f21
@end

