/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardCandidateListDelegate.h"

@class NSArray, NSMutableDictionary, NSTimer, UITextInputTraits, UITextInputArrowKeyHistory, UIAlertView, UIKeyboardCandidate, NSString, UIKeyboardInputManager, UIAutocorrectInlinePrompt, UIKeyboardLayout, NSMutableArray, UIDelayedAction;
@protocol UIKeyInput, UITextInput, UITextInputPrivate, UIKeyboardInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList, UIKeyboardRecording, UIApplicationEventRecording, UIKeyboardTypology;

@interface UIKeyboardImpl : UIView <UIKeyboardCandidateListDelegate> {
	id<UIKeyInput> m_delegate;	// 84 = 0x54
	UIView *m_languageIndicator;	// 88 = 0x58
	NSString *m_previousInputString;	// 92 = 0x5c
	UIKeyboardInputManager *m_inputManager;	// 96 = 0x60
	UIKeyboardCandidate *m_autocorrection;	// 100 = 0x64
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 104 = 0x68
	UIDelayedAction *m_autocorrectPromptAction;	// 108 = 0x6c
	NSMutableDictionary *m_autocorrectHistoryLists;	// 112 = 0x70
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 116 = 0x74
	NSArray *m_candidates;	// 120 = 0x78
	id<UIKeyboardCandidateList> m_candidateList;	// 124 = 0x7c
	UIView *m_markedTextOverlay;	// 128 = 0x80
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 132 = 0x84
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 136 = 0x88
	UIKeyboardLayout *m_layout;	// 140 = 0x8c
	NSMutableDictionary *m_keyedLayouts;	// 144 = 0x90
	NSString *m_inputModeLastChosen;	// 148 = 0x94
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 152 = 0x98
	NSTimer *m_autoDeleteTimer;	// 164 = 0xa4
	unsigned m_autoDeleteCount;	// 168 = 0xa8
	double m_autoDeleteLastDelete;	// 172 = 0xac
	double m_autoDeleteInterval;	// 180 = 0xb4
	unsigned long m_autoDeleteShiftCharacter;	// 188 = 0xbc
	UIDelayedAction *m_longPressAction;	// 192 = 0xc0
	int m_orientation;	// 196 = 0xc4
	int m_originalOrientation;	// 200 = 0xc8
	CGPoint m_inputPoint;	// 204 = 0xcc
	int m_changeCount;	// 212 = 0xd4
	double m_changeTime;	// 216 = 0xd8
	id m_changedDelegate;	// 224 = 0xe0
	CFRunLoopObserverRef m_observer;	// 228 = 0xe4
	unsigned m_textInputChangingCount;	// 232 = 0xe8
	BOOL m_textInputChangingText;	// 236 = 0xec
	BOOL m_textInputChangingDirection;	// 237 = 0xed
	BOOL m_textInputChangesIgnored;	// 238 = 0xee
	BOOL m_insideKeyInputDelegateCall;	// 239 = 0xef
	UITextInputTraits *m_defaultTraits;	// 240 = 0xf0
	UITextInputTraits *m_traits;	// 244 = 0xf4
	int m_returnKeyState;	// 248 = 0xf8
	int m_currentDirection;	// 252 = 0xfc
	int m_contextWordDepth;	// 256 = 0x100
	BOOL m_autoDeleteOK;	// 260 = 0x104
	BOOL m_autocapitalizationPreference;	// 261 = 0x105
	BOOL m_autocorrectPromptTimerFired;	// 262 = 0x106
	BOOL m_autocorrectionPreference;	// 263 = 0x107
	BOOL m_autoshift;	// 264 = 0x108
	BOOL m_caretShowingNow;	// 265 = 0x109
	BOOL m_changeNotificationDisabled;	// 266 = 0x10a
	BOOL m_correctionLearningAllowed;	// 267 = 0x10b
	BOOL m_delegateIsSMSTextView;	// 268 = 0x10c
	BOOL m_delegateRequiresKeyEvents;	// 269 = 0x10d
	BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;	// 270 = 0x10e
	BOOL m_doubleSpacePeriodPreference;	// 271 = 0x10f
	BOOL m_hardwareKeyboardAttached;	// 272 = 0x110
	BOOL m_inDealloc;	// 273 = 0x111
	BOOL m_inHardwareKeyboardMode;	// 274 = 0x112
	BOOL m_initializationDone;	// 275 = 0x113
	BOOL m_performDecomposingDelete;	// 276 = 0x114
	BOOL m_performanceLoggingEnabled;	// 277 = 0x115
	BOOL m_selecting;	// 278 = 0x116
	BOOL m_shift;	// 279 = 0x117
	BOOL m_shiftLocked;	// 280 = 0x118
	BOOL m_shiftLockedEnabled;	// 281 = 0x119
	BOOL m_settingShift;	// 282 = 0x11a
	BOOL m_shouldSkipCandidateSelection;	// 283 = 0x11b
	BOOL m_originalShouldSkipCandidateSelection;	// 284 = 0x11c
	BOOL m_updatingPreferences;	// 285 = 0x11d
	BOOL m_changingGeometryWithSameOrientation;	// 286 = 0x11e
	BOOL m_suppressGeometryChangeNotifications;	// 287 = 0x11f
	BOOL m_acceptingCandidate;	// 288 = 0x120
	BOOL m_userChangedSelection;	// 289 = 0x121
	BOOL m_shouldChargeKeys;	// 290 = 0x122
	BOOL m_longPress;	// 291 = 0x123
	BOOL m_syntheticInput;	// 292 = 0x124
	BOOL m_replacingWord;	// 293 = 0x125
	BOOL m_shiftNeedsUpdate;	// 294 = 0x126
	BOOL m_shiftPreventAutoshift;	// 295 = 0x127
	BOOL m_shiftHeldDownNeedsUpdated;	// 296 = 0x128
	BOOL m_delegateAdoptsTextInput;	// 297 = 0x129
	BOOL m_delegateAdoptsTextInputPrivate;	// 298 = 0x12a
	BOOL m_delegateAdoptsKeyboardInput;	// 299 = 0x12b
	BOOL m_clientVariantSupportEnabled;	// 300 = 0x12c
	BOOL m_clientVariantSupportEnabledEver;	// 301 = 0x12d
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 304 = 0x130
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 308 = 0x134
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 312 = 0x138
	BOOL m_preRotateShift;	// 316 = 0x13c
	BOOL m_preRotateShiftLocked;	// 317 = 0x13d
	BOOL m_showInputModeIndicator;	// 318 = 0x13e
	BOOL m_suppressUpdateCandidateView;	// 319 = 0x13f
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 320 = 0x140
	BOOL m_shouldSetInputModeInNextRun;	// 321 = 0x141
	BOOL m_rivenCenterFilled;	// 322 = 0x142
	float m_splitProgress;	// 324 = 0x144
	NSString *m_currentUsedInputMode;	// 328 = 0x148
	NSString *m_lastUsedInputMode;	// 332 = 0x14c
	BOOL m_needsCandidates;	// 336 = 0x150
	BOOL m_shouldSkipCandidateGeneration;	// 337 = 0x151
	BOOL m_updateLayoutOnShowKeyboard;	// 338 = 0x152
	BOOL m_receivedCandidatesInCurrentInputMode;	// 339 = 0x153
	int _currentAlertReason;	// 340 = 0x154
	id<UIKeyboardTypology> typologyRecorder;	// 344 = 0x158
	BOOL m_showsCandidateBar;	// 348 = 0x15c
	BOOL m_showsCandidateInline;	// 349 = 0x15d
	UIAlertView *keyboardAlertView;	// 352 = 0x160
	BOOL committingCandidate;	// 356 = 0x164
	BOOL geometryIsChanging;	// 357 = 0x165
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x33af9e4d; S=0x33ae3c9d; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x33acdd6d; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x33a75155; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x33aeae99; S=0x33a676fd; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x33a676c9; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x33c05aa1; S=0x33c05ad5; converted property
@property(assign) BOOL caretBlinks;	// G=0x33c0bc9d; S=0x33acf23d; converted property
@property(assign) BOOL caretVisible;	// G=0x33af7c05; S=0x33acf269; converted property
@property(readonly, assign) BOOL centerFilled;	// G=0x33c04f3d; 
@property(readonly, assign) int changeCount;	// G=0x33acd745; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x33c072c1; S=0x33c072d1; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x33aec3dd; S=0x33a7728d; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;	// @dynamic
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x33ad5cdd; converted property
@property(assign, nonatomic) BOOL committingCandidate;	// G=0x33c0bfcd; S=0x33c0bfdd; @synthesize
@property(retain, nonatomic) NSString *currentUsedInputMode;	// G=0x33afab9d; S=0x33a772ad; @synthesize=m_currentUsedInputMode
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x33a60701; S=0x33a10bed; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x33c06e85; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x33acda19; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x33a615e5; converted property
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x33acd735; S=0x33acd625; @synthesize=m_geometryDelegate
@property(assign, nonatomic) BOOL geometryIsChanging;	// G=0x33c0bfed; S=0x33c0bffd; @synthesize
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x33c05fdd; S=0x33c06015; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x33a656fd; S=0x33af8bf9; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x33a64b79; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x33a670f5; S=0x33a670e5; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x33c0684d; converted property
@property(retain, nonatomic) UIAlertView *keyboardAlertView;	// G=0x33c0bfad; S=0x33c0bfbd; @synthesize
@property(retain, nonatomic) NSString *lastUsedInputMode;	// G=0x33c0bf8d; S=0x33a7729d; @synthesize=m_lastUsedInputMode
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x33a64571; 
@property(assign, getter=isLongPress) BOOL longPress;	// G=0x33b1c6b9; S=0x33c0c419; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x33c07729; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x33c0531d; 
@property(assign) unsigned phraseBoundary;	// G=0x33c08415; S=0x33c0838d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x33a606dd; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x33a67e65; S=0x33a76fc9; 
@property(assign) BOOL returnKeyEnabled;	// G=0x33ad89f9; S=0x33acdb69; converted property
@property(assign) BOOL rivenSplitLock;	// G=0x33c0528d; S=0x33c052c1; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x33ad687d; S=0x33b7bb3d; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x33b7bc65; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x33c0af55; S=0x33acdb35; converted property
@property(assign, nonatomic) BOOL shouldSetInputModeInNextRun;	// G=0x33c0bf6d; S=0x33c0bf7d; @synthesize=m_shouldSetInputModeInNextRun
@property(readonly, assign, nonatomic) BOOL shouldShowCandidateBar;	// G=0x33a68281; 
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x33b1d241; S=0x33ad01e9; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x33c0bf4d; S=0x33c0bf5d; @synthesize=m_showInputModeIndicator
@property(assign, nonatomic) BOOL showsCandidateBar;	// G=0x33a68625; S=0x33a683d1; @synthesize=m_showsCandidateBar
@property(assign, nonatomic) BOOL showsCandidateInline;	// G=0x33c0bf9d; S=0x33a681fd; @synthesize=m_showsCandidateInline
@property(readonly, assign, nonatomic) BOOL splitTransitionInProgress;	// G=0x33a6bae1; 
@property(retain, nonatomic) id<UIKeyboardTypology> typologyRecorder;	// G=0x33a67105; S=0x33a77005; @synthesize
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x33c0c239
+ (id)activeInstance;	// 0x33a10bdd
+ (float)additionalInstanceHeight;	// 0x33a685d9
+ (float)additionalInstanceHeightLoading;	// 0x33c04b95
+ (void)applicationDidEnterBackground:(id)application;	// 0x33c04895
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x33c04911
+ (void)applicationWillEnterForeground:(id)application;	// 0x33c048d5
+ (void)applicationWillResignActive:(id)application;	// 0x33a76441
+ (void)applicationWillSuspend:(id)application;	// 0x33a76705
+ (CGSize)defaultSize;	// 0x33c04b39
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x33a5ff5d
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x33c0b2fd
+ (int)interfaceOrientationForSize:(CGSize)size;	// 0x33c068f9
+ (BOOL)isSplit;	// 0x33a69099
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x33a6c781
+ (void)markElapsed:(id)elapsed;	// 0x33a6818d
+ (void)markPerformance:(id)performance;	// 0x33a60461
+ (id)normalizedInputModesFromPreference;	// 0x33c04b5d
+ (int)persistentDictationTargetZone;	// 0x33c054cd
+ (CGPoint)persistentDictationWindowOffset;	// 0x33c056c9
+ (CGPoint)persistentOffset;	// 0x33a6a301
+ (float)persistentSplitProgress;	// 0x33c05381
+ (void)refreshRivenStateWithTraits:(id)traits isKeyboard:(BOOL)keyboard;	// 0x33c050b9
+ (void)releaseSharedInstance;	// 0x33a5d7fd
+ (BOOL)rivenInstalled;	// 0x33a6dccd
+ (BOOL)rivenPreference;	// 0x33a6bb75
+ (BOOL)rivenTranslationPreference;	// 0x33aef735
+ (void)setParentTestForProfiling:(id)profiling;	// 0x33c0c05d
+ (void)setPersistentDictationTargetZone:(int)zone;	// 0x33c05515
+ (void)setPersistentDictationWindowOffset:(CGPoint)offset;	// 0x33c05571
+ (void)setPersistentOffset:(CGPoint)offset;	// 0x33afeaf9
+ (void)setPersistentSplitProgress:(float)progress;	// 0x33c053ed
+ (id)sharedInstance;	// 0x33a5fd75
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x33a68cc9
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation textInputTraits:(id)traits;	// 0x33a68e4d
+ (float)splitProgress;	// 0x33c053dd
+ (BOOL)supportsSplit;	// 0x33ad24e1
+ (void)suppressSetPersistentOffset:(BOOL)offset;	// 0x33c054b9
- (id)initWithFrame:(CGRect)frame;	// 0x33a60099
- (id)UILanguagePreference;	// 0x33a64129
- (id)_autocorrectPromptRects;	// 0x33c0a069
- (int)_clipCornersOfView:(id)view;	// 0x33c072f5
- (id)_getAutocorrection;	// 0x33c0c69d
- (id)_getCurrentKeyboardName;	// 0x33c0c5b5
- (id)_getCurrentKeyplaneName;	// 0x33b72189
- (id)_getLocalizedInputMode;	// 0x33c0c619
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x33c0b871
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x33c0b9c9
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x33c0b94d
- (BOOL)_hasCandidates;	// 0x33a64dfd
- (unsigned)_inputCountForAutocorrectionCandidate;	// 0x33c0c7bd
- (id)_inputForAutocorrectionCandidate;	// 0x33b3e6d1
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x33c0c0fd
- (id)_layout;	// 0x33a68e29
- (BOOL)_needsCandidates;	// 0x33c0c76d
- (int)_positionInCandidateList:(id)candidateList;	// 0x33c0c6bd
- (id)_rangeForAutocorrectionText:(id)autocorrectionText;	// 0x33c09ea9
- (void)_releaseInputManager;	// 0x33c0c79d
- (void)_remapKeyEvent:(GSEventRef)event;	// 0x33c0bb51
- (void)_resetInputLocation;	// 0x33c0c77d
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x33c0c67d
- (void)_setInputManager:(id)manager;	// 0x33c0c099
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x33b7226d
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x33c0c0a9
- (id)_shortcutConversionCandidateForInput:(id)input;	// 0x33b1d2fd
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x33acd705
- (BOOL)_shouldShowCandidateBar:(BOOL)bar;	// 0x33a6829d
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x33acd81d
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x33ad9c09
- (void)acceptAutocorrection;	// 0x33affe0d
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x33c0889d
- (void)acceptCurrentCandidate;	// 0x33c08c6d
- (void)acceptCurrentCandidateIfSelected;	// 0x33ad79e9
- (BOOL)acceptInputString:(id)string;	// 0x33aef80d
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x33b3d5a5
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x33c0af29
- (void)addInputObject:(id)object;	// 0x33c08f11
- (void)addInputString:(id)string;	// 0x33c07dd5
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x33afa015
- (void)alertView:(id)view clickedButtonAtIndex:(int)index;	// 0x33c0635d
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x33c0ae31
- (void)animateAutocorrection;	// 0x33b767e9
- (void)applicationResumedEventsOnly:(id)only;	// 0x33c04cd9
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x33c04c6d
- (void)applyAutocorrection;	// 0x33c0a2c1
// declared property getter: - (id)arrowKeyHistory;	// 0x33af9e4d
- (void)autoDeleteTimerFired:(id)fired;	// 0x33c0af89
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x33acdd6d
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x33affb89
// converted property getter: - (id)autocorrectPrompt;	// 0x33a75155
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x33aeae99
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x33b77341
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x33a676c9
- (BOOL)autocorrectionPreferenceForTraits;	// 0x33a67655
- (id)autocorrectionRecordForWord:(id)word;	// 0x33affb51
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x33c05aa1
- (void)callChanged;	// 0x33aec9d5
- (void)callChangedSelection;	// 0x33acf3d5
- (BOOL)callLayoutIgnoresShiftState;	// 0x33b1d709
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x33ad8f71
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x33ad8f21
- (void)callLayoutLongPressAction;	// 0x33c0c011
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x33acf9e1
- (void)callLayoutSetShift:(BOOL)shift;	// 0x33acf989
- (void)callLayoutUpdateAllLocalizedKeys;	// 0x33acf521
- (void)callLayoutUpdateLocalizedKeys;	// 0x33a67609
- (void)callLayoutUpdateReturnKey;	// 0x33acdb95
- (BOOL)callLayoutUsesAutoShift;	// 0x33acf871
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)call characterCountForRapidDelete:(int)rapidDelete;	// 0x33b6e119
- (BOOL)callShouldInsertText:(id)call;	// 0x33afabb1
- (BOOL)callShouldReplaceExtendedRange:(unsigned)call withText:(id)text includeMarkedText:(BOOL)text3;	// 0x33c06f51
- (BOOL)canHandleKeyHitTest;	// 0x33ad849d
- (BOOL)canUseGeometryKeyTouch;	// 0x33ad84c5
- (void)cancelAllKeyEvents;	// 0x33a12701
- (void)cancelSplitTransition;	// 0x33c058b5
- (id)candidateList;	// 0x33c08dd5
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x33c08d35
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x33c08d59
// converted property getter: - (BOOL)caretBlinks;	// 0x33c0bc9d
// converted property getter: - (BOOL)caretVisible;	// 0x33af7c05
// declared property getter: - (BOOL)centerFilled;	// 0x33c04f3d
// converted property getter: - (int)changeCount;	// 0x33acd745
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x33c072c1
// declared property getter: - (id)changedDelegate;	// 0x33aec3dd
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x33c0af65
- (BOOL)checkSpellingPreference;	// 0x33a67819
- (BOOL)checkSpellingPreferenceForTraits;	// 0x33a677a5
- (void)clearAnimations;	// 0x33a76cb1
- (void)clearAutocorrectPromptTimer;	// 0x33a655e5
- (void)clearChangeTimeAndCount;	// 0x33acd759
- (void)clearDelegate;	// 0x33a76c75
- (void)clearExcessKeyboardMemory;	// 0x33c0c2c1
- (void)clearInput;	// 0x33a64ab5
- (void)clearKeyAreas;	// 0x33ad84f1
- (void)clearLanguageIndicator;	// 0x33c0c429
- (void)clearLayouts;	// 0x33a67e79
- (void)clearLongPressTimer;	// 0x33a76d8d
- (void)clearSelection;	// 0x33c0bcc5
- (void)clearShiftState;	// 0x33afc155
- (void)clearTimers;	// 0x33a76d01
- (void)clearTransientState;	// 0x33acd9e9
- (id)clientOverrideForKey:(id)key;	// 0x33c05955
- (id)clientVariantDelegate;	// 0x33acdc2d
- (id)clientVariantsForKey:(id)key;	// 0x33c058fd
// declared property getter: - (BOOL)committingCandidate;	// 0x33c0bfcd
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x33b73379
- (id)currentInputContextFromInputDelegateWithWordRange:(id)wordRange;	// 0x33acf0ed
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x33afff89
- (float)currentLandscapeHeight;	// 0x33c049c5
- (float)currentLandscapeWidth;	// 0x33c04919
- (float)currentPortraitHeight;	// 0x33ad9555
- (float)currentPortraitWidth;	// 0x33ad946d
// declared property getter: - (id)currentUsedInputMode;	// 0x33afab9d
- (void)dealloc;	// 0x33a77015
- (void)defaultsDidChange;	// 0x33c04ced
- (void)delayedInit;	// 0x33a71615
// declared property getter: - (id)delegate;	// 0x33a60701
// declared property getter: - (id)delegateAsResponder;	// 0x33c06e85
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x33acda19
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x33c0a971
- (BOOL)delegateSupportsCorrectionUI;	// 0x33b3e6a1
- (void)deleteBackward;	// 0x33c07dc1
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x33b6e771
- (void)deleteForwardAndNotify:(BOOL)notify;	// 0x33c07d51
- (void)deleteFromInput;	// 0x33b6db7d
- (void)detach;	// 0x33a76e89
- (void)dismissKeyboard;	// 0x33c0b6bd
- (BOOL)displaysCandidates;	// 0x33aec8f9
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x33a615e5
- (CGSize)dragGestureSize;	// 0x33c05089
- (void)enable;	// 0x33c06f3d
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x33c06329
- (void)fadeAutocorrectPrompt;	// 0x33c0a459
- (void)finishSplitTransitionWithProgress:(float)progress;	// 0x33c0c521
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x33c0b3d9
- (BOOL)flushKeyplaneName:(id)name;	// 0x33b00041
- (void)forceShiftUpdate;	// 0x33b72599
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x33aedf8d
- (CGRect)frameForKeylayoutName:(id)keylayoutName;	// 0x33c05055
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x33c0adb5
- (void)generateCandidates;	// 0x33adcf05
- (void)generateCandidatesWithOptions:(int)options;	// 0x33adcf19
- (void)geometryChangeDone:(BOOL)done;	// 0x33adce31
// declared property getter: - (id)geometryDelegate;	// 0x33acd735
// declared property getter: - (BOOL)geometryIsChanging;	// 0x33c0bfed
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x33c0ae5d
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x33c0ae8d
- (void)handleDelete;	// 0x33b6da99
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x33b6daad
- (void)handleDeleteWithNonZeroInputCount;	// 0x33b6e515
- (void)handleDeleteWithZeroInputCount;	// 0x33c085b5
- (BOOL)handleDoubleSpacePeriodForInputString:(id)inputString afterSpace:(BOOL)space elapsedTime:(double)time;	// 0x33c07ec1
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x33af8d1d
- (void)handleKeyEvent:(GSEventRef)event;	// 0x33af83e9
- (void)handleObserverCallback;	// 0x33aec961
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x33af9f5d
- (void)hardwareAutoRepeat:(id)repeat;	// 0x33c0b3b5
- (void)hardwareKeyboardAvailabilityChanged;	// 0x33c0b331
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x33c05fdd
- (BOOL)hasAutoRepeat;	// 0x33c0c0b9
- (BOOL)hasEditableMarkedText;	// 0x33acef95
- (BOOL)hasMarkedText;	// 0x33a64b49
- (BOOL)hideAccessoryViewsDuringSplit;	// 0x33c05815
- (void)hideKeyboard;	// 0x33c0b461
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x33aed29d
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x33c0aef9
// declared property getter: - (id)inputDelegate;	// 0x33a64b79
// declared property getter: - (id)inputManager;	// 0x33a670f5
- (id)inputModeFirstPreference;	// 0x33c05b89
// converted property getter: - (id)inputModeLastChosen;	// 0x33c0684d
- (id)inputModeLastChosenPreference;	// 0x33c05bd9
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x33c05d45
- (id)inputModeLastUsedPreference;	// 0x33a643e9
- (id)inputModePreference;	// 0x33a6162d
- (id)inputOverlayContainer;	// 0x33b73075
- (id)inputStringFromPhraseBoundary;	// 0x33c077d5
- (void)insertText:(id)text;	// 0x33b1d7cd
- (void)installRecorder;	// 0x33a67f65
- (void)installTypology;	// 0x33a68021
- (int)interfaceOrientation;	// 0x33c072e1
- (BOOL)isAllowedInputMode:(id)mode;	// 0x33a64479
- (BOOL)isAutoDeleteActive;	// 0x33c0c1f9
- (BOOL)isAutoFillMode;	// 0x33b75a3d
- (BOOL)isAutoShifted;	// 0x33ad25cd
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x33ad5cdd
- (BOOL)isDesiredInputMode:(id)mode;	// 0x33ace899
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x33a656fd
// converted property getter: - (BOOL)isLongPress;	// 0x33b1c6b9
- (BOOL)isMinimized;	// 0x33a67151
// converted property getter: - (BOOL)isShiftLocked;	// 0x33ad687d
- (BOOL)isShifted;	// 0x33aecc15
- (BOOL)isUsingDictationLayout;	// 0x33c09469
- (BOOL)isValidKeyInput:(id)input;	// 0x33af9e61
- (void)keyActivated;	// 0x33c07d3d
- (void)keyDeactivated;	// 0x33c07d4d
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x33aeeba9
// declared property getter: - (id)keyboardAlertView;	// 0x33c0bfad
- (void)keyboardDidHide:(id)keyboard;	// 0x33c04c1d
- (BOOL)keyboardDrawsOpaque;	// 0x33acd5d1
- (BOOL)keyboardRecordingEnabled;	// 0x33a67fa5
- (BOOL)keyboardsExpandedPreference;	// 0x33c05a6d
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x33c05a01
// declared property getter: - (id)lastUsedInputMode;	// 0x33c0bf8d
- (void)launchTypologyApplication;	// 0x33c0c299
- (void)layoutHasChanged;	// 0x33c06f2d
// declared property getter: - (id)legacyInputDelegate;	// 0x33a64571
- (void)longPressAction;	// 0x33c0b2b9
// converted property getter: - (id)markedTextOverlay;	// 0x33c07729
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x33c0aebd
- (void)mediaKeyDown:(GSEventRef)down;	// 0x33c0bbed
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x33c0531d
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x33c08435
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x33c0938d
- (BOOL)noContent;	// 0x33b1c391
- (void)notifyShiftState;	// 0x33acf8c1
- (void)performClientVariantActionNamed:(id)named;	// 0x33c059ad
- (BOOL)performanceLoggingPreference;	// 0x33a7176d
// converted property getter: - (unsigned)phraseBoundary;	// 0x33c08415
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x33ade3d9
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x33aed381
- (void)prepareForGeometryChange;	// 0x33ad9c99
- (void)prepareForSelectionChange;	// 0x33ae3241
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x33c06b95
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x33acdd25
// declared property getter: - (id)privateInputDelegate;	// 0x33a606dd
- (void)pushRecentAutocorrectionSuggestion:(id)suggestion;	// 0x33c0a7f1
- (id)recentAutocorrectionSuggestionForTypedString:(id)typedString;	// 0x33c0a8a5
- (void)recomputeActiveInputModes;	// 0x33c07bb1
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x33ace53d
- (void)recordAcceptedAutocorrection:(id)autocorrection;	// 0x33c0a689
- (void)recordRejectedAutocorrection:(id)autocorrection;	// 0x33c0a7a1
// declared property getter: - (id)recorder;	// 0x33a67e65
- (void)refreshRivenPreferences;	// 0x33a61371
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x33ad8879
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x33ad203d
- (void)releaseSuppressUpdateCandidateView;	// 0x33adcdcd
- (void)removeAutocorrectPrompt;	// 0x33a654a5
- (void)removeAutocorrection;	// 0x33c0886d
- (void)removeFromSuperview;	// 0x33a76dd9
- (void)replaceText:(id)text;	// 0x33c09009
- (void)resizeCandidateBarWithDelta:(float)delta;	// 0x33c094b1
- (void)resizeForKeyplaneSize:(CGSize)keyplaneSize;	// 0x33ad2df1
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x33ad208d
- (id)returnKeyDisplayName;	// 0x33ad8a19
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x33ad89f9
- (int)returnKeyType;	// 0x33ad8a91
// declared property getter: - (BOOL)rivenSplitLock;	// 0x33c0528d
- (void)saveInputModesPreference:(id)preference;	// 0x33c05b4d
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x33c091b9
- (id)searchStringForMarkedText;	// 0x33c0779d
- (void)selectionDidChange:(id)selection;	// 0x33ae3b61
- (id)selectionView;	// 0x33c0c46d
- (void)selectionWillChange:(id)selection;	// 0x33ae3201
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x33ae3c9d
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x33a676fd
- (void)setAutocorrection:(id)autocorrection;	// 0x33a64b9d
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x33c05ad5
- (void)setCandidateList:(id)list updateCandidateView:(BOOL)view;	// 0x33c091f9
- (void)setCandidates:(id)candidates;	// 0x33a64c95
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x33acf23d
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x33acf269
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x33c072d1
- (void)setChanged;	// 0x33aec40d
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x33a7728d
// declared property setter: - (void)setCommittingCandidate:(BOOL)candidate;	// 0x33c0bfdd
- (void)setCorrectionLearningAllowed:(BOOL)allowed;	// 0x33c06d91
// declared property setter: - (void)setCurrentUsedInputMode:(id)mode;	// 0x33a772ad
- (void)setDefaultTextInputTraits:(id)traits;	// 0x33ad9b75
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x33a10bed
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x33a10c01
- (void)setFrame:(CGRect)frame;	// 0x33a604d1
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x33acd625
// declared property setter: - (void)setGeometryIsChanging:(BOOL)changing;	// 0x33c0bffd
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x33c06015
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x33af8bf9
- (void)setInitialDirection;	// 0x33acf295
// declared property setter: - (void)setInputManager:(id)manager;	// 0x33a670e5
- (void)setInputMode:(id)mode;	// 0x33a645a9
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x33a645bd
- (void)setInputModeFromPreferences;	// 0x33a641c1
- (void)setInputModeLastChosenPreference;	// 0x33c05c35
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x33c06801
- (void)setInputModeToNextInPreferredList;	// 0x33c0665d
- (void)setInputObject:(id)object;	// 0x33c08de9
- (void)setInputPoint:(CGPoint)point;	// 0x33aef849
// declared property setter: - (void)setKeyboardAlertView:(id)view;	// 0x33c0bfbd
// declared property setter: - (void)setLastUsedInputMode:(id)mode;	// 0x33a7729d
// converted property setter: - (void)setLongPress:(BOOL)press;	// 0x33c0c419
- (void)setMarkedText;	// 0x33c0762d
- (void)setOrientation;	// 0x33c06ac9
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x33c0838d
- (void)setPreviousInputString:(id)string;	// 0x33aec1bd
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x33a76fc9
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x33acdb69
// declared property setter: - (void)setRivenSplitLock:(BOOL)lock;	// 0x33c052c1
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x33c0785d
- (void)setShift:(BOOL)shift;	// 0x33aec28d
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x33aec2a1
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x33b7bb3d
- (void)setShiftLockedForced:(BOOL)forced;	// 0x33c07c61
- (void)setShiftNeedsUpdate;	// 0x33aec33d
- (void)setShiftOffIfNeeded;	// 0x33aec201
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x33aec3ed
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x33acdb35
// declared property setter: - (void)setShouldSetInputModeInNextRun:(BOOL)setInputModeInNextRun;	// 0x33c0bf7d
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x33ad01e9
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x33c05fcd
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x33c0bf5d
// declared property setter: - (void)setShowsCandidateBar:(BOOL)bar;	// 0x33a683d1
// declared property setter: - (void)setShowsCandidateInline:(BOOL)anInline;	// 0x33a681fd
- (void)setSplit:(BOOL)split animated:(BOOL)animated;	// 0x33c0c4c5
- (void)setSplitProgress:(float)progress;	// 0x33c05325
- (void)setTextInputChangesIgnored:(BOOL)ignored;	// 0x33c0c5a1
// declared property setter: - (void)setTypologyRecorder:(id)recorder;	// 0x33a77005
- (void)setUsesCandidateSelection:(BOOL)selection;	// 0x33ad2a6d
- (unsigned)shiftFlagsForInputString;	// 0x33b1d691
- (BOOL)shiftLockPreference;	// 0x33a6139d
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x33b7bc65
- (BOOL)shouldAcceptCandidate:(id)candidate beforeInputString:(id)string;	// 0x33c08149
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x33c0af55
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned long)deletedCharacter;	// 0x33b6e9ad
// declared property getter: - (BOOL)shouldSetInputModeInNextRun;	// 0x33c0bf6d
// declared property getter: - (BOOL)shouldShowCandidateBar;	// 0x33a68281
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x33b1d241
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x33c0bd6d
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x33ace98d
- (void)showInformationalAlertIfNeededForReason:(int)reason;	// 0x33c063e1
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x33c0bf4d
- (void)showInternationalKeyInfoAlertIfNeeded;	// 0x33c0653d
- (void)showKeyboard;	// 0x33c0b50d
- (void)showNextCandidates;	// 0x33c08d15
// declared property getter: - (BOOL)showsCandidateBar;	// 0x33a68625
// declared property getter: - (BOOL)showsCandidateInline;	// 0x33c0bf9d
- (id)sortingMethods;	// 0x33c0addd
// declared property getter: - (BOOL)splitTransitionInProgress;	// 0x33a6bae1
- (void)startAutoDeleteTimer;	// 0x33b6ea29
- (void)startCaretBlinkIfNeeded;	// 0x33c0bc71
- (void)startKeyboardRecording;	// 0x33cd05f1
- (void)stopAutoDelete;	// 0x33acd8f5
- (void)stopKeyboardRecording;	// 0x33cd06f9
- (void)storeDelegateConformance;	// 0x33acd77d
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x33acc431
- (BOOL)suppliesCompletions;	// 0x33c07c8d
- (BOOL)supportsNumberKeySelection;	// 0x33c07d19
- (BOOL)swipeToTabPreference;	// 0x33ad0199
- (void)takeTextInputTraitsFromDelegate;	// 0x33a60575
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x33c0c1d5
- (void)textChanged:(id)changed;	// 0x33aebf2d
- (void)textDidChange:(id)text;	// 0x33aebf1d
- (void)textFrameChanged:(id)changed;	// 0x33c071a1
- (int)textInputChangingCount;	// 0x33c0c1c5
- (id)textInputTraits;	// 0x33a68e3d
- (void)textWillChange:(id)text;	// 0x33aebe6d
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x33aefa05
- (void)timeMark:(unsigned)mark;	// 0x33aef861
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x33aef749
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x33c0ae05
- (void)toggleShift;	// 0x33c07c35
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x33b6ea9d
- (void)touchAutocorrectPromptTimer;	// 0x33ad807d
- (void)touchLongPressTimer;	// 0x33aef625
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x33aef63d
- (void)trackUsageForAcceptedAutocorrection:(id)acceptedAutocorrection promptWasShowing:(BOOL)showing;	// 0x33c0bd91
- (void)trackUsageForPromptedCorrection:(id)promptedCorrection inputString:(id)string previousPrompt:(id)prompt;	// 0x33c0be35
- (BOOL)typologyEnabled;	// 0x33a68155
// declared property getter: - (id)typologyRecorder;	// 0x33a67105
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x33a64fed
- (void)updateAutocorrectPromptAction;	// 0x33ade1e9
- (void)updateAutocorrectPromptDisplay:(CGRect)display;	// 0x33b76589
- (void)updateCandidateDisplay;	// 0x33a64e71
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x33c092b5
- (void)updateChangeTimeAndIncrementCount;	// 0x33b1d5a5
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned long)character;	// 0x33c07de9
- (void)updateDoubleSpacePeriodStateForString:(id)string;	// 0x33c07e15
- (void)updateForChangedSelection;	// 0x33ace9d9
- (void)updateFromTextInputTraits;	// 0x33c0c0cd
- (void)updateInputContextForDeletedText:(id)deletedText toWordRange:(id)wordRange;	// 0x33c078b9
- (void)updateInputManagerAutocapitalizationType;	// 0x33c07bd5
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x33c06315
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only preserveIfPossible:(BOOL)possible;	// 0x33c060b9
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x33af8b81
- (void)updateKeysWithDelegates;	// 0x33ad9625
- (void)updateLastUsedInputMode:(id)mode;	// 0x33c06551
- (void)updateLayout;	// 0x33a67191
- (void)updateLayoutAndSetShift;	// 0x33c08585
- (void)updateLayoutIfNeeded;	// 0x33ad9df9
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x33c06c45
- (void)updateMarkedTextIfChanged;	// 0x33c07531
- (void)updateObserverState;	// 0x33aec361
- (void)updateReturnKey;	// 0x33b1ec4d
- (void)updateReturnKey:(BOOL)key;	// 0x33ad88c1
- (void)updateShiftState;	// 0x33acf56d
- (void)updateTextCandidateView;	// 0x33c09681
@end

