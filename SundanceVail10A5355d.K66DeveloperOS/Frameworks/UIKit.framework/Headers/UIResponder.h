/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UITextInput_Internal.h"
#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, UIView, NSUndoManager;
@protocol UITextInputPrivate, UITextInput;

@interface UIResponder : NSObject <UITextInput_Internal> {
}
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x33cd127d; 
@property(readonly, assign, nonatomic) UIResponder *_editingDelegate;	// G=0x33aeae95; 
@property(readonly, assign, nonatomic) UIResponder *_responderForEditing;	// G=0x33aeae71; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x33cd4095; 
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;	// G=0x33cd8349; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x33cd8329; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x33cd832d; 
@property(readonly, assign) UIView *inputAccessoryView;	// G=0x339fbdb5; 
@property(readonly, assign) UIView *inputView;	// G=0x339fbd1d; 
@property(copy, nonatomic) NSString *restorationIdentifier;	// G=0x33e27665; S=0x33e276e1; 
@property(readonly, assign, nonatomic) NSUndoManager *undoManager;	// G=0x33bda53d; 
+ (void)_cleanupAllStateRestorationTables;	// 0x33e27cc1
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;	// 0x33e27c6d
+ (void)_finishStateRestoration;	// 0x33e27d05
+ (void)_prepareForSecondPassStateRestoration;	// 0x33e27cb1
+ (void)_setRestoredIdentifierPathForObject:(id)object identifierPath:(id)path;	// 0x33e27b7d
+ (void)_startTrackingObjectsWithIdentifiers;	// 0x33e27a79
+ (void)_stopTrackingObjectsWithIdentifiers;	// 0x33e27a89
+ (void)_updateStateRestorationIdentifierMap;	// 0x33e27a99
+ (id)objectWithRestorationIdentifierPath:(id)restorationIdentifierPath;	// 0x33e27715
- (id)_asTextSelection;	// 0x33cd8345
- (void)_becomeFirstResponder;	// 0x339fb381
- (void)_becomeFirstResponderAndMakeVisible;	// 0x33bda6c9
- (BOOL)_becomeFirstResponderWhenPossible;	// 0x33a5f6c1
- (void)_beginPinningInputViews;	// 0x33b16ef9
- (BOOL)_canBecomeFirstResponderWhenPossible;	// 0x33bda819
// declared property getter: - (CGRect)_caretRect;	// 0x33cd8349
- (unsigned long)_characterAfterCaretSelection;	// 0x33cd13c1
- (unsigned long)_characterBeforeCaretSelection;	// 0x33cd13d5
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x33cd13e9
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x33cd1461
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x33cd2661
- (void)_clearBecomeFirstResponderWhenCapable;	// 0x33a869a1
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event;	// 0x33a08a39
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event index:(unsigned)index;	// 0x33a08a5d
- (BOOL)_containedInAbsoluteResponderChain;	// 0x33a4907d
- (BOOL)_containsResponder:(id)responder;	// 0x33a10989
- (void)_controlMouseDown:(GSEventRef)down;	// 0x33bda65d
- (void)_controlMouseDragged:(GSEventRef)dragged;	// 0x33bda665
- (void)_controlMouseUp:(GSEventRef)up;	// 0x33bda661
- (void)_controlTouchBegan:(id)began withEvent:(id)event;	// 0x33a09a5d
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;	// 0x33a0ad01
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;	// 0x33b227a1
- (id)_deepestDefaultFirstResponder;	// 0x33a18405
- (id)_deepestDefaultFirstResponderMatching:(id)matching;	// 0x33bda6d9
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x33cd20d1
- (void)_deleteByWord;	// 0x33cd1d6d
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x33cd20f9
- (void)_deleteToEndOfLine;	// 0x33cd1f75
- (void)_deleteToStartOfLine;	// 0x33cd1e19
// declared property getter: - (id)_editingDelegate;	// 0x33aeae95
- (void)_endPinningInputViews;	// 0x33abee51
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x33cd1b61
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x33cd1b75
- (void)_extendCurrentSelection:(int)selection;	// 0x33cd19ad
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x33cd2519
- (void)_finishResignFirstResponder;	// 0x33a10ab9
- (id)_firstResponder;	// 0x33a11509
- (id)_fontForCaretSelection;	// 0x33cd2785
- (id)_fullRange;	// 0x33cd24c1
- (id)_fullText;	// 0x33cd16c9
- (void)_handleKeyEvent:(GSEventRef)event;	// 0x33af837d
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x33cd1945
- (int)_indexForTextPosition:(id)textPosition;	// 0x33cd12ed
- (BOOL)_isEmptySelection;	// 0x33cd18d1
- (BOOL)_isPinningInputViews;	// 0x33abedf1
- (BOOL)_isRootForKeyResponderCycle;	// 0x33bda539
- (BOOL)_isSettingFirstResponder;	// 0x339fb19d
- (BOOL)_isTransitioningFromView:(id)view;	// 0x33afcf09
- (BOOL)_isViewController;	// 0x33bda77d
- (id)_keyInput;	// 0x33cd128d
- (id)_keyboardResponder;	// 0x339fbe8d
- (CGRect)_lastRectForRange:(id)range;	// 0x33cd22c9
- (void)_moveCurrentSelection:(int)selection;	// 0x33cd1a7d
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x33cd3b09
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x33cd3cfd
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x33cd3df9
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x33cd37fd
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x33cd31e1
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x33cd3555
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x33cd2ef5
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x33cd3741
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x33cd3059
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x33cd3369
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x33cd2c81
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x33cd3915
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x33cd4461
- (id)_nextFirstResponderIfAllowed;	// 0x33a109cd
- (id)_nextKeyResponder;	// 0x33bda531
- (id)_nextViewControllerInResponderChain;	// 0x33bda781
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x33cd1331
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x33cd4551
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd3ef9
- (id)_previousKeyResponder;	// 0x33bda535
- (BOOL)_promoteDeepestDefaultFirstResponder;	// 0x33a182b1
// declared property getter: - (id)_proxyTextInput;	// 0x33cd127d
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x33cd23cd
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x33cd2439
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x33cd247d
- (void)_replaceCurrentWordWithText:(id)text;	// 0x33cd2255
- (BOOL)_requiresKeyboardResetOnReload;	// 0x339fbb41
- (BOOL)_requiresKeyboardWhenFirstResponder;	// 0x339fbe0d
- (void)_resignFirstResponder;	// 0x33a11449
- (id)_responderForBecomeFirstResponder;	// 0x33a10985
// declared property getter: - (id)_responderForEditing;	// 0x33aeae71
- (id)_restorationIdentifierPath;	// 0x33e277ad
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x33cd23c9
- (id)_selectableText;	// 0x33cd1259
- (int)_selectionAffinity;	// 0x33cd3f9d
- (NSRange)_selectionAsNSRange;	// 0x33cd1291
- (BOOL)_selectionAtDocumentEnd;	// 0x33cd183d
- (BOOL)_selectionAtDocumentStart;	// 0x33cd17cd
- (BOOL)_selectionAtWordStart;	// 0x33cd1735
- (CGRect)_selectionClipRect;	// 0x33cd18ad
- (void)_setCaretSelectionAtEndOfSelection;	// 0x33cd1ce5
- (void)_setFirstResponder:(id)responder;	// 0x339fb395
- (void)_setGestureRecognizers;	// 0x33cd4099
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd2ac9
- (void)_setIsSettingFirstResponder:(BOOL)responder;	// 0x339fb2c1
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x33cd42e1
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd3f29
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x33cd2875
- (BOOL)_shouldUseDefaultFirstResponder;	// 0x33a184a1
- (BOOL)_shouldUseKeyWindowStack;	// 0x33a11531
- (BOOL)_shouldUseNextFirstResponder;	// 0x33a10a19
- (id)_showServiceForText:(id)text type:(int)type fromRect:(CGRect)rect inView:(id)view;	// 0x33bda7c9
- (id)_targetForAction:(SEL)action withSender:(id)sender;	// 0x33bda669
- (id)_textColorForCaretSelection;	// 0x33cd26c5
// declared property getter: - (id)_textSelectingContainer;	// 0x33cd4095
- (void)_trackObjectWithIdentifier:(id)identifier;	// 0x33e27675
- (void)_unmarkText;	// 0x33cd4409
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x33cd2845
- (id)_window;	// 0x33a694bd
- (void)_windowBecameKey;	// 0x33afce99
- (void)_windowResignedKey;	// 0x33afce95
- (id)_wordContainingCaretSelection;	// 0x33cd1631
- (BOOL)becomeFirstResponder;	// 0x339faf39
- (void)beginSelectionChange;	// 0x33cd83cd
- (BOOL)canBecomeFirstResponder;	// 0x33a11505
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x33abf6fd
- (BOOL)canResignFirstResponder;	// 0x33a109c9
- (void)decodeRestorableStateWithCoder:(id)coder;	// 0x33e27d19
- (id)defaultFirstResponder;	// 0x33a1849d
- (void)encodeRestorableStateWithCoder:(id)coder;	// 0x33e27d15
- (void)endSelectionChange;	// 0x33cd840d
- (id)firstResponder;	// 0x339fb235
- (void)gestureChanged:(GSEventRef)changed;	// 0x33bda52d
- (void)gestureEnded:(GSEventRef)ended;	// 0x33bda529
- (void)gestureStarted:(GSEventRef)started;	// 0x33bda525
// declared property getter: - (id)inputAccessoryView;	// 0x339fbdb5
// declared property getter: - (id)inputView;	// 0x339fbd1d
- (id)interactionAssistant;	// 0x33cd8325
// declared property getter: - (BOOL)isEditable;	// 0x33cd8329
// declared property getter: - (BOOL)isEditing;	// 0x33cd832d
- (BOOL)isFirstResponder;	// 0x339fb665
- (void)motionBegan:(int)began withEvent:(id)event;	// 0x33bda511
- (void)motionCancelled:(int)cancelled withEvent:(id)event;	// 0x33bda519
- (void)motionEnded:(int)ended withEvent:(id)event;	// 0x33bda515
- (void)mouseDown:(GSEventRef)down;	// 0x33bda4b9
- (void)mouseDragged:(GSEventRef)dragged;	// 0x33bda501
- (void)mouseEntered:(GSEventRef)entered;	// 0x33bda505
- (void)mouseExited:(GSEventRef)exited;	// 0x33bda509
- (void)mouseMoved:(GSEventRef)moved;	// 0x33bda50d
- (void)mouseUp:(GSEventRef)up;	// 0x33bda4fd
- (id)nextFirstResponder;	// 0x33a10a4d
- (id)nextResponder;	// 0x339fbdb1
- (void)reloadInputViews;	// 0x339fb5b9
- (void)reloadInputViewsWithoutReset;	// 0x33bda575
- (void)remoteControlReceivedWithEvent:(id)event;	// 0x33bda51d
- (BOOL)resignFirstResponder;	// 0x339f84bd
// declared property getter: - (id)restorationIdentifier;	// 0x33e27665
- (void)scrollWheel:(GSEventRef)wheel;	// 0x33bda521
- (int)selectionAffinity;	// 0x33cd4aa9
// declared property setter: - (void)setRestorationIdentifier:(id)identifier;	// 0x33e276e1
- (id)textInputView;	// 0x33cd82fd
- (void)touchesBegan:(id)began withEvent:(id)event;	// 0x33b06809
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;	// 0x33afd789
- (void)touchesEnded:(id)ended withEvent:(id)event;	// 0x33b08e6d
- (void)touchesMoved:(id)moved withEvent:(id)event;	// 0x33b3a279
// declared property getter: - (id)undoManager;	// 0x33bda53d
@end

