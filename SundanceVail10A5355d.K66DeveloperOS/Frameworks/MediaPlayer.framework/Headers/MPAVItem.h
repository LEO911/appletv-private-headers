/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library

@class MPMediaItem, NSURL, NSArray, MPAVController, MPImageCache, MPAlternateTracks, NSData, MPQueueFeeder, AVPlayerItem, AVAsset, NSString;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x336c8779; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x336c8781; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x336c8789; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x336c8785; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x336c8979; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x336cac95; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x336c877d; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x336c8791; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x336c8795; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x336c9d75; S=0x336caca5; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x336c8095; 
@property(retain, nonatomic) AVPlayerItem *avPlayerItem;	// G=0x336cba51; S=0x336cba61; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x336c8799; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x336c9d4d; S=0x336cacb5; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x336c9e41; S=0x336c9dc5; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x336c879d; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x336c87c1; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x336c87e9; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x336c8975; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x336cace5; S=0x336cacf5; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x336c87a5; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x336c87a1; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x336c8849; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x336c8801; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x336ca361; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x336ca3a9; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x336ca449; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x336ca3c1; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x336cacc5; S=0x336cacd5; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x336c8ac9; S=0x336c8b0d; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x336c87bd; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x336c88e1; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x336c88e5; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x336c88e9; S=0x336c8bb1; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x336c8c95; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x336cad05; S=0x336cad15; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x336cad25; S=0x336cad3d; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x3379d7a1; 
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x336c8859; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x336c8999; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x3377d561; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x336c899d; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x336ca221; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x336ca589; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x336ca5a1; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x336c84f9; S=0x336c8511; 
@property(assign, nonatomic) MPAVController *player;	// G=0x336cad55; S=0x336cad65; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x336c8285; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x336c89f5; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x336c8a8d; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x336cad75; S=0x336c8be9; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x336c8461; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x336c88fd; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x336c8531; S=0x336c8535; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x336c8c59; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x336ca699; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x336ca5b9; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x336ca20d; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x336c9d9d; S=0x336cad85; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x336c8da5; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x336ca21d; 
@property(assign) BOOL userSkippedPlayback;	// G=0x336c85a1; S=0x336c857d; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x336ca30d; S=0x336ca335; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x336ca22d; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x3379d859; 
+ (id)URLFromPath:(id)path;	// 0x336c79ed
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x336c878d
+ (unsigned)defaultScaleMode;	// 0x336c79d9
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x336c79dd
- (id)init;	// 0x336c7a9d
- (id)initWithAsset:(id)asset;	// 0x336c7b29
- (id)initWithURL:(id)url;	// 0x336c7ab1
- (id)initWithURL:(id)url options:(id)options;	// 0x336c7aed
- (void)_applicationDidBecomeActive:(id)_application;	// 0x336caa01
- (void)_checkAllowsBlockingDurationCall;	// 0x336cb5f9
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x336ca9e1
- (double)_durationFromExternalMetadataIfAvailable;	// 0x336ca3e9
- (double)_durationInSeconds;	// 0x336c85b5
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x336ca0a9
- (void)_itemAttributeAvailableKey:(id)key;	// 0x336ca7d9
- (void)_loadAssetAndPlayerItem;	// 0x336c7f65
- (void)_loadAssetProperties;	// 0x336cac39
- (void)_loadTimeMarkersAsync;	// 0x336c9c2d
- (void)_loadTimeMarkersBlocking;	// 0x336c8da9
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x336cab49
- (void)_realoadEmbeddedTimeMarkers;	// 0x336c8c5d
- (void)_releaseAllTimeMarkers;	// 0x336c7d1d
- (id)_seekableTimeRanges;	// 0x336caa89
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x336c9e51
// declared property getter: - (id)album;	// 0x336c8779
// declared property getter: - (id)albumArtist;	// 0x336c8781
// declared property getter: - (unsigned)albumTrackCount;	// 0x336c8789
// declared property getter: - (unsigned)albumTrackNumber;	// 0x336c8785
// declared property getter: - (BOOL)allowsEQ;	// 0x336c8979
// declared property getter: - (id)alternateTracks;	// 0x336cac95
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x336c88bd
// declared property getter: - (id)artist;	// 0x336c877d
// declared property getter: - (id)artworkImageData;	// 0x336c8791
// declared property getter: - (id)artworkMIMEType;	// 0x336c8795
- (id)artworkTimeMarkerForTime:(double)time;	// 0x336c9ff5
// declared property getter: - (id)artworkTimeMarkers;	// 0x336c9d75
// declared property getter: - (id)asset;	// 0x336c8095
// declared property getter: - (id)avPlayerItem;	// 0x336cba51
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x336cad95
// declared property getter: - (BOOL)canSeedGenius;	// 0x336c8799
- (id)chapterTimeMarkerForTime:(double)time;	// 0x336c9fb9
// declared property getter: - (id)chapterTimeMarkers;	// 0x336c9d4d
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x336ca06d
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x336c9e41
// declared property getter: - (id)composer;	// 0x336c879d
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x336c87c1
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x336c87e9
// declared property getter: - (int)customAVEQPreset;	// 0x336c8975
- (void)dealloc;	// 0x336c7d9d
// declared property getter: - (float)defaultPlaybackRate;	// 0x336cace5
// declared property getter: - (unsigned)discCount;	// 0x336c87a5
// declared property getter: - (unsigned)discNumber;	// 0x336c87a1
// declared property getter: - (id)displayableText;	// 0x336c8849
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x336c8801
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x336ca361
// declared property getter: - (double)durationFromExternalMetadata;	// 0x336ca3a9
// declared property getter: - (double)durationIfAvailable;	// 0x336ca449
- (double)durationInSeconds;	// 0x336c8609
// declared property getter: - (BOOL)durationIsValid;	// 0x336ca3c1
// declared property getter: - (id)feeder;	// 0x336cacc5
- (void)flushNowPlayingCaches;	// 0x336c7f35
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x336c8ac9
// declared property getter: - (id)genre;	// 0x336c87bd
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x336c8899
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x336c88e1
// declared property getter: - (BOOL)hasDisplayableText;	// 0x336c88e5
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x336c88e9
// declared property getter: - (id)imageCache;	// 0x336c8c95
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x336c8c99
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x336c8cc5
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x336cad05
// declared property getter: - (BOOL)isAssetLoaded;	// 0x336cad25
- (BOOL)isAssetURLValid;	// 0x336c87b9
- (BOOL)isPlaceholderForItem:(id)item;	// 0x336c87b5
// declared property getter: - (BOOL)isStreamable;	// 0x336c88fd
// declared property getter: - (BOOL)isStreamingQuality;	// 0x3379d7a1
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x336c79e1
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x336c87a9
- (void)loadAssetAndPlayerItem;	// 0x336c7f61
- (id)localeForAssetTrack:(id)assetTrack;	// 0x336cb72d
- (id)localizedPositionInPlaylistString;	// 0x336ca231
// declared property getter: - (id)lyrics;	// 0x336c8859
// declared property getter: - (id)mainTitle;	// 0x336c8999
// declared property getter: - (id)mediaItem;	// 0x3377d561
// declared property getter: - (CGSize)naturalSize;	// 0x336c899d
- (void)notePlaybackFinishedByHittingEnd;	// 0x336c84dd
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x336caa21
- (id)path;	// 0x336c8679
// declared property getter: - (unsigned long long)persistentID;	// 0x336ca221
// declared property getter: - (double)playableDuration;	// 0x336ca589
// declared property getter: - (double)playableDurationIfAvailable;	// 0x336ca5a1
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x336c84f9
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x336c89f9
// declared property getter: - (id)player;	// 0x336cad55
// declared property getter: - (id)playerItem;	// 0x336c8285
// declared property getter: - (id)podcastURL;	// 0x336c89f5
// declared property getter: - (CGSize)presentationSize;	// 0x336c8a8d
- (void)reevaluateType;	// 0x336cb78d
- (void)resetBookkeeping;	// 0x336c8481
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x336c8b55
- (void)setAlternateAudioTrackID:(int)anId;	// 0x336c84d5
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x336caca5
// declared property setter: - (void)setAvPlayerItem:(id)item;	// 0x336cba61
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x336cacb5
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x336c9dc5
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x336cacf5
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x336cacd5
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x336c8b0d
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x336c8bb1
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x336cad15
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x336cad3d
- (void)setOverrideDuration:(double)duration;	// 0x336c8bd5
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x336c8511
- (void)setPlaybackFinishedTime:(double)time;	// 0x336c8515
- (void)setPlaybackStoppedTime:(double)time;	// 0x336c84d9
// declared property setter: - (void)setPlayer:(id)player;	// 0x336cad65
- (void)setRating:(float)rating;	// 0x336c852d
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x336c8be9
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x336c8535
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x336cad85
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x336c8539
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x336c8551
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x336c857d
// declared property setter: - (void)setVideoID:(id)anId;	// 0x336ca335
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x336caf49
- (void)setupPlaybackInfo;	// 0x336cafb1
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x336cad75
// declared property getter: - (int)status;	// 0x336c8461
// declared property getter: - (int)subtitleTrackID;	// 0x336c8531
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x336c8c59
// declared property getter: - (double)timeOfSeekableEnd;	// 0x336ca699
// declared property getter: - (double)timeOfSeekableStart;	// 0x336ca5b9
- (id)titlesForTime:(double)time;	// 0x336c8da1
// declared property getter: - (unsigned)type;	// 0x336ca20d
- (id)url;	// 0x336c8705
- (id)urlTimeMarkerForTime:(double)time;	// 0x336ca031
// declared property getter: - (id)urlTimeMarkers;	// 0x336c9d9d
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x336c8da5
// declared property getter: - (float)userRating;	// 0x336ca21d
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x336c85a1
// declared property getter: - (id)videoID;	// 0x336ca30d
// declared property getter: - (BOOL)wantsSubtitles;	// 0x336ca22d
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x3379d859
@end

