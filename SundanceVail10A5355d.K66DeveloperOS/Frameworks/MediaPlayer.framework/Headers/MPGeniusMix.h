/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCopying.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library
#import "SSDownloadManagerObserver.h"

@class NSArray, MPMediaPlaylist, MPMediaQuery, NSString;

@interface MPGeniusMix : NSObject <SSDownloadManagerObserver, NSCoding, NSCopying> {
	MPMediaPlaylist *_playlist;	// 4 = 0x4
	MPMediaQuery *_seedTracksQuery;	// 8 = 0x8
	NSArray *_representativeArtists;	// 12 = 0xc
	NSArray *_representativeImageItems;	// 16 = 0x10
}
@property(readonly, assign, nonatomic) float downloadProgress;	// G=0x33735d1d; 
@property(readonly, assign, nonatomic) BOOL isCloudMix;	// G=0x33735e8d; 
@property(readonly, assign, nonatomic) BOOL isDownloading;	// G=0x33735ed5; 
@property(readonly, assign, nonatomic) NSString *name;	// G=0x33735f01; 
@property(readonly, assign, nonatomic) MPMediaPlaylist *playlist;	// G=0x3373793d; @synthesize=_playlist
@property(readonly, assign, nonatomic) NSArray *representativeArtists;	// G=0x33735f2d; 
@property(readonly, assign, nonatomic) MPMediaQuery *seedTracksQuery;	// G=0x337372c5; 
+ (id)artworkCacheDirectoryPath;	// 0x33735521
+ (id)artworkImageForMediaItem:(id)mediaItem;	// 0x33735525
+ (id)artworkImageForMediaItem:(id)mediaItem scaleMode:(int)mode;	// 0x33735899
+ (id)mixQueue;	// 0x33734dad
- (id)initWithCoder:(id)coder;	// 0x33735129
- (id)initWithMPMediaPlaylist:(id)mpmediaPlaylist;	// 0x33734e19
- (id)_cacheDirectoryPath;	// 0x33737381
- (id)_cachedRepresentativeImagePath;	// 0x3373743d
- (unsigned long long)_entityArtworkCacheHashForRepresentativeItems:(id)representativeItems ensureItemArtworkFilesExist:(BOOL)exist;	// 0x33737471
- (void)_generateMixImageWithTileLength:(float)tileLength imageDidLoadBlock:(id)image;	// 0x33736e25
- (CGImageRef)_getAlreadyLoadedRepresentativeImageWithTileLength:(float)tileLength loadCompletionBlock:(id)block;	// 0x33736f79
- (BOOL)_observeMixImageLoadingWithImageDidLoadBlock:(id)_observeMixImageLoadingWithImage;	// 0x33736d69
- (void)_onQueueLoadRepresentativeImageWithTileLength:(float)tileLength;	// 0x337367bd
- (CGImageRef)_placeholderImageWithTileLength:(float)tileLength;	// 0x337361c1
- (CGImageRef)_placeholderMixImageWithTileLength:(float)tileLength;	// 0x337363f9
- (id)_representativeImageItemsWithMaxCount:(unsigned)maxCount;	// 0x33737661
- (BOOL)canPlayUsingNetworkType:(int)type;	// 0x33735771
- (void)cancelDownload;	// 0x33735595
- (id)copyWithZone:(NSZone *)zone;	// 0x337352f9
- (void)dealloc;	// 0x33734ee5
- (id)description;	// 0x33734f9d
- (void)downloadManager:(id)manager downloadStatesDidChange:(id)downloadStates;	// 0x3373533d
- (void)downloadMixWithCompletionHandler:(id)completionHandler;	// 0x33735a11
// declared property getter: - (float)downloadProgress;	// 0x33735d1d
- (void)encodeWithCoder:(id)coder;	// 0x3373528d
- (unsigned)hash;	// 0x3373502d
// declared property getter: - (BOOL)isCloudMix;	// 0x33735e8d
// declared property getter: - (BOOL)isDownloading;	// 0x33735ed5
- (BOOL)isEqual:(id)equal;	// 0x33735071
- (CGImageRef)loadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x33737235
// declared property getter: - (id)name;	// 0x33735f01
// declared property getter: - (id)playlist;	// 0x3373793d
- (void)preloadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x33737125
// declared property getter: - (id)representativeArtists;	// 0x33735f2d
// declared property getter: - (id)seedTracksQuery;	// 0x337372c5
@end

