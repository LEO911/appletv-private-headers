/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISConstraint.h"

@class NSString;

@interface NSLayoutConstraint : NSObject <NSISConstraint> {
	id _container;	// 4 = 0x4
	id _firstItem;	// 8 = 0x8
	id _secondItem;	// 12 = 0xc
	float _constant;	// 16 = 0x10
	float _loweredConstant;	// 20 = 0x14
	id _markerAndPositiveExtraVar;	// 24 = 0x18
	id _negativeExtraVar;	// 28 = 0x1c
	float _coefficient;	// 32 = 0x20
	float _priority;	// 36 = 0x24
	unsigned long long _layoutConstraintFlags;	// 40 = 0x28
	id _flange;	// 48 = 0x30
}
@property(retain) id animations;	// G=0x34784e19; S=0x34784e29; converted property
@property(assign) float constant;	// G=0x347856d1; S=0x3478578d; 
@property(assign) id container;	// G=0x3478520d; S=0x34785231; 
@property(assign) int firstAttribute;	// G=0x34784529; 
@property(assign) id firstItem;	// G=0x34788ae9; @synthesize=_firstItem
@property(readonly, assign) BOOL hasBeenLowered;	// G=0x34784bf1; 
@property(copy) NSString *identifier;	// G=0x34784df9; S=0x34784e09; 
@property(assign) float multiplier;	// G=0x347846ad; 
@property(assign) float priority;	// G=0x347848f9; S=0x34784909; 
@property(assign) int relation;	// G=0x347845e5; 
@property(assign) int secondAttribute;	// G=0x34784809; 
@property(assign) id secondItem;	// G=0x34788b15; @synthesize=_secondItem
@property(assign) BOOL shouldBeArchived;	// G=0x347848cd; S=0x347848e1; 
@property(copy) NSString *symbolicConstant;	// G=0x3478597d; S=0x3478598d; 
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by constant:(float)constant;	// 0x34788aad
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5;	// 0x34788a75
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 constant:(float)constant;	// 0x34788a35
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier;	// 0x347889fd
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier constant:(float)constant;	// 0x347886f5
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant;	// 0x347883ed
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant theme:(id)theme;	// 0x347883dd
+ (id)constraintsWithVisualFormat:(id)visualFormat options:(unsigned)options metrics:(id)metrics views:(id)views;	// 0x347883c1
- (id)init;	// 0x347859a1
- (id)initWithCoder:(id)coder;	// 0x34786c55
- (void)_addToEngine:(id)engine;	// 0x3478772d
- (BOOL)_addToEngine:(id)engine integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x3478751d
- (float)_allowedMagnitudeForIntegralizationAdjustment;	// 0x34784e79
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)markerScaling;	// 0x34784fe9
- (void)_clearWeakContainerReference;	// 0x34785249
- (id)_constantDescriptionForDTrace;	// 0x34785659
- (id)_constraintByReplacingItem:(id)item withItem:(id)item2;	// 0x34786fd5
- (id)_constraintByReplacingView:(id)view withView:(id)view2;	// 0x347871d5
- (int)_constraintType;	// 0x34785a81
- (void)_containerGeometryDidChange;	// 0x3478525d
- (BOOL)_deferDTraceLogging;	// 0x34785181
- (BOOL)_describesSameRestrictionAsConstraint:(id)constraint;	// 0x347871e5
- (id)_descriptionforSymbolicConstant;	// 0x347855cd
- (BOOL)_effectiveConstant:(float *)constant error:(id *)error;	// 0x34785381
- (CGSize)_engineToContainerScalingCoefficients;	// 0x34787a89
- (float)_fudgeIncrement;	// 0x34784e69
- (id)_identifier;	// 0x34784c1d
- (BOOL)_isFudgeable;	// 0x34784e3d
- (BOOL)_loweredConstantIsRounded;	// 0x3478521d
- (id)_loweredExpression;	// 0x34787d95
- (id)_loweredExpressionReportingConstantIsRounded:(BOOL *)rounded;	// 0x34787ac9
- (void)_makeExtraVars;	// 0x34787891
- (id)_markerAndPositiveExtraVar;	// 0x347850d9
- (id)_negativeExtraVar;	// 0x3478512d
- (BOOL)_nsib_isRedundant;	// 0x34788381
- (BOOL)_nsib_isRedundantInEngine:(id)engine;	// 0x34787f65
- (int)_primitiveConstraintType;	// 0x347851ad
- (id)_priorityDescription;	// 0x347861c5
- (void)_removeFromEngine:(id)engine;	// 0x3478774d
- (void)_setDeferDTraceLogging:(BOOL)logging;	// 0x34785195
- (void)_setFirstAttribute:(int)attribute;	// 0x34784539
- (void)_setFirstItem:(id)item;	// 0x34788afd
- (void)_setIdentifier:(id)identifier;	// 0x34784ca9
- (void)_setMarkerAndPositiveErrorVar:(id)var;	// 0x347850e9
- (void)_setMultiplier:(float)multiplier;	// 0x347846bd
- (void)_setNegativeExtraVar:(id)var;	// 0x3478513d
- (void)_setPrimitiveConstraintType:(int)type;	// 0x347851d9
- (void)_setRelation:(int)relation;	// 0x347845fd
- (void)_setSecondAttribute:(int)attribute;	// 0x3478481d
- (void)_setSecondItem:(id)item;	// 0x34788b29
- (void)_setSymbolicConstant:(id)constant;	// 0x34785841
- (void)_setSymbolicConstant:(id)constant constant:(float)constant2;	// 0x34785425
- (id)_symbolicConstant;	// 0x347857a1
// converted property getter: - (id)animations;	// 0x34784e19
- (id)asciiArtDescription;	// 0x34785d85
// declared property getter: - (float)constant;	// 0x347856d1
// declared property getter: - (id)container;	// 0x3478520d
- (void)dealloc;	// 0x347859f5
- (id)description;	// 0x3478660d
- (id)descriptionAccessory;	// 0x34786245
- (void)encodeWithCoder:(id)coder;	// 0x347869a1
- (id)equationDescription;	// 0x34786249
// declared property getter: - (int)firstAttribute;	// 0x34784529
// declared property getter: - (id)firstItem;	// 0x34788ae9
// declared property getter: - (BOOL)hasBeenLowered;	// 0x34784bf1
// declared property getter: - (id)identifier;	// 0x34784df9
// declared property getter: - (float)multiplier;	// 0x347846ad
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)marker;	// 0x347850bd
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x34787de9
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x347850d1
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x347850cd
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x347850d5
// declared property getter: - (float)priority;	// 0x347848f9
- (float)priorityForVariable:(id)variable;	// 0x3478750d
// declared property getter: - (int)relation;	// 0x347845e5
// declared property getter: - (int)secondAttribute;	// 0x34784809
// declared property getter: - (id)secondItem;	// 0x34788b15
// converted property setter: - (void)setAnimations:(id)animations;	// 0x34784e29
// declared property setter: - (void)setConstant:(float)constant;	// 0x3478578d
// declared property setter: - (void)setContainer:(id)container;	// 0x34785231
- (void)setHasBeenLowered:(BOOL)lowered;	// 0x34784c05
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x34784e09
// declared property setter: - (void)setPriority:(float)priority;	// 0x34784909
// declared property setter: - (void)setShouldBeArchived:(BOOL)beArchived;	// 0x347848e1
// declared property setter: - (void)setSymbolicConstant:(id)constant;	// 0x3478598d
// declared property getter: - (BOOL)shouldBeArchived;	// 0x347848cd
// declared property getter: - (id)symbolicConstant;	// 0x3478597d
@end

