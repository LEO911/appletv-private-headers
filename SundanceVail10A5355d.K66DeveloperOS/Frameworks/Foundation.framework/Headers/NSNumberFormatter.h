/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x346f9215; S=0x34665ed5; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x346f93c9; S=0x34686c75; converted property
@property(retain) id currencyCode;	// G=0x346fa585; S=0x346fa645; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x346f9491; S=0x346f9551; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x346fbfc9; S=0x346fc089; converted property
@property(retain) id currencySymbol;	// G=0x346fa6e5; S=0x346fa7a5; converted property
@property(retain) id decimalSeparator;	// G=0x346f9255; S=0x346f9315; converted property
@property(retain) id exponentSymbol;	// G=0x346faf25; S=0x346fafe5; converted property
@property(assign) unsigned formatWidth;	// G=0x346fb29d; S=0x346fb369; converted property
@property(assign) unsigned formatterBehavior;	// G=0x346f8bc5; S=0x34686a89; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x346f8b7d; S=0x34675ba9; converted property
@property(retain) id groupingSeparator;	// G=0x346f96b9; S=0x346f9779; converted property
@property(assign) unsigned groupingSize;	// G=0x346fb085; S=0x3468149d; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x346fa845; S=0x346fa905; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x346fc129; S=0x346fc205; converted property
@property(retain) id locale;	// G=0x346f8ad5; S=0x34675b3d; converted property
@property(retain) id maximum;	// G=0x346fbf0d; S=0x346fbf35; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x346fbd85; S=0x3467baa1; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x346fbb6d; S=0x346fbc39; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x346fc535; S=0x346fc601; converted property
@property(retain) id minimum;	// G=0x346fbe51; S=0x346fbe79; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x346fbcb9; S=0x34686cf9; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x346fbaa1; S=0x34686d79; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x346fc3e9; S=0x346fc4b5; converted property
@property(retain) id minusSign;	// G=0x346fac65; S=0x346fad25; converted property
@property(retain) id multiplier;	// G=0x346fb3e9; S=0x346fb4a9; converted property
@property(retain) id negativeFormat;	// G=0x346f8c05; S=0x346f8cd9; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x346f9ea5; S=0x34665e7d; converted property
@property(retain) id negativePrefix;	// G=0x346fa2c5; S=0x346fa385; converted property
@property(retain) id negativeSuffix;	// G=0x346fa425; S=0x346fa4e5; converted property
@property(retain) id nilSymbol;	// G=0x346f99a9; S=0x34665dcd; converted property
@property(retain) id notANumberSymbol;	// G=0x346f9b09; S=0x346f9bc9; converted property
@property(assign) unsigned numberStyle;	// G=0x346f8a35; S=0x3466af45; converted property
@property(retain) id paddingCharacter;	// G=0x346fb549; S=0x346fb609; converted property
@property(assign) unsigned paddingPosition;	// G=0x346fb6a9; S=0x346fb775; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x346fc681; S=0x346fc6c9; converted property
@property(retain) id perMillSymbol;	// G=0x346fab05; S=0x346fabc5; converted property
@property(retain) id percentSymbol;	// G=0x346fa9a5; S=0x346faa65; converted property
@property(retain) id plusSign;	// G=0x346fadc5; S=0x346fae85; converted property
@property(retain) id positiveFormat;	// G=0x346f8f35; S=0x346f8fed; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x346f9d45; S=0x34665e25; converted property
@property(retain) id positivePrefix;	// G=0x346fa005; S=0x346fa0c5; converted property
@property(retain) id positiveSuffix;	// G=0x346fa165; S=0x346fa225; converted property
@property(retain) id roundingIncrement;	// G=0x346fb941; S=0x346fba01; converted property
@property(assign) unsigned roundingMode;	// G=0x346fb7f5; S=0x346fb8c1; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x346fb151; S=0x346fb21d; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x346f9f29; S=0x346f9fad; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x346f8e59; S=0x346f8edd; converted property
@property(retain) id textAttributesForNil;	// G=0x346f9a2d; S=0x346f9ab1; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x346f9c69; S=0x346f9ced; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x346f9dc9; S=0x346f9e4d; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x346f9139; S=0x346f91bd; converted property
@property(retain) id textAttributesForZero;	// G=0x346f98cd; S=0x346f9951; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x346f95f1; S=0x34669549; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x346fc289; S=0x346fc365; converted property
@property(retain) id zeroSymbol;	// G=0x3467e6c5; S=0x346f982d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x34665dbd
+ (void)initialize;	// 0x34665a01
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x34686e75
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x34665a25
- (id)init;	// 0x34665a3d
- (id)initWithCoder:(id)coder;	// 0x346f7ff9
- (void *)__Keynote_NOOP;	// 0x346f7d29
- (void)_clearFormatter;	// 0x346f7d05
- (void)_regenerateFormatter;	// 0x34665f31
- (void)_reset;	// 0x346f7d2d
// converted property getter: - (BOOL)allowsFloats;	// 0x346f9215
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x346f93c9
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x346f8179
- (id)copyWithZone:(NSZone *)zone;	// 0x346f7ee9
// converted property getter: - (id)currencyCode;	// 0x346fa585
// converted property getter: - (id)currencyDecimalSeparator;	// 0x346f9491
// converted property getter: - (id)currencyGroupingSeparator;	// 0x346fbfc9
// converted property getter: - (id)currencySymbol;	// 0x346fa6e5
- (void)dealloc;	// 0x34675c7d
// converted property getter: - (id)decimalSeparator;	// 0x346f9255
- (void)encodeWithCoder:(id)coder;	// 0x346f7f51
// converted property getter: - (id)exponentSymbol;	// 0x346faf25
- (void)finalize;	// 0x346f7ea5
// converted property getter: - (unsigned)formatWidth;	// 0x346fb29d
// converted property getter: - (unsigned)formatterBehavior;	// 0x346f8bc5
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x346f8b7d
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x346f817d
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x346f89dd
// converted property getter: - (id)groupingSeparator;	// 0x346f96b9
// converted property getter: - (unsigned)groupingSize;	// 0x346fb085
// converted property getter: - (id)internationalCurrencySymbol;	// 0x346fa845
// converted property getter: - (BOOL)isLenient;	// 0x346fc129
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x346fc681
// converted property getter: - (id)locale;	// 0x346f8ad5
// converted property getter: - (id)maximum;	// 0x346fbf0d
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x346fbd85
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x346fbb6d
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x346fc535
// converted property getter: - (id)minimum;	// 0x346fbe51
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x346fbcb9
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x346fbaa1
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x346fc3e9
// converted property getter: - (id)minusSign;	// 0x346fac65
// converted property getter: - (id)multiplier;	// 0x346fb3e9
// converted property getter: - (id)negativeFormat;	// 0x346f8c05
// converted property getter: - (id)negativeInfinitySymbol;	// 0x346f9ea5
// converted property getter: - (id)negativePrefix;	// 0x346fa2c5
// converted property getter: - (id)negativeSuffix;	// 0x346fa425
// converted property getter: - (id)nilSymbol;	// 0x346f99a9
// converted property getter: - (id)notANumberSymbol;	// 0x346f9b09
- (id)numberFromString:(id)string;	// 0x346f89fd
// converted property getter: - (unsigned)numberStyle;	// 0x346f8a35
// converted property getter: - (id)paddingCharacter;	// 0x346fb549
// converted property getter: - (unsigned)paddingPosition;	// 0x346fb6a9
// converted property getter: - (id)perMillSymbol;	// 0x346fab05
// converted property getter: - (id)percentSymbol;	// 0x346fa9a5
// converted property getter: - (id)plusSign;	// 0x346fadc5
// converted property getter: - (id)positiveFormat;	// 0x346f8f35
// converted property getter: - (id)positiveInfinitySymbol;	// 0x346f9d45
// converted property getter: - (id)positivePrefix;	// 0x346fa005
// converted property getter: - (id)positiveSuffix;	// 0x346fa165
// converted property getter: - (id)roundingIncrement;	// 0x346fb941
// converted property getter: - (unsigned)roundingMode;	// 0x346fb7f5
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x346fb151
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x34665ed5
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x34686c75
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x346fa645
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x346f9551
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x346fc089
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x346fa7a5
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x346f9315
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x346fafe5
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x346fb369
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x34686a89
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x34675ba9
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x346f9779
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x3468149d
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x346fa905
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x346fc205
// converted property setter: - (void)setLocale:(id)locale;	// 0x34675b3d
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x346fbf35
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x3467baa1
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x346fbc39
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x346fc601
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x346fbe79
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x34686cf9
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x34686d79
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x346fc4b5
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x346fad25
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x346fb4a9
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x346f8cd9
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x34665e7d
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x346fa385
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x346fa4e5
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x34665dcd
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x346f9bc9
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3466af45
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x346fb609
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x346fb775
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x346fc6c9
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x346fabc5
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x346faa65
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x346fae85
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x346f8fed
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x34665e25
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x346fa0c5
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x346fa225
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x346fba01
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x346fb8c1
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x346fb21d
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x346f9fad
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x346f8edd
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x346f9ab1
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x346f9ced
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x346f9e4d
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x346f91bd
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x346f9951
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x34669549
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x346fc365
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x346f982d
- (id)stringForObjectValue:(id)objectValue;	// 0x346695e5
- (id)stringFromNumber:(id)number;	// 0x346695cd
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x346f9f29
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x346f8e59
// converted property getter: - (id)textAttributesForNil;	// 0x346f9a2d
// converted property getter: - (id)textAttributesForNotANumber;	// 0x346f9c69
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x346f9dc9
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x346f9139
// converted property getter: - (id)textAttributesForZero;	// 0x346f98cd
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x346f95f1
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x346fc289
// converted property getter: - (id)zeroSymbol;	// 0x3467e6c5
@end

