/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISVariableDelegate.h"

@class NSMapTable, NSMutableArray, NSMutableSet, NSISVariable;
@protocol NSISEngineDelegate;

@interface NSISEngine : NSObject <NSISVariableDelegate> {
	NSMapTable *_rows;	// 4 = 0x4
	NSMapTable *_rowsCrossIndex;	// 8 = 0x8
	NSISVariable *_headForObjectiveRow;	// 12 = 0xc
	NSMutableArray *_variablesWithValueRestrictionViolations;	// 16 = 0x10
	int _automaticOptimizationDisabledCount;	// 20 = 0x14
	id<NSISEngineDelegate> _delegate;	// 24 = 0x18
	int _delegateCallsDisabledCount;	// 28 = 0x1c
	NSMapTable *_brokenConstraintPositiveErrors;	// 32 = 0x20
	NSMapTable *_brokenConstraintNegativeErrors;	// 36 = 0x24
	NSMutableSet *_variablesWithIntegralizationViolations;	// 40 = 0x28
	CFDictionaryRef _integralizationAdjustmentsForConstraintMarkers;	// 44 = 0x2c
	BOOL _shouldIntegralize;	// 48 = 0x30
}
@property(assign) id<NSISEngineDelegate> delegate;	// G=0x34781c75; S=0x34781c89; @synthesize=_delegate
@property(retain) NSISVariable *headForObjectiveRow;	// G=0x34781c09; S=0x34781c1d; @synthesize=_headForObjectiveRow
@property(assign) CFDictionaryRef integralizationAdjustmentsForConstraintMarkers;	// G=0x3477a61d; S=0x3477a62d; 
@property(retain) NSMapTable *rows;	// G=0x34781bc1; S=0x34781bd5; @synthesize=_rows
@property(retain) NSMapTable *rowsCrossIndex;	// G=0x34781be5; S=0x34781bf9; @synthesize=_rowsCrossIndex
@property(assign) BOOL shouldIntegralize;	// G=0x34781ca1; S=0x34781cb9; @synthesize=_shouldIntegralize
@property(retain) NSMutableSet *variablesWithIntegralizationViolations;	// G=0x34781c51; S=0x34781c65; @synthesize=_variablesWithIntegralizationViolations
@property(retain) NSMutableArray *variablesWithValueRestrictionViolations;	// G=0x34781c2d; S=0x34781c41; @synthesize=_variablesWithValueRestrictionViolations
- (id)init;	// 0x3477e7fd
- (id)_brokenConstraintNegativeErrors;	// 0x3477ab49
- (id)_brokenConstraintNegativeErrorsIfAvailable;	// 0x3477ab9d
- (id)_brokenConstraintPositiveErrors;	// 0x3477aa49
- (id)_brokenConstraintPositiveErrorsIfAvailable;	// 0x3477aa9d
- (void)addExpression:(id)expression priority:(float)priority times:(float)times toObjectiveRowWithHead:(id)head body:(id)body;	// 0x3477b45d
- (void)addExpression:(id)expression times:(float)times toRowWithHead:(id)head body:(id)body;	// 0x3477b5ad
- (void)addVariable:(id)variable coefficient:(float)coefficient toRowWithHead:(id)head body:(id)body;	// 0x3477b31d
- (void)addVariable:(id)variable priority:(float)priority times:(float)times toObjectiveRowWithHead:(id)head body:(id)body;	// 0x3477b1cd
- (void)addVariableToBeOptimized:(id)beOptimized priority:(float)priority;	// 0x3477f31d
- (id)allRowHeads;	// 0x3477a7a9
- (BOOL)bodyVarIsAmbiguous:(id)ambiguous withPivotOfOutgoingRowHead:(id *)outgoingRowHead;	// 0x347815f5
- (id)candidateRedundantConstraints;	// 0x34781319
- (void)changeVariableToBeOptimized:(id)beOptimized fromPriority:(float)priority toPriority:(float)priority3;	// 0x3477f415
- (id)chooseHeadForRowBody:(id)rowBody;	// 0x3477dd99
- (id)chooseOutgoingRowHeadForIncomingRowHead:(id)incomingRowHead;	// 0x3477c47d
- (void)constraintDidChangeSuchThatMarker:(id)constraint shouldBeReplacedByMarkerPlusDelta:(float)delta;	// 0x3477fcf9
- (id)constraints;	// 0x34780171
- (id)constraintsAffectingValueOfVariable:(id)variable;	// 0x34781245
- (void)dealloc;	// 0x3477e9bd
// declared property getter: - (id)delegate;	// 0x34781c75
- (id)description;	// 0x3478020d
- (int)desirabilityOfAdjustingVariable:(id)adjustingVariable delta:(float)delta fixingTargetVar:(BOOL)var;	// 0x3477ce65
- (void)enumerateOriginalConstraints:(id)constraints;	// 0x34780055
- (void)enumerateRows:(id)rows;	// 0x3477a6b5
- (void)enumerateRowsCrossIndex:(id)index;	// 0x3477a845
- (id)errorVariableIntroducedByBreakingConstraintWithMarker:(id)marker errorIsPositive:(BOOL)positive;	// 0x3477bfed
- (BOOL)exerciseAmbiguityInVariable:(id)variable;	// 0x34781b79
- (id)expressionBySubstitutingForRowHeadVariablesInExpression:(id)expression;	// 0x3477dc41
- (id)fallbackMarkerForConstraintToBreakInRowWithHead:(id)head body:(id)body;	// 0x3477c0c9
- (void)fixUpValueRestrictionViolations;	// 0x3477c81d
- (void)fixupIntegralizationViolations;	// 0x3477d375
- (id)handleUnsatisfiableRowWithHead:(id)head body:(id)body mutuallyExclusiveConstraints:(id *)constraints;	// 0x3477c271
- (BOOL)hasValue:(float *)value forVariable:(id)variable;	// 0x3477efc9
// declared property getter: - (id)headForObjectiveRow;	// 0x34781c09
- (BOOL)incoming:(id *)incoming andOutgoing:(id *)outgoing rowHeadsThatMakeValueAmbiguousForVariable:(id)variable;	// 0x347818d1
- (float)integralizationAdjustmentForMarker:(id)marker;	// 0x3477ae9d
// declared property getter: - (CFDictionaryRef)integralizationAdjustmentsForConstraintMarkers;	// 0x3477a61d
- (id)markerForBrokenConstraintWithNegativeErrorVar:(id)negativeErrorVar;	// 0x3477ad21
- (id)markerForBrokenConstraintWithPositiveErrorVar:(id)positiveErrorVar;	// 0x3477ac49
- (void)minimizeConstantInObjectiveRowWithHead:(id)head;	// 0x3477c709
- (id)negativeErrorVarForBrokenConstraintWithMarker:(id)marker;	// 0x3477abc5
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x3477ae05
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x3477adfd
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x3477adf9
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x3477ae01
- (unsigned)numberOfConstraintsEligibleForAdjustmentToIntegralizeVariable:(id)integralizeVariable ignoringConstraintsWithMarkers:(id)markers;	// 0x3477d0c5
- (void)optimize;	// 0x3477ec19
- (id)outgoingRowHeadForRemovingConstraintWithMarker:(id)marker;	// 0x3477f585
- (void)pivotToMakeBodyVar:(id)makeBodyVar newHeadOfRowWithHead:(id)head;	// 0x3477bb39
- (id)positiveErrorVarForBrokenConstraintWithMarker:(id)marker;	// 0x3477aac5
- (void)rawRemoveRowWithHead:(id)head;	// 0x3477a805
- (void)rawSetRowWithHead:(id)head body:(id)body;	// 0x3477a7e1
- (void)removeBodyVarFromAllRows:(id)allRows;	// 0x3477b0d9
- (void)removeConstraintWithMarker:(id)marker;	// 0x3477fa45
- (void)removeRowWithHead:(id)head;	// 0x3477af89
- (void)removeVariableToBeOptimized:(id)beOptimized priority:(float)priority;	// 0x3477f379
- (void)replaceMarker:(id)marker withMarkerPlusCoefficient:(float)markerPlusCoefficient timesVariable:(id)variable;	// 0x3477bd9d
- (id)rowBodyForHead:(id)head;	// 0x3477a655
- (id)rowBodyForNonObjectiveHead:(id)nonObjectiveHead;	// 0x3477a675
- (id)rowBodyForObjectiveHead:(id)objectiveHead;	// 0x3477a695
- (void)rowCrossIndexNoteBodyVariable:(id)variable wasAddedToRowWithHead:(id)head;	// 0x3477a92d
- (void)rowCrossIndexNoteBodyVariable:(id)variable wasRemovedFromRowWithHead:(id)head;	// 0x3477a9ad
- (void)rowCrossIndexNoteDroppedBodyVar:(id)var;	// 0x3477aa29
- (id)rowHeadsForRowsContainingBodyVar:(id)rowsContainingBodyVar;	// 0x3477a825
// declared property getter: - (id)rows;	// 0x34781bc1
// declared property getter: - (id)rowsCrossIndex;	// 0x34781be5
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x34781c89
// declared property setter: - (void)setHeadForObjectiveRow:(id)objectiveRow;	// 0x34781c1d
- (void)setIntegralizationAdjustment:(float)adjustment forMarker:(id)marker;	// 0x3477aeb1
// declared property setter: - (void)setIntegralizationAdjustmentsForConstraintMarkers:(CFDictionaryRef)constraintMarkers;	// 0x3477a62d
- (void)setNegativeErrorVar:(id)var forBrokenConstraintWithMarker:(id)marker;	// 0x3477abf1
- (void)setPositiveErrorVar:(id)var forBrokenConstraintWithMarker:(id)marker;	// 0x3477aaf1
- (void)setRowWithHead:(id)head body:(id)body;	// 0x3477aec5
// declared property setter: - (void)setRows:(id)rows;	// 0x34781bd5
// declared property setter: - (void)setRowsCrossIndex:(id)index;	// 0x34781bf9
// declared property setter: - (void)setShouldIntegralize:(BOOL)integralize;	// 0x34781cb9
// declared property setter: - (void)setVariablesWithIntegralizationViolations:(id)integralizationViolations;	// 0x34781c65
// declared property setter: - (void)setVariablesWithValueRestrictionViolations:(id)valueRestrictionViolations;	// 0x34781c41
// declared property getter: - (BOOL)shouldIntegralize;	// 0x34781ca1
- (void)substituteOutAllOccurencesOfBodyVar:(id)bodyVar withExpression:(id)expression;	// 0x3477b6ed
- (BOOL)tryAddingDirectly:(id)directly;	// 0x3477e279
- (BOOL)tryToAddConstraintWithMarker:(id)marker expression:(id)expression integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x3477f089
- (BOOL)tryUsingArtificialVariableToAddConstraintWithMarker:(id)marker rowBody:(id)body mutuallyExclusiveConstraints:(id *)constraints;	// 0x3477e3f5
- (float)valueForVariable:(id)variable;	// 0x3477efa1
- (float)valueForVariableWithoutIntegralizationAdjustments:(id)variableWithoutIntegralizationAdjustments;	// 0x3477cc71
- (BOOL)valueOfVariableIsAmbiguous:(id)variableIsAmbiguous;	// 0x34781b59
- (id)variableToWorkOnAmongVariablesWithIntegralizationViolationsIgnoringLostCauses:(id)integralizationViolationsIgnoringLostCauses varsAlreadyAdjusted:(id)adjusted;	// 0x3477d271
// declared property getter: - (id)variablesWithIntegralizationViolations;	// 0x34781c51
// declared property getter: - (id)variablesWithValueRestrictionViolations;	// 0x34781c2d
- (void)verifyInternalIntegrity;	// 0x34780585
- (void)withAutomaticOptimizationDisabled:(id)automaticOptimizationDisabled;	// 0x3477ec71
- (void)withDelegateCallsDisabled:(id)delegateCallsDisabled;	// 0x3477eeb9
- (void)withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:(id)automaticOptimizationDisabled;	// 0x3477edd1
@end

