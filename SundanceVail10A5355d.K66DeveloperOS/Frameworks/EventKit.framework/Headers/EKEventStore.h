/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSMutableSet, EKDaemonConnection, EKCalendar, NSNumber, NSTimeZone, NSString, NSArray;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject {
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKCalendar *_defaultCalendarForNewEvents;	// 32 = 0x20
	EKCalendar *_defaultCalendarForNewReminders;	// 36 = 0x24
	EKDaemonConnection *_database;	// 40 = 0x28
	double _lastDatabaseNotificationTimestamp;	// 44 = 0x2c
	unsigned long _flags;	// 52 = 0x34
	NSTimeZone *_timeZone;	// 56 = 0x38
	NSMutableDictionary *_calendars;	// 60 = 0x3c
	NSMutableDictionary *_sources;	// 64 = 0x40
	NSMutableSet *_objectsPendingCommit;	// 68 = 0x44
	NSObject<OS_dispatch_queue> *_calendarQueue;	// 72 = 0x48
	NSObject<OS_dispatch_queue> *_registeredQueue;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *_unsavedChangesQueue;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_dbChangedQueue;	// 84 = 0x54
	NSMutableDictionary *_cachedValidatedEmails;	// 88 = 0x58
}
@property(retain, nonatomic) NSMutableDictionary *_cachedValidatedEmails;	// G=0x31fa6bc5; S=0x31fa6bd5; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x31fa6ae5; S=0x31fa6af5; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewEvents;	// G=0x31fa6a39; S=0x31fa6a49; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewReminders;	// G=0x31fa6a59; S=0x31fa6a69; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x31fa6b05; S=0x31fa6b15; @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *calendarQueue;	// G=0x31fa6b45; S=0x31fa6b55; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x31f74c6d; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x31fa6a79; S=0x31fa6a89; @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;	// G=0x31fa6ba5; S=0x31fa6bb5; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x31f6a515; S=0x31fa6889; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x31f6b49d; 
@property(retain) EKCalendar *defaultCalendarForNewReminders;	// G=0x31fa1139; S=0x31fa12b9; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x31f691a1; S=0x31fa6845; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x31fa69f9; S=0x31fa6a09; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x31f9e781; 
@property(assign, nonatomic) unsigned long flags;	// G=0x31fa6ac5; S=0x31fa6ad5; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x31fa69d9; S=0x31fa69e9; @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// G=0x31fa6a99; S=0x31fa6ab1; @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x31fa6b25; S=0x31fa6b35; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x31fa69b9; S=0x31fa69c9; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x31fa6999; S=0x31fa69a9; @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;	// G=0x31fa6b65; S=0x31fa6b75; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x31f5945d; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x31f57f09; S=0x31f5bc95; @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;	// G=0x31fa6b85; S=0x31fa6b95; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x31fa6a19; S=0x31fa6a29; @synthesize=_updatedObjects
+ (BOOL)_isAuthorizationRestricted;	// 0x31f9d2ad
+ (int)authorizationStatusForEntityType:(unsigned)entityType;	// 0x31f9d301
+ (Class)classForEntityName:(id)entityName;	// 0x31f599c9
+ (Class)publicClassForEntityName:(id)entityName;	// 0x31f63121
- (id)init;	// 0x31f57cad
- (id)initWithAccessToEntityTypes:(unsigned)entityTypes;	// 0x31f9cf81
- (id)initWithAccessToEntityTypes:(unsigned)entityTypes options:(unsigned long)options path:(id)path;	// 0x31f9cf99
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x31f57cc5
- (void)_accessStatusChanged;	// 0x31f9d509
- (id)_addFetchedObjectWithID:(id)anId;	// 0x31f5970d
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x31f7107d
- (id)_allCalendars;	// 0x31f64161
// declared property getter: - (id)_cachedValidatedEmails;	// 0x31fa6bc5
- (BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;	// 0x31f64379
- (id)_calendarItemsMatchingPredicate:(id)predicate;	// 0x31fa1789
- (id)_calendarWithID:(id)anId;	// 0x31f9f56d
// declared property getter: - (id)_calendars;	// 0x31fa6ae5
- (void)_databaseChangedExternally;	// 0x31f72f7d
// declared property getter: - (id)_defaultCalendarForNewEvents;	// 0x31fa6a39
// declared property getter: - (id)_defaultCalendarForNewReminders;	// 0x31fa6a59
- (void)_deleteObject:(id)object;	// 0x31f74931
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x31f9fe45
- (void)_forgetRegisteredObjects;	// 0x31fa3e49
- (void)_insertObject:(id)object;	// 0x31f6d0f1
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x31f9fb05
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x31f6464d
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x31f64cdd
- (void)_protectedDataDidBecomeAvailable;	// 0x31fa683d
- (void)_protectedDataWillBecomeUnavailable;	// 0x31fa6839
- (void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;	// 0x31fa38d5
- (void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;	// 0x31fa3665
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x31fa3b11
- (void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x31fa37a1
- (void)_registerObject:(id)object;	// 0x31f68bc1
- (void)_registerObjectImmediate:(id)immediate;	// 0x31f59e29
- (void)_requestAccessForEntityType:(unsigned)entityType;	// 0x31f9d381
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x31f72971
- (void)_saveWithoutNotify;	// 0x31f9e7e1
// declared property getter: - (id)_sources;	// 0x31fa6b05
- (void)_trackModifiedObject:(id)object;	// 0x31f77161
- (void)_unregisterObject:(id)object;	// 0x31f74b89
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x31f73229
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x31fa600d
- (id)alarmWithUUID:(id)uuid;	// 0x31fa5f21
- (void)cacheValidationStatusForEmail:(id)email status:(int)status;	// 0x31fa68cd
- (id)calendarItemWithIdentifier:(id)identifier;	// 0x31fa1505
- (id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;	// 0x31fa1625
// declared property getter: - (id)calendarQueue;	// 0x31fa6b45
- (id)calendarWithExternalURI:(id)externalURI;	// 0x31fa22e9
- (id)calendarWithID:(id)anId;	// 0x31f5efd9
- (id)calendarWithIdentifier:(id)identifier;	// 0x31f64b45
// declared property getter: - (id)calendars;	// 0x31f74c6d
- (id)calendarsForEntityType:(unsigned)entityType;	// 0x31f9efd5
- (void)cancelFetchRequest:(id)request;	// 0x31fa5ec5
- (id)changesSinceSequenceNumber:(int)number;	// 0x31f9d5bd
- (id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;	// 0x31fa21fd
- (BOOL)commit:(id *)commit;	// 0x31f710ed
- (id)connection;	// 0x31f58be5
- (CGColorRef)copyCGColorForNewCalendar;	// 0x31fa0df9
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x31f64e5d
- (void)daemonRestarted;	// 0x31f9e735
// declared property getter: - (id)database;	// 0x31fa6a79
// declared property getter: - (id)dbChangedQueue;	// 0x31fa6ba5
- (void)dealloc;	// 0x31f58fed
- (id)defaultAllDayAlarm;	// 0x31f6a4a1
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x31f6a515
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x31f6b49d
// converted property getter: - (id)defaultCalendarForNewReminders;	// 0x31fa1139
- (id)defaultTimedAlarm;	// 0x31f6912d
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x31f691a1
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x31f9f8dd
// declared property getter: - (id)deletedObjects;	// 0x31fa69f9
- (id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x31fa2a15
- (int)emailAddressValidationStatus:(id)status;	// 0x31fa6961
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x31fa5c59
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x31f67a69
- (id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;	// 0x31fa0075
// declared property getter: - (id)eventStoreIdentifier;	// 0x31f9e781
- (id)eventWithIdentifier:(id)identifier;	// 0x31f9fa0d
- (id)eventWithUUID:(id)uuid;	// 0x31fa210d
- (id)eventWithUniqueId:(id)uniqueId;	// 0x31fa0181
- (id)eventsMatchingPredicate:(id)predicate;	// 0x31f58379
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x31f58535
- (BOOL)fetchProperties:(id)properties forReminders:(id)reminders;	// 0x31fa1dfd
- (id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x31f79939
// declared property getter: - (unsigned long)flags;	// 0x31fa6ac5
- (BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id *)error;	// 0x31f9ed29
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x31fa0659
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x31fa0bb5
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x31fa0751
- (id)insertNewEvent;	// 0x31fa23c9
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x31fa2425
- (id)insertNewReminder;	// 0x31fa1949
// declared property getter: - (id)insertedObjects;	// 0x31fa69d9
- (id)inviteReplyNotifications;	// 0x31fa314d
- (int)inviteReplyNotificationsCount;	// 0x31fa3125
- (BOOL)isDataProtected;	// 0x31f57f01
// declared property getter: - (double)lastDatabaseNotificationTimestamp;	// 0x31fa6a99
- (id)localSource;	// 0x31f9eb15
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x31f645c5
- (BOOL)markCalendarAlerted:(id)alerted;	// 0x31f9eef1
- (void)markEventAlerted:(id)alerted;	// 0x31fa05d5
- (BOOL)markInviteReplyNotificationAlerted:(id)alerted;	// 0x31fa33dd
- (void)markNotificationsAlertedAndSave:(id)save;	// 0x31fa27e9
- (BOOL)markResourceChangeAlerted:(id)alerted error:(id *)error;	// 0x31fa2e8d
- (int)notifiableEventCount;	// 0x31fa29e9
- (id)objectWithObjectID:(id)objectID;	// 0x31f5f075
// declared property getter: - (id)objectsPendingCommit;	// 0x31fa6b25
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;	// 0x31fa264d
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;	// 0x31fa2491
- (BOOL)occurrenceCacheOccurrencesAreBeingGenerated;	// 0x31fa2465
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x31fa1c29
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x31f65b45
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x31fa1cbd
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;	// 0x31fa1b05
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x31f64ca5
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x31f654f5
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x31f5f291
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;	// 0x31fa6579
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x31fa6685
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;	// 0x31fa1bf1
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x31fa1bb9
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;	// 0x31fa1a55
- (id)predicateForNotifiableEvents;	// 0x31fa67c5
- (id)predicateForNotificationCenterVisibleEvents;	// 0x31fa67e1
- (id)predicateForRemindersInCalendars:(id)calendars;	// 0x31fa1a0d
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x31f798f9
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x31fa1c61
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x31fa1ce1
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;	// 0x31fa1d1d
- (id)predicateForUnacknowledgedEvents;	// 0x31fa67fd
- (id)predicateForUnalertedEvents;	// 0x31f58321
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x31fa681d
- (id)publicObjectWithObjectID:(id)objectID;	// 0x31fa426d
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x31f628e5
// declared property getter: - (id)publicRegisteredObjects;	// 0x31fa69b9
- (int)readWriteCalendarCountForEntityType:(unsigned)entityType;	// 0x31f69be5
- (id)readWriteCalendarsForEntityType:(unsigned)entityType;	// 0x31f64029
- (void)refreshSourcesIfNecessary;	// 0x31fa3c45
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x31f5b31d
- (id)registerFetchedObjectWithID:(id)anId;	// 0x31f596c1
- (id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;	// 0x31fa3f3d
// declared property getter: - (id)registeredObjects;	// 0x31fa6999
// declared property getter: - (id)registeredQueue;	// 0x31fa6b65
- (oneway void)release;	// 0x31f582a5
- (id)reminderWithExternalURI:(id)externalURI;	// 0x31fa13c9
- (id)remindersMatchingPredicate:(id)predicate;	// 0x31f6552d
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x31f9f821
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x31f9f72d
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x31f742a9
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x31f74281
- (BOOL)removeInviteReplyNotification:(id)notification error:(id *)error;	// 0x31fa34cd
- (BOOL)removeInviteReplyNotifications:(id)notifications error:(id *)error;	// 0x31fa3509
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x31f79a69
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x31f79a49
- (BOOL)removeResourceChange:(id)change error:(id *)error;	// 0x31fa2f8d
- (BOOL)removeResourceChanges:(id)changes error:(id *)error;	// 0x31fa2fc9
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x31f9ec9d
- (void)requestAccessToEntityType:(unsigned)entityType completion:(id)completion;	// 0x31f9d455
- (void)reset;	// 0x31fa4bf5
- (id)resourceChangesForEntityTypes:(unsigned)entityTypes;	// 0x31fa2ca1
- (void)rollback;	// 0x31fa48f5
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x31f9f74d
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x31f9f70d
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x31f6cf3d
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x31f6cf15
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x31f75cb5
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x31f77125
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x31f9ebf5
- (int)sequenceNumber;	// 0x31f9d565
- (unsigned)serverPort;	// 0x31f57f89
// declared property setter: - (void)setCalendarQueue:(id)queue;	// 0x31fa6b55
// declared property setter: - (void)setDatabase:(id)database;	// 0x31fa6a89
// declared property setter: - (void)setDbChangedQueue:(id)queue;	// 0x31fa6bb5
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x31fa6889
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x31fa102d
// converted property setter: - (void)setDefaultCalendarForNewReminders:(id)newReminders;	// 0x31fa12b9
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x31fa6845
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x31fa6a09
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x31fa6ad5
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x31fa69e9
- (BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id *)error;	// 0x31fa026d
- (BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id *)error;	// 0x31fa0391
// declared property setter: - (void)setLastDatabaseNotificationTimestamp:(double)timestamp;	// 0x31fa6ab1
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x31fa6b35
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x31fa69c9
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x31fa69a9
// declared property setter: - (void)setRegisteredQueue:(id)queue;	// 0x31fa6b75
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x31f5bc95
// declared property setter: - (void)setUnsavedChangesQueue:(id)queue;	// 0x31fa6b95
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x31fa6a29
// declared property setter: - (void)set_cachedValidatedEmails:(id)emails;	// 0x31fa6bd5
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x31fa6af5
// declared property setter: - (void)set_defaultCalendarForNewEvents:(id)newEvents;	// 0x31fa6a49
// declared property setter: - (void)set_defaultCalendarForNewReminders:(id)newReminders;	// 0x31fa6a69
// declared property setter: - (void)set_sources:(id)sources;	// 0x31fa6b15
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;	// 0x31fa2b15
- (id)sourceWithIdentifier:(id)identifier;	// 0x31f63019
// converted property getter: - (id)sources;	// 0x31f5945d
// declared property getter: - (id)timeZone;	// 0x31f57f09
- (int)unacknowledgedEventCount;	// 0x31fa29bd
// declared property getter: - (id)unsavedChangesQueue;	// 0x31fa6b85
// declared property getter: - (id)updatedObjects;	// 0x31fa6a19
@end

