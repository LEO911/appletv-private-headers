/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

#import "QuartzCore-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, NSSet;

@interface CAWindowServerDisplay : NSObject {
	void *_impl;	// 4 = 0x4
}
@property(copy) NSString *TVMode;	// G=0x365d92cd; S=0x365d9259; 
@property(copy) NSString *TVSignalType;	// G=0x365d93b1; S=0x365d9309; 
@property(assign) BOOL allowsVirtualModes;	// G=0x365d91a1; S=0x365d91c1; 
@property(assign, getter=isBlanked) BOOL blanked;	// G=0x365d8d9d; S=0x365d8d7d; 
@property(readonly, assign) CGRect bounds;	// G=0x365d7c39; 
@property(readonly, assign) CAWindowServerDisplay *cloneMaster;	// G=0x365d8d5d; 
@property(readonly, assign) NSSet *clones;	// G=0x365d85d9; 
@property(copy, nonatomic) NSString *colorMode;	// G=0x365d90b5; S=0x365d9111; 
@property(assign) float contrast;	// G=0x365d8f89; S=0x365d8f69; 
@property(readonly, assign) NSString *deviceName;	// G=0x365d7d01; 
@property(readonly, assign) unsigned displayId;	// G=0x365d7d1d; 
@property(assign) float idealRefreshRate;	// G=0x365d9051; S=0x365d9031; 
@property(assign) BOOL invertsColors;	// G=0x365d8f41; S=0x365d8f21; 
@property(assign) float maximumRefreshRate;	// G=0x365d900d; S=0x365d8fed; 
@property(assign) float minimumRefreshRate;	// G=0x365d8fc9; S=0x365d8fa9; 
@property(assign, getter=isMirroringEnabled) BOOL mirroringEnabled;	// G=0x365d91fd; S=0x365d91e1; 
@property(readonly, assign) NSString *name;	// G=0x365d7ce9; 
@property(copy) NSString *orientation;	// G=0x365d8e71; S=0x365d8dd5; 
@property(assign) float overscanAmount;	// G=0x365d8efd; S=0x365d8edd; 
@property(readonly, assign) unsigned rendererFlags;	// G=0x365d7d39; 
@property(assign) int tag;	// G=0x365d923d; S=0x365d9221; 
@property(assign) BOOL usesPreferredModeRefreshRate;	// G=0x365d9095; S=0x365d9075; 
// declared property getter: - (id)TVMode;	// 0x365d92cd
// declared property getter: - (id)TVSignalType;	// 0x365d93b1
- (id)_initWithCADisplayServer:(Server *)cadisplayServer;	// 0x365d7b71
- (void)addClone:(id)clone;	// 0x365d8a85
- (void)addClone:(id)clone options:(id)options;	// 0x365d8839
// declared property getter: - (BOOL)allowsVirtualModes;	// 0x365d91a1
// declared property getter: - (CGRect)bounds;	// 0x365d7c39
- (unsigned)clientPortAtPosition:(CGPoint)position;	// 0x3650ef61
- (unsigned)clientPortOfContextId:(unsigned)contextId;	// 0x365d7e19
// declared property getter: - (id)cloneMaster;	// 0x365d8d5d
// declared property getter: - (id)clones;	// 0x365d85d9
// declared property getter: - (id)colorMode;	// 0x365d90b5
- (unsigned)contextIdAtPosition:(CGPoint)position;	// 0x36508e0d
- (unsigned)contextIdHostingContextId:(unsigned)anId;	// 0x365d7e49
- (id)contextIdsWithClientPort:(unsigned)clientPort;	// 0x365d7d61
// declared property getter: - (float)contrast;	// 0x365d8f89
- (CGPoint)convertPoint:(CGPoint)point fromContextId:(unsigned)contextId;	// 0x365d84d1
- (CGPoint)convertPoint:(CGPoint)point toContextId:(unsigned)contextId;	// 0x3650ef99
- (void)dealloc;	// 0x365d7be9
- (id)description;	// 0x365d9411
// declared property getter: - (id)deviceName;	// 0x365d7d01
// declared property getter: - (unsigned)displayId;	// 0x365d7d1d
- (CGRect)frameOfContextId:(unsigned)contextId;	// 0x365d7e89
// declared property getter: - (float)idealRefreshRate;	// 0x365d9051
- (void)invalidate;	// 0x365d7bb5
// declared property getter: - (BOOL)invertsColors;	// 0x365d8f41
// declared property getter: - (BOOL)isBlanked;	// 0x365d8d9d
// declared property getter: - (BOOL)isMirroringEnabled;	// 0x365d91fd
// declared property getter: - (float)maximumRefreshRate;	// 0x365d900d
// declared property getter: - (float)minimumRefreshRate;	// 0x365d8fc9
// declared property getter: - (id)name;	// 0x365d7ce9
// declared property getter: - (id)orientation;	// 0x365d8e71
// declared property getter: - (float)overscanAmount;	// 0x365d8efd
- (void)removeAllClones;	// 0x365d8bb9
- (void)removeClone:(id)clone;	// 0x365d8a99
// declared property getter: - (unsigned)rendererFlags;	// 0x365d7d39
// declared property setter: - (void)setAllowsVirtualModes:(BOOL)modes;	// 0x365d91c1
// declared property setter: - (void)setBlanked:(BOOL)blanked;	// 0x365d8d7d
// declared property setter: - (void)setColorMode:(id)mode;	// 0x365d9111
// declared property setter: - (void)setContrast:(float)contrast;	// 0x365d8f69
// declared property setter: - (void)setIdealRefreshRate:(float)rate;	// 0x365d9031
// declared property setter: - (void)setInvertsColors:(BOOL)colors;	// 0x365d8f21
// declared property setter: - (void)setMaximumRefreshRate:(float)rate;	// 0x365d8fed
// declared property setter: - (void)setMinimumRefreshRate:(float)rate;	// 0x365d8fa9
// declared property setter: - (void)setMirroringEnabled:(BOOL)enabled;	// 0x365d91e1
// declared property setter: - (void)setOrientation:(id)orientation;	// 0x365d8dd5
// declared property setter: - (void)setOverscanAmount:(float)amount;	// 0x365d8edd
// declared property setter: - (void)setTVMode:(id)mode;	// 0x365d9259
// declared property setter: - (void)setTVSignalType:(id)type;	// 0x365d9309
// declared property setter: - (void)setTag:(int)tag;	// 0x365d9221
// declared property setter: - (void)setUsesPreferredModeRefreshRate:(BOOL)rate;	// 0x365d9075
// declared property getter: - (int)tag;	// 0x365d923d
// declared property getter: - (BOOL)usesPreferredModeRefreshRate;	// 0x365d9095
- (void)willUnblank;	// 0x365d8dbd
@end

