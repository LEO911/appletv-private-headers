/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GEOResourceManifestServerProxyDelegate.h"
#import <NSObject.h> // Unknown library
#import "GeoServices-Structs.h"

@class NSMutableArray, NSLock, NSDictionary, GEOActiveTileGroup, NSHashTable;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;	// 4 = 0x4
	NSHashTable *_serverProxyObservers;	// 8 = 0x8
	NSMutableArray *_pendingRegionalResourceLoads;	// 12 = 0xc
	GEOActiveTileGroup *_activeTileGroup;	// 16 = 0x10
	NSLock *_activeTileGroupLock;	// 20 = 0x14
	NSDictionary *_resourceNamesToPaths;	// 24 = 0x18
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup *activeTileGroup;	// G=0x3455d369; 
@property(assign) unsigned activeTileGroupIdentifier;	// G=0x3455ec31; S=0x3455ec59; converted property
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;	// G=0x3455d649; 
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// G=0x3455ed01; @synthesize=_serverProxy
+ (void)disableServerConnection;	// 0x3455cf19
+ (void)setCallerWillStartServer;	// 0x3455cf4d
+ (void)setHiDPI:(BOOL)dpi;	// 0x3455cf49
+ (id)sharedManager;	// 0x3455cf5d
+ (void)useLocalProxy;	// 0x3455cf39
+ (void)useRemoteProxy;	// 0x3455cf29
- (id)init;	// 0x3455cfc9
- (id)_activeTileSetForKey:(const GEOTileKey *)key;	// 0x3455d665
- (void)_buildResourceNamesToPaths;	// 0x3455db95
- (id)_listenerForTileKeys:(id)tileKeys;	// 0x3455e055
- (void)_localeChanged:(id)changed;	// 0x3455d505
// declared property getter: - (id)activeTileGroup;	// 0x3455d369
// converted property getter: - (unsigned)activeTileGroupIdentifier;	// 0x3455ec31
- (void)addServerProxyObserver:(id)observer;	// 0x3455d52d
- (id)allResourceNames;	// 0x3455d7fd
- (id)authToken;	// 0x3455d3d5
- (id)baseURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d691
- (void)cancelRegionalResourcesRequest:(id)request;	// 0x3455e2d5
- (void)closeServerConnection;	// 0x3455d4e5
- (void)dealloc;	// 0x3455d245
- (id)detailedDescription;	// 0x3455ea9d
- (void)forceUpdate;	// 0x3455ece1
- (void)getResourceManifestWithHandler:(id)handler;	// 0x3455ec11
// declared property getter: - (BOOL)hasActiveTileGroup;	// 0x3455d649
- (BOOL)hasResourceManifest;	// 0x3455ebd5
- (BOOL)isAvailableForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d76d
- (id)languageForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d799
- (void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;	// 0x3455e151
- (void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;	// 0x3455e129
- (id)localizationURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d6e9
- (int)mapMatchingTileSetStyle;	// 0x3455d5c1
- (unsigned)mapMatchingZoomLevel;	// 0x3455d5c5
- (id)multiTileURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d6bd
- (void)openServerConnection;	// 0x3455d3f5
- (id)pathForResourceWithName:(id)name;	// 0x3455de75
- (void)refreshActiveTileGroup;	// 0x3455ecc1
- (void)removeServerProxyObserver:(id)observer;	// 0x3455d5a1
- (void)resetActiveTileGroup;	// 0x3455eca1
// declared property getter: - (id)serverProxy;	// 0x3455ed01
- (oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;	// 0x3455e319
- (oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;	// 0x3455e931
- (oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;	// 0x3455e79d
- (oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;	// 0x3455e621
// converted property setter: - (void)setActiveTileGroupIdentifier:(unsigned)identifier;	// 0x3455ec59
- (BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;	// 0x3455d7c5
- (double)timeToLiveForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d741
- (unsigned)versionForTileKey:(const GEOTileKey *)tileKey;	// 0x3455d715
@end

