/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import <NSObject.h> // Unknown library


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x372b8f6d; S=0x372d0ff1; converted property
@property(assign) id delegate;	// G=0x372d1fa5; S=0x372b88e1; converted property
@property(assign) BOOL muted;	// G=0x372d1199; S=0x372d1295; converted property
@property(retain) id outputQTESFilePath;	// G=0x372bd7a5; S=0x372d1471; converted property
@property(retain) id queue;	// G=0x372d0325; S=0x372b64ed; converted property
@property(retain) id queueFeeder;	// G=0x372d0ae9; S=0x372c10c9; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x372d14f5; S=0x372b8a91; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x372cfce1; S=0x372cfcf9; converted property
@property(retain) id vibrationPattern;	// G=0x372cfdd1; S=0x372cfd51; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x372d13ad; S=0x372d13c1; converted property
@property(assign) float volume;	// G=0x372b883d; S=0x372c14e5; converted property
+ (id)avController;	// 0x372cffc9
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x372d0005
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x372cfe11
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x372d0049
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x372c0119
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x372cff75
+ (BOOL)isSupportedMimeType:(id)type;	// 0x372cff21
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x372c15b5
- (id)init;	// 0x372b5db5
- (id)initForStreaming;	// 0x372d0191
- (id)initWithError:(id *)error;	// 0x372b62ed
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x372b5dc9
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x372b5e01
- (id)_figPlayerNotifications;	// 0x372d205d
- (BOOL)activate:(id *)activate;	// 0x372d0e69
- (id)addNextFeederItemToQueue;	// 0x372b92a5
- (void)applyDesiredRepeatMode;	// 0x372d1b49
- (id)attributeForKey:(id)key;	// 0x372b8031
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x372b6e39
- (BOOL)beginInterruption:(id *)interruption;	// 0x372d0d41
- (BOOL)beginRepeatGap;	// 0x372c1a71
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x372bae31
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x372bae59
- (BOOL)canBeginInterruption;	// 0x372d0df5
- (void)cancelAllCGImageRequests;	// 0x372d1935
- (void)cancelContinueAfterRepeatGap;	// 0x372bcdc5
- (void)checkQueueSpace;	// 0x372b9219
- (void)continueAfterRepeatGap;	// 0x372d0b15
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x372d0319
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x372bd641
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x372b905d
- (id)currentItem;	// 0x372b907d
- (void)currentItemHasChanged:(id)changed;	// 0x372bb759
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x372bb2c1
// converted property getter: - (double)currentTime;	// 0x372b8f6d
- (void)dealloc;	// 0x372c6ded
// converted property getter: - (id)delegate;	// 0x372d1fa5
- (void)dequeueDeadItem;	// 0x372d2a09
- (void)dequeueFirstItem;	// 0x372c04bd
- (void)endInterruptionWithStatus:(id)status;	// 0x372d0f55
- (void)ensurePlaybackQueueImmed;	// 0x372d28cd
- (int)eqPreset;	// 0x372d1399
- (id)errorWithDescription:(id)description code:(long)code;	// 0x372d0ca5
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x372d0901
- (void)feederRangeWasInserted:(id)inserted;	// 0x372d0339
- (void)feederRangeWasRemoved:(id)removed;	// 0x372d0641
- (void)figPlayerNotificationHandler:(id)handler;	// 0x372d2a31
- (void)fmpEffectiveVolumeDidChange;	// 0x372d19fd
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x372bbc19
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x372c68ed
- (BOOL)havePlayedCurrentItem;	// 0x372d0b01
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x372c01f5
- (BOOL)isCurrentItemReady;	// 0x372d287d
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x372d0315
- (BOOL)isValid;	// 0x372d1ffd
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x372c1989
- (id)lkLayer;	// 0x372d14dd
- (void)logPerformanceDataForCurrentItem;	// 0x372d2315
- (void)makeCurrentItemReady;	// 0x372bce01
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x372c1085
// converted property getter: - (BOOL)muted;	// 0x372d1199
- (BOOL)okToNotifyFromThisThread;	// 0x372bb629
// converted property getter: - (id)outputQTESFilePath;	// 0x372bd7a5
- (void)pause;	// 0x372c01e1
- (BOOL)play:(id *)play;	// 0x372d0b6d
- (BOOL)playNextItem:(id *)item;	// 0x372c0415
- (AVControllerPrivate *)privateStorage;	// 0x372d0305
// converted property getter: - (id)queue;	// 0x372d0325
// converted property getter: - (id)queueFeeder;	// 0x372d0ae9
- (float)rate;	// 0x372bb8dd
- (void)rateDidChangeToRate:(float)rate;	// 0x372befd9
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x372d2711
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x372c0d25
- (int)repeatMode;	// 0x372c10b5
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x372d1691
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x372d166d
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x372d0b8d
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x372d1fb9
- (void)scheduleQueueSpaceCheck;	// 0x372bcb59
- (void)scheduleUpdateTimeMarkerObservations;	// 0x372bb97d
- (void)seekToDate:(id)date;	// 0x372d1061
- (void)setAVItemClass:(Class)aClass;	// 0x372d0135
- (void)setApplyVideoTrackMatrix;	// 0x372d150d
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x372b7159
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x372d0ff1
- (void)setCurrentTime:(double)time options:(int)options;	// 0x372c11c5
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x372b88e1
- (void)setEQPreset:(int)preset;	// 0x372b8969
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x372c025d
- (void)setLayer:(id)layer;	// 0x372b8b91
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x372d1295
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x372d1471
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x372d2931
// converted property setter: - (void)setQueue:(id)queue;	// 0x372b64ed
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x372c10c9
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x372b8cb1
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x372bcc35
- (BOOL)setRepeatMode:(int)mode;	// 0x372b8c3d
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x372b8a91
- (void)setSubtitleRecipient:(id)recipient;	// 0x372b8a15
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x372cfcf9
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x372cfd51
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x372d13c1
// converted property setter: - (void)setVolume:(float)volume;	// 0x372c14e5
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x372be205
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x372d14f5
- (void)stepByCount:(int)count;	// 0x372d10fd
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x372c0ba1
- (long)updateActionAtEnd;	// 0x372b8aa9
- (void)updateTimeMarkerObservations;	// 0x372be421
// converted property getter: - (BOOL)vibrationEnabled;	// 0x372cfce1
// converted property getter: - (id)vibrationPattern;	// 0x372cfdd1
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x372d13ad
// converted property getter: - (float)volume;	// 0x372b883d
@end

