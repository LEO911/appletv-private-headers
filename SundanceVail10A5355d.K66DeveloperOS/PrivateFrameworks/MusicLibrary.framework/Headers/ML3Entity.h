/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import <NSObject.h> // Unknown library
#import "MusicLibrary-Structs.h"

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x354634e9; 
@property(assign) __weak ML3MusicLibrary *library;	// G=0x354503cd; S=0x35465ee5; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x3545530d; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x35465391
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x35450c3d
+ (id)allProperties;	// 0x35465be9
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x35447799
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x35465be5
+ (id)defaultOrderingProperties;	// 0x354648c9
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x354655b1
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x3547a989
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x35447b95
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x35465d91
+ (void)enumeratePersistentIDsInLibrary:(id)library matchingPredicate:(id)predicate orderingTerms:(id)terms persistentIDs:(const long long *)ids count:(unsigned)count usingBlock:(id)block;	// 0x354637e1
+ (id)extraTablesToDelete;	// 0x35465bdd
+ (id)extraTablesToInsert;	// 0x354551e9
+ (id)foreignColumnForProperty:(id)property;	// 0x354648d5
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x354648d1
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x3545113d
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type revisionType:(int)type4;	// 0x354627f5
+ (id)indexableSQLForProperties:(id)properties;	// 0x35465bed
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x35454e0d
+ (BOOL)insertionChangesLibraryContents;	// 0x354551f1
+ (id)joinClausesForProperty:(id)property;	// 0x35464689
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x35465389
+ (BOOL)libraryDynamicChangeForProperty:(id)property;	// 0x3546538d
+ (id)newSelectSQLForProperties:(const id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x354640c9
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x354529d9
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x35464775
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x3545008d
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x3544f869
+ (id)persistentIDColumnForTable:(id)table;	// 0x35465be1
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x3544e611
+ (id)predisambiguatedProperties;	// 0x35447ca5
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x35451689
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x35450471
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x3544e91d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms;	// 0x3547aa61
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms propertyToCount:(id)count;	// 0x3547aaf1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms usingSections:(BOOL)sections;	// 0x3547ab91
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x3547a8d9
+ (id)replacerWithProperties:(id)properties databaseConnection:(id)connection;	// 0x354a0499
+ (int)revisionTrackingCode;	// 0x35465d89
+ (id)sectionPropertyForProperty:(id)property;	// 0x354648cd
+ (id)subselectPropertyForProperty:(id)property;	// 0x354640c5
+ (id)subselectStatementForProperty:(id)property;	// 0x35447ed1
+ (id)unsettableProperties;	// 0x35454de5
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x35453565
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x354500e1
- (void).cxx_destruct;	// 0x35465ef9
- (id)copyInLibrary:(id)library;	// 0x3546314d
- (id)copyWithZone:(NSZone *)zone;	// 0x35463331
- (BOOL)deleteFromLibrary;	// 0x35465b7d
- (id)description;	// 0x3546346d
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x354562ed
// declared property getter: - (BOOL)existsInLibrary;	// 0x354634e9
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x354501f1
- (unsigned)hash;	// 0x3546345d
- (void)incrementRevision;	// 0x35465e85
- (BOOL)isEqual:(id)equal;	// 0x354633a5
// declared property getter: - (id)library;	// 0x354503cd
- (BOOL)matchesPredicate:(id)predicate;	// 0x35463e5d
// declared property getter: - (long long)persistentID;	// 0x3545530d
// declared property setter: - (void)setLibrary:(id)library;	// 0x35465ee5
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x354556f5
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x3545573d
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x35456149
- (id)valueForProperty:(id)property;	// 0x35451641
@end

