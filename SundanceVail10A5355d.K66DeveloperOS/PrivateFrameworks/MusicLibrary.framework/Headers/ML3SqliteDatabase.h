/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3SqliteDatabaseContext, NSString;
@protocol OS_dispatch_queue;

@interface ML3SqliteDatabase : NSObject {
	NSString *_identifier;	// 4 = 0x4
	ML3SqliteDatabaseContext *_mainDatabaseContext;	// 8 = 0x8
	ML3SqliteDatabaseContext *_backgroundDatabaseContext;	// 12 = 0xc
	NSObject<OS_dispatch_queue> *_backgroundQueue;	// 16 = 0x10
	NSString *_backgroundQueueIdentifier;	// 20 = 0x14
	NSString *_path;	// 24 = 0x18
	BOOL _enableWrites;	// 28 = 0x1c
}
@property(readonly, assign, nonatomic) NSString *path;	// G=0x35491819; @synthesize=_path
+ (id)allSchemaSQL;	// 0x35490c81
+ (BOOL)attachAuxiliaryDatabases:(sqlite3 *)databases;	// 0x354497cd
+ (BOOL)buildDatabaseTablesUsingHandle:(sqlite3 *)handle usingTransaction:(BOOL)transaction;	// 0x35490d25
+ (void)closeDatabaseHandle:(sqlite3 *)handle;	// 0x3548fcfd
+ (int)currentUserVersion;	// 0x35490d21
+ (id)databasePath;	// 0x3548fbd5
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x354908b9
+ (void)limitCacheSize:(sqlite3 *)size;	// 0x354497d1
+ (BOOL)migrateFromVersion:(int)version outUserVersion:(int *)version2 usingHandle:(sqlite3 *)handle;	// 0x35491339
+ (BOOL)migrateToCurrentUserVersionUsingHandle:(sqlite3 *)currentUserVersionUsingHandle;	// 0x3549133d
+ (BOOL)orderingLanguageMatchesSystemUsingHandle:(sqlite3 *)handle;	// 0x3549115d
+ (void)registerCustomCallbacksOnHandle:(sqlite3 *)handle;	// 0x354497d5
+ (void)registerFunctionsOnHandle:(sqlite3 *)handle;	// 0x354497e5
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x3548ff55
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x35451d39
+ (void)stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x35451d61
+ (id)systemCurrentLanguage;	// 0x35490c85
+ (BOOL)userVersionMatchesSystemUsingHandle:(sqlite3 *)handle;	// 0x354498c5
+ (int)userVersionUsingHandle:(sqlite3 *)handle;	// 0x3544993d
- (id)initWithIdentifier:(id)identifier path:(id)path backgroundQueue:(id)queue enableWrites:(BOOL)writes;	// 0x3548f905
- (void).cxx_destruct;	// 0x3549182d
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x35490031
- (void)_debugLoggingOptionsDidChangeNotification:(id)_debugLoggingOptions;	// 0x3548fc59
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x354901f9
- (id)_onBackgroundQueueDatabaseContext;	// 0x3548ff81
- (id)_onMainQueueDatabaseContext;	// 0x3548ffc1
- (BOOL)_openDatabaseWithOpenHandler:(id)openHandler;	// 0x3544960d
- (void)accessDatabaseContextUsingBlock:(id)block;	// 0x3544948d
- (void)accessDatabaseUsingBlock:(id)block;	// 0x3544942d
- (BOOL)buildDatabaseTables;	// 0x35490f0d
- (BOOL)canWriteToDatabase;	// 0x3548fcad
- (BOOL)coerceValidDatabase;	// 0x35491509
- (void)dealloc;	// 0x3548fbd9
- (BOOL)deleteAndRecreateDatabaseUsingHandle:(sqlite3 **)handle;	// 0x35491455
- (id)description;	// 0x3548fb4d
- (void)didCommitInDatabaseContext:(id)databaseContext;	// 0x354909b9
- (void)didRollbackInDatabaseContext:(id)databaseContext;	// 0x354909cd
- (BOOL)executeSQL:(id)sql;	// 0x3548fdd5
- (id)newDatabaseContext;	// 0x3544949d
- (BOOL)openDatabaseHandle:(sqlite3 **)handle;	// 0x354494f1
- (sqlite3 *)openedDatabaseHandle;	// 0x3548fcd9
// declared property getter: - (id)path;	// 0x35491819
- (void)performOperationInBackground:(id)background;	// 0x3549092d
- (void)performTransactionWithBlock:(id)block;	// 0x354909e1
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x35451c4d
- (void)reconnectBackgroundDatabaseContext;	// 0x35490019
- (void)reconnectMainDatabaseContext;	// 0x35490001
- (void)reconnectToDatabase;	// 0x35490655
- (BOOL)requiresPostProcessing;	// 0x35449315
@end

