/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication
 */

#import </libobjc.A.h>
#import "Symbolication-Structs.h"

@class NSConditionLock, NSMutableArray, NSString, VMUTaskMemoryCache, VMUProcessDescription, NSMapTable;

@interface VMUSampler : __objc_empty_vtable {
	int _pid;	// 4 = 0x4
	unsigned _task;	// 8 = 0x8
	BOOL _needTaskPortDealloc;	// 12 = 0xc
	BOOL _recordThreadStates;	// 13 = 0xd
	BOOL _taskIs64Bit;	// 14 = 0xe
	NSString *_processName;	// 16 = 0x10
	VMUProcessDescription *_processDescription;	// 20 = 0x14
	CSTypeRef _symbolicator;	// 24 = 0x18
	VMUTaskMemoryCache *_memCache;	// 32 = 0x20
	sampling_context_t *_samplingContext;	// 36 = 0x24
	unsigned _mainThread;	// 40 = 0x28
	NSMapTable *_lastThreadBacktraceMap;	// 44 = 0x2c
	unsigned _numberOfCopiedBacktraces;	// 48 = 0x30
	unsigned *_previousThreadList;	// 52 = 0x34
	unsigned _previousThreadCount;	// 56 = 0x38
	unsigned _maxPreviousThreadCount;	// 60 = 0x3c
	double _tbRate;	// 64 = 0x40
	double _tbInterval;	// 72 = 0x48
	NSConditionLock *_stateLock;	// 80 = 0x50
	double _interval;	// 84 = 0x54
	double _timeLimit;	// 92 = 0x5c
	unsigned _sampleLimit;	// 100 = 0x64
	BOOL _sampling;	// 104 = 0x68
	unsigned _samplingThreadPort;	// 108 = 0x6c
	unsigned _numberOfSamples;	// 112 = 0x70
	NSMutableArray *_samples;	// 116 = 0x74
	BOOL _stacksFixed;	// 120 = 0x78
	void *_cfi;	// 124 = 0x7c
	id _delegate;	// 128 = 0x80
	double _timeSpentSamplingWithoutCFI;	// 132 = 0x84
	double _timeSpentSamplingWithCFI;	// 140 = 0x8c
	BOOL _shouldOutputSignature;	// 148 = 0x94
	BOOL _showDispatchQueueNames;	// 149 = 0x95
}
@property(assign) id delegate;	// G=0x34d7a551; S=0x34d7a541; converted property
@property(readonly, assign) unsigned mainThread;	// G=0x34d7a435; converted property
@property(readonly, assign) int pid;	// G=0x34d7a381; converted property
@property(assign) unsigned sampleLimit;	// G=0x34d7a329; S=0x34d7a319; converted property
@property(readonly, retain) NSMutableArray *samples;	// G=0x34d7a391; converted property
@property(assign) double samplingInterval;	// G=0x34d7a2c5; S=0x34d7a2a1; converted property
@property(assign) BOOL shouldOutputSignature;	// G=0x34d7a359; S=0x34d7a349; converted property
@property(readonly, assign) CSTypeRef symbolicator;	// G=0x34d7a369; converted property
@property(assign) double timeLimit;	// G=0x34d7a301; S=0x34d7a2dd; converted property
+ (void)initialize;	// 0x34d79795
+ (id)sampleAllThreadsOfPID:(int)pid;	// 0x34d79d91
+ (id)sampleAllThreadsOfPID:(int)pid withSymbolicator:(id)symbolicator;	// 0x34d79de5
+ (id)sampleAllThreadsOfTask:(unsigned)task;	// 0x34d79df5
+ (id)sampleAllThreadsOfTask:(unsigned)task symbolicate:(BOOL)symbolicate;	// 0x34d79e59
+ (id)sampleAllThreadsOfTask:(unsigned)task withSymbolicator:(id)symbolicator;	// 0x34d79e49
+ (id)sampleAllThreadsOfTask:(unsigned)task withSymbolicator:(id)symbolicator symbolicate:(BOOL)symbolicate;	// 0x34d79eb9
- (id)initWithPID:(int)pid;	// 0x34d78c81
- (id)initWithPID:(int)pid options:(unsigned)options;	// 0x34d78cc5
- (id)initWithPID:(int)pid orTask:(unsigned)task options:(unsigned)options;	// 0x34d78871
- (id)initWithTask:(unsigned)task;	// 0x34d78ca1
- (id)initWithTask:(unsigned)task options:(unsigned)options;	// 0x34d78ce5
- (void)_fixupStacks:(id)stacks;	// 0x34d7982d
- (void)_makeHighPriority;	// 0x34d78e79
- (void)_makeTimeshare;	// 0x34d78fa9
- (void)_runSamplingThread;	// 0x34d79a01
- (id)createOutput;	// 0x34d7a731
- (void)dealloc;	// 0x34d78d09
// converted property getter: - (id)delegate;	// 0x34d7a551
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)serialNumber;	// 0x34d7a519
- (id)dispatchQueueNameForSerialNumber:(unsigned long long)serialNumber returnedConcurrentFlag:(BOOL *)flag returnedThreadId:(unsigned long long *)anId;	// 0x34d7a4ad
- (void)finalize;	// 0x34d78e39
- (void)flushData;	// 0x34d7a3c9
- (void)forceStop;	// 0x34d7a629
- (void)initializeSamplingContext:(BOOL)context;	// 0x34d78fdd
// converted property getter: - (unsigned)mainThread;	// 0x34d7a435
// converted property getter: - (int)pid;	// 0x34d7a381
- (void)preloadSymbols;	// 0x34d7a561
- (unsigned)recordSampleTo:(id)to beginTime:(double)time endTime:(double)time3 thread:(unsigned)thread;	// 0x34d790a1
- (id)sampleAllThreadsOnce;	// 0x34d79ed1
- (unsigned)sampleCount;	// 0x34d7a3b9
- (void)sampleForDuration:(unsigned)duration interval:(unsigned)interval;	// 0x34d7a599
// converted property getter: - (unsigned)sampleLimit;	// 0x34d7a329
- (id)sampleThread:(unsigned)thread;	// 0x34d79f61
// converted property getter: - (id)samples;	// 0x34d7a391
// converted property getter: - (double)samplingInterval;	// 0x34d7a2c5
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x34d7a541
- (void)setRecordThreadStates:(BOOL)states;	// 0x34d7a339
// converted property setter: - (void)setSampleLimit:(unsigned)limit;	// 0x34d7a319
// converted property setter: - (void)setSamplingInterval:(double)interval;	// 0x34d7a2a1
// converted property setter: - (void)setShouldOutputSignature:(BOOL)outputSignature;	// 0x34d7a349
// converted property setter: - (void)setTimeLimit:(double)limit;	// 0x34d7a2dd
// converted property getter: - (BOOL)shouldOutputSignature;	// 0x34d7a359
- (BOOL)start;	// 0x34d7a051
- (BOOL)stop;	// 0x34d7a185
- (void)stopSampling;	// 0x34d7a619
- (id)stopSamplingAndReturnCallNode;	// 0x34d7a639
// converted property getter: - (CSTypeRef)symbolicator;	// 0x34d7a369
- (id)threadNameForThread:(unsigned)thread;	// 0x34d7a48d
- (id)threadNameForThread:(unsigned)thread returnedThreadId:(unsigned long long *)anId returnedDispatchQueueSerialNum:(unsigned long long *)num;	// 0x34d7a445
// converted property getter: - (double)timeLimit;	// 0x34d7a301
- (BOOL)waitUntilDone;	// 0x34d7a215
- (void)writeOutput:(id)output append:(BOOL)append;	// 0x34d7ac65
@end

