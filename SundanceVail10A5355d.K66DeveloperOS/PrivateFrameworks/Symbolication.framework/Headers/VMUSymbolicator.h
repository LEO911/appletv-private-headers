/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication
 */

#import </libobjc.A.h>
#import "Symbolication-Structs.h"

@class VMUMachTaskContainer, NSMutableArray, NSString, NSArray;

@interface VMUSymbolicator : __objc_empty_vtable {
	NSMutableArray *_symbolOwners;	// 4 = 0x4
	NSArray *_symbolOwnerAddressRanges;	// 8 = 0x8
	NSString *_path;	// 12 = 0xc
	VMUMachTaskContainer *_machTaskContainer;	// 16 = 0x10
	BOOL _isProtected;	// 20 = 0x14
}
@property(readonly, assign) BOOL isProtected;	// G=0x34d6ca19; converted property
@property(readonly, retain) NSString *path;	// G=0x34d6c779; converted property
@property(readonly, retain) NSMutableArray *symbolOwners;	// G=0x34d6c381; converted property
+ (id)convertHeaderToSymbolOwner:(id)symbolOwner allowLazySymbolOwners:(BOOL)owners;	// 0x34d6cdc5
+ (void)ignoreFunctionSymbols:(BOOL)symbols;	// 0x34d6d6c5
+ (BOOL)isIgnoreFunctionSymbols;	// 0x34d6d6d5
+ (id)symbolicatorForMachTaskContainer:(id)machTaskContainer;	// 0x34d69f3d
+ (id)symbolicatorForPath:(id)path architecture:(id)architecture;	// 0x34d69ded
+ (id)symbolicatorForPid:(int)pid;	// 0x34d69f01
+ (id)symbolicatorForSignature:(id)signature;	// 0x34d69fb1
+ (id)symbolicatorForSignature:(id)signature dsymSearchPaths:(id)paths useMds:(BOOL)mds;	// 0x34d6d249
+ (id)symbolicatorForTask:(unsigned)task;	// 0x34d69ec5
+ (id)symbolicatorWithHeaders:(id)headers allowLazySymbolOwners:(BOOL)owners path:(id)path machTaskContainer:(id)container;	// 0x34d6ce71
+ (id)symbolicatorWithSymbolOwners:(id)symbolOwners path:(id)path machTaskContainer:(id)container;	// 0x34d6cfb9
+ (id)symbolicatorsForPath:(id)path;	// 0x34d69b45
- (id)initWithSymbolOwners:(id)symbolOwners path:(id)path machTaskContainer:(id)container;	// 0x34d6d001
- (BOOL)addSymbolRichFile:(id)file;	// 0x34d6a3d1
- (id)architecture;	// 0x34d6cb69
- (BOOL)containsAddress:(unsigned long long)address;	// 0x34d6aa5d
- (void)dealloc;	// 0x34d6cd1d
- (id)description;	// 0x34d6cc69
- (id)faultLazySymbolOwnerAtIndex:(int)index;	// 0x34d6a169
- (void)forceFullSymbolExtraction;	// 0x34d6ca29
// converted property getter: - (BOOL)isProtected;	// 0x34d6ca19
// converted property getter: - (id)path;	// 0x34d6c779
- (int)pid;	// 0x34d6c789
- (id)programTextForAddress:(unsigned long long)address;	// 0x34d6d589
- (id)programTextForAddressRange:(VMURange)addressRange;	// 0x34d6d5d5
- (id)regionForAddress:(unsigned long long)address;	// 0x34d6ac39
- (id)regions;	// 0x34d6aa79
- (id)regionsForName:(id)name;	// 0x34d6b009
- (id)regionsInAddressRange:(VMURange)addressRange;	// 0x34d6ad99
- (void)replaceSymbolOwner:(id)owner withSymbolOwner:(id)symbolOwner;	// 0x34d6a705
- (id)signature;	// 0x34d6c7a9
- (id)sourceInfoForAddress:(unsigned long long)address;	// 0x34d6b339
- (id)sourceInfos;	// 0x34d6c1d9
- (id)sourceInfosInAddressRange:(VMURange)addressRange;	// 0x34d6c591
- (id)symbolForAddress:(unsigned long long)address;	// 0x34d6b1d9
- (id)symbolOwnerForAddress:(unsigned long long)address;	// 0x34d6b499
- (id)symbolOwnerForName:(id)name;	// 0x34d6bc69
- (id)symbolOwnerForPath:(id)path;	// 0x34d6be7d
// converted property getter: - (id)symbolOwners;	// 0x34d6c381
- (id)symbolOwnersForName:(id)name;	// 0x34d6ba7d
- (id)symbolOwnersInAddressRange:(VMURange)addressRange;	// 0x34d6b4c1
- (id)symbolOwnersWithFlags:(unsigned)flags;	// 0x34d6bcb1
- (id)symbols;	// 0x34d6c031
- (id)symbolsForMangledName:(id)mangledName;	// 0x34d6b8d1
- (id)symbolsForName:(id)name;	// 0x34d6b725
- (id)symbolsInAddressRange:(VMURange)addressRange;	// 0x34d6c3a9
@end

