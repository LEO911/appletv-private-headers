/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import <NSObject.h> // Unknown library
#import "Notes-Structs.h"

@class NSNumber, NSManagedObjectModel, NSManagedObjectContext, NSPersistentStoreCoordinator, NSPredicate, CPExclusiveLock, NoteStoreObject, NoteAccountObject, NSMutableDictionary, NSString;

@interface NoteContext : NSObject {
	NSManagedObjectModel *_managedObjectModel;	// 4 = 0x4
	NSManagedObjectContext *_managedObjectContext;	// 8 = 0x8
	NSPersistentStoreCoordinator *_persistentStoreCoordinator;	// 12 = 0xc
@private
	NSPredicate *_searchPredicate;	// 16 = 0x10
	NoteStoreObject *_localStore;	// 20 = 0x14
@protected
	NoteAccountObject *_localAccount;	// 24 = 0x18
	CXIndexRef __SharedNoteStoreSearchIndex;	// 28 = 0x1c
	CPExclusiveLock *__SharedNoteStoreSearchIndexLock;	// 32 = 0x20
	int __SharedNoteStoreSearchIndexCount;	// 36 = 0x24
	BOOL _isIndexing;	// 40 = 0x28
	NSManagedObjectContext *_nextIdContext;	// 44 = 0x2c
	CPExclusiveLock *_nextIdLock;	// 48 = 0x30
	NSNumber *_nextId;	// 52 = 0x34
	CPExclusiveLock *_objectCreationLock;	// 56 = 0x38
	unsigned _notificationCount;	// 60 = 0x3c
	BOOL _logChanges;	// 64 = 0x40
	BOOL _indexInBatches;	// 65 = 0x41
	BOOL _hasPriorityInSaveConflicts;	// 66 = 0x42
	BOOL _inMigrator;	// 67 = 0x43
	NSString *_testingFilePrefix;	// 68 = 0x44
	NSString *_testingFilePath;	// 72 = 0x48
@private
	NSMutableDictionary *_notePropertyObjectsRealized;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL isIndexing;	// G=0x373ffe9d; @synthesize=_isIndexing
@property(readonly, retain) NoteAccountObject *localAccount;	// G=0x373f8181; converted property
@property(readonly, retain) NoteStoreObject *localStore;	// G=0x373f80e9; converted property
@property(readonly, assign, nonatomic) NSManagedObjectContext *managedObjectContext;	// G=0x373fae01; 
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x373fafa9; converted property
@property(readonly, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;	// G=0x373fb1c9; converted property
+ (BOOL)databaseIsCorrupt:(id)corrupt;	// 0x373f29f9
+ (BOOL)shouldLogIndexing;	// 0x373f2979
- (id)init;	// 0x373f4b69
- (id)initForMigrator;	// 0x373f47bd
- (id)initWithTestingFilePrefix:(id)testingFilePrefix;	// 0x373f4821
- (id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;	// 0x373f4891
- (id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;	// 0x373f4735
- (void).cxx_destruct;	// 0x373ffebd
- (void)_createLocalAccount:(id *)account andStore:(id *)store;	// 0x373f2cd9
- (id)_notePropertyObjectForKey:(id)key;	// 0x373f8a01
- (id)accountForAccountId:(id)accountId;	// 0x373f7cb5
- (id)allAccounts;	// 0x373f7955
- (id)allNotes;	// 0x373f6b7d
- (id)allNotesInCollection:(id)collection;	// 0x373f6c8d
- (id)allNotesMatchingPredicate:(id)predicate;	// 0x373f6d65
- (id)allNotesWithoutBodiesInCollection:(id)collection;	// 0x373f70d1
- (id)allStores;	// 0x373f7441
- (id)allVisibleNotes;	// 0x373f63cd
- (id)allVisibleNotesInCollection:(id)collection;	// 0x373f6415
- (id)allVisibleNotesMatchingPredicate:(id)predicate;	// 0x373f64ed
- (void)cleanUpLocks;	// 0x373ffbb9
- (void)clearCaches;	// 0x373f5295
- (id)collectionForInfo:(id)info;	// 0x373f7225
- (id)collectionForObjectID:(id)objectID;	// 0x373f54dd
- (id)copyNotesForSearch:(void *)search complete:(char *)complete;	// 0x373ff1dd
- (id)copyNotesForSearch:(void *)search predicate:(id)predicate complete:(char *)complete;	// 0x373ff215
- (unsigned)countOfNotes;	// 0x373f6c0d
- (unsigned)countOfNotesInCollection:(id)collection;	// 0x373f6cfd
- (unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;	// 0x373f6e1d
- (unsigned)countOfStores;	// 0x373f772d
- (unsigned)countOfVisibleNotes;	// 0x373f63f1
- (unsigned)countOfVisibleNotesInCollection:(id)collection;	// 0x373f6485
- (unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;	// 0x373f6679
- (void)dealloc;	// 0x373f4bc9
- (id)defaultStoreForNewNote;	// 0x373f7fad
- (BOOL)deleteAccount:(id)account;	// 0x373f8601
- (void)deleteChanges:(id)changes;	// 0x373f58bd
- (BOOL)deleteIndexFile;	// 0x373ffe21
- (void)deleteNote:(id)note;	// 0x373f560d
- (void)deleteNoteRegardlessOfConstraints:(id)constraints;	// 0x373f5869
- (BOOL)deleteStore:(id)store;	// 0x373f868d
- (void)destroySearchIndex;	// 0x373fc8c9
- (void)enableChangeLogging:(BOOL)logging;	// 0x373f5a15
- (id)findNotesWithText:(id)text betweenDate:(id)date andDate:(id)date3;	// 0x373ff589
- (BOOL)forceDeleteAccount:(id)account;	// 0x373f845d
- (void)forceSetUpUniqueObjects;	// 0x373f387d
- (id)getNextIdObject;	// 0x373f9d3d
- (void)handleMigration;	// 0x373f8f19
- (BOOL)handleSaveErrors:(id)errors;	// 0x373f5c61
- (BOOL)hasMultipleEnabledStores;	// 0x373f8931
- (void)indexInBatches:(BOOL)batches;	// 0x373fcdf1
- (void)indexNotes:(id)notes;	// 0x373fbad9
- (void)invalidate;	// 0x373f5a39
// declared property getter: - (BOOL)isIndexing;	// 0x373ffe9d
- (id)liveNotesNeedingBodiesPredicate;	// 0x373f4cd1
// converted property getter: - (id)localAccount;	// 0x373f8181
// converted property getter: - (id)localStore;	// 0x373f80e9
// declared property getter: - (id)managedObjectContext;	// 0x373fae01
// converted property getter: - (id)managedObjectModel;	// 0x373fafa9
- (id)newFRCForCollection:(id)collection delegate:(id)delegate;	// 0x373f4d55
- (id)newFetchRequestForNotes;	// 0x373f50f9
- (void *)newSearchContextWithText:(id)text;	// 0x373ff151
- (id)newlyAddedAccount;	// 0x373f7c41
- (id)newlyAddedNote;	// 0x373f537d
- (id)newlyAddedStore;	// 0x373f73cd
- (id)nextIndex;	// 0x373fa475
- (id)noteChangeWithType:(int)type store:(id)store;	// 0x373fdd09
- (id)noteForObjectID:(id)objectID;	// 0x373f6ec5
- (BOOL)noteIsSafeToAccess:(id)access;	// 0x373ffc2d
- (id)notesForIntegerIds:(id)integerIds;	// 0x373f6f5d
- (id)notesToResumeIndexing;	// 0x373fb9cd
- (id)pathForIndex;	// 0x373fab41
- (id)pathForPersistentStore;	// 0x373fa9d5
// converted property getter: - (id)persistentStoreCoordinator;	// 0x373fb1c9
- (id)propertyValueForKey:(id)key;	// 0x373f8eb1
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;	// 0x373fce15
- (void)removeConflictingSqliteAndIdxFiles;	// 0x373f4269
- (void)removeSqliteAndIdxFiles;	// 0x373f3fe9
- (void)resetNotificationCount;	// 0x373fcf41
- (void)resumeIndexing;	// 0x373fccb5
- (id)rootDirectory;	// 0x373fa9a1
- (BOOL)save:(id *)save;	// 0x373f5af9
- (void)saveNotesToResumeIndexing:(id)resumeIndexing;	// 0x373fb6fd
- (BOOL)saveOutsideApp:(id *)app;	// 0x373f5ad1
- (BOOL)saveSilently:(id *)silently;	// 0x373f6229
- (CXIndexRef)searchIndex:(char *)index;	// 0x373fc29d
- (void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;	// 0x373fad15
- (void)setPropertyValue:(id)value forKey:(id)key;	// 0x373f8d85
- (void)setUpCoreDataStack;	// 0x373f4399
- (BOOL)setUpLastIndexTid;	// 0x373f3389
- (BOOL)setUpLocalAccountAndStore;	// 0x373f2e51
- (void)setUpUniqueObjects;	// 0x373f39c9
- (BOOL)shouldDisableLocalStore;	// 0x373f8885
- (BOOL)shouldResumeIndexing;	// 0x373fb951
- (void)sortNotes:(id)notes;	// 0x373f52c1
- (id)storeForObjectID:(id)objectID;	// 0x373f5575
- (id)storeOptions;	// 0x373f2b8d
- (void)tearDownCoreDataStack;	// 0x373f461d
- (void)trackChanges:(id)changes;	// 0x373fdeed
- (void)updateSearchIndex:(id)index;	// 0x373fcf65
- (id)urlForPersistentStore;	// 0x373facad
- (id)visibleNoteForObjectID:(id)objectID;	// 0x373f67f5
- (id)visibleNotesForIntegerIds:(id)integerIds;	// 0x373f6961
- (id)visibleNotesPredicate;	// 0x373f4c19
- (void)wrapUpIndexing;	// 0x373fc9b9
@end

