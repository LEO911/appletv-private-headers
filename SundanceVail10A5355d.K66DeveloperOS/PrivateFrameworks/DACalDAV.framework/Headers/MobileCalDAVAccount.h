/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSSet, NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, MobileCalDAVPrincipal, NSDate, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x34020ab1; S=0x34020ae5; 
@property(readonly, assign) NSSet *calendars;	// G=0x34021281; 
@property(retain) NSURL *collectionSetURL;	// G=0x34020f99; S=0x34020fdd; 
@property(retain) id host;	// G=0x34025825; S=0x3402589d; converted property
@property(assign) BOOL isRefreshing;	// G=0x34025c1d; S=0x34025c35; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x3402106d; S=0x340210d9; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x34025ca1; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x34025cc9; S=0x34025cdd; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x34025cb5; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x34025c71; S=0x34025c89; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x34021c75; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x34021c3d; 
@property(assign) int overriddenPort;	// G=0x34020c05; S=0x34020ba5; 
@property(retain) NSString *overriddenScheme;	// G=0x34020c99; S=0x34020c39; 
@property(retain) NSString *overriddenServer;	// G=0x34020b89; S=0x34020b29; 
@property(assign) int port;	// G=0x34025b2d; S=0x34025aa5; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x34025d01; S=0x34025d15; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x34025d2d; S=0x34025d41; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x34020cb5; S=0x34020cd5; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x34025ced; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x34025c4d; S=0x34025c61; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x34025965; S=0x340259dd; converted property
@property(retain) id searchPropertySet;	// G=0x34021019; S=0x34021029; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x34025d59; S=0x34025d71; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x34021a59; S=0x34021ad1; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x34021cad; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x34021d45; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x34021cf9; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x34020a91; S=0x340209f5; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x34021e71; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x34021dad; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x34021ec5; converted property
@property(assign) BOOL useSSL;	// G=0x34025be9; S=0x34025bb9; converted property
@property(retain) id username;	// G=0x340256f1; S=0x34025759; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x34021c21; 
@property(assign) BOOL wasMigrated;	// G=0x3402111d; S=0x34021165; 
+ (Class)accountClass;	// 0x3401fc71
+ (Class)clientClass;	// 0x3401fc8d
+ (id)defaultProperties;	// 0x3401f3d5
+ (id)supportedDataclasses;	// 0x3401fca9
- (id)init;	// 0x3401f519
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x3401f391
- (id)initWithProperties:(id)properties;	// 0x3401f34d
- (id)_calendarConstraintsPath;	// 0x34022019
- (id)_calendarConstraintsResource;	// 0x34021f15
- (void)_clearOrphanedCalendarItemChangesOfType:(int)type withContext:(id)context goodCalendarIds:(id)ids;	// 0x340227f1
- (void)_clearOrphanedChangesWithChangesCall:(/*function-pointer*/ void *)changesCall clearChanges:(/*function-pointer*/ void *)changes withContext:(id)context;	// 0x34022a59
- (void)_clearOrphanedChangesWithContext:(id)context;	// 0x34022ca5
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x34023635
- (void)_collectMoveActions;	// 0x34023b49
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x34020495
- (id)_oldURLsForKeychain;	// 0x3402023d
- (id)_powerAssertionContext;	// 0x3402514d
- (id)_powerAssertionGroupIdentifier;	// 0x34025151
- (void)_setSpinning:(BOOL)spinning;	// 0x340226b5
- (void)_updateCalendarStore:(BOOL)store;	// 0x340224e5
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x340223e1
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x340220e5
- (void)_upgradeAccountToTelluride;	// 0x3401fd41
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x340204a1
- (BOOL)accountNeedsUpgrade;	// 0x340208f9
- (void)addCalendar:(id)calendar;	// 0x340211bd
- (void)addPrincipal:(id)principal;	// 0x340219c5
// declared property getter: - (int)calDAVAccountVersion;	// 0x34020ab1
// declared property getter: - (id)calendars;	// 0x34021281
- (void)cancelAllSearchQueries;	// 0x34024a01
- (void)cancelRefresh;	// 0x34022719
- (void)cancelSearchQuery:(id)query;	// 0x3402489d
- (void)checkValidityWithConsumer:(id)consumer;	// 0x34024f05
// declared property getter: - (id)collectionSetURL;	// 0x34020f99
- (void)configureAccount;	// 0x3401ee95
- (void *)copyCalStore;	// 0x34022091
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x34025665
- (int)coreDAVLogLevel;	// 0x34025645
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x340256cd
- (int)coreDAVOutputLevel;	// 0x3402565d
- (void)coreDAVTransmittedDataFinished;	// 0x340256ed
- (void)dealloc;	// 0x3401f559
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x34024b61
- (void)dropPowerAssertions;	// 0x3402526d
// converted property getter: - (id)host;	// 0x34025825
- (BOOL)isCalDAVAccount;	// 0x3402530d
- (BOOL)isEqualToAccount:(id)account;	// 0x34025311
// declared property getter: - (BOOL)isRefreshing;	// 0x34025c1d
// declared property getter: - (BOOL)isWritable;	// 0x3402106d
- (BOOL)isYahoo;	// 0x34025c19
// declared property getter: - (id)itemIDsToMoveActions;	// 0x34025ca1
- (id)localizedIdenticalAccountFailureMessage;	// 0x3402551d
- (id)localizedInvalidPasswordMessage;	// 0x34025595
// declared property getter: - (id)mainPrincipal;	// 0x34025cc9
// declared property getter: - (id)movedItemURLStrings;	// 0x34025cb5
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x34025c71
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x34021c75
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x34021c3d
// declared property getter: - (int)overriddenPort;	// 0x34020c05
// declared property getter: - (id)overriddenScheme;	// 0x34020c99
// declared property getter: - (id)overriddenServer;	// 0x34020b89
- (void)performSearchQuery:(id)query;	// 0x34024511
// converted property getter: - (int)port;	// 0x34025b2d
// declared property getter: - (int)preferredEventDaysToSync;	// 0x34025d01
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x34025d2d
- (void)prepareForAccountSave;	// 0x3401f7ad
// converted property getter: - (id)principalURL;	// 0x34020cb5
// declared property getter: - (id)principals;	// 0x34025ced
- (id)properties;	// 0x3401fc31
- (void)reattainPowerAssertions;	// 0x340252bd
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x34022ea9
// declared property getter: - (id)refreshContext;	// 0x34025c4d
- (void)refreshWithContext:(id)context;	// 0x34023e21
- (void)releasePowerAssertion;	// 0x340251c5
- (void)reloadCalendars;	// 0x340218f5
- (void)removeCalendar:(id)calendar;	// 0x34021215
- (void)removePrincipal:(id)principal;	// 0x34021a1d
- (void)retainPowerAssertion;	// 0x34025161
// converted property getter: - (id)scheme;	// 0x34025965
// declared property getter: - (id)searchPropertySet;	// 0x34021019
- (BOOL)searchQueriesRunning;	// 0x34024b31
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x34025d59
- (id)serverBaseURL;	// 0x34020eb1
// declared property getter: - (id)serverVersion;	// 0x34021a59
- (void)setAccountDescription:(id)description;	// 0x34020f55
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x34020ae5
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x34020fdd
// converted property setter: - (void)setHost:(id)host;	// 0x3402589d
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x34025c35
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x340210d9
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x34025cdd
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x34025c89
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x34020ba5
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x34020c39
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x34020b29
// converted property setter: - (void)setPort:(int)port;	// 0x34025aa5
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x34025d15
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x34025d41
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x34020cd5
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x34025c61
// converted property setter: - (void)setScheme:(id)scheme;	// 0x340259dd
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x34021029
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x34025d71
// declared property setter: - (void)setServerVersion:(id)version;	// 0x34021ad1
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x340209f5
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x34025bb9
// converted property setter: - (void)setUsername:(id)username;	// 0x34025759
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x34021165
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x34021cad
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x34021d45
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x34021cf9
- (BOOL)shouldLogTransmittedData;	// 0x340256a9
- (void)shutdown;	// 0x34024b5d
- (id)spinnerIdentifiers;	// 0x34022655
- (id)stateString;	// 0x3401fcd9
// declared property getter: - (id)subscribedCalendars;	// 0x34020a91
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x3401fcc9
// declared property getter: - (BOOL)supportsEvents;	// 0x34021e71
// declared property getter: - (BOOL)supportsReminders;	// 0x34021dad
- (void)task:(id)task didFinishWithError:(id)error;	// 0x340241d9
// converted property getter: - (id)taskManager;	// 0x34021ec5
- (BOOL)upgradeAccount;	// 0x34020871
// converted property getter: - (BOOL)useSSL;	// 0x34025be9
// converted property getter: - (id)username;	// 0x340256f1
- (BOOL)usesTokenAuth;	// 0x34021ec1
// declared property getter: - (id)viewedTimeZone;	// 0x34021c21
// declared property getter: - (BOOL)wasMigrated;	// 0x3402111d
- (id)wellKnownPaths;	// 0x34024d6d
@end

