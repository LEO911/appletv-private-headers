/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MREffect.h"

@class NSMutableArray, MRTextRenderer, NSArray, MRImage, NSMutableDictionary;

@interface MREffectScrapbook : MREffect {
	NSMutableDictionary *mFrameProviders;	// 116 = 0x74
	NSMutableDictionary *mSprites;	// 120 = 0x78
	BOOL mIsLoaded;	// 124 = 0x7c
	BOOL mTitleAspectRatio;	// 125 = 0x7d
	NSArray *mLayouts;	// 128 = 0x80
	MRTextRenderer *mTextRenderer0;	// 132 = 0x84
	MRImage *mTextImage0;	// 136 = 0x88
	NSMutableArray *mRectsToSubtract;	// 140 = 0x8c
	BOOL mIsMovieOnly;	// 144 = 0x90
	CGSize mTextSize;	// 148 = 0x94
	float mLocalMatrix[16];	// 156 = 0x9c
}
+ (void)initialize;	// 0x32215f49
- (id)initWithEffectID:(id)effectID;	// 0x32218ff9
- (void)_cleanup;	// 0x322190c9
- (void)_drawBlendedFrame:(id)frame info:(id)info index:(int)index rect:(CGRect)rect zIndex:(int)index5 zRotation:(float)rotation subtract:(id)subtract time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221d325
- (void)_drawBreakFrame:(id)frame index:(int)index rect:(CGRect)rect rotation:(float)rotation forcedAspectRatio:(float)ratio layout:(id)layout offset:(CGSize)offset time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221e161
- (void)_drawBreakFrameInRect:(CGRect)rect frameWidth:(float)width time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221f9f9
- (void)_drawBreakTwoPartFrame:(id)frame index:(int)index rect:(CGRect)rect rotation:(float)rotation forcedAspectRatio:(float)ratio time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221db49
- (void)_drawFrame:(id)frame info:(id)info index:(int)index rect:(CGRect)rect zIndex:(int)index5 zRotation:(float)rotation subtract:(id)subtract time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221ca75
- (void)_drawFrame:(id)frame info:(id)info rect:(CGRect)rect stretch:(BOOL)stretch zIndex:(int)index zRotation:(float)rotation subtract:(id)subtract key:(id)key time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221bd49
- (void)_drawLandscapePanoBackgroundInRect:(CGRect)rect paperType:(id)type subtract:(id)subtract inTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221e83d
- (void)_drawMask:(id)mask index:(int)index rect:(CGRect)rect zIndex:(int)index4 zRotation:(float)rotation subtract:(id)subtract time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221c481
- (void)_drawPortraitPanoBackgroundInRect:(CGRect)rect flippedRect:(CGRect)rect2 paperType:(id)type subtract:(id)subtract inTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221f0c5
- (void)_drawTextWithInfo:(id)info rect:(CGRect)rect zIndex:(int)index zRotation:(float)rotation time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221ba35
- (void)_loadForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221ff4d
- (int)_maxLinesForTextElement:(id)textElement;	// 0x32220449
- (CGSize)_maxSizeForTextElement:(id)textElement;	// 0x32220411
- (void)_unload;	// 0x3222044d
- (id)elementHitAtPoint:(CGPoint)point withInverseMatrix:(float [16])inverseMatrix localPoint:(CGPoint *)point3;	// 0x3221b7e5
- (BOOL)getVerticesCoordinates:(CGPoint (*)[4])coordinates withMatrix:(float [16])matrix forElement:(id)element;	// 0x3221b9b9
- (BOOL)isAlphaFriendly;	// 0x322194b5
- (BOOL)isLoadedForTime:(double)time;	// 0x32219249
- (BOOL)isOpaque;	// 0x322194b9
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x32219681
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3221aa19
- (void)setPixelSize:(CGSize)size;	// 0x32219359
@end

