/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRLayer.h"

@class NSMutableArray, NSArray, MCContainerParallelizer, NSMutableDictionary;

@interface MRLayerParallelizer : MRLayer {
	MCContainerParallelizer *mContainer;	// 120 = 0x78
	NSMutableArray *mSublayers;	// 124 = 0x7c
	NSMutableDictionary *mSublayersForPlugs;	// 128 = 0x80
	float mBackgroundColor[4];	// 132 = 0x84
	BOOL mNeedsToUpdateSublayersOrdering;	// 148 = 0x94
	BOOL mNeedsToUpdateBackgroundColor;	// 149 = 0x95
}
@property(readonly, assign) const float *backgroundColor;	// G=0x32132075; 
@property(readonly, assign) NSArray *sublayers;	// G=0x32134bf5; @synthesize=mSublayers
- (id)initWithPlug:(id)plug andParameters:(id)parameters inSuperlayer:(id)superlayer;	// 0x32131789
- (id)_createSublayerForPlug:(id)plug;	// 0x32135161
- (id)_currentState;	// 0x32134841
- (void)_deleteSublayer:(id)sublayer;	// 0x321352fd
- (id)_dumpLayerWithOptions:(unsigned)options;	// 0x32134a6d
- (void)_executeLayerCommandQueue;	// 0x32134c09
- (void)_observePlug;	// 0x321355e5
- (void)_observePlugOnPreactivate;	// 0x3213569d
- (void)_observeSublayer:(id)sublayer;	// 0x32135481
- (void)_observeSublayerOnPreactivate:(id)preactivate;	// 0x3213551d
- (void)_renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x321358d1
- (id)_retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x32135d05
- (void)_setNeedsToRequestRebuildAudio:(BOOL)requestRebuildAudio;	// 0x321357e9
- (BOOL)_sublayersMakesOpaque;	// 0x32132889
- (void)_unobservePlug;	// 0x32135645
- (void)_unobservePlugOnDepreactivate;	// 0x32135755
- (void)_unobserveSublayer:(id)sublayer;	// 0x321354c5
- (void)_unobserveSublayerOnDepreactivate:(id)depreactivate;	// 0x3213558d
- (void)_updateSublayersOrdering;	// 0x32135099
- (id)actionForKey:(id)key recursive:(BOOL)recursive;	// 0x32134321
- (id)actionHitAtPoint:(CGPoint)point layer:(id *)layer;	// 0x32133f3d
// declared property getter: - (const float *)backgroundColor;	// 0x32132075
- (void)beginMorphingToAspectRatio:(float)aspectRatio withDuration:(double)duration;	// 0x3213229d
- (void)cleanup;	// 0x321318cd
- (void)deactivate;	// 0x321324f5
- (void)depreactivate:(BOOL)depreactivate;	// 0x321325f5
- (void)endMorphing;	// 0x321323d9
- (BOOL)hasAudio;	// 0x3213364d
- (BOOL)hasSomethingToRender;	// 0x32132099
- (BOOL)isAlphaFriendly;	// 0x32132b95
- (BOOL)isInfinite;	// 0x32132c39
- (BOOL)isLoadedForTime:(double)time;	// 0x32132715
- (BOOL)isOpaque;	// 0x32132b59
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x32131b39
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3213347d
- (double)phaseInSublayerForID:(id)anId;	// 0x321345c1
- (double)phaseOutSublayerForID:(id)anId;	// 0x32134739
- (void)preactivate;	// 0x321324b5
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x32132c89
- (void)setNeedsUpdateForPluggerOfSublayer:(id)sublayer;	// 0x32133571
- (void)setPixelSize:(CGSize)size;	// 0x32131f8d
- (id)sublayerForID:(id)anId;	// 0x32133765
- (id)sublayerForPlugObjectID:(id)plugObjectID recursive:(BOOL)recursive;	// 0x321338b1
- (id)sublayerHitAtPoint:(CGPoint)point onlyIfHitElement:(BOOL)element localPoint:(CGPoint *)point3;	// 0x32133aed
// declared property getter: - (id)sublayers;	// 0x32134bf5
- (void)synchronizeTime;	// 0x321321a9
@end

