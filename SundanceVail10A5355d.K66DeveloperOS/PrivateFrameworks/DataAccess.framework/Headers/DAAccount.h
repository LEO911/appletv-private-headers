/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x336432d5; S=0x33643935; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x33646859; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x33647621; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x33648e45; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x33642ded; S=0x33646ad1; 
@property(copy) NSString *emailAddress;	// G=0x33645029; S=0x336450b1; 
@property(copy) NSArray *emailAddresses;	// G=0x33645189; S=0x33645225; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x336475dd; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x3364547d; 
@property(copy) NSString *host;	// G=0x33644d79; S=0x33644e01; 
@property(readonly, assign) NSData *identityPersist;	// G=0x33645fb1; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x3364626d; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x33645f25; 
@property(assign) BOOL needsRediscovery;	// G=0x336459d9; S=0x336459f9; 
@property(copy) NSString *password;	// G=0x336449b5; S=0x33644b0d; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x33642b4d; 
@property(assign) int port;	// G=0x33645591; S=0x3364561d; 
@property(copy) NSURL *principalURL;	// G=0x336457bd; S=0x33645865; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x33645a15; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x33643905; 
@property(copy) NSString *scheme;	// G=0x336456a9; S=0x33645731; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x33647635; S=0x33647649; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x3364599d; S=0x336459bd; 
@property(assign) BOOL shouldFailAllTasks;	// G=0x3364766d; S=0x33647685; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x336475f1; S=0x33647609; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x3364769d; S=0x336476b5; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x33645369; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x33647659; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x33654659; S=0x3365465d; converted property
@property(assign) BOOL useSSL;	// G=0x33644ed9; S=0x33644f61; 
@property(copy) NSString *user;	// G=0x336467ed; S=0x336467fd; 
@property(copy) NSString *username;	// G=0x33643a6d; S=0x33643b5d; 
@property(retain) id version;	// G=0x33644cd1; S=0x33644d1d; converted property
+ (Class)accountClass;	// 0x3364381d
+ (Class)classForAccountType:(id)accountType;	// 0x33646a41
+ (Class)clientClass;	// 0x33644241
+ (Class)daemonClass;	// 0x3364428d
+ (id)defaultProperties;	// 0x33646a3d
+ (id)newAccountOfAccountType:(id)accountType;	// 0x33646a79
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x3364371d
- (id)initWithProperties:(id)properties;	// 0x336427c9
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x336476cd
- (id)_exceptionsDict;	// 0x33646095
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x33648ae5
- (BOOL)_isIdentityManagedByProfile;	// 0x33646075
- (void)_removeHostsToTrust;	// 0x33646be1
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x33648339
- (id)_serverSuffixesToAlwaysFail;	// 0x336477d1
- (void)_setPersistentUUID:(id)uuid;	// 0x33643919
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x33646c11
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x336444e9
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x33645289
// declared property getter: - (id)accountDescription;	// 0x336432d5
- (id)accountID;	// 0x33642a51
- (int)accountIntPropertyForKey:(id)key;	// 0x33644551
- (BOOL)accountNeedsUpgrade;	// 0x33646aed
- (id)accountPropertyForKey:(id)key;	// 0x336442d9
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x33646859
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x33645999
- (id)backingACAccountTypeIdentifier;	// 0x33646dc5
// declared property getter: - (id)backingAccountInfo;	// 0x33647621
// declared property getter: - (id)backingCredentialAccount;	// 0x33648e45
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x336490b5
- (void)cancelAllSearchQueries;	// 0x33652431
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x3364915d
- (void)cancelSearchQuery:(id)query;	// 0x3365242d
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x336491fd
- (void)checkValidityWithConsumer:(id)consumer;	// 0x33645951
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x33646539
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x336465fd
- (void)cleanupAccountFiles;	// 0x3364620d
- (id)consumerForTask:(id)task;	// 0x336447d5
- (id)contactsFolders;	// 0x3364922d
- (CFURLStorageSessionRef)copyStorageSession;	// 0x33646601
// declared property getter: - (int)daAccountVersion;	// 0x33642ded
- (id)dataclassProperties;	// 0x33644129
- (void)dealloc;	// 0x33642ce5
- (id)defaultContactsFolder;	// 0x33649229
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x33645b8d
- (id)defaultEventsFolder;	// 0x336490a5
- (id)defaultNotesFolder;	// 0x33663b8d
- (id)defaultToDosFolder;	// 0x3365464d
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x33649295
- (id)deletedItemsFolder;	// 0x3364928d
- (id)description;	// 0x3364675d
- (id)displayName;	// 0x33643a11
- (id)domainOnly;	// 0x33644d75
// declared property getter: - (id)emailAddress;	// 0x33645029
// declared property getter: - (id)emailAddresses;	// 0x33645189
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x336475dd
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x33643ca9
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x3364547d
- (id)eventsFolders;	// 0x336490a9
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x336460b1
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x3366aabd
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x3364785d
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x33647ffd
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x33646271
// declared property getter: - (id)host;	// 0x33644d79
// declared property getter: - (id)identityPersist;	// 0x33645fb1
- (id)inboxFolder;	// 0x33649285
- (BOOL)isActiveSyncAccount;	// 0x3364651d
- (BOOL)isCalDAVAccount;	// 0x33646525
- (BOOL)isCalDAVChildAccount;	// 0x33646531
- (BOOL)isCardDAVAccount;	// 0x3364652d
// declared property getter: - (BOOL)isChildAccount;	// 0x3364626d
- (BOOL)isDAMMeAccount;	// 0x33646529
- (BOOL)isDisabled;	// 0x336431d9
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x33643d71
- (BOOL)isEqualToAccount:(id)account;	// 0x33646475
- (BOOL)isHotmailAccount;	// 0x33646535
- (BOOL)isLDAPAccount;	// 0x33646521
// declared property getter: - (int)keychainAccessibilityType;	// 0x33645f25
- (id)localizedIdenticalAccountFailureMessage;	// 0x33648cf5
- (id)localizedInvalidPasswordMessage;	// 0x33648d9d
- (BOOL)monitorFolderWithID:(id)anId;	// 0x33645a8d
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x33645a89
// declared property getter: - (BOOL)needsRediscovery;	// 0x336459d9
- (id)notesFolders;	// 0x33663b91
// declared property getter: - (id)password;	// 0x336449b5
- (id)passwordWithExpected:(BOOL)expected;	// 0x3364480d
- (void)performSearchQuery:(id)query;	// 0x33652389
// declared property getter: - (id)persistentUUID;	// 0x33642b4d
// declared property getter: - (int)port;	// 0x33645591
- (void)prepareForAccountSave;	// 0x33645be9
// declared property getter: - (id)principalURL;	// 0x336457bd
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x33649291
- (void)removeAccountPropertyForKey:(id)key;	// 0x33644485
- (void)removeClientCertificateData;	// 0x33645b91
- (void)removeConsumerForTask:(id)task;	// 0x336447f1
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x33648e55
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x33645a15
- (void)resetAccountID;	// 0x33643839
- (BOOL)resetCertWarnings;	// 0x33646379
- (void)resetStatusReport;	// 0x336463a5
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x33649161
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x336445b9
- (void)saveAccountProperties;	// 0x33645bed
- (void)saveAccountSettings;	// 0x33646985
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x33646935
// declared property getter: - (id)scheduleIdentifier;	// 0x33643905
// declared property getter: - (id)scheme;	// 0x336456a9
- (BOOL)searchQueriesRunning;	// 0x33652435
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x336490b1
- (id)sentItemsFolder;	// 0x33649289
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x33644511
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x33643935
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x33644579
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x336443ad
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x33644779
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x33646ad1
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x336450b1
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x33645225
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x33643e4d
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x33645505
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x336460f5
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x336462b5
// declared property setter: - (void)setHost:(id)host;	// 0x33644e01
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x33645fcd
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x336459f9
// declared property setter: - (void)setPassword:(id)password;	// 0x33644b0d
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x336449ed
// declared property setter: - (void)setPort:(int)port;	// 0x3364561d
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x33645865
// declared property setter: - (void)setScheme:(id)scheme;	// 0x33645731
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x33647649
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x336459bd
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x33647685
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x33647609
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x336476b5
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x336453f1
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x3365465d
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x33644f61
// declared property setter: - (void)setUser:(id)user;	// 0x336467fd
// declared property setter: - (void)setUsername:(id)username;	// 0x33643b5d
// converted property setter: - (void)setVersion:(id)version;	// 0x33644d1d
// declared property getter: - (id)settingsTemplate;	// 0x33647635
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x3364599d
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x3364766d
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x336475f1
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x3364769d
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x33645369
- (id)spinnerIdentifiers;	// 0x336441f5
- (id)stateString;	// 0x336446c9
// declared property getter: - (id)statusReport;	// 0x33647659
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x33644665
- (void)stopMonitoringFolders;	// 0x33645b29
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x33645ac5
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x33643c5d
- (int)supportsEmailFlagging;	// 0x3365243d
- (int)supportsMailboxSearch;	// 0x33652439
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x33644601
- (id)syncStoreIdentifier;	// 0x33642cd5
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x3366aac1
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x33649231
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x336490ad
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33663b95
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x33654655
- (void)tearDown;	// 0x33645a25
- (id)toDosFolders;	// 0x33654651
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x33654659
- (BOOL)upgradeAccount;	// 0x33646d65
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x33646dc1
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x33646dc9
- (void)upgradeToHoodooAccountInfo;	// 0x33646dbd
- (id)urlForKeychain;	// 0x3364680d
// declared property getter: - (BOOL)useSSL;	// 0x33644ed9
// declared property getter: - (id)user;	// 0x336467ed
// declared property getter: - (id)username;	// 0x33643a6d
- (id)usernameWithoutDomain;	// 0x33644d65
- (BOOL)usesLegacyAccountSettings;	// 0x33646745
// converted property getter: - (id)version;	// 0x33644cd1
@end

