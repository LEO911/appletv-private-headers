/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, AVAudioMix, NSURL, NSArray, AVVideoComposition, NSString, NSError, AVAssetExportSessionInternal;

@interface AVAssetExportSession : NSObject {
	AVAssetExportSessionInternal *_exportSession;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x302ed1bd; 
@property(copy, nonatomic) AVAudioMix *audioMix;	// G=0x302eeb6d; S=0x302eeb8d; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x302eddd5; 
@property(readonly, assign, nonatomic) long long estimatedOutputFileLength;	// G=0x302ee979; 
@property(assign, nonatomic) long long fileLengthLimit;	// G=0x302eeac9; S=0x302eeaed; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB maxDuration;	// G=0x302ee8fd; 
@property(copy, nonatomic) NSArray *metadata;	// G=0x302ee9fd; S=0x302eea1d; 
@property(copy, nonatomic) NSString *outputFileType;	// G=0x302ed961; S=0x302ed981; 
@property(copy, nonatomic) NSURL *outputURL;	// G=0x302edb51; S=0x302edb71; 
@property(readonly, assign, nonatomic) NSString *presetName;	// G=0x302ed1dd; 
@property(readonly, assign, nonatomic) float progress;	// G=0x302ee05d; 
@property(assign, nonatomic) BOOL shouldOptimizeForNetworkUse;	// G=0x302eee2d; S=0x302eee4d; 
@property(readonly, assign, nonatomic) int status;	// G=0x302edc55; 
@property(readonly, assign, nonatomic) NSArray *supportedFileTypes;	// G=0x302ed439; 
@property(assign, nonatomic) XXStruct_yD8eWC timeRange;	// G=0x302ee7d5; S=0x302ee831; 
@property(assign) BOOL usesHardwareVideoEncoderIfAvailable;	// G=0x302eeec9; S=0x302eeee9; converted property
@property(copy, nonatomic) AVVideoComposition *videoComposition;	// G=0x302eec39; S=0x302eec59; 
+ (id)_audioOnlyPresets;	// 0x302eef65
+ (id)_audioVideoPresets;	// 0x302eeff9
+ (BOOL)_canWriteMediaOfAsset:(id)asset toFileType:(id)fileType;	// 0x302ec80d
+ (long long)_estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x302f05e1
+ (id)_figRemakerNotificationNames;	// 0x302f021d
+ (int)_getPassthroughExportPolicyForAssetTrack:(id)assetTrack fileType:(id)type asChapterTrack:(BOOL)track;	// 0x302ed1fd
+ (BOOL)_isCompositionWithMultipleNonEmptyEdits:(id)multipleNonEmptyEdits;	// 0x302ed325
+ (BOOL)_isExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302efab5
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302efa59
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAssetContainingPlayableAudio:(BOOL)assetContainingPlayableAudio playableVideo:(BOOL)video outputFileType:(id)type;	// 0x302ef8a1
+ (BOOL)_isPassthroughExportPresetCompatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302ef5b5
+ (BOOL)_isPassthroughSupportedForAsset:(id)asset;	// 0x302ec7dd
+ (XXStruct_pwHToB)_maximumDurationForPreset:(id)preset fileSizeBytesLimit:(long long)limit properties:(id)properties;	// 0x302f02bd
+ (id)_settingForPreset:(id)preset;	// 0x302efb1d
+ (id)_utTypesForAudioOnly;	// 0x302ef4d1
+ (id)_utTypesForDefaultPassthroughPreset;	// 0x302ef395
+ (id)_utTypesForPresets;	// 0x302ef0cd
+ (id)allExportPresets;	// 0x302ec4b9
+ (void)determineCompatibilityOfExportPreset:(id)exportPreset withAsset:(id)asset outputFileType:(id)type completionHandler:(id)handler;	// 0x302ec929
+ (long long)estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x302ecb65
+ (id)exportPresetsCompatibleWithAsset:(id)asset;	// 0x302ec6a5
+ (id)exportSessionWithAsset:(id)asset presetName:(id)name;	// 0x302eca99
+ (XXStruct_pwHToB)maximumDurationForPreset:(id)preset properties:(id)properties;	// 0x302ecae5
- (id)init;	// 0x302ecba9
- (id)initWithAsset:(id)asset presetName:(id)name;	// 0x302ecbbd
- (id)_actualPresetName;	// 0x302f0a09
- (id)_actualSettingForPreset:(id)preset;	// 0x302efb61
- (void)_addListeners;	// 0x302f105d
- (BOOL)_canPassThroughAudio:(id)audio checkEnabled:(BOOL)enabled checkProtected:(BOOL)aProtected;	// 0x302f1771
- (BOOL)_canPassThroughVideo:(id)video checkEnabled:(BOOL)enabled checkAll:(BOOL)all checkProtected:(BOOL)aProtected;	// 0x302f2169
- (OpaqueFigRemaker *)_createFigRemaker;	// 0x302f2a69
- (id)_determineCompatibleFileTypes;	// 0x302ed4a9
- (CGSize)_getSourceDimension;	// 0x302f11b5
- (int)_getTrackCountOfType:(id)type checkEnabled:(BOOL)enabled;	// 0x302f1359
- (void)_handleFigRemakerNotification:(id)notification payload:(id)payload;	// 0x302f0785
- (void)_handleFigRemakerNotificationAsync:(id)async payload:(id)payload;	// 0x302f0931
- (BOOL)_hasProtectedNonAudioVideoTracks;	// 0x302f148d
- (BOOL)_isAudioMixdownRequired:(CFStringRef)required error:(id *)error;	// 0x302f2a31
- (void)_removeListeners;	// 0x302f0ea5
- (id)_retrieveChannelSpecificAudioSettingForAudioTrack:(id)audioTrack fromAudioSetting:(id)audioSetting;	// 0x302f1ed9
- (id)_settingForFigRemaker;	// 0x302f2045
- (BOOL)_totalSizeOfTracksIsWithinFileLengthLimit:(id)tracksIsWithinFileLengthLimit forSetting:(id)setting;	// 0x302f1619
- (void)_transitionToStatus:(int)status error:(id)error;	// 0x302f0a3d
- (void)_updateProgress;	// 0x302edfb5
- (BOOL)_validateSettablePropertiesReturningError:(id *)error;	// 0x302ee1fd
// declared property getter: - (id)asset;	// 0x302ed1bd
// declared property getter: - (id)audioMix;	// 0x302eeb6d
- (void)cancelExport;	// 0x302ee7c1
- (void)dealloc;	// 0x302ece41
- (id)description;	// 0x302ed119
- (void)determineCompatibleFileTypesWithCompletionHandler:(id)completionHandler;	// 0x302ed845
// declared property getter: - (id)error;	// 0x302eddd5
// declared property getter: - (long long)estimatedOutputFileLength;	// 0x302ee979
- (void)exportAsynchronouslyWithCompletionHandler:(id)completionHandler;	// 0x302ee41d
// declared property getter: - (long long)fileLengthLimit;	// 0x302eeac9
- (void)finalize;	// 0x302ed039
// declared property getter: - (XXStruct_pwHToB)maxDuration;	// 0x302ee8fd
// declared property getter: - (id)metadata;	// 0x302ee9fd
// declared property getter: - (id)outputFileType;	// 0x302ed961
// declared property getter: - (id)outputURL;	// 0x302edb51
// declared property getter: - (id)presetName;	// 0x302ed1dd
// declared property getter: - (float)progress;	// 0x302ee05d
// declared property setter: - (void)setAudioMix:(id)mix;	// 0x302eeb8d
// declared property setter: - (void)setFileLengthLimit:(long long)limit;	// 0x302eeaed
// declared property setter: - (void)setMetadata:(id)metadata;	// 0x302eea1d
// declared property setter: - (void)setOutputFileType:(id)type;	// 0x302ed981
// declared property setter: - (void)setOutputURL:(id)url;	// 0x302edb71
// declared property setter: - (void)setShouldOptimizeForNetworkUse:(BOOL)optimizeForNetworkUse;	// 0x302eee4d
// declared property setter: - (void)setTimeRange:(XXStruct_yD8eWC)range;	// 0x302ee831
// converted property setter: - (void)setUsesHardwareVideoEncoderIfAvailable:(BOOL)available;	// 0x302eeee9
// declared property setter: - (void)setVideoComposition:(id)composition;	// 0x302eec59
// declared property getter: - (BOOL)shouldOptimizeForNetworkUse;	// 0x302eee2d
// declared property getter: - (int)status;	// 0x302edc55
// declared property getter: - (id)supportedFileTypes;	// 0x302ed439
// declared property getter: - (XXStruct_yD8eWC)timeRange;	// 0x302ee7d5
// converted property getter: - (BOOL)usesHardwareVideoEncoderIfAvailable;	// 0x302eeec9
// declared property getter: - (id)videoComposition;	// 0x302eec39
@end

