/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "AVAssetInspectorLoader.h"

@class NSURL, NSDictionary, AVAssetCache, AVAssetInspector, NSMutableArray;
@protocol OS_dispatch_queue;

@interface AVFigAssetInspectorLoader : AVAssetInspectorLoader {
	OpaqueFigAsset *_figAsset;	// 8 = 0x8
	OpaqueFigFormatReader *_formatReader;	// 12 = 0xc
	BOOL _formatReaderObtained;	// 16 = 0x10
	long _figAssetCreationStatus;	// 20 = 0x14
	NSObject<OS_dispatch_queue> *_completionHandlerQueue;	// 24 = 0x18
	OpaqueFigSimpleMutex *_loadingMutex;	// 28 = 0x1c
	OpaqueFigSemaphore *_playabilityValidationSemaphore;	// 32 = 0x20
	int _playableStatus;	// 36 = 0x24
	long _playableResult;	// 40 = 0x28
	BOOL _playable;	// 44 = 0x2c
	OpaqueFigSemaphore *_cameraRollValidationSemaphor;	// 48 = 0x30
	int _compatibleWithSavedPhotosAlbumStatus;	// 52 = 0x34
	long _compatibleWithSavedPhotosAlbumResult;	// 56 = 0x38
	BOOL _compatibleWithSavedPhotosAlbum;	// 60 = 0x3c
	NSMutableArray *_loadingBatches;	// 64 = 0x40
	BOOL _loadingCanceled;	// 68 = 0x44
	AVAssetInspector *_assetInspector;	// 72 = 0x48
	AVAssetCache *_assetCache;	// 76 = 0x4c
	BOOL _shouldMatchDataInCacheByURLPathComponentOnly;	// 80 = 0x50
	BOOL _shouldMatchDataInCacheByURLWithoutQueryComponent;	// 81 = 0x51
	NSURL *_downloadDestinationURL;	// 84 = 0x54
	NSDictionary *_validationPlist;	// 88 = 0x58
	unsigned _referenceRestrictions;	// 92 = 0x5c
	NSURL *_URL;	// 96 = 0x60
}
@property(readonly, retain) NSURL *URL;	// G=0x303224bd; converted property
@property(readonly, retain) AVAssetCache *assetCache;	// G=0x303225c9; converted property
@property(readonly, retain) AVAssetInspector *assetInspector;	// G=0x30321291; converted property
@property(readonly, assign, getter=isCompatibleWithSavedPhotosAlbum) BOOL compatibleWithSavedPhotosAlbum;	// G=0x30322365; converted property
@property(readonly, retain) NSURL *downloadDestinationURL;	// G=0x303225f9; converted property
@property(readonly, assign, getter=isPlayable) BOOL playable;	// G=0x30322059; converted property
@property(readonly, assign) unsigned referenceRestrictions;	// G=0x303225b9; converted property
@property(readonly, assign) BOOL shouldMatchDataInCacheByURLPathComponentOnly;	// G=0x303225d9; converted property
@property(readonly, assign) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;	// G=0x303225e9; converted property
@property(readonly, assign, nonatomic) NSDictionary *validationPlist;	// G=0x30322609; @synthesize=_validationPlist
+ (id)_figAssetPropertiesForKeys;	// 0x3031fe95
+ (id)_figAssetTrackPropertiesForKeys;	// 0x3031fec1
- (id)initWithURL:(id)url options:(id)options;	// 0x3031feed
// converted property getter: - (id)URL;	// 0x303224bd
- (void)_addFigAssetNotifications;	// 0x30320785
- (OpaqueFigSemaphore *)_cameraRollValidationSemaphor;	// 0x30321345
- (id)_completionHandlerQueue;	// 0x30321305
- (void)_ensureAllDependenciesOfKeyAreLoaded:(id)keyAreLoaded;	// 0x30321ed9
- (OpaqueFigAsset *)_figAsset;	// 0x303212f5
- (OpaqueFigFormatReader *)_formatReader;	// 0x30321205
- (id)_initWithDownloadToken:(unsigned long long)downloadToken;	// 0x3032070d
- (id)_initWithFigAsset:(OpaqueFigAsset *)figAsset options:(id)options;	// 0x303205ed
- (BOOL)_isStreaming;	// 0x30322545
- (int)_loadStatusForProperty:(id)property returningError:(int *)error;	// 0x30321355
- (id)_loadingBatches;	// 0x30321325
- (OpaqueFigSimpleMutex *)_loadingMutex;	// 0x30321315
- (OpaqueFigSemaphore *)_playabilityValidationSemaphore;	// 0x30321335
- (void)_removeFigAssetNotifications;	// 0x30320ea5
// converted property getter: - (id)assetCache;	// 0x303225c9
// converted property getter: - (id)assetInspector;	// 0x30321291
- (void)cancelLoading;	// 0x30321d85
- (id)chapterGroupInfo;	// 0x30322495
- (void)dealloc;	// 0x30320f95
// converted property getter: - (id)downloadDestinationURL;	// 0x303225f9
- (unsigned long long)downloadToken;	// 0x303224f5
- (XXStruct_pwHToB)duration;	// 0x30321fad
- (void)finalize;	// 0x303210b1
- (BOOL)hasProtectedContent;	// 0x3032251d
- (unsigned)hash;	// 0x303211bd
// converted property getter: - (BOOL)isCompatibleWithSavedPhotosAlbum;	// 0x30322365
- (BOOL)isComposable;	// 0x303222a9
- (BOOL)isEqual:(id)equal;	// 0x30321149
- (BOOL)isExportable;	// 0x303221b1
// converted property getter: - (BOOL)isPlayable;	// 0x30322059
- (BOOL)isReadable;	// 0x3032222d
- (void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id)handler;	// 0x3032160d
- (void)loadValuesAsynchronouslyForKeys:(id)keys keysForCollectionKeys:(id)collectionKeys completionHandler:(id)handler;	// 0x3032162d
- (id)lyrics;	// 0x30321ff1
// converted property getter: - (unsigned)referenceRestrictions;	// 0x303225b9
- (id)resolvedURL;	// 0x303224cd
- (void)setIsCompatibleWithSavedPhotosAlbum:(BOOL)savedPhotosAlbum result:(long)result;	// 0x30322325
- (void)setIsPlayable:(BOOL)playable result:(long)result;	// 0x30322019
// converted property getter: - (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;	// 0x303225d9
// converted property getter: - (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;	// 0x303225e9
- (int)statusOfValueForKey:(id)key error:(id *)error;	// 0x303213bd
// declared property getter: - (id)validationPlist;	// 0x30322609
@end

