/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x355c56a9; S=0x355151e1; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x355c585d; S=0x355c5925; converted property
@property(retain) id currencyCode;	// G=0x355c6be1; S=0x355c6ca1; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x355c59a9; S=0x355c5a69; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x355c8825; S=0x355c88e5; converted property
@property(retain) id currencySymbol;	// G=0x355c6d41; S=0x355c6e01; converted property
@property(retain) id decimalSeparator;	// G=0x355c56e9; S=0x355c57a9; converted property
@property(retain) id exponentSymbol;	// G=0x355c7581; S=0x355c7641; converted property
@property(assign) unsigned formatWidth;	// G=0x355c7979; S=0x355c7a45; converted property
@property(assign) unsigned formatterBehavior;	// G=0x355c4ff5; S=0x355c5035; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x355c4fad; S=0x3553dcb1; converted property
@property(retain) id groupingSeparator;	// G=0x355c5c55; S=0x355c5d15; converted property
@property(assign) unsigned groupingSize;	// G=0x355c76e1; S=0x355c77ad; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x355c6ea1; S=0x355c6f61; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x355c8985; S=0x355c8a61; converted property
@property(retain) id locale;	// G=0x355c4f05; S=0x3553dc45; converted property
@property(retain) id maximum;	// G=0x355c8769; S=0x355c8791; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x355c8561; S=0x355c862d; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x355c82c9; S=0x355c8395; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x355c8d91; S=0x355c8e5d; converted property
@property(retain) id minimum;	// G=0x355c86ad; S=0x355c86d5; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x355c8415; S=0x355c84e1; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x355c817d; S=0x355c8249; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x355c8c45; S=0x355c8d11; converted property
@property(retain) id minusSign;	// G=0x355c72c1; S=0x355c7381; converted property
@property(retain) id multiplier;	// G=0x355c7ac5; S=0x355c7b85; converted property
@property(retain) id negativeFormat;	// G=0x355c5099; S=0x355c516d; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x355c6501; S=0x35515189; converted property
@property(retain) id negativePrefix;	// G=0x355c6921; S=0x355c69e1; converted property
@property(retain) id negativeSuffix;	// G=0x355c6a81; S=0x355c6b41; converted property
@property(retain) id nilSymbol;	// G=0x355c6005; S=0x355150d9; converted property
@property(retain) id notANumberSymbol;	// G=0x355c6165; S=0x355c6225; converted property
@property(assign) unsigned numberStyle;	// G=0x355c4e65; S=0x35515261; converted property
@property(retain) id paddingCharacter;	// G=0x355c7c25; S=0x355c7ce5; converted property
@property(assign) unsigned paddingPosition;	// G=0x355c7d85; S=0x355c7e51; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x355c8edd; S=0x355c8f25; converted property
@property(retain) id perMillSymbol;	// G=0x355c7161; S=0x355c7221; converted property
@property(retain) id percentSymbol;	// G=0x355c7001; S=0x355c70c1; converted property
@property(retain) id plusSign;	// G=0x355c7421; S=0x355c74e1; converted property
@property(retain) id positiveFormat;	// G=0x355c53c9; S=0x355c5481; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x355c63a1; S=0x35515131; converted property
@property(retain) id positivePrefix;	// G=0x355c6661; S=0x355c6721; converted property
@property(retain) id positiveSuffix;	// G=0x355c67c1; S=0x355c6881; converted property
@property(retain) id roundingIncrement;	// G=0x355c801d; S=0x355c80dd; converted property
@property(assign) unsigned roundingMode;	// G=0x355c7ed1; S=0x355c7f9d; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x355c782d; S=0x355c78f9; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x355c6585; S=0x355c6609; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x355c52ed; S=0x355c5371; converted property
@property(retain) id textAttributesForNil;	// G=0x355c6089; S=0x355c610d; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x355c62c5; S=0x355c6349; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x355c6425; S=0x355c64a9; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x355c55cd; S=0x355c5651; converted property
@property(retain) id textAttributesForZero;	// G=0x355c5f29; S=0x355c5fad; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x355c5b09; S=0x355c5bd1; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x355c8ae5; S=0x355c8bc1; converted property
@property(retain) id zeroSymbol;	// G=0x355c5dc9; S=0x355c5e89; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x355150a5
+ (void)initialize;	// 0x35534f15
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x355c4ded
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x35534f39
- (id)init;	// 0x35514d25
- (id)initWithCoder:(id)coder;	// 0x355c43b1
- (void *)__Keynote_NOOP;	// 0x355c40e1
- (void)_clearFormatter;	// 0x3551523d
- (void)_regenerateFormatter;	// 0x3551540d
- (void)_reset;	// 0x355c40e5
- (void)_setUsesCharacterDirection:(BOOL)direction;	// 0x355c905d
- (BOOL)_usesCharacterDirection;	// 0x355c8f81
// converted property getter: - (BOOL)allowsFloats;	// 0x355c56a9
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x355c585d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x355c4531
- (id)copyWithZone:(NSZone *)zone;	// 0x355c42a1
// converted property getter: - (id)currencyCode;	// 0x355c6be1
// converted property getter: - (id)currencyDecimalSeparator;	// 0x355c59a9
// converted property getter: - (id)currencyGroupingSeparator;	// 0x355c8825
// converted property getter: - (id)currencySymbol;	// 0x355c6d41
- (void)dealloc;	// 0x3553e831
// converted property getter: - (id)decimalSeparator;	// 0x355c56e9
- (void)encodeWithCoder:(id)coder;	// 0x355c4309
// converted property getter: - (id)exponentSymbol;	// 0x355c7581
- (void)finalize;	// 0x355c425d
// converted property getter: - (unsigned)formatWidth;	// 0x355c7979
// converted property getter: - (unsigned)formatterBehavior;	// 0x355c4ff5
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x355c4fad
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x355c4535
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x355c4d95
// converted property getter: - (id)groupingSeparator;	// 0x355c5c55
// converted property getter: - (unsigned)groupingSize;	// 0x355c76e1
// converted property getter: - (id)internationalCurrencySymbol;	// 0x355c6ea1
// converted property getter: - (BOOL)isLenient;	// 0x355c8985
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x355c8edd
// converted property getter: - (id)locale;	// 0x355c4f05
// converted property getter: - (id)maximum;	// 0x355c8769
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x355c8561
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x355c82c9
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x355c8d91
// converted property getter: - (id)minimum;	// 0x355c86ad
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x355c8415
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x355c817d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x355c8c45
// converted property getter: - (id)minusSign;	// 0x355c72c1
// converted property getter: - (id)multiplier;	// 0x355c7ac5
// converted property getter: - (id)negativeFormat;	// 0x355c5099
// converted property getter: - (id)negativeInfinitySymbol;	// 0x355c6501
// converted property getter: - (id)negativePrefix;	// 0x355c6921
// converted property getter: - (id)negativeSuffix;	// 0x355c6a81
// converted property getter: - (id)nilSymbol;	// 0x355c6005
// converted property getter: - (id)notANumberSymbol;	// 0x355c6165
- (id)numberFromString:(id)string;	// 0x355c4db5
// converted property getter: - (unsigned)numberStyle;	// 0x355c4e65
// converted property getter: - (id)paddingCharacter;	// 0x355c7c25
// converted property getter: - (unsigned)paddingPosition;	// 0x355c7d85
// converted property getter: - (id)perMillSymbol;	// 0x355c7161
// converted property getter: - (id)percentSymbol;	// 0x355c7001
// converted property getter: - (id)plusSign;	// 0x355c7421
// converted property getter: - (id)positiveFormat;	// 0x355c53c9
// converted property getter: - (id)positiveInfinitySymbol;	// 0x355c63a1
// converted property getter: - (id)positivePrefix;	// 0x355c6661
// converted property getter: - (id)positiveSuffix;	// 0x355c67c1
// converted property getter: - (id)roundingIncrement;	// 0x355c801d
// converted property getter: - (unsigned)roundingMode;	// 0x355c7ed1
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x355c782d
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x355151e1
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x355c5925
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x355c6ca1
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x355c5a69
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x355c88e5
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x355c6e01
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x355c57a9
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x355c7641
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x355c7a45
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x355c5035
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x3553dcb1
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x355c5d15
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x355c77ad
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x355c6f61
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x355c8a61
// converted property setter: - (void)setLocale:(id)locale;	// 0x3553dc45
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x355c8791
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x355c862d
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x355c8395
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x355c8e5d
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x355c86d5
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x355c84e1
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x355c8249
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x355c8d11
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x355c7381
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x355c7b85
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x355c516d
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x35515189
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x355c69e1
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x355c6b41
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x355150d9
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x355c6225
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x35515261
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x355c7ce5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x355c7e51
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x355c8f25
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x355c7221
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x355c70c1
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x355c74e1
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x355c5481
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x35515131
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x355c6721
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x355c6881
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x355c80dd
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x355c7f9d
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x355c78f9
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x355c6609
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x355c5371
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x355c610d
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x355c6349
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x355c64a9
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x355c5651
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x355c5fad
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x355c5bd1
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x355c8bc1
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x355c5e89
- (id)stringForObjectValue:(id)objectValue;	// 0x355152c5
- (id)stringFromNumber:(id)number;	// 0x3553dd0d
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x355c6585
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x355c52ed
// converted property getter: - (id)textAttributesForNil;	// 0x355c6089
// converted property getter: - (id)textAttributesForNotANumber;	// 0x355c62c5
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x355c6425
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x355c55cd
// converted property getter: - (id)textAttributesForZero;	// 0x355c5f29
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x355c5b09
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x355c8ae5
// converted property getter: - (id)zeroSymbol;	// 0x355c5dc9
@end

