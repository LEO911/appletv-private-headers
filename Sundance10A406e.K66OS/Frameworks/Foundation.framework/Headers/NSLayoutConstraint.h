/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISConstraint.h"

@class NSString;

@interface NSLayoutConstraint : NSObject <NSISConstraint> {
	id _container;	// 4 = 0x4
	id _firstItem;	// 8 = 0x8
	id _secondItem;	// 12 = 0xc
	float _constant;	// 16 = 0x10
	float _loweredConstant;	// 20 = 0x14
	id _markerAndPositiveExtraVar;	// 24 = 0x18
	id _negativeExtraVar;	// 28 = 0x1c
	float _coefficient;	// 32 = 0x20
	float _priority;	// 36 = 0x24
	unsigned long long _layoutConstraintFlags;	// 40 = 0x28
	id _flange;	// 48 = 0x30
}
@property(retain) id animations;	// G=0x35650149; S=0x35650159; converted property
@property(assign) float constant;	// G=0x35650c31; S=0x35650ced; 
@property(assign) id container;	// G=0x3565053d; S=0x35650561; 
@property(assign) int firstAttribute;	// G=0x3564f859; 
@property(assign) id firstItem;	// G=0x356540bd; @synthesize=_firstItem
@property(readonly, assign) BOOL hasBeenLowered;	// G=0x3564ff21; 
@property(copy) NSString *identifier;	// G=0x35650129; S=0x35650139; 
@property(assign) float multiplier;	// G=0x3564f9dd; 
@property(assign) float priority;	// G=0x3564fc29; S=0x3564fc39; 
@property(assign) int relation;	// G=0x3564f915; 
@property(assign) int secondAttribute;	// G=0x3564fb39; 
@property(assign) id secondItem;	// G=0x356540e9; @synthesize=_secondItem
@property(assign) BOOL shouldBeArchived;	// G=0x3564fbfd; S=0x3564fc11; 
@property(copy) NSString *symbolicConstant;	// G=0x35650edd; S=0x35650eed; 
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by constant:(float)constant;	// 0x35654081
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5;	// 0x35654049
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 constant:(float)constant;	// 0x35654009
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier;	// 0x35653fd1
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier constant:(float)constant;	// 0x35653cc9
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant;	// 0x356539c1
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant theme:(id)theme;	// 0x356539b1
+ (id)constraintsWithVisualFormat:(id)visualFormat options:(unsigned)options metrics:(id)metrics views:(id)views;	// 0x35653995
- (id)init;	// 0x35650f01
- (id)initWithCoder:(id)coder;	// 0x356521b5
- (void)_addToEngine:(id)engine;	// 0x35652d01
- (BOOL)_addToEngine:(id)engine integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x35652a7d
- (float)_allowedMagnitudeForIntegralizationAdjustment;	// 0x356501a9
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)markerScaling;	// 0x35650319
- (void)_clearWeakContainerReference;	// 0x35650579
- (id)_constantDescriptionForDTrace;	// 0x35650bb9
- (id)_constraintByReplacingItem:(id)item withItem:(id)item2;	// 0x35652535
- (id)_constraintByReplacingView:(id)view withView:(id)view2;	// 0x35652735
- (int)_constraintType;	// 0x35650fe1
- (void)_containerGeometryDidChange;	// 0x356506d9
- (BOOL)_deferDTraceLogging;	// 0x356504b1
- (BOOL)_describesSameRestrictionAsConstraint:(id)constraint;	// 0x35652745
- (id)_descriptionforSymbolicConstant;	// 0x35650b31
- (BOOL)_effectiveConstant:(float *)constant error:(id *)error;	// 0x356507fd
- (CGSize)_engineToContainerScalingCoefficients;	// 0x3565305d
- (float)_fudgeIncrement;	// 0x35650199
- (id)_identifier;	// 0x3564ff4d
- (BOOL)_isFudgeable;	// 0x3565016d
- (BOOL)_loweredConstantIsRounded;	// 0x3565054d
- (id)_loweredExpression;	// 0x35653369
- (id)_loweredExpressionReportingConstantIsRounded:(BOOL *)rounded;	// 0x3565309d
- (void)_makeExtraVars;	// 0x35652e65
- (id)_markerAndPositiveExtraVar;	// 0x35650409
- (id)_negativeExtraVar;	// 0x3565045d
- (BOOL)_nsib_isRedundant;	// 0x35653955
- (BOOL)_nsib_isRedundantInEngine:(id)engine;	// 0x35653539
- (int)_primitiveConstraintType;	// 0x356504dd
- (id)_priorityDescription;	// 0x35651725
- (void)_removeFromEngine:(id)engine;	// 0x35652d21
- (void)_setDeferDTraceLogging:(BOOL)logging;	// 0x356504c5
- (void)_setFirstAttribute:(int)attribute;	// 0x3564f869
- (void)_setFirstItem:(id)item;	// 0x356540d1
- (void)_setIdentifier:(id)identifier;	// 0x3564ffd9
- (void)_setMarkerAndPositiveErrorVar:(id)var;	// 0x35650419
- (void)_setMultiplier:(float)multiplier;	// 0x3564f9ed
- (void)_setNegativeExtraVar:(id)var;	// 0x3565046d
- (void)_setPrimitiveConstraintType:(int)type;	// 0x35650509
- (void)_setRelation:(int)relation;	// 0x3564f92d
- (void)_setSecondAttribute:(int)attribute;	// 0x3564fb4d
- (void)_setSecondItem:(id)item;	// 0x356540fd
- (void)_setSymbolicConstant:(id)constant;	// 0x35650da1
- (void)_setSymbolicConstant:(id)constant constant:(float)constant2;	// 0x356508a1
- (id)_symbolicConstant;	// 0x35650d01
- (BOOL)_tryToChangeContainerGeometryWithUndoHandler:(id)undoHandler;	// 0x3565058d
// converted property getter: - (id)animations;	// 0x35650149
- (id)asciiArtDescription;	// 0x356512e5
// declared property getter: - (float)constant;	// 0x35650c31
// declared property getter: - (id)container;	// 0x3565053d
- (void)dealloc;	// 0x35650f55
- (id)description;	// 0x35651b6d
- (id)descriptionAccessory;	// 0x356517a5
- (void)encodeWithCoder:(id)coder;	// 0x35651f01
- (id)equationDescription;	// 0x356517a9
// declared property getter: - (int)firstAttribute;	// 0x3564f859
// declared property getter: - (id)firstItem;	// 0x356540bd
// declared property getter: - (BOOL)hasBeenLowered;	// 0x3564ff21
// declared property getter: - (id)identifier;	// 0x35650129
// declared property getter: - (float)multiplier;	// 0x3564f9dd
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)marker;	// 0x356503ed
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x356533bd
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x35650401
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x356503fd
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x35650405
// declared property getter: - (float)priority;	// 0x3564fc29
- (float)priorityForVariable:(id)variable;	// 0x35652a6d
// declared property getter: - (int)relation;	// 0x3564f915
// declared property getter: - (int)secondAttribute;	// 0x3564fb39
// declared property getter: - (id)secondItem;	// 0x356540e9
// converted property setter: - (void)setAnimations:(id)animations;	// 0x35650159
// declared property setter: - (void)setConstant:(float)constant;	// 0x35650ced
// declared property setter: - (void)setContainer:(id)container;	// 0x35650561
- (void)setHasBeenLowered:(BOOL)lowered;	// 0x3564ff35
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x35650139
// declared property setter: - (void)setPriority:(float)priority;	// 0x3564fc39
// declared property setter: - (void)setShouldBeArchived:(BOOL)beArchived;	// 0x3564fc11
// declared property setter: - (void)setSymbolicConstant:(id)constant;	// 0x35650eed
// declared property getter: - (BOOL)shouldBeArchived;	// 0x3564fbfd
// declared property getter: - (id)symbolicConstant;	// 0x35650edd
@end

