/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x355b9da5
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x355b9f1d
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x355b9ead
+ (id)decimalNumberWithString:(id)string;	// 0x355b9f99
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x355b9fed
+ (id)defaultBehavior;	// 0x355baccd
+ (id)maximumDecimalNumber;	// 0x355ba225
+ (id)minimumDecimalNumber;	// 0x355ba1b9
+ (id)notANumber;	// 0x355ba341
+ (id)numberWithBool:(BOOL)aBool;	// 0x355bc369
+ (id)numberWithChar:(BOOL)aChar;	// 0x355bbf35
+ (id)numberWithDouble:(double)aDouble;	// 0x355bc319
+ (id)numberWithFloat:(float)aFloat;	// 0x355bc2cd
+ (id)numberWithInt:(int)int;	// 0x355bc065
+ (id)numberWithInteger:(int)integer;	// 0x355bc0b1
+ (id)numberWithLong:(long)aLong;	// 0x355bc195
+ (id)numberWithLongLong:(long long)longLong;	// 0x355bc22d
+ (id)numberWithShort:(short)aShort;	// 0x355bbfcd
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x355bbf81
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x355bc0fd
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x355bc149
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x355bc1e1
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x355bc27d
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x355bc019
+ (id)one;	// 0x355ba2d1
+ (void)setDefaultBehavior:(id)behavior;	// 0x355bac79
+ (id)zero;	// 0x355ba291
- (id)initWithCoder:(id)coder;	// 0x355ba135
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x355ba081
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x355ba045
- (id)initWithString:(id)string;	// 0x355ba0bd
- (id)initWithString:(id)string locale:(id)locale;	// 0x355ba0f9
- (bool)_getCString:(char *)string length:(int)length multiplier:(double)multiplier;	// 0x355bb0f1
- (BOOL)boolValue;	// 0x355bb0cd
- (BOOL)charValue;	// 0x355baf51
- (Class)classForCoder;	// 0x355bad3d
- (int)compare:(id)compare;	// 0x355ba3b1
- (id)copy;	// 0x355b9e05
- (id)copyWithZone:(NSZone *)zone;	// 0x355b9e15
- (id)decimalNumberByAdding:(id)adding;	// 0x355ba57d
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x355ba5cd
- (id)decimalNumberByDividingBy:(id)by;	// 0x355ba931
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x355ba981
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x355ba859
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x355ba8a9
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x355baae1
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x355bab31
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x355baa09
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x355baa59
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x355babb9
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x355ba731
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x355ba771
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x355ba781
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x355ba7d1
- (XXStruct_9isexA)decimalValue;	// 0x355ba18d
- (id)description;	// 0x355ba171
- (id)descriptionWithLocale:(id)locale;	// 0x355ba185
- (double)doubleValue;	// 0x355ba489
- (void)encodeWithCoder:(id)coder;	// 0x355bad59
- (float)floatValue;	// 0x355bb0a9
- (void)getValue:(void *)value;	// 0x355ba561
- (int)intValue;	// 0x355bafe1
- (BOOL)isEqual:(id)equal;	// 0x355ba431
- (long long)longLongValue;	// 0x355bb071
- (long)longValue;	// 0x355bb029
- (const char *)objCType;	// 0x355ba479
- (short)shortValue;	// 0x355baf99
- (unsigned char)unsignedCharValue;	// 0x355baf75
- (unsigned)unsignedIntValue;	// 0x355bb005
- (unsigned long long)unsignedLongLongValue;	// 0x355bb08d
- (unsigned long)unsignedLongValue;	// 0x355bb04d
- (unsigned short)unsignedShortValue;	// 0x355bafbd
@end

