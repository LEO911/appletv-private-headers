/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSPredicate.h"

@class NSPredicateOperator, NSExpression;

@interface NSComparisonPredicate : NSPredicate {
	void *_reserved2;	// 8 = 0x8
	NSPredicateOperator *_predicateOperator;	// 12 = 0xc
	NSExpression *_lhs;	// 16 = 0x10
	NSExpression *_rhs;	// 20 = 0x14
}
@property(retain) NSPredicateOperator *predicateOperator;	// G=0x3553a4bd; S=0x35550641; converted property
+ (id)predicateWithLeftExpression:(id)leftExpression rightExpression:(id)expression customSelector:(SEL)selector;	// 0x355e0a55
+ (id)predicateWithLeftExpression:(id)leftExpression rightExpression:(id)expression modifier:(unsigned)modifier type:(unsigned)type options:(unsigned)options;	// 0x3553afa1
+ (id)predicateWithPredicateOperator:(id)predicateOperator leftExpression:(id)expression rightExpression:(id)expression3;	// 0x355e0ba5
+ (id)predicateWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightKeyPath:(id)path3;	// 0x355e0b5d
+ (id)predicateWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightValue:(id)value;	// 0x355e0b15
- (id)initWithCoder:(id)coder;	// 0x355e0d1d
- (id)initWithLeftExpression:(id)leftExpression rightExpression:(id)expression customSelector:(SEL)selector;	// 0x355e0a9d
- (id)initWithLeftExpression:(id)leftExpression rightExpression:(id)expression modifier:(unsigned)modifier type:(unsigned)type options:(unsigned)options;	// 0x3553aff5
- (id)initWithPredicateOperator:(id)predicateOperator leftExpression:(id)expression rightExpression:(id)expression3;	// 0x3553a2b5
- (id)initWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightKeyPath:(id)path3;	// 0x355e0e35
- (id)initWithPredicateOperator:(id)predicateOperator leftKeyPath:(id)path rightValue:(id)value;	// 0x355e0ef9
- (void)_acceptExpressions:(id)expressions flags:(unsigned)flags;	// 0x3553a5f9
- (void)_acceptOperator:(id)anOperator flags:(unsigned)flags;	// 0x355e121d
- (void)acceptVisitor:(id)visitor flags:(unsigned)flags;	// 0x3553a551
- (unsigned)comparisonPredicateModifier;	// 0x3553a7ad
- (id)copyWithZone:(NSZone *)zone;	// 0x35550289
- (SEL)customSelector;	// 0x355e1099
- (void)dealloc;	// 0x3553a91d
- (void)encodeWithCoder:(id)coder;	// 0x355e0c21
- (BOOL)evaluateWithObject:(id)object substitutionVariables:(id)variables;	// 0x3553c8b1
- (id)generateMetadataDescription;	// 0x3555721d
- (unsigned)hash;	// 0x355e11ad
- (BOOL)isEqual:(id)equal;	// 0x355e10c1
- (id)keyPathExpressionForString:(id)string;	// 0x355e0bed
- (id)leftExpression;	// 0x3553a435
- (unsigned)options;	// 0x3553a849
- (id)predicateFormat;	// 0x355e0fb9
// converted property getter: - (id)predicateOperator;	// 0x3553a4bd
- (unsigned)predicateOperatorType;	// 0x3553a495
- (id)predicateWithSubstitutionVariables:(id)substitutionVariables;	// 0x355e124d
- (id)rightExpression;	// 0x3553a485
// converted property setter: - (void)setPredicateOperator:(id)anOperator;	// 0x35550641
@end

