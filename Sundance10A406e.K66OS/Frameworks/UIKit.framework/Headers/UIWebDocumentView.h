/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIWebTiledView.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "UIWebFileUploadPanelDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class _UITextServiceSession, UIWebFileUploadPanel, UIColor, UIImage, WebThreadSafeUndoManager, UITextInteractionAssistant, WebViewReachabilityObserver, UIWebRotatingSheet, NSMutableSet, NSArray, NSTimer, UITextChecker, DOMHTMLElement, UILongPressGestureRecognizer, UIAutoscroll, UITapGestureRecognizer, UIPanGestureRecognizer, CALayer, WebView, DOMNode, UITextInputTraits, DOMElement, DOMRange, UITextRange, NSDictionary, UITextPosition, UIView, UIWebSelectionAssistant;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	unsigned _previousScrollWasScrollToTop : 1;	// 545 = 0x221
	unsigned _skipResettingNeedsScrollNotifications : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	UIWebFileUploadPanel *_fileUploadPanel;	// 580 = 0x244
	int _selectionAffinity;	// 584 = 0x248
	DOMElement *_dictationResultPlaceholder;	// 588 = 0x24c
	id _dictationResultPlaceholderRemovalObserver;	// 592 = 0x250
	DOMRange *_rangeToRestoreAfterDictation;	// 596 = 0x254
	_UITextServiceSession *_definitionSession;	// 600 = 0x258
	_UITextServiceSession *_learnSession;	// 604 = 0x25c
	BOOL _suppressesIncrementalRendering;	// 608 = 0x260
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x30a22e69; S=0x30b13fd1; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x30b87cc1; S=0x30b87c51; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30b0d54d; S=0x30b0d551; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x309a894d; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x30b8742d; S=0x30935eb1; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x30934239; S=0x30963d1d; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x309df459; S=0x30964ff1; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x30b07f85; S=0x30b07f2d; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x30965849; converted property
@property(readonly, assign) int documentType;	// G=0x30965835; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x30b0a2b5; S=0x30b0a271; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x30b0a52d; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x309cb9e1; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x309956dd; S=0x309a687d; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x309df2e5; 
@property(assign) id interactionDelegate;	// G=0x30b13e55; S=0x30965001; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x30b0a589; S=0x30a0b4c9; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x30b0a605; S=0x30b0a5ed; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x30b07f15; S=0x30933c91; converted property
@property(retain) id markedText;	// G=0x30a0f6d9; S=0x30a74559; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30934ce5; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30b0e28d; S=0x30b0e291; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x309fac45; S=0x30b0a225; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x30b0e821; S=0x30b0e831; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x3099d8b1; S=0x309df9e5; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x3099d93d; S=0x30b0e4ed; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x30b0e4f1; S=0x309cbd49; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x309d3139; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x30b08361; S=0x30a1798d; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x30b0a211; S=0x30b0a1f9; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x30b0834d; S=0x30b082e5; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x30b0a5dd; S=0x30b0a59d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x30b0e841; S=0x30a17c41; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x30b0c3b9; S=0x30b0c28d; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30934cb9; 
@property(retain) id typingAttributes;	// G=0x30b07869; S=0x30b0799d; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x30995729; converted property
@property(assign) BOOL updatesScrollView;	// G=0x30b088ad; S=0x30b08895; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x30b0d431; converted property
@property(readonly, retain) WebView *webView;	// G=0x30933801; converted property
+ (id)_createDefaultHighlightView;	// 0x30a05b51
+ (id)_sharedHighlightView;	// 0x30a05b19
+ (double)getTimestamp;	// 0x30b07569
+ (BOOL)hasLandscapeOrientation;	// 0x3096a805
+ (void)initialize;	// 0x3091e6a9
+ (Class)layerClass;	// 0x309320d1
+ (id)standardTextViewPreferences;	// 0x309317e9
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x30931981
- (id)initWithFrame:(CGRect)frame;	// 0x30962869
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x30931add
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x309fa8e9
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x30a22e69
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x30b12bed
- (void)_addAdditionalSubview:(id)subview;	// 0x30b09735
- (void)_addShortcut:(id)shortcut;	// 0x30b0cf4d
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x30a05f29
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x309667bd
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x30b15781
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x30b15a25
- (void)_cancelLongPressGestureRecognizer;	// 0x30a05d71
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x309fa09d
- (void)_cleanupSheet;	// 0x30a0d265
- (void)_clearAllConsoleMessages;	// 0x30b0a57d
- (void)_clearDoubleTapRect;	// 0x30968249
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x30b0d8d1
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x30b0db9d
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x30b147cd
- (BOOL)_dataDetectionIsActivated;	// 0x30963dd9
- (void)_define:(id)define;	// 0x30b0ce25
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x30b0ad69
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x30936129
- (void)_didScroll;	// 0x30a05751
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x30b07645
- (float)_documentScale;	// 0x309fbc0d
- (id)_documentUrl;	// 0x30b0e505
- (CGRect)_documentViewVisibleRect;	// 0x30964c8d
- (id)_doubleTapGestureRecognizer;	// 0x30b13fbd
- (void)_doubleTapRecognized:(id)recognized;	// 0x30b12b65
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30b16261
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x309dccb9
- (void)_finishedUsingDictationPlaceholder;	// 0x30b0b3fd
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x30b0dcdd
- (id)_focusedOrMainFrame;	// 0x3093395d
- (id)_groupName;	// 0x30a6f8c9
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x30b0a4b5
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x30b0a2d9
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x30b0a4f1
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x30b09c1d
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x30b12d71
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x30b07591
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x30b075a9
- (BOOL)_isInspectorSearchingForNode;	// 0x309fc16d
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x30a20b01
- (CGRect)_lastRectForRange:(id)range;	// 0x30a1d305
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x30964a6d
- (void)_longPressRecognized:(id)recognized;	// 0x30b12e51
- (NSRange)_markedTextNSRange;	// 0x30b0bfc5
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x30b09669
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x30b095fd
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x30932369
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x30b08b85
- (void)_notifyPlugInViewsOfDidZoom;	// 0x30b08c99
- (void)_notifyPlugInViewsOfScaleChange;	// 0x30964909
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x30b08a75
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x30b09bdd
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x30b09ad9
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x30b09a75
- (id)_parentTextView;	// 0x309a6b69
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30b0e1a1
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x30b075e1
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x30b15379
- (Class)_printFormatterClass;	// 0x30c26f21
- (void)_promptForReplace:(id)replace;	// 0x30b0d3d9
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x3096ac01
- (void)_removeAdditionalSubview:(id)subview;	// 0x30b097a1
- (void)_removeDefinitionController:(BOOL)controller;	// 0x3099da19
- (void)_removeShortcutController:(BOOL)controller;	// 0x30b075c1
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x30b09ca5
- (void)_resetForNewPage;	// 0x3096a0ad
- (void)_resetFormDataForFrame:(id)frame;	// 0x30b0a579
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x30a21ca1
- (void)_resetShowingTextStyle:(id)style;	// 0x30a2c17d
- (void)_reshapePlugInViews;	// 0x30936771
- (id)_responderForBecomeFirstResponder;	// 0x30b0a6c5
- (void)_restoreFlattenedContentLayers;	// 0x30b0de61
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x3096a359
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x30933549
- (void)_runLoadBlock:(id)block;	// 0x309fa121
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x309691b9
- (id)_scriptingInfoForForm:(id)form;	// 0x30b0ead1
- (id)_scriptingInfoForLink:(id)link;	// 0x30b0e855
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30b0e229
- (CGRect)_selectionClipRect;	// 0x30b0c899
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x309dcc75
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x30b134bd
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x30b13fd1
- (void)_setDocumentScale:(float)scale;	// 0x309645a9
- (void)_setDocumentType:(int)type;	// 0x30963e15
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x30963e35
- (void)_setFont:(id)font;	// 0x30b076a1
- (void)_setParentTextView:(id)view;	// 0x30933eb1
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x309fbbf5
- (void)_setTextColor:(id)color;	// 0x30b07771
- (CGRect)_shortcutPresentationRect;	// 0x30b0cd7d
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x30b0da89
- (BOOL)_shouldResetForNewPage;	// 0x3096a06d
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x30933ab9
- (BOOL)_shouldUseInitialScale;	// 0x30b0d891
- (void)_showDataDetectorsSheet;	// 0x30b14fc5
- (void)_showImageSheet;	// 0x30b14a81
- (void)_showLinkSheet;	// 0x30b14d5d
- (void)_showPendingContentLayers;	// 0x3096a6f9
- (void)_showTextStyleOptions:(id)options;	// 0x30b0cbc1
- (void)_singleTapRecognized:(id)recognized;	// 0x30a21bf1
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x309c4865
- (id)_targetURL;	// 0x30b13a41
- (id)_textSelectingContainer;	// 0x309dfd09
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x30b12ba9
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x30b12ec9
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x30b0a881
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x30b0a7d5
- (void)_updateFixedPositionContent;	// 0x30a05ead
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x30b08ded
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x3096a6a5
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x30964a55
- (void)_updateScrollViewBoundaryZoomScales;	// 0x30933f9d
- (void)_updateSize;	// 0x309684a9
- (void)_updateSubviewCaches;	// 0x309fbc1d
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x309fb515
- (float)_zoomedDocumentScale;	// 0x30967f9d
- (void)actionDidFinish;	// 0x30b14f75
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x30b13af1
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x30b13ba1
- (void)addInputString:(id)string;	// 0x30b0a969
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x30b0a92d
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x30a22919
- (id)asText;	// 0x30b887dd
- (void)assistFormNode:(id)node;	// 0x30b0a565
- (void)attemptClick:(id)click;	// 0x30a229cd
- (id)automaticallySelectedOverlay;	// 0x30a2088d
- (CGRect)autoscrollContentFrame;	// 0x30b0d525
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x30b87cc1
- (CGRect)autoscrollDragFrame;	// 0x30b0d501
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30b0e4c9
- (BOOL)becomeFirstResponder;	// 0x30a22ce5
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30b0d54d
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x30b15f71
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x30b15d6d
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x30b15f09
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x30b15ce1
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x30b15d11
- (void)beginSelectionChange;	// 0x3099c82d
// declared property getter: - (id)beginningOfDocument;	// 0x309a894d
- (BOOL)canBecomeFirstResponder;	// 0x30a22e51
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x309c3c2d
- (BOOL)canResignFirstResponder;	// 0x30b0a691
- (void)cancelAutoscroll;	// 0x30b8854d
- (void)cancelInteraction;	// 0x30a21d21
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x30a05929
- (BOOL)cancelMouseTracking;	// 0x30b08a05
- (BOOL)cancelTouchTracking;	// 0x30b08a3d
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x30b8742d
- (CGRect)caretRect;	// 0x309e0f49
- (CGRect)caretRectForPosition:(id)position;	// 0x3099f1c5
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x3099f471
- (unsigned short)characterAfterCaretSelection;	// 0x309d319d
- (unsigned short)characterBeforeCaretSelection;	// 0x309d316d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30b0ba29
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30b0e369
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30b0e45d
- (id)checkSpellingOfString:(id)string;	// 0x30a19c45
- (void)clearInteractionTimer;	// 0x30a05ad9
- (void)clearRangedSelectionInitialExtent;	// 0x30b8756d
- (void)clearSelection;	// 0x30b871a9
- (BOOL)clearWKFirstResponder;	// 0x30a1a2f9
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x30b87249
- (id)closestPositionToPoint:(CGPoint)point;	// 0x309cb2d5
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30b0e299
- (void)collapseSelection;	// 0x30b873d9
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x309cb685
- (void)completeInteraction;	// 0x30a0d2f5
- (void)confirmMarkedText:(id)text;	// 0x30b0b9a1
- (BOOL)considerHeightForDoubleTap;	// 0x30b0e70d
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30b166e1
- (BOOL)containsOnlySelectableElements;	// 0x30b0dee1
- (CGRect)contentFrameForView:(id)view;	// 0x30b87d3d
- (id)contentView;	// 0x30b0e579
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x30b128f1
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x30b0c561
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x30b081e5
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x30b0819d
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x309cb3b5
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x30b08289
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x30b0822d
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x3099f56d
- (void)copy:(id)copy;	// 0x30b0caad
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x30b0898d
- (float)currentDocumentScale;	// 0x30b0e58d
- (void)cut:(id)cut;	// 0x30b0c9e1
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x30934239
- (void)dealloc;	// 0x30a0cd4d
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x30b136fd
- (void)deferInteraction;	// 0x30b139f1
- (void)deferredBecomeFirstResponder;	// 0x30b0a695
// converted property getter: - (id)delegate;	// 0x309df459
- (void)deleteBackward;	// 0x30b0a9b5
- (void)deleteFromInput;	// 0x30b0a97d
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x30b07f85
- (id)dictationInterpretations;	// 0x30b0b731
- (id)dictationResultMetadataForRange:(id)range;	// 0x30b0ad09
- (void)didEndScroll;	// 0x30b0d651
- (void)didEndZoom;	// 0x30b0d7d5
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x30b07c29
- (void)didMoveToSuperview;	// 0x30933f89
- (void)didRemovePlugInView:(id)view;	// 0x309fc31d
- (void)didRotateInteractionSheet;	// 0x30b0a191
- (void)didZoom;	// 0x30b0d77d
- (void)disableClearsOnInsertion;	// 0x30a19309
// converted property getter: - (CGRect)documentBounds;	// 0x30965849
// converted property getter: - (int)documentType;	// 0x30965835
// converted property getter: - (CGRect)doubleTapRect;	// 0x30b0a52d
- (BOOL)doubleTapRectIsReplaced;	// 0x30b0a551
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x30b0e6ad
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30b1649d
- (unsigned)effectiveDataDetectorTypes;	// 0x30a17dd1
- (void)enableReachability;	// 0x30962fbd
- (id)enclosingScrollView;	// 0x30b0e569
// declared property getter: - (id)endOfDocument;	// 0x309cb9e1
- (void)endPrintMode;	// 0x30b160dd
- (void)endSelectionChange;	// 0x3099de1d
- (void)ensureSelection;	// 0x30a185ed
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30b0bea5
- (void)extendCurrentSelection:(int)selection;	// 0x30b0c081
- (void)fileUploadPanelDidDismiss:(id)fileUploadPanel;	// 0x30b08855
- (CGRect)firstRectForRange:(id)range;	// 0x30a1cced
- (id)fontForCaretSelection;	// 0x30a1e36d
- (void)forceLayout;	// 0x30b088c1
- (id)formElement;	// 0x309cb421
- (void)forwardInvocation:(id)invocation;	// 0x309636b9
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x30b09131
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30b0b36d
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x30a21a49
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x30a21909
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x30a20a99
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x30a2197d
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x30a215dd
- (int)getPasteboardChangeCount;	// 0x30b0945d
- (int)getPasteboardItemsCount;	// 0x30b090fd
- (void)handleKeyWebEvent:(id)event;	// 0x30b0c621
- (BOOL)hasContent;	// 0x309363b1
- (BOOL)hasDrawnTiles;	// 0x3096653d
- (BOOL)hasEditableSelection;	// 0x309c4409
- (BOOL)hasMarkedText;	// 0x30b871fd
- (BOOL)hasPlugInSubviews;	// 0x30b0c7f5
- (BOOL)hasRangedSelection;	// 0x30b0ad49
- (BOOL)hasRichlyEditableSelection;	// 0x309d2ff9
- (BOOL)hasSelection;	// 0x30933921
- (BOOL)hasSimpleTextOnlyStructure;	// 0x30b0df1d
- (BOOL)hasText;	// 0x30a108b1
- (void)hideTapHighlight;	// 0x30b137b5
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x30b137f9
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x30a21d3d
- (id)hostViewForSheet:(id)sheet;	// 0x30b153cd
- (id)implementationWebView;	// 0x30b0c575
- (BOOL)inPopover;	// 0x30b0d441
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x30b153dd
- (float)initialScale;	// 0x309643e1
// declared property getter: - (id)inputDelegate;	// 0x309956dd
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x30b0aa91
- (id)insertDictationResultPlaceholder;	// 0x30b0add1
- (void)insertText:(id)text;	// 0x30a0f015
- (void)installGestureRecognizers;	// 0x309324d9
- (float)integralScaleForScale:(float)scale;	// 0x30964845
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x3096485d
// declared property getter: - (id)interactionAssistant;	// 0x309df2e5
// converted property getter: - (id)interactionDelegate;	// 0x30b13e55
- (id)interactionElement;	// 0x30b13e81
- (CGPoint)interactionLocation;	// 0x30b13e95
- (BOOL)isCaretInEmptyParagraph;	// 0x309d30d9
- (BOOL)isClassicViewportMode;	// 0x30b08375
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x30b0a2b5
- (BOOL)isEditable;	// 0x30a16ded
- (BOOL)isEditing;	// 0x309e3b59
- (BOOL)isEditingSingleLineElement;	// 0x30b0a9f9
- (BOOL)isInInteraction;	// 0x30a5af79
- (BOOL)isInPrintMode;	// 0x30b1562d
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x30a70299
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x309cb945
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x309cb97d
- (BOOL)isShowingFullScreenPlugInUI;	// 0x3096b5f9
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x30b0a589
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x30b09491
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x30b0a605
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x30a188a9
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x30a741f9
- (BOOL)keyboardInputChanged:(id)changed;	// 0x309e37e5
- (void)keyboardInputChangedSelection:(id)selection;	// 0x309df379
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x30b0c57d
- (void)layoutSubviews;	// 0x30936465
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x30b07de1
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x30a16d35
- (void)loadRequest:(id)request;	// 0x309fa045
// converted property getter: - (BOOL)loadsSynchronously;	// 0x30b07f15
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x30b0d421
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x30b0d411
- (BOOL)makeWKFirstResponder;	// 0x309df58d
// converted property getter: - (id)markedText;	// 0x30a0f6d9
// declared property getter: - (id)markedTextRange;	// 0x30934ce5
// declared property getter: - (id)markedTextStyle;	// 0x30b0e28d
- (float)maximumDoubleTapScale;	// 0x30b0d885
- (float)maximumScale;	// 0x30b08189
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x309fac45
- (id)metadataDictionariesForDictationResults;	// 0x309dd5fd
- (id)methodSignatureForSelector:(SEL)selector;	// 0x30963669
- (float)minimumScale;	// 0x3096431d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x30b07fb5
- (float)minimumScaleForSize:(CGSize)size;	// 0x30b0e5dd
- (BOOL)mouseEventsChangeSelection;	// 0x30b166c9
- (void)moveBackward:(unsigned)backward;	// 0x30b0c161
- (void)moveForward:(unsigned)forward;	// 0x30b0c1cd
- (BOOL)needsScrollNotifications;	// 0x30b08389
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x30b089b1
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30b0bdf5
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x309e36e1
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x30b8730d
- (void)paste:(id)paste;	// 0x30b0d0fd
- (void)performClick:(id)click;	// 0x30b12f99
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x30b12859
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x30b09181
- (BOOL)playsNicelyWithGestures;	// 0x30a16f49
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x30b887e1
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30b0e201
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x309dffb5
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x309a88f1
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30b0e3f1
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x30b15459
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30b0bd8d
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30b0c04d
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30b0c019
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x309a871d
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30b0dff9
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x30b0e821
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x30b0938d
- (CGRect)rectContainingCaretSelection;	// 0x30b0bce5
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30b0ba9d
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x30b0e5ed
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x30b0bb31
- (void)redrawScaledDocument;	// 0x30b09e51
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30b0b435
- (void)replace:(id)replace;	// 0x30b0d305
- (void)replaceCurrentWordWithText:(id)text;	// 0x30b0b83d
- (void)replaceRange:(id)range withText:(id)text;	// 0x30b0e0dd
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x30b0b769
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30a74461
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x30b0bf2d
- (BOOL)requiresKeyEvents;	// 0x309b5775
- (void)resetInteraction;	// 0x30a05aa1
- (void)resetTilingAfterLoadComplete;	// 0x30968f7d
- (BOOL)resignFirstResponder;	// 0x30995de9
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x3099dde5
- (void)saveStateToCurrentHistoryItem;	// 0x30969165
- (id)scriptingInfoWithChildren;	// 0x309f8ed9
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x30b8856d
- (void)scrollViewWasRemoved;	// 0x30a08e0d
- (void)select:(id)select;	// 0x30b0d269
- (void)selectAll;	// 0x30b0c239
- (void)selectAll:(id)all;	// 0x30b0d2b5
- (void)selectWord;	// 0x30b87155
- (id)selectedDOMRange;	// 0x3099d909
// declared property getter: - (id)selectedTextRange;	// 0x3099d8b1
// declared property getter: - (int)selectionAffinity;	// 0x3099d93d
- (BOOL)selectionAtDocumentStart;	// 0x30b0c101
- (BOOL)selectionAtWordStart;	// 0x30b0c131
- (int)selectionBaseWritingDirection;	// 0x309de1d1
- (void)selectionChanged;	// 0x3099cbb5
- (void)selectionChanged:(id)changed;	// 0x3099cab5
// declared property getter: - (int)selectionGranularity;	// 0x30b0e4f1
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x30b87bf1
- (NSRange)selectionRange;	// 0x30a741b9
- (id)selectionRects;	// 0x30b87909
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x309cc401
- (id)selectionRectsForRange:(id)range;	// 0x30a70069
// declared property getter: - (int)selectionState;	// 0x309d3139
- (id)selectionView;	// 0x30b0c84d
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x309fa98d
- (void)sendScrollEventIfNecessary;	// 0x30b0839d
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x30a06009
- (void)sendScrollWheelEvents;	// 0x30b13bed
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x30a5a909
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x309650b1
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x30b13e69
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x30933781
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x30963dfd
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x30b87c51
- (void)setBaseWritingDirection:(int)direction;	// 0x30b874a9
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x309e0039
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30b0d551
- (void)setBottomBufferHeight:(float)height;	// 0x30b0c5f1
- (void)setCaretChangeListener:(id)listener;	// 0x30b0c531
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x30935eb1
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x309a7641
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x30963d1d
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x30964ff1
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x30b07f2d
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x30b0a271
- (void)setDrawsBackground:(BOOL)background;	// 0x30933f05
- (void)setFrame:(CGRect)frame;	// 0x30932131
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x30933bf9
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x30a17971
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x30b086fd
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x309336cd
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x309a687d
- (void)setInteractionAssistantGestureRecognizers;	// 0x30b0a6f5
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x30965001
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x30a0b4c9
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x30b0a5ed
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x30933c91
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30a74559
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30b0b905
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30b0e291
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30933745
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x30b0a225
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30933709
- (void)setMinimumSize:(CGSize)size;	// 0x30933525
- (void)setMinimumSize:(CGSize)size updateCurrentViewportConfigurationSize:(BOOL)size2;	// 0x30b08719
- (void)setOpaque:(BOOL)opaque;	// 0x30933ec1
- (void)setPaused:(BOOL)paused;	// 0x30b0c65d
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x3096b611
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x30b0e831
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x30b874dd
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x30b8753d
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x30b8750d
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x30b875fd
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x30b8769d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x30b875cd
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x30b8759d
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x30b87ac5
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x30b87851
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x309dfab1
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x309df9e5
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30b0df59
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30b0e4ed
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x309cbd49
- (void)setSelectionToEnd;	// 0x30b87b49
- (void)setSelectionToStart;	// 0x30b87b9d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x30b87739
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30b88571
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x30a1798d
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x30b0a1f9
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x30b082e5
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x30965019
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x30b0a59d
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x30a17c41
// converted property setter: - (void)setText:(id)text;	// 0x30b0c28d
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x309665bd
- (void)setTilingArea:(int)area;	// 0x30965329
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x30b0799d
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x30b08895
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x30b07f99
- (void)setUserStyleSheet:(id)sheet;	// 0x30a6f7d5
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x309337b9
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x30b08361
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x30b0a211
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x30b0e731
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x30b0834d
- (void)smartExtendRangedSelection:(int)selection;	// 0x30b87a91
// converted property getter: - (id)standaloneEditingElement;	// 0x30b0a5dd
- (BOOL)startActionSheet;	// 0x30b129c1
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x30b87d75
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x30b128bd
- (void)stopLoading:(id)loading;	// 0x30a17be1
- (id)subviews;	// 0x309339e9
- (id)superviewForSheet;	// 0x30b13eb1
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x309c482d
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x30b13d55
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x30b0e841
- (void)takeTraitsFrom:(id)from;	// 0x30b0c821
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x30b12919
// converted property getter: - (id)text;	// 0x30b0c3b9
- (id)textColorForCaretSelection;	// 0x30b0ba61
- (id)textFormElement;	// 0x30b0a585
- (id)textInDOMRange:(id)domrange;	// 0x30b878d5
- (id)textInRange:(id)range;	// 0x309a8aad
- (id)textInputTraits;	// 0x30933051
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x309a8a09
- (void)toggleBaseWritingDirection;	// 0x30b87455
- (void)toggleBoldface:(id)boldface;	// 0x30b0cadd
- (void)toggleItalics:(id)italics;	// 0x30b0cb29
- (void)toggleUnderline:(id)underline;	// 0x30b0cb75
// declared property getter: - (id)tokenizer;	// 0x30934cb9
// converted property getter: - (id)typingAttributes;	// 0x30b07869
// converted property getter: - (id)undoManager;	// 0x30995729
- (id)undoManagerForWebView:(id)webView;	// 0x3099574d
- (void)unmarkText;	// 0x30a0f821
- (void)updateInteractionElements;	// 0x30b0a099
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x30b0a619
- (void)updateSelection;	// 0x30b0c895
// converted property getter: - (BOOL)updatesScrollView;	// 0x30b088ad
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x3096315d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x30b12969
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x30963fa9
- (float)viewportHeight;	// 0x30964ef9
- (float)viewportWidth;	// 0x309644b5
- (CGRect)visibleBounds;	// 0x30b88621
- (CGRect)visibleContentFrame;	// 0x30b0d4dd
- (CGRect)visibleContentRect;	// 0x30b0e59d
- (CGRect)visibleFrame;	// 0x30b0d4b9
// converted property getter: - (id)webSelectionAssistant;	// 0x30b0d431
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x3093386d
// converted property getter: - (id)webView;	// 0x30933801
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x30b086a9
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x30966e61
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x30b09809
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x30b085e5
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x30968c25
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x30933815
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x30b0c779
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x30b136cd
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x309fa7d1
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x30966761
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x30a060b9
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x309fa9f9
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x30967ff1
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x30b08535
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x309fa55d
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x3099da99
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x309fb375
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x30b099e5
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x30b0c725
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x30936549
- (void)webViewDidDrawTiles:(id)webView;	// 0x30936849
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x30b084f5
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x30b136f5
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x30b085cd
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x30b084b5
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x30931a59
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x309cb321
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x30b12aa5
- (void)willMoveToSuperview:(id)superview;	// 0x30933f69
- (void)willRotateInteractionSheet;	// 0x30b0a12d
- (void)willStartScroll;	// 0x30b0d559
- (void)willStartScrollToTop;	// 0x30b0d5dd
- (void)willStartZoom;	// 0x30b0d711
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x30b0e7d1
- (void)willZoomToMinimumScale;	// 0x30b0e721
- (id)wordAtPoint:(CGPoint)point;	// 0x30b877f1
- (id)wordContainingCaretSelection;	// 0x30b0be5d
- (int)wordOffsetInRange:(id)range;	// 0x30b0bef9
- (id)wordRangeContainingCaretSelection;	// 0x30b0bd5d
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x30b09005
- (float)zoomedDocumentScale;	// 0x30b0e57d
@end

