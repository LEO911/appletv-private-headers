/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x30b5e1b5; S=0x30b5e1ad; converted property
@property(assign) unsigned phraseBoundary;	// G=0x30b5e1e5; S=0x30b5e1e1; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x30b5e1f1; S=0x309b37e9; converted property
+ (id)activeInstance;	// 0x309b4a2d
+ (void)clearAllCentroids;	// 0x309b49f9
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x30b5e40d
+ (id)keyboardUserDirectory;	// 0x30b5e38d
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x309b4b45
+ (void)releaseSharedInstance;	// 0x30938cc5
+ (void)removeAllDynamicDictionaries;	// 0x30b5e52d
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x30b5e49d
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x309a2edd
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x30b5e3d9
- (void)acceptInput;	// 0x30b5e19d
- (BOOL)acceptInputString:(id)string;	// 0x309d72e9
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x30b5e1c9
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x30b5e275
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x30a0ef6d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x30b5e181
- (id)addInputObject:(id)object;	// 0x30b5e685
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x30b5e265
- (void)appendToInputContext:(id)inputContext;	// 0x30b5e1a1
- (id)autocorrection;	// 0x30b5e1d1
- (BOOL)canHandleKeyHitTest;	// 0x30b5e71d
- (void)candidateRejected:(id)rejected;	// 0x30b5e37d
- (id)candidates;	// 0x30b5e1d9
- (id)candidatesForString:(id)string;	// 0x30b5e1d5
- (CFArrayRef)chargeableKeys;	// 0x30b5e67d
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x30b5e681
- (void)clearAllCentroids;	// 0x30b5e735
- (void)clearDynamicDictionary;	// 0x30b5e389
- (void)clearInput;	// 0x30b5e199
- (void)clearInputContext;	// 0x30b5e1a9
- (void)clearKeyAreas;	// 0x30b5e721
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x30b5e291
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x309a58f5
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x30b5e295
- (id)defaultCandidate;	// 0x30b5e1f9
- (unsigned)defaultCandidateIndex;	// 0x30b5e1fd
- (id)deleteFromInput:(unsigned *)input;	// 0x30b5e191
- (void)deleteFromStrokeHistory;	// 0x30b5e72d
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x30b5e269
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x30b5e26d
- (BOOL)ignoresDeadKeys;	// 0x30b5e36d
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x30b5e271
- (unsigned)inputCount;	// 0x30b5e1b9
- (BOOL)inputEmpty;	// 0x30b5e1bd
// converted property getter: - (unsigned)inputIndex;	// 0x30b5e1b5
- (void)inputLocationChanged;	// 0x30b5e1c5
- (id)inputString;	// 0x30b5e1c1
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x30b5e729
- (void)lastAcceptedCandidateCorrected;	// 0x30b5e381
- (unsigned)maximumShortcutLengthAllowed;	// 0x30b5e741
- (BOOL)nextInputWouldStartSentence;	// 0x30b5e251
// converted property getter: - (unsigned)phraseBoundary;	// 0x30b5e1e5
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x30b5e731
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x30b5e725
- (id)remainingInput;	// 0x30b5e1dd
- (id)remapKeyWithString:(id)string stringWithoutModifiers:(id)modifiers modifierFlags:(unsigned)flags;	// 0x309da3b1
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x30b5e1a5
- (id)searchStringForMarkedText;	// 0x30b5e205
- (void)setAutoCorrects:(BOOL)corrects;	// 0x30b5e27d
- (void)setAutocapitalizationType:(int)type;	// 0x30b5e281
- (void)setAutocorrectionHistory:(id)history;	// 0x30b5e385
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x30b5e679
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x30b5e289
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x30b5e28d
- (void)setInput:(id)input;	// 0x30b5e18d
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x30b5e1ad
- (id)setInputObject:(id)object;	// 0x30b5e6d1
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x30b5e285
- (void)setLearnsCorrection:(BOOL)correction;	// 0x30b5e369
- (void)setOriginalInput:(id)input;	// 0x30b5e371
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x30b5e1e1
- (void)setTypologyRecorder:(id)recorder;	// 0x30b5e739
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x309b37e9
- (id)shadowTyping;	// 0x30b5e675
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x30b5e745
- (BOOL)shouldAcceptCandidate:(id)candidate;	// 0x30b5e379
- (BOOL)shouldExtendPriorWord;	// 0x309cb10d
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x30b5e255
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x30b5e259
- (id)sortingMethods;	// 0x30b5e25d
- (BOOL)stringEndsWord:(id)word;	// 0x309dc5b1
- (id)stringForDoubleKey:(id)doubleKey;	// 0x30b5e219
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x30b5e1cd
- (BOOL)suppliesCompletions;	// 0x30b5e211
- (BOOL)supportsNumberKeySelection;	// 0x30b5e279
- (BOOL)supportsSetPhraseBoundary;	// 0x30b5e1ed
- (BOOL)supportsShortcutConversion;	// 0x30b5e73d
- (BOOL)suppressCompletionsForFieldEditor;	// 0x30b5e215
- (BOOL)suppressesCandidateDisplay;	// 0x309dc62d
- (void)textAccepted:(id)accepted;	// 0x30b5e375
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x30b5e261
- (BOOL)usesAutoDeleteWord;	// 0x30b5e1f5
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x30b5e1f1
- (unsigned)wordHistoryDepth;	// 0x30b5e1b1
@end

