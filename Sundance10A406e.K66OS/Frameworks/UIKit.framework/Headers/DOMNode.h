/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"
#import <DOMNode.h> // Unknown library

@class UIResponder, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x30aeab21
- (id)createPickerCell;	// 0x30aeab29
- (id)createSelectedItem;	// 0x30aeab25
- (id)itemTitle;	// 0x30aeab31
- (void)populateCell:(id)cell;	// 0x30aeab2d
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x30b020b9
- (id)urlScheme;	// 0x30b02111
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x30b0f171
- (BOOL)isSecure;	// 0x30b0f281
- (BOOL)isTextControl;	// 0x30b0f27d
- (int)keyboardType;	// 0x30b0f285
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30b10ebd; S=0x30b10ec1; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x30b110e9; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x30b10899; S=0x30b1089d; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30b11121; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x30b108b1; S=0x30b108b5; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30b11bd1; S=0x30b11c29; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x30b10e0d; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x30b0fb11; S=0x30b0f7a5; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30b117dd; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30b11d69; S=0x30b11d6d; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x30b108a9; S=0x30b108ad; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x30b10f1d; S=0x30b11075; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30b12175; S=0x30b121cd; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x30b105dd; S=0x30b10549; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x30b108a1; S=0x30b108a5; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x30b10891; S=0x30b10895; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x30b0f4f9; S=0x30b0f4fd; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30b11bcd; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x30b114ed
- (NSRange)_markedTextNSRange;	// 0x30b1008d
- (id)_textSelectingContainer;	// 0x30b10ec5
- (void)acceptedAutoFillWord:(id)word;	// 0x30b10d59
- (id)automaticallySelectedOverlay;	// 0x30b108b9
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30b11f81
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30b10ebd
- (void)beginSelectionChange;	// 0x30b0f499
// declared property getter: - (id)beginningOfDocument;	// 0x30b110e9
- (CGRect)caretRect;	// 0x30b106ed
- (CGRect)caretRectForPosition:(id)position;	// 0x30b11c85
- (unsigned short)characterAfterCaretSelection;	// 0x30b0fd35
- (unsigned short)characterBeforeCaretSelection;	// 0x30b0f765
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30b0f721
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30b11e31
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30b11f15
- (id)closestPositionToPoint:(CGPoint)point;	// 0x30b11d71
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30b11dd1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x30b118f5
- (void)confirmMarkedText:(id)text;	// 0x30b0f911
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30b10d29
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x30b10449
- (id)content;	// 0x30b10eb1
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x30b10899
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x30b10801
- (id)delegate;	// 0x30b0f44d
- (void)deleteBackward;	// 0x30b0f501
- (BOOL)editable;	// 0x30b1216d
- (BOOL)editing;	// 0x30b12171
// declared property getter: - (id)endOfDocument;	// 0x30b11121
- (void)endSelectionChange;	// 0x30b0f4c9
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30b0fff1
- (void)extendCurrentSelection:(int)selection;	// 0x30b10261
- (CGRect)firstRectForRange:(id)range;	// 0x30b113d5
- (id)fontForCaretSelection;	// 0x30b0fd79
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30b0f6dd
- (void)handleKeyWebEvent:(id)event;	// 0x30b0f455
- (BOOL)hasContent;	// 0x30b0f2b5
- (BOOL)hasSelection;	// 0x30b102f1
- (BOOL)hasText;	// 0x30b118dd
// converted property getter: - (int)initialSelectionBehavior;	// 0x30b108b1
// declared property getter: - (id)inputDelegate;	// 0x30b11bd1
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x30b0f62d
- (id)insertDictationResultPlaceholder;	// 0x30b0f685
- (void)insertText:(id)text;	// 0x30b0f575
// declared property getter: - (id)interactionAssistant;	// 0x30b10e0d
- (BOOL)isAutoFillMode;	// 0x30b10db5
- (BOOL)isEditable;	// 0x30b10eb5
- (BOOL)isEditing;	// 0x30b10eb9
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x30b11a39
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x30b11aed
- (BOOL)isShowingPlaceholder;	// 0x30b1088d
// converted property getter: - (id)markedText;	// 0x30b0fb11
// declared property getter: - (id)markedTextRange;	// 0x30b117dd
// declared property getter: - (id)markedTextStyle;	// 0x30b11d69
- (id)metadataDictionariesForDictationResults;	// 0x30b0f65d
- (void)moveBackward:(unsigned)backward;	// 0x30b103a1
- (void)moveDown;	// 0x30b11769
- (void)moveForward:(unsigned)forward;	// 0x30b103a5
- (void)moveLeft;	// 0x30b11681
- (void)moveRight;	// 0x30b1160d
- (void)moveUp;	// 0x30b116f5
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30b0ff2d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x30b11931
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30b119d9
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30b1196d
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x30b11a81
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30b11ead
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30b0ff01
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30b10225
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30b101e9
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x30b11b35
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30b11245
- (CGRect)rectContainingCaretSelection;	// 0x30b0fe7d
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30b0fa01
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x30b0faad
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30b0f6ad
- (void)replaceCurrentWordWithText:(id)text;	// 0x30b0fc65
- (void)replaceRange:(id)range withText:(id)text;	// 0x30b1138d
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x30b11291
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x30b0fb81
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30b113b1
- (BOOL)requiresKeyEvents;	// 0x30b0f451
// declared property getter: - (int)returnKeyType;	// 0x30b108a9
- (void)selectAll;	// 0x30b103a9
- (id)selectedDOMRange;	// 0x30b10139
// declared property getter: - (id)selectedTextRange;	// 0x30b10f1d
// declared property getter: - (int)selectionAffinity;	// 0x30b12175
- (BOOL)selectionAtDocumentStart;	// 0x30b10331
- (BOOL)selectionAtWordStart;	// 0x30b10369
- (NSRange)selectionRange;	// 0x30b100ed
- (id)selectionRectsForRange:(id)range;	// 0x30b11f89
- (int)selectionState;	// 0x30b10409
- (id)selectionView;	// 0x30b10e85
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30b11f85
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30b10ec1
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x30b1089d
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x30b108b5
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x30b11c29
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30b0f7a5
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30b0f855
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30b11d6d
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x30b108ad
- (void)setSecure:(BOOL)secure;	// 0x30b0f449
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x30b10171
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30b11075
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30b10f8d
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30b121cd
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30b106c9
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x30b1062d
// converted property setter: - (void)setText:(id)text;	// 0x30b10549
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x30b108a5
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x30b10895
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x30b0f4fd
- (void)setupPlaceholderTextIfNeeded;	// 0x30b0f2f5
- (void)takeTraitsFrom:(id)from;	// 0x30b0f289
// converted property getter: - (id)text;	// 0x30b105dd
- (id)textColorForCaretSelection;	// 0x30b0fe61
- (id)textDocument;	// 0x30b121d1
- (id)textInRange:(id)range;	// 0x30b11159
- (id)textInputTraits;	// 0x30b0f2f9
// declared property getter: - (int)textLoupeVisibility;	// 0x30b108a1
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30b111ad
// declared property getter: - (id)textSuggestionDelegate;	// 0x30b10891
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x30b0f4f9
// declared property getter: - (id)tokenizer;	// 0x30b11bcd
- (id)uiWebDocumentView;	// 0x30b0f5e5
- (void)unmarkText;	// 0x30b11859
- (void)updateAutoscroll:(id)autoscroll;	// 0x30b10901
- (void)updateSelection;	// 0x30b10ead
- (id)wordContainingCaretSelection;	// 0x30b0ff99
- (int)wordOffsetInRange:(id)range;	// 0x30b10051
- (id)wordRangeContainingCaretSelection;	// 0x30b0ff59
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x30b731b9
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x30b73379
- (BOOL)alwaysAttemptToShowTapHighlight;	// 0x30b7331d
- (BOOL)isLikelyToBeginPageLoad;	// 0x30b73389
- (BOOL)nodeCanBecomeFirstResponder;	// 0x30b7338d
- (BOOL)showsTapHighlight;	// 0x30b73319
- (id)tapHighlightColor;	// 0x30b73335
- (BOOL)touchCalloutEnabled;	// 0x30b73375
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x30ba2d21
- (id)asDomRange;	// 0x30ba2d25
- (id)asElement;	// 0x30ba2a05
- (CGRect)boundingRect;	// 0x30ba304d
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x30ba30ad
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x30ba3035
- (BOOL)containsBlock:(id)block;	// 0x30ba2b71
- (BOOL)containsNode:(id)node;	// 0x30ba2971
- (BOOL)containsRange:(id)range;	// 0x30ba2e05
- (id)enclosingDocument;	// 0x30ba311d
- (id)enclosingElementIncludingSelf;	// 0x30ba2a29
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x30ba3329
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x30ba312d
- (BOOL)hasCustomLineHeight;	// 0x30ba2ae5
- (BOOL)isSameBlock:(id)block;	// 0x30ba2b21
- (id)largerParent;	// 0x30ba2c29
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x30ba33c9
- (id)parentBlock;	// 0x30ba2a89
- (id)rangeOfContents;	// 0x30ba2f0d
- (BOOL)rendersAsBlock;	// 0x30ba2d09
- (BOOL)selectable;	// 0x30ba2a99
- (BOOL)strictlyContainsBlock:(id)block;	// 0x30ba2be1
- (BOOL)strictlyContainsNode:(id)node;	// 0x30ba29c1
- (id)webFrame;	// 0x30ba2a61
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x30bb4515; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
- (unsigned long)_characterAfterCaretSelection;	// 0x30bb4659
- (unsigned long)_characterBeforeCaretSelection;	// 0x30bb466d
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x30bb4681
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x30bb46f9
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x30bb57f9
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x30bb5369
- (void)_deleteByWord;	// 0x30bb5005
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x30bb5391
- (void)_deleteToEndOfLine;	// 0x30bb520d
- (void)_deleteToStartOfLine;	// 0x30bb50b1
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x30bb4df9
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x30bb4e0d
- (void)_extendCurrentSelection:(int)selection;	// 0x30bb4c45
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x30bb56b1
- (id)_fontForCaretSelection;	// 0x30bb591d
- (id)_fullRange;	// 0x30bb5659
- (id)_fullText;	// 0x30bb4961
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x30bb4bdd
- (int)_indexForTextPosition:(id)textPosition;	// 0x30bb4585
- (BOOL)_isEmptySelection;	// 0x30bb4b69
- (id)_keyInput;	// 0x30bb4525
- (void)_moveCurrentSelection:(int)selection;	// 0x30bb4d15
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x30bb6ca1
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x30bb6e95
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x30bb6f91
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x30bb6995
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x30bb6379
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30bb66ed
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x30bb608d
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x30bb68d9
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x30bb61f1
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30bb6501
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x30bb5e19
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x30bb6aad
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x30bb7609
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x30bb45c9
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x30bb76f9
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30bb7091
// declared property getter: - (id)_proxyTextInput;	// 0x30bb4515
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x30bb5565
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x30bb55d1
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x30bb5615
- (void)_replaceCurrentWordWithText:(id)text;	// 0x30bb54ed
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30bb5561
- (id)_selectableText;	// 0x30bb7c51
- (int)_selectionAffinity;	// 0x30bb7135
- (NSRange)_selectionAsNSRange;	// 0x30bb4529
- (BOOL)_selectionAtDocumentEnd;	// 0x30bb4ad5
- (BOOL)_selectionAtDocumentStart;	// 0x30bb4a65
- (BOOL)_selectionAtWordStart;	// 0x30bb49cd
- (CGRect)_selectionClipRect;	// 0x30bb4b45
- (void)_setCaretSelectionAtEndOfSelection;	// 0x30bb4f7d
- (void)_setGestureRecognizers;	// 0x30bb722d
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30bb5c61
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30bb7475
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30bb70c1
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x30bb5a0d
- (id)_textColorForCaretSelection;	// 0x30bb585d
- (void)_unmarkText;	// 0x30bb75b1
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30bb59dd
- (id)_wordContainingCaretSelection;	// 0x30bb48c9
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x30bb7e39
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x30bef75d
- (id)_nextAssistedNode;	// 0x30bef761
- (id)_previousAssistedNode;	// 0x30bef7a5
- (BOOL)_requiresAccessoryView;	// 0x30bef725
- (BOOL)_requiresInputView;	// 0x30bef73d
- (void)_startAssistingDocumentView:(id)view;	// 0x30bef699
- (void)_stopAssistingDocumentView:(id)view;	// 0x30bef6cd
- (BOOL)_supportsAccessoryClear;	// 0x30bef759
- (BOOL)_supportsAutoFill;	// 0x30bef755
- (id)_textFormElement;	// 0x30bef7e9
@end

