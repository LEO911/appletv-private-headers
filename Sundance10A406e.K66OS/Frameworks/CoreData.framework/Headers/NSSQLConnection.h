/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import <NSObject.h> // Unknown library

@class NSArray, NSSQLAdapter, NSSQLStatement;

@interface NSSQLConnection : NSObject {
	NSSQLAdapter *_adapter;	// 4 = 0x4
	BOOL _transactionIsOpen;	// 8 = 0x8
	BOOL _useSyntaxColoredLogging;	// 9 = 0x9
	int _debug;	// 12 = 0xc
	NSSQLStatement *_sqlStatement;	// 16 = 0x10
	NSArray *_columnsToFetch;	// 20 = 0x14
	NSArray *_metadataColumns;	// 24 = 0x18
}
@property(readonly, retain) NSSQLAdapter *adapter;	// G=0x33cca6dd; converted property
@property(retain) NSArray *columnsToFetch;	// G=0x33ccbe45; S=0x33ccbe65; converted property
@property(readonly, retain) NSArray *metadataColumns;	// G=0x33ccbea9; converted property
@property(readonly, retain) NSSQLStatement *sqlStatement;	// G=0x33ccb7f9; converted property
+ (void)initialize;	// 0x33cc7ce5
- (id)initWithAdapter:(id)adapter;	// 0x33cc7f75
- (void)_forceDisconnectOnError;	// 0x33d5e9dd
- (void)_performPostSaveTasks;	// 0x33d601d1
- (void)_raiseOptimisticLockingExceptionWithReason:(id)reason;	// 0x33d5e799
// converted property getter: - (id)adapter;	// 0x33cca6dd
- (void)addPeerRange:(id)range;	// 0x33d60271
- (void)addPeerRangeForPeerID:(id)peerID entityName:(id)name rangeStart:(id)start rangeEnd:(id)end peerRangeStart:(id)start5 peerRangeEnd:(id)end6;	// 0x33d602a5
- (id)allPeerRanges;	// 0x33d602d9
- (void)awake;	// 0x33d5e97d
- (void)beginTransaction;	// 0x33d5e8ad
- (BOOL)canConnect;	// 0x33d5eb01
// converted property getter: - (id)columnsToFetch;	// 0x33ccbe45
- (void)commitTransaction;	// 0x33d5e8e1
- (void)connect;	// 0x33d5e949
- (void)createIndexesForEntity:(id)entity;	// 0x33d5f211
- (void)createManyToManyTablesForEntity:(id)entity;	// 0x33d5f119
- (id)createMapOfEntityNameToPKMaxForEntities:(id)entities;	// 0x33d60375
- (id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)pktable;	// 0x33d60341
- (id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)ubrangeTable;	// 0x33d6030d
- (void)createMetadata;	// 0x33d5f835
- (void)createPrimaryKeyTableForModel:(id)model knownEmpty:(BOOL)empty;	// 0x33d600b5
- (void)createSchema;	// 0x33d5f909
- (void)createTableForEntity:(id)entity;	// 0x33d5f0a5
- (void)createTablesForEntities:(id)entities;	// 0x33d5f795
- (BOOL)databaseIsEmpty;	// 0x33d5eb35
- (void)dealloc;	// 0x33d5e815
- (void)deleteCorrelation:(id)correlation;	// 0x33d5ec39
- (void)deleteRow:(id)row;	// 0x33d5eca1
- (id)describeResults;	// 0x33d5ede9
- (void)didCreateSchema;	// 0x33d5f905
- (void)disconnect;	// 0x33d5e985
- (void)endFetch;	// 0x33d5ee85
- (void)endPrimaryKeyGeneration;	// 0x33d6007d
- (void)execute;	// 0x33d5ed09
- (long long)fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x33d5fc35
- (id)fetchMetadata;	// 0x33cca1fd
- (int)fetchResultSet:(void *)set usingFetchPlan:(id)plan;	// 0x33d5ee51
- (id)fetchTableCreationSQL;	// 0x33d5fc9d
- (id)fetchTableNames;	// 0x33d5fc69
- (id)fetchUbiquityKnowledgeVector;	// 0x33d601d5
- (void)finalize;	// 0x33d5e7d5
- (void)forceTransactionClosed;	// 0x33d5e9c9
- (long long)generatePrimaryKeysForEntity:(id)entity batch:(unsigned)batch;	// 0x33d60071
- (BOOL)hasMetadataTable;	// 0x33d5fcd1
- (BOOL)hasOpenTransaction;	// 0x33d5e9b9
- (BOOL)hasPrimaryKeyTable;	// 0x33d60081
- (void)insertCorrelation:(id)correlation;	// 0x33d5ebd1
- (void)insertRow:(id)row;	// 0x33d5eb9d
- (BOOL)isFetchInProgress;	// 0x33d5edb5
- (BOOL)isOpen;	// 0x33d5eb69
// converted property getter: - (id)metadataColumns;	// 0x33ccbea9
- (id)newFetchedArray;	// 0x33d5ee1d
- (void)performAdapterOperation:(id)operation;	// 0x33d5eeb9
- (void)performAdapterOperations:(id)operations;	// 0x33d5efed
- (void)prepareAndExecuteSQLStatement:(id)statement;	// 0x33d5ed69
- (void)prepareForPrimaryKeyGeneration;	// 0x33d60079
- (void)prepareSQLStatement:(id)statement;	// 0x33ccae85
- (CFArrayRef)rawIntegerRowsForSQL:(id)sql;	// 0x33d5fc01
- (void)releaseSQLStatement;	// 0x33cccd51
- (void)resetSQLStatement;	// 0x33d5ed3d
- (void)rollbackTransaction;	// 0x33d5e915
- (void)saveMetadata:(id)metadata;	// 0x33d5fd05
- (void)selectAttributes:(id)attributes fetchRequest:(id)request lock:(BOOL)lock entity:(id)entity;	// 0x33d5ecd5
// converted property setter: - (void)setColumnsToFetch:(id)fetch;	// 0x33ccbe65
- (void)setExclusiveLockingMode:(BOOL)mode;	// 0x33d5edb1
- (void)setUbiquityTableValue:(id)value forKey:(id)key;	// 0x33d603a9
- (void)sleep;	// 0x33d5e981
// converted property getter: - (id)sqlStatement;	// 0x33ccb7f9
- (void)transactionDidBegin;	// 0x33d5e9ed
- (void)transactionDidCommit;	// 0x33d5ea49
- (void)transactionDidRollback;	// 0x33d5eaa5
- (id)ubiquityTableKeysAndValues;	// 0x33d603dd
- (id)ubiquityTableValueForKey:(id)key;	// 0x33d60411
- (void)updateCorrelation:(id)correlation;	// 0x33d5ec05
- (void)updateRow:(id)row;	// 0x33d5ec6d
- (void)updateUbiquityKnowledgeForPeerWithID:(id)anId andTransactionNumber:(id)number;	// 0x33d6023d
- (void)updateUbiquityKnowledgeVector:(id)vector;	// 0x33d60209
- (void)willCreateSchema;	// 0x33d5f901
@end

