/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library
#import "NSCoding.h"
#import "SSDownloadManagerObserver.h"

@class MPMediaPlaylist, MPMediaQuery, NSString, NSArray;

@interface MPGeniusMix : NSObject <SSDownloadManagerObserver, NSCoding, NSCopying> {
	MPMediaPlaylist *_playlist;	// 4 = 0x4
	MPMediaQuery *_seedTracksQuery;	// 8 = 0x8
	NSArray *_representativeArtists;	// 12 = 0xc
	NSArray *_representativeImageItems;	// 16 = 0x10
}
@property(readonly, assign, nonatomic) float downloadProgress;	// G=0x35d28751; 
@property(readonly, assign, nonatomic) BOOL isCloudMix;	// G=0x35d28aad; 
@property(readonly, assign, nonatomic) BOOL isDownloading;	// G=0x35d28af5; 
@property(readonly, assign, nonatomic) NSString *name;	// G=0x35d28c89; 
@property(readonly, assign, nonatomic) MPMediaPlaylist *playlist;	// G=0x35d2a6cd; @synthesize=_playlist
@property(readonly, assign, nonatomic) NSArray *representativeArtists;	// G=0x35d28cb5; 
@property(readonly, assign, nonatomic) MPMediaQuery *seedTracksQuery;	// G=0x35d2a055; 
+ (id)artworkCacheDirectoryPath;	// 0x35d27911
+ (id)artworkImageForMediaItem:(id)mediaItem;	// 0x35d27915
+ (id)artworkImageForMediaItem:(id)mediaItem scaleMode:(int)mode;	// 0x35d27d91
+ (id)mixQueue;	// 0x35d273ad
- (id)initWithCoder:(id)coder;	// 0x35d276fd
- (id)initWithMPMediaPlaylist:(id)mpmediaPlaylist;	// 0x35d27419
- (id)_cacheDirectoryPath;	// 0x35d2a111
- (id)_cachedRepresentativeImagePath;	// 0x35d2a1cd
- (unsigned long long)_entityArtworkCacheHashForRepresentativeItems:(id)representativeItems ensureItemArtworkFilesExist:(BOOL)exist;	// 0x35d2a201
- (void)_generateMixImageWithTileLength:(float)tileLength imageDidLoadBlock:(id)image;	// 0x35d29bb5
- (CGImageRef)_getAlreadyLoadedRepresentativeImageWithTileLength:(float)tileLength loadCompletionBlock:(id)block;	// 0x35d29d09
- (BOOL)_observeMixImageLoadingWithImageDidLoadBlock:(id)_observeMixImageLoadingWithImage;	// 0x35d29af9
- (void)_onQueueLoadRepresentativeImageWithTileLength:(float)tileLength;	// 0x35d29545
- (CGImageRef)_placeholderImageWithTileLength:(float)tileLength;	// 0x35d28f49
- (CGImageRef)_placeholderMixImageWithTileLength:(float)tileLength;	// 0x35d29181
- (id)_representativeImageItemsWithMaxCount:(unsigned)maxCount;	// 0x35d2a3f1
- (BOOL)canPlayUsingNetworkType:(int)type;	// 0x35d27c69
- (void)cancelDownload;	// 0x35d27985
- (id)copyWithZone:(NSZone *)zone;	// 0x35d278cd
- (void)dealloc;	// 0x35d274e5
- (id)description;	// 0x35d27571
- (void)downloadMixWithCompletionHandler:(id)completionHandler;	// 0x35d27f09
// declared property getter: - (float)downloadProgress;	// 0x35d28751
- (void)encodeWithCoder:(id)coder;	// 0x35d27861
- (unsigned)hash;	// 0x35d27601
// declared property getter: - (BOOL)isCloudMix;	// 0x35d28aad
// declared property getter: - (BOOL)isDownloading;	// 0x35d28af5
- (BOOL)isEqual:(id)equal;	// 0x35d27645
- (CGImageRef)loadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x35d29fc5
// declared property getter: - (id)name;	// 0x35d28c89
// declared property getter: - (id)playlist;	// 0x35d2a6cd
- (void)preloadRepresentativeImageWithTileLength:(float)tileLength completionBlock:(id)block;	// 0x35d29eb5
// declared property getter: - (id)representativeArtists;	// 0x35d28cb5
// declared property getter: - (id)seedTracksQuery;	// 0x35d2a055
@end

