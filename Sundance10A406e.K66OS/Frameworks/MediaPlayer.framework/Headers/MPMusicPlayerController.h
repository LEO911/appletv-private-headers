/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MPMediaPlayback.h"

@class MPMusicPlayerControllerInternal;

@protocol MPMusicPlayerController
@optional
@property(retain) id allowsRemoteUIAccess;	// converted property
@property(retain) id currentChapterIndex;	// converted property
@property(retain) id currentPlaybackRate;	// converted property
@property(retain) id currentPlaybackTime;	// converted property
@property(retain) id nowPlayingItem;	// converted property
@property(retain) id playbackSpeed;	// converted property
@property(retain) id repeatMode;	// converted property
@property(retain) id shuffleMode;	// converted property
// converted property getter: - (id)allowsRemoteUIAccess;
- (void)beginSeekingBackward;
- (void)beginSeekingForward;
// converted property getter: - (id)currentChapterIndex;
// converted property getter: - (id)currentPlaybackRate;
// converted property getter: - (id)currentPlaybackTime;
- (void)endSeeking;
- (id)indexOfNowPlayingItem;
- (id)isGeniusAvailable;
- (id)isGeniusAvailableForSeedItems:(id)seedItems;
- (id)isNowPlayingItemFromGeniusMix;
// converted property getter: - (id)nowPlayingItem;
- (id)nowPlayingItemAtIndex:(id)index;
- (id)numberOfItems;
- (void)pause;
- (void)pauseWithFadeoutDuration:(id)fadeoutDuration;
- (void)play;
- (void)playItem:(id)item;
// converted property getter: - (id)playbackSpeed;
- (id)playbackState;
- (void)prepareQueueForPlayback;
- (void)prepareToPlay;
- (id)queueAsQuery;
- (void)registerForServerDiedNotifications;
// converted property getter: - (id)repeatMode;
- (id)serverIsAlive;
// converted property setter: - (void)setAllowsRemoteUIAccess:(id)access;
// converted property setter: - (void)setCurrentChapterIndex:(id)index;
// converted property setter: - (void)setCurrentPlaybackRate:(id)rate;
// converted property setter: - (void)setCurrentPlaybackTime:(id)time;
// converted property setter: - (void)setNowPlayingItem:(id)item;
// converted property setter: - (void)setPlaybackSpeed:(id)speed;
- (void)setQueueWithGeniusMixPlaylist:(id)geniusMixPlaylist;
- (void)setQueueWithItemCollection:(id)itemCollection;
- (void)setQueueWithQuery:(id)query;
- (void)setQueueWithQuery:(id)query firstItem:(id)item;
- (id)setQueueWithSeedItems:(id)seedItems;
// converted property setter: - (void)setRepeatMode:(id)mode;
// converted property setter: - (void)setShuffleMode:(id)mode;
- (void)setUseApplicationSpecificQueue:(id)queue;
- (void)shuffle;
// converted property getter: - (id)shuffleMode;
- (void)skipToBeginning;
- (void)skipToBeginningOrPreviousItem;
- (void)skipToNextChapter;
- (void)skipToNextItem;
- (void)skipToPreviousChapter;
- (void)skipToPreviousItem;
- (void)stop;
- (id)unshuffledIndexOfNowPlayingItem;
@end

@interface MPMusicPlayerController : NSObject <MPMediaPlayback> {
	MPMusicPlayerControllerInternal *_internal;	// 4 = 0x4
}
@property(assign) BOOL allowsRemoteUIAccess;	// G=0x35d02ec9; S=0x35d02efd; converted property
@property(assign) unsigned currentChapterIndex;	// G=0x35d030e1; S=0x35d03119; converted property
@property(assign, nonatomic) float currentPlaybackRate;	// G=0x35d0278d; S=0x35d0287d; 
@property(assign, nonatomic) double currentPlaybackTime;	// G=0x35d027c5; S=0x35d028c5; 
@property(readonly, assign, nonatomic) BOOL isPreparedToPlay;	// G=0x35d027fd; 
@property(assign) int playbackSpeed;	// G=0x35d02f85; S=0x35d02fbd; converted property
@property(assign) int repeatMode;	// G=0x35d02aad; S=0x35d02ae5; converted property
@property(assign) int shuffleMode;	// G=0x35d02b2d; S=0x35d02b65; converted property
@property(assign) float volume;	// G=0x35d02bad; S=0x35d02c09; converted property
+ (id)applicationMusicPlayer;	// 0x35d02271
+ (id)iPodMusicPlayer;	// 0x35d022cd
+ (void)initialize;	// 0x35d0325d
+ (id)runLoopForNotifications;	// 0x35d032f9
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x35d032c1
- (id)init;	// 0x35d02329
- (void)_clientCheckInUsingExistencePort:(BOOL)usingExistencePort;	// 0x35d03539
- (void)_isQueuePreparedDidChange:(BOOL)_isQueuePrepared;	// 0x35d03af9
- (void)_itemPlaybackDidEnd:(unsigned long long)_itemPlayback;	// 0x35d03b89
- (void)_musicPlayerDidLaunch;	// 0x35d03435
- (BOOL)_musicPlayerExistencePortIsValid;	// 0x35d0368d
- (void)_nowPlayingItemDidChange:(unsigned long long)_nowPlayingItem;	// 0x35d038d5
- (void)_playbackStateDidChange:(int)_playbackState;	// 0x35d03759
- (void)_registerForLaunchNotifications;	// 0x35d03471
- (void)_repeatModeDidChange:(int)_repeatMode;	// 0x35d03a71
- (void)_runMigServerOnPort:(unsigned)port;	// 0x35d03c7d
- (void)_serverDied:(id)died;	// 0x35d033cd
- (void)_setUseApplicationSpecificQueue:(BOOL)queue;	// 0x35d0333d
- (void)_shuffleModeDidChange:(int)_shuffleMode;	// 0x35d039e9
- (void)_stopMigServer;	// 0x35d03d19
- (void)_systemVolumeDidChange:(id)_systemVolume;	// 0x35d02631
- (void)_unregisterForLaunchNotifications;	// 0x35d03519
// converted property getter: - (BOOL)allowsRemoteUIAccess;	// 0x35d02ec9
- (void)beginGeneratingPlaybackNotifications;	// 0x35d02d21
- (void)beginSeekingBackward;	// 0x35d0274d
- (void)beginSeekingForward;	// 0x35d0272d
// converted property getter: - (unsigned)currentChapterIndex;	// 0x35d030e1
// declared property getter: - (float)currentPlaybackRate;	// 0x35d0278d
// declared property getter: - (double)currentPlaybackTime;	// 0x35d027c5
- (void)dealloc;	// 0x35d024dd
- (void)endGeneratingPlaybackNotifications;	// 0x35d02d45
- (void)endSeeking;	// 0x35d0276d
- (void)forwardInvocation:(id)invocation;	// 0x35d026e9
- (unsigned)indexOfNowPlayingItem;	// 0x35d03005
- (BOOL)isGeniusAvailable;	// 0x35d02d6d
- (BOOL)isGeniusAvailableForSeedItems:(id)seedItems;	// 0x35d02da1
- (BOOL)isNowPlayingItemFromGeniusMix;	// 0x35d030ad
// declared property getter: - (BOOL)isPreparedToPlay;	// 0x35d027fd
- (id)methodSignatureForSelector:(SEL)selector;	// 0x35d0270d
- (id)nowPlayingItem;	// 0x35d0292d
- (id)nowPlayingItemAtIndex:(unsigned)index;	// 0x35d02e09
- (unsigned)numberOfItems;	// 0x35d03075
- (void)pause;	// 0x35d0285d
- (void)pauseWithFadeoutDuration:(double)fadeoutDuration;	// 0x35d02e51
- (void)play;	// 0x35d0283d
// converted property getter: - (int)playbackSpeed;	// 0x35d02f85
- (int)playbackState;	// 0x35d02a19
- (void)prepareToPlay;	// 0x35d0281d
// converted property getter: - (int)repeatMode;	// 0x35d02aad
- (BOOL)serverIsAlive;	// 0x35d03309
// converted property setter: - (void)setAllowsRemoteUIAccess:(BOOL)access;	// 0x35d02efd
// converted property setter: - (void)setCurrentChapterIndex:(unsigned)index;	// 0x35d03119
// declared property setter: - (void)setCurrentPlaybackRate:(float)rate;	// 0x35d0287d
// declared property setter: - (void)setCurrentPlaybackTime:(double)time;	// 0x35d028c5
// converted property setter: - (void)setPlaybackSpeed:(int)speed;	// 0x35d02fbd
- (void)setQueueWithGeniusMixPlaylist:(id)geniusMixPlaylist;	// 0x35d0323d
- (void)setQueueWithItemCollection:(id)itemCollection;	// 0x35d02979
- (void)setQueueWithQuery:(id)query;	// 0x35d02965
- (void)setQueueWithQuery:(id)query firstItem:(id)item;	// 0x35d03161
- (BOOL)setQueueWithSeedItems:(id)seedItems;	// 0x35d02dd5
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x35d02ae5
// converted property setter: - (void)setShuffleMode:(int)mode;	// 0x35d02b65
- (void)setUseCachedPlaybackState:(BOOL)state;	// 0x35d02e99
// converted property setter: - (void)setVolume:(float)volume;	// 0x35d02c09
// converted property getter: - (int)shuffleMode;	// 0x35d02b2d
- (void)stop;	// 0x35d0290d
- (unsigned)unshuffledIndexOfNowPlayingItem;	// 0x35d0303d
// converted property getter: - (float)volume;	// 0x35d02bad
@end

