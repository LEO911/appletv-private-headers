/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSString, NSArray, MPMediaItemArtwork, NSDate;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x35d05635; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x35d05691; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x35d056ad; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x35d056c9; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x35d056e5; S=0x35d05719; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x35d04e05; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x35d0575d; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x35d05651; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x35d05959; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x35d05779; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x35d05d65; S=0x35d05d95; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x35d05859; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x35d05795; 
@property(readonly, assign, nonatomic) BOOL isUsableAsRepresentativeItem;	// G=0x35d064fd; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x35d05bcd; S=0x35d05be9; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x35d05d2d; S=0x35d05d49; 
@property(copy, nonatomic) NSDate *lastUsedDate;	// G=0x35d05c05; S=0x35d05c21; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x35d05889; 
@property(readonly, assign, nonatomic) BOOL mediaTypeCanSeedGenius;	// G=0x35d9c841; 
@property(assign, nonatomic) unsigned playCount;	// G=0x35d05add; S=0x35d05b11; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x35d05b55; S=0x35d05b89; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x35d058bd; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x35d0599d; 
@property(assign, nonatomic) unsigned rating;	// G=0x35d059b9; S=0x35d059ed; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x35d05a31; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x35d05dd9; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x35d05c3d; S=0x35d05c71; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x35d05cb5; S=0x35d05ce9; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x35d058f1; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x35d05925; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x35d05a4d; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x35d05a69; 
+ (void)_createFilterableDictionary;	// 0x35d04e21
+ (BOOL)_isValidItemProperty:(id)property;	// 0x35d055f1
+ (BOOL)canFilterByProperty:(id)property;	// 0x35d04575
+ (id)dynamicProperties;	// 0x35d04cd9
+ (id)fallbackTitlePropertyForGroupingType:(int)groupingType;	// 0x35d04cbd
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x35d04bcd
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x35d04c39
- (id)initWithCoder:(id)coder;	// 0x35d04471
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x35d04365
- (id)_bestStoreURL;	// 0x35d04b15
- (id)_directStoreURL;	// 0x35d06501
- (id)_libraryLinkArtist;	// 0x35d066a9
- (id)_libraryLinkKind;	// 0x35d0671d
- (id)_libraryLinkPlaylistName;	// 0x35d067dd
- (id)_libraryLinkURL;	// 0x35d06871
// declared property getter: - (id)albumArtist;	// 0x35d05635
// declared property getter: - (id)albumTitle;	// 0x35d05691
// declared property getter: - (id)artist;	// 0x35d056ad
// declared property getter: - (id)artwork;	// 0x35d056c9
// declared property getter: - (double)bookmarkTime;	// 0x35d056e5
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x35d05f3d
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x35d06029
// declared property getter: - (id)chapters;	// 0x35d04e05
- (id)chaptersOfType:(int)type;	// 0x35d05e09
- (void)clearBookmarkTime;	// 0x35d04a95
// declared property getter: - (id)composer;	// 0x35d0575d
- (unsigned)countOfChaptersOfType:(int)type;	// 0x35d0615d
- (void)didReceiveMemoryWarning;	// 0x35d04b11
- (BOOL)didSkipWithPlayedToTime:(double)time;	// 0x35d04729
// declared property getter: - (id)effectiveAlbumArtist;	// 0x35d05651
// declared property getter: - (double)effectiveStopTime;	// 0x35d05959
- (void)encodeWithCoder:(id)coder;	// 0x35d044f9
- (BOOL)existsInLibrary;	// 0x35d04b4d
- (void)gaplessHeuristicInfo:(unsigned *)info durationInSamples:(unsigned long long *)samples lastPacketsResync:(unsigned long long *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x35d0623d
// declared property getter: - (id)genre;	// 0x35d05779
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x35d05d65
- (unsigned)hash;	// 0x35d043c1
- (void)incrementPlayCountForPlayingToEnd;	// 0x35d0491d
- (BOOL)incrementPlayCountForStopTime:(double)stopTime;	// 0x35d04999
- (void)incrementSkipCount;	// 0x35d048a1
- (BOOL)isDownloadInProgress;	// 0x35d977a9
- (BOOL)isDownloadable;	// 0x35d97589
- (BOOL)isEqual:(id)equal;	// 0x35d043d9
// declared property getter: - (BOOL)isITunesU;	// 0x35d05859
// declared property getter: - (BOOL)isRental;	// 0x35d05795
// declared property getter: - (BOOL)isUsableAsRepresentativeItem;	// 0x35d064fd
// declared property getter: - (id)lastPlayedDate;	// 0x35d05bcd
// declared property getter: - (id)lastSkippedDate;	// 0x35d05d2d
// declared property getter: - (id)lastUsedDate;	// 0x35d05c05
- (void)markNominalAmountHasBeenPlayed;	// 0x35d047a9
// declared property getter: - (int)mediaType;	// 0x35d05889
// declared property getter: - (BOOL)mediaTypeCanSeedGenius;	// 0x35d9c841
- (void)noteWasPlayedToTime:(double)time skipped:(BOOL)skipped;	// 0x35d04825
// declared property getter: - (unsigned)playCount;	// 0x35d05add
// declared property getter: - (unsigned)playCountSinceSync;	// 0x35d05b55
// declared property getter: - (double)playbackDuration;	// 0x35d058bd
// declared property getter: - (id)podcastTitle;	// 0x35d0599d
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x35d04dd1
- (id)predicateForProperty:(id)property;	// 0x35d05a9d
// declared property getter: - (unsigned)rating;	// 0x35d059b9
// declared property getter: - (id)releaseDate;	// 0x35d05a31
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x35d05dd9
- (id)representativeItem;	// 0x35d04b49
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x35d05719
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x35d05d95
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x35d05be9
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x35d05d49
// declared property setter: - (void)setLastUsedDate:(id)date;	// 0x35d05c21
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x35d05b11
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x35d05b89
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x35d059ed
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x35d05c71
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x35d05ce9
// declared property getter: - (unsigned)skipCount;	// 0x35d05c3d
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x35d05cb5
// declared property getter: - (double)startTime;	// 0x35d058f1
// declared property getter: - (double)stopTime;	// 0x35d05925
// declared property getter: - (id)title;	// 0x35d05a4d
- (void)updateLastUsedDateToCurrentDate;	// 0x35d04a19
- (id)valueForProperty:(id)property;	// 0x35d04601
- (id)valuesForProperties:(id)properties;	// 0x35d046a9
// declared property getter: - (unsigned)year;	// 0x35d05a69
@end

