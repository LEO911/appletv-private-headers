/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

#import "CoreMotion-Structs.h"
#import <NSObject.h> // Unknown library

@class CMDeviceMotion, CMGyroData, CMAccelerometerData, CMMagnetometerData;

@interface CMMotionManager : NSObject {
	id _internal;	// 4 = 0x4
}
@property(readonly, assign, nonatomic, getter=isAccelerometerActive) BOOL accelerometerActive;	// G=0x369e43ad; @dynamic
@property(readonly, assign, nonatomic, getter=isAccelerometerAvailable) BOOL accelerometerAvailable;	// G=0x369e439d; @dynamic
@property(readonly, assign) CMAccelerometerData *accelerometerData;	// G=0x369e4495; @dynamic
@property(assign, nonatomic) double accelerometerUpdateInterval;	// G=0x369e446d; S=0x369e43d1; @dynamic
@property(readonly, assign, nonatomic) int attitudeReferenceFrame;	// G=0x369e4fdd; @dynamic
@property(readonly, assign) CMDeviceMotion *deviceMotion;	// G=0x369e4ffd; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionActive) BOOL deviceMotionActive;	// G=0x369e4ef5; @dynamic
@property(readonly, assign, nonatomic, getter=isDeviceMotionAvailable) BOOL deviceMotionAvailable;	// G=0x369e4ecd; @dynamic
@property(assign, nonatomic) double deviceMotionUpdateInterval;	// G=0x369e4fb5; S=0x369e4f19; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroActive) BOOL gyroActive;	// G=0x369e4945; @dynamic
@property(readonly, assign, nonatomic, getter=isGyroAvailable) BOOL gyroAvailable;	// G=0x369e4935; @dynamic
@property(readonly, assign) CMGyroData *gyroData;	// G=0x369e4a2d; @dynamic
@property(assign, nonatomic) double gyroUpdateInterval;	// G=0x369e4a05; S=0x369e4969; @dynamic
@property(readonly, assign, nonatomic, getter=isMagnetometerActive) BOOL magnetometerActive;	// G=0x369e5869; 
@property(readonly, assign, nonatomic, getter=isMagnetometerAvailable) BOOL magnetometerAvailable;	// G=0x369e5859; 
@property(readonly, assign) CMMagnetometerData *magnetometerData;	// G=0x369e5951; 
@property(assign, nonatomic) double magnetometerUpdateInterval;	// G=0x369e5929; S=0x369e588d; 
@property(assign, nonatomic) BOOL showsDeviceMovementDisplay;	// G=0x369e5e79; S=0x369e5df5; 
@property(assign) BOOL useAccelerometer;	// G=0x369e3a79; S=0x369e3a51; converted property
+ (unsigned)availableAttitudeReferenceFrames;	// 0x369e3b4d
+ (void)dummySelector:(id)selector;	// 0x369e7761
+ (void)initialize;	// 0x369e3a9d
+ (void)setAllowInBackground:(BOOL)background;	// 0x369e3b6d
- (id)init;	// 0x369e3b71
- (id)initPrivate;	// 0x369e3d01
- (id)initUsing6AxisSensorFusion;	// 0x369e5f69
- (id)initUsingGyroOnlySensorFusion;	// 0x369e5fb9
// declared property getter: - (id)accelerometerData;	// 0x369e4495
// declared property getter: - (double)accelerometerUpdateInterval;	// 0x369e446d
// declared property getter: - (int)attitudeReferenceFrame;	// 0x369e4fdd
- (void)dealloc;	// 0x369e4071
- (void)deallocPrivate;	// 0x369e41dd
// declared property getter: - (id)deviceMotion;	// 0x369e4ffd
// declared property getter: - (double)deviceMotionUpdateInterval;	// 0x369e4fb5
- (void)didBecomeActive:(id)active;	// 0x369e7609
- (void)didBecomeActivePrivate:(id)aPrivate;	// 0x369e7719
- (void)dismissDeviceMovementDisplay;	// 0x369e5f29
// declared property getter: - (id)gyroData;	// 0x369e4a2d
// declared property getter: - (double)gyroUpdateInterval;	// 0x369e4a05
// declared property getter: - (BOOL)isAccelerometerActive;	// 0x369e43ad
// declared property getter: - (BOOL)isAccelerometerAvailable;	// 0x369e439d
// declared property getter: - (BOOL)isDeviceMotionActive;	// 0x369e4ef5
// declared property getter: - (BOOL)isDeviceMotionAvailable;	// 0x369e4ecd
// declared property getter: - (BOOL)isGyroActive;	// 0x369e4945
// declared property getter: - (BOOL)isGyroAvailable;	// 0x369e4935
// declared property getter: - (BOOL)isMagnetometerActive;	// 0x369e5869
// declared property getter: - (BOOL)isMagnetometerAvailable;	// 0x369e5859
// declared property getter: - (id)magnetometerData;	// 0x369e5951
// declared property getter: - (double)magnetometerUpdateInterval;	// 0x369e5929
- (void)onAccelerometer:(const Sample *)accelerometer;	// 0x369e66e9
- (void)onDeviceMotion:(const Sample *)motion;	// 0x369e6d99
- (void)onGeomagneticModel:(const XXStruct_01mbIB *)model;	// 0x369e74e1
- (void)onGyro:(const Sample *)gyro;	// 0x369e6921
- (void)onMagnetometer:(const Sample *)magnetometer;	// 0x369e6b61
- (void)setAccelerometerDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x369e6005
// declared property setter: - (void)setAccelerometerUpdateInterval:(double)interval;	// 0x369e43d1
- (void)setAccelerometerUpdateIntervalPrivate:(double)aPrivate;	// 0x369e4709
- (void)setDeviceMotionCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval fsync:(BOOL)fsync;	// 0x369e643d
// declared property setter: - (void)setDeviceMotionUpdateInterval:(double)interval;	// 0x369e4f19
- (void)setDeviceMotionUpdateIntervalPrivate:(double)aPrivate;	// 0x369e54b1
- (void)setGyroDataCallback:(/*function-pointer*/ void *)callback info:(void *)info interval:(double)interval;	// 0x369e6221
// declared property setter: - (void)setGyroUpdateInterval:(double)interval;	// 0x369e4969
- (void)setGyroUpdateIntervalPrivate:(double)aPrivate;	// 0x369e4ca1
// declared property setter: - (void)setMagnetometerUpdateInterval:(double)interval;	// 0x369e588d
- (void)setMagnetometerUpdateIntervalPrivate:(double)aPrivate;	// 0x369e5bc9
// declared property setter: - (void)setShowsDeviceMovementDisplay:(BOOL)display;	// 0x369e5df5
- (void)setShowsDeviceMovementDisplayPrivate:(BOOL)aPrivate;	// 0x369e5e9d
// converted property setter: - (void)setUseAccelerometer:(BOOL)accelerometer;	// 0x369e3a51
- (void)showDeviceMovementDisplay;	// 0x369e5ed5
// declared property getter: - (BOOL)showsDeviceMovementDisplay;	// 0x369e5e79
- (void)startAccelerometerUpdates;	// 0x369e4545
- (void)startAccelerometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x369e4771
- (void)startAccelerometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x369e45c1
- (void)startDeviceMotionUpdates;	// 0x369e5135
- (void)startDeviceMotionUpdatesPrivateUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x369e5519
- (void)startDeviceMotionUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x369e51d1
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame;	// 0x369e52c1
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)frame toQueue:(id)queue withHandler:(id)handler;	// 0x369e5351
- (void)startGyroUpdates;	// 0x369e4add
- (void)startGyroUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x369e4d09
- (void)startGyroUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x369e4b59
- (void)startMagnetometerUpdates;	// 0x369e5a01
- (void)startMagnetometerUpdatesPrivateToQueue:(id)queue withHandler:(id)handler;	// 0x369e5c31
- (void)startMagnetometerUpdatesToQueue:(id)queue withHandler:(id)handler;	// 0x369e5a7d
- (void)stopAccelerometerUpdates;	// 0x369e4691
- (void)stopAccelerometerUpdatesPrivate;	// 0x369e4889
- (void)stopDeviceMotionUpdates;	// 0x369e5435
- (void)stopDeviceMotionUpdatesPrivate;	// 0x369e576d
- (void)stopGyroUpdates;	// 0x369e4c29
- (void)stopGyroUpdatesPrivate;	// 0x369e4e21
- (void)stopMagnetometerUpdates;	// 0x369e5b4d
- (void)stopMagnetometerUpdatesPrivate;	// 0x369e5d49
// converted property getter: - (BOOL)useAccelerometer;	// 0x369e3a79
- (void)willResignActive:(id)active;	// 0x369e755d
- (void)willResignActivePrivate:(id)aPrivate;	// 0x369e76b5
@end

