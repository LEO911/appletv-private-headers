/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import <NSObject.h> // Unknown library


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x36caa155; S=0x36cbe139; converted property
@property(assign) id delegate;	// G=0x36cbec75; S=0x36ca9c31; converted property
@property(assign) BOOL muted;	// G=0x36cbe1e9; S=0x36cbe281; converted property
@property(retain) id outputQTESFilePath;	// G=0x36cae1a5; S=0x36cbe3c1; converted property
@property(retain) id queue;	// G=0x36cbd61d; S=0x36ca7b1d; converted property
@property(retain) id queueFeeder;	// G=0x36cbdcf1; S=0x36cb156d; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x36cbe405; S=0x36ca9d29; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x36cbd01d; S=0x36cbd035; converted property
@property(retain) id vibrationPattern;	// G=0x36cbd10d; S=0x36cbd08d; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x36cbe339; S=0x36cbe34d; converted property
@property(assign) float volume;	// G=0x36ca9bd1; S=0x36cb1901; converted property
+ (id)avController;	// 0x36cbd301
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x36cbd33d
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x36cbd149
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x36cbd381
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x36cb0769
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x36cbd2ad
+ (BOOL)isSupportedMimeType:(id)type;	// 0x36cbd259
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x36cb1985
- (id)init;	// 0x36ca7559
- (id)initForStreaming;	// 0x36cbd485
- (id)initWithError:(id *)error;	// 0x36ca797d
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x36ca7571
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x36ca75a9
- (id)_figPlayerNotifications;	// 0x36cbecf5
- (BOOL)activate:(id *)activate;	// 0x36cbe029
- (id)addNextFeederItemToQueue;	// 0x36caa449
- (void)applyDesiredRepeatMode;	// 0x36cbe851
- (id)attributeForKey:(id)key;	// 0x36ca943d
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x36ca8301
- (BOOL)beginInterruption:(id *)interruption;	// 0x36cbdf01
- (BOOL)beginRepeatGap;	// 0x36cb1db5
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x36cabe15
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x36cabe39
- (BOOL)canBeginInterruption;	// 0x36cbdfb5
- (void)cancelAllCGImageRequests;	// 0x36cbe6f9
- (void)cancelContinueAfterRepeatGap;	// 0x36cad981
- (void)checkQueueSpace;	// 0x36caa3b9
- (void)continueAfterRepeatGap;	// 0x36cbdd1d
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x36cbd611
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x36cae041
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x36caa1fd
- (id)currentItem;	// 0x36caa21d
- (void)currentItemHasChanged:(id)changed;	// 0x36cac5f1
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x36cac195
// converted property getter: - (double)currentTime;	// 0x36caa155
- (void)dealloc;	// 0x36cb5fb9
// converted property getter: - (id)delegate;	// 0x36cbec75
- (void)dequeueDeadItem;	// 0x36cbf32d
- (void)dequeueFirstItem;	// 0x36cb0a99
- (void)endInterruptionWithStatus:(id)status;	// 0x36cbe0dd
- (void)ensurePlaybackQueueImmed;	// 0x36cbf22d
- (int)eqPreset;	// 0x36cbe325
- (id)errorWithDescription:(id)description code:(long)code;	// 0x36cbde65
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x36cbdb39
- (void)feederRangeWasInserted:(id)inserted;	// 0x36cbd631
- (void)feederRangeWasRemoved:(id)removed;	// 0x36cbd8b1
- (void)figPlayerNotificationHandler:(id)handler;	// 0x36cbf355
- (void)fmpEffectiveVolumeDidChange;	// 0x36cbe739
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x36caca3d
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x36cb5b7d
- (BOOL)havePlayedCurrentItem;	// 0x36cbdd09
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x36cb0841
- (BOOL)isCurrentItemReady;	// 0x36cbf1e1
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x36cbd60d
- (BOOL)isValid;	// 0x36cbec95
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x36cb1d09
- (id)lkLayer;	// 0x36cbe3f1
- (void)logPerformanceDataForCurrentItem;	// 0x36cbef0d
- (void)makeCurrentItemReady;	// 0x36cad9bd
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x36cb1525
// converted property getter: - (BOOL)muted;	// 0x36cbe1e9
- (BOOL)okToNotifyFromThisThread;	// 0x36cac4c1
// converted property getter: - (id)outputQTESFilePath;	// 0x36cae1a5
- (void)pause;	// 0x36cb082d
- (BOOL)play:(id *)play;	// 0x36cbdd31
- (BOOL)playNextItem:(id *)item;	// 0x36cb0a29
- (AVControllerPrivate *)privateStorage;	// 0x36cbd5fd
// converted property getter: - (id)queue;	// 0x36cbd61d
// converted property getter: - (id)queueFeeder;	// 0x36cbdcf1
- (float)rate;	// 0x36cac741
- (void)rateDidChangeToRate:(float)rate;	// 0x36caf8ed
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x36cbf075
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x36cb11c1
- (int)repeatMode;	// 0x36cb1555
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x36cbe525
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x36cbe501
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x36cbdd4d
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x36cbec8d
- (void)scheduleQueueSpaceCheck;	// 0x36cad799
- (void)scheduleUpdateTimeMarkerObservations;	// 0x36cac7a1
- (void)seekToDate:(id)date;	// 0x36cbe161
- (void)setAVItemClass:(Class)aClass;	// 0x36cbd46d
- (void)setApplyVideoTrackMatrix;	// 0x36cbe419
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x36ca8599
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x36cbe139
- (void)setCurrentTime:(double)time options:(int)options;	// 0x36cb161d
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x36ca9c31
- (void)setEQPreset:(int)preset;	// 0x36ca9c81
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x36cb08a9
- (void)setLayer:(id)layer;	// 0x36ca9e2d
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x36cbe281
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x36cbe3c1
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x36cbf251
// converted property setter: - (void)setQueue:(id)queue;	// 0x36ca7b1d
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x36cb156d
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x36ca9ecd
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x36cad829
- (BOOL)setRepeatMode:(int)mode;	// 0x36ca9e9d
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x36ca9d29
- (void)setSubtitleRecipient:(id)recipient;	// 0x36ca9ce5
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x36cbd035
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x36cbd08d
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x36cbe34d
// converted property setter: - (void)setVolume:(float)volume;	// 0x36cb1901
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x36caec01
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x36cbe405
- (void)stepByCount:(int)count;	// 0x36cbe1b9
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x36cb103d
- (long)updateActionAtEnd;	// 0x36ca9d41
- (void)updateTimeMarkerObservations;	// 0x36caee1d
// converted property getter: - (BOOL)vibrationEnabled;	// 0x36cbd01d
// converted property getter: - (id)vibrationPattern;	// 0x36cbd10d
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x36cbe339
// converted property getter: - (float)volume;	// 0x36ca9bd1
@end

