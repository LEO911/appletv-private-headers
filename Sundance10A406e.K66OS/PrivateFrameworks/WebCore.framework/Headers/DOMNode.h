/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

#import "WebCore-Structs.h"
#import "DOMEventTarget.h"
#import "DOMObject.h"

@class DOMDocument, NSString, DOMElement, DOMNamedNodeMap, DOMNodeList;

@interface DOMNode : DOMObject <DOMEventTarget> {
}
@property(readonly, assign) DOMNamedNodeMap *attributes;	// G=0x31e62135; 
@property(readonly, assign) NSString *baseURI;	// G=0x31e6275d; 
@property(readonly, assign) DOMNodeList *childNodes;	// G=0x31d23531; 
@property(readonly, assign) DOMNode *firstChild;	// G=0x31cd7751; 
@property(readonly, assign) BOOL isContentEditable;	// G=0x31e62db1; 
@property(readonly, assign) DOMNode *lastChild;	// G=0x31e62029; 
@property(readonly, assign) NSString *localName;	// G=0x31e62641; 
@property(readonly, assign) NSString *namespaceURI;	// G=0x31e6224d; 
@property(readonly, assign) DOMNode *nextSibling;	// G=0x31ce899d; 
@property(readonly, assign) NSString *nodeName;	// G=0x31d22c99; 
@property(readonly, assign) unsigned short nodeType;	// G=0x31ce8899; 
@property(copy) NSString *nodeValue;	// G=0x31d4f861; S=0x31e61e6d; 
@property(readonly, assign) DOMDocument *ownerDocument;	// G=0x31d1151d; 
@property(readonly, assign) DOMElement *parentElement;	// G=0x31e62c95; 
@property(readonly, assign) DOMNode *parentNode;	// G=0x31d476fd; 
@property(copy) NSString *prefix;	// G=0x31e62369; S=0x31e62485; 
@property(readonly, assign) DOMNode *previousSibling;	// G=0x31d516dd; 
@property(copy) NSString *textContent;	// G=0x31e6291d; S=0x31e62add; 
- (Element *)_linkElement;	// 0x31d363a1
- (RootObject *)_rootObject;	// 0x31df3a75
- (WKQuad)absoluteQuad;	// 0x31d3af95
- (WKQuad)absoluteQuadAndInsideFixedPosition:(BOOL *)position;	// 0x31d3afc5
- (id)absoluteQuads;	// 0x31d3339d
- (void)addEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x31e647a1
- (void)addEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x31d0d8c5
- (id)appendChild:(id)child;	// 0x31d21d59
// declared property getter: - (id)attributes;	// 0x31e62135
// declared property getter: - (id)baseURI;	// 0x31e6275d
- (id)borderRadii;	// 0x31d33ee1
- (CGRect)boundingBox;	// 0x31d33589
- (CGRect)boundingBoxUsingTransforms;	// 0x31df3aa9
- (id)boundingBoxes;	// 0x31e757d9
- (CGRect)boundingFrame;	// 0x31df3edd
// declared property getter: - (id)childNodes;	// 0x31d23531
- (id)cloneNode:(BOOL)node;	// 0x31e63541
- (unsigned short)compareDocumentPosition:(id)position;	// 0x31e64485
- (float)computedFontSize;	// 0x31df3f01
- (BOOL)contains:(id)contains;	// 0x31e64595
- (BOOL)containsOnlyInlineObjects;	// 0x31e75951
- (void)dealloc;	// 0x31b3a5e9
- (id)description;	// 0x31df396d
- (BOOL)dispatchEvent:(id)event;	// 0x31e64e75
- (void)finalize;	// 0x31e61e15
- (id)findExplodedTextNodeAtPoint:(CGPoint)point;	// 0x31e75f99
// declared property getter: - (id)firstChild;	// 0x31cd7751
- (BOOL)hasAttributes;	// 0x31e63c0d
- (BOOL)hasChildNodes;	// 0x31cd7715
- (CGRect)hrefFrame;	// 0x31df3b01
- (id)hrefLabel;	// 0x31df3b59
- (id)hrefTarget;	// 0x31d36355
- (id)hrefTitle;	// 0x31df3cc9
- (id)hrefURL;	// 0x31d363c9
- (WKQuad)innerFrameQuad;	// 0x31d3f8a1
- (id)insertBefore:(id)before :(id)arg2;	// 0x31e63055
- (id)insertBefore:(id)before refChild:(id)child;	// 0x31e62eb1
- (void)inspect;	// 0x31e646a5
// declared property getter: - (BOOL)isContentEditable;	// 0x31e62db1
- (BOOL)isDefaultNamespace:(id)aNamespace;	// 0x31e64081
- (BOOL)isEqualNode:(id)node;	// 0x31e63d19
- (BOOL)isSameNode:(id)node;	// 0x31d3c599
- (BOOL)isSelectableBlock;	// 0x31e7599d
- (BOOL)isSupported:(id)supported :(id)arg2;	// 0x31e639dd
- (BOOL)isSupported:(id)supported version:(id)version;	// 0x31e637ad
// declared property getter: - (id)lastChild;	// 0x31e62029
- (id)lineBoxQuads;	// 0x31d33b89
- (id)lineBoxRects;	// 0x31df3a99
// declared property getter: - (id)localName;	// 0x31e62641
- (id)lookupNamespaceURI:(id)uri;	// 0x31e6422d
- (id)lookupPrefix:(id)prefix;	// 0x31e63e29
// declared property getter: - (id)namespaceURI;	// 0x31e6224d
- (id)nextFocusNode;	// 0x31d3e115
// declared property getter: - (id)nextSibling;	// 0x31ce899d
// declared property getter: - (id)nodeName;	// 0x31d22c99
// declared property getter: - (unsigned short)nodeType;	// 0x31ce8899
// declared property getter: - (id)nodeValue;	// 0x31d4f861
- (void)normalize;	// 0x31e636b1
// declared property getter: - (id)ownerDocument;	// 0x31d1151d
// declared property getter: - (id)parentElement;	// 0x31e62c95
// declared property getter: - (id)parentNode;	// 0x31d476fd
// declared property getter: - (id)prefix;	// 0x31e62369
- (id)previousFocusNode;	// 0x31d3f0e9
// declared property getter: - (id)previousSibling;	// 0x31d516dd
- (id)rangeOfContainingParagraph;	// 0x31e759dd
- (id)removeChild:(id)child;	// 0x31d23699
- (void)removeEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x31e64c51
- (void)removeEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x31e64a2d
- (id)replaceChild:(id)child :(id)arg2;	// 0x31e6339d
- (id)replaceChild:(id)child oldChild:(id)child2;	// 0x31e631f9
// declared property setter: - (void)setNodeValue:(id)value;	// 0x31e61e6d
// declared property setter: - (void)setPrefix:(id)prefix;	// 0x31e62485
// declared property setter: - (void)setTextContent:(id)content;	// 0x31e62add
// declared property getter: - (id)textContent;	// 0x31e6291d
- (float)textHeight;	// 0x31e75f5d
- (id)textRects;	// 0x31df3f2d
@end

