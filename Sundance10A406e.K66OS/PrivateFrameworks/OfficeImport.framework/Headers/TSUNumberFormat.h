/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "TSUNumberFormatting.h"
#import "OfficeImport-Structs.h"
#import <NSObject.h> // Unknown library

@class NSIndexSet, NSArray, NSString;

@interface TSUNumberFormat : NSObject <TSUNumberFormatting> {
	int mValueType;	// 4 = 0x4
	NSString *mFormatString;	// 8 = 0x8
	unsigned short mDecimalPlaces;	// 12 = 0xc
	NSString *mCurrencyCode;	// 16 = 0x10
	BOOL mUseAccountingStyle;	// 20 = 0x14
	int mNegativeStyle;	// 24 = 0x18
	BOOL mShowThousandsSeparator;	// 28 = 0x1c
	int mFractionAccuracy;	// 32 = 0x20
	BOOL mFormatStringRequiresSuppressionOfMinusSign;	// 36 = 0x24
	BOOL mUseScientificFormattingAutomatically;	// 37 = 0x25
	BOOL mIgnoreDecimalPlacesForZeroValue;	// 38 = 0x26
	NSString *mPrefixString;	// 40 = 0x28
	NSString *mSuffixString;	// 44 = 0x2c
	unsigned char mBase;	// 48 = 0x30
	unsigned short mBasePlaces;	// 50 = 0x32
	BOOL mBaseUseMinusSign;	// 52 = 0x34
	BOOL mIsCustom;	// 53 = 0x35
	double mScaleFactor;	// 56 = 0x38
	BOOL mFormatStringContainsTabCharacter;	// 64 = 0x40
	BOOL mFormatContainsSpecialTokens;	// 65 = 0x41
	BOOL mFormatContainsIntegerToken;	// 66 = 0x42
	unsigned char mNumberOfHashDecimalPlaceholders;	// 67 = 0x43
	unsigned char mTotalNumberOfDecimalPlaceholdersInFormat;	// 68 = 0x44
	BOOL mRequiresFractionReplacement;	// 69 = 0x45
	NSArray *mInterstitialStrings;	// 72 = 0x48
	NSIndexSet *mInterstitialStringInsertionIndexes;	// 76 = 0x4c
	unsigned short mIndexFromRightOfLastDigitPlaceholder;	// 80 = 0x50
	BOOL mIsTextFormat;	// 82 = 0x52
	unsigned char mMinimumIntegerWidth;	// 83 = 0x53
	unsigned char mDecimalWidth;	// 84 = 0x54
	unsigned char mNumberOfNonSpaceIntegerPlaceholderDigits;	// 85 = 0x55
	unsigned char mNumberOfNonSpaceDecimalPlaceholderDigits;	// 86 = 0x56
	NSString *mFormatName;	// 88 = 0x58
}
@property(retain) id formatName;	// G=0x3515bbd1; S=0x3515bb95; converted property
@property(assign) BOOL ignoreDecimalPlacesForZeroValue;	// G=0x3515be21; S=0x3515be31; converted property
@property(assign) BOOL useScientificFormattingAutomatically;	// G=0x3515be01; S=0x3515be11; converted property
+ (id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy;	// 0x35159df9
+ (id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy base:(unsigned short)base basePlaces:(unsigned short)places10 baseUseMinusSign:(BOOL)sign;	// 0x35159ec9
+ (id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy prefixString:(id)string9 suffixString:(id)string10 scaleFactor:(double)factor base:(unsigned short)base basePlaces:(unsigned short)places13 baseUseMinusSign:(BOOL)sign isCustom:(BOOL)custom formatName:(id)name;	// 0x35159fd1
+ (id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy scaleFactor:(double)factor isCustom:(BOOL)custom formatName:(id)name;	// 0x35159f41
+ (id)numberFormatWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy suffixString:(id)string9;	// 0x35159e5d
- (id)init;	// 0x3515a071
- (id)initCustomFormatWithFormatString:(id)formatString currencyCode:(id)code showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy scaleFactor:(double)factor interstitialStrings:(id)strings interstitialStringInsertionIndexes:(id)indexes indexFromRightOfLastDigitPlaceholder:(unsigned short)lastDigitPlaceholder minimumIntegerWidth:(unsigned char)width decimalWidth:(unsigned char)width10 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)nonSpaceIntegerPlaceholderDigits numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)nonSpaceDecimalPlaceholderDigits isTextFormat:(BOOL)format formatName:(id)name;	// 0x3515a0ad
- (id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy;	// 0x3515a12d
- (id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy base:(unsigned short)base basePlaces:(unsigned short)places10 baseUseMinusSign:(BOOL)sign;	// 0x3515a171
- (id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy prefixString:(id)string9 suffixString:(id)string10 scaleFactor:(double)factor base:(unsigned short)base basePlaces:(unsigned short)places13 baseUseMinusSign:(BOOL)sign isCustom:(BOOL)custom interstitialStrings:(id)strings interstitialStringInsertionIndexes:(id)indexes indexFromRightOfLastDigitPlaceholder:(unsigned short)lastDigitPlaceholder minimumIntegerWidth:(unsigned char)width decimalWidth:(unsigned char)width20 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)nonSpaceIntegerPlaceholderDigits numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)nonSpaceDecimalPlaceholderDigits isTextFormat:(BOOL)format formatName:(id)name;	// 0x3515a24d
- (id)initWithValueType:(int)valueType formatString:(id)string decimalPlaces:(unsigned short)places currencyCode:(id)code useAccountingStyle:(BOOL)style negativeStyle:(int)style6 showThousandsSeparator:(BOOL)separator fractionAccuracy:(int)accuracy suffixString:(id)string9;	// 0x3515a1e1
- (unsigned short)base;	// 0x3515bced
- (unsigned short)basePlaces;	// 0x3515bcfd
- (id)baseStringFromDouble:(double)aDouble;	// 0x3515e1a5
- (BOOL)baseUseMinusSign;	// 0x3515bd0d
- (BOOL)canFormatText;	// 0x3515bccd
- (id)chartLabelStringFromDouble:(double)aDouble;	// 0x3515bf21
- (id)chartLabelStringFromDouble:(double)aDouble forceSuppressMinusSign:(BOOL)sign;	// 0x3515c031
- (id)chartLabelStringNofixFromDouble:(double)aDouble;	// 0x3515beb5
- (id)copyWithZone:(NSZone *)zone;	// 0x3515d965
- (id)currencyCode;	// 0x3515bc55
- (BOOL)customFormatShouldAutoInsertPercentSymbol;	// 0x3515bd41
- (id)customNumberFormatTokens;	// 0x3515d1f5
- (void)dealloc;	// 0x3515baa5
- (unsigned short)decimalPlaces;	// 0x3515bc01
- (id)description;	// 0x3515d795
// converted property getter: - (id)formatName;	// 0x3515bbd1
- (id)formatString;	// 0x3515bc45
- (int)fractionAccuracy;	// 0x3515bc85
- (id)fractionStringFromDouble:(double)aDouble;	// 0x3515e189
- (BOOL)hasValidDecimalPlaces;	// 0x3515bd1d
- (unsigned)hash;	// 0x3515d20d
// converted property getter: - (BOOL)ignoreDecimalPlacesForZeroValue;	// 0x3515be21
- (BOOL)isCustom;	// 0x3515bbe1
- (BOOL)isEqual:(id)equal;	// 0x3515d40d
- (BOOL)isEquivalent:(id)equivalent;	// 0x3515d089
- (BOOL)isTextFormat;	// 0x3515bcbd
- (int)negativeStyle;	// 0x3515bc65
- (id)numberFormatByIncrementingDecimalPlaces:(short)places;	// 0x3515ac6d
- (id)numberFormatBySettingBase:(unsigned short)base;	// 0x3515b649
- (id)numberFormatBySettingBasePlaces:(unsigned short)places;	// 0x3515b7bd
- (id)numberFormatBySettingBaseRepresentNegativeWithMinus:(BOOL)minus;	// 0x3515b931
- (id)numberFormatBySettingCurrencyCode:(id)code;	// 0x3515adbd
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)places;	// 0x3515a815
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)places andNegativeStyle:(int)style;	// 0x3515b09d
- (id)numberFormatBySettingFractionAccuracy:(int)accuracy;	// 0x3515b369
- (id)numberFormatBySettingNegativeStyle:(int)style;	// 0x3515af2d
- (id)numberFormatBySettingPrefixString:(id)string;	// 0x3515a985
- (id)numberFormatBySettingShowThousandsSeparator:(BOOL)separator;	// 0x3515b1f9
- (id)numberFormatBySettingSuffixString:(id)string;	// 0x3515aaf9
- (id)numberFormatBySettingUseAccountingStyle:(BOOL)style;	// 0x3515b4d9
- (id)numberFormatBySettingValueType:(int)type;	// 0x3515a64d
- (id)prefixString;	// 0x3515bc25
- (BOOL)requiresParensToBeReplacedWithSpacesForDouble:(double)aDouble;	// 0x3515be81
- (double)scaleFactor;	// 0x3515bca5
// converted property setter: - (void)setFormatName:(id)name;	// 0x3515bb95
// converted property setter: - (void)setIgnoreDecimalPlacesForZeroValue:(BOOL)zeroValue;	// 0x3515be31
// converted property setter: - (void)setUseScientificFormattingAutomatically:(BOOL)automatically;	// 0x3515be11
- (BOOL)showThousandsSeparator;	// 0x3515bc75
- (id)stringFromDouble:(double)aDouble;	// 0x3515c185
- (id)stringFromDouble:(double)aDouble decimalPlaces:(unsigned short)places minimumDecimalPlaces:(unsigned short)places3;	// 0x3515c245
- (id)stringFromDouble:(double)aDouble decimalPlaces:(unsigned short)places minimumDecimalPlaces:(unsigned short)places3 forceSuppressMinusSign:(BOOL)sign;	// 0x3515c271
- (id)stringFromDouble:(double)aDouble forceSuppressMinusSign:(BOOL)sign;	// 0x3515c145
- (id)stringFromDouble:(double)aDouble minimumDecimalPlaces:(unsigned short)places;	// 0x3515c205
- (id)stringFromDouble:(double)aDouble minimumDecimalPlaces:(unsigned short)places forceSuppressMinusSign:(BOOL)sign;	// 0x3515c1c5
- (id)stringFromString:(id)string;	// 0x3515cf61
- (id)suffixString;	// 0x3515bc35
// converted property getter: - (BOOL)useScientificFormattingAutomatically;	// 0x3515be01
- (BOOL)usesAccountingStyle;	// 0x3515bc95
- (BOOL)usesTabs;	// 0x3515be41
- (BOOL)usesTextFormatForValue:(double)value;	// 0x3515bcdd
- (int)valueType;	// 0x3515bbf1
@end

