/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


@interface NSBezierPathStub : NSObject <NSCopying> {
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x3513d055; S=0x3513d059; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x3513b95d; converted property
@property(readonly, assign) int elementCount;	// G=0x3513bbc1; converted property
@property(assign) float flatness;	// G=0x3513ad45; S=0x3513ad55; converted property
@property(assign) unsigned lineCapStyle;	// G=0x3513ac89; S=0x3513ac9d; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x3513acbd; S=0x3513acd1; converted property
@property(assign) float lineWidth;	// G=0x3513ac69; S=0x3513ac79; converted property
@property(assign) float miterLimit;	// G=0x3513ad25; S=0x3513ad35; converted property
@property(assign) unsigned windingRule;	// G=0x3513acf1; S=0x3513ad05; converted property
+ (id)bezierPath;	// 0x35139ee1
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x35139f59
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x35139f19
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x35139f99
+ (void)clipRect:(CGRect)rect;	// 0x3513a15d
+ (CGContextRef)currentCGContext;	// 0x35139e91
+ (float)defaultFlatness;	// 0x3513a2c9
+ (unsigned)defaultLineCapStyle;	// 0x3513a309
+ (unsigned)defaultLineJoinStyle;	// 0x3513a329
+ (float)defaultLineWidth;	// 0x3513a349
+ (float)defaultMiterLimit;	// 0x3513a2a9
+ (unsigned)defaultWindingRule;	// 0x3513a2e9
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x3513a245
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x3513a3a5
+ (void)fillRect:(CGRect)rect;	// 0x35139fed
+ (float)flatness;	// 0x3513d4c9
+ (void)initialize;	// 0x35139df9
+ (unsigned)lineCapStyle;	// 0x3513d509
+ (unsigned)lineJoinStyle;	// 0x3513d529
+ (float)lineWidth;	// 0x3513d549
+ (float)miterLimit;	// 0x3513d4a9
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x35139e3d
+ (void)setDefaultFlatness:(float)flatness;	// 0x3513a2b9
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x3513a2f9
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x3513a319
+ (void)setDefaultLineWidth:(float)width;	// 0x3513a339
+ (void)setDefaultMiterLimit:(float)limit;	// 0x3513a299
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x3513a2d9
+ (void)setFlatness:(float)flatness;	// 0x3513d4b9
+ (void)setLineCapStyle:(unsigned)style;	// 0x3513d4f9
+ (void)setLineJoinStyle:(unsigned)style;	// 0x3513d519
+ (void)setLineWidth:(float)width;	// 0x3513d539
+ (void)setMiterLimit:(float)limit;	// 0x3513d499
+ (void)setWindingRule:(unsigned)rule;	// 0x3513d4d9
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x3513a1bd
+ (void)strokeRect:(CGRect)rect;	// 0x3513a04d
+ (unsigned)windingRule;	// 0x3513d4e9
- (id)init;	// 0x3513a561
- (id).cxx_construct;	// 0x3513d05d
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x3513d061
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x3513c1d5
- (id)_copyFlattenedPath;	// 0x3513b5b9
- (void)_deviceClosePath;	// 0x3513d2ed
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x3513d269
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x3513d219
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x3513d141
- (void)_doPath;	// 0x3513aed1
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x3513d3ad
- (int)_locationOfPoint:(CGPoint)point;	// 0x3513cbbd
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x3513bc39
- (void)addClip;	// 0x3513b149
- (void)appendBezierPath:(id)path;	// 0x3513be69
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x3513c619
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x3513c5d9
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x3513c359
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x3513c07d
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x3513c001
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x3513bf75
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x3513c939
- (id)bezierPathByFlatteningPath;	// 0x3513b521
- (id)bezierPathByReversingPath;	// 0x3513b60d
- (CGRect)bounds;	// 0x3513bae5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x3513d055
- (void)closePath;	// 0x3513aa59
- (BOOL)containsPoint:(CGPoint)point;	// 0x3513cfc5
// converted property getter: - (CGRect)controlPointBounds;	// 0x3513b95d
- (id)copyWithZone:(NSZone *)zone;	// 0x3513a7c1
- (CGPoint)currentPoint;	// 0x3513b8d9
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x3513a9c5
- (void)dealloc;	// 0x3513a6b1
- (id)description;	// 0x3513d559
- (unsigned)elementAtIndex:(int)index;	// 0x3513bc25
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x3513bd21
// converted property getter: - (int)elementCount;	// 0x3513bbc1
- (void)fill;	// 0x3513b0d1
- (void)finalize;	// 0x3513a739
// converted property getter: - (float)flatness;	// 0x3513ad45
- (void)flattenIntoPath:(id)path;	// 0x3513b419
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x3513ae4d
- (BOOL)isEmpty;	// 0x3513b8c1
- (BOOL)isHitByPath:(id)path;	// 0x3513d045
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x3513d029
- (BOOL)isHitByRect:(CGRect)rect;	// 0x3513d041
- (BOOL)isStrokeHitByPath:(id)path;	// 0x3513d051
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x3513d049
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x3513d04d
// converted property getter: - (unsigned)lineCapStyle;	// 0x3513ac89
// converted property getter: - (unsigned)lineJoinStyle;	// 0x3513acbd
- (void)lineToPoint:(CGPoint)point;	// 0x3513a955
// converted property getter: - (float)lineWidth;	// 0x3513ac69
// converted property getter: - (float)miterLimit;	// 0x3513ad25
- (void)moveToPoint:(CGPoint)point;	// 0x3513a945
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x3513abb5
- (void)relativeLineToPoint:(CGPoint)point;	// 0x3513ab4d
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x3513aae5
- (void)removeAllPoints;	// 0x3513aa69
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x3513bdb1
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x3513d059
- (void)setClip;	// 0x3513b1c9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x3513ad55
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x3513ac9d
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x3513ad65
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x3513acd1
// converted property setter: - (void)setLineWidth:(float)width;	// 0x3513ac79
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x3513ad35
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x3513ad05
- (void)stroke;	// 0x3513afe5
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x3513b221
- (void)transformUsingAffineTransform:(id)transform;	// 0x3513b801
// converted property getter: - (unsigned)windingRule;	// 0x3513acf1
@end

