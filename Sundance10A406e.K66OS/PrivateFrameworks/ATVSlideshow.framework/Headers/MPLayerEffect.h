/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MPEffectSupport.h"
#import "MPLayer.h"
#import "MPEffectSupportPrivate.h"

@class MCContainerEffect, NSString, NSArray, NSMutableDictionary, NSMutableArray;
@protocol MZEffectTiming;

@interface MPLayerEffect : MPLayer <MPEffectSupportPrivate, MPEffectSupport> {
	MCContainerEffect *_layerEffect;	// 48 = 0x30
	NSString *_effectID;	// 52 = 0x34
	NSString *_presetID;	// 56 = 0x38
	NSMutableArray *_slides;	// 60 = 0x3c
	NSMutableArray *_secondarySlides;	// 64 = 0x40
	NSMutableArray *_texts;	// 68 = 0x44
	NSMutableDictionary *_effectAttributes;	// 72 = 0x48
	int _randomSeed;	// 76 = 0x4c
	NSObject<MZEffectTiming> *_effectTiming;	// 80 = 0x50
	BOOL _supportsEffectTiming;	// 84 = 0x54
	BOOL _skipEffectTiming;	// 85 = 0x55
	int _liveIndex;	// 88 = 0x58
}
@property(retain) NSMutableDictionary *effectAttributes;	// G=0x3603e345; S=0x3603e3dd; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x3603e08d; S=0x3603e09d; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x36040eed; @synthesize=_effectTiming
@property(assign) int liveIndex;	// G=0x36040efd; S=0x36040f0d; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x3603e1cd; S=0x3603e1f1; 
@property(assign) int randomSeed;	// G=0x3603e2a5; S=0x3603e2b5; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x3603f6cd; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x3603e729; 
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x3603fd45; 
+ (id)layerEffectWithEffectID:(id)effectID;	// 0x3603d311
+ (id)layerEffectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x3603d34d
+ (id)layerEffectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x3603d38d
+ (id)layerEffectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x3603d3cd
- (id)init;	// 0x3603d239
- (id)initWithCoder:(id)coder;	// 0x3603d8ed
- (id)initWithEffectID:(id)effectID;	// 0x3603d415
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x3603d429
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x3603d53d
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x3603d655
- (id)_effectAttributes;	// 0x36040ac5
- (void)_updateEffectTiming;	// 0x36040941
- (void)_updateTiming:(BOOL)timing;	// 0x36040b6d
- (void)addSecondarySlide:(id)slide;	// 0x3603f6dd
- (void)addSecondarySlides:(id)slides;	// 0x3603f73d
- (void)addSlide:(id)slide;	// 0x3603e739
- (void)addSlides:(id)slides;	// 0x3603e799
- (void)addText:(id)text;	// 0x3603fd55
- (void)addTexts:(id)texts;	// 0x3603fdb5
- (id)allSlides:(BOOL)slides;	// 0x36040d25
- (void)applyFormattedAttributes;	// 0x36041895
- (id)container;	// 0x36040f59
- (void)copySecondarySlides:(id)slides;	// 0x360425bd
- (void)copySlides:(id)slides;	// 0x360424a1
- (void)copyTexts:(id)texts;	// 0x360426d9
- (id)copyWithZone:(NSZone *)zone;	// 0x3603df79
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x360415b9
- (void)createSlidesWithPaths:(id)paths;	// 0x36041405
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x36041019
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x3604103d
- (void)dealloc;	// 0x3603de55
- (id)description;	// 0x3603dda5
- (id)effectAttributeForKey:(id)key;	// 0x3603e449
// converted property getter: - (id)effectAttributes;	// 0x3603e345
// declared property getter: - (id)effectID;	// 0x3603e08d
// declared property getter: - (id)effectTiming;	// 0x36040eed
- (void)encodeWithCoder:(id)coder;	// 0x3603d789
- (void)finalize;	// 0x3603de15
- (id)formattedAttributes;	// 0x36041791
- (double)fullDuration;	// 0x36041009
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x3603f781
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x3603e7dd
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x3603fdf9
// converted property getter: - (int)liveIndex;	// 0x36040efd
- (double)lowestDisplayTime;	// 0x36040f21
- (double)mainDuration;	// 0x36040479
- (int)maxNumberOfSecondarySlides;	// 0x36040fb9
- (int)maxNumberOfSlides;	// 0x36040f69
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x3603f5fd
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x36040345
// declared property getter: - (id)presetID;	// 0x3603e1cd
// converted property getter: - (int)randomSeed;	// 0x3603e2a5
- (void)removeAllSecondarySlides;	// 0x36040415
- (void)removeAllSlides;	// 0x3603f599
- (void)removeAllTexts;	// 0x360402e5
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x3603fbc1
- (void)removeSlidesAtIndices:(id)indices;	// 0x3603f1f9
- (void)removeTextsAtIndices:(id)indices;	// 0x3604017d
// converted property getter: - (id)secondarySlides;	// 0x3603f6cd
- (void)setDuration:(double)duration;	// 0x360404d9
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x3603e595
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x3603e3dd
// declared property setter: - (void)setEffectID:(id)anId;	// 0x3603e09d
- (void)setLayerEffect:(id)effect;	// 0x36041c9d
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x36040f0d
- (void)setPhaseInDuration:(double)duration;	// 0x36040651
- (void)setPhaseOutDuration:(double)duration;	// 0x360407c9
// declared property setter: - (void)setPresetID:(id)anId;	// 0x3603e1f1
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x3603e2b5
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x3604176d
- (id)slideForMCSlide:(id)mcslide;	// 0x360427f5
- (id)slideInformation;	// 0x3604196d
// declared property getter: - (id)slides;	// 0x3603e729
// declared property getter: - (id)texts;	// 0x3603fd45
- (void)updateTiming;	// 0x3604177d
@end

