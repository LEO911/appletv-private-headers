/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x3078f305; S=0x3078f965; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x30792a3d; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x30793805; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x3079500d; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x3078ee19; S=0x30792cb5; 
@property(copy) NSString *emailAddress;	// G=0x30791059; S=0x307910e1; 
@property(copy) NSArray *emailAddresses;	// G=0x307911b9; S=0x30791255; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x307937c1; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x307914ad; 
@property(copy) NSString *host;	// G=0x30790da9; S=0x30790e31; 
@property(readonly, assign) NSData *identityPersist;	// G=0x307920c1; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x3079237d; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x30791f81; 
@property(assign) BOOL needsRediscovery;	// G=0x30791a35; S=0x30791a55; 
@property(copy) NSString *password;	// G=0x307909e5; S=0x30790b3d; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x3078eb7d; 
@property(assign) int port;	// G=0x307915c1; S=0x3079164d; 
@property(copy) NSURL *principalURL;	// G=0x307917ed; S=0x307918ad; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x30791a71; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x3078f935; 
@property(copy) NSString *scheme;	// G=0x307916d9; S=0x30791761; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x30793819; S=0x3079382d; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x307919f9; S=0x30791a19; 
@property(assign, nonatomic) BOOL shouldFailAllTasks;	// G=0x30792585; S=0x30793851; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x307937d5; S=0x307937ed; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x30793861; S=0x30793879; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x30791399; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x3079383d; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x307a0639; S=0x307a063d; converted property
@property(assign) BOOL useSSL;	// G=0x30790f09; S=0x30790f91; 
@property(copy) NSString *user;	// G=0x307929d1; S=0x307929e1; 
@property(copy) NSString *username;	// G=0x3078fa9d; S=0x3078fb8d; 
@property(retain) id version;	// G=0x30790d01; S=0x30790d4d; converted property
+ (Class)accountClass;	// 0x3078f84d
+ (Class)classForAccountType:(id)accountType;	// 0x30792c25
+ (Class)clientClass;	// 0x30790271
+ (Class)daemonClass;	// 0x307902bd
+ (id)defaultProperties;	// 0x30792c21
+ (id)newAccountOfAccountType:(id)accountType;	// 0x30792c5d
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x3078f74d
- (id)initWithProperties:(id)properties;	// 0x3078e7f9
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x30793891
- (id)_exceptionsDict;	// 0x307921a5
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x30794cad
- (BOOL)_isIdentityManagedByProfile;	// 0x30792185
- (void)_removeHostsToTrust;	// 0x30792dc5
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x30794501
- (id)_serverSuffixesToAlwaysFail;	// 0x30793995
- (void)_setPersistentUUID:(id)uuid;	// 0x3078f949
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x30792df5
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x30790519
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x307912b9
// declared property getter: - (id)accountDescription;	// 0x3078f305
- (id)accountID;	// 0x3078ea81
- (int)accountIntPropertyForKey:(id)key;	// 0x30790581
- (BOOL)accountNeedsUpgrade;	// 0x30792cd1
- (id)accountPropertyForKey:(id)key;	// 0x30790309
- (id)addUsernameToURL:(id)url;	// 0x3079200d
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x30792a3d
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x307919f5
- (id)backingACAccountTypeIdentifier;	// 0x30792fa9
// declared property getter: - (id)backingAccountInfo;	// 0x30793805
// declared property getter: - (id)backingCredentialAccount;	// 0x3079500d
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x3079527d
- (void)cancelAllSearchQueries;	// 0x3079e4c1
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x30795325
- (void)cancelSearchQuery:(id)query;	// 0x3079e4bd
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x307953c5
- (void)checkValidityWithConsumer:(id)consumer;	// 0x307919ad
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x3079271d
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x307927e1
- (void)cleanupAccountFiles;	// 0x3079231d
- (id)consumerForTask:(id)task;	// 0x30790805
- (id)contactsFolders;	// 0x307953f5
- (CFURLStorageSessionRef)copyStorageSession;	// 0x307927e5
// declared property getter: - (int)daAccountVersion;	// 0x3078ee19
- (id)dataclassProperties;	// 0x30790159
- (void)dealloc;	// 0x3078ed15
- (id)defaultContactsFolder;	// 0x307953f1
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x30791be9
- (id)defaultEventsFolder;	// 0x3079526d
- (id)defaultNotesFolder;	// 0x307afb6d
- (id)defaultToDosFolder;	// 0x307a062d
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x3079545d
- (id)deletedItemsFolder;	// 0x30795455
- (id)description;	// 0x30792941
- (id)displayName;	// 0x3078fa41
- (id)domainOnly;	// 0x30790da5
// declared property getter: - (id)emailAddress;	// 0x30791059
// declared property getter: - (id)emailAddresses;	// 0x307911b9
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x307937c1
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x3078fcd9
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x307914ad
- (id)eventsFolders;	// 0x30795271
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x307921c1
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x307b6a9d
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x30793a21
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x307941c1
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x30792381
// declared property getter: - (id)host;	// 0x30790da9
// declared property getter: - (id)identityPersist;	// 0x307920c1
- (id)inboxFolder;	// 0x3079544d
- (BOOL)isActiveSyncAccount;	// 0x30792701
- (BOOL)isCalDAVAccount;	// 0x30792709
- (BOOL)isCalDAVChildAccount;	// 0x30792715
- (BOOL)isCardDAVAccount;	// 0x30792711
// declared property getter: - (BOOL)isChildAccount;	// 0x3079237d
- (BOOL)isDAMMeAccount;	// 0x3079270d
- (BOOL)isDisabled;	// 0x3078f209
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x3078fda1
- (BOOL)isEqualToAccount:(id)account;	// 0x30792659
- (BOOL)isHotmailAccount;	// 0x30792719
- (BOOL)isLDAPAccount;	// 0x30792705
// declared property getter: - (int)keychainAccessibilityType;	// 0x30791f81
- (id)localizedIdenticalAccountFailureMessage;	// 0x30794ebd
- (id)localizedInvalidPasswordMessage;	// 0x30794f65
- (BOOL)monitorFolderWithID:(id)anId;	// 0x30791ae9
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x30791ae5
// declared property getter: - (BOOL)needsRediscovery;	// 0x30791a35
- (id)notesFolders;	// 0x307afb71
// declared property getter: - (id)password;	// 0x307909e5
- (id)passwordWithExpected:(BOOL)expected;	// 0x3079083d
- (void)performSearchQuery:(id)query;	// 0x3079e419
// declared property getter: - (id)persistentUUID;	// 0x3078eb7d
// declared property getter: - (int)port;	// 0x307915c1
- (void)prepareForAccountSave;	// 0x30791c45
// declared property getter: - (id)principalURL;	// 0x307917ed
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x30795459
- (void)removeAccountPropertyForKey:(id)key;	// 0x307904b5
- (void)removeClientCertificateData;	// 0x30791bed
- (void)removeConsumerForTask:(id)task;	// 0x30790821
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x3079501d
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x30791a71
- (void)resetAccountID;	// 0x3078f869
- (BOOL)resetCertWarnings;	// 0x30792489
- (void)resetStatusReport;	// 0x307924b5
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x30795329
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x307905e9
- (void)saveAccountProperties;	// 0x30791c49
- (void)saveAccountSettings;	// 0x30792b69
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x30792b19
// declared property getter: - (id)scheduleIdentifier;	// 0x3078f935
// declared property getter: - (id)scheme;	// 0x307916d9
- (BOOL)searchQueriesRunning;	// 0x3079e4c5
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x30795279
- (id)sentItemsFolder;	// 0x30795451
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x30790541
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x3078f965
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x307905a9
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x307903dd
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x307907a9
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x30792cb5
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x307910e1
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x30791255
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x3078fe7d
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x30791535
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x30792205
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x307923c5
// declared property setter: - (void)setHost:(id)host;	// 0x30790e31
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x307920dd
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x30791a55
// declared property setter: - (void)setPassword:(id)password;	// 0x30790b3d
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x30790a1d
// declared property setter: - (void)setPort:(int)port;	// 0x3079164d
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x307918ad
// declared property setter: - (void)setScheme:(id)scheme;	// 0x30791761
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x3079382d
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x30791a19
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x30793851
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x307937ed
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x30793879
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x30791421
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x307a063d
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x30790f91
// declared property setter: - (void)setUser:(id)user;	// 0x307929e1
// declared property setter: - (void)setUsername:(id)username;	// 0x3078fb8d
// converted property setter: - (void)setVersion:(id)version;	// 0x30790d4d
// declared property getter: - (id)settingsTemplate;	// 0x30793819
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x307919f9
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x30792585
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x307937d5
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x30793861
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x30791399
- (id)spinnerIdentifiers;	// 0x30790225
- (id)stateString;	// 0x307906f9
// declared property getter: - (id)statusReport;	// 0x3079383d
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x30790695
- (void)stopMonitoringFolders;	// 0x30791b85
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x30791b21
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x3078fc8d
- (int)supportsEmailFlagging;	// 0x3079e4cd
- (int)supportsMailboxSearch;	// 0x3079e4c9
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x30790631
- (id)syncStoreIdentifier;	// 0x3078ed05
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x307b6aa1
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x307953f9
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x30795275
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x307afb75
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x307a0635
- (void)tearDown;	// 0x30791a81
- (id)toDosFolders;	// 0x307a0631
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x307a0639
- (BOOL)upgradeAccount;	// 0x30792f49
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x30792fa5
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x30792fad
- (void)upgradeToHoodooAccountInfo;	// 0x30792fa1
- (id)urlForKeychain;	// 0x307929f1
// declared property getter: - (BOOL)useSSL;	// 0x30790f09
// declared property getter: - (id)user;	// 0x307929d1
// declared property getter: - (id)username;	// 0x3078fa9d
- (id)usernameWithoutDomain;	// 0x30790d95
- (BOOL)usesLegacyAccountSettings;	// 0x30792929
// converted property getter: - (id)version;	// 0x30790d01
@end

