/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <NSObject.h> // Unknown library

@class NSMutableArray, NSArray, NSTimer, NSMutableSet, DAAccount;
@protocol DATask;

@interface DATaskManager : NSObject {
	DAAccount *_account;	// 4 = 0x4
	NSMutableArray *_queuedExclusiveTasks;	// 8 = 0x8
	id<DATask> _activeExclusiveTask;	// 12 = 0xc
	NSMutableSet *_independentTasks;	// 16 = 0x10
	NSMutableSet *_heldIndependentTasks;	// 20 = 0x14
	NSMutableSet *_modalHeldIndependentTasks;	// 24 = 0x18
	NSMutableArray *_queuedTasks;	// 28 = 0x1c
	id<DATask> _activeQueuedTask;	// 32 = 0x20
	id<DATask> _modalHeldActiveQueuedTask;	// 36 = 0x24
	NSMutableArray *_queuedModalTasks;	// 40 = 0x28
	id<DATask> _activeModalTask;	// 44 = 0x2c
	int _state;	// 48 = 0x30
	NSTimer *_managerIdleTimer;	// 52 = 0x34
}
@property(assign) DAAccount *account;	// G=0x307a4555; S=0x307a4631; @synthesize=_account
@property(readonly, assign) id<DATask> activeModalTask;	// G=0x307a3d45; @synthesize=_activeModalTask
@property(readonly, assign) id<DATask> activeQueuedTask;	// G=0x307a8875; @synthesize=_activeQueuedTask
@property(readonly, assign) NSArray *allTasks;	// G=0x307a3969; 
@property(readonly, assign) NSArray *queuedTasks;	// G=0x307a8889; @synthesize=_queuedTasks
- (id)init;	// 0x3078ee05
- (id)initWithAccount:(id)account;	// 0x307a3d55
- (void)_cancelTasksWithReason:(int)reason;	// 0x307a82d9
- (id)_getHeldIndependentTasks;	// 0x307a872d
- (id)_getIndependentTasks;	// 0x307a86dd
- (id)_getModalHeldIndependentTasks;	// 0x307a877d
- (id)_getQueuedExclusiveTasks;	// 0x307a868d
- (id)_getQueuedModalTasks;	// 0x307a881d
- (id)_getQueuedTasks;	// 0x307a87cd
- (BOOL)_hasTasksForcingNetworkConnection;	// 0x307a55a1
- (void)_makeStateTransition;	// 0x307a7539
- (void)_performTask:(id)task;	// 0x307a6fb1
- (void)_populateVersionDescriptions;	// 0x307a4471
- (void)_reactivateHeldTasks;	// 0x307a72cd
- (void)_releasePowerAssertionForTask:(id)task;	// 0x307a8595
- (void)_requestCancelTasksWithReason:(int)reason;	// 0x307a70a9
- (void)_retainPowerAssertionForTask:(id)task;	// 0x307a84fd
- (void)_schedulePerformTask:(id)task;	// 0x307a8251
- (void)_scheduleSelector:(SEL)selector withArgument:(id)argument;	// 0x307a81ad
- (void)_scheduleStartModal:(id)modal;	// 0x307a8271
- (void)_startModal:(id)modal;	// 0x307a71e9
- (BOOL)_taskForcesNetworking:(id)networking;	// 0x307a549d
- (BOOL)_taskInQueueForcesNetworkConnection:(id)queueForcesNetworkConnection;	// 0x307a54dd
- (BOOL)_useFakeDescriptions;	// 0x307a44fd
- (void)_useOpportunisticSocketsAgain;	// 0x307a5421
- (id)_version;	// 0x307a44d5
// declared property getter: - (id)account;	// 0x307a4555
- (id)accountID;	// 0x307a4739
- (id)accountPersistentUUID;	// 0x307a4759
// declared property getter: - (id)activeModalTask;	// 0x307a3d45
// declared property getter: - (id)activeQueuedTask;	// 0x307a8875
// declared property getter: - (id)allTasks;	// 0x307a3969
- (void)cancelAllTasks;	// 0x307a501d
- (void)cancelTask:(id)task;	// 0x307a5009
- (void)cancelTask:(id)task withUnderlyingError:(id)underlyingError;	// 0x307a4fa9
- (void)dealloc;	// 0x307a3e39
- (id)deviceType;	// 0x307a4501
- (id)identityPersist;	// 0x307a46f9
- (id)password;	// 0x307a46b5
- (int)port;	// 0x307a4675
// declared property getter: - (id)queuedTasks;	// 0x307a8889
- (id)scheme;	// 0x307a4719
- (id)server;	// 0x307a4695
// declared property setter: - (void)setAccount:(id)account;	// 0x307a4631
- (void)shutdown;	// 0x307a50e9
- (id)stateString;	// 0x307a5251
- (void)submitExclusiveTask:(id)task;	// 0x307a4779
- (void)submitExclusiveTask:(id)task toFrontOfQueue:(BOOL)queue;	// 0x307a478d
- (void)submitIndependentTask:(id)task;	// 0x307a4aa5
- (void)submitQueuedTask:(id)task;	// 0x307a4d0d
- (void)taskDidFinish:(id)task;	// 0x307a5721
- (void)taskEndModal:(id)modal;	// 0x307a6b75
- (BOOL)taskIsModal:(id)modal;	// 0x307a6ead
- (void)taskManagerDidAddTask:(id)taskManager;	// 0x307a886d
- (void)taskManagerWillRemoveTask:(id)taskManager;	// 0x307a8871
- (void)taskRequestModal:(id)modal;	// 0x307a65e1
- (BOOL)useSSL;	// 0x307a46d5
- (id)user;	// 0x307a4655
- (id)userAgent;	// 0x307a4505
@end

