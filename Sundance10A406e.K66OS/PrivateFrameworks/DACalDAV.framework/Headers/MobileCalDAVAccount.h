/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, NSDate, MobileCalDAVPrincipal, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString, NSSet;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x378a51e1; S=0x378a5215; 
@property(readonly, assign) NSSet *calendars;	// G=0x378a59b1; 
@property(retain) NSURL *collectionSetURL;	// G=0x378a56c9; S=0x378a570d; 
@property(retain) id host;	// G=0x378a9f75; S=0x378a9fed; converted property
@property(assign) BOOL isRefreshing;	// G=0x378aa369; S=0x378aa381; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x378a579d; S=0x378a5809; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x378aa3ed; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x378aa415; S=0x378aa429; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x378aa401; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x378aa3bd; S=0x378aa3d5; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x378a63c5; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x378a638d; 
@property(assign) int overriddenPort;	// G=0x378a5335; S=0x378a52d5; 
@property(retain) NSString *overriddenScheme;	// G=0x378a53c9; S=0x378a5369; 
@property(retain) NSString *overriddenServer;	// G=0x378a52b9; S=0x378a5259; 
@property(assign) int port;	// G=0x378aa27d; S=0x378aa1f5; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x378aa44d; S=0x378aa461; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x378aa479; S=0x378aa48d; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x378a53e5; S=0x378a5405; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x378aa439; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x378aa399; S=0x378aa3ad; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x378aa0b5; S=0x378aa12d; converted property
@property(retain) id searchPropertySet;	// G=0x378a5749; S=0x378a5759; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x378aa4a5; S=0x378aa4bd; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x378a61a9; S=0x378a6221; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x378a63fd; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x378a6495; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x378a6449; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x378a51c1; S=0x378a5125; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x378a65c1; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x378a64fd; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x378a6615; converted property
@property(assign) BOOL useSSL;	// G=0x378aa339; S=0x378aa309; converted property
@property(retain) id username;	// G=0x378a9e41; S=0x378a9ea9; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x378a6371; 
@property(assign) BOOL wasMigrated;	// G=0x378a584d; S=0x378a5895; 
+ (Class)accountClass;	// 0x378a43a1
+ (Class)clientClass;	// 0x378a43bd
+ (id)defaultProperties;	// 0x378a3b05
+ (id)supportedDataclasses;	// 0x378a43d9
- (id)init;	// 0x378a3c49
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x378a3ac1
- (id)initWithProperties:(id)properties;	// 0x378a3a7d
- (id)_calendarConstraintsPath;	// 0x378a6769
- (id)_calendarConstraintsResource;	// 0x378a6665
- (void)_clearOrphanedCalendarItemChangesOfType:(int)type withContext:(id)context goodCalendarIds:(id)ids;	// 0x378a6f41
- (void)_clearOrphanedChangesWithChangesCall:(/*function-pointer*/ void *)changesCall clearChanges:(/*function-pointer*/ void *)changes withContext:(id)context;	// 0x378a71a9
- (void)_clearOrphanedChangesWithContext:(id)context;	// 0x378a73f5
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x378a7d85
- (void)_collectMoveActions;	// 0x378a8299
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x378a4bc5
- (id)_oldURLsForKeychain;	// 0x378a496d
- (id)_powerAssertionContext;	// 0x378a989d
- (id)_powerAssertionGroupIdentifier;	// 0x378a98a1
- (void)_setSpinning:(BOOL)spinning;	// 0x378a6e05
- (void)_updateCalendarStore:(BOOL)store;	// 0x378a6c35
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x378a6b31
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x378a6835
- (void)_upgradeAccountToTelluride;	// 0x378a4471
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x378a4bd1
- (BOOL)accountNeedsUpgrade;	// 0x378a5029
- (void)addCalendar:(id)calendar;	// 0x378a58ed
- (void)addPrincipal:(id)principal;	// 0x378a6115
// declared property getter: - (int)calDAVAccountVersion;	// 0x378a51e1
// declared property getter: - (id)calendars;	// 0x378a59b1
- (void)cancelAllSearchQueries;	// 0x378a9151
- (void)cancelRefresh;	// 0x378a6e69
- (void)cancelSearchQuery:(id)query;	// 0x378a8fed
- (void)checkValidityWithConsumer:(id)consumer;	// 0x378a9655
// declared property getter: - (id)collectionSetURL;	// 0x378a56c9
- (void)configureAccount;	// 0x378a35c5
- (void *)copyCalStore;	// 0x378a67e1
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x378a9db5
- (int)coreDAVLogLevel;	// 0x378a9d95
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x378a9e1d
- (int)coreDAVOutputLevel;	// 0x378a9dad
- (void)coreDAVTransmittedDataFinished;	// 0x378a9e3d
- (void)dealloc;	// 0x378a3c89
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x378a92b1
- (void)dropPowerAssertions;	// 0x378a99bd
// converted property getter: - (id)host;	// 0x378a9f75
- (BOOL)isCalDAVAccount;	// 0x378a9a5d
- (BOOL)isEqualToAccount:(id)account;	// 0x378a9a61
// declared property getter: - (BOOL)isRefreshing;	// 0x378aa369
// declared property getter: - (BOOL)isWritable;	// 0x378a579d
// declared property getter: - (id)itemIDsToMoveActions;	// 0x378aa3ed
- (id)localizedIdenticalAccountFailureMessage;	// 0x378a9c6d
- (id)localizedInvalidPasswordMessage;	// 0x378a9ce5
// declared property getter: - (id)mainPrincipal;	// 0x378aa415
// declared property getter: - (id)movedItemURLStrings;	// 0x378aa401
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x378aa3bd
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x378a63c5
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x378a638d
// declared property getter: - (int)overriddenPort;	// 0x378a5335
// declared property getter: - (id)overriddenScheme;	// 0x378a53c9
// declared property getter: - (id)overriddenServer;	// 0x378a52b9
- (void)performSearchQuery:(id)query;	// 0x378a8c61
// converted property getter: - (int)port;	// 0x378aa27d
// declared property getter: - (int)preferredEventDaysToSync;	// 0x378aa44d
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x378aa479
- (void)prepareForAccountSave;	// 0x378a3edd
// converted property getter: - (id)principalURL;	// 0x378a53e5
// declared property getter: - (id)principals;	// 0x378aa439
- (id)properties;	// 0x378a4361
- (void)reattainPowerAssertions;	// 0x378a9a0d
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x378a75f9
// declared property getter: - (id)refreshContext;	// 0x378aa399
- (void)refreshWithContext:(id)context;	// 0x378a8571
- (void)releasePowerAssertion;	// 0x378a9915
- (void)reloadCalendars;	// 0x378a6045
- (void)removeCalendar:(id)calendar;	// 0x378a5945
- (void)removePrincipal:(id)principal;	// 0x378a616d
- (void)retainPowerAssertion;	// 0x378a98b1
// converted property getter: - (id)scheme;	// 0x378aa0b5
// declared property getter: - (id)searchPropertySet;	// 0x378a5749
- (BOOL)searchQueriesRunning;	// 0x378a9281
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x378aa4a5
- (id)serverBaseURL;	// 0x378a55e1
// declared property getter: - (id)serverVersion;	// 0x378a61a9
- (void)setAccountDescription:(id)description;	// 0x378a5685
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x378a5215
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x378a570d
// converted property setter: - (void)setHost:(id)host;	// 0x378a9fed
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x378aa381
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x378a5809
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x378aa429
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x378aa3d5
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x378a52d5
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x378a5369
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x378a5259
// converted property setter: - (void)setPort:(int)port;	// 0x378aa1f5
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x378aa461
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x378aa48d
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x378a5405
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x378aa3ad
// converted property setter: - (void)setScheme:(id)scheme;	// 0x378aa12d
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x378a5759
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x378aa4bd
// declared property setter: - (void)setServerVersion:(id)version;	// 0x378a6221
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x378a5125
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x378aa309
// converted property setter: - (void)setUsername:(id)username;	// 0x378a9ea9
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x378a5895
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x378a63fd
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x378a6495
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x378a6449
- (BOOL)shouldLogTransmittedData;	// 0x378a9df9
- (void)shutdown;	// 0x378a92ad
- (id)spinnerIdentifiers;	// 0x378a6da5
- (id)stateString;	// 0x378a4409
// declared property getter: - (id)subscribedCalendars;	// 0x378a51c1
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x378a43f9
// declared property getter: - (BOOL)supportsEvents;	// 0x378a65c1
// declared property getter: - (BOOL)supportsReminders;	// 0x378a64fd
- (void)task:(id)task didFinishWithError:(id)error;	// 0x378a8929
// converted property getter: - (id)taskManager;	// 0x378a6615
- (BOOL)upgradeAccount;	// 0x378a4fa1
// converted property getter: - (BOOL)useSSL;	// 0x378aa339
// converted property getter: - (id)username;	// 0x378a9e41
- (BOOL)usesTokenAuth;	// 0x378a6611
// declared property getter: - (id)viewedTimeZone;	// 0x378a6371
// declared property getter: - (BOOL)wasMigrated;	// 0x378a584d
- (id)wellKnownPaths;	// 0x378a94bd
@end

