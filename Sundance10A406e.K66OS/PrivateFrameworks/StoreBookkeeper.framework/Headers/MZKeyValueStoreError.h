/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import <NSError.h> // Unknown library
#import "StoreBookkeeper-Structs.h"

@class MZKeyValueStoreTransaction;

@interface MZKeyValueStoreError : NSError {
	MZKeyValueStoreTransaction *_transaction;	// 20 = 0x14
}
@property(retain, nonatomic) MZKeyValueStoreTransaction *transaction;	// G=0x35f82181; S=0x35f82191; @synthesize=_transaction
+ (id)delegateCancelledErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81f65
+ (id)keyValueStoreDisabledErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81325
+ (id)keyValueStoreErrorWithCode:(int)code localizedDescription:(id)description transaction:(id)transaction underlyingError:(id)error;	// 0x35f810b9
+ (id)killSwitchErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81a49
+ (id)networkingBlockedErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f819fd
+ (id)noStoreAccountErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81db5
+ (id)serverClampErrorWithTransaction:(id)transaction retrySeconds:(double)seconds underlyingError:(id)error;	// 0x35f82085
+ (id)storeAccountMismatchErrorWithPreviousStoreAccountText:(id)previousStoreAccountText currentStoreAccontText:(id)text transaction:(id)transaction underlyingError:(id)error;	// 0x35f81b5d
+ (id)storeAccountSessionExpiredWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81df5
+ (id)storeGenericErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81c39
+ (id)storeLoggedOutErrorWithPreviousStoreAccountText:(id)previousStoreAccountText transaction:(id)transaction underlyingError:(id)error;	// 0x35f81a95
+ (id)storeValidationErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81cb1
+ (id)transactionCancelledErrorWithTransaction:(id)transaction code:(int)code underlyingError:(id)error;	// 0x35f81ed9
+ (id)transactionCancelledErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81f45
+ (id)transactionMissingDomainErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81e41
+ (id)transactionMissingURLErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81e8d
+ (id)transactionTimeoutErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81f21
+ (id)unknownErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f811dd
+ (id)userCancelledSignInErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81d29
+ (id)userClampErrorWithTransaction:(id)transaction retrySeconds:(double)seconds underlyingError:(id)error;	// 0x35f81f89
+ (id)userEnteredWrongCredentialsErrorWithTransaction:(id)transaction underlyingError:(id)error;	// 0x35f81d69
- (id)copyWithZone:(NSZone *)zone;	// 0x35f81061
- (id)currentStoreAccountKey;	// 0x35f80fe9
- (void)dealloc;	// 0x35f80de9
- (id)description;	// 0x35f80e39
- (BOOL)isAccountsChangedError;	// 0x35f80ec5
- (BOOL)isAuthenticationError;	// 0x35f80ea1
- (BOOL)isClampError;	// 0x35f80f49
- (BOOL)isRecoverableError;	// 0x35f80eed
- (BOOL)isTransactionCancelledError;	// 0x35f80f6d
- (BOOL)isTransactionMissingInformationError;	// 0x35f80f91
- (id)previousStoreAccountKey;	// 0x35f80fb5
- (double)retrySeconds;	// 0x35f8101d
// declared property setter: - (void)setTransaction:(id)transaction;	// 0x35f82191
// declared property getter: - (id)transaction;	// 0x35f82181
@end

