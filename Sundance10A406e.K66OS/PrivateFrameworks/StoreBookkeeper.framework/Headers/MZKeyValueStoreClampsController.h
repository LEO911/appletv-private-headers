/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import <NSObject.h> // Unknown library
#import "NSCoding.h"

@class NSData, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface MZKeyValueStoreClampsController : NSObject <NSCoding> {
	NSObject<OS_dispatch_queue> *_queue;	// 4 = 0x4
	NSMutableDictionary *_transactionClamps;	// 8 = 0x8
	double _dsidCheckTimestamp;	// 12 = 0xc
	double _authenticationNeededTimestamp;	// 20 = 0x14
	double _userAcceptedSyncTimestamp;	// 28 = 0x1c
	double _networkingBlockedUntil;	// 36 = 0x24
	double _backOffUntil;	// 44 = 0x2c
	double _userCancelledSignInBackOffUntil;	// 52 = 0x34
	NSData *_pendingUserDefaultArchivedData;	// 60 = 0x3c
	double _nextUserCancelBackOffInterval;	// 64 = 0x40
}
@property(assign) double authenticationNeededTimestamp;	// G=0x35f7c331; S=0x35f7c365; @synthesize=_authenticationNeededTimestamp
@property(assign) double backOffUntil;	// G=0x35f7c469; S=0x35f7c49d; @synthesize=_backOffUntil
@property(assign) double dsidCheckTimestamp;	// G=0x35f7c2c9; S=0x35f7c2fd; @synthesize=_dsidCheckTimestamp
@property(assign) double networkingBlockedUntil;	// G=0x35f7c401; S=0x35f7c435; @synthesize=_networkingBlockedUntil
@property(assign) double nextUserCancelBackOffInterval;	// G=0x35f7c55d; S=0x35f7c591; @synthesize=_nextUserCancelBackOffInterval
@property(retain) NSData *pendingUserDefaultArchivedData;	// G=0x35f7c539; S=0x35f7c54d; @synthesize=_pendingUserDefaultArchivedData
@property(retain, nonatomic) NSMutableDictionary *transactionClamps;	// G=0x35f7c2a9; S=0x35f7c2b9; @synthesize=_transactionClamps
@property(assign) double userAcceptedSyncTimestamp;	// G=0x35f7c399; S=0x35f7c3cd; @synthesize=_userAcceptedSyncTimestamp
@property(assign) double userCancelledSignInBackOffUntil;	// G=0x35f7c4d1; S=0x35f7c505; @synthesize=_userCancelledSignInBackOffUntil
+ (id)sharedClampsController;	// 0x35f7a881
- (id)init;	// 0x35f7a97d
- (id)initWithCoder:(id)coder;	// 0x35f7ab85
- (BOOL)_canScheduleTransactionBasedOfNetworkingBlocked:(id)networkingBlocked error:(id *)error;	// 0x35f7bda1
- (BOOL)_canScheduleTransactionBasedOnBackOff:(id)off error:(id *)error;	// 0x35f7bfa1
- (BOOL)_canScheduleTransactionBasedOnDSIDCheck:(id)check error:(id *)error;	// 0x35f7beb1
- (BOOL)_canScheduleTransactionBasedOnType:(id)type error:(id *)error;	// 0x35f7bc29
- (BOOL)_canScheduleTransactionBasedOnUserCancelledSignIn:(id)anIn error:(id *)error;	// 0x35f7c121
- (id)_keyForTransaction:(id)transaction;	// 0x35f7bb85
- (double)_rightNow;	// 0x35f7bb51
// declared property getter: - (double)authenticationNeededTimestamp;	// 0x35f7c331
- (void)backOffForTimeInterval:(double)timeInterval;	// 0x35f7b9c9
// declared property getter: - (double)backOffUntil;	// 0x35f7c469
- (BOOL)canScheduleTransaction:(id)transaction error:(id *)error;	// 0x35f7b241
- (void)clearAuthenticationRequest;	// 0x35f7b589
- (void)clearBackOff;	// 0x35f7ba21
- (void)clearDSIDCheckTimestamp;	// 0x35f7b501
- (void)clearNetworkingBlocked;	// 0x35f7bab9
- (void)clearTimestampForTransaction:(id)transaction;	// 0x35f7b461
- (void)clearUserAcceptedSyncTimestamp;	// 0x35f7b739
- (void)clearUserCancelledSignIn;	// 0x35f7b969
- (void)dealloc;	// 0x35f7b051
- (id)description;	// 0x35f7b0d9
// declared property getter: - (double)dsidCheckTimestamp;	// 0x35f7c2c9
- (void)encodeWithCoder:(id)coder;	// 0x35f7aa15
- (BOOL)hasAuthenticatedTooRecentlyForTransaction:(id)transaction error:(id *)error;	// 0x35f7b5c9
- (BOOL)hasUserRecentlyAcceptedSync;	// 0x35f7b779
- (BOOL)isNetworkingBlocked;	// 0x35f7bad9
// declared property getter: - (double)networkingBlockedUntil;	// 0x35f7c401
// declared property getter: - (double)nextUserCancelBackOffInterval;	// 0x35f7c55d
// declared property getter: - (id)pendingUserDefaultArchivedData;	// 0x35f7c539
- (void)reset;	// 0x35f7b2dd
- (void)saveToUserDefaults;	// 0x35f7acb9
// declared property setter: - (void)setAuthenticationNeededTimestamp:(double)timestamp;	// 0x35f7c365
- (void)setAuthenticationRequest;	// 0x35f7b541
// declared property setter: - (void)setBackOffUntil:(double)until;	// 0x35f7c49d
- (void)setDSIDCheckTimestamp;	// 0x35f7b4b9
// declared property setter: - (void)setDsidCheckTimestamp:(double)timestamp;	// 0x35f7c2fd
- (void)setNetworkingBlocked;	// 0x35f7ba61
// declared property setter: - (void)setNetworkingBlockedUntil:(double)until;	// 0x35f7c435
// declared property setter: - (void)setNextUserCancelBackOffInterval:(double)interval;	// 0x35f7c591
// declared property setter: - (void)setPendingUserDefaultArchivedData:(id)data;	// 0x35f7c54d
- (void)setTimestampForTransaction:(id)transaction;	// 0x35f7b3fd
// declared property setter: - (void)setTransactionClamps:(id)clamps;	// 0x35f7c2b9
- (void)setUserAcceptedSyncTimestamp;	// 0x35f7b6f5
// declared property setter: - (void)setUserAcceptedSyncTimestamp:(double)timestamp;	// 0x35f7c3cd
- (void)setUserCancelledSignIn;	// 0x35f7b821
// declared property setter: - (void)setUserCancelledSignInBackOffUntil:(double)backOffUntil;	// 0x35f7c505
// declared property getter: - (id)transactionClamps;	// 0x35f7c2a9
// declared property getter: - (double)userAcceptedSyncTimestamp;	// 0x35f7c399
// declared property getter: - (double)userCancelledSignInBackOffUntil;	// 0x35f7c4d1
@end

