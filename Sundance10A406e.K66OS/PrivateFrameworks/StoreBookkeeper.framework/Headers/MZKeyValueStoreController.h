/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper
 */

#import "MZKeyValueStoreOperationDelegate.h"
#import "MZKeyValueStoreDeserializeOperationDelegate.h"
#import <NSObject.h> // Unknown library

@class NSString, NSMutableArray, MZKeyValueStoreAuthenticationController, NSOperationQueue, MZKeyValueStoreTransaction, MZTaskAssertion, MZKeyValueStoreDeserializer, NSURL;
@protocol MZKeyValueStoreControllerDelegate, OS_dispatch_queue;

@interface MZKeyValueStoreController : NSObject <MZKeyValueStoreOperationDelegate, MZKeyValueStoreDeserializeOperationDelegate> {
	id<MZKeyValueStoreControllerDelegate> _delegate;	// 4 = 0x4
	NSURL *_defaultGetURL;	// 8 = 0x8
	NSURL *_defaultSetURL;	// 12 = 0xc
	NSString *_defaultDomain;	// 16 = 0x10
	BOOL _enabled;	// 20 = 0x14
	MZKeyValueStoreAuthenticationController *_authenticationController;	// 24 = 0x18
	NSMutableArray *_pendingTransactions;	// 28 = 0x1c
	MZKeyValueStoreTransaction *_currentTransaction;	// 32 = 0x20
	NSOperationQueue *_operationQueue;	// 36 = 0x24
	BOOL _resolvingError;	// 40 = 0x28
	MZKeyValueStoreDeserializer *_currentDeserializer;	// 44 = 0x2c
	NSObject<OS_dispatch_queue> *_dispatchQueue;	// 48 = 0x30
	MZTaskAssertion *_backgroundTaskAssertion;	// 52 = 0x34
	id _networkTypeObserver;	// 56 = 0x38
}
@property(retain) MZKeyValueStoreAuthenticationController *authenticationController;	// G=0x35f7ff51; S=0x35f7ff65; @synthesize=_authenticationController
@property(retain, nonatomic) MZTaskAssertion *backgroundTaskAssertion;	// G=0x35f80065; S=0x35f80075; @synthesize=_backgroundTaskAssertion
@property(retain, nonatomic) MZKeyValueStoreDeserializer *currentDeserializer;	// G=0x35f80025; S=0x35f80035; @synthesize=_currentDeserializer
@property(retain, nonatomic) MZKeyValueStoreTransaction *currentTransaction;	// G=0x35f7ffc5; S=0x35f7ffd5; @synthesize=_currentTransaction
@property(copy) NSString *defaultDomain;	// G=0x35f7ff2d; S=0x35f7ff41; @synthesize=_defaultDomain
@property(retain) NSURL *defaultGetURL;	// G=0x35f7fee5; S=0x35f7fef9; @synthesize=_defaultGetURL
@property(retain) NSURL *defaultSetURL;	// G=0x35f7ff09; S=0x35f7ff1d; @synthesize=_defaultSetURL
@property(assign) id<MZKeyValueStoreControllerDelegate> delegate;	// G=0x35f7feb9; S=0x35f7fecd; @synthesize=_delegate
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;	// G=0x35f80045; S=0x35f80055; @synthesize=_dispatchQueue
@property(assign, getter=isEnabled) BOOL enabled;	// G=0x35f7ff75; S=0x35f7ff8d; @synthesize=_enabled
@property(assign, nonatomic) id networkTypeObserver;	// G=0x35f80085; S=0x35f80095; @synthesize=_networkTypeObserver
@property(retain, nonatomic) NSOperationQueue *operationQueue;	// G=0x35f7ffe5; S=0x35f7fff5; @synthesize=_operationQueue
@property(retain, nonatomic) NSMutableArray *pendingTransactions;	// G=0x35f7ffa5; S=0x35f7ffb5; @synthesize=_pendingTransactions
@property(assign, nonatomic, getter=isResolvingError) BOOL resolvingError;	// G=0x35f80005; S=0x35f80015; @synthesize=_resolvingError
- (id)initWithDomain:(id)domain baseURLForGETAll:(id)getall baseURLForPUTAll:(id)putall;	// 0x35f7c5c5
- (void)_addPendingTransaction:(id)transaction;	// 0x35f7e195
- (BOOL)_authenticationCanProcessTransaction:(id)transaction error:(id *)error;	// 0x35f7e34d
- (void)_beginBackgroundTask;	// 0x35f7f57d
- (BOOL)_canScheduleTransaction:(id)transaction error:(id *)error;	// 0x35f7e1fd
- (void)_cancelAllTransactions:(id)transactions;	// 0x35f7d9f1
- (void)_cancelTransaction:(id)transaction error:(id)error;	// 0x35f7db35
- (BOOL)_clampsCanScheduleTransaction:(id)transaction error:(id *)error;	// 0x35f7e31d
- (void)_currentTransactionDidFinish;	// 0x35f7e4c9
- (BOOL)_delegateShouldScheduleTransaction:(id)_delegate error:(id *)error;	// 0x35f7f1f1
- (void)_delegateTransactionDidCancel:(id)_delegateTransaction withError:(id)error;	// 0x35f7f389
- (BOOL)_delegateTransactionDidFail:(id)_delegateTransaction withError:(id)error;	// 0x35f7f289
- (void)_delegateTransactionDidFinish:(id)_delegateTransaction;	// 0x35f7f485
- (void)_endBackgroundTask;	// 0x35f7f801
- (void)_errorResolutionCancel:(id)cancel;	// 0x35f7f10d
- (void)_errorResolutionDefault:(id)aDefault;	// 0x35f7f171
- (void)_errorResolutionRetry:(id)retry;	// 0x35f7f001
- (BOOL)_isEnabledForTransaction:(id)transaction error:(id *)error;	// 0x35f7e261
- (BOOL)_isTransactionValid:(id)valid error:(id *)error;	// 0x35f7e2ad
- (void)_processCurrentTransaction;	// 0x35f7de91
- (void)_processOperationOutput:(id)output operationAuthenticated:(BOOL)authenticated;	// 0x35f7e929
- (void)_processPendingTransactions;	// 0x35f7dced
- (id)_requestForTransaction:(id)transaction;	// 0x35f7dfe1
- (void)_resolveError:(id)error resolution:(int)resolution;	// 0x35f7ef21
- (void)_scheduleTransaction:(id)transaction;	// 0x35f7e0b9
- (id)_scheduleTransactionWithType:(int)type sinceDomainVersion:(id)version URL:(id)url keys:(id)keys processor:(id)processor;	// 0x35f7e411
- (void)_transactionDidCancel:(id)_transaction withError:(id)error;	// 0x35f7e7a1
- (void)_transactionDidFail:(id)_transaction withError:(id)error;	// 0x35f7e5f5
// declared property getter: - (id)authenticationController;	// 0x35f7ff51
// declared property getter: - (id)backgroundTaskAssertion;	// 0x35f80065
- (void)cancelAllTransactions;	// 0x35f7d34d
- (void)cancelAllTransactionsCancelCode:(int)code;	// 0x35f7d505
- (void)cancelScheduledTransaction:(id)transaction;	// 0x35f7d275
- (id)clampsController;	// 0x35f7d0b5
- (void)clearWeakReferencesInOperation:(id)operation;	// 0x35f7cff1
// declared property getter: - (id)currentDeserializer;	// 0x35f80025
// declared property getter: - (id)currentTransaction;	// 0x35f7ffc5
- (void)dealloc;	// 0x35f7c981
// declared property getter: - (id)defaultDomain;	// 0x35f7ff2d
// declared property getter: - (id)defaultGetURL;	// 0x35f7fee5
// declared property getter: - (id)defaultSetURL;	// 0x35f7ff09
// declared property getter: - (id)delegate;	// 0x35f7feb9
- (void)deserializeOperationDidFinish:(id)deserializeOperation shouldReschedule:(BOOL)reschedule;	// 0x35f7fe31
// declared property getter: - (id)dispatchQueue;	// 0x35f80045
// declared property getter: - (BOOL)isEnabled;	// 0x35f7ff75
- (BOOL)isIdle;	// 0x35f7d811
// declared property getter: - (BOOL)isResolvingError;	// 0x35f80005
- (void)keyValueStoreOperation:(id)operation scheduleURLOperation:(id)operation2;	// 0x35f7fdc5
- (void)keyValueStoreOperationOperationDidFinish:(id)keyValueStoreOperationOperation;	// 0x35f7fe21
// declared property getter: - (id)networkTypeObserver;	// 0x35f80085
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x35f7cc39
- (void)operation:(id)operation didReceiveResponse:(id)response;	// 0x35f7f9b1
- (void)operation:(id)operation failedWithError:(id)error;	// 0x35f7fae1
- (void)operation:(id)operation finishedWithOutput:(id)output;	// 0x35f7f8d1
// declared property getter: - (id)operationQueue;	// 0x35f7ffe5
- (void)operationQueue:(id)queue willAddOperation:(id)operation;	// 0x35f7d049
- (void)operationQueue:(id)queue willRemoveOperation:(id)operation;	// 0x35f7d0a1
// declared property getter: - (id)pendingTransactions;	// 0x35f7ffa5
- (void)performBlock:(id)block;	// 0x35f7d9b1
- (void)performBlockAndWait:(id)wait;	// 0x35f7d9d1
- (void)reset;	// 0x35f7d77d
- (void)resolveError:(id)error resolution:(int)resolution;	// 0x35f7d6c9
- (id)scheduleGetAllTransactionWithSinceDomainVersion:(id)sinceDomainVersion processor:(id)processor;	// 0x35f7d0d1
- (id)scheduleGetTransactionWithKeys:(id)keys processor:(id)processor;	// 0x35f7d111
- (id)scheduleSetTransactionWithKeys:(id)keys processor:(id)processor;	// 0x35f7d151
- (void)scheduleTransaction:(id)transaction;	// 0x35f7d191
// declared property setter: - (void)setAuthenticationController:(id)controller;	// 0x35f7ff65
// declared property setter: - (void)setBackgroundTaskAssertion:(id)assertion;	// 0x35f80075
// declared property setter: - (void)setCurrentDeserializer:(id)deserializer;	// 0x35f80035
// declared property setter: - (void)setCurrentTransaction:(id)transaction;	// 0x35f7ffd5
// declared property setter: - (void)setDefaultDomain:(id)domain;	// 0x35f7ff41
// declared property setter: - (void)setDefaultGetURL:(id)url;	// 0x35f7fef9
// declared property setter: - (void)setDefaultSetURL:(id)url;	// 0x35f7ff1d
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x35f7fecd
// declared property setter: - (void)setDispatchQueue:(id)queue;	// 0x35f80055
// declared property setter: - (void)setEnabled:(BOOL)enabled;	// 0x35f7ff8d
// declared property setter: - (void)setNetworkTypeObserver:(id)observer;	// 0x35f80095
// declared property setter: - (void)setOperationQueue:(id)queue;	// 0x35f7fff5
// declared property setter: - (void)setPendingTransactions:(id)transactions;	// 0x35f7ffb5
// declared property setter: - (void)setResolvingError:(BOOL)error;	// 0x35f80015
@end

