/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSDictionary, NSData, NSArray, MLMovieProperties, MLContentRating, NSString;

@interface MLTrackImport : NSObject <NSCopying> {
	NSData *_artworkData;	// 4 = 0x4
	NSString *_assetFilePath;	// 8 = 0x8
	NSArray *_chapters;	// 12 = 0xc
	NSMutableDictionary *_properties;	// 16 = 0x10
	BOOL _shouldAddToPurchasedPlaylist;	// 20 = 0x14
	BOOL _shouldDeleteExistingArtwork;	// 21 = 0x15
	BOOL _assignArtworkCacheIDFromAlbum;	// 22 = 0x16
}
@property(copy, nonatomic) NSData *artworkData;	// G=0x33f1aef1; S=0x33f1af05; @synthesize=_artworkData
@property(copy, nonatomic) NSString *assetFilePath;	// G=0x33f1af15; S=0x33f1af29; @synthesize=_assetFilePath
@property(assign, nonatomic) BOOL assignArtworkCacheIDFromAlbum;	// G=0x33f1af39; S=0x33f1af49; @synthesize=_assignArtworkCacheIDFromAlbum
@property(copy, nonatomic) NSArray *chapters;	// G=0x33f1af59; S=0x33f1af6d; @synthesize=_chapters
@property(copy, nonatomic) MLContentRating *contentRating;	// G=0x33f1a63d; S=0x33f1a839; 
@property(readonly, assign, nonatomic) NSDictionary *entityProperties;	// G=0x33f1a6c5; 
@property(assign, nonatomic) unsigned long mediaType;	// G=0x33f1a6f1; S=0x33f1a881; 
@property(copy, nonatomic) MLMovieProperties *movieProperties;	// G=0x33f1a751; S=0x33f1a925; 
@property(assign, nonatomic) BOOL shouldAddToPurchasedPlaylist;	// G=0x33f1af7d; S=0x33f1af8d; @synthesize=_shouldAddToPurchasedPlaylist
@property(assign, nonatomic) BOOL shouldDeleteExistingArtwork;	// G=0x33f1af9d; S=0x33f1afad; @synthesize=_shouldDeleteExistingArtwork
+ (void)initialize;	// 0x33f1a3c9
- (id)init;	// 0x33f1a37d
- (void).cxx_destruct;	// 0x33f1afbd
- (void)_addSortStrings;	// 0x33f1ae01
// declared property getter: - (id)artworkData;	// 0x33f1aef1
// declared property getter: - (id)assetFilePath;	// 0x33f1af15
// declared property getter: - (BOOL)assignArtworkCacheIDFromAlbum;	// 0x33f1af39
// declared property getter: - (id)chapters;	// 0x33f1af59
// declared property getter: - (id)contentRating;	// 0x33f1a63d
- (id)copyEntityProperties;	// 0x33f1aaf9
- (id)copyWithZone:(NSZone *)zone;	// 0x33f1a52d
// declared property getter: - (id)entityProperties;	// 0x33f1a6c5
// declared property getter: - (unsigned long)mediaType;	// 0x33f1a6f1
// declared property getter: - (id)movieProperties;	// 0x33f1a751
- (void)normalizeEntityProperties;	// 0x33f1ab19
// declared property setter: - (void)setArtworkData:(id)data;	// 0x33f1af05
// declared property setter: - (void)setAssetFilePath:(id)path;	// 0x33f1af29
// declared property setter: - (void)setAssignArtworkCacheIDFromAlbum:(BOOL)album;	// 0x33f1af49
// declared property setter: - (void)setChapters:(id)chapters;	// 0x33f1af6d
// declared property setter: - (void)setContentRating:(id)rating;	// 0x33f1a839
// declared property setter: - (void)setMediaType:(unsigned long)type;	// 0x33f1a881
// declared property setter: - (void)setMovieProperties:(id)properties;	// 0x33f1a925
// declared property setter: - (void)setShouldAddToPurchasedPlaylist:(BOOL)addToPurchasedPlaylist;	// 0x33f1af8d
// declared property setter: - (void)setShouldDeleteExistingArtwork:(BOOL)deleteExistingArtwork;	// 0x33f1afad
- (void)setValue:(id)value forEntityProperty:(id)entityProperty;	// 0x33f1aa1d
// declared property getter: - (BOOL)shouldAddToPurchasedPlaylist;	// 0x33f1af7d
// declared property getter: - (BOOL)shouldDeleteExistingArtwork;	// 0x33f1af9d
- (id)valueForEntityProperty:(id)entityProperty;	// 0x33f1aad9
@end

