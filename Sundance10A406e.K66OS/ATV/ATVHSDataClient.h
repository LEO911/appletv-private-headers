/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ATVDataClient.h"
#import "AppleTV-Structs.h"

@class NSURL, NSString, NSMutableDictionary, ATVHSConnectionStream;

__attribute__((visibility("hidden")))
@interface ATVHSDataClient : ATVDataClient {
	FPSAPContextOpaque_Ref _fpsapContext;	// 4 = 0x4
	ATVHSConnectionStream *_connectionStream;	// 8 = 0x8
	unsigned long long _pairingID;	// 12 = 0xc
	unsigned long long _machineID;	// 20 = 0x14
	unsigned long _sessionID;	// 28 = 0x1c
	NSString *_homeShareGroupID;	// 32 = 0x20
	NSURL *_serverURL;	// 36 = 0x24
	NSURL *_serverIPURL;	// 40 = 0x28
	int _serverPort;	// 44 = 0x2c
	NSString *_databaseName;	// 48 = 0x30
	unsigned long _databaseID;	// 52 = 0x34
	unsigned long long _databasePersistentID;	// 56 = 0x38
	unsigned long _dpapDatabaseID;	// 64 = 0x40
	unsigned long long _dpapDatabasePersistentID;	// 68 = 0x44
	unsigned long _basePlaylistID;	// 76 = 0x4c
	unsigned long long _basePlaylistPersistentID;	// 80 = 0x50
	unsigned short _daapProtocolMajorVersion;	// 88 = 0x58
	unsigned short _daapProtocolMinorVersion;	// 90 = 0x5a
	unsigned short _dpapProtocolMajorVersion;	// 92 = 0x5c
	unsigned short _dpapProtocolMinorVersion;	// 94 = 0x5e
	BOOL _enhancedClient;	// 96 = 0x60
	BOOL _supportsDRMTokenEncryption;	// 97 = 0x61
	unsigned long _databaseRevision;	// 100 = 0x64
	unsigned long _drmRevision;	// 104 = 0x68
	unsigned long _photoDBRevision;	// 108 = 0x6c
	BOOL _dpapImportInProgress;	// 112 = 0x70
	NSMutableDictionary *_artworkRequestMap;	// 116 = 0x74
}
@property(retain, nonatomic) NSMutableDictionary *artworkRequestMap;	// G=0xe0351; S=0xe0361; @synthesize=_artworkRequestMap
@property(assign, nonatomic) unsigned long basePlaylistID;	// G=0xe01c5; S=0xe01d5; @synthesize=_basePlaylistID
@property(assign, nonatomic) unsigned long long basePlaylistPersistentID;	// G=0xe01e5; S=0xe01fd; @synthesize=_basePlaylistPersistentID
@property(assign, nonatomic) unsigned short daapProtocolMajorVersion;	// G=0xe0211; S=0xe0221; @synthesize=_daapProtocolMajorVersion
@property(assign, nonatomic) unsigned short daapProtocolMinorVersion;	// G=0xe0231; S=0xe0241; @synthesize=_daapProtocolMinorVersion
@property(assign, nonatomic) unsigned long databaseID;	// G=0xe012d; S=0xe013d; @synthesize=_databaseID
@property(retain, nonatomic) NSString *databaseName;	// G=0xe010d; S=0xe011d; @synthesize=_databaseName
@property(assign, nonatomic) unsigned long long databasePersistentID;	// G=0xe014d; S=0xe0165; @synthesize=_databasePersistentID
@property(assign, nonatomic) unsigned long databaseRevision;	// G=0xe02d1; S=0xe02e1; @synthesize=_databaseRevision
@property(assign, nonatomic) unsigned long dpapDatabaseID;	// G=0xe0179; S=0xe0189; @synthesize=_dpapDatabaseID
@property(assign, nonatomic) unsigned long long dpapDatabasePersistentID;	// G=0xe0199; S=0xe01b1; @synthesize=_dpapDatabasePersistentID
@property(assign, nonatomic) BOOL dpapImportInProgress;	// G=0xe0331; S=0xe0341; @synthesize=_dpapImportInProgress
@property(assign, nonatomic) unsigned short dpapProtocolMajorVersion;	// G=0xe0251; S=0xe0261; @synthesize=_dpapProtocolMajorVersion
@property(assign, nonatomic) unsigned short dpapProtocolMinorVersion;	// G=0xe0271; S=0xe0281; @synthesize=_dpapProtocolMinorVersion
@property(assign, nonatomic) unsigned long drmRevision;	// G=0xe02f1; S=0xe0301; @synthesize=_drmRevision
@property(assign, nonatomic) BOOL enhancedClient;	// G=0xe0291; S=0xe02a1; @synthesize=_enhancedClient
@property(retain, nonatomic) NSString *homeShareGroupID;	// G=0xe0095; S=0xe00a5; @synthesize=_homeShareGroupID
@property(assign, nonatomic) unsigned long long machineID;	// G=0xe0049; S=0xe0061; @synthesize=_machineID
@property(assign, nonatomic) unsigned long long pairingID;	// G=0xe001d; S=0xe0035; @synthesize=_pairingID
@property(assign, nonatomic) unsigned long photoDBRevision;	// G=0xe0311; S=0xe0321; @synthesize=_photoDBRevision
@property(copy) NSURL *serverIPURL;	// G=0xe00c9; S=0xe00dd; @synthesize=_serverIPURL
@property(assign, nonatomic) int serverPort;	// G=0xe00ed; S=0xe00fd; @synthesize=_serverPort
@property(copy, nonatomic) NSURL *serverURL;	// G=0xe00b5; S=0xdf55d; @synthesize=_serverURL
@property(assign, nonatomic) unsigned long sessionID;	// G=0xe0075; S=0xe0085; @synthesize=_sessionID
@property(assign, nonatomic) BOOL supportsDRMTokenEncryption;	// G=0xe02b1; S=0xe02c1; @synthesize=_supportsDRMTokenEncryption
+ (id)hsDataClientWithServerURL:(id)serverURL serverName:(id)name hsGroupID:(id)anId machineID:(unsigned long long)anId4 pairingID:(unsigned long long)anId5 clientType:(unsigned long)type;	// 0xdf20d
- (id)initWithServerURL:(id)serverURL hsGroupID:(id)anId machineID:(unsigned long long)anId3 pairingID:(unsigned long long)anId4 clientName:(id)name clientType:(unsigned long)type;	// 0xdf279
- (void)_dataClientConnectionHandler:(id)handler;	// 0xdff55
- (void)artworkRequestCompletedForIdentifier:(id)identifier;	// 0xef655
// declared property getter: - (id)artworkRequestMap;	// 0xe0351
// declared property getter: - (unsigned long)basePlaylistID;	// 0xe01c5
// declared property getter: - (unsigned long long)basePlaylistPersistentID;	// 0xe01e5
- (id)baseURL;	// 0xdf719
- (id)browseRequestWithQuery:(id)query;	// 0xecfa5
- (void)cancelArtworkRequestForIdentifier:(id)identifier;	// 0xef541
- (void)cancelImageRequest:(id)request;	// 0xdfd25
- (void)concreteDataClientConnect;	// 0xdf74d
- (void)concreteDataClientDisconnect;	// 0xdf8f5
// declared property getter: - (unsigned short)daapProtocolMajorVersion;	// 0xe0211
// declared property getter: - (unsigned short)daapProtocolMinorVersion;	// 0xe0231
// declared property getter: - (unsigned long)databaseID;	// 0xe012d
// declared property getter: - (id)databaseName;	// 0xe010d
// declared property getter: - (unsigned long long)databasePersistentID;	// 0xe014d
// declared property getter: - (unsigned long)databaseRevision;	// 0xe02d1
- (void)dealloc;	// 0xdf3cd
- (id)description;	// 0xdf461
- (void)determineBasePlaylist;	// 0xe79d1
- (void)determineDAAPDatabase;	// 0xe75c9
- (void)determineDPAPDatabase;	// 0xe7801
- (void)determineDPAPDatabaseOnUpdate;	// 0xe9499
- (void)determinePhotoDatabase;	// 0xe9acd
- (void)disconnectClient;	// 0xe8a1d
// declared property getter: - (unsigned long)dpapDatabaseID;	// 0xe0179
// declared property getter: - (unsigned long long)dpapDatabasePersistentID;	// 0xe0199
// declared property getter: - (BOOL)dpapImportInProgress;	// 0xe0331
// declared property getter: - (unsigned short)dpapProtocolMajorVersion;	// 0xe0251
// declared property getter: - (unsigned short)dpapProtocolMinorVersion;	// 0xe0271
// declared property getter: - (unsigned long)drmRevision;	// 0xe02f1
- (id)drmTokenRequestWithQuery:(id)query;	// 0xeca75
- (void)drmUpdate;	// 0xe8ac1
// declared property getter: - (BOOL)enhancedClient;	// 0xe0291
- (BOOL)establishFairPlayContextWithServerFPVer:(unsigned long)serverFPVer;	// 0xe6bfd
- (void)executeQuery:(id)query withCompletionQueue:(id)completionQueue completionHandler:(id)handler;	// 0xdfc1d
- (FPSAPContextOpaque_Ref)fairPlayContext;	// 0xdf709
- (BOOL)groupingSupportsProperty:(id)property;	// 0xdfb9d
- (id)groupsRequestWithQuery:(id)query;	// 0xed0fd
- (void)handleDAAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xed65d
- (void)handleDPAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xee121
- (unsigned)hash;	// 0xdf4e5
// declared property getter: - (id)homeShareGroupID;	// 0xe0095
- (void)homeShareVerify;	// 0xe7121
- (void)iTunesDPAPDatabaseUpdate;	// 0xe9179
- (void)iTunesDatabaseUpdate;	// 0xe8639
- (void)iTunesPhotoDatabaseUpdate;	// 0xe8de1
- (id)imageRequestWithAsset:(id)asset artworkIdentifier:(id)identifier requestedSize:(CGSize)size crop:(BOOL)crop withContext:(void *)context;	// 0xeec39
- (id)imageRequestWithAsset:(id)asset imageID:(id)anId size:(CGSize)size crop:(BOOL)crop context:(id)context;	// 0xdfcf1
- (BOOL)isEqual:(id)equal;	// 0xdf4b5
- (id)itemsRequestWithQuery:(id)query;	// 0xebfb5
- (void)logErrorWithRequest:(id)request httpStatus:(long)status;	// 0xe85e1
- (void)loginToITunes;	// 0xe6889
- (void)loginToPhotoApp;	// 0xe97b1
// declared property getter: - (unsigned long long)machineID;	// 0xe0049
- (void)machineVerify;	// 0xe7385
- (void)mediaItemPropertyUpdateHandler:(id)handler;	// 0xedc8d
- (id)networkTestURLWithOptions:(id)options headers:(id *)headers;	// 0xdfd3d
// declared property getter: - (unsigned long long)pairingID;	// 0xe001d
- (void)photoAppDatabaseUpdate;	// 0xe9c81
- (id)photoDBRequestWithQuery:(id)query;	// 0xed2bd
// declared property getter: - (unsigned long)photoDBRevision;	// 0xe0311
- (BOOL)photosShared;	// 0xdf6ad
- (id)playbackURLWithItemID:(unsigned long)itemID;	// 0xdf609
- (id)playlistRequestWithQuery:(id)query;	// 0xed4cd
- (BOOL)processQueryAsync:(id)async;	// 0xdfc19
- (BOOL)queryFilterSupportsProperty:(id)property;	// 0xdfb21
- (id)rentalRequestWithQuery:(id)query;	// 0xece01
// declared property getter: - (id)serverIPURL;	// 0xe00c9
- (void)serverInfo;	// 0xe7e21
// declared property getter: - (int)serverPort;	// 0xe00ed
// declared property getter: - (id)serverURL;	// 0xe00b5
- (id)serverURLStr;	// 0xdf5e1
// declared property getter: - (unsigned long)sessionID;	// 0xe0075
// declared property setter: - (void)setArtworkRequestMap:(id)map;	// 0xe0361
// declared property setter: - (void)setBasePlaylistID:(unsigned long)anId;	// 0xe01d5
// declared property setter: - (void)setBasePlaylistPersistentID:(unsigned long long)anId;	// 0xe01fd
// declared property setter: - (void)setDaapProtocolMajorVersion:(unsigned short)version;	// 0xe0221
// declared property setter: - (void)setDaapProtocolMinorVersion:(unsigned short)version;	// 0xe0241
// declared property setter: - (void)setDatabaseID:(unsigned long)anId;	// 0xe013d
// declared property setter: - (void)setDatabaseName:(id)name;	// 0xe011d
// declared property setter: - (void)setDatabasePersistentID:(unsigned long long)anId;	// 0xe0165
// declared property setter: - (void)setDatabaseRevision:(unsigned long)revision;	// 0xe02e1
- (BOOL)setDatabaseWithResponse:(id)response daapResponse:(BOOL)response2;	// 0xe825d
// declared property setter: - (void)setDpapDatabaseID:(unsigned long)anId;	// 0xe0189
// declared property setter: - (void)setDpapDatabasePersistentID:(unsigned long long)anId;	// 0xe01b1
// declared property setter: - (void)setDpapImportInProgress:(BOOL)progress;	// 0xe0341
// declared property setter: - (void)setDpapProtocolMajorVersion:(unsigned short)version;	// 0xe0261
// declared property setter: - (void)setDpapProtocolMinorVersion:(unsigned short)version;	// 0xe0281
// declared property setter: - (void)setDrmRevision:(unsigned long)revision;	// 0xe0301
// declared property setter: - (void)setEnhancedClient:(BOOL)client;	// 0xe02a1
// declared property setter: - (void)setHomeShareGroupID:(id)anId;	// 0xe00a5
// declared property setter: - (void)setMachineID:(unsigned long long)anId;	// 0xe0061
// declared property setter: - (void)setPairingID:(unsigned long long)anId;	// 0xe0035
// declared property setter: - (void)setPhotoDBRevision:(unsigned long)revision;	// 0xe0321
// declared property setter: - (void)setServerIPURL:(id)ipurl;	// 0xe00dd
// declared property setter: - (void)setServerPort:(int)port;	// 0xe00fd
// declared property setter: - (void)setServerURL:(id)url;	// 0xdf55d
// declared property setter: - (void)setSessionID:(unsigned long)anId;	// 0xe0085
// declared property setter: - (void)setSupportsDRMTokenEncryption:(BOOL)encryption;	// 0xe02c1
- (void)submitPropertyUpdateQueryWithURLStr:(id)urlstr property:(id)property propertyValue:(unsigned long)value itemID:(id)anId;	// 0xedf5d
// declared property getter: - (BOOL)supportsDRMTokenEncryption;	// 0xe02b1
- (BOOL)supportsProperty:(id)property;	// 0xdfaed
@end

