/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, NSData, NSDictionary, NSLock;

@interface NetflixPlaybackManager : XXUnknownSuperclass {
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x4e1f19; S=0x4e1f29; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x4e1a69; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x4e2135; S=0x4e214d; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x4e2161; S=0x4e2179; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x4e209d; S=0x4e20ad; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x4e1aad; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x4e1b11; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x4e1bd1; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x4e1e65; S=0x4e1e75; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x4e20e9; S=0x4e2101; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x4e20bd; S=0x4e20d5; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x4e1fb9; S=0x4e1fc9; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x4e1fd9; S=0x4e1fe9; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x4e1e45; S=0x4dd405; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x4e1e55; S=0x4dd519; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x4e1dfd; S=0x4e1e11; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x4e2115; S=0x4e2125; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x4e2025; S=0x4e203d; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x4e1ddd; S=0x4e1ded; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x4e1e21; S=0x4e1e35; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x4e1f5d; S=0x4e1f75; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x4e1f39; S=0x4e1f4d; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x4e2071; S=0x4e2089; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x4e2051; S=0x4e2061; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x4e1e85; S=0x4e1e95; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x4e218d; S=0x4e21a5; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x4e21b9; S=0x4e21cd; @synthesize=stalled_
@property(assign) int state;	// G=0x4e1f8d; S=0x4e1fa1; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x4e1ec9; S=0x4e1ee1; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x4e1ea5; S=0x4e1eb9; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x4e1ef9; S=0x4e1f09; @synthesize=subtitlesTrackIndex_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x4e1ff9; S=0x4e2011; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x4e21dd; S=0x4e21ed; @synthesize=totalNumberOfStalls_
+ (void)initialize;	// 0x4dd109
+ (id)sharedInstance;	// 0x4dd10d
- (id)init;	// 0x4dd1f9
- (void)audioSelect:(id)select;	// 0x4dedd5
- (void)audioSelectAsync:(id)async;	// 0x4dee11
// declared property getter: - (int)audioTrackIndex;	// 0x4e1f19
// declared property getter: - (unsigned)bitrate;	// 0x4e1a69
- (void)buffering:(double)buffering;	// 0x4ddaa9
- (void)bufferingComplete:(double)complete;	// 0x4ddbc1
// declared property getter: - (long long)bufferingStartBytes;	// 0x4e2135
// declared property getter: - (double)bufferingStartTime;	// 0x4e2161
// declared property getter: - (BwEntry *)bwEntry;	// 0x4e209d
// declared property getter: - (long long)bytes;	// 0x4e1aad
// declared property getter: - (long long)bytesForInterface;	// 0x4e1b11
- (id)capitalizeAudioTracksArray:(id)array;	// 0x4df2f1
- (id)capitalizeSubtitlesForMovieDetails:(id)movieDetails;	// 0x4df3e1
- (id)capitalizeSubtitlesForTrackCombinationArray:(id)trackCombinationArray;	// 0x4df201
- (id)capitalizeTrackCombination:(id)combination;	// 0x4df12d
- (id)capitalizeTracks:(id)tracks;	// 0x4df03d
- (void)clearErrorStack;	// 0x4e1db5
- (void)close;	// 0x4dd9b1
- (id)createErrorFromStack;	// 0x4df72d
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x4e1bd1
- (void)dealloc;	// 0x4dd2f1
- (void)end:(double)end reason:(id)reason;	// 0x4dd7d1
// declared property getter: - (id)errorStack;	// 0x4e1e65
- (int)fetchBookmark:(id)bookmark;	// 0x4e1779
// declared property getter: - (long long)lastBwEntryBytes;	// 0x4e20e9
// declared property getter: - (double)lastBwEntryTime;	// 0x4e20bd
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x4e1fb9
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x4e1fd9
// declared property getter: - (IMediaControl *)mediaControl;	// 0x4e1e45
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x4e1e55
- (void)mediaDidAcquireLicense;	// 0x4dfd3d
- (void)mediaDidAuthorize;	// 0x4dfc0d
- (void)mediaDidBuildPlaylists;	// 0x4dfdd5
- (void)mediaDidCdnSelect;	// 0x4dfca5
- (void)mediaDidClose;	// 0x4df579
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x4e0035
- (void)mediaDidFailOpen:(id)media;	// 0x4dfa85
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x4e1ced
- (void)mediaDidHandleNccpError:(id)media;	// 0x4df5ed
- (void)mediaDidLoadSubtitles:(id)media;	// 0x4dff01
- (void)mediaDidSelectAudio:(id)media;	// 0x4e1c09
- (void)mediaDidSetSpeed:(float)media;	// 0x4dfe21
- (void)mediaOpenComplete:(id)complete;	// 0x4df4b9
- (void)mediaWillAcquireLicense;	// 0x4dfcf1
- (void)mediaWillAuthorize;	// 0x4dfbc1
- (void)mediaWillBuildPlaylists;	// 0x4dfd89
- (void)mediaWillCdnSelect;	// 0x4dfc59
- (void)mediaWillLoadSubtitles;	// 0x4dfeb5
// declared property getter: - (id)movieDetails;	// 0x4e1dfd
// declared property getter: - (int)networkInterfaceType;	// 0x4e2115
- (void)networkSelection:(id)selection;	// 0x4debc5
- (int)networkTypeStringToType:(id)type;	// 0x4deb51
// declared property getter: - (double)observedBitrate;	// 0x4e2025
- (void)open:(id)open;	// 0x4dd53d
- (void)openAsync:(id)async;	// 0x4e04a9
// declared property getter: - (BOOL)openNotificationSent;	// 0x4e1ddd
- (void)pause:(double)pause;	// 0x4dd5f1
- (void)play:(double)play;	// 0x4dd579
// declared property getter: - (id)playReadyKey;	// 0x4e1e21
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x4e1f5d
// declared property getter: - (id)playbackCommandLock;	// 0x4e1f39
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x4e18fd
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x4de7e1
// declared property getter: - (long long)pollBytesStart;	// 0x4e2071
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x4e2051
- (void)postMediaCloseFailure;	// 0x4e03a5
- (void)postMediaOpenFailure:(int)failure;	// 0x4e01f5
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x4e02cd
- (void)postMediaOpenSuccess:(id)success;	// 0x4e0159
// declared property getter: - (id)reportableActionId;	// 0x4e1e85
- (void)reposition:(double)reposition;	// 0x4dd6e1
// declared property getter: - (double)sampleReportWindow;	// 0x4e218d
- (void)selectedPlaylist:(id)playlist;	// 0x4de8f1
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x4e1f29
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x4e214d
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x4e2179
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x4e20ad
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x4e1e75
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x4e2101
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x4e20d5
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x4e1fc9
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x4e1fe9
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x4dd405
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x4dd519
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x4e1e11
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x4e2125
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x4e203d
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x4e1ded
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x4e1e35
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x4e1f75
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x4e1f4d
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x4e2089
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x4e2061
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x4e1e95
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x4e21a5
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x4e21cd
// declared property setter: - (void)setState:(int)state;	// 0x4e1fa1
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x4e1ee1
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x4e1eb9
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x4e1f09
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x4e2011
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x4e21ed
// declared property getter: - (bool)stalled;	// 0x4e21b9
// declared property getter: - (int)state;	// 0x4e1f8d
- (void)stop:(double)stop;	// 0x4dd759
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x4ddd61
- (void)subtitlesDisable;	// 0x4deacd
- (void)subtitlesDisableAsync;	// 0x4e1649
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x4e1ec9
// declared property getter: - (id)subtitlesProcessingLock;	// 0x4e1ea5
- (void)subtitlesSelect:(id)select;	// 0x4dea91
- (void)subtitlesSelectAbort;	// 0x4deb09
- (void)subtitlesSelectAsync:(id)async;	// 0x4e1241
// declared property getter: - (int)subtitlesTrackIndex;	// 0x4e1ef9
// declared property getter: - (long long)totalBytesTransferred;	// 0x4e1ff9
// declared property getter: - (int)totalNumberOfStalls;	// 0x4e21dd
- (id)trackWithCapitalizedDescriptionFromTrack:(id)track;	// 0x4def5d
- (void)unpause:(double)unpause;	// 0x4dd669
- (void)updatePts:(double)pts;	// 0x4ddde9
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x4de349
@end

