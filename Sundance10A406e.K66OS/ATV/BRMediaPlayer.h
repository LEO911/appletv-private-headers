/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "BRTransportDataProvider.h"

@class NSMutableArray;
@protocol BRPlayerDelegate;

__attribute__((visibility("hidden")))
@interface BRMediaPlayer : XXUnknownSuperclass <BRTransportDataProvider> {
	NSMutableArray *_stateStack;	// 4 = 0x4
	id<BRPlayerDelegate> _playerDelegate;	// 8 = 0x8
}
@property(assign) long chapterGroupIndex;	// G=0x36e9c5; S=0x36e9c1; converted property
@property(assign) long currentChapterIndex;	// G=0x36e9ad; S=0x36e9a9; converted property
@property(assign) BOOL disablePlatformFilters;	// G=0x36ea09; S=0x36ea05; converted property
@property(assign) double elapsedTime;	// G=0x36e911; S=0x36e909; converted property
@property(assign) BOOL isPlaylistDynamic;	// G=0x36eae9; S=0x36eae5; converted property
@property(assign) BOOL muted;	// G=0x36eaf9; S=0x36eaf5; converted property
@property(retain) id playbackDate;	// G=0x36e935; S=0x36e931; converted property
@property(retain, nonatomic) id<BRPlayerDelegate> playerDelegate;	// G=0x36ea5d; S=0x36ea6d; @synthesize=_playerDelegate
@property(retain) id playerSpecificOptions;	// G=0x36eb3d; S=0x36eb39; converted property
@property(assign) int playlistEndAction;	// G=0x36ea55; S=0x36ea51; converted property
@property(assign) int repeatMode;	// G=0x36ead5; S=0x36ead1; converted property
@property(retain) id selectedAudioOption;	// G=0x36eab1; S=0x36eaad; converted property
@property(retain) id selectedMedia;	// G=0x36eabd; S=0x36eac1; converted property
@property(retain) id selectedSubtitleOption;	// G=0x36eaa5; S=0x36ea95; converted property
@property(assign) BOOL shufflePlayback;	// G=0x36eac9; S=0x36eac5; converted property
@property(assign) BOOL skipExplicit;	// G=0x36eae1; S=0x36eadd; converted property
@property(assign) float startPosition;	// G=0x36e905; S=0x36e901; converted property
@property(assign) double startTime;	// G=0x36e969; S=0x36e961; converted property
@property(assign) double stopTime;	// G=0x36e949; S=0x36e941; converted property
@property(assign) double virtualChapterMark;	// G=0x36e989; S=0x36e985; converted property
@property(assign) float volume;	// G=0x36eb05; S=0x36eb01; converted property
+ (BOOL)allowMultiplePlayers;	// 0x36e765
+ (id)contentTypes;	// 0x36e761
+ (BOOL)handlesVideoForType:(id)type;	// 0x36e769
- (void)appendMediaList:(id)list;	// 0x36e819
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x36e81d
- (BOOL)attemptAuthorizationWithError:(id *)error;	// 0x36ea0d
- (id)audioOptions;	// 0x36eaa9
- (BRTimeRange)bufferedRange;	// 0x36e9e9
- (float)bufferingProgress;	// 0x36e9f5
- (id)chapterAtIndex:(long)index;	// 0x36e9e1
- (long)chapterCount;	// 0x36e9dd
- (id)chapterGroupAtIndex:(long)index;	// 0x36e9c9
- (long)chapterGroupCount;	// 0x36e9bd
// converted property getter: - (long)chapterGroupIndex;	// 0x36e9c5
- (long)chapterIndexForTime:(double)time;	// 0x36e9b1
- (BOOL)chapterIsPlayable:(long)playable;	// 0x36e9b5
- (id)chapters;	// 0x36e9d9
- (void)clearStack;	// 0x36ed95
- (id)collection;	// 0x36e821
- (BOOL)cueMediaWithError:(id *)error;	// 0x36e871
// converted property getter: - (long)currentChapterIndex;	// 0x36e9ad
- (long)currentInterstitialIndex;	// 0x36e9d1
- (id)currentVideoFrame;	// 0x36ea85
- (void)dealloc;	// 0x36e76d
- (id)debugStringForState:(int)state;	// 0x36eb41
// converted property getter: - (BOOL)disablePlatformFilters;	// 0x36ea09
- (double)duration;	// 0x36e8e9
// converted property getter: - (double)elapsedTime;	// 0x36e911
- (BOOL)hasClosedCaptions;	// 0x36ea9d
- (BOOL)hasRealChapters;	// 0x36e9b9
- (id)interstitialTimes;	// 0x36e9cd
- (BOOL)isAssetReadyToPlay:(id)play;	// 0x36e9fd
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x36eae9
- (BOOL)isTrackEnabled:(int)enabled;	// 0x36eab5
- (double)keyframeTimeNearTime:(double)time searchForwards:(BOOL)forwards;	// 0x36ea89
- (id)media;	// 0x36e825
- (int)mediaCount;	// 0x36e82d
- (long)mediaIndex;	// 0x36e86d
// converted property getter: - (BOOL)muted;	// 0x36eaf9
- (void)nextChapter;	// 0x36e9a1
- (void)nextMedia;	// 0x36eaf1
- (int)peekState;	// 0x36ece5
// converted property getter: - (id)playbackDate;	// 0x36e935
- (id)playbackInfo;	// 0x36ea01
// declared property getter: - (id)playerDelegate;	// 0x36ea5d
// converted property getter: - (id)playerSpecificOptions;	// 0x36eb3d
- (int)playerState;	// 0x36e8d9
- (BOOL)playingVisualContent;	// 0x36ea7d
// converted property getter: - (int)playlistEndAction;	// 0x36ea55
- (int)popState;	// 0x36ed1d
- (void)previousChapter;	// 0x36e9a5
- (void)previousMedia;	// 0x36eaed
- (void)pushState:(int)state;	// 0x36ec25
- (id)qualityOfServiceInfo;	// 0x36ea59
// converted property getter: - (int)repeatMode;	// 0x36ead5
- (void)resetToBeginning;	// 0x36e981
- (BOOL)reverseTouchSwipeBehavior;	// 0x36e7d1
// converted property getter: - (id)selectedAudioOption;	// 0x36eab1
// converted property getter: - (id)selectedMedia;	// 0x36eabd
// converted property getter: - (id)selectedSubtitleOption;	// 0x36eaa5
// converted property setter: - (void)setChapterGroupIndex:(long)index;	// 0x36e9c1
// converted property setter: - (void)setCurrentChapterIndex:(long)index;	// 0x36e9a9
// converted property setter: - (void)setDisablePlatformFilters:(BOOL)filters;	// 0x36ea05
// converted property setter: - (void)setElapsedTime:(double)time;	// 0x36e909
- (void)setFailedURLDelegate:(id)delegate;	// 0x36edc1
- (void)setForcedSubtitleOption;	// 0x36eaa1
- (void)setForwardPlaybackEndTime:(double)time;	// 0x36e929
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x36eae5
- (void)setMediaAsCurrentlyPlayingAppendingTrackList:(id)list;	// 0x36e815
- (BOOL)setMediaAtIndex:(long)index inCollection:(id)collection error:(id *)error;	// 0x36e7d9
- (BOOL)setMediaAtIndex:(long)index inTrackList:(id)trackList error:(id *)error;	// 0x36e7d5
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x36eaf5
// converted property setter: - (void)setPlaybackDate:(id)date;	// 0x36e931
// declared property setter: - (void)setPlayerDelegate:(id)delegate;	// 0x36ea6d
// converted property setter: - (void)setPlayerSpecificOptions:(id)options;	// 0x36eb39
// converted property setter: - (void)setPlaylistEndAction:(int)action;	// 0x36ea51
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x36ead1
- (void)setReversePlaybackEndTime:(double)time;	// 0x36e92d
// converted property setter: - (void)setSelectedAudioOption:(id)option;	// 0x36eaad
- (void)setSelectedClosedCaptionsEnabled:(BOOL)enabled;	// 0x36ea99
// converted property setter: - (void)setSelectedMedia:(id)media;	// 0x36eac1
// converted property setter: - (void)setSelectedSubtitleOption:(id)option;	// 0x36ea95
// converted property setter: - (void)setShufflePlayback:(BOOL)playback;	// 0x36eac5
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x36eadd
- (void)setStartDate:(id)date isEstimate:(BOOL)estimate;	// 0x36e939
// converted property setter: - (void)setStartPosition:(float)position;	// 0x36e901
// converted property setter: - (void)setStartTime:(double)time;	// 0x36e961
- (BOOL)setState:(int)state error:(id *)error;	// 0x36e8d5
// converted property setter: - (void)setStopTime:(double)time;	// 0x36e941
- (void)setTrackEnabled:(BOOL)enabled forTrackID:(int)trackID;	// 0x36eab9
// converted property setter: - (void)setVirtualChapterMark:(double)mark;	// 0x36e985
// converted property setter: - (void)setVolume:(float)volume;	// 0x36eb01
// converted property getter: - (BOOL)shufflePlayback;	// 0x36eac9
// converted property getter: - (BOOL)skipExplicit;	// 0x36eae1
- (id)startDate;	// 0x36e93d
// converted property getter: - (float)startPosition;	// 0x36e905
// converted property getter: - (double)startTime;	// 0x36e969
// converted property getter: - (double)stopTime;	// 0x36e949
- (BOOL)stopsActiveAudioPlayer;	// 0x36e7cd
- (id)subtitleOptions;	// 0x36ea91
- (BOOL)supportsBufferedRange;	// 0x36e9e5
- (BOOL)supportsMultipleTrickSpeeds;	// 0x36e8dd
- (BOOL)supportsRepeatModes;	// 0x36ead9
- (BOOL)supportsShufflePlayback;	// 0x36eacd
- (BOOL)supportsTrickPlay;	// 0x36e8e1
- (BOOL)supportsVolumeControl;	// 0x36eafd
- (int)swapState:(int)state;	// 0x36ecb1
- (id)trackList;	// 0x36e829
// converted property getter: - (double)virtualChapterMark;	// 0x36e989
- (id)visuals;	// 0x36ea81
// converted property getter: - (float)volume;	// 0x36eb05
@end

