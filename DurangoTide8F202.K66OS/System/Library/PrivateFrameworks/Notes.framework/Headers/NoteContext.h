/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import <NSObject.h> // Unknown library
#import "Notes-Structs.h"

@class NSMutableDictionary, NSNumber, NSManagedObjectModel, NSManagedObjectContext, NoteStoreObject, NSPersistentStoreCoordinator, NoteAccountObject, NSPredicate, CPExclusiveLock, NSString;

@interface NoteContext : NSObject {
@private
	NSManagedObjectModel *_managedObjectModel;	// 4 = 0x4
	NSManagedObjectContext *_managedObjectContext;	// 8 = 0x8
	NSPersistentStoreCoordinator *_persistentStoreCoordinator;	// 12 = 0xc
	NSPredicate *_searchPredicate;	// 16 = 0x10
	NoteStoreObject *_localStore;	// 20 = 0x14
	NoteAccountObject *_localAccount;	// 24 = 0x18
	CXIndexRef __SharedNoteStoreSearchIndex;	// 28 = 0x1c
	CPExclusiveLock *__SharedNoteStoreSearchIndexLock;	// 32 = 0x20
	int __SharedNoteStoreSearchIndexCount;	// 36 = 0x24
	BOOL _isIndexing;	// 40 = 0x28
	NSManagedObjectContext *_nextIdContext;	// 44 = 0x2c
	CPExclusiveLock *_nextIdLock;	// 48 = 0x30
	NSNumber *_nextId;	// 52 = 0x34
	CPExclusiveLock *_objectCreationLock;	// 56 = 0x38
	unsigned _notificationCount;	// 60 = 0x3c
	BOOL _logChanges;	// 64 = 0x40
	BOOL _indexInBatches;	// 65 = 0x41
	BOOL _hasPriorityInSaveConflicts;	// 66 = 0x42
	BOOL _inMigrator;	// 67 = 0x43
	NSString *_testingFilePrefix;	// 68 = 0x44
	NSString *_testingFilePath;	// 72 = 0x48
	NSMutableDictionary *_notePropertyObjectsRealized;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL isIndexing;	// G=0x30bee779; @synthesize=_isIndexing
@property(readonly, retain) NoteAccountObject *localAccount;	// G=0x30bf0859; converted property
@property(readonly, retain) NoteStoreObject *localStore;	// G=0x30beefd9; converted property
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext;	// G=0x30beebc5; 
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x30bf4071; converted property
@property(readonly, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;	// G=0x30bf3611; converted property
+ (BOOL)shouldLogIndexing;	// 0x30beffcd
- (id)init;	// 0x30befc95
- (id)initForMigrator;	// 0x30befcc5
- (id)initWithTestingFilePrefix:(id)testingFilePrefix;	// 0x30befcad
- (id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;	// 0x30bf3401
- (id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;	// 0x30befcdd
- (void)_createLocalAccount:(id *)account andStore:(id *)store;	// 0x30beff09
- (id)_notePropertyObjectForKey:(id)key;	// 0x30bf0681
- (id)accountForAccountId:(id)accountId;	// 0x30bf0a0d
- (id)allAccounts;	// 0x30bf0bc1
- (id)allNotes;	// 0x30bef37d
- (id)allNotesInCollection:(id)collection;	// 0x30bef301
- (id)allNotesMatchingPredicate:(id)predicate;	// 0x30bef275
- (id)allNotesWithoutBodiesInCollection:(id)collection;	// 0x30bf1009
- (id)allStores;	// 0x30bf0e75
- (id)allVisibleNotes;	// 0x30bef65d
- (id)allVisibleNotesInCollection:(id)collection;	// 0x30bef619
- (id)allVisibleNotesMatchingPredicate:(id)predicate;	// 0x30bef511
- (void)cleanUpLocks;	// 0x30bee8a1
- (void)clearCaches;	// 0x30befab9
- (id)collectionForInfo:(id)info;	// 0x30bef131
- (id)collectionForObjectID:(id)objectID;	// 0x30bef96d
- (id)copyNotesForSearch:(void *)search complete:(char *)complete;	// 0x30bee8e9
- (id)copyNotesForSearch:(void *)search predicate:(id)predicate complete:(char *)complete;	// 0x30bf0011
- (unsigned)countOfNotes;	// 0x30bef32d
- (unsigned)countOfNotesInCollection:(id)collection;	// 0x30bef2d5
- (unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;	// 0x30bef215
- (unsigned)countOfStores;	// 0x30bf0d55
- (unsigned)countOfVisibleNotes;	// 0x30bef645
- (unsigned)countOfVisibleNotesInCollection:(id)collection;	// 0x30bef5ed
- (unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;	// 0x30bef435
- (void)dealloc;	// 0x30bf333d
- (id)defaultStoreForNewNote;	// 0x30bef029
- (BOOL)deleteAccount:(id)account;	// 0x30beefa1
- (void)deleteChanges:(id)changes;	// 0x30bf2405
- (BOOL)deleteIndexFile;	// 0x30bee799
- (void)deleteNote:(id)note;	// 0x30bef835
- (void)deleteNoteRegardlessOfConstraints:(id)constraints;	// 0x30bef80d
- (BOOL)deleteStore:(id)store;	// 0x30bf1f81
- (void)destroySearchIndex;	// 0x30bf4aa5
- (void)enableChangeLogging:(BOOL)logging;	// 0x30bee749
- (BOOL)forceDeleteAccount:(id)account;	// 0x30bf2069
- (void)forceSetUpUniqueObjects;	// 0x30befe39
- (id)getNextIdObject;	// 0x30bf02c9
- (void)handleMigration;	// 0x30bf38fd
- (BOOL)handleSaveErrors:(id)errors;	// 0x30bf2131
- (BOOL)hasMultipleEnabledStores;	// 0x30beef05
- (void)indexInBatches:(BOOL)batches;	// 0x30bee759
- (void)indexNotes:(id)notes;	// 0x30bf4131
- (void)invalidate;	// 0x30bef789
// declared property getter: - (BOOL)isIndexing;	// 0x30bee779
- (id)liveNotesNeedingBodiesPredicate;	// 0x30befbdd
// converted property getter: - (id)localAccount;	// 0x30bf0859
// converted property getter: - (id)localStore;	// 0x30beefd9
// declared property getter: - (id)managedObjectContext;	// 0x30beebc5
// converted property getter: - (id)managedObjectModel;	// 0x30bf4071
- (id)newFRCForCollection:(id)collection delegate:(id)delegate;	// 0x30bf127d
- (id)newFetchRequestForNotes;	// 0x30befad9
- (void *)newSearchContextWithText:(id)text;	// 0x30bee909
- (id)newlyAddedAccount;	// 0x30bef0b9
- (id)newlyAddedNote;	// 0x30bef99d
- (id)newlyAddedStore;	// 0x30bef0f5
- (id)nextIndex;	// 0x30bf29dd
- (id)noteChangeWithType:(int)type store:(id)store;	// 0x30bee97d
- (id)noteForObjectID:(id)objectID;	// 0x30bef1e5
- (BOOL)noteIsSafeToAccess:(id)access;	// 0x30bee7e5
- (id)notesForIntegerIds:(id)integerIds;	// 0x30bf10ad
- (id)notesToResumeIndexing;	// 0x30beeb05
- (id)pathForIndex;	// 0x30beed41
- (id)pathForPersistentStore;	// 0x30beedbd
// converted property getter: - (id)persistentStoreCoordinator;	// 0x30bf3611
- (id)propertyValueForKey:(id)key;	// 0x30beee39
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;	// 0x30beea69
- (void)removeConflictingSqliteAndIdxFiles;	// 0x30bf3011
- (void)removeSqliteAndIdxFiles;	// 0x30befcfd
- (void)resetNotificationCount;	// 0x30bee769
- (void)resumeIndexing;	// 0x30bf01f9
- (id)rootDirectory;	// 0x30bf4059
- (BOOL)save:(id *)save;	// 0x30bf3579
- (void)saveNotesToResumeIndexing:(id)resumeIndexing;	// 0x30bf1e39
- (BOOL)saveOutsideApp:(id *)app;	// 0x30bef771
- (BOOL)saveSilently:(id *)silently;	// 0x30bef675
- (CXIndexRef)searchIndex:(char *)index;	// 0x30bf4539
- (void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;	// 0x30beec91
- (void)setPropertyValue:(id)value forKey:(id)key;	// 0x30beee5d
- (void)setUpCoreDataStack;	// 0x30bf30c9
- (BOOL)setUpLastIndexTid;	// 0x30bf24b5
- (BOOL)setUpLocalAccountAndStore;	// 0x30bf270d
- (void)setUpUniqueObjects;	// 0x30bf2ced
- (BOOL)shouldDisableLocalStore;	// 0x30beef55
- (BOOL)shouldResumeIndexing;	// 0x30beeb89
- (void)sortNotes:(id)notes;	// 0x30befa41
- (id)storeForObjectID:(id)objectID;	// 0x30bef93d
- (void)tearDownCoreDataStack;	// 0x30bf3241
- (void)trackChanges:(id)changes;	// 0x30bf1449
- (void)updateSearchIndex:(id)index;	// 0x30bf4b2d
- (id)urlForPersistentStore;	// 0x30beed0d
- (id)visibleNoteForObjectID:(id)objectID;	// 0x30bef3cd
- (id)visibleNotesForIntegerIds:(id)integerIds;	// 0x30bf1161
- (id)visibleNotesPredicate;	// 0x30befc25
- (void)wrapUpIndexing;	// 0x30bf48cd
@end

