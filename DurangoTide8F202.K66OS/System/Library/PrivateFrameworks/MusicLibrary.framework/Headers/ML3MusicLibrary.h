/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, NSArray, ML3CacheGenerator, ML3MusicLibrary_SQLiteDatabaseContext, ML3Container;

@interface ML3MusicLibrary : NSObject {
@private
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 4 = 0x4
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 8 = 0x8
	dispatch_queue_s *_backgroundQueue;	// 12 = 0xc
	NSString *_path;	// 16 = 0x10
	NSString *_notifyName;	// 20 = 0x14
	NSString *_nonContentsNotifyName;	// 24 = 0x18
	int _notifyToken;	// 28 = 0x1c
	int _nonContentsNotifyToken;	// 32 = 0x20
	int _downloadFinishedNotifyToken;	// 36 = 0x24
	BOOL _enableWrites;	// 40 = 0x28
	BOOL _hasEverConnectedToDatabase;	// 41 = 0x29
	id _revertToBackupObserver;	// 44 = 0x2c
	id _mcSettingsObserver;	// 48 = 0x30
}
@property(readonly, assign) ML3CacheGenerator *cacheGenerator;	// G=0x31813161; 
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x317eb06d; @synthesize=_hasEverConnectedToDatabase
@property(readonly, copy) NSArray *localizedSectionIndexTitles;	// G=0x317e45fd; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x317e3ec9; 
@property(readonly, copy) NSString *path;	// G=0x318171e1; @synthesize=_path
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x317f04ad; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x317f0521; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x31814505; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x317df675; 
@property(readonly, assign) BOOL requiresiTunesCommandsProcessing;	// G=0x317df6b1; 
@property(readonly, assign, nonatomic) unsigned long long syncGenerationID;	// G=0x317eaea9; 
+ (void)attachAuxiliaryDatabases:(sqlite3 *)databases;	// 0x317dd725
+ (void)buildDatabaseFromHomeSharingConnection:(id)homeSharingConnection atPath:(id)path completionHandler:(id)handler;	// 0x31823fb1
+ (void)buildDatabaseFromHomeSharingConnection:(id)homeSharingConnection atPath:(id)path completionHandler:(id)handler progressHandler:(id)handler4;	// 0x318281b1
+ (void)buildDatabaseTablesUsingHandle:(sqlite3 *)handle;	// 0x31827a5d
+ (void)closeDatabaseHandle:(sqlite3 *)handle;	// 0x318171f9
+ (BOOL)createContainerTriggersUsingHandle:(sqlite3 *)handle;	// 0x318296b5
+ (BOOL)createItemTriggersUsingHandle:(sqlite3 *)handle;	// 0x3182a7dd
+ (void)createTriggersUsingHandle:(sqlite3 *)handle;	// 0x318295f5
+ (BOOL)dropOldContainerTriggersUsingHandle:(sqlite3 *)handle;	// 0x3182975d
+ (BOOL)dropOldItemTriggersUsingHandle:(sqlite3 *)handle;	// 0x31829799
+ (void)dropOldTriggersUsingHandle:(sqlite3 *)handle;	// 0x3182970d
+ (void)ensureIndexExists:(id)exists onHandle:(sqlite3 *)handle entityClass:(Class)aClass indexableSQL:(id)sql;	// 0x31813ee5
+ (void)ensureIndexExists:(id)exists onHandle:(sqlite3 *)handle entityClass:(Class)aClass properties:(id)properties;	// 0x31813e41
+ (void)ensureIndicesExistOnHandle:(sqlite3 *)handle;	// 0x31813591
+ (void)ensureSectionAndListIndicesExist:(id)exist onHandle:(sqlite3 *)handle entityClass:(Class)aClass filteredProperties:(id)properties sectionProperties:(id)properties5 orderingProperties:(id)properties6 representativeItemProperty:(id)property;	// 0x31813d51
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x31813c15
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x317dd7d9
+ (BOOL)executeUsingHandle:(sqlite3 *)handle eachSQL:(id)sql;	// 0x3182a6e5
+ (BOOL)importationEnabled;	// 0x31812f39
+ (void)initialize;	// 0x317db509
+ (void)limitCacheSize:(sqlite3 *)size;	// 0x317de9d9
+ (id)mainLibraryPath;	// 0x317dbbb9
+ (void)mediaFolderPathDidChangeNotification:(id)mediaFolderPath;	// 0x31814151
+ (void)prepareStatementForSQL:(id)sql usingHandle:(sqlite3 *)handle block:(id)block;	// 0x31817231
+ (void)registerCustomCallbacksOnHandle:(sqlite3 *)handle;	// 0x317de9f9
+ (void)registerFunctionsOnHandle:(sqlite3 *)handle;	// 0x317dea0d
+ (id)selectStatementValueForSQL:(id)sql defaultValue:(id)value usingHandle:(sqlite3 *)handle;	// 0x31829b85
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x317dc1d5
+ (id)sharedLibrary;	// 0x317dc739
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x317ecb25
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x317df5a5
+ (void)stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x317df5d1
+ (CFDictionaryRef)threadLocalCFMutableDictionaryForKey:(id)key withValueCallbacks:(const XXStruct_MSEYlC *)valueCallbacks;	// 0x31814235
+ (BOOL)updateSortMapOnHandle:(sqlite3 *)handle;	// 0x318174ed
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x317db7f1
- (void)_debugLoggingOptionsDidChangeNotification:(id)_debugLoggingOptions;	// 0x3181543d
- (int)_executediTunesCommandsVersion;	// 0x317df6cd
- (BOOL)_mustProcessLanguageChange;	// 0x317df7b1
- (BOOL)_schemaHasDefinedTable:(id)table;	// 0x31829c65
- (void)accessDatabaseContextUsingBlock:(id)block;	// 0x317dc791
- (void)accessSortKeyBuilder:(id)builder;	// 0x317e4ce1
- (long long)addStringToSortMap:(id)sortMap;	// 0x3181498d
- (id)backgroundQueue_backgroundDatabaseContext;	// 0x317e4559
// declared property getter: - (id)cacheGenerator;	// 0x31813161
- (BOOL)canWriteToDatabase;	// 0x31812f3d
- (void)checkForChangesOnConnection:(id)changesOnConnection completionHandler:(id)handler;	// 0x31824e89
- (void)createTriggers;	// 0x31813019
- (void)dealloc;	// 0x31815245
- (void)dropOldTriggers;	// 0x31812f8d
- (void)ensureIndicesExist;	// 0x31813505
- (id)entityForClass:(Class)aClass persistentID:(long long)anId;	// 0x31813f95
- (void)executeITDBPostProcessing;	// 0x31829f51
- (BOOL)executeITunesCommands;	// 0x3182a129
- (BOOL)executeSQL:(id)sql;	// 0x31814bc5
- (void)fillContainerForHomeSharingConnection:(id)homeSharingConnection containerID:(long long)anId completionHandler:(id)handler;	// 0x31823fdd
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x317eb06d
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x318155cd
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x317e4bad
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x317e45fd
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x317e3ec9
- (id)newDatabaseContext;	// 0x317dc875
- (void)notifyContentsDidChange;	// 0x317ed145
- (void)notifyNonContentsPropertyDidChange;	// 0x317f08b9
- (int)openDatabaseHandle:(sqlite3 **)handle;	// 0x317dc8c1
// declared property getter: - (id)path;	// 0x318171e1
- (void)performOperationInBackground:(id)background;	// 0x31815e55
- (void)performTransactionWithBlock:(id)block;	// 0x317e44ed
- (void)populateStaticItemsOfDynamicContainers;	// 0x318134b5
- (void)postChangeNotificationAndScheduleFlush;	// 0x317ed231
- (void)postNonContentsChangeNotificationAndScheduleFlush;	// 0x317f0905
// declared property getter: - (id)preferredAudioTracks;	// 0x317f04ad
// declared property getter: - (id)preferredSubtitleTracks;	// 0x317f0521
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x317dc745
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x31814505
- (void)reconnectToDatabase;	// 0x31815ea1
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x317df675
// declared property getter: - (BOOL)requiresiTunesCommandsProcessing;	// 0x317df6b1
- (void)savePlaylists;	// 0x318130a5
- (void)saveTrackMetadata;	// 0x318165cd
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x317e4d91
- (id)selectStatementValueForSQL:(id)sql defaultValue:(id)value;	// 0x317ea2b5
// declared property getter: - (unsigned long long)syncGenerationID;	// 0x317eaea9
- (void)updateActivePlaylistNamesForCurrentLanguage;	// 0x3182994d
- (void)updateOrderingLanguagesForCurrentLangauge;	// 0x3182a621
- (BOOL)updateSortMap;	// 0x318146dd
@end

