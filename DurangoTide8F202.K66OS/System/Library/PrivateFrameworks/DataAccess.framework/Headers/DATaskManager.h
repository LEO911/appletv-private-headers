/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <NSObject.h> // Unknown library

@class DAAccount, NSMutableArray, NSArray, NSMutableSet;
@protocol DATask;

@interface DATaskManager : NSObject {
	DAAccount *_account;	// 4 = 0x4
@private
	NSMutableArray *_queuedExclusiveTasks;	// 8 = 0x8
	id<DATask> _activeExclusiveTask;	// 12 = 0xc
	NSMutableSet *_independentTasks;	// 16 = 0x10
	NSMutableSet *_heldIndependentTasks;	// 20 = 0x14
	NSMutableSet *_modalHeldIndependentTasks;	// 24 = 0x18
	NSMutableArray *_queuedTasks;	// 28 = 0x1c
	id<DATask> _activeQueuedTask;	// 32 = 0x20
	id<DATask> _modalHeldActiveQueuedTask;	// 36 = 0x24
	NSMutableArray *_queuedModalTasks;	// 40 = 0x28
	id<DATask> _activeModalTask;	// 44 = 0x2c
	int _state;	// 48 = 0x30
}
@property(assign) DAAccount *account;	// G=0x31ebcfd1; S=0x31ebda11; @synthesize=_account
@property(readonly, assign) id<DATask> activeModalTask;	// G=0x31ebcf95; @synthesize=_activeModalTask
@property(readonly, assign) id<DATask> activeQueuedTask;	// G=0x31ebcfc1; @synthesize=_activeQueuedTask
@property(readonly, assign) NSArray *allTasks;	// G=0x31ebda31; 
@property(readonly, assign) NSArray *queuedTasks;	// G=0x31ebcfb1; @synthesize=_queuedTasks
- (id)init;	// 0x31eaf8f1
- (id)initWithAccount:(id)account;	// 0x31ebe2e5
- (void)_cancelTasksWithReason:(int)reason;	// 0x31ebd439
- (id)_getHeldIndependentTasks;	// 0x31ebd0c5
- (id)_getIndependentTasks;	// 0x31ebd111
- (id)_getModalHeldIndependentTasks;	// 0x31ebd079
- (id)_getQueuedExclusiveTasks;	// 0x31ebd15d
- (id)_getQueuedModalTasks;	// 0x31ebcfe1
- (id)_getQueuedTasks;	// 0x31ebd02d
- (void)_makeStateTransition;	// 0x31ec02a5
- (void)_performTask:(id)task;	// 0x31ebe58d
- (void)_populateVersionDescriptions;	// 0x31ebe3a9
- (void)_reactivateHeldTasks;	// 0x31ebd5f1
- (void)_releasePowerAssertionForTask:(id)task;	// 0x31ebd1a9
- (void)_requestCancelTasksWithReason:(int)reason;	// 0x31ebd83d
- (void)_retainPowerAssertionForTask:(id)task;	// 0x31ebd20d
- (void)_schedulePerformTask:(id)task;	// 0x31ebd299
- (void)_scheduleSelector:(SEL)selector withArgument:(id)argument;	// 0x31ec00bd
- (void)_scheduleStartModal:(id)modal;	// 0x31ebe46d
- (void)_startModal:(id)modal;	// 0x31ebe4c5
- (BOOL)_useFakeDescriptions;	// 0x31ebcfa5
- (id)_version;	// 0x31ebd40d
// declared property getter: - (id)account;	// 0x31ebcfd1
- (id)accountID;	// 0x31ebd309
- (id)accountPersistentUUID;	// 0x31ebd2e9
// declared property getter: - (id)activeModalTask;	// 0x31ebcf95
// declared property getter: - (id)activeQueuedTask;	// 0x31ebcfc1
// declared property getter: - (id)allTasks;	// 0x31ebda31
- (void)cancelAllTasks;	// 0x31ebd95d
- (void)cancelTask:(id)task;	// 0x31ebd2b9
- (void)cancelTask:(id)task withUnderlyingError:(id)underlyingError;	// 0x31ebf969
- (void)dealloc;	// 0x31ebddd5
- (id)deviceID;	// 0x31ebe461
- (id)deviceType;	// 0x31ebe3fd
- (id)identityPersist;	// 0x31ebd349
- (id)password;	// 0x31ebd38d
- (int)port;	// 0x31ebd3cd
// declared property getter: - (id)queuedTasks;	// 0x31ebcfb1
- (id)scheme;	// 0x31ebd329
- (id)server;	// 0x31ebd3ad
// declared property setter: - (void)setAccount:(id)account;	// 0x31ebda11
- (void)shutdown;	// 0x31ebf8fd
- (id)stateString;	// 0x31ec0129
- (void)submitExclusiveTask:(id)task;	// 0x31ebd2d1
- (void)submitExclusiveTask:(id)task toFrontOfQueue:(BOOL)queue;	// 0x31ebfe05
- (void)submitIndependentTask:(id)task;	// 0x31ebfbf9
- (void)submitQueuedTask:(id)task;	// 0x31ebf9c9
- (void)taskDidFinish:(id)task;	// 0x31ebeda5
- (void)taskEndModal:(id)modal;	// 0x31ebe655
- (void)taskManagerDidAddTask:(id)taskManager;	// 0x31ebcfa9
- (void)taskManagerWillRemoveTask:(id)taskManager;	// 0x31ebcfad
- (void)taskRequestModal:(id)modal;	// 0x31ebe901
- (BOOL)useSSL;	// 0x31ebd369
- (id)user;	// 0x31ebd3ed
- (id)userAgent;	// 0x31ebe409
@end

