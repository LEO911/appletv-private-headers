/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACardDAV.framework/DACardDAV
 */

#import "CoreDAVLogDelegate.h"
#import "CoreDAVDiscoveryTaskGroupDelegate.h"
#import "CoreDAVAccountInfoProvider.h"
#import <DAAccount.h> // Unknown library

@class CoreDAVLogger, CardDAVTaskManager, CoreDAVDiscoveryTaskGroup, NSArray;

@interface CardDAVAccount : DAAccount <CoreDAVAccountInfoProvider, CoreDAVLogDelegate, CoreDAVDiscoveryTaskGroupDelegate> {
	CardDAVTaskManager *_taskManager;	// 64 = 0x40
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 68 = 0x44
	NSArray *_additionalPathsToAutodiscover;	// 72 = 0x48
	CoreDAVLogger *_curLogger;	// 76 = 0x4c
}
@property(retain) NSArray *additionalPathsToAutodiscover;	// G=0x34727e35; S=0x34727e4d; @synthesize=_additionalPathsToAutodiscover
@property(assign) int cardDAVAccountVersion;	// G=0x34726bad; S=0x34726b91; 
@property(retain) id host;	// G=0x34726d3d; S=0x34726cc1; converted property
@property(assign) int port;	// G=0x34726ca5; S=0x34726c89; converted property
@property(retain) id principalURL;	// G=0x34726ead; S=0x34726ee5; converted property
@property(retain) id scheme;	// G=0x34726c6d; S=0x34726c51; converted property
@property(retain) id serverComplianceClasses;	// G=0x347267f9; S=0x347267fd; converted property
@property(retain) id serverRoot;	// G=0x347267e9; S=0x347267ed; converted property
@property(readonly, retain) CardDAVTaskManager *taskManager;	// G=0x34726f75; converted property
@property(assign) BOOL useSSL;	// G=0x34726c31; S=0x34726bc9; converted property
@property(retain) id username;	// G=0x34726dd5; S=0x34726d59; converted property
+ (Class)accountClass;	// 0x3472704d
+ (id)addressBookConstraintsPlistPath;	// 0x347267f1
+ (Class)clientClass;	// 0x3472702d
+ (id)defaultProperties;	// 0x347270a5
+ (id)supportedDataclasses;	// 0x3472700d
- (id)init;	// 0x3472706d
- (id)initWithProperties:(id)properties;	// 0x3472737d
- (void)_massageAddedOrModifiedVCard:(id)card;	// 0x347267f5
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x34727501
- (id)_validationErrorFromRawError:(id)rawError;	// 0x3472777d
- (BOOL)accountNeedsUpgrade;	// 0x34727429
// declared property getter: - (id)additionalPathsToAutodiscover;	// 0x34727e35
// declared property getter: - (int)cardDAVAccountVersion;	// 0x34726bad
- (void)checkValidityWithConsumer:(id)consumer;	// 0x34727999
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x347273f1
- (int)coreDAVLogLevel;	// 0x34727e0d
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x3472689d
- (int)coreDAVOutputLevel;	// 0x34727e19
- (void)coreDAVTransmittedDataFinished;	// 0x34726861
- (void)dealloc;	// 0x347272cd
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x34727619
- (BOOL)handleCertificateError:(id)error;	// 0x34726825
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x347271e9
// converted property getter: - (id)host;	// 0x34726d3d
- (BOOL)isEqualToAccount:(id)account;	// 0x34726a61
- (int)keychainAccessibilityType;	// 0x34727cd1
- (id)localizedIdenticalAccountFailureMessage;	// 0x347269f1
- (id)localizedInvalidPasswordMessage;	// 0x34726945
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x34726df1
// converted property getter: - (int)port;	// 0x34726ca5
// converted property getter: - (id)principalURL;	// 0x34726ead
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x347268f9
// converted property getter: - (id)scheme;	// 0x34726c6d
// converted property getter: - (id)serverComplianceClasses;	// 0x347267f9
// converted property getter: - (id)serverRoot;	// 0x347267e9
// declared property setter: - (void)setAdditionalPathsToAutodiscover:(id)autodiscover;	// 0x34727e4d
// declared property setter: - (void)setCardDAVAccountVersion:(int)version;	// 0x34726b91
// converted property setter: - (void)setHost:(id)host;	// 0x34726cc1
// converted property setter: - (void)setPort:(int)port;	// 0x34726c89
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x34726ee5
// converted property setter: - (void)setScheme:(id)scheme;	// 0x34726c51
// converted property setter: - (void)setServerComplianceClasses:(id)classes;	// 0x347267fd
// converted property setter: - (void)setServerRoot:(id)root;	// 0x347267ed
- (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x34727291
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x34726bc9
// converted property setter: - (void)setUsername:(id)username;	// 0x34726d59
- (BOOL)shouldLogTransmittedData;	// 0x34727e25
- (BOOL)supportsDataclass:(int)dataclass;	// 0x347267d5
// converted property getter: - (id)taskManager;	// 0x34726f75
- (BOOL)upgradeAccount;	// 0x34727215
- (id)urlForKeychain;	// 0x34727cf5
// converted property getter: - (BOOL)useSSL;	// 0x34726c31
- (id)userAgentHeader;	// 0x34727de1
// converted property getter: - (id)username;	// 0x34726dd5
- (id)wellKnownPathsToCheck;	// 0x34726fc1
@end

