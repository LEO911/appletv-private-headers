/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
 */

#import "VoiceServices-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString;
@protocol VSSpeechSynthesizerDelegate;

@interface VSSpeechSynthesizer : NSObject {
@private
	void *_speechJob;	// 4 = 0x4
	void *_keepAlive;	// 8 = 0x8
	id<VSSpeechSynthesizerDelegate> _delegate;	// 12 = 0xc
	NSString *_voice;	// 16 = 0x10
	float _rate;	// 20 = 0x14
	float _pitch;	// 24 = 0x18
	float _volume;	// 28 = 0x1c
	struct {
		unsigned delegateStart : 1;
		unsigned delegateFinish : 1;
		unsigned delegatePause : 1;
		unsigned delegateContinue : 1;
		unsigned delegateWillSpeak : 1;
		unsigned willUseInput : 1;
	} _synthesizerFlags;	// 32 = 0x20
}
@property(readonly, assign) float pitch;	// G=0x32d5387d; converted property
@property(readonly, assign) float rate;	// G=0x32d5385d; converted property
@property(retain) NSString *voice;	// G=0x32d53b61; S=0x32d53bbd; converted property
@property(readonly, assign) float volume;	// G=0x32d5388d; converted property
+ (void)_localeDidChange;	// 0x32d53b3d
+ (id)availableLanguageCodes;	// 0x32d5450d
+ (id)availableVoices;	// 0x32d54491
+ (id)availableVoicesForLanguageCode:(id)languageCode;	// 0x32d544e5
+ (BOOL)isSystemSpeaking;	// 0x32d54525
- (id)init;	// 0x32d5389d
- (id)initForInputFeedback;	// 0x32d53de5
- (void)_handleSpeech:(VSSpeechRef)speech completed:(BOOL)completed withError:(id)error;	// 0x32d53e0d
- (void)_handleSpeech:(VSSpeechRef)speech willSpeakMarkType:(int)type inRange:(XXStruct_K5nmsA)range;	// 0x32d53a0d
- (void)_handleSpeechContinued:(VSSpeechRef)continued;	// 0x32d53a65
- (void)_handleSpeechPaused:(VSSpeechRef)paused;	// 0x32d53aad
- (void)_handleSpeechStarted:(VSSpeechRef)started;	// 0x32d53af5
- (id)continueSpeaking;	// 0x32d54381
- (void)dealloc;	// 0x32d53e7d
- (BOOL)isSpeaking;	// 0x32d543e5
- (float)maximumRate;	// 0x32d53875
- (float)minimumRate;	// 0x32d5386d
- (id)pauseSpeakingAtNextBoundary:(int)nextBoundary;	// 0x32d53bf9
- (id)pauseSpeakingAtNextBoundary:(int)nextBoundary synchronously:(BOOL)synchronously;	// 0x32d5430d
// converted property getter: - (float)pitch;	// 0x32d5387d
// converted property getter: - (float)rate;	// 0x32d5385d
- (void)setDelegate:(id)delegate;	// 0x32d53cf5
- (void)setMaintainPersistentConnection:(BOOL)connection;	// 0x32d5442d
- (id)setPitch:(float)pitch;	// 0x32d53ef9
- (id)setRate:(float)rate;	// 0x32d53f71
// converted property setter: - (void)setVoice:(id)voice;	// 0x32d53bbd
- (id)setVolume:(float)volume;	// 0x32d53fe9
- (id)speechString;	// 0x32d54405
- (id)startSpeakingAttributedString:(id)string;	// 0x32d53c75
- (id)startSpeakingAttributedString:(id)string toURL:(id)url;	// 0x32d53c51
- (id)startSpeakingAttributedString:(id)string toURL:(id)url withLanguageCode:(id)languageCode;	// 0x32d53c29
- (id)startSpeakingString:(id)string;	// 0x32d53cd5
- (id)startSpeakingString:(id)string attributedString:(id)string2 toURL:(id)url withLanguageCode:(id)languageCode;	// 0x32d540a5
- (id)startSpeakingString:(id)string toURL:(id)url;	// 0x32d53cb1
- (id)startSpeakingString:(id)string toURL:(id)url withLanguageCode:(id)languageCode;	// 0x32d53c8d
- (id)stopSpeakingAtNextBoundary:(int)nextBoundary;	// 0x32d53c11
- (id)stopSpeakingAtNextBoundary:(int)nextBoundary synchronously:(BOOL)synchronously;	// 0x32d54531
// converted property getter: - (id)voice;	// 0x32d53b61
// converted property getter: - (float)volume;	// 0x32d5388d
@end

