/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRLayer.h"

@class NSMutableArray, NSDictionary, NSArray, MRTransition, MCContainerNavigator, NSMutableDictionary;

@interface MRLayerNavigator : MRLayer {
	MCContainerNavigator *mContainer;	// 96 = 0x60
	NSMutableArray *mSublayers;	// 100 = 0x64
	NSMutableDictionary *mSublayersForPlugs;	// 104 = 0x68
	MRLayer *mCurrentSublayer;	// 108 = 0x6c
	MRLayer *mNextSublayer;	// 112 = 0x70
	MRTransition *mCurrentTransition;	// 116 = 0x74
	BOOL mIsTransitioning;	// 120 = 0x78
	MRLayer *mSublayerToPrecompute;	// 124 = 0x7c
	id mPrecomputingTarget;	// 128 = 0x80
	unsigned mPrecomputingType;	// 132 = 0x84
	double mTransitionDuration;	// 136 = 0x88
	BOOL mTransitionIsBackwards;	// 144 = 0x90
	NSDictionary *mTransitionChanges;	// 148 = 0x94
}
@property(readonly, assign) MRLayer *currentSublayer;	// G=0x314fcba1; @synthesize=mCurrentSublayer
@property(readonly, assign) NSArray *sublayers;	// G=0x314fcb91; @synthesize=mSublayers
- (id)initWithPlug:(id)plug andParameters:(id)parameters inSuperlayer:(id)superlayer;	// 0x314fa771
- (id)_createSublayerForPlug:(id)plug;	// 0x314fcf15
- (void)_deleteSublayer:(id)sublayer;	// 0x314fd079
- (void)_executeLayerCommandQueue;	// 0x314fcbb1
- (BOOL)_isNative3D;	// 0x314fbffd
- (void)_observePlug;	// 0x314fd325
- (void)_observePlugOnPreactivate;	// 0x314fd3e9
- (void)_observeSublayer:(id)sublayer;	// 0x314fd235
- (void)_precomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fd5d9
- (void)_preprecomputeAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fe45d
- (void)_prerenderSublayersAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fdaf9
- (void)_renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fd815
- (id)_retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fd951
- (void)_setNeedsToRequestRebuildAudio:(BOOL)requestRebuildAudio;	// 0x314fd505
- (void)_unobservePlug;	// 0x314fd391
- (void)_unobservePlugOnDepreactivate;	// 0x314fd481
- (void)_unobserveSublayer:(id)sublayer;	// 0x314fd2ad
- (id)actionHitAtPoint:(CGPoint)point layer:(id *)layer;	// 0x314fc379
- (void)cleanup;	// 0x314fa8cd
// declared property getter: - (id)currentSublayer;	// 0x314fcba1
- (void)deactivate;	// 0x314fb285
- (void)depreactivate:(BOOL)depreactivate;	// 0x314fb495
- (double)doTransition:(id)transition;	// 0x314fcac1
- (double)doTransition:(id)transition backwards:(BOOL)backwards;	// 0x314fc4dd
- (double)doTransitionBackwards:(id)backwards;	// 0x314fcad9
- (void)endTransitionToSublayer;	// 0x314fcaf1
- (BOOL)hasAudio;	// 0x314fbf01
- (BOOL)hasSomethingToRender;	// 0x314fb0e9
- (BOOL)isAlphaFriendly;	// 0x314fb769
- (BOOL)isLoadedForTime:(double)time;	// 0x314fb59d
- (BOOL)isOpaque;	// 0x314fb6f5
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x314fabd5
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fbbb9
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x314fb7dd
- (void)resumeOrPause:(BOOL)pause;	// 0x314fb181
- (void)setPixelSize:(CGSize)size;	// 0x314fafd5
- (id)sublayerForID:(id)anId;	// 0x314fc049
- (id)sublayerForPlugObjectID:(id)plugObjectID recursive:(BOOL)recursive;	// 0x314fc179
- (id)sublayerHitAtPoint:(CGPoint)point onlyIfHitElement:(BOOL)element localPoint:(CGPoint *)point3;	// 0x314fbd3d
// declared property getter: - (id)sublayers;	// 0x314fcb91
- (void)synchronizeTime;	// 0x314fb205
@end

