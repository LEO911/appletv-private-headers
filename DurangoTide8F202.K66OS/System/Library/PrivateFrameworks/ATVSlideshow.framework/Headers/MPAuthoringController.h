/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import <NSObject.h> // Unknown library

@class NSRecursiveLock, NSLock, MPDocument, MPWeighter, NSMutableDictionary;

@interface MPAuthoringController : NSObject {
	BOOL _isAuthoring;	// 4 = 0x4
	MPDocument *_authoredDocument;	// 8 = 0x8
	unsigned _seed;	// 12 = 0xc
	NSRecursiveLock *_beatLock;	// 16 = 0x10
	NSMutableDictionary *_cachedROIInformation;	// 20 = 0x14
	NSLock *_cachedROILock;	// 24 = 0x18
	MPWeighter *_weighter;	// 28 = 0x1c
	MPWeighter *_transitionWeighter;	// 32 = 0x20
	NSMutableDictionary *_stats;	// 36 = 0x24
	id _delegate;	// 40 = 0x28
	int _logLevel;	// 44 = 0x2c
	double _logTiming;	// 48 = 0x30
	float _placesDistanceSeperation;	// 56 = 0x38
	BOOL _placesDebug;	// 60 = 0x3c
	BOOL _cancelAuthoring;	// 61 = 0x3d
	BOOL _skipApplyingSettings;	// 62 = 0x3e
}
@property(assign) id delegate;	// G=0x31410339; S=0x31410349; converted property
+ (void)releaseSharedController;	// 0x3140fed5
+ (id)sharedController;	// 0x3140fe8d
+ (id)transitionAnimatedSetsBetween:(id)between and:(id)anAnd;	// 0x31408b71
+ (id)transitionAnimatedSetsBetween:(id)between and:(id)anAnd;	// 0x314223c9
- (id)init;	// 0x3140ff19
- (void)_addVideoPaths:(id)paths toEndOfLayer:(id)layer inDocument:(id)document withOptions:(id)options;	// 0x31428afd
- (void)_addVideoPaths:(id)paths toEndOfLayer:(id)layer inDocument:(id)document withOptions:(id)options;	// 0x3140e0b5
- (void)_checkForEmptyLayersInDocument:(id)document;	// 0x3140e9d5
- (void)_checkForEmptyLayersInDocument:(id)document;	// 0x31429421
- (id)_collectVersionInformationFromStyle:(id)style;	// 0x3141481d
- (int)_countOfEmptyContainersInIntroOfLayer:(id)layer withOptions:(id)options;	// 0x3140ebc5
- (int)_countOfEmptyContainersInIntroOfLayer:(id)layer withOptions:(id)options;	// 0x31429611
- (id)_createMapsWithImages:(id)images withOptions:(id)options;	// 0x31429771
- (void)_gatherLocationInfoForMaps:(id)maps;	// 0x3142b491
- (id)_grabAndRemoveTitleEffectFromDocument:(id)document withOptions:(id)options;	// 0x3140e6bd
- (id)_grabAndRemoveTitleEffectFromDocument:(id)document withOptions:(id)options;	// 0x31429109
- (id)_mapsSortedByCity:(id)city hasCities:(BOOL *)cities;	// 0x3142bd09
- (id)_mapsSortedByState:(id)state;	// 0x3142c8f1
- (int)_numberOfSlidesForOutroInLayer:(id)layer withOptions:(id)options;	// 0x3140ea91
- (int)_numberOfSlidesForOutroInLayer:(id)layer withOptions:(id)options;	// 0x314294dd
- (id)_placeEffectContainersForPhotos:(id)photos options:(id)options;	// 0x31434c1d
- (void)_readdTitleEffect:(id)effect toDocument:(id)document withOptions:(id)options;	// 0x31429379
- (void)_readdTitleEffect:(id)effect toDocument:(id)document withOptions:(id)options;	// 0x3140e92d
- (void)_renameMapsAndPins:(id)pins withOptions:(id)options;	// 0x3142d2f1
- (void)_reorderImagesInDocument:(id)document withOptions:(id)options;	// 0x31427d89
- (void)_reorderImagesInDocument:(id)document withOptions:(id)options;	// 0x3140d349
- (BOOL)_tryAndCollapseMaps:(id)maps;	// 0x3142b93d
- (void)addStyledCaptionToSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x3140b1e9
- (void)addStyledCaptionToSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x31425c0d
- (unsigned)authorDocument:(id)document withOptions:(id)options;	// 0x31410359
- (unsigned)authorLayerGroup:(id)group inDocument:(id)document withOptions:(id)options;	// 0x3141039d
- (void)authorPlacesWithImages:(id)images forLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x3141513d
- (void)beatAlignEffectContainers:(id)containers toBeats:(id)beats withOptions:(id)options;	// 0x3141b281
- (void)beatAlignLayer:(id)layer toBeats:(id)beats withOptions:(id)options;	// 0x3141982d
- (void)beatAlignLayers:(id)layers toAudioPlaylist:(id)audioPlaylist forDocument:(id)document withOptions:(id)options;	// 0x314128bd
- (id)beatsForAudioPlaylist:(id)audioPlaylist withOptions:(id)options;	// 0x3140ec25
- (id)beatsForAudioPlaylist:(id)audioPlaylist withOptions:(id)options;	// 0x314224dd
- (int)bestCountFromClusterForEffectWithImages:(id)images atStartIndex:(int)startIndex withWeighter:(id)weighter usedIndex:(int *)index;	// 0x31417185
- (void)cacheROIInformationForImages:(id)images withOptions:(id)options;	// 0x314152e5
- (BOOL)canDocumentFitToAudio:(id)audio withOptions:(id)options requiredAudioDuration:(double *)duration;	// 0x3141405d
- (BOOL)canLayerGroupFitToAudio:(id)audio inDocument:(id)document withOptions:(id)options requiredAudioDuration:(double *)duration;	// 0x314140a5
- (BOOL)canScaleToAudioInDocument:(id)document withOptions:(id)options;	// 0x31414391
- (void)checkForOffsetsForLayers:(id)layers withOptions:(id)options;	// 0x314196fd
- (void)cleanup;	// 0x314143b1
- (void)cleanup:(BOOL)cleanup;	// 0x314143c9
- (void)cleanupClusters;	// 0x3140f471
- (void)cleanupClusters;	// 0x31422d35
- (void)combineEffectsNearSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x3140cbad
- (void)combineEffectsNearSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x314275ed
- (void)combineSlides:(id)slides inDocument:(id)document withOptions:(id)options;	// 0x3140c965
- (void)combineSlides:(id)slides inDocument:(id)document withOptions:(id)options;	// 0x314273a5
- (void)configureFiltersInDocument:(id)document withOptions:(id)options;	// 0x3141ba31
- (void)configureTransitionsInDocument:(id)document withOptions:(id)options;	// 0x3141bf0d
- (void)createAnimatedSetsInLayer2:(id)layer2 withOptions:(id)options;	// 0x314217ed
- (void)createAnimatedSetsInLayer2:(id)layer2 withOptions:(id)options;	// 0x31407f95
- (void)createAnimatedSetsInLayer:(id)layer withOptions:(id)options;	// 0x31420949
- (void)createAnimatedSetsInLayer:(id)layer withOptions:(id)options;	// 0x314070f1
- (id)createAudioPlayListFromAudioPaths:(id)audioPaths andOptions:(id)options;	// 0x3141fdc1
- (void)createBeatsThreaded:(id)threaded;	// 0x3140f1a5
- (void)createBeatsThreaded:(id)threaded;	// 0x31422a65
- (id)createEffectToTransitionMapWithOptions:(id)options;	// 0x3141e429
- (id)createLayerWithImages:(id)images effects:(id)effects andOptions:(id)options;	// 0x3141c319
- (id)createLayersForPlacesForImages:(id)images forDocument:(id)document withOptions:(id)options;	// 0x3142f3c9
- (void)dealloc;	// 0x31410291
// converted property getter: - (id)delegate;	// 0x31410339
- (BOOL)determineIfSlideDisplayesForTheWholeDurationForEffect:(id)effect presetID:(id)anId atIndex:(int)index;	// 0x31418275
- (id)effectContainersWithImages:(id)images effects:(id)effects andOptions:(id)options;	// 0x3141c569
- (id)effectContainersWithPaths:(id)paths forDocument:(id)document withOptions:(id)options;	// 0x31412781
- (id)effectsForImages:(id)images withOptions:(id)options;	// 0x31415b29
- (id)exportTransitionFromOptions:(id)options;	// 0x3141e6a5
- (void)fillDurationsForLayers:(id)layers withOptions:(id)options;	// 0x31419461
- (id)filtersForEffectFromOptions:(id)options;	// 0x3141f9b1
- (id)filtersForLayerFromOptions:(id)options;	// 0x3141f835
- (id)filtersForSlideFromOptions:(id)options;	// 0x3141fba5
- (double)findClosestBeatForTime:(double)time inBeats:(id)beats atIndex:(int *)index;	// 0x3142280d
- (double)findClosestBeatForTime:(double)time inBeats:(id)beats atIndex:(int *)index;	// 0x3140ef4d
- (id)findEffectIDInPresetArray:(id)presetArray forImages:(id)images withOptions:(id)options;	// 0x31417319
- (id)findEffectIDInWeighter:(id)weighter images:(id)images startingIndex:(int)index count:(int)count triesToFind:(int *)find;	// 0x31417ef1
- (void)findUsableClustersForUserDefinedSlideOrderPresentation:(id)userDefinedSlideOrderPresentation inClusters:(id)clusters;	// 0x3140f491
- (void)findUsableClustersForUserDefinedSlideOrderPresentation:(id)userDefinedSlideOrderPresentation inClusters:(id)clusters;	// 0x31422d55
- (void)finishLogging;	// 0x3140f911
- (void)finishLogging;	// 0x314231dd
- (id)frameFromOptions:(id)options;	// 0x3141fce5
- (BOOL)imagesHaveMovie:(id)movie start:(int)start count:(int)count;	// 0x314170ed
- (int)indexOfBeatWithTimestamp:(double)timestamp inBeats:(id)beats inRange:(NSRange)range;	// 0x3142296d
- (int)indexOfBeatWithTimestamp:(double)timestamp inBeats:(id)beats inRange:(NSRange)range;	// 0x3140f0ad
- (void)insertVideoPaths:(id)paths atIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x31409351
- (void)insertVideoPaths:(id)paths atIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x31423d65
- (id)loopTransitionFromOptions:(id)options;	// 0x3141e5d5
- (int)mapTypeForPoint0:(CGPoint)point0 point1:(CGPoint)a1 point2:(CGPoint)a2 map:(id)map flight:(id)flight;	// 0x31433ef5
- (void)matchDurationsForLayers:(id)layers withOptions:(id)options;	// 0x314191a1
- (void)moveSlidesFromIndicies:(id)indicies toIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x31408c85
- (void)moveSlidesFromIndicies:(id)indicies toIndex:(int)index inDocument:(id)document withOptions:(id)options;	// 0x31423695
- (id)orderImages:(id)images withOptions:(id)options;	// 0x31414c1d
- (id)pickRandomPathsInArray:(id)array excludingPaths:(id)paths count:(int)count;	// 0x3141ff15
- (void)populateWeighter:(id)weighter withEffects:(id)effects andOptions:(id)options;	// 0x314175b9
- (void)populateWeighter:(id)weighter withTransitions:(id)transitions andOptions:(id)options;	// 0x31417c25
- (BOOL)prepareDocumentForExport:(id)export withOptions:(id)options;	// 0x31413361
- (void)prepareDocumentForPlayback:(id)playback withOptions:(id)options;	// 0x314138e1
- (void)reconfigureColorSchemeForLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x3141311d
- (void)reconfigureColorSchemeInDocument:(id)document withOptions:(id)options;	// 0x314130d9
- (void)reconfigureImagesInDocument:(id)document withOptions:(id)options;	// 0x31412e35
- (void)reconfigureTitleEffectForLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x31412ef1
- (void)reconfigureTitleEffectInDocument:(id)document withOptions:(id)options;	// 0x31412ead
- (void)recreateMapsInDocument:(id)document;	// 0x3143557d
- (BOOL)rect:(CGRect)rect intersectsRects:(id)rects index:(int *)index;	// 0x31433e15
- (void)removeAllMapsInDocument:(id)document;	// 0x31435391
- (void)removeSlidesAtIndicies:(id)indicies inDocument:(id)document withOptions:(id)options;	// 0x3140a4ed
- (void)removeSlidesAtIndicies:(id)indicies inDocument:(id)document withOptions:(id)options;	// 0x31424f09
- (void)removeStyledCaptionFromSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x3140bf01
- (void)removeStyledCaptionFromSlide:(id)slide inDocument:(id)document withOptions:(id)options;	// 0x31426935
- (void)scaleDurationsForLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x31412a35
- (void)scaleDurationsInDocument:(id)document withOptions:(id)options;	// 0x314129f1
- (void)scaleDurationsInEffectContainers:(id)effectContainers withOptions:(id)options;	// 0x31418669
- (void)scaleDurationsInLayer:(id)layer withOptions:(id)options;	// 0x31418541
- (void)scaleDurationsInPlacesForDocument:(id)document withOptions:(id)options;	// 0x31434341
- (void)scaleLayerToMatchAudio:(id)matchAudio withBeats:(id)beats withOptions:(id)options;	// 0x3141a701
- (void)scaleLayerToMatchAudio:(id)matchAudio withOptions:(id)options;	// 0x31419b71
- (void)setAuthoredDocument:(id)document;	// 0x314147c5
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x31410349
- (void)setTitleTextToColor:(CGColorRef)color forLayerGroup:(id)layerGroup inDocument:(id)document withOptions:(id)options;	// 0x3141449d
- (void)setTitleTextToColor:(CGColorRef)color inDocument:(id)document withOptions:(id)options;	// 0x31414451
- (void)setupClustersWithPaths:(id)paths withOptions:(id)options;	// 0x31422c39
- (void)setupClustersWithPaths:(id)paths withOptions:(id)options;	// 0x3140f379
- (id)sortImagePaths:(id)paths toAspectRatiosInEffectPresetID:(id)effectPresetID withOptions:(id)options;	// 0x3141e731
- (void)startLogging;	// 0x31423005
- (void)startLogging;	// 0x3140f741
- (int)tileSetForMap1:(int)map1 map2:(int)a2 needsWater:(BOOL)water;	// 0x314342e1
- (id)transitionFromOptions:(id)options;	// 0x314128a1
- (id)transitionFromOptions:(id)options firstEffectContainer:(id)container nextEffectContainer:(id)container3;	// 0x31420079
- (void)upgradeDocument:(id)document withOptions:(id)options;	// 0x314120bd
- (void)upgradeLayerGroup:(id)group inDocument:(id)document withOptions:(id)options;	// 0x31412101
@end

