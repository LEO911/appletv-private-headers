/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "EDProcessor.h"

@class EDSheet, EDRowBlocks, EDName, EDFormula;

__attribute__((visibility("hidden")))
@interface EPFormulaCleaner : EDProcessor {
@private
	EDSheet *mCurrentSheet;	// 16 = 0x10
	EDFormula *mFormula;	// 20 = 0x14
	EDName *mParentName;	// 24 = 0x18
	int mRowOffset;	// 28 = 0x1c
	int mColumnOffset;	// 32 = 0x20
	EDRowBlocks *mBaseFormulaRowBlocks;	// 36 = 0x24
}
- (void)addOffsetsToRow:(int *)row rowRelative:(bool)relative column:(int *)column columnRelative:(bool)relative4;	// 0x318e5fb9
- (void)applyMaxCellsInName:(id)name;	// 0x31aef8c9
- (void)applyProcessorToObject:(id)object sheet:(id)sheet;	// 0x318e5a19
- (bool)checkCustomFunction:(unsigned)function;	// 0x31aefa2d
- (bool)checkFunctionId:(int)anId tokenIndex:(unsigned)index;	// 0x31a29c45
- (bool)checkSupportedAddInName:(id)name externalLink:(bool)link;	// 0x31aef8c5
- (bool)cleanArea3D:(unsigned)d;	// 0x31a162cd
- (bool)cleanArea:(unsigned)area;	// 0x31a79681
- (bool)cleanArray:(unsigned)array;	// 0x31af02fd
- (void)cleanFormula:(id)formula name:(id)name;	// 0x31af0315
- (void)cleanFormula:(id)formula sheet:(id)sheet;	// 0x318e5a2d
- (void)cleanFormula:(id)formula sheet:(id)sheet name:(id)name;	// 0x318e5a51
- (bool)cleanFunc:(unsigned)func;	// 0x31a29d4d
- (bool)cleanFuncVar:(unsigned)var;	// 0x31a29c05
- (bool)cleanIsect:(unsigned)isect removedTokenCount:(unsigned *)count;	// 0x31aeff59
- (bool)cleanName:(unsigned)name;	// 0x31af0291
- (bool)cleanName:(unsigned)name nameIndex:(unsigned)index sheetIndex:(unsigned)index3;	// 0x31aefbf1
- (bool)cleanNameX:(unsigned)x;	// 0x31af0125
- (bool)cleanRange:(unsigned)range removedTokenCount:(unsigned *)count;	// 0x31aefd91
- (bool)cleanRef3D:(unsigned)d;	// 0x31a67985
- (bool)cleanRef:(unsigned)ref;	// 0x318e5e2d
- (bool)cleanTokenAtIndex:(unsigned)index removedTokenCount:(unsigned *)count;	// 0x318e5c89
- (bool)cleanUnion:(unsigned)aUnion;	// 0x31a75371
- (bool)combineCellReferences:(unsigned)references intersection:(bool)intersection removedTokenCount:(unsigned *)count;	// 0x31af09f5
- (void)dealloc;	// 0x318e63e1
- (id)extractFormulaToCleanFromSharedFormula:(id)sharedFormula;	// 0x31aef8cd
- (bool)isLinkReferenceIndexSupported:(unsigned)supported allowExternal:(bool)external;	// 0x31a1644d
- (bool)isObjectSupported:(id)supported;	// 0x318dedf5
- (bool)isReferenceValidInLassoForRow:(int)row rowRelative:(bool)relative column:(int)column columnRelative:(bool)relative4;	// 0x318e5f61
- (bool)isReferenceValidInLassoForSheet:(id)sheet rowMin:(int)min rowMinRelative:(bool)relative rowMax:(int)max rowMaxRelative:(bool)relative5 columnMin:(int)min6 columnMinRelative:(bool)relative7 columnMax:(int)max8 columnMaxRelative:(bool)relative9;	// 0x31af03b1
- (void)prepareToProcessFormula:(id)processFormula sheet:(id)sheet name:(id)name;	// 0x318e5b65
- (void)reportWarning:(int)warning;	// 0x31a57759
- (void)reportWarning:(int)warning parameter:(id)parameter;	// 0x31a57771
- (void)reset;	// 0x318e5c11
- (void)updateSheet:(id)sheet row:(int)row rowRelative:(bool)relative column:(int)column columnRelative:(bool)relative5;	// 0x318e5ffd
- (void)updateSheet:(id)sheet rowMin:(int)min rowMinRelative:(bool)relative rowMax:(int)max rowMaxRelative:(bool)relative5 columnMin:(int)min6 columnMinRelative:(bool)relative7 columnMax:(int)max8 columnMaxRelative:(bool)relative9;	// 0x31af0335
- (void)updateWorksheet:(id)worksheet row:(int)row column:(int)column inDictionary:(id)dictionary;	// 0x31aef9bd
- (bool)useEvaluationStackToCheckFunctionId:(int)checkFunctionId functionName:(id)name tokenIndex:(unsigned)index;	// 0x31af0465
- (unsigned)useEvaluationStackToGetParameter:(unsigned)getParameter tokenIndex:(unsigned)index;	// 0x31a7551d
- (id)useEvaluationStackToGetParameter:(unsigned)getParameter tokenIndex:(unsigned)index allReferencesAllowed:(bool)allowed success:(bool *)success;	// 0x31af0f09
- (id)worksheetFromLinkReferenceIndex:(unsigned)linkReferenceIndex loadIfNeeded:(bool)needed;	// 0x31a16665
@end

