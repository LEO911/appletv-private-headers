/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <NSObject.h> // Unknown library
#import "OfficeImport-Structs.h"
#import "NSCopying.h"


__attribute__((visibility("hidden")))
@interface NSBezierPathStub : NSObject <NSCopying> {
@private
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x31aac6c9; S=0x31aac6cd; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x31aadd31; converted property
@property(readonly, assign) int elementCount;	// G=0x3197c9fd; converted property
@property(assign) float flatness;	// G=0x31983a3d; S=0x31983a4d; converted property
@property(assign) unsigned lineCapStyle;	// G=0x3197d419; S=0x3197faad; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x3197d429; S=0x3197fb81; converted property
@property(assign) float lineWidth;	// G=0x31983a0d; S=0x3197d251; converted property
@property(assign) float miterLimit;	// G=0x31983a1d; S=0x31983a2d; converted property
@property(assign) unsigned windingRule;	// G=0x3197c929; S=0x3197c765; converted property
+ (id)bezierPath;	// 0x319780b9
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x31aacebd
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x31984b15
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x31aace59
+ (void)clipRect:(CGRect)rect;	// 0x31979929
+ (CGContextRef)currentCGContext;	// 0x31979899
+ (float)defaultFlatness;	// 0x31aac49d
+ (unsigned)defaultLineCapStyle;	// 0x31aac4cd
+ (unsigned)defaultLineJoinStyle;	// 0x31aac4e5
+ (float)defaultLineWidth;	// 0x31aac4fd
+ (float)defaultMiterLimit;	// 0x31aac485
+ (unsigned)defaultWindingRule;	// 0x31aac4b5
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x31aad7b9
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x3197b5d5
+ (void)fillRect:(CGRect)rect;	// 0x31aad6b9
+ (float)flatness;	// 0x31aac771
+ (void)initialize;	// 0x31a96701
+ (unsigned)lineCapStyle;	// 0x31aac721
+ (unsigned)lineJoinStyle;	// 0x31aac6f9
+ (float)lineWidth;	// 0x31aac6d1
+ (float)miterLimit;	// 0x31aac799
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x31977125
+ (void)setDefaultFlatness:(float)flatness;	// 0x31aac491
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x31aac4c1
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x31aac4d9
+ (void)setDefaultLineWidth:(float)width;	// 0x31aac4f1
+ (void)setDefaultMiterLimit:(float)limit;	// 0x31aac479
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x31aac4a9
+ (void)setFlatness:(float)flatness;	// 0x31aac785
+ (void)setLineCapStyle:(unsigned)style;	// 0x31aac735
+ (void)setLineJoinStyle:(unsigned)style;	// 0x31aac70d
+ (void)setLineWidth:(float)width;	// 0x31aac6e5
+ (void)setMiterLimit:(float)limit;	// 0x31aac7ad
+ (void)setWindingRule:(unsigned)rule;	// 0x31aac75d
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x31aad729
+ (void)strokeRect:(CGRect)rect;	// 0x31aade61
+ (unsigned)windingRule;	// 0x31aac749
- (id)init;	// 0x319780e9
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x3197c359
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x31994785
- (id)_copyFlattenedPath;	// 0x31aaca51
- (void)_deviceClosePath;	// 0x3197c52d
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x319948d5
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x3197c4c9
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x3197c279
- (void)_doPath;	// 0x31aad1bd
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x3197c93d
- (int)_locationOfPoint:(CGPoint)point;	// 0x31aad3ad
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x3197cad5
- (void)addClip;	// 0x31984cad
- (void)appendBezierPath:(id)path;	// 0x3198390d
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x31aada19
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x3199450d
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x31994549
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radiusSize:(CGSize)size startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x31a5dced
- (void)appendBezierPathWithArcWithRect:(CGPoint)rect rightBottom:(CGPoint)bottom start:(CGPoint)start end:(CGPoint)end clockwise:(BOOL)clockwise;	// 0x31a5db55
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x31994395
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x3197feed
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x3197c139
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x31aae001
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes;	// 0x31b195d9
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes spacing:(int *)spacing spacingCount:(int)count;	// 0x31b195dd
- (void)attachBezierPath:(id)path;	// 0x31a062b5
- (id)bezierPathByFlatteningPath;	// 0x31aaca99
- (id)bezierPathByReversingPath;	// 0x31aac7f1
- (CGRect)bounds;	// 0x31aad295
// converted property getter: - (BOOL)cachesBezierPath;	// 0x31aac6c9
- (void)closePath;	// 0x3197c519
- (BOOL)containsPoint:(CGPoint)point;	// 0x31aad655
// converted property getter: - (CGRect)controlPointBounds;	// 0x31aadd31
- (id)copyWithZone:(NSZone *)zone;	// 0x319837ad
- (CGPoint)currentPoint;	// 0x31a0644d
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x31a061ad
- (void)dealloc;	// 0x31987405
- (id)description;	// 0x31aad819
- (unsigned)elementAtIndex:(int)index;	// 0x31aac7d9
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x3197ca5d
// converted property getter: - (int)elementCount;	// 0x3197c9fd
- (BOOL)equalToCurrentPoint:(CGPoint)currentPoint;	// 0x31a063b5
- (void)fill;	// 0x3197c8b1
- (void)finalize;	// 0x31aacfc1
// converted property getter: - (float)flatness;	// 0x31983a3d
- (void)flattenIntoPath:(id)path;	// 0x31aacb1d
- (id)getGlyphs:(id)glyphs :(id)arg2 :(unsigned *)arg3;	// 0x31b195d5
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x31aac509
- (BOOL)isEmpty;	// 0x3197c4b1
- (BOOL)isHitByPath:(id)path;	// 0x31aac6b1
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x31aac7c1
- (BOOL)isHitByRect:(CGRect)rect;	// 0x31aac6a5
- (BOOL)isStrokeHitByPath:(id)path;	// 0x31aac6c5
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x31aac6b5
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x31aac6b9
// converted property getter: - (unsigned)lineCapStyle;	// 0x3197d419
// converted property getter: - (unsigned)lineJoinStyle;	// 0x3197d429
- (void)lineToPoint:(CGPoint)point;	// 0x3197c445
// converted property getter: - (float)lineWidth;	// 0x31983a0d
// converted property getter: - (float)miterLimit;	// 0x31983a1d
- (void)moveToPoint:(CGPoint)point;	// 0x3197c265
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x31aad03d
- (void)relativeLineToPoint:(CGPoint)point;	// 0x31aad0ed
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x31aad155
- (void)removeAllPoints;	// 0x31a05eed
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x31aacf19
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x31aac6cd
- (void)setClip;	// 0x31984c55
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x31983a4d
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x3197faad
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x319fec09
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x3197fb81
// converted property setter: - (void)setLineWidth:(float)width;	// 0x3197d251
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x31983a2d
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x3197c765
- (void)stroke;	// 0x3197d33d
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x31aacc5d
- (void)transformUsingAffineTransform:(id)transform;	// 0x31984bad
// converted property getter: - (unsigned)windingRule;	// 0x3197c929
@end

