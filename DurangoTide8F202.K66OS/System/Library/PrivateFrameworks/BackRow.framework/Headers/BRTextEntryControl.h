/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackRow.framework/BackRow
 */

#import "BackRow-Structs.h"
#import "BRControl.h"
#import "BRTabControlDelegate.h"

@class BRRoundRectOutlineLayer, BRScrollControl, NSAttributedString, BRTextEntryPlayPauseMessage, BRTextFieldBackgroundLayer, NSMutableString, BRTabControl, BRTextControl, BRInputMethod, BRKeyboard, BRCursorControl, BRTextFieldControl, NSArray, NSString, BRDeviceKeyboardMessage;

@interface BRTextEntryControl : BRControl <BRTabControlDelegate> {
@private
	int _textEntryStyle;	// 44 = 0x2c
	BRInputMethod *_inputMethod;	// 48 = 0x30
	BRKeyboard *_activeKeyboard;	// 52 = 0x34
	BOOL _displayTextEntryHistory;	// 56 = 0x38
	NSString *_textEntryHistoryClient;	// 60 = 0x3c
	NSString *_textEntryHistoryBehavior;	// 64 = 0x40
	BRTextEntryPlayPauseMessage *_playPauseMessage;	// 68 = 0x44
	BRControl *_roundRectBackground;	// 72 = 0x48
	BRRoundRectOutlineLayer *_roundRectOutline;	// 76 = 0x4c
	BRControl *_candidatesBackground;	// 80 = 0x50
	BRScrollControl *_candidatesKeysContainer;	// 84 = 0x54
	BRScrollControl *_keyboardContainer;	// 88 = 0x58
	BRControl *_actionKeysContainer;	// 92 = 0x5c
	BRTextFieldBackgroundLayer *_textFieldBackground;	// 96 = 0x60
	BRTextControl *_textFieldLabel;	// 100 = 0x64
	NSAttributedString *_textFieldLabelString;	// 104 = 0x68
	BRTextFieldControl *_textField;	// 108 = 0x6c
	BRTabControl *_tabControl;	// 112 = 0x70
	BRCursorControl *_cursor;	// 116 = 0x74
	BOOL _providesOwnCursor;	// 120 = 0x78
	NSArray *_customizedTextFieldControls;	// 124 = 0x7c
	BRDeviceKeyboardMessage *_deviceKeyboardMessage;	// 128 = 0x80
	BRKeyboard *_popupKeyboard;	// 132 = 0x84
	CGPoint _focusedMainKeyRemembery;	// 136 = 0x88
	BOOL _displayPopupKeyboardAfterKeyboardSwitch;	// 144 = 0x90
	CGColorRef _popupBackgroundColor;	// 148 = 0x94
	CGColorRef _popupBorderColor;	// 152 = 0x98
	int _popupShadowStyle;	// 156 = 0x9c
	BOOL _constrainCursorToPopupKeyboard;	// 160 = 0xa0
	BRScrollControl *_popupKeyboardControl;	// 164 = 0xa4
	CGPoint _previousKeyboardFocus;	// 168 = 0xa8
	int _textLengthLimit;	// 176 = 0xb0
	NSMutableString *_userEnteredText;	// 180 = 0xb4
	BOOL _showUserEnteredText;	// 184 = 0xb8
	BOOL _textFieldIsInternal;	// 185 = 0xb9
	BOOL _shouldWrapHorizontally;	// 186 = 0xba
	BOOL _shouldWrapVertically;	// 187 = 0xbb
	BOOL _clientHasSpecifiedHorizontalWrapping;	// 188 = 0xbc
	BOOL _clientHasSpecifiedVerticalWrapping;	// 189 = 0xbd
}
@property(assign) BOOL canWrapHorizontally;	// G=0x32914f29; S=0x32914ee5; converted property
@property(assign) BOOL canWrapVertically;	// G=0x32914ec1; S=0x32914e7d; converted property
@property(assign) BOOL providesOwnFocusCursor;	// G=0x32913155; S=0x32914c8d; converted property
@property(retain) BRTabControl *tabControl;	// G=0x32913145; S=0x32914dcd; converted property
@property(assign) int textEntryStyle;	// G=0x32913115; S=0x328bf6b5; converted property
@property(retain) BRTextFieldControl *textField;	// G=0x32913135; S=0x32914fb1; converted property
@property(assign) id textFieldDelegate;	// G=0x32914d61; S=0x328bfb99; converted property
@property(assign) int textLengthLimit;	// G=0x32913125; S=0x3291512d; converted property
- (id)init;	// 0x328bec31
- (id)initWithTextEntryStyle:(int)textEntryStyle;	// 0x328bec05
- (id)initWithTextEntryStyle:(int)textEntryStyle textField:(id)field;	// 0x32915cb1
- (void)_addActionKeysRowForKeyboard:(id)keyboard;	// 0x32915799
- (void)_addCursor;	// 0x32915b71
- (void)_addCustomizedTextFieldControls;	// 0x329153cd
- (void)_addMainKeyboardContainerForKeyboard:(id)keyboard;	// 0x32915931
- (void)_addOrRemoveCandidatesContainer:(id)container;	// 0x3291626d
- (void)_addOrRemoveTabControl;	// 0x32916fa5
- (id)_bestKeyboardLanguage:(int)language;	// 0x32913a01
- (void)_customizeTextEntryControls;	// 0x32915469
- (void)_finalizeControlWasFocused;	// 0x32913ba9
- (void)_generateKeyEventWithCharacters:(id)characters;	// 0x32917585
- (void)_handleCharacterSelectionEvent:(id)event;	// 0x32914361
- (void)_handleCustomActionKeyEvent:(id)event;	// 0x329143c1
- (void)_handlePopupKeyboardEvent:(BOOL)event;	// 0x32917651
- (void)_historyItemDeleted:(id)deleted;	// 0x3291367d
- (void)_inputActionAppendCandidate:(id)candidate;	// 0x32913ff9
- (void)_inputActionAppendText:(id)text;	// 0x32914151
- (void)_inputActionClearText:(id)text;	// 0x32913f41
- (void)_inputActionDeleteText:(id)text;	// 0x32917479
- (void)_inputActionEscape:(id)escape;	// 0x32913ce9
- (void)_inputActionSwitchInputMethod:(id)method;	// 0x32913d71
- (void)_inputActionSwitchKeyboard:(id)keyboard;	// 0x329166ed
- (void)_invokeInputActionWithDictionary:(id)dictionary;	// 0x32917381
- (id)_keyboardMappingData;	// 0x3291808d
- (void)_popupKeyboardDeleteCharacterHandler:(id)handler;	// 0x32913c99
- (void)_removeActionKeysRow;	// 0x32915741
- (void)_removeCursor;	// 0x32915b35
- (void)_removeCustomizedTextFieldControls;	// 0x3291536d
- (void)_removePopupKeyboard;	// 0x32914245
- (void)_saveTextEntryHistory;	// 0x329136fd
- (void)_setActiveKeyboard:(id)keyboard;	// 0x32915b09
- (void)_stripTrailingDotIfNecessary:(id)necessary;	// 0x32914055
- (void)_swapPopupkeyboard;	// 0x32913cb1
- (void)_wrapAroundEdge:(int)edge;	// 0x32914409
- (id)accessibilityLabel;	// 0x3291387d
- (id)accessibilityScreenContent;	// 0x3291383d
- (id)accessibilityTraits;	// 0x3291389d
- (id)accessibilityValue;	// 0x3291385d
- (void)addSelectionHandlerForControl:(id)control forKeyboard:(id)keyboard;	// 0x329138c9
- (BOOL)brEventAction:(id)action;	// 0x328c0211
// converted property getter: - (BOOL)canWrapHorizontally;	// 0x32914f29
// converted property getter: - (BOOL)canWrapVertically;	// 0x32914ec1
- (void)completeTextEntry;	// 0x32914f99
- (void)controlWasActivated;	// 0x32915c5d
- (void)controlWasDeactivated;	// 0x32915c09
- (void)controlWasFocused;	// 0x32913c41
- (void)controlWasUnfocused;	// 0x32913b6d
- (void)dealloc;	// 0x328c3745
- (void)deleteAllHistoryItemsForClients:(id)clients;	// 0x3291515d
- (void)deleteTextEntryHistoryItem:(id)item forTextEntryHistoryClients:(id)textEntryHistoryClients textEntryBehaviors:(id)behaviors;	// 0x329151bd
- (void)deviceKeyboardClose;	// 0x32913601
- (void)deviceKeyboardMessageHandler:(id)handler;	// 0x329131f9
- (void)deviceKeyboardUpdate:(BOOL)update;	// 0x329134ad
- (void)dismissPopupKeyboard;	// 0x3291399d
- (void)displayTextEntryHistoryForClients:(id)clients textEntryBehaviors:(id)behaviors;	// 0x32916ecd
- (BOOL)focusIsAtRightEdge;	// 0x32914a51
- (CGPoint)keyboardFocus;	// 0x32916249
- (void)layoutSubcontrols;	// 0x32915d69
// converted property getter: - (BOOL)providesOwnFocusCursor;	// 0x32913155
- (void)reset;	// 0x32914cc1
- (void)saveTextEntryHistory;	// 0x32915261
- (void)saveTextEntryHistoryUsingClient:(id)client textEntryBehavior:(id)behavior;	// 0x32915285
- (void)setBackgroundColor:(CGColorRef)color;	// 0x329139e1
// converted property setter: - (void)setCanWrapHorizontally:(BOOL)horizontally;	// 0x32914ee5
// converted property setter: - (void)setCanWrapVertically:(BOOL)vertically;	// 0x32914e7d
- (void)setConstrainCursorToPopupKeyboard:(BOOL)popupKeyboard;	// 0x32913175
- (void)setDeviceKeyboardTitle:(id)title subText:(id)text;	// 0x32914f4d
- (void)setDisplayTextEntryHistory:(BOOL)history;	// 0x32915325
- (void)setFocusToGlyphNamed:(id)glyphNamed;	// 0x32914aed
- (void)setInitialText:(id)text;	// 0x329172f1
- (BOOL)setKeyboardFocus:(CGPoint)focus;	// 0x32914971
- (void)setOutlineColor:(CGColorRef)color;	// 0x329139c1
- (void)setPopupBackgroundColor:(CGColorRef)color;	// 0x3291805d
- (void)setPopupOutlineColor:(CGColorRef)color;	// 0x3291802d
- (void)setPopupShadowStyle:(int)style;	// 0x32913165
// converted property setter: - (void)setProvidesOwnFocusCursor:(BOOL)cursor;	// 0x32914c8d
- (void)setShowUserEnteredText:(BOOL)text;	// 0x32914d81
// converted property setter: - (void)setTabControl:(id)control;	// 0x32914dcd
- (void)setTextEntryHistoryClient:(id)client textEntryBehavior:(id)behavior;	// 0x329152b9
// converted property setter: - (void)setTextEntryStyle:(int)style;	// 0x328bf6b5
// converted property setter: - (void)setTextField:(id)field;	// 0x32914fb1
// converted property setter: - (void)setTextFieldDelegate:(id)delegate;	// 0x328bfb99
- (void)setTextFieldLabel:(id)label;	// 0x328bfbb9
// converted property setter: - (void)setTextLengthLimit:(int)limit;	// 0x3291512d
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x32916215
- (void)startSpinning;	// 0x328c0789
- (void)stopSpinning;	// 0x328c07a9
- (void)switchToKeyboardNamed:(id)keyboardNamed focusOnKeyboardAfterSwitch:(BOOL)aSwitch;	// 0x329148bd
// converted property getter: - (id)tabControl;	// 0x32913145
- (void)tabControl:(id)control didSelectTabItem:(id)item;	// 0x329137dd
- (void)tabControl:(id)control willSelectTabItem:(id)item;	// 0x32913185
- (void)tabControlDidChangeNumberOfTabItems:(id)tabControl;	// 0x32913189
// converted property getter: - (int)textEntryStyle;	// 0x32913115
// converted property getter: - (id)textField;	// 0x32913135
// converted property getter: - (id)textFieldDelegate;	// 0x32914d61
// converted property getter: - (int)textLengthLimit;	// 0x32913125
@end

