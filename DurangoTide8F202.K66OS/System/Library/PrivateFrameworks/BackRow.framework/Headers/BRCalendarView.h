/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackRow.framework/BackRow
 */

#import "BackRow-Structs.h"
#import "BRControl.h"
#import "BRTumblerDelegate.h"
#import "BRTumblerDataSource.h"

@class BRImageControl, NSCalendar, NSDate, BRCursorControl, BRTumblerControl, BRPagedView;
@protocol BRCalendarViewDataSource, BRCalendarViewDelegate;

@interface BRCalendarView : BRControl <BRTumblerDataSource, BRTumblerDelegate> {
@private
	id<BRCalendarViewDataSource> _dataSource;	// 44 = 0x2c
	id<BRCalendarViewDelegate> _delegate;	// 48 = 0x30
	NSDate *_date;	// 52 = 0x34
	NSCalendar *_calendar;	// 56 = 0x38
	NSDate *_startDate;	// 60 = 0x3c
	NSDate *_endDate;	// 64 = 0x40
	BRTumblerControl *_monthPicker;	// 68 = 0x44
	BRPagedView *_calendarPages;	// 72 = 0x48
	BRImageControl *_brandingImage;	// 76 = 0x4c
	BRCursorControl *_cursor;	// 80 = 0x50
}
@property(assign, nonatomic) id<BRCalendarViewDataSource> dataSource;	// G=0x329aca05; S=0x329acdd1; @synthesize=_dataSource
@property(assign, nonatomic) id<BRCalendarViewDelegate> delegate;	// G=0x329ac9e5; S=0x329ac9f5; @synthesize=_delegate
+ (id)calendarView;	// 0x329acf05
+ (id)calendarViewForDate:(id)date;	// 0x329acec1
+ (id)calendarViewForDate:(id)date inCalendar:(id)calendar;	// 0x329ace79
- (id)init;	// 0x329ace29
- (id)initWithDate:(id)date;	// 0x329acdf1
- (id)initWithDate:(id)date inCalendar:(id)calendar;	// 0x329acffd
- (unsigned)_monthCount;	// 0x329aca15
- (void)calendarMonthView:(id)view didSelectItemAtDate:(id)date;	// 0x329acb31
- (id)calendarMonthView:(id)view itemForDate:(id)date;	// 0x329acb5d
- (BOOL)currentItemSelectedInTumbler:(id)tumbler;	// 0x329aca89
// declared property getter: - (id)dataSource;	// 0x329aca05
- (BOOL)datasourceShouldBeRetainedByPagedView:(id)datasource;	// 0x329ac9d1
- (void)dealloc;	// 0x329acf49
// declared property getter: - (id)delegate;	// 0x329ac9e5
- (BOOL)delegateShouldBeRetainedByPagedView:(id)delegate;	// 0x329ac9e1
- (unsigned)itemCountForTumbler:(id)tumbler;	// 0x329acb1d
- (void)layoutSubcontrols;	// 0x329ad4a1
- (long)pageCountForPagedView:(id)pagedView;	// 0x329acc5d
- (void)pagedView:(id)view didSelectItemAtIndex:(long)index;	// 0x329ac9dd
- (void)pagedView:(id)view didSwitchToPageAtIndex:(long)index fromPageAtIndex:(long)index3;	// 0x329ac9d9
- (id)pagedView:(id)view itemForPage:(long)page;	// 0x329acb89
- (void)pagedView:(id)view willSwitchToPageAtIndex:(long)index fromPageAtIndex:(long)index3;	// 0x329ac9d5
- (void)reload;	// 0x329acc71
- (void)setBrandingImage:(id)image;	// 0x329acdb1
// declared property setter: - (void)setDataSource:(id)source;	// 0x329acdd1
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x329ac9f5
- (void)tumblerControl:(id)control didTumbleToItemAtIndex:(unsigned)index;	// 0x329acaad
- (id)tumblerControl:(id)control itemAtIndex:(unsigned)index;	// 0x329ad359
@end

