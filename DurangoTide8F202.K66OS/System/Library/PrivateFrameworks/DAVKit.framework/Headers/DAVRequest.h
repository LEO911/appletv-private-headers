/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DAVKit.framework/DAVKit
 */

#import "DAVKit-Structs.h"
#import "AYOperation.h"

@class NSMutableSet, NSDictionary, NSData, NSDate, NSMutableData, DAVSession, NSString, NSMutableDictionary;

@interface DAVRequest : AYOperation {
	CFHTTPMessageRef _requestMessage;	// 64 = 0x40
	CFHTTPMessageRef _responseMessage;	// 68 = 0x44
	CFReadStreamRef _readStream;	// 72 = 0x48
	CFReadStreamRef _bodyStream;	// 76 = 0x4c
	CFHostClientContext _clientContext;	// 80 = 0x50
	DAVSession *_session;	// 100 = 0x64
	NSString *_method;	// 104 = 0x68
	NSString *_uri;	// 108 = 0x6c
	NSMutableSet *_bodyReaders;	// 112 = 0x70
	NSMutableSet *_acceptingReaders;	// 116 = 0x74
	NSMutableDictionary *_requestHeaders;	// 120 = 0x78
	NSDictionary *_headers;	// 124 = 0x7c
	NSString *_httpStatus;	// 128 = 0x80
	unsigned _httpStatusCode;	// 132 = 0x84
	NSMutableData *_httpResponseBody;	// 136 = 0x88
	NSMutableDictionary *_attemptDictionary;	// 140 = 0x8c
	NSData *_requestBodyData;	// 144 = 0x90
	long long _contentLength;	// 148 = 0x94
	long long _readLength;	// 156 = 0x9c
	long long _requestLength;	// 164 = 0xa4
	long long _putLength;	// 172 = 0xac
	id _delegate;	// 180 = 0xb4
	void *_davReserved;	// 184 = 0xb8
	int _certificatePolicy;	// 188 = 0xbc
	BOOL _useKerberos;	// 192 = 0xc0
	BOOL _checkedServerTrust;	// 193 = 0xc1
	NSDate *_dispatchDate;	// 196 = 0xc4
}
@property(readonly, retain) NSMutableSet *acceptingReaders;	// G=0x32da59a1; converted property
@property(assign) int certificatePolicy;	// G=0x32da52c9; S=0x32da52d9; converted property
@property(retain) NSDate *dispatchDate;	// G=0x32da6fb1; S=0x32da6fc9; @synthesize=_dispatchDate
@property(readonly, retain) NSString *httpStatus;	// G=0x32da5a39; converted property
@property(readonly, retain) NSString *method;	// G=0x32da5175; converted property
@property(readonly, assign) long long putLength;	// G=0x32da523d; converted property
@property(readonly, assign) long long readLength;	// G=0x32da51ed; converted property
@property(readonly, retain) NSMutableDictionary *requestHeaders;	// G=0x32da5195; converted property
@property(readonly, assign) long long requestLength;	// G=0x32da521d; converted property
@property(readonly, retain) DAVSession *session;	// G=0x32da5165; converted property
@property(readonly, retain) NSString *uri;	// G=0x32da5185; converted property
@property(readonly, assign) BOOL useKerberos;	// G=0x32da524d; converted property
+ (BOOL)allowsAnyHTTPSCertificateForHost:(id)host;	// 0x32da9189
+ (int)defaultCertificatePolicy;	// 0x32da52e9
+ (void)initialize;	// 0x32da620d
+ (BOOL)logHTTPActivity;	// 0x32da513d
+ (BOOL)logRequestSynopsis;	// 0x32da5121
+ (id)multiStatusRequestWithSession:(id)session method:(id)method URI:(id)uri;	// 0x32da4fb9
+ (id)multiStatusRequestWithSession:(id)session method:(id)method URI:(id)uri responseClass:(Class)aClass;	// 0x32da4ee5
+ (id)multiStatusRequestWithSession:(id)session method:(id)method path:(id)path;	// 0x32da5009
+ (id)multiStatusRequestWithSession:(id)session method:(id)method path:(id)path responseClass:(Class)aClass;	// 0x32da4f2d
+ (id)multiStatusRequestWithURL:(id)url method:(id)method;	// 0x32da5059
+ (id)multiStatusRequestWithURL:(id)url method:(id)method responseClass:(Class)aClass;	// 0x32da4f75
+ (id)propFindRequestWithSession:(id)session withDepth:(id)depth URI:(id)uri lookingForProps:(id)props;	// 0x32da4a31
+ (id)propFindRequestWithSession:(id)session withDepth:(id)depth URI:(id)uri lookingForProps:(id)props responseReader:(id)reader;	// 0x32da49e5
+ (id)propFindRequestWithSession:(id)session withDepth:(id)depth path:(id)path lookingForProps:(id)props;	// 0x32da4a79
+ (id)propFindRequestWithURL:(id)url withDepth:(id)depth lookingForProps:(id)props;	// 0x32da4ac1
+ (id)propPatchRequestWithSession:(id)session path:(id)path patchProperties:(id)properties deleteProperties:(id)properties4;	// 0x32da44ad
+ (id)propPatchRequestWithURL:(id)url patchProperties:(id)properties deleteProperties:(id)properties3;	// 0x32da44f5
+ (id)requestWithSession:(id)session method:(id)method URI:(id)uri;	// 0x32da614d
+ (id)requestWithSession:(id)session method:(id)method path:(id)path;	// 0x32da6191
+ (id)requestWithURL:(id)url method:(id)method;	// 0x32da61d5
+ (void)setAllowsAnyHTTPSCertificateForHost:(id)host value:(BOOL)value;	// 0x32da90c5
+ (void)setDefaultCertificatePolicy:(int)policy;	// 0x32da52f5
+ (void)setLogHTTPActivity:(BOOL)activity;	// 0x32da514d
+ (void)setLogRequestSynopsis:(BOOL)synopsis;	// 0x32da5131
- (BOOL)initAuthGSS;	// 0x32da51a5
- (void)initBeforeDispatch;	// 0x32da5d39
- (id)initMultiStatusRequestWithSession:(id)session method:(id)method URI:(id)uri;	// 0x32da4df9
- (id)initMultiStatusRequestWithSession:(id)session method:(id)method URI:(id)uri responseClass:(Class)aClass;	// 0x32da4d5d
- (id)initMultiStatusRequestWithSession:(id)session method:(id)method URI:(id)uri responseReader:(id)reader;	// 0x32da4d25
- (id)initMultiStatusRequestWithSession:(id)session method:(id)method path:(id)path;	// 0x32da4e49
- (id)initMultiStatusRequestWithSession:(id)session method:(id)method path:(id)path responseClass:(Class)aClass;	// 0x32da4d95
- (id)initMultiStatusRequestWithURL:(id)url method:(id)method;	// 0x32da4e99
- (id)initMultiStatusRequestWithURL:(id)url method:(id)method responseClass:(Class)aClass;	// 0x32da4dcd
- (id)initPropFindWithSession:(id)session withDepth:(id)depth URI:(id)uri lookingForProps:(id)props;	// 0x32da488d
- (id)initPropFindWithSession:(id)session withDepth:(id)depth URI:(id)uri lookingForProps:(id)props responseReader:(id)reader;	// 0x32da483d
- (id)initPropFindWithSession:(id)session withDepth:(id)depth path:(id)path lookingForProps:(id)props;	// 0x32da4901
- (id)initPropFindWithURL:(id)url withDepth:(id)depth lookingForProps:(id)props;	// 0x32da4975
- (id)initPropPatchWithSession:(id)session URI:(id)uri patchProperties:(id)properties deleteProperties:(id)properties4;	// 0x32da435d
- (id)initPropPatchWithSession:(id)session path:(id)path patchProperties:(id)properties deleteProperties:(id)properties4;	// 0x32da43cd
- (id)initPropPatchWithURL:(id)url patchProperties:(id)properties deleteProperties:(id)properties3;	// 0x32da443d
- (id)initWithSession:(id)session method:(id)method URI:(id)uri;	// 0x32da65b9
- (id)initWithSession:(id)session method:(id)method path:(id)path;	// 0x32da6089
- (id)initWithURL:(id)url method:(id)method;	// 0x32da60cd
- (unsigned char)_bodyStreamCanRead;	// 0x32da5281
- (unsigned char)_bodyStreamOpen:(XXStruct_K5nmsA *)open openComplete:(char *)complete;	// 0x32da579d
- (long)_bodyStreamRead:(char *)read bufferLength:(long)length error:(XXStruct_K5nmsA *)error atEOF:(char *)eof;	// 0x32da7345
- (BOOL)_computeHeaders;	// 0x32da7671
- (void)_initForPropFindWithDepth:(id)depth lookingForProps:(id)props;	// 0x32da4b05
- (void)_initForPropPatchWithPatchDict:(id)patchDict deleteProperties:(id)properties;	// 0x32da4539
- (BOOL)_initHTTPRequest;	// 0x32da8741
- (void)_initReaderWithClass:(Class)aClass;	// 0x32da50a5
- (id)_nonceFromAuthHeader:(id)authHeader;	// 0x32da6ca9
- (BOOL)_nonceIsStale:(id)stale;	// 0x32da6b39
- (void)_readStreamEvent:(unsigned long)event;	// 0x32da7f11
// converted property getter: - (id)acceptingReaders;	// 0x32da59a1
- (void)addResponseBodyReader:(id)reader;	// 0x32da5f35
- (int)attemptForHTTPCode:(int)httpcode;	// 0x32da57b9
// converted property getter: - (int)certificatePolicy;	// 0x32da52c9
- (void)dealloc;	// 0x32da6975
- (id)description;	// 0x32da6019
- (void)dispatch;	// 0x32da5a7d
// declared property getter: - (id)dispatchDate;	// 0x32da6fb1
- (void)displayCertPanel:(id)panel;	// 0x32da5785
- (void)endOperationWithError:(id)error;	// 0x32da8ca1
- (void)finalize;	// 0x32da689d
- (void)finalizeOperation;	// 0x32da5979
- (id)getErrorFromHTTPStatus;	// 0x32da5355
- (char *)getToken;	// 0x32da525d
- (void)grantRequestWithLockToken:(id)lockToken;	// 0x32da5ec9
- (void)grantRequestWithLockTokens:(id)lockTokens;	// 0x32da5d89
// converted property getter: - (id)httpStatus;	// 0x32da5a39
- (int)httpStatusCode;	// 0x32da51ad
- (BOOL)isNegoHeader:(id)header;	// 0x32da6e11
- (BOOL)isRunLoopBased;	// 0x32da52c5
- (CFHTTPMessageRef)lastRequestMessage;	// 0x32da5271
- (CFHTTPMessageRef)lastResponseMessage;	// 0x32da5261
// converted property getter: - (id)method;	// 0x32da5175
- (CFReadStreamRef)newStreamWithRequestMessage:(CFHTTPMessageRef)requestMessage;	// 0x32da7189
- (long long)operationProgress;	// 0x32da51fd
- (long long)operationTotal;	// 0x32da520d
- (id)password;	// 0x32da5919
// converted property getter: - (long long)putLength;	// 0x32da523d
// converted property getter: - (long long)readLength;	// 0x32da51ed
- (id)requestBody;	// 0x32da522d
// converted property getter: - (id)requestHeaders;	// 0x32da5195
// converted property getter: - (long long)requestLength;	// 0x32da521d
- (id)responseBody;	// 0x32da51cd
- (id)responseBodyString;	// 0x32da59d1
- (long long)responseContentLength;	// 0x32da51dd
- (id)responseHeaders;	// 0x32da51bd
- (id)responses;	// 0x32da4cf5
- (id)retryOperationAfterSSLError:(int)error;	// 0x32da7595
// converted property getter: - (id)session;	// 0x32da5165
// converted property setter: - (void)setCertificatePolicy:(int)policy;	// 0x32da52d9
- (BOOL)setCertificatePolicyOnStream:(CFReadStreamRef)stream;	// 0x32da6ff5
// declared property setter: - (void)setDispatchDate:(id)date;	// 0x32da6fc9
- (void)setError:(id)error;	// 0x32da63cd
- (void)setHeader:(id)header withValue:(id)value;	// 0x32da5f55
- (void)setRequestBodyWithData:(id)data;	// 0x32da5fad
- (void)setRequestBodyWithString:(id)string encoding:(unsigned)encoding;	// 0x32da5f7d
- (void)setSSLPropertiesOnReadStream;	// 0x32da9045
- (void)setTrustedCertsOnReadStream:(id)stream;	// 0x32da5301
- (void)setUsername:(id)username andPassword:(id)password;	// 0x32da5959
- (BOOL)shouldContinueAfterCheckingServerTrust;	// 0x32da7db9
- (BOOL)stepAuthGSS:(id)gss;	// 0x32da51a9
- (BOOL)supportsDigest;	// 0x32da6f01
// converted property getter: - (id)uri;	// 0x32da5185
- (id)url;	// 0x32da5fe9
// converted property getter: - (BOOL)useKerberos;	// 0x32da524d
- (id)username;	// 0x32da5939
@end

