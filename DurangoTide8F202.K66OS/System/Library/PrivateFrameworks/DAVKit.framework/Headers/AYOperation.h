/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DAVKit.framework/DAVKit
 */

#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSThread, NSError, NSLock;
@protocol AYGroup, AYNotificationDelegate;

@interface AYOperation : NSObject {
	id _asyncProxy;	// 4 = 0x4
	NSThread *_currentThread;	// 8 = 0x8
	NSThread *_baseThread;	// 12 = 0xc
	AYOperation *_parentOperation;	// 16 = 0x10
	AYOperation *_mainOperation;	// 20 = 0x14
	AYOperation *_currentChildOperation;	// 24 = 0x18
	id<AYGroup> _group;	// 28 = 0x1c
	NSLock *_operationLock;	// 32 = 0x20
	NSError *_error;	// 36 = 0x24
	BOOL _operationEnded;	// 40 = 0x28
	BOOL _operationAborted;	// 41 = 0x29
	BOOL _silent;	// 42 = 0x2a
	BOOL _canAbortNow;	// 43 = 0x2b
	BOOL _inAbortProcess;	// 44 = 0x2c
	int _currentMark;	// 48 = 0x30
	void *_reserved;	// 52 = 0x34
	id<AYNotificationDelegate> _notificationDelegate;	// 56 = 0x38
	NSMutableDictionary *_privateInfos;	// 60 = 0x3c
}
@property(readonly, retain) NSThread *baseThread;	// G=0x32dae0d5; converted property
@property(assign) BOOL canAbortNow;	// G=0x32dae181; S=0x32dae4e5; converted property
@property(readonly, assign) int currentMark;	// G=0x32dae11d; converted property
@property(retain) NSError *error;	// G=0x32dae2dd; S=0x32dae30d; converted property
@property(readonly, retain) AYOperation *mainOperation;	// G=0x32dae0b5; converted property
@property(assign) id notificationDelegate;	// G=0x32dae161; S=0x32dae151; converted property
@property(retain) id operationCompanion;	// G=0x32dae7c9; S=0x32dae7e5; converted property
@property(retain) id operationGroup;	// G=0x32dae109; S=0x32dae81d; converted property
@property(readonly, retain) AYOperation *parentOperation;	// G=0x32dae0a5; converted property
@property(assign, getter=isSilent) BOOL silent;	// G=0x32dae13d; S=0x32dae12d; converted property
+ (BOOL)_dispatchNextOperationInQueue;	// 0x32db00ed
+ (void)_initCurrentThread;	// 0x32daf8ed
+ (void)_initMainThread;	// 0x32daf8b1
+ (void)_lockForAllThreads;	// 0x32dae059
+ (BOOL)_lockWaitingForOperation;	// 0x32daf6a5
+ (void)_noLockForThread:(id)thread;	// 0x32dae04d
+ (void)_queueOneBlock;	// 0x32db0771
+ (void)_setCurrentOperation:(id)operation;	// 0x32daeda5
+ (id)currentOperation;	// 0x32daee31
+ (void)endAllPendingOperationsOfGroup:(id)group withError:(id)error;	// 0x32daf0d5
+ (void)initialize;	// 0x32daf71d
+ (void)lockOperations;	// 0x32daf65d
+ (id)mainThread;	// 0x32dae069
+ (BOOL)popOperation:(id)operation;	// 0x32daf401
+ (void)pushInvocation:(id)invocation;	// 0x32daf4e5
+ (void)unblockAllOperationsForGroup:(id)group;	// 0x32daf2bd
+ (void)unlockOperations;	// 0x32daf5f1
- (id)init;	// 0x32dae199
- (id)_currentChildOperation;	// 0x32dae095
- (void)_handleEventRecursively:(id)recursively;	// 0x32daec8d
- (void)_sendEventToThreadLocked:(id)threadLocked;	// 0x32daebed
- (void)_setCurrentChildOperation:(id)operation;	// 0x32dae085
- (void)_setCurrentThread:(id)thread;	// 0x32dae075
- (void)_startAbortProcess;	// 0x32daeb39
- (void)abortOperation;	// 0x32dae981
- (id)async;	// 0x32daef45
// converted property getter: - (id)baseThread;	// 0x32dae0d5
// converted property getter: - (BOOL)canAbortNow;	// 0x32dae181
- (void)clearError;	// 0x32dae4bd
// converted property getter: - (int)currentMark;	// 0x32dae11d
- (void)dealloc;	// 0x32daf045
- (void)endOperationWithError:(id)error;	// 0x32daff7d
// converted property getter: - (id)error;	// 0x32dae2dd
- (void)finalizeOperation;	// 0x32dae195
- (BOOL)handleEventInThread:(id)thread;	// 0x32daeaed
- (void)handleNotificationOfChildOperation:(id)childOperation notification:(id)notification;	// 0x32dae14d
- (BOOL)hasOperationEnded;	// 0x32dae0f9
- (id)infoForKey:(id)key;	// 0x32dae229
- (BOOL)isAsync;	// 0x32dae0e5
- (BOOL)isRunLoopBased;	// 0x32dae119
// converted property getter: - (BOOL)isSilent;	// 0x32dae13d
- (void)lockOperation;	// 0x32daed5d
// converted property getter: - (id)mainOperation;	// 0x32dae0b5
- (void)markWithTag:(int)tag;	// 0x32dae7b1
- (void)markWithTag:(int)tag notify:(BOOL)notify;	// 0x32dae719
// converted property getter: - (id)notificationDelegate;	// 0x32dae161
- (void)notifyWithName:(id)name infos:(id)infos;	// 0x32dae54d
// converted property getter: - (id)operationCompanion;	// 0x32dae7c9
// converted property getter: - (id)operationGroup;	// 0x32dae109
- (long long)operationProgress;	// 0x32dae171
- (id)operationThread;	// 0x32dae0c5
- (long long)operationTotal;	// 0x32dae179
- (void)operationWillAbort;	// 0x32dae191
// converted property getter: - (id)parentOperation;	// 0x32dae0a5
- (void)postOperation;	// 0x32dae2b5
- (void)removeInfoForKey:(id)key;	// 0x32dae209
- (void)resetOperation;	// 0x32dae85d
- (void)runOperationWithTimeOut:(unsigned)timeOut;	// 0x32dafca9
- (void)sendEventToThread:(id)thread;	// 0x32daeba5
// converted property setter: - (void)setCanAbortNow:(BOOL)now;	// 0x32dae4e5
// converted property setter: - (void)setError:(id)error;	// 0x32dae30d
- (void)setInfo:(id)info forKey:(id)key;	// 0x32dae249
// converted property setter: - (void)setNotificationDelegate:(id)delegate;	// 0x32dae151
// converted property setter: - (void)setOperationCompanion:(id)companion;	// 0x32dae7e5
// converted property setter: - (void)setOperationGroup:(id)group;	// 0x32dae81d
// converted property setter: - (void)setSilent:(BOOL)silent;	// 0x32dae12d
- (id)syncFor:(id)aFor;	// 0x32daeea9
- (id)synchronous;	// 0x32daee75
- (void)unlockOperation;	// 0x32daed15
- (void)waitForOperationToEnd;	// 0x32dae8a9
@end

