/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
@private
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x324ac1b5
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x324ac119
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x324ac169
+ (id)decimalNumberWithString:(id)string;	// 0x324ac0ed
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x324ac0bd
+ (id)defaultBehavior;	// 0x324aba09
+ (id)maximumDecimalNumber;	// 0x324abd09
+ (id)minimumDecimalNumber;	// 0x324abd75
+ (id)notANumber;	// 0x324abf75
+ (id)numberWithBool:(BOOL)aBool;	// 0x324aadd1
+ (id)numberWithChar:(BOOL)aChar;	// 0x324ab15d
+ (id)numberWithDouble:(double)aDouble;	// 0x324aae11
+ (id)numberWithFloat:(float)aFloat;	// 0x324aae55
+ (id)numberWithInt:(int)int;	// 0x324ab05d
+ (id)numberWithInteger:(int)integer;	// 0x324ab01d
+ (id)numberWithLong:(long)aLong;	// 0x324aaf5d
+ (id)numberWithLongLong:(long long)longLong;	// 0x324aaed9
+ (id)numberWithShort:(short)aShort;	// 0x324ab0dd
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x324ab11d
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x324aafdd
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x324aaf9d
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x324aaf1d
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x324aae95
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x324ab09d
+ (id)one;	// 0x324abfd9
+ (void)setDefaultBehavior:(id)behavior;	// 0x324aba65
+ (id)zero;	// 0x324ac03d
- (id)initWithCoder:(id)coder;	// 0x324abdf9
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x324abe95
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x324abed9
- (id)initWithString:(id)string;	// 0x324abe61
- (id)initWithString:(id)string locale:(id)locale;	// 0x324abe2d
- (BOOL)boolValue;	// 0x324ab865
- (BOOL)charValue;	// 0x324ab9c5
- (Class)classForCoder;	// 0x324ab9e9
- (int)compare:(id)compare;	// 0x324ac61d
- (id)copy;	// 0x324abf0d
- (id)copyWithZone:(NSZone *)zone;	// 0x324ac5a5
- (id)decimalNumberByAdding:(id)adding;	// 0x324abc61
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x324ac7ed
- (id)decimalNumberByDividingBy:(id)by;	// 0x324abb3d
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x324ac985
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x324abb85
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x324ac8fd
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x324abaad
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x324acaa1
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x324abaf5
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x324aca0d
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x324ac68d
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x324abc29
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x324abc15
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x324abbcd
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x324ac875
- (XXStruct_9isexA)decimalValue;	// 0x324ac255
- (id)description;	// 0x324abde1
- (id)descriptionWithLocale:(id)locale;	// 0x324ac60d
- (double)doubleValue;	// 0x324aacd1
- (void)encodeWithCoder:(id)coder;	// 0x324ac3ed
- (float)floatValue;	// 0x324ab889
- (void)getValue:(void *)value;	// 0x324abca9
- (int)intValue;	// 0x324ab939
- (BOOL)isEqual:(id)equal;	// 0x324abcc5
- (long long)longLongValue;	// 0x324ab8c1
- (long)longValue;	// 0x324ab8f9
- (const char *)objCType;	// 0x324aacc5
- (short)shortValue;	// 0x324ab97d
- (unsigned char)unsignedCharValue;	// 0x324ab9a1
- (unsigned)unsignedIntValue;	// 0x324ab919
- (unsigned long long)unsignedLongLongValue;	// 0x324ab8a9
- (unsigned long)unsignedLongValue;	// 0x324ab8d9
- (unsigned short)unsignedShortValue;	// 0x324ab959
@end

