/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x324b4701; S=0x3242dd39; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x324b7219; S=0x3244ad0d; converted property
@property(retain) id currencyCode;	// G=0x324b77e9; S=0x324b6525; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x324b72b5; S=0x324b5b4d; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x324b85e1; S=0x324b6e41; converted property
@property(retain) id currencySymbol;	// G=0x324b7891; S=0x324b65b9; converted property
@property(retain) id decimalSeparator;	// G=0x324b7171; S=0x324b5abd; converted property
@property(retain) id exponentSymbol;	// G=0x324b7c81; S=0x324b6931; converted property
@property(assign) unsigned formatWidth;	// G=0x324b7ea9; S=0x324b6a2d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x324b48c1; S=0x324406b9; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x324b56ed; S=0x32432655; converted property
@property(retain) id groupingSeparator;	// G=0x324b73f9; S=0x324b5be1; converted property
@property(assign) unsigned groupingSize;	// G=0x324b7d29; S=0x3244f819; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x324b7939; S=0x324b664d; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x324b8689; S=0x324b6ed5; converted property
@property(retain) id locale;	// G=0x324b568d; S=0x324325f5; converted property
@property(retain) id maximum;	// G=0x324b6e19; S=0x324b4601; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x324b8521; S=0x324b6d89; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x324b83a1; S=0x324b6d21; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x324b700d; S=0x324b70cd; converted property
@property(retain) id minimum;	// G=0x324b6df1; S=0x324b4681; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x324b8461; S=0x3244ad75; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x324b82e1; S=0x3244addd; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x324b87c9; S=0x324b6fa5; converted property
@property(retain) id minusSign;	// G=0x324b7b31; S=0x324b6809; converted property
@property(retain) id multiplier;	// G=0x324b7f69; S=0x324b6a95; converted property
@property(retain) id negativeFormat;	// G=0x324b5729; S=0x324b57c9; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x324b6199; S=0x3242dced; converted property
@property(retain) id negativePrefix;	// G=0x324b7699; S=0x324b63fd; converted property
@property(retain) id negativeSuffix;	// G=0x324b7741; S=0x324b6491; converted property
@property(retain) id nilSymbol;	// G=0x324b5dc9; S=0x3242dc55; converted property
@property(retain) id notANumberSymbol;	// G=0x324b74a1; S=0x324b5f05; converted property
@property(assign) unsigned numberStyle;	// G=0x324b561d; S=0x3243269d; converted property
@property(retain) id paddingCharacter;	// G=0x324b8011; S=0x324b6b29; converted property
@property(assign) unsigned paddingPosition;	// G=0x324b80b9; S=0x324b6bbd; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x324b7135; S=0x324b45b9; converted property
@property(retain) id perMillSymbol;	// G=0x324b7a89; S=0x324b6775; converted property
@property(retain) id percentSymbol;	// G=0x324b79e1; S=0x324b66e1; converted property
@property(retain) id plusSign;	// G=0x324b7bd9; S=0x324b689d; converted property
@property(retain) id positiveFormat;	// G=0x324b5919; S=0x324b59a5; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x324b605d; S=0x3242dca1; converted property
@property(retain) id positivePrefix;	// G=0x324b7549; S=0x324b62d5; converted property
@property(retain) id positiveSuffix;	// G=0x324b75f1; S=0x324b6369; converted property
@property(retain) id roundingIncrement;	// G=0x324b8239; S=0x324b6c8d; converted property
@property(assign) unsigned roundingMode;	// G=0x324b8179; S=0x324b6c25; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x324b7de9; S=0x324b69c5; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x324b6211; S=0x324b6289; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x324b4849; S=0x324b47fd; converted property
@property(retain) id textAttributesForNil;	// G=0x324b5e41; S=0x324b5eb9; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x324b5f99; S=0x324b6011; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x324b60d5; S=0x324b614d; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x324b4785; S=0x324b4739; converted property
@property(retain) id textAttributesForZero;	// G=0x324b5d05; S=0x324b5d7d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x324b735d; S=0x324432ed; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x324b8729; S=0x324b6f3d; converted property
@property(retain) id zeroSymbol;	// G=0x3244b1f1; S=0x324b5c71; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x3242dc49
+ (void)initialize;	// 0x3242d8f9
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x3244b10d
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x3242d919
- (id)init;	// 0x3242d92d
- (id)initWithCoder:(id)coder;	// 0x324b4a05
- (void *)__Keynote_NOOP;	// 0x324b45b1
- (void)_regenerateFormatter;	// 0x3242dd81
- (void)_reset;	// 0x324b4bf1
// converted property getter: - (BOOL)allowsFloats;	// 0x324b4701
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x324b7219
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x324b45b5
- (id)copyWithZone:(NSZone *)zone;	// 0x324b4b95
// converted property getter: - (id)currencyCode;	// 0x324b77e9
// converted property getter: - (id)currencyDecimalSeparator;	// 0x324b72b5
// converted property getter: - (id)currencyGroupingSeparator;	// 0x324b85e1
// converted property getter: - (id)currencySymbol;	// 0x324b7891
- (void)dealloc;	// 0x324484f1
// converted property getter: - (id)decimalSeparator;	// 0x324b7171
- (void)encodeWithCoder:(id)coder;	// 0x324b4931
// converted property getter: - (id)exponentSymbol;	// 0x324b7c81
- (void)finalize;	// 0x324b49c5
// converted property getter: - (unsigned)formatWidth;	// 0x324b7ea9
// converted property getter: - (unsigned)formatterBehavior;	// 0x324b48c1
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x324b56ed
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x324b5551
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x324b5531
// converted property getter: - (id)groupingSeparator;	// 0x324b73f9
// converted property getter: - (unsigned)groupingSize;	// 0x324b7d29
// converted property getter: - (id)internationalCurrencySymbol;	// 0x324b7939
// converted property getter: - (BOOL)isLenient;	// 0x324b8689
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x324b7135
// converted property getter: - (id)locale;	// 0x324b568d
// converted property getter: - (id)maximum;	// 0x324b6e19
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x324b8521
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x324b83a1
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x324b700d
// converted property getter: - (id)minimum;	// 0x324b6df1
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x324b8461
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x324b82e1
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x324b87c9
// converted property getter: - (id)minusSign;	// 0x324b7b31
// converted property getter: - (id)multiplier;	// 0x324b7f69
// converted property getter: - (id)negativeFormat;	// 0x324b5729
// converted property getter: - (id)negativeInfinitySymbol;	// 0x324b6199
// converted property getter: - (id)negativePrefix;	// 0x324b7699
// converted property getter: - (id)negativeSuffix;	// 0x324b7741
// converted property getter: - (id)nilSymbol;	// 0x324b5dc9
// converted property getter: - (id)notANumberSymbol;	// 0x324b74a1
- (id)numberFromString:(id)string;	// 0x324b48f9
// converted property getter: - (unsigned)numberStyle;	// 0x324b561d
// converted property getter: - (id)paddingCharacter;	// 0x324b8011
// converted property getter: - (unsigned)paddingPosition;	// 0x324b80b9
// converted property getter: - (id)perMillSymbol;	// 0x324b7a89
// converted property getter: - (id)percentSymbol;	// 0x324b79e1
// converted property getter: - (id)plusSign;	// 0x324b7bd9
// converted property getter: - (id)positiveFormat;	// 0x324b5919
// converted property getter: - (id)positiveInfinitySymbol;	// 0x324b605d
// converted property getter: - (id)positivePrefix;	// 0x324b7549
// converted property getter: - (id)positiveSuffix;	// 0x324b75f1
// converted property getter: - (id)roundingIncrement;	// 0x324b8239
// converted property getter: - (unsigned)roundingMode;	// 0x324b8179
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x324b7de9
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x3242dd39
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x3244ad0d
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x324b6525
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x324b5b4d
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x324b6e41
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x324b65b9
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x324b5abd
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x324b6931
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x324b6a2d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x324406b9
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x32432655
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x324b5be1
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x3244f819
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x324b664d
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x324b6ed5
// converted property setter: - (void)setLocale:(id)locale;	// 0x324325f5
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x324b4601
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x324b6d89
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x324b6d21
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x324b70cd
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x324b4681
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x3244ad75
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x3244addd
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x324b6fa5
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x324b6809
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x324b6a95
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x324b57c9
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x3242dced
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x324b63fd
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x324b6491
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x3242dc55
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x324b5f05
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3243269d
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x324b6b29
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x324b6bbd
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x324b45b9
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x324b6775
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x324b66e1
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x324b689d
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x324b59a5
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x3242dca1
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x324b62d5
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x324b6369
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x324b6c8d
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x324b6c25
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x324b69c5
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x324b6289
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x324b47fd
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x324b5eb9
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x324b6011
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x324b614d
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x324b4739
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x324b5d7d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x324432ed
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x324b6f3d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x324b5c71
- (id)stringForObjectValue:(id)objectValue;	// 0x32432711
- (id)stringFromNumber:(id)number;	// 0x324326f5
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x324b6211
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x324b4849
// converted property getter: - (id)textAttributesForNil;	// 0x324b5e41
// converted property getter: - (id)textAttributesForNotANumber;	// 0x324b5f99
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x324b60d5
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x324b4785
// converted property getter: - (id)textAttributesForZero;	// 0x324b5d05
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x324b735d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x324b8729
// converted property getter: - (id)zeroSymbol;	// 0x3244b1f1
@end

