/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSURLProtocolClient.h"

@class NSURLProtocol, NSMutableArray, NSLock, NSURLAuthenticationChallenge;

__attribute__((visibility("hidden")))
@interface _NSCFURLProtocolBridge : NSObject <NSURLProtocolClient> {
@private
	unsigned flags;	// 4 = 0x4
	NSURLProtocol *nsProt;	// 8 = 0x8
	CFURLProtocolRef _cfProt;	// 12 = 0xc
	CFURLAuthChallengeRef cfChallenge;	// 16 = 0x10
	NSURLAuthenticationChallenge *nsChallenge;	// 20 = 0x14
	CFRunLoopSourceRef _rlSrc;	// 24 = 0x18
	NSMutableArray *events;	// 28 = 0x1c
	NSLock *eventMutex;	// 32 = 0x20
	NSMutableArray *clientInstructions;	// 36 = 0x24
	NSLock *clientMutex;	// 40 = 0x28
	BOOL _loading;	// 44 = 0x2c
}
+ (void)barRequest:(CFURLRequestRef)request;	// 0x3244b075
+ (void)permitRequest:(CFURLRequestRef)request;	// 0x3244b0c1
+ (void)registerWithCFURLProtocol;	// 0x32439a1d
- (id)initWithCFURLProtocol:(CFURLProtocolRef)cfurlprotocol;	// 0x32449431
- (void)URLProtocol:(id)protocol cachedResponseIsValid:(id)valid;	// 0x32449e39
- (void)URLProtocol:(id)protocol didCancelAuthenticationChallenge:(id)challenge;	// 0x324b8e35
- (void)URLProtocol:(id)protocol didFailWithError:(id)error;	// 0x324b8f75
- (void)URLProtocol:(id)protocol didLoadData:(id)data;	// 0x324b9061
- (void)URLProtocol:(id)protocol didLoadData:(id)data lengthReceived:(long long)received;	// 0x324b90d9
- (void)URLProtocol:(id)protocol didReceiveAuthenticationChallenge:(id)challenge;	// 0x324b8efd
- (void)URLProtocol:(id)protocol didReceiveResponse:(id)response cacheStoragePolicy:(unsigned)policy;	// 0x324ba121
- (void)URLProtocol:(id)protocol wasRedirectedToRequest:(id)request redirectResponse:(id)response;	// 0x324b91fd
- (void)URLProtocolDidFinishLoading:(id)urlprotocol;	// 0x324b8fed
- (void)_forgetClient;	// 0x32449fe5
- (void)cachedResponseIsValid:(id)valid;	// 0x32449eb1
- (void)dealloc;	// 0x3244a0c5
- (id)description;	// 0x324b95f1
- (void)didFailWithError:(id)error;	// 0x324b9d35
- (void)didFinishLoading;	// 0x324b9d1d
- (void)didLoadData:(id)data lengthReceived:(long long)received;	// 0x324b9cf5
- (void)didReceiveAuthenticationChallenge:(id)challenge;	// 0x324b9d4d
- (void)didReceiveResponse:(id)response;	// 0x324b9cc9
- (void)dispatchInstruction:(int)instruction;	// 0x324b96b5
- (void)dispatchInstructions;	// 0x324b9421
- (void)finalize;	// 0x324b97e5
- (void)halt;	// 0x324b93d9
- (void)marshalEvent:(int)event obj:(id)obj obj2:(id)a2;	// 0x324b9fed
- (void)processEventQ;	// 0x324b9db5
- (void)resume;	// 0x324b9391
- (void)schedule:(CFRunLoopRef)schedule mode:(CFStringRef)mode;	// 0x32449999
- (void)sendInstruction:(int)instruction;	// 0x324b9b11
- (void)start;	// 0x32449aa1
- (void)stop;	// 0x32449f49
- (void)unschedule:(CFRunLoopRef)unschedule mode:(CFStringRef)mode;	// 0x324b9ac1
- (void)useCredential:(CFURLCredentialRef)credential forChallenge:(CFURLAuthChallengeRef)challenge;	// 0x324b9299
- (void)wasRedirectedToRequest:(id)request redirectResponse:(id)response;	// 0x324b9c59
@end

