/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIPickerView.h"
#import "UIPickerViewDelegate.h"
#import "UIPickerViewDataSource.h"

@class UIDatePicker, NSLocale, NSTimeZone, NSCalendar, NSDateComponents, NSString, UILabel, NSDate;

__attribute__((visibility("hidden")))
@interface UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource> {
@private
	int _datePickerMode;	// 76 = 0x4c
	NSLocale *_locale;	// 80 = 0x50
	NSTimeZone *_timeZone;	// 84 = 0x54
	NSCalendar *_calendar;	// 88 = 0x58
	CFDateFormatterRef _localDateFormatter;	// 92 = 0x5c
	NSDate *_date;	// 96 = 0x60
	NSDate *_minimumDate;	// 100 = 0x64
	NSDate *_maximumDate;	// 104 = 0x68
	double _countDownDuration;	// 108 = 0x6c
	int _minuteInterval;	// 116 = 0x74
	NSDateComponents *_referenceComponents;	// 120 = 0x78
	double _todaySinceReferenceDate;	// 124 = 0x7c
	NSDateComponents *_todayDateComponents;	// 132 = 0x84
	NSString *_amString;	// 136 = 0x88
	NSString *_pmString;	// 140 = 0x8c
	UILabel *_hourLabel;	// 144 = 0x90
	UILabel *_minuteLabel;	// 148 = 0x94
	UIDatePicker *_datePickerDelegate;	// 152 = 0x98
	id _delegateOfDatePicker;	// 156 = 0x9c
	int _numberOfDaysInCurrentMonth;	// 160 = 0xa0
	int _expectedAMPM;	// 164 = 0xa4
	NSDateComponents *_minDateComponents;	// 168 = 0xa8
	NSDateComponents *_maxDateComponents;	// 172 = 0xac
	struct {
		unsigned dateOrder : 2;
		unsigned timeOrder : 2;
		unsigned weekdayOrder : 1;
		unsigned staggerTimeIntervals : 1;
		unsigned loadingDateOrTime : 1;
		unsigned highlightsToday : 1;
		unsigned hasCustomCalendar : 1;
		unsigned reserved : 23;
	} _datePickerFlags;	// 176 = 0xb0
}
@property(copy, nonatomic) NSCalendar *calendar;	// G=0x30647401; S=0x3078d789; @synthesize=_calendar
@property(assign, nonatomic) double countDownDuration;	// G=0x3078c9c9; S=0x3078dc41; 
@property(copy, nonatomic) NSDate *date;	// G=0x3065e501; S=0x3065ffd5; @synthesize=_date
@property(retain) id dateComponents;	// G=0x306473cd; S=0x3078ca31; converted property
@property(assign, nonatomic) int datePickerMode;	// G=0x3078c865; S=0x30647491; @synthesize=_datePickerMode
@property(assign, nonatomic) id delegateOfDatePicker;	// G=0x3078c7f5; S=0x3078c805; @synthesize=_delegateOfDatePicker
@property(readonly, assign, nonatomic, getter=_hasCustomCalendar) BOOL hasCustomCalendar;	// G=0x3078c7c5; 
@property(retain, nonatomic) NSLocale *locale;	// G=0x3078c855; S=0x3078cdc5; @synthesize=_locale
@property(copy, nonatomic) NSDate *maximumDate;	// G=0x3078c825; S=0x3078cc35; @synthesize=_maximumDate
@property(copy, nonatomic) NSDate *minimumDate;	// G=0x3078c835; S=0x3078ccfd; @synthesize=_minimumDate
@property(assign, nonatomic) int minuteInterval;	// G=0x3078c815; S=0x30647649; @synthesize=_minuteInterval
@property(retain, nonatomic) NSTimeZone *timeZone;	// G=0x3078c845; S=0x3078d6e1; @synthesize=_timeZone
- (id)initWithFrame:(CGRect)frame;	// 0x30646585
- (id)_ampmCellFont;	// 0x3064a0a1
- (int)_columnForElement:(unsigned)element;	// 0x30647c6d
- (id)_createAccessoryViewWithText:(id)text andFont:(id)font;	// 0x3078c875
- (id)_createLabelWithString:(id)string above:(id)above;	// 0x3078dde1
- (id)_datePickerCellFont;	// 0x30649931
- (void)_datePickerReset:(id)reset;	// 0x3078d9cd
- (int)_dayForRow:(int)row;	// 0x30660511
- (void)_doneLoadingDateOrTime;	// 0x3065f2c9
- (unsigned)_elementForColumn:(int)column;	// 0x306498ad
- (void)_ensureTodayIsSet;	// 0x30655e09
- (int)_eraForRow:(int)row;	// 0x3066073d
- (id)_fadeLabel:(id)label toNewLabelWithString:(id)string ifAnimated:(BOOL)animated;	// 0x3078da61
// declared property getter: - (BOOL)_hasCustomCalendar;	// 0x3078c7c5
- (int)_hourForRow:(int)row;	// 0x3064f999
- (id)_hoursString;	// 0x3078da29
- (id)_hrMinFont;	// 0x3078cb7d
- (int)_incrementForElement:(unsigned)element;	// 0x3065593d
- (int)_incrementedAmountForValue:(int)value withElement:(unsigned)element;	// 0x306558c5
- (void)_loadDateAnimated:(BOOL)animated;	// 0x306478c9
- (void)_loadDesignatorStrings;	// 0x30649779
- (CFDateFormatterRef)_localDateFormatter;	// 0x30655ef1
- (int)_minuteForRow:(int)row;	// 0x3065e4c9
- (id)_minutesString;	// 0x3078da45
- (int)_monthForRow:(int)row;	// 0x30660319
- (int)_numberOfDaysInDate:(id)date;	// 0x30647411
- (int)_numberOfDaysInWeek;	// 0x3078d191
- (BOOL)_scrollingAnyColumnExcept:(int)except;	// 0x3078ca6d
- (int)_secondForRow:(int)row;	// 0x3078cabd
- (int)_selectedHourForColumn:(int)column;	// 0x3078cb01
- (int)_selectedMinuteForColumn:(int)column;	// 0x3078cad5
- (void)_setDateComponent:(id)component withElement:(unsigned)element;	// 0x3065e1bd
- (void)_setupCell:(id)cell atRow:(int)row inColumn:(int)column withElementFlag:(unsigned)elementFlag;	// 0x30653ecd
- (BOOL)_shouldEnableDayForRow:(int)row column:(int)column;	// 0x30660539
- (BOOL)_shouldEnableHourForValue:(int)value column:(int)column;	// 0x30655c2d
- (BOOL)_shouldEnableMinuteForValue:(int)value column:(int)column;	// 0x30655979
- (BOOL)_shouldEnableMonthForRow:(int)row column:(int)column;	// 0x30660339
- (BOOL)_shouldEnableWeekMonthDayForCell:(id)cell;	// 0x306563f1
- (BOOL)_shouldEnableYearForRow:(int)row;	// 0x3066088d
- (BOOL)_showingDate;	// 0x3078c7ad
- (id)_sizedPickerCellFont;	// 0x306499d9
- (float)_tableRowHeight;	// 0x3078c7a5
- (id)_todayTextColor;	// 0x306604ad
- (void)_updateBitsForDate:(id)date andReload:(BOOL)reload animateIfNeeded:(BOOL)needed;	// 0x306470c1
- (BOOL)_updateDateOrTime;	// 0x3065de25
- (void)_updateEnabledCells:(BOOL)cells;	// 0x3065aae5
- (void)_updateLabels:(BOOL)labels;	// 0x3064f9dd
- (void)_updateReferenceBits;	// 0x3064734d
- (void)_updateRowInColumn:(int)column toValue:(int)value withRepeatingAmount:(int)repeatingAmount element:(unsigned)element animated:(BOOL)animated;	// 0x3064f61d
- (int)_yearForRow:(int)row;	// 0x306607e5
// declared property getter: - (id)calendar;	// 0x30647401
// declared property getter: - (double)countDownDuration;	// 0x3078c9c9
// declared property getter: - (id)date;	// 0x3065e501
// converted property getter: - (id)dateComponents;	// 0x306473cd
// declared property getter: - (int)datePickerMode;	// 0x3078c865
- (void)dealloc;	// 0x30662fd9
// declared property getter: - (id)delegateOfDatePicker;	// 0x3078c7f5
- (int)hour;	// 0x3078cc11
- (void)layoutSubviews;	// 0x30647e01
// declared property getter: - (id)locale;	// 0x3078c855
// declared property getter: - (id)maximumDate;	// 0x3078c825
// declared property getter: - (id)minimumDate;	// 0x3078c835
- (int)minute;	// 0x3078cbed
// declared property getter: - (int)minuteInterval;	// 0x3078c815
- (int)numberOfComponentsInPickerView:(id)pickerView;	// 0x306477e9
- (id)pickerImageNamePrefix;	// 0x30648dd9
- (void)pickerView:(id)view didSelectRow:(int)row inComponent:(int)component;	// 0x3065dd8d
- (int)pickerView:(id)view numberOfRowsInComponent:(int)component;	// 0x3064e459
- (float)pickerView:(id)view rowHeightForComponent:(int)component;	// 0x3064c599
- (id)pickerView:(id)view viewForRow:(int)row forComponent:(int)component reusingView:(id)view4;	// 0x30653a0d
- (float)pickerView:(id)view widthForComponent:(int)component;	// 0x306491d9
- (void)pickerViewLoaded:(id)loaded;	// 0x3064e4f1
- (void)scrollerDidScroll:(id)scroller;	// 0x3064edd5
- (void)scrollerWillStartDragging:(id)scroller;	// 0x3065aacd
- (int)second;	// 0x3078cbc9
// declared property setter: - (void)setCalendar:(id)calendar;	// 0x3078d789
// declared property setter: - (void)setCountDownDuration:(double)duration;	// 0x3078dc41
// declared property setter: - (void)setDate:(id)date;	// 0x3065ffd5
- (void)setDate:(id)date animated:(BOOL)animated;	// 0x3064787d
// converted property setter: - (void)setDateComponents:(id)components;	// 0x3078ca31
// declared property setter: - (void)setDatePickerMode:(int)mode;	// 0x30647491
- (void)setDelegate:(id)delegate;	// 0x3064744d
// declared property setter: - (void)setDelegateOfDatePicker:(id)datePicker;	// 0x3078c805
- (void)setFrame:(CGRect)frame;	// 0x30646841
- (void)setHighlightsToday:(BOOL)today;	// 0x3078c7d9
// declared property setter: - (void)setLocale:(id)locale;	// 0x3078cdc5
// declared property setter: - (void)setMaximumDate:(id)date;	// 0x3078cc35
// declared property setter: - (void)setMinimumDate:(id)date;	// 0x3078ccfd
// declared property setter: - (void)setMinuteInterval:(int)interval;	// 0x30647649
- (void)setStaggerTimeIntervals:(BOOL)intervals;	// 0x3078cb2d
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x3078d6e1
- (id)shadowColor;	// 0x3078c9a9
// declared property getter: - (id)timeZone;	// 0x3078c845
@end

