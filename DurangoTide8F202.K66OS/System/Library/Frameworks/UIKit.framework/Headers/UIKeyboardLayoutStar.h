/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardLayout.h"

@class NSMutableSet, NSTimer, UISwipeGestureRecognizer, UIKBKey, NSMutableDictionary, UIKBKeyboard, UIKBKeyplane, UIPinchGestureRecognizer, NSMutableArray, NSString, UIKBKeyplaneView;
@protocol UIKeyboardRivenCenterView, UIKeyboardRivenTransitionView;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout {
@private
	UIKBKeyboard *_keyboard;	// 64 = 0x40
	UIKBKeyplane *_keyplane;	// 68 = 0x44
	NSString *_keyboardName;	// 72 = 0x48
	NSString *_keyplaneName;	// 76 = 0x4c
	int _appearance;	// 80 = 0x50
	UIKBKey *_activeKey;	// 84 = 0x54
	UIKBKeyplaneView *_keyplaneView;	// 88 = 0x58
	UIView *_savedKeyplaneView;	// 92 = 0x5c
	UIView *_animationKeyplaneBackground;	// 96 = 0x60
	int _keyboardType;	// 100 = 0x64
	UIView *_animationBackgroundView;	// 104 = 0x68
	UIView *_animationFromView;	// 108 = 0x6c
	UIView *_animationToView;	// 112 = 0x70
	CGPoint _initialDragPoint;	// 116 = 0x74
	CGPoint _dragPrevPoint;	// 124 = 0x7c
	float _dragValues[4];	// 132 = 0x84
	float _dragVelocity;	// 148 = 0x94
	double _prevTouchUpTime;	// 152 = 0x98
	double _prevTouchDownTime;	// 160 = 0xa0
	int _prevUpActions;	// 168 = 0xa8
	NSMutableDictionary *_keyboards;	// 172 = 0xac
	NSMutableDictionary *_states;	// 176 = 0xb0
	NSMutableDictionary *_allKeys;	// 180 = 0xb4
	NSMutableDictionary *_renderedKeys;	// 184 = 0xb8
	NSMutableDictionary *_variantKeys;	// 188 = 0xbc
	NSMutableDictionary *_allKeyplaneViews;	// 192 = 0xc0
	NSMutableSet *_allKeyplaneKeycaps;	// 196 = 0xc4
	NSMutableSet *_variantKeyTokens;	// 200 = 0xc8
	NSMutableSet *_validInputStrings;	// 204 = 0xcc
	NSString *_localizedInputKey;	// 208 = 0xd0
	NSMutableArray *_keyIndexMap;	// 212 = 0xd4
	NSMutableDictionary *_activatedKeys;	// 216 = 0xd8
	CFDictionaryRef _extendedTouchInfoMap;	// 220 = 0xdc
	NSTimer *_activatedTimer;	// 224 = 0xe0
	int _preferredTrackingChangeCount;	// 228 = 0xe4
	int _shiftTrackingChangeCount;	// 232 = 0xe8
	NSMutableSet *_accentInfo;	// 236 = 0xec
	NSMutableSet *_hasAccents;	// 240 = 0xf0
	id _spaceTarget;	// 244 = 0xf4
	SEL _spaceAction;	// 248 = 0xf8
	SEL _spaceLongAction;	// 252 = 0xfc
	id _returnTarget;	// 256 = 0x100
	SEL _returnAction;	// 260 = 0x104
	SEL _returnLongAction;	// 264 = 0x108
	id _deleteTarget;	// 268 = 0x10c
	SEL _deleteAction;	// 272 = 0x110
	SEL _deleteLongAction;	// 276 = 0x114
	BOOL _secureTextEntry;	// 280 = 0x118
	BOOL _shift;	// 281 = 0x119
	BOOL _autoshift;	// 282 = 0x11a
	BOOL _settingShift;	// 283 = 0x11b
	BOOL _didLongPress;	// 284 = 0x11c
	BOOL _dragged;	// 285 = 0x11d
	BOOL _dragChangedKey;	// 286 = 0x11e
	BOOL _touchDownInMoreKey;	// 287 = 0x11f
	BOOL _touchDownInShiftKey;	// 288 = 0x120
	BOOL _wasShifted;	// 289 = 0x121
	BOOL _dragDismissStarted;	// 290 = 0x122
	BOOL _currentInputModeVariantsOnly;	// 291 = 0x123
	BOOL _previousTouchInMore;	// 292 = 0x124
	BOOL _keyplaneDidTransition;	// 293 = 0x125
	BOOL _supportsSplit;	// 294 = 0x126
	BOOL _shiftLockReady;	// 295 = 0x127
	double _shiftLockFirstTapTime;	// 296 = 0x128
	UISwipeGestureRecognizer *_rightSwipeRecognizer;	// 304 = 0x130
	UISwipeGestureRecognizer *_leftSwipeRecognizer;	// 308 = 0x134
	UISwipeGestureRecognizer *_upSwipeRecognizer;	// 312 = 0x138
	UIPinchGestureRecognizer *_pinchRecognizer;	// 316 = 0x13c
	UIView<UIKeyboardRivenTransitionView> *_transitionView;	// 320 = 0x140
	UIView<UIKeyboardRivenCenterView> *_centerView;	// 324 = 0x144
	float _initialSplitProgress;	// 328 = 0x148
	float _initialPinchSeparation;	// 332 = 0x14c
	float _lastPinchSeparation;	// 336 = 0x150
	float _initialScale;	// 340 = 0x154
	BOOL _pinchDetected;	// 344 = 0x158
	BOOL _preRotateShift;	// 345 = 0x159
	NSString *_preRotateKeyplaneName;	// 348 = 0x15c
	CGPoint _keyPeripheralInset;	// 352 = 0x160
	int _lastFlickDirection;	// 360 = 0x168
	UIView *_flickPopupView;	// 364 = 0x16c
	NSMutableDictionary *_compositeImages;	// 368 = 0x170
	NSTimer *_flickPopuptimer;	// 372 = 0x174
	id _touchInfo;	// 376 = 0x178
	BOOL _popupViewIsShown;	// 380 = 0x17c
	UIView *_dimKeyboardImageView;	// 384 = 0x180
	BOOL _keyboardImageViewIsDim;	// 388 = 0x184
}
@property(retain, nonatomic) UIKBKey *activeKey;	// G=0x306cdc9d; S=0x305959d5; @synthesize=_activeKey
@property(assign, nonatomic) BOOL autoShift;	// G=0x307c7cf9; S=0x307c7d09; @synthesize=_autoshift
@property(assign, nonatomic) BOOL didLongPress;	// G=0x307c7cd9; S=0x307c7ce9; @synthesize=_didLongPress
@property(readonly, assign, nonatomic) UIKBKeyboard *keyboard;	// G=0x307c7d59; @synthesize=_keyboard
@property(copy, nonatomic) NSString *keyboardName;	// G=0x307c7d39; S=0x307c8f85; @synthesize=_keyboardName
@property(readonly, assign, nonatomic) UIKBKeyplane *keyplane;	// G=0x307c7d49; @synthesize=_keyplane
@property(copy, nonatomic) NSString *keyplaneName;	// G=0x307c7d29; S=0x3059f581; @synthesize=_keyplaneName
@property(readonly, assign, nonatomic) NSString *localizedInputMode;	// G=0x3059f2b5; 
@property(readonly, assign, nonatomic, getter=isRotating) BOOL rotating;	// G=0x305b84c5; 
@property(assign, nonatomic) BOOL shift;	// G=0x307c7d19; S=0x3059b411; @synthesize=_shift
- (id)initWithFrame:(CGRect)frame;	// 0x3066ef49
- (void)activateCompositeKey:(id)key direction:(int)direction flickString:(id)string popupInfo:(id)info;	// 0x307cd1fd
- (id)activationIndicatorView;	// 0x307ca651
// declared property getter: - (id)activeKey;	// 0x306cdc9d
- (id)activeTouchForKey:(id)key;	// 0x307ca54d
- (void)addKeyToActivatedSet:(id)activatedSet;	// 0x3067de01
- (void)addPinchRecognizerAfterDelay:(float)delay;	// 0x307c8879
- (CGPoint)applyError:(CGPoint)error toKey:(id)key;	// 0x307ccd11
// declared property getter: - (BOOL)autoShift;	// 0x307c7cf9
- (id)baseKeyForString:(id)string;	// 0x307ca01d
- (id)cacheIdentifierForKeyplaneNamed:(id)keyplaneNamed withVisualStyle:(id)visualStyle;	// 0x3067085d
- (id)cacheIdentifierForState:(int)state ofKey:(id)key;	// 0x3059c0a9
- (BOOL)canProduceString:(id)string;	// 0x307c9591
- (void)cancelPeriodicProcessActivatedSet;	// 0x30595999
- (id)candidateList;	// 0x307c891d
- (void)changeToKeyplane:(id)keyplane;	// 0x307c8005
- (void)clearAllTouchInfo;	// 0x30595ae1
- (void)clearInfoForTouch:(id)touch;	// 0x30682005
- (id)compositeImageForKey:(id)key;	// 0x307c7e4d
- (void)confirmAction;	// 0x307c88c5
- (void)deactivateActiveKeys;	// 0x3059561d
- (void)deactivateAllInActivatedSet;	// 0x30595935
- (void)dealloc;	// 0x307c99fd
- (void)deleteAction;	// 0x307c894d
- (void)didClearInput;	// 0x306847f9
// declared property getter: - (BOOL)didLongPress;	// 0x307c7cd9
- (void)didRotate;	// 0x307c80d9
- (int)displayTypeHintForKeyplaneSwitchKey:(id)keyplaneSwitchKey;	// 0x307c89b5
- (int)displayTypeHintForMoreKey;	// 0x305b72c5
- (int)displayTypeHintForShiftKey;	// 0x305b7209
- (BOOL)doesKeyCharging;	// 0x3059722d
- (unsigned)downActionFlagsForKey:(id)key;	// 0x30676659
- (void)downActionShiftWithKey:(id)key;	// 0x307c8d89
- (id)findKanaKeyPlaneSwitchKeyOnKeyPlane:(id)plane;	// 0x306701d1
- (id)findMoreKeyOnKeyPlane:(id)plane onLeftMostSide:(BOOL)side;	// 0x305a0a81
- (void)finishSplit;	// 0x307c849d
- (CGRect)frameForKeyWithRepresentedString:(id)representedString;	// 0x307cbbe9
- (CGRect)frameForLastKeyWithRepresentedString:(id)representedString;	// 0x307cbad9
- (id)generateInfoForTouch:(id)touch;	// 0x30675f99
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x307c9215
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x307c928d
- (id)getFlickCompositeImageForKey:(id)key direction:(int)direction rect:(CGRect)rect;	// 0x307cb3a5
- (id)getPopupBackgroundImageForKey:(id)key direction:(int)direction popupInfo:(id)info rect:(CGRect)rect;	// 0x307cb329
- (void)handleFlick:(id)flick;	// 0x307cb901
- (void)handlePopupView:(id)view;	// 0x307cb845
- (float)hitBuffer;	// 0x30674a09
- (id)infoForTouch:(id)touch;	// 0x3067d991
- (void)installGestureRecognizers;	// 0x3066f3d9
- (BOOL)isLongPressedKey:(id)key;	// 0x3067e3a9
// declared property getter: - (BOOL)isRotating;	// 0x305b84c5
- (BOOL)isShiftKeyBeingHeld;	// 0x3059b1e1
- (BOOL)isShiftKeyPlaneChooser;	// 0x30595e11
- (BOOL)keyHasAccentedVariants:(id)variants;	// 0x307c9cd1
- (id)keyHitTest:(CGPoint)test;	// 0x3067571d
- (id)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch;	// 0x30675489
- (id)keyHitTestClosestToPoint:(CGPoint)point;	// 0x3068287d
- (id)keyHitTestContainingPoint:(CGPoint)point;	// 0x30675e01
- (id)keyHitTestContainingPoint:(CGPoint)point;	// 0x307ca44d
- (id)keyHitTestWithoutCharging:(CGPoint)charging;	// 0x30675c85
- (id)keyWithRepresentedString:(id)representedString;	// 0x307cbe35
// declared property getter: - (id)keyboard;	// 0x307c7d59
// declared property getter: - (id)keyboardName;	// 0x307c7d39
- (BOOL)keyboardWillSplit;	// 0x307c7b99
- (id)keyboardWithName:(id)name;	// 0x3059f095
// declared property getter: - (id)keyplane;	// 0x307c7d49
- (id)keyplaneForKey:(id)key;	// 0x307c80b1
// declared property getter: - (id)keyplaneName;	// 0x307c7d29
// declared property getter: - (id)localizedInputMode;	// 0x3059f2b5
- (void)longPressAction;	// 0x307ccac1
- (void)merge;	// 0x307ca361
- (void)nextCandidatesAction;	// 0x307c88f1
- (id)overlayCharacterImageForKey:(id)key direction:(int)direction rect:(CGRect)rect flickString:(id)string popupInfo:(id)info;	// 0x307cb421
- (BOOL)performReturnAction;	// 0x307c8845
- (void)periodicProcessActivatedSet:(id)set;	// 0x306821f5
- (void)pinchDetected:(id)detected;	// 0x307cac61
- (void)pinchSeparationUntouch;	// 0x307c8339
- (void)pinchSeparationUpdate:(float)update;	// 0x307c8671
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x30674d11
- (id)popupKeyViews;	// 0x307c9475
- (void)removeFromSuperview;	// 0x307c8a41
- (void)removeKeyFromActivatedSet:(id)activatedSet;	// 0x3059c029
- (void)restoreDefaultsForAllKeys;	// 0x305b8605
- (void)restoreDefaultsForKey:(id)key;	// 0x305b8651
- (void)schedulePeriodicProcessActivatedSet;	// 0x3067df31
- (id)scriptingInfoWithChildren;	// 0x307cb055
- (void)sendStringAction:(id)action forKey:(id)key;	// 0x3067e1ad
- (void)setAction:(SEL)action forKey:(id)key;	// 0x307c7c31
// declared property setter: - (void)setActiveKey:(id)key;	// 0x305959d5
// declared property setter: - (void)setAutoShift:(BOOL)shift;	// 0x307c7d09
- (void)setAutoshift:(BOOL)autoshift;	// 0x3059c4c5
- (void)setCompositeImage:(id)image forKey:(id)key;	// 0x307c7e6d
- (void)setCurrencyKeysForCurrentLocale:(id)currentLocale;	// 0x30670a75
// declared property setter: - (void)setDidLongPress:(BOOL)longPress;	// 0x307c7ce9
- (void)setKeyForTouchInfo:(id)touchInfo key:(id)key;	// 0x307c7fed
- (void)setKeyViewFrame:(CGRect)frame forKey:(id)key;	// 0x305a0c59
- (void)setKeyboardAppearance:(int)appearance;	// 0x306703f5
- (void)setKeyboardDim:(BOOL)dim;	// 0x307c8fd9
// declared property setter: - (void)setKeyboardName:(id)name;	// 0x307c8f85
- (void)setKeyboardName:(id)name appearance:(int)appearance;	// 0x3059eea1
// declared property setter: - (void)setKeyplaneName:(id)name;	// 0x3059f581
- (void)setLabel:(id)label forKey:(id)key;	// 0x305b8729
- (void)setLongPressAction:(SEL)action forKey:(id)key;	// 0x307c7c85
- (void)setReturnKeyEnabled:(BOOL)enabled withDisplayName:(id)displayName withType:(int)type;	// 0x30597db1
// declared property setter: - (void)setShift:(BOOL)shift;	// 0x3059b411
- (void)setState:(int)state forKey:(id)key;	// 0x3059b819
- (void)setTarget:(id)target forKey:(id)key;	// 0x307c7bdd
// declared property getter: - (BOOL)shift;	// 0x307c7d19
- (BOOL)shouldRetestKey:(id)key withKeyplane:(id)keyplane;	// 0x3067d9c9
- (BOOL)shouldShowIndicator;	// 0x307c9345
- (void)showFlickView:(int)view withKey:(id)key flickString:(id)string;	// 0x307c7ea5
- (void)showKeyboardType:(int)type appearance:(int)appearance orientation:(id)orientation withShift:(BOOL)shift;	// 0x3059e13d
- (void)showPopupVariantsForKey:(id)key;	// 0x307cc1cd
- (void)showPopupView:(int)view withKey:(id)key popupInfo:(id)info force:(BOOL)force;	// 0x307c7de9
- (id)simulateTouchForCharacter:(id)character errorVector:(CGPoint)vector shouldTypeVariants:(BOOL)variants baseKeyForVariants:(BOOL)variants4;	// 0x307c9e05
- (id)spaceKey;	// 0x307cbf1d
- (void)split;	// 0x307c8585
- (int)stateForKey:(id)key;	// 0x3059b705
- (unsigned)stateForShiftKey:(id)shiftKey;	// 0x3059b735
- (void)swipeDetected:(id)detected;	// 0x307caf81
- (void)touchCancelled:(id)cancelled;	// 0x307cc045
- (void)touchDown:(id)down;	// 0x30675075
- (void)touchDownWithKey:(id)key atPoint:(CGPoint)point;	// 0x30676091
- (void)touchDragged:(id)dragged;	// 0x306ccb75
- (id)touchForKey:(id)key;	// 0x306da2fd
- (void)touchUp:(id)up;	// 0x3067c94d
- (void)uninstallGestureRecognizers;	// 0x307c8765
- (unsigned)upActionFlagsForKey:(id)key;	// 0x3067da8d
- (void)upActionShift;	// 0x307c8231
- (void)updateBackground:(id)background;	// 0x307c8b19
- (void)updateKeyCentroids;	// 0x305a1afd
- (void)updateKeyboardForKeyplane:(id)keyplane;	// 0x30670775
- (void)updateKeys;	// 0x307c97b1
- (void)updateLatinAccentsKey;	// 0x305a1101
- (void)updateLocalizedKeys:(id)keys;	// 0x305a1385
- (void)updateMoreAndInternationalKeys;	// 0x305a07c9
- (void)updateShiftKeyState;	// 0x3059b4e1
- (BOOL)usesAutoShift;	// 0x3059b259
- (id)visualStyleForRivenStyle:(unsigned)rivenStyle;	// 0x307c7b5d
- (void)willRotate;	// 0x307c81e9
@end

