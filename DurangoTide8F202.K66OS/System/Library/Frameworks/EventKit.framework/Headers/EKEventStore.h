/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <NSObject.h> // Unknown library

@class NSString, NSMutableDictionary, EKCalendar, NSMutableArray, NSTimeZone, NSArray;

@interface EKEventStore : NSObject {
@private
	id _database;	// 4 = 0x4
	NSMutableDictionary *_calendars;	// 8 = 0x8
	NSMutableDictionary *_sources;	// 12 = 0xc
	NSMutableArray *_observers;	// 16 = 0x10
	unsigned _flags;	// 20 = 0x14
	NSTimeZone *_timeZone;	// 24 = 0x18
}
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x31648d39; 
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x31647f85; 
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x3166fef9; 
@property(retain) NSTimeZone *timeZone;	// G=0x31641619; S=0x3164141d; converted property
+ (id)storeWithOptions:(unsigned long)options path:(id)path;	// 0x3166f455
- (id)init;	// 0x31640f65
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x31640f7d
- (void)_databaseChangedExternally;	// 0x3166fb71
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x31670099
- (void)_notifyStoreChanged;	// 0x3166f405
- (void)_save;	// 0x3166f43d
- (void)_saveWithNotify:(BOOL)notify;	// 0x3166f4a5
- (id)calendarWithID:(id)anId;	// 0x31644409
// declared property getter: - (id)calendars;	// 0x31648d39
- (void)daemonRestarted;	// 0x3166f6c1
- (void)dealloc;	// 0x3166f965
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x31647f85
- (id)defaultCalendarForNewTasks;	// 0x31670cd1
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x3166efd1
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x3164be61
// declared property getter: - (id)eventStoreIdentifier;	// 0x3166fef9
- (id)eventWithIdentifier:(id)identifier;	// 0x3166ffcd
- (id)eventWithUniqueId:(id)uniqueId;	// 0x316704c1
- (id)eventsMatchingPredicate:(id)predicate;	// 0x3164232d
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x316708f5
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x31670aa9
- (BOOL)markEventRead:(id)read error:(id *)error;	// 0x316706a5
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x31641711
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventIdentifier:(id)identifier calendars:(id)calendars;	// 0x316707b5
- (int)readWriteCalendarCount;	// 0x31648c79
- (id)readWriteCalendars;	// 0x3166f5c5
- (void)refreshAccountDataIfNecessary;	// 0x31670d41
- (void)refreshAccountListIfNecessary;	// 0x31670d29
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x3166ff39
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x3166f19d
- (BOOL)saveCalendar:(id)calendar deferred:(BOOL)deferred error:(id *)error;	// 0x3166f2b1
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x3166f351
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x3166f22d
- (unsigned)serverPort;	// 0x316428b5
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x31670c91
- (BOOL)setEventParticipationStatus:(id)status status:(int)status2 applyToAll:(BOOL)all error:(id *)error;	// 0x316705a9
// converted property setter: - (void)setTimeZone:(id)zone;	// 0x3164141d
- (id)sourceWithID:(id)anId;	// 0x3164498d
// converted property getter: - (id)timeZone;	// 0x31641619
@end

