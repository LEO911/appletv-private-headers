/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVAssetTrackInspector.h"
#import "AVFoundation-Structs.h"

@class AVAsset;

@interface AVPlaybackItemTrackInspector : AVAssetTrackInspector {
	OpaqueFigPlaybackItem *_playbackItem;	// 4 = 0x4
	int _trackID;	// 8 = 0x8
	unsigned _mediaType;	// 12 = 0xc
	AVAsset *_asset;	// 16 = 0x10
}
@property(readonly, retain) AVAsset *asset;	// G=0x3041c211; converted property
@property(readonly, assign) int trackID;	// G=0x3041c221; converted property
- (id)init;	// 0x3041c381
- (XXStruct_pwHToB)_CMTimeForProperty:(CFStringRef)property;	// 0x3041cc61
- (long)_SInt32ForProperty:(CFStringRef)property;	// 0x3041cba9
- (unsigned char)_booleanForProperty:(CFStringRef)property;	// 0x3041ccdd
- (float)_floatForProperty:(CFStringRef)property;	// 0x3041cc05
- (id)_initWithAsset:(id)asset trackID:(int)anId;	// 0x3041c35d
- (id)_initWithAsset:(id)asset trackID:(int)anId trackIndex:(long)index;	// 0x3041d44d
- (id)_initWithAsset:(id)asset trackIndex:(long)index;	// 0x3041c33d
- (long long)_longLongForProperty:(CFStringRef)property;	// 0x3041c961
- (OpaqueFigPlaybackItem *)_playbackItem;	// 0x3041c231
- (id)_stringForProperty:(CFStringRef)property;	// 0x3041d971
// converted property getter: - (id)asset;	// 0x3041c211
- (id)copyWithZone:(NSZone *)zone;	// 0x3041c329
- (void)dealloc;	// 0x3041ca11
- (float)estimatedDataRate;	// 0x3041c2d5
- (id)extendedLanguageTag;	// 0x3041c259
- (void)finalize;	// 0x3041c9d1
- (id)formatDescriptions;	// 0x3041cd3d
- (unsigned)hash;	// 0x3041d2ad
- (BOOL)isEnabled;	// 0x3041c305
- (BOOL)isEqual:(id)equal;	// 0x3041d18d
- (BOOL)isSelfContained;	// 0x3041c241
- (id)languageCode;	// 0x3041c255
- (id)mediaType;	// 0x3041d9cd
- (CGSize)naturalSize;	// 0x3041da25
- (int)naturalTimeScale;	// 0x3041c24d
- (float)nominalFrameRate;	// 0x3041c2b5
- (CGAffineTransform)preferredTransform;	// 0x3041cf71
- (float)preferredVolume;	// 0x3041c25d
- (XXStruct_pwHToB)samplePresentationTimeForTrackTime:(XXStruct_pwHToB)trackTime;	// 0x3041c271
- (id)segmentForTrackTime:(XXStruct_pwHToB)trackTime;	// 0x3041c265
- (id)segments;	// 0x3041c295
- (XXStruct_yD8eWC)timeRange;	// 0x3041cdc1
- (long long)totalSampleDataLength;	// 0x3041c245
// converted property getter: - (int)trackID;	// 0x3041c221
@end

