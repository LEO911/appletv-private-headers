/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"
#import "NSNetServiceDelegate.h"

@class MCMediaControlClientRemote, MPAVItem, NSNetService, NSString, NSData, NSDictionary;

@interface MPAirPlayVideoService : NSObject <NSNetServiceDelegate> {
@private
	int _resolutionState;	// 4 = 0x4
	NSNetService *_netService;	// 8 = 0x8
	DNSServiceRef_tRef _dnsService;	// 12 = 0xc
	NSString *_ipAddress;	// 16 = 0x10
	MCMediaControlClientRemote *_mediaControlClient;	// 20 = 0x14
	MPAVItem *_item;	// 24 = 0x18
	void *_context;	// 28 = 0x1c
	NSData *_playInfoData;	// 32 = 0x20
	NSDictionary *_cachedPlaybackInfo;	// 36 = 0x24
	double _lastFetchedPlaybackInfoTimeInterval;	// 40 = 0x28
	double _cachedCurrentPlaybackTime;	// 48 = 0x30
	float _cachedVolume;	// 56 = 0x38
	unsigned _capabilities;	// 60 = 0x3c
	BOOL _didResolveOrFailToResolve;	// 64 = 0x40
	BOOL _hasVolumeControl;	// 65 = 0x41
	BOOL _isPlaying;	// 66 = 0x42
	BOOL _playbackTimeIsValid;	// 67 = 0x43
	BOOL _preparingToPlay;	// 68 = 0x44
	BOOL _waitingForPlaybackToBegin;	// 69 = 0x45
	BOOL _waitingForPasswordEntry;	// 70 = 0x46
	unsigned _bufferingState;	// 72 = 0x48
	unsigned _playbackState;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL _didResolveOrFailToResolve;	// G=0x31ddfc75; @synthesize
@property(readonly, assign) unsigned bufferingState;	// G=0x31ddfc11; converted property
@property(readonly, assign) unsigned capabilities;	// G=0x31ddfc55; converted property
@property(assign, nonatomic) void *context;	// G=0x31ddfc85; S=0x31ddfc95; @synthesize=_context
@property(assign) double currentPlaybackTime;	// G=0x31de15e9; S=0x31de0621; converted property
@property(readonly, assign) BOOL hasVolumeControl;	// G=0x31ddfc31; converted property
@property(readonly, retain) NSString *ipAddress;	// G=0x31ddfbe1; converted property
@property(readonly, assign, nonatomic) BOOL isAvailable;	// G=0x31de0ba9; 
@property(retain) MPAVItem *item;	// G=0x31ddfc01; S=0x31de0775; converted property
@property(readonly, assign, nonatomic) NSNetService *netService;	// G=0x31ddfc65; @synthesize=_netService
@property(readonly, assign) unsigned playbackState;	// G=0x31ddfc21; converted property
@property(readonly, assign) int resolutionState;	// G=0x31ddfbf1; converted property
@property(assign) float volume;	// G=0x31de04f9; S=0x31de04cd; converted property
+ (void)_beginBackgroundNetworkAssertion;	// 0x31de2325
+ (void)_endBackgroundNetworkAssertion;	// 0x31de22c9
- (void)_cancelResolve;	// 0x31de0df5
- (id)_currentPlaybackInfo;	// 0x31de0241
// declared property getter: - (BOOL)_didResolveOrFailToResolve;	// 0x31ddfc75
- (id)_initWithNSNetService:(id)nsnetService;	// 0x31de0ccd
- (void)_playRemoteWithParams:(id)params password:(id)password completionHandler:(id)handler;	// 0x31de0001
- (void)_playWithLocalFilePath:(id)localFilePath password:(id)password startPosition:(float)position playInfo:(id)info completionHandler:(id)handler;	// 0x31de0109
- (void)_resolveWithTimeout:(double)timeout;	// 0x31de1fc9
- (void)_sendPICRequestData:(id)data password:(id)password responseHandler:(id)handler;	// 0x31ddfef1
- (void)_setPlaybackState:(unsigned)state;	// 0x31ddfdfd
- (void)_updateForPlaybackEnding;	// 0x31de0d45
- (void)_updateForPlaybackStarting;	// 0x31ddfdc9
// converted property getter: - (unsigned)bufferingState;	// 0x31ddfc11
- (BOOL)canDisplayItem:(id)item;	// 0x31de0b89
// converted property getter: - (unsigned)capabilities;	// 0x31ddfc55
// declared property getter: - (void *)context;	// 0x31ddfc85
- (id)currentEstimatedPlaybackDate;	// 0x31de05c9
- (id)currentPlaybackDate;	// 0x31de05f5
// converted property getter: - (double)currentPlaybackTime;	// 0x31de15e9
- (void)dealloc;	// 0x31de0e51
- (double)durationIfAvailable;	// 0x31de056d
// converted property getter: - (BOOL)hasVolumeControl;	// 0x31ddfc31
- (unsigned)hash;	// 0x31de0c81
// converted property getter: - (id)ipAddress;	// 0x31ddfbe1
// declared property getter: - (BOOL)isAvailable;	// 0x31de0ba9
- (BOOL)isEqual:(id)equal;	// 0x31de0bf1
// converted property getter: - (id)item;	// 0x31ddfc01
- (id)name;	// 0x31de0bd1
// declared property getter: - (id)netService;	// 0x31ddfc65
- (BOOL)playWithCompletionHandler:(id)completionHandler;	// 0x31de12c5
- (double)playableDuration;	// 0x31de1955
// converted property getter: - (unsigned)playbackState;	// 0x31ddfc21
- (BOOL)prepareToDisplayItem:(id)displayItem completionHandler:(id)handler;	// 0x31de0a09
// converted property getter: - (int)resolutionState;	// 0x31ddfbf1
- (void)sendPICRequestData:(id)data responseHandler:(id)handler;	// 0x31de1281
- (void)sendPlayInfoData:(id)data;	// 0x31de0495
// declared property setter: - (void)setContext:(void *)context;	// 0x31ddfc95
// converted property setter: - (void)setCurrentPlaybackTime:(double)time;	// 0x31de0621
// converted property setter: - (void)setItem:(id)item;	// 0x31de0775
- (BOOL)setRate:(float)rate;	// 0x31de0675
// converted property setter: - (void)setVolume:(float)volume;	// 0x31de04cd
- (void)stop;	// 0x31de06ed
- (double)timeOfPlayableEnd;	// 0x31de17f9
- (double)timeOfPlayableStart;	// 0x31de18d1
- (double)timeOfSeekableEnd;	// 0x31de169d
- (double)timeOfSeekableStart;	// 0x31de1721
// converted property getter: - (float)volume;	// 0x31de04f9
@end

