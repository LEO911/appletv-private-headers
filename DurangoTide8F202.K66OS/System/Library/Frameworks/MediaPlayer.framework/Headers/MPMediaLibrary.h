/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import <NSObject.h> // Unknown library

@class NSDate;

@interface MPMediaLibrary : NSObject <NSCoding> {
	MPMediaLibraryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaLibraryInternal _internal;	// G=0x31db9869; S=0x31db9885; @synthesize
@property(assign, getter=isFilteringDisabled) BOOL filteringDisabled;	// G=0x31db9801; S=0x31db9819; converted property
@property(readonly, assign, nonatomic) NSDate *lastModifiedDate;	// G=0x31dbb5e1; 
+ (id)_libraryDataProviders;	// 0x31db9c19
+ (id)_libraryForDataProvider:(id)dataProvider;	// 0x31dbc091
+ (id)_mediaLibraries;	// 0x31db9c8d
+ (void)addLibraryDataProvider:(id)provider;	// 0x31db9b11
+ (id)defaultMediaLibrary;	// 0x31dbbc8d
+ (id)deviceMediaLibrary;	// 0x31dbbb5d
+ (BOOL)isLibraryServerDisabled;	// 0x31db97f5
+ (id)libraryDataProviders;	// 0x31db9be9
+ (id)mediaLibraries;	// 0x31db9c5d
+ (id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x31dbc14d
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x31db9a0d
+ (void)reloadLibraryDataProvider:(id)provider;	// 0x31db9a31
+ (void)removeLibraryDataProvider:(id)provider;	// 0x31db9a55
+ (void)setDefaultMediaLibrary:(id)library;	// 0x31dbbba1
+ (void)setLibraryServerDisabled:(BOOL)disabled;	// 0x31db97f9
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x31db97fd
- (id)init;	// 0x31dbbdb5
- (id)initWithCoder:(id)coder;	// 0x31dbc691
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined mediaType:(int)type queryIsEmptyBlock:(id)block;	// 0x31dbae91
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined queryIsEmptyBlock:(id)block;	// 0x31db9785
- (void)_clearCachedContentData;	// 0x31dbb901
- (void)_clearCachedEntities;	// 0x31dbc879
- (void)_clearPendingDisconnection;	// 0x31db9845
- (id)_collectionsForQueryCriteria:(id)queryCriteria;	// 0x31dbc8e9
- (void)_didReceiveMemoryWarning:(id)warning;	// 0x31dbb635
- (id)_initWithLibraryDataProvider:(id)libraryDataProvider;	// 0x31dbbcb1
// declared property getter: - (MPMediaLibraryInternal)_internal;	// 0x31db9869
- (id)_itemsForQueryCriteria:(id)queryCriteria;	// 0x31dbc9b5
- (unsigned long long)_persistentIDForAssetURL:(id)assetURL;	// 0x31dbc4dd
- (void)_postDataProviderDidChangeITunesIsSyncingToValue:(BOOL)_postDataProvider;	// 0x31dbcbed
- (void)_postDataProviderWillChangeITunesIsSyncingToValue:(BOOL)_postDataProvider;	// 0x31dbcc69
- (void)_postLibraryDidChangeNotificationForSync;	// 0x31dbb821
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;	// 0x31dbb89d
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x31dbb839
- (void)_removeConnectionAssertion:(id)assertion;	// 0x31db9cf9
- (id)addPlaylistWithName:(id)name;	// 0x31dba7b5
- (id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;	// 0x31dba6e1
- (void)beginGeneratingLibraryChangeNotifications;	// 0x31db9759
- (void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;	// 0x31dba381
- (id)connectionAssertionWithIdentifier:(id)identifier;	// 0x31dba28d
- (float)connectionProgress;	// 0x31db97e5
- (void)dealloc;	// 0x31dbbf65
- (id)description;	// 0x31dbbaf1
- (void)disconnect;	// 0x31dba201
- (void)encodeWithCoder:(id)coder;	// 0x31dbb995
- (void)endGeneratingLibraryChangeNotifications;	// 0x31db976d
- (id)errorResolverForMediaItem:(id)mediaItem;	// 0x31ddeaad
- (BOOL)hasAlbums;	// 0x31dbb285
- (BOOL)hasArtists;	// 0x31dbb29d
- (BOOL)hasAudibleAudioBooks;	// 0x31dbad19
- (BOOL)hasAudiobooks;	// 0x31dbaf09
- (BOOL)hasCompilations;	// 0x31dbac21
- (BOOL)hasComposers;	// 0x31dbaff5
- (BOOL)hasGeniusMixes;	// 0x31dbb34d
- (BOOL)hasGenres;	// 0x31dbb08d
- (BOOL)hasITunesUContent;	// 0x31dbaba1
- (BOOL)hasMedia;	// 0x31dbb3f9
- (BOOL)hasMediaOfType:(int)type;	// 0x31dbb509
- (BOOL)hasMovieRentals;	// 0x31dbab29
- (BOOL)hasMovies;	// 0x31dbac99
- (BOOL)hasMusicVideos;	// 0x31dbad91
- (BOOL)hasPlaylists;	// 0x31dbb2b5
- (BOOL)hasPodcasts;	// 0x31dbb0a5
- (BOOL)hasSongs;	// 0x31dbb195
- (BOOL)hasTVShows;	// 0x31dbaaa9
- (BOOL)hasVideoPodcasts;	// 0x31dbaa29
- (BOOL)hasVideos;	// 0x31dbae11
- (unsigned)hash;	// 0x31dbba61
- (void)iTunesSyncPhaseDidFinish:(int)iTunesSyncPhase reason:(int)reason;	// 0x31dbb649
- (void)iTunesSyncPhaseWillStart:(int)iTunesSyncPhase;	// 0x31dbb709
- (BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;	// 0x31dba5d5
- (BOOL)isEqual:(id)equal;	// 0x31dbba85
// converted property getter: - (BOOL)isFilteringDisabled;	// 0x31db9801
- (BOOL)isGeniusEnabled;	// 0x31dba58d
- (BOOL)isSyncing;	// 0x31dba999
- (BOOL)isValidAssetURL:(id)url;	// 0x31dba195
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;	// 0x31dba035
- (id)itemWithPersistentID:(unsigned long long)persistentID;	// 0x31dba975
- (id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;	// 0x31dba8f9
// declared property getter: - (id)lastModifiedDate;	// 0x31dbb5e1
- (id)libraryDataProvider;	// 0x31db9859
- (BOOL)libraryHasBeenModifiedWithToken:(id)token;	// 0x31dbcce5
- (id)modificationToken;	// 0x31dbcdf9
- (id)name;	// 0x31dbb5c1
- (id)pathForAssetURL:(id)assetURL;	// 0x31dba135
- (BOOL)performTransactionWithBlock:(id)block;	// 0x31dba1b5
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;	// 0x31db9f35
- (id)playlistWithPersistentID:(unsigned long long)persistentID;	// 0x31dba7cd
- (id)preferredAudioLanguages;	// 0x31dba549
- (id)preferredSubtitleLanguages;	// 0x31dba505
- (BOOL)removeItems:(id)items;	// 0x31dbcf41
- (BOOL)removePlaylist:(id)playlist;	// 0x31dba681
- (BOOL)requiresAuthentication;	// 0x31dba4bd
// converted property setter: - (void)setFilteringDisabled:(BOOL)disabled;	// 0x31db9819
// declared property setter: - (void)set_internal:(MPMediaLibraryInternal)internal;	// 0x31db9885
- (unsigned long long)syncGenerationID;	// 0x31dbb581
- (id)uniqueIdentifier;	// 0x31dbb5a1
@end

