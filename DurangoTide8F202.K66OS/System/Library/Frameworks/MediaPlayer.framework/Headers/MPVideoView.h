/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <UIView.h> // Unknown library

@class CALayer, MPVideoBufferLayerContainer, MPMovieSnapshotController, UIMovieSubtitlesView, NSString;

@interface MPVideoView : UIView {
	UIView *_videoBufferContainerView;	// 44 = 0x2c
	MPVideoBufferLayerContainer *_videoBufferContainerLayer;	// 48 = 0x30
	CALayer *_videoBufferLayer;	// 52 = 0x34
	UIMovieSubtitlesView *_subtitlesView;	// 56 = 0x38
	CGSize _subtitlesMargin;	// 60 = 0x3c
	MPMovieSnapshotController *_snapshotController;	// 68 = 0x44
	NSString *_moviePath;	// 72 = 0x48
	NSString *_movieSubtitle;	// 76 = 0x4c
	NSString *_movieTitle;	// 80 = 0x50
	NSString *_videoID;	// 84 = 0x54
	unsigned _scaleMode;	// 88 = 0x58
	double _startTime;	// 92 = 0x5c
	double _stopTime;	// 100 = 0x64
	unsigned _effectiveScaleMode;	// 108 = 0x6c
	unsigned _disableFudgingScaleToFullScreen : 1;	// 112 = 0x70
	unsigned _requiresIntegralScreenFrame : 1;	// 112 = 0x70
}
@property(readonly, assign, nonatomic) BOOL canChangeScaleMode;	// G=0x31da5a35; 
@property(assign) double currentTime;	// G=0x31da67e9; S=0x31da6685; converted property
@property(assign, nonatomic) unsigned effectiveScaleMode;	// G=0x31da4475; S=0x31da4485; @synthesize=_effectiveScaleMode
@property(readonly, assign, nonatomic) CGRect movieFrame;	// G=0x31da5995; 
@property(readonly, retain) NSString *moviePath;	// G=0x31da43c1; converted property
@property(retain, nonatomic) NSString *movieSubtitle;	// G=0x31da5309; S=0x31da5ae5; @synthesize=_movieSubtitle
@property(retain, nonatomic) NSString *movieTitle;	// G=0x31da44a5; S=0x31da5b0d; @synthesize=_movieTitle
@property(assign, nonatomic) BOOL requiresIntegralScreenFrame;	// G=0x31da43d1; S=0x31da43e5; 
@property(assign, nonatomic) unsigned scaleMode;	// G=0x31da4495; S=0x31da4ec9; @synthesize=_scaleMode
@property(assign, nonatomic) double startTime;	// G=0x31da4439; S=0x31da4449; @synthesize=_startTime
@property(assign, nonatomic) double stopTime;	// G=0x31da4415; S=0x31da4425; @synthesize=_stopTime
@property(assign, nonatomic) float subtitlesFontSize;	// G=0x31da4cd5; S=0x31da4cf5; 
@property(assign, nonatomic) CGSize subtitlesMargin;	// G=0x31da445d; S=0x31da4d35; @synthesize=_subtitlesMargin
@property(assign, nonatomic) CGSize subtitlesPadding;	// G=0x31da5a11; S=0x31da4d15; 
@property(copy, nonatomic) NSString *videoID;	// G=0x31da4405; S=0x31da5b35; @synthesize=_videoID
- (id)initWithFrame:(CGRect)frame;	// 0x31da55c9
- (BOOL)_allowFudgingScaleToFullScreen;	// 0x31da4891
- (id)_avController;	// 0x31da494d
- (void)_bufferingStateChangedNotification:(id)notification;	// 0x31da4c39
- (BOOL)_isCloseToFullScreenWithTransform:(CGAffineTransform)transform;	// 0x31da5f35
- (BOOL)_isExactlyFullScreenWithTransform:(CGAffineTransform)transform;	// 0x31da48f1
- (void)_itemWillChangeNotification:(id)_item;	// 0x31da6425
- (void)_layoutSublayers;	// 0x31da4869
- (void)_layoutSubtitleLayers;	// 0x31da5b61
- (void)_layoutVideoLayers:(BOOL)layers;	// 0x31da5f95
- (void)_playbackStateChangedNotification:(id)notification;	// 0x31da4b99
- (void)_sizeDidChangedNotification:(id)_size;	// 0x31da4b81
- (BOOL)_sizeDifferenceFromFullScreenIsLessThan:(CGSize)fullScreenIsLessThan allowingZero:(BOOL)zero withTransform:(CGAffineTransform)transform;	// 0x31da5ded
- (void)_validityChangedNotification:(id)notification;	// 0x31da4b29
- (void)addSubview:(id)subview;	// 0x31da4755
- (id)avController;	// 0x31da6841
- (void)bringSubviewToFront:(id)front;	// 0x31da46f9
- (int)bufferingStatusMask;	// 0x31da6815
// declared property getter: - (BOOL)canChangeScaleMode;	// 0x31da5a35
- (void)cancelSnapshots;	// 0x31da4a19
- (void)clearSubtitles;	// 0x31da4cb5
// converted property getter: - (double)currentTime;	// 0x31da67e9
- (void)dealloc;	// 0x31da5391
- (double)duration;	// 0x31da67ad
// declared property getter: - (unsigned)effectiveScaleMode;	// 0x31da4475
- (void)exchangeSubviewAtIndex:(int)index withSubviewAtIndex:(int)index2;	// 0x31da47b1
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x31da462d
- (void)insertSubview:(id)subview atIndex:(int)index;	// 0x31da480d
- (void)insertSubview:(id)subview below:(id)below;	// 0x31da469d
// declared property getter: - (CGRect)movieFrame;	// 0x31da5995
// converted property getter: - (id)moviePath;	// 0x31da43c1
// declared property getter: - (id)movieSubtitle;	// 0x31da5309
// declared property getter: - (id)movieTitle;	// 0x31da44a5
- (id)mpavController;	// 0x31da686d
- (void)pause;	// 0x31da66e5
- (void)play;	// 0x31da66b9
- (void)play;	// 0x31da4ee1
- (void)playFromBeginning;	// 0x31da4f1d
- (void)playWhenLikelyToKeepUp;	// 0x31da4f75
- (int)playableContentType;	// 0x31da6761
- (int)playbackState;	// 0x31da6711
- (void)prepareAVControllerQueue;	// 0x31da5109
// declared property getter: - (BOOL)requiresIntegralScreenFrame;	// 0x31da43d1
// declared property getter: - (unsigned)scaleMode;	// 0x31da4495
- (void)scheduleThumbnailWithSize:(CGSize)size orientation:(int)orientation time:(float)time delegate:(id)delegate;	// 0x31da496d
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x31da6685
- (void)setCurrentTime:(double)time timeSnapOption:(int)option;	// 0x31da6635
// declared property setter: - (void)setEffectiveScaleMode:(unsigned)mode;	// 0x31da4485
- (void)setFrame:(CGRect)frame;	// 0x31da45d1
// declared property setter: - (void)setMovieSubtitle:(id)subtitle;	// 0x31da5ae5
// declared property setter: - (void)setMovieTitle:(id)title;	// 0x31da5b0d
- (void)setMovieWithPath:(id)path;	// 0x31da4fb1
- (void)setNeedsDisplay;	// 0x31da456d
- (void)setNeedsDisplayInRect:(CGRect)rect;	// 0x31da44b5
- (void)setRepeatGap:(double)gap;	// 0x31da6601
- (void)setRepeatMode:(int)mode;	// 0x31da65d1
// declared property setter: - (void)setRequiresIntegralScreenFrame:(BOOL)frame;	// 0x31da43e5
// declared property setter: - (void)setScaleMode:(unsigned)mode;	// 0x31da4ec9
- (void)setScaleMode:(unsigned)mode animated:(BOOL)animated;	// 0x31da4d81
- (void)setScaleMode:(unsigned)mode duration:(float)duration;	// 0x31da4db5
// declared property setter: - (void)setStartTime:(double)time;	// 0x31da4449
// declared property setter: - (void)setStopTime:(double)time;	// 0x31da4425
// declared property setter: - (void)setSubtitlesFontSize:(float)size;	// 0x31da4cf5
// declared property setter: - (void)setSubtitlesMargin:(CGSize)margin;	// 0x31da4d35
// declared property setter: - (void)setSubtitlesPadding:(CGSize)padding;	// 0x31da4d15
// declared property setter: - (void)setVideoID:(id)anId;	// 0x31da5b35
// declared property getter: - (double)startTime;	// 0x31da4439
- (void)stop;	// 0x31da65a5
// declared property getter: - (double)stopTime;	// 0x31da4415
- (void)subtitlesDidClear:(id)subtitles;	// 0x31da4b09
- (void)subtitlesDidUpdate:(id)subtitles;	// 0x31da4a55
// declared property getter: - (float)subtitlesFontSize;	// 0x31da4cd5
// declared property getter: - (CGSize)subtitlesMargin;	// 0x31da445d
// declared property getter: - (CGSize)subtitlesPadding;	// 0x31da5a11
- (void)toggleScaleMode:(BOOL)mode;	// 0x31da4c75
// declared property getter: - (id)videoID;	// 0x31da4405
- (id)viewWithTag:(int)tag;	// 0x31da467d
@end

