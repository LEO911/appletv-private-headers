/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIPickerView.h"
#import "UIPickerViewDataSource.h"
#import "UIPickerViewDelegate.h"

@class NSLocale, NSTimeZone, NSCalendar, NSDateComponents, NSString, UILabel, NSDate, UIDatePicker;

__attribute__((visibility("hidden")))
@interface UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource> {
@private
	int _datePickerMode;	// 84 = 0x54
	NSLocale *_locale;	// 88 = 0x58
	NSTimeZone *_timeZone;	// 92 = 0x5c
	NSCalendar *_calendar;	// 96 = 0x60
	CFDateFormatterRef _localDateFormatter;	// 100 = 0x64
	NSDate *_date;	// 104 = 0x68
	NSDate *_minimumDate;	// 108 = 0x6c
	NSDate *_maximumDate;	// 112 = 0x70
	double _countDownDuration;	// 116 = 0x74
	int _minuteInterval;	// 124 = 0x7c
	NSDateComponents *_referenceComponents;	// 128 = 0x80
	double _todaySinceReferenceDate;	// 132 = 0x84
	NSDateComponents *_todayDateComponents;	// 140 = 0x8c
	NSString *_amString;	// 144 = 0x90
	NSString *_pmString;	// 148 = 0x94
	UILabel *_hourLabel;	// 152 = 0x98
	UILabel *_minuteLabel;	// 156 = 0x9c
	UIDatePicker *_datePickerDelegate;	// 160 = 0xa0
	id _delegateOfDatePicker;	// 164 = 0xa4
	int _numberOfDaysInCurrentMonth;	// 168 = 0xa8
	int _expectedAMPM;	// 172 = 0xac
	NSDateComponents *_minDateComponents;	// 176 = 0xb0
	NSDateComponents *_maxDateComponents;	// 180 = 0xb4
	struct {
		unsigned dateOrder : 2;
		unsigned timeOrder : 2;
		unsigned weekdayOrder : 1;
		unsigned staggerTimeIntervals : 1;
		unsigned loadingDateOrTime : 1;
		unsigned highlightsToday : 1;
		unsigned hasCustomCalendar : 1;
		unsigned reserved : 23;
		unsigned usesBlackChrome : 1;
	} _datePickerFlags;	// 184 = 0xb8
}
@property(copy, nonatomic) NSCalendar *calendar;	// G=0x33045f25; S=0x33127b35; @synthesize=_calendar
@property(assign, nonatomic) double countDownDuration;	// G=0x331289d9; S=0x331287f9; 
@property(copy, nonatomic) NSDate *date;	// G=0x33050901; S=0x33127e21; @synthesize=_date
@property(retain) id dateComponents;	// G=0x33045ee5; S=0x331287b5; converted property
@property(assign, nonatomic) int datePickerMode;	// G=0x33129121; S=0x33045fd1; @synthesize=_datePickerMode
@property(assign, nonatomic) id delegateOfDatePicker;	// G=0x33129181; S=0x33129191; @synthesize=_delegateOfDatePicker
@property(readonly, assign, nonatomic, getter=_hasCustomCalendar) BOOL hasCustomCalendar;	// G=0x33127c89; 
@property(retain, nonatomic) NSLocale *locale;	// G=0x33129131; S=0x33127cdd; @synthesize=_locale
@property(copy, nonatomic) NSDate *maximumDate;	// G=0x33129161; S=0x33127f41; @synthesize=_maximumDate
@property(copy, nonatomic) NSDate *minimumDate;	// G=0x33129151; S=0x33127e5d; @synthesize=_minimumDate
@property(assign, nonatomic) int minuteInterval;	// G=0x33129171; S=0x3304635d; @synthesize=_minuteInterval
@property(retain, nonatomic) NSTimeZone *timeZone;	// G=0x33129141; S=0x33127d71; @synthesize=_timeZone
@property(assign, nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) BOOL usesBlackChrome;	// G=0x330482f9; S=0x331290f1; 
- (id)initWithFrame:(CGRect)frame;	// 0x33045159
- (int)_amPmValue;	// 0x3304d9f9
- (id)_ampmCellFont;	// 0x33049b69
- (int)_columnForElement:(unsigned)element;	// 0x33046cb5
- (id)_createAccessoryViewWithText:(id)text andFont:(id)font;	// 0x33128d8d
- (id)_createLabelWithString:(id)string above:(id)above;	// 0x33128ed1
- (id)_dateForWeekMonthDayRow:(int)weekMonthDayRow;	// 0x3304f5ad
- (id)_datePickerCellFont;	// 0x33049061
- (void)_datePickerReset:(id)reset;	// 0x331277e9
- (int)_dayForRow:(int)row;	// 0x330516d1
- (void)_doneLoadingDateOrTime;	// 0x33050a4d
- (unsigned)_elementForColumn:(int)column;	// 0x33048f55
- (void)_ensureTodayIsSet;	// 0x3304b9bd
- (int)_eraForRow:(int)row;	// 0x33051a59
// declared property getter: - (BOOL)_hasCustomCalendar;	// 0x33127c89
- (int)_hourForRow:(int)row;	// 0x3304d945
- (int)_hourForRow:(int)row in24HourTime:(BOOL)a24HourTime;	// 0x3304d991
- (id)_hoursString;	// 0x33128425
- (id)_hrMinFont;	// 0x3312809d
- (int)_incrementForElement:(unsigned)element;	// 0x3304e081
- (int)_incrementedAmountForValue:(int)value withElement:(unsigned)element;	// 0x3304deed
- (void)_loadDateAnimated:(BOOL)animated;	// 0x33046865
- (void)_loadDesignatorStrings;	// 0x33048df5
- (void)_loadDesignatorStringsIfNeeded;	// 0x33128a45
- (CFDateFormatterRef)_localDateFormatter;	// 0x3304bab1
- (int)_minuteForRow:(int)row;	// 0x3304f681
- (id)_minutesString;	// 0x33128409
- (int)_monthForRow:(int)row;	// 0x330514e1
- (id)_newFadeLabel:(id)label toNewLabelWithString:(id)string ifAnimated:(BOOL)animated;	// 0x33128229
- (int)_numberOfDaysInDate:(id)date;	// 0x33045f35
- (int)_numberOfDaysInWeek;	// 0x331280e9
- (CFDateFormatterRef)_properlyConfiguredSharedDateFormatter;	// 0x33127c9d
- (BOOL)_scrollingAnyColumnExcept:(int)except;	// 0x33128719
- (int)_secondForRow:(int)row;	// 0x33128215
- (void)_selectRow:(int)row inComponent:(int)component animated:(BOOL)animated notify:(BOOL)notify;	// 0x33046e1d
- (int)_selectedHourForColumn:(int)column;	// 0x331281b5
- (int)_selectedMinuteForColumn:(int)column;	// 0x331281e5
- (void)_setDate:(id)date animated:(BOOL)animated forced:(BOOL)forced;	// 0x330466ed
- (void)_setDateComponent:(id)component withElement:(unsigned)element;	// 0x3304f299
- (void)_setHidesLabels:(BOOL)labels;	// 0x3312905d
// declared property setter: - (void)_setUsesBlackChrome:(BOOL)chrome;	// 0x331290f1
- (void)_setupCell:(id)cell atRow:(int)row inColumn:(int)column withElementFlag:(unsigned)elementFlag;	// 0x3304cd01
- (void)_setupWeekMonthDayCell:(id)cell atRow:(int)row inColumn:(int)column;	// 0x3304b595
- (BOOL)_shouldEnableAmPmForValue:(int)value column:(int)column;	// 0x3304e0e9
- (BOOL)_shouldEnableDayForRow:(int)row column:(int)column;	// 0x330516f1
- (BOOL)_shouldEnableHourForValue:(int)value column:(int)column;	// 0x3304dad1
- (BOOL)_shouldEnableMinuteForValue:(int)value column:(int)column;	// 0x3304df5d
- (BOOL)_shouldEnableMonthForRow:(int)row column:(int)column;	// 0x33051505
- (BOOL)_shouldEnableWeekMonthDayForRow:(int)row;	// 0x3304bb5d
- (BOOL)_shouldEnableYearForRow:(int)row;	// 0x33051b2d
- (BOOL)_showingDate;	// 0x33127841
- (id)_sizedPickerCellFont;	// 0x33049125
- (float)_tableRowHeight;	// 0x33127839
- (void)_todayChanged:(id)changed;	// 0x331277a9
- (id)_todayTextColor;	// 0x33051669
- (void)_updateBitsForDate:(id)date forced:(BOOL)forced andReload:(BOOL)reload animateIfNeeded:(BOOL)needed;	// 0x33127861
- (BOOL)_updateDateOrTime;	// 0x3304eb85
- (void)_updateEnabledCells:(BOOL)cells;	// 0x3304e335
- (void)_updateLabels:(BOOL)labels;	// 0x3304ea05
- (void)_updateReferenceBits;	// 0x33045e55
- (void)_updateRowInColumn:(int)column toValue:(int)value withRepeatingAmount:(int)repeatingAmount element:(unsigned)element animated:(BOOL)animated;	// 0x3304e6d5
// declared property getter: - (BOOL)_usesBlackChrome;	// 0x330482f9
- (int)_yearForRow:(int)row;	// 0x33051985
// declared property getter: - (id)calendar;	// 0x33045f25
- (float)contentWidth;	// 0x33128a99
// declared property getter: - (double)countDownDuration;	// 0x331289d9
// declared property getter: - (id)date;	// 0x33050901
// converted property getter: - (id)dateComponents;	// 0x33045ee5
// declared property getter: - (int)datePickerMode;	// 0x33129121
- (void)dealloc;	// 0x33053699
// declared property getter: - (id)delegateOfDatePicker;	// 0x33129181
- (int)hour;	// 0x33128025
- (void)layoutSubviews;	// 0x33046f39
// declared property getter: - (id)locale;	// 0x33129131
// declared property getter: - (id)maximumDate;	// 0x33129161
// declared property getter: - (id)minimumDate;	// 0x33129151
- (int)minute;	// 0x3312804d
// declared property getter: - (int)minuteInterval;	// 0x33129171
- (int)numberOfComponentsInPickerView:(id)pickerView;	// 0x330464bd
- (id)pickerImageNamePrefix;	// 0x33048289
- (void)pickerTableView:(id)view didChangeSelectionBarRowFrom:(int)from to:(int)to;	// 0x3305003d
- (void)pickerView:(id)view didSelectRow:(int)row inComponent:(int)component;	// 0x33050829
- (int)pickerView:(id)view numberOfRowsInComponent:(int)component;	// 0x3304a67d
- (float)pickerView:(id)view rowHeightForComponent:(int)component;	// 0x3304a461
- (id)pickerView:(id)view viewForRow:(int)row forComponent:(int)component reusingView:(id)view4;	// 0x3304b111
- (float)pickerView:(id)view widthForComponent:(int)component;	// 0x33048779
- (void)pickerViewLoaded:(id)loaded;	// 0x331281a1
- (void)scrollerWillStartDragging:(id)scroller;	// 0x33128789
- (int)second;	// 0x33128075
// declared property setter: - (void)setCalendar:(id)calendar;	// 0x33127b35
// declared property setter: - (void)setCountDownDuration:(double)duration;	// 0x331287f9
// declared property setter: - (void)setDate:(id)date;	// 0x33127e21
- (void)setDate:(id)date animated:(BOOL)animated;	// 0x330466c9
// converted property setter: - (void)setDateComponents:(id)components;	// 0x331287b5
// declared property setter: - (void)setDatePickerMode:(int)mode;	// 0x33045fd1
- (void)setDelegate:(id)delegate;	// 0x33045f85
// declared property setter: - (void)setDelegateOfDatePicker:(id)datePicker;	// 0x33129191
- (void)setFrame:(CGRect)frame;	// 0x33045599
- (void)setHighlightsToday:(BOOL)today;	// 0x3312879d
// declared property setter: - (void)setLocale:(id)locale;	// 0x33127cdd
// declared property setter: - (void)setMaximumDate:(id)date;	// 0x33127f41
// declared property setter: - (void)setMinimumDate:(id)date;	// 0x33127e5d
// declared property setter: - (void)setMinuteInterval:(int)interval;	// 0x3304635d
- (void)setStaggerTimeIntervals:(BOOL)intervals;	// 0x33128149
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x33127d71
- (id)shadowColor;	// 0x33128d71
// declared property getter: - (id)timeZone;	// 0x33129141
@end

