/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UITextSelection.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "UIWebTiledView.h"
#import "UITextSelectingContent.h"

@class NSMutableSet, NSArray, NSTimer, UIWebSelectionAssistant, UITextRange, UIAutoscroll, DOMNode, NSDictionary, UITextPosition, UIView, UITextSelectionView, UITextInteractionAssistant, UIWebRotatingSheet, UIResponder, DOMHTMLElement, UITextChecker, UIColor, UIImage, CALayer, UILongPressGestureRecognizer, UIReferenceLibraryViewController, UITapGestureRecognizer, UITextInputTraits, WebView, UIPopoverController, DOMElement, DOMRange, UIPanGestureRecognizer, WebThreadSafeUndoManager, WebViewReachabilityObserver;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, UITextSelection> {
	int _retainCount;	// 64 = 0x40
	WKWindow *_wkWindow;	// 68 = 0x44
	WebView *_webView;	// 72 = 0x48
	WebViewReachabilityObserver *_reachabilityObserver;	// 76 = 0x4c
	id m_parentTextView;	// 80 = 0x50
	id _delegate;	// 84 = 0x54
	id _textSuggestionDelegate;	// 88 = 0x58
	CGRect _doubleTapRect;	// 92 = 0x5c
	CGRect _mainDocumentDoubleTapRect;	// 108 = 0x6c
	CGPoint _scrollPoint;	// 124 = 0x7c
	CGPoint _doubleTapStartPosition;	// 132 = 0x84
	double _doubleTapStartTime;	// 140 = 0x8c
	CGSize _pendingSize;	// 148 = 0x94
	int _orientation;	// 156 = 0x9c
	DOMHTMLElement *_standaloneEditingElement;	// 160 = 0xa0
	CGPoint _mouseDownPoint;	// 164 = 0xa4
	double _mouseDownTime;	// 172 = 0xac
	UIAutoscroll *_autoscroll;	// 180 = 0xb4
	CFDictionaryRef _plugInViews;	// 184 = 0xb8
	int m_selectionGranularity;	// 188 = 0xbc
	CALayer *_contentLayersHostingLayer;	// 192 = 0xc0
	CALayer *_flattenedRotatingContentLayer;	// 196 = 0xc4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 200 = 0xc8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 204 = 0xcc
	NSMutableSet *_overflowScrollViews;	// 208 = 0xd0
	NSArray *_additionalSubviews;	// 212 = 0xd4
	UITextInputTraits *_traits;	// 216 = 0xd8
	id<UITextInputDelegate> _inputDelegate;	// 220 = 0xdc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 224 = 0xe0
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 228 = 0xe4
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 232 = 0xe8
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 236 = 0xec
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 240 = 0xf0
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 244 = 0xf4
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
	} _interaction;	// 248 = 0xf8
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 296 = 0x128
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 416 = 0x1a0
	CGSize _minimumSize;	// 440 = 0x1b8
	int _documentType;	// 448 = 0x1c0
	float _documentScale;	// 452 = 0x1c4
	float _previousDocumentScale;	// 456 = 0x1c8
	CGRect _documentBounds;	// 460 = 0x1cc
	CGSize _fixedLayoutOriginRoundingDelta;	// 476 = 0x1dc
	CGSize _fixedLayoutSizeRoundingDelta;	// 484 = 0x1e4
	unsigned _customConfigurations;	// 492 = 0x1ec
	unsigned _mouseDownCount;	// 496 = 0x1f0
	unsigned _dataDetectorTypes;	// 500 = 0x1f4
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 504 = 0x1f8
	unsigned _webCoreNeedsDraw : 1;	// 504 = 0x1f8
	unsigned _ignoresFocusingMouse : 1;	// 504 = 0x1f8
	unsigned _ignoresKeyEvents : 1;	// 504 = 0x1f8
	unsigned _autoresizes : 1;	// 504 = 0x1f8
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 504 = 0x1f8
	unsigned _updatingSize : 1;	// 504 = 0x1f8
	unsigned _scalesToFit : 1;	// 504 = 0x1f8
	unsigned _updatesScrollView : 1;	// 505 = 0x1f9
	unsigned _hasCustomScale : 1;	// 505 = 0x1f9
	unsigned _shouldRestoreScrollPosition : 1;	// 505 = 0x1f9
	unsigned _pageNeedsReset : 1;	// 505 = 0x1f9
	unsigned _hasScrollPoint : 1;	// 505 = 0x1f9
	unsigned _gesturesDisabled : 1;	// 505 = 0x1f9
	unsigned _doubleTapRectIsReplaced : 1;	// 505 = 0x1f9
	unsigned _standaloneEditableView : 1;	// 505 = 0x1f9
	unsigned _widgetEditingView : 1;	// 506 = 0x1fa
	unsigned _mouseDragged : 1;	// 506 = 0x1fa
	unsigned _mouseReentrancyGuard : 1;	// 506 = 0x1fa
	unsigned _isShowingFullScreenPlugIn : 1;	// 506 = 0x1fa
	unsigned _isSettingRedrawFrame : 1;	// 506 = 0x1fa
	unsigned _needsScrollNotifications : 1;	// 506 = 0x1fa
	unsigned _loadsSynchronously : 1;	// 506 = 0x1fa
	unsigned _mouseDown : 1;	// 506 = 0x1fa
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 507 = 0x1fb
	unsigned _geolocationDialogAllowed : 1;	// 507 = 0x1fb
	unsigned _usingMinimalTilesDuringLoading : 1;	// 507 = 0x1fb
	unsigned _sheetsCount : 2;	// 507 = 0x1fb
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 507 = 0x1fb
	unsigned _loadInProgress : 1;	// 507 = 0x1fb
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 507 = 0x1fb
	unsigned _classicViewportMode : 1;	// 508 = 0x1fc
	unsigned _sizeUpdatesSuspended : 1;	// 508 = 0x1fc
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 508 = 0x1fc
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 508 = 0x1fc
	unsigned _shouldIgnoreCustomViewport : 1;	// 508 = 0x1fc
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 508 = 0x1fc
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 508 = 0x1fc
	unsigned _shouldRemoveUserStyleSheet : 1;	// 508 = 0x1fc
	unsigned _hasDrawnTiles : 1;	// 509 = 0x1fd
	unsigned _showingTextStyleOptions : 1;	// 509 = 0x1fd
	unsigned _subviewCachesNeedUpdate : 1;	// 509 = 0x1fd
	unsigned _avoidFixedPositionUpdateOnZoomStart : 1;	// 509 = 0x1fd
	WebThreadSafeUndoManager *_undoManager;	// 512 = 0x200
	UIWebSelectionAssistant *_webSelectionAssistant;	// 516 = 0x204
	UITextInteractionAssistant *_textSelectionAssistant;	// 520 = 0x208
	UITextSelectionView *_textSelectionView;	// 524 = 0x20c
	UITextChecker *_textChecker;	// 528 = 0x210
	UIEdgeInsets _caretInsets;	// 532 = 0x214
	int _selectionAffinity;	// 548 = 0x224
	UIPopoverController *_definePopoverController;	// 552 = 0x228
	UIReferenceLibraryViewController *_defineViewController;	// 556 = 0x22c
	DOMElement *_dictationResultPlaceholder;	// 560 = 0x230
	id _dictationResultPlaceholderRemovalObserver;	// 564 = 0x234
	DOMRange *_rangeToRestoreAfterDictation;	// 568 = 0x238
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x33063a81; S=0x330fb815; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *asText;	// G=0x33186a21; 
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x331860f1; S=0x33186089; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x330f5701; S=0x330f5705; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x3305fbd9; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x33185861; S=0x32f47ced; converted property
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x330f4bad; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x32f47419; S=0x32f64119; converted property
@property(assign) id delegate;	// G=0x32fd85a1; S=0x32f64691; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x330f0149; S=0x330620bd; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x32f64ed5; converted property
@property(readonly, assign) int documentType;	// G=0x32f64e85; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x330f1dad; S=0x32f4a695; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x330f29cd; converted property
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x330f4c3d; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x32fc486d; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32f9fd39; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x32f9717d; S=0x32fa5581; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x330f4bb1; 
@property(assign) id interactionDelegate;	// G=0x330fb6b9; S=0x32f646a1; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x330f2a21; S=0x32f4c6cd; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x330f2a5d; S=0x330f2a45; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x330f0135; S=0x32f46051; converted property
@property(retain) id markedText;	// G=0x32ffb9ed; S=0x3305fa91; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32fa6d51; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x330f62f9; S=0x330f62fd; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x330f1d69; S=0x330f1d21; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x330f6621; S=0x330f6631; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x32fa2eb9; S=0x32f9ff7d; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x32fa2f3d; S=0x330f654d; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x330f6551; S=0x32fbe475; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x330f5ee9; 
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x32f46681; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x330f0421; S=0x330f0409; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x330f1d0d; S=0x330f1cf5; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x330f03f5; S=0x330f0385; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x330f2a35; S=0x32f4c88d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x330f4701; S=0x330f45d9; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextSelection> *textDocument;	// G=0x330f65bd; 
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x32fa6e41; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x32fa4929; converted property
@property(assign) BOOL updatesScrollView;	// G=0x330f06b1; S=0x330f0699; converted property
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x330f565d; converted property
@property(readonly, retain) WebView *webView;	// G=0x32ee796d; converted property
+ (id)_createDefaultHighlightView;	// 0x3300b32d
+ (id)_sharedHighlightView;	// 0x3300b2f5
+ (double)getTimestamp;	// 0x3300dfdd
+ (void)initialize;	// 0x330efd9d
+ (Class)layerClass;	// 0x32f44c91
+ (id)standardTextViewPreferences;	// 0x32f44545
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x32f4464d
- (id)initWithFrame:(CGRect)frame;	// 0x32f4a669
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x32f447b5
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x33008045
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x33063a81
- (void)_addAdditionalSubview:(id)subview;	// 0x330f1411
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x330f0bad
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x330073d5
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x330fca61
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x330fccd9
- (void)_bold:(id)bold;	// 0x330f4d81
- (void)_cancelLongPressGestureRecognizer;	// 0x3300b549
- (float)_clampScale:(float)scale toScrollView:(id)scrollView;	// 0x330f20ad
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x32f4abc9
- (void)_clearAllConsoleMessages;	// 0x32f4c23d
- (void)_clearDoubleTapRect;	// 0x32f4c1d9
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x330f5861
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x330f5b09
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x330fbed1
- (BOOL)_dataDetectionIsActivated;	// 0x32f4ac85
- (void)_define:(id)define;	// 0x330f5041
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x330f318d
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x32f48031
- (void)_didScroll;	// 0x3300aef9
- (float)_documentScale;	// 0x33009661
- (id)_documentUrl;	// 0x330f65c1
- (CGRect)_documentViewVisibleRect;	// 0x32f4bf19
- (id)_doubleTapGestureRecognizer;	// 0x330fb801
- (void)_doubleTapRecognized:(id)recognized;	// 0x330fa9d9
- (float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width isPDF:(BOOL)pdf;	// 0x330f1dd1
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x330fd4b9
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32f47685
- (void)_finishedUsingDictationPlaceholder;	// 0x330f37b1
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x330f5c45
- (id)_focusedOrMainFrame;	// 0x32ee678d
- (id)_groupName;	// 0x33057d01
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x330f2111
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x330f1ee1
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x330f289d
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x330f1901
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x3300fd89
- (BOOL)_isDeallocating;	// 0x330efe15
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x3300d35d
- (void)_italicize:(id)italicize;	// 0x330f4dd9
- (CGRect)_lastRectForRange:(id)range;	// 0x330f6251
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x32f4bd31
- (void)_longPressRecognized:(id)recognized;	// 0x3300f8c9
- (NSRange)_markedTextNSRange;	// 0x330f42bd
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x330f136d
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x330f1309
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x32f44ef1
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x330f0969
- (void)_notifyPlugInViewsOfDidZoom;	// 0x330f0a65
- (void)_notifyPlugInViewsOfScaleChange;	// 0x32f4bb19
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x330f08b1
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x330f18a5
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node;	// 0x330f17a1
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x330f1735
- (id)_parentTextView;	// 0x32fa5831
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x330f6161
- (Class)_printFormatterClass;	// 0x33222e0d
- (void)_promptForReplace:(id)replace;	// 0x330f5605
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x32f66459
- (void)_removeAdditionalSubview:(id)subview;	// 0x330f1475
- (void)_removeDefinitionController:(BOOL)controller;	// 0x3301c7b5
- (id)_requestWithUDIDHeaderIfAppropriate:(id)udidheaderIfAppropriate;	// 0x330f2a19
- (void)_resetForNewPage;	// 0x32f4c929
- (void)_resetFormDataForFrame:(id)frame;	// 0x32f4b12d
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x3300fecd
- (void)_reshapePlugInViews;	// 0x32f48775
- (id)_responderForBecomeFirstResponder;	// 0x33063c55
- (void)_restoreFlattenedContentLayers;	// 0x330f5e6d
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x33008209
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x32f45bed
- (void)_runLoadBlock:(id)block;	// 0x32f4ac55
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x33009ffd
- (id)_scriptingInfoForForm:(id)form;	// 0x330f68b1
- (id)_scriptingInfoForLink:(id)link;	// 0x330f6659
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x330f61e5
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32f47609
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x330fae71
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x330fb815
- (void)_setDocumentScale:(float)scale;	// 0x32f4b7bd
- (void)_setDocumentType:(int)type;	// 0x32f641ed
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x32f4b221
- (void)_setParentTextView:(id)view;	// 0x32f46245
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x33009649
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x330f59f1
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x330f1985
- (void)_showDataDetectorsSheet;	// 0x330fc579
- (void)_showImageSheet;	// 0x330fc159
- (void)_showLinkSheet;	// 0x330fc3cd
- (void)_showPendingContentLayers;	// 0x32f4cbb9
- (void)_showTextStyleOptions:(id)options;	// 0x330f4e89
- (void)_singleTapRecognized:(id)recognized;	// 0x33062f29
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x32fd644d
- (id)_targetURL;	// 0x330fb241
- (id)_textSelectingContainer;	// 0x32fd8b7d
- (BOOL)_tryRetain;	// 0x330efdb9
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x330faa25
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x330faa71
- (void)_underline:(id)underline;	// 0x330f4e31
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x330f2ca1
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x330f2bfd
- (void)_updateFixedPositionContent;	// 0x3300b6cd
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;	// 0x32f4bbd1
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x33012529
- (void)_updateScrollViewBoundaryZoomScales;	// 0x32f463b9
- (void)_updateSize;	// 0x33007bb5
- (void)_updateSubviewCaches;	// 0x330097cd
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x33009109
- (float)_zoomedDocumentScale;	// 0x33007b51
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x330fb2f5
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x330fb3f1
- (void)addInputString:(id)string;	// 0x330f2d81
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x330f2d45
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x3300fcd9
// declared property getter: - (id)asText;	// 0x33186a21
- (void)assistFormNode:(id)node;	// 0x330f2a05
- (void)attemptClick:(id)click;	// 0x33063671
- (id)automaticallySelectedOverlay;	// 0x3305be11
- (CGRect)autoscrollContentFrame;	// 0x330f56d9
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x331860f1
- (CGRect)autoscrollDragFrame;	// 0x330f56b5
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x330f652d
- (BOOL)becomeFirstResponder;	// 0x3306393d
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x330f5701
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x330fd20d
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x330fd021
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x330fd1a5
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x330fcf95
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x330fcfc5
- (void)beginSelectionChange;	// 0x32f9fd09
// declared property getter: - (id)beginningOfDocument;	// 0x3305fbd9
- (BOOL)canBecomeFirstResponder;	// 0x33063a69
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x32fc6315
- (BOOL)canResignFirstResponder;	// 0x33063c85
- (void)cancelAutoscroll;	// 0x33186945
- (void)cancelInteraction;	// 0x3300dfa9
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x3300b0e9
- (BOOL)cancelMouseTracking;	// 0x330f07f1
- (BOOL)cancelTouchTracking;	// 0x330f0845
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x33185861
- (CGRect)caretRect;	// 0x32f4706d
- (CGRect)caretRectForPosition:(id)position;	// 0x32fa4511
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x32fa47c9
- (unsigned short)characterAfterCaretSelection;	// 0x32fc6abd
- (unsigned short)characterBeforeCaretSelection;	// 0x32fc6a8d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x330f3d55
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x330f63d1
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x330f64c1
- (id)checkSpellingOfString:(id)string;	// 0x3301e5bd
- (void)clearInteractionTimer;	// 0x3300b2b1
- (void)clearRangedSelectionInitialExtent;	// 0x331859a1
- (void)clearSelection;	// 0x3318561d
- (BOOL)clearWKFirstResponder;	// 0x330219e1
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x33185671
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32fbdc31
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x330f6301
- (void)collapseSelection;	// 0x3318580d
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x32ffa321
- (void)completeInteraction;	// 0x330128a9
- (void)confirmMarkedText:(id)text;	// 0x330f3cd1
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x330fda4d
- (BOOL)containsOnlySelectableElements;	// 0x33062d15
// declared property getter: - (id)content;	// 0x330f4bad
- (CGRect)contentFrameForView:(id)view;	// 0x3318616d
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x330fa73d
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x330f4899
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x3300f2f1
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x3300f281
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x32fbdd15
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x3300f1a1
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x330f0329
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x32f47169
- (void)copy:(id)copy;	// 0x330f4d51
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x330f0779
- (void)cut:(id)cut;	// 0x330f4c9d
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x32f47419
- (void)dealloc;	// 0x3301c2d5
- (void)deferInteraction;	// 0x330fb1f1
- (void)deferredBecomeFirstResponder;	// 0x330f2ae9
// converted property getter: - (id)delegate;	// 0x32fd85a1
- (void)deleteBackward;	// 0x33056491
- (void)deleteFromInput;	// 0x330f2d95
- (void)detachInteractionAssistant;	// 0x32f46351
- (void)detachSelectionView;	// 0x32f46331
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x330f0149
- (id)dictationInterpretations;	// 0x330f3a79
- (id)dictationResultMetadataForRange:(id)range;	// 0x330f312d
- (void)didEndScroll;	// 0x330123ad
- (void)didEndZoom;	// 0x330f5801
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x330efe41
- (void)didMoveToSuperview;	// 0x32f463a9
- (void)didRemovePlugInView:(id)view;	// 0x33009e15
- (void)didZoom;	// 0x330f57a9
// converted property getter: - (CGRect)documentBounds;	// 0x32f64ed5
// converted property getter: - (int)documentType;	// 0x32f64e85
// converted property getter: - (CGRect)doubleTapRect;	// 0x330f29cd
- (BOOL)doubleTapRectIsReplaced;	// 0x330f29f1
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x330fd6dd
- (unsigned)effectiveDataDetectorTypes;	// 0x33057921
- (void)enableReachability;	// 0x32f634b1
- (void)enclosingScrollerDidScroll;	// 0x330f045d
// declared property getter: - (id)endOfDocument;	// 0x32f9fd39
- (void)endPrintMode;	// 0x330fd361
- (void)endSelectionChange;	// 0x32fa0265
- (void)ensureSelection;	// 0x3301d625
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x330f4199
- (void)extendCurrentSelection:(int)selection;	// 0x330f43ad
- (CGRect)firstRectForRange:(id)range;	// 0x3305bcb9
- (id)fontForCaretSelection;	// 0x3305cfa5
- (void)forceLayout;	// 0x330f06c5
- (id)formElement;	// 0x32fbdd89
- (void)forwardInvocation:(id)invocation;	// 0x32f63b91
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x330f0dc9
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x330f3721
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x3300f80d
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x3300f6c9
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x3300d2f5
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x3300f73d
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x3300f3d5
- (int)getPasteboardChangeCount;	// 0x330f1069
- (int)getPasteboardItemsCount;	// 0x330f0d11
- (void)handleKeyWebEvent:(id)event;	// 0x330f4951
- (BOOL)hasContent;	// 0x32ee6735
- (BOOL)hasDrawnTiles;	// 0x33004c41
- (BOOL)hasEditableSelection;	// 0x32f4764d
- (BOOL)hasMarkedText;	// 0x32f47449
- (BOOL)hasPlugInSubviews;	// 0x330f4b5d
- (BOOL)hasRangedSelection;	// 0x330f316d
- (BOOL)hasRichlyEditableSelection;	// 0x330f0d45
- (BOOL)hasSelection;	// 0x330f442d
- (BOOL)hasSelection;	// 0x32ee797d
- (BOOL)hasSimpleTextOnlyStructure;	// 0x33062c09
- (BOOL)hasText;	// 0x32ff91d9
- (void)hideTapHighlight;	// 0x330120b1
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x330fb019
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x3300ff4d
- (id)implementationWebView;	// 0x330f48ad
- (float)initialScale;	// 0x32f4b6f1
// declared property getter: - (id)inputDelegate;	// 0x32f9717d
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x330f2e61
- (id)insertDictationResultPlaceholder;	// 0x330f31f1
- (void)insertText:(id)text;	// 0x32ffa655
- (void)installGestureRecognizers;	// 0x32f44f6d
- (float)integralScaleForScale:(float)scale;	// 0x32f4ba69
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x32f4ba7d
// declared property getter: - (id)interactionAssistant;	// 0x330f4bb1
// converted property getter: - (id)interactionDelegate;	// 0x330fb6b9
- (BOOL)isCaretInEmptyParagraph;	// 0x32fc69fd
- (BOOL)isClassicViewportMode;	// 0x330f0435
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x330f1dad
// declared property getter: - (BOOL)isEditable;	// 0x330f4c3d
// declared property getter: - (BOOL)isEditing;	// 0x32fc486d
- (BOOL)isEditingSingleLineElement;	// 0x330f2dc9
- (BOOL)isInInteraction;	// 0x330fa8fd
- (BOOL)isInPrintMode;	// 0x330fc92d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x32fbe0d1
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x32fbe105
- (BOOL)isShowingFullScreenPlugInUI;	// 0x33002b0d
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x330f2a21
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x330f109d
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x330f2a5d
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x3301d8ad
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x3301e4e5
- (BOOL)keyboardInputChanged:(id)changed;	// 0x32fdb509
- (void)keyboardInputChangedSelection:(id)selection;	// 0x32fd84d1
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x330f48b1
- (void)layoutSubviews;	// 0x32f48475
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x330f0009
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x32f4ab71
- (void)loadRequest:(id)request;	// 0x33004cb9
// converted property getter: - (BOOL)loadsSynchronously;	// 0x330f0135
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x330f564d
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x330f563d
- (BOOL)makeWKFirstResponder;	// 0x32fd86f1
// converted property getter: - (id)markedText;	// 0x32ffb9ed
// declared property getter: - (id)markedTextRange;	// 0x32fa6d51
// declared property getter: - (id)markedTextStyle;	// 0x330f62f9
- (float)maximumScale;	// 0x330f0315
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x330f1d69
- (id)metadataDictionariesForDictationResults;	// 0x330f30c5
- (id)methodSignatureForSelector:(SEL)selector;	// 0x32f475bd
- (float)minimumScale;	// 0x32f4c10d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x330f015d
- (BOOL)mouseEventsChangeSelection;	// 0x330fd919
- (void)moveBackward:(unsigned)backward;	// 0x330f44bd
- (void)moveForward:(unsigned)forward;	// 0x330f4521
- (BOOL)needsScrollNotifications;	// 0x330f0449
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x330f079d
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x330f40e9
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x32fdb3b5
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x33185735
- (void)paste:(id)paste;	// 0x330f534d
- (void)performClick:(id)click;	// 0x330faaf9
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x330fa6a1
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x330f0e19
- (BOOL)playsNicelyWithGestures;	// 0x330f56fd
- (void)popoverControllerDidDismissPopover:(id)popoverController;	// 0x330f5321
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x33186a25
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x330f61c1
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x32fd8385
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x32fbe139
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x330f644d
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x330f4081
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x330f4379
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x330f4345
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x32fa6e45
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x330f5fbd
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x330f6621
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x330f1189
- (CGRect)rectContainingCaretSelection;	// 0x330f3fd9
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x330f3dc9
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x330f3e59
- (id)rectsForRange:(id)range;	// 0x330f6561
- (void)redrawScaledDocument;	// 0x330f1a2d
- (oneway void)release;	// 0x32f48379
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x330f37ed
- (void)replace:(id)replace;	// 0x330f5531
- (void)replaceCurrentWordWithText:(id)text;	// 0x330f3b85
- (void)replaceRange:(id)range withText:(id)text;	// 0x330f60a1
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x330f3ab1
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x3305f989
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x330f4221
- (BOOL)requiresKeyEvents;	// 0x32fb26c1
- (void)resetInteraction;	// 0x3300b279
- (void)resetShowingTextStyle:(id)style;	// 0x330217d5
- (void)resetTilingAfterLoadComplete;	// 0x32f4c631
- (BOOL)resignFirstResponder;	// 0x32f4c6e5
- (id)retain;	// 0x32f46371
- (unsigned)retainCount;	// 0x3301a78d
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x32fa35e9
- (void)saveStateToCurrentHistoryItem;	// 0x33009fad
- (id)scriptingInfoWithChildren;	// 0x33059379
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x33186965
- (void)scrollViewWasRemoved;	// 0x330f5765
- (void)select:(id)select;	// 0x330f5499
- (void)selectAll;	// 0x33185fd1
- (void)selectAll;	// 0x330f4585
- (void)selectAll:(id)all;	// 0x330f54e5
- (void)selectWord;	// 0x331855c9
- (id)selectedDOMRange;	// 0x32fa2f0d
- (id)selectedDOMRange;	// 0x330f4315
// declared property getter: - (id)selectedTextRange;	// 0x32fa2eb9
// declared property getter: - (int)selectionAffinity;	// 0x32fa2f3d
- (BOOL)selectionAtDocumentStart;	// 0x330f445d
- (BOOL)selectionAtWordStart;	// 0x330f448d
- (int)selectionBaseWritingDirection;	// 0x32fd7351
- (void)selectionChanged;	// 0x32f465f9
- (void)selectionChanged:(id)changed;	// 0x32f46581
- (CGRect)selectionClipRect;	// 0x3305f2ed
// declared property getter: - (int)selectionGranularity;	// 0x330f6551
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x33186025
- (NSRange)selectionRange;	// 0x3301e4a5
- (id)selectionRects;	// 0x33185d11
- (id)selectionRectsForRange:(id)range;	// 0x32fbe74d
// declared property getter: - (int)selectionState;	// 0x330f5ee9
- (int)selectionState;	// 0x32fc6a5d
// declared property getter: - (id)selectionView;	// 0x32f46681
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x33008471
- (void)sendScrollEventIfNecessary;	// 0x3300b771
- (void)sendScrollWheelEvents;	// 0x330fb43d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x3305789d
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x32f64729
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x330fb6cd
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x32f45e19
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x32f641d5
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x33186089
- (void)setBaseWritingDirection:(int)direction;	// 0x331858dd
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x32fd849d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x330f5705
- (void)setBottomBufferHeight:(float)height;	// 0x330f4921
- (void)setCaretChangeListener:(id)listener;	// 0x330f4869
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x32f47ced
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x32fa6275
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x32f64119
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x32f64691
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x330620bd
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x32f4a695
- (void)setDrawsBackground:(BOOL)background;	// 0x32f4629d
- (void)setFrame:(CGRect)frame;	// 0x32f44ce9
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x32f45fbd
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x330f0899
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x330f0681
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32f45d65
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x32fa5581
- (void)setInteractionAssistantGestureRecognizers;	// 0x330f2b15
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x32f646a1
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x32f4c6cd
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x330f2a45
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x32f46051
// converted property setter: - (void)setMarkedText:(id)text;	// 0x3305fa91
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x330f3c45
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x330f62fd
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32f45ddd
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x330f1d21
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32f45da1
- (void)setMinimumSize:(CGSize)size;	// 0x32f45b29
- (void)setOpaque:(BOOL)opaque;	// 0x32f46255
- (void)setPaused:(BOOL)paused;	// 0x330f498d
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x330f49a1
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x330f6631
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x33185911
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x33185971
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x33185941
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x33185a31
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x33185ad9
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x33185a01
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x331859d1
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x33185e9d
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x33185c8d
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x32fa01b1
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32f9ff7d
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x330f5f19
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x330f654d
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x32fbe475
- (void)setSelectionToEnd;	// 0x33185f29
- (void)setSelectionToStart;	// 0x33185f7d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x33185b71
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x33186969
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x330f0409
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x330f1cf5
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x330f0385
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x32f646b5
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x32f4c88d
// converted property setter: - (void)setText:(id)text;	// 0x330f45d9
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x33006e05
- (void)setTilingArea:(int)area;	// 0x32f4b131
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x330f0699
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x3306179d
- (void)setUserStyleSheet:(id)sheet;	// 0x33057c0d
- (void)setUsesUIScrollView;	// 0x32f634ad
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x32f45e51
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x330f0421
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x330f1d0d
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x330f03f5
- (void)smartExtendRangedSelection:(int)selection;	// 0x33185e69
// converted property getter: - (id)standaloneEditingElement;	// 0x330f2a35
- (BOOL)startActionSheet;	// 0x330fa81d
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x331861a5
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x330fa6fd
- (void)stopLoading:(id)loading;	// 0x33012849
- (id)subviews;	// 0x32f45ef1
- (id)superviewForSheet;	// 0x330fb6e5
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x330f1151
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x330fb5b1
- (void)takeTraitsFrom:(id)from;	// 0x330f4b81
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x330fa76d
// converted property getter: - (id)text;	// 0x330f4701
- (id)textColorForCaretSelection;	// 0x330f3d89
// declared property getter: - (id)textDocument;	// 0x330f65bd
- (id)textFormElement;	// 0x330f2a1d
- (id)textInDOMRange:(id)domrange;	// 0x32fd9139
- (id)textInRange:(id)range;	// 0x32fb6ff1
- (id)textInputTraits;	// 0x32f45aa9
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32f9fe19
- (void)toggleBaseWritingDirection;	// 0x33185889
// declared property getter: - (id)tokenizer;	// 0x32fa6e41
// converted property getter: - (id)undoManager;	// 0x32fa4929
- (id)undoManagerForWebView:(id)webView;	// 0x32fa4949
- (void)unmarkText;	// 0x3301d515
- (void)updateInteractionElements;	// 0x330f1c75
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x330f2a71
- (void)updateSelection;	// 0x330f4c99
// converted property getter: - (BOOL)updatesScrollView;	// 0x330f06b1
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x32f6365d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x330fa7b9
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x32f4b3b5
- (float)viewportHeight;	// 0x32f64599
- (float)viewportWidth;	// 0x32f6420d
- (CGRect)visibleBounds;	// 0x32fc46f9
- (CGRect)visibleContentFrame;	// 0x330f5691
- (CGRect)visibleFrame;	// 0x330f566d
- (CGRect)visibleRectForSelecting;	// 0x330fd931
// converted property getter: - (id)webSelectionAssistant;	// 0x330f565d
- (void)webThreadWebViewDidLayout:(id)webThreadWebView;	// 0x330f04b9
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x32ee7899
// converted property getter: - (id)webView;	// 0x32ee796d
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x330f0631
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x32f4aca1
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node;	// 0x330f14dd
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x3300ade1
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x32f4c365
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x32f45e99
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x330f4ae5
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x330fafe5
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x32f4c241
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x3300ae55
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x3300ad79
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x330084dd
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x33013179
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x3300aad9
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x32fa32f9
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x33008edd
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x330f16a9
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x330f4a95
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x32f48569
- (void)webViewDidDrawTiles:(id)webView;	// 0x32f487d1
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x330f0515
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x330fb015
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x330f04cd
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x32f4472d
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x32fbdc7d
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x330fa921
- (void)willMoveToSuperview:(id)superview;	// 0x32f46301
- (void)willStartScroll;	// 0x33012141
- (void)willStartScrollToTop;	// 0x330f5709
- (void)willStartZoom;	// 0x330f5779
- (id)wordAtPoint:(CGPoint)point;	// 0x33185c25
- (id)wordContainingCaretSelection;	// 0x330f4151
- (int)wordOffsetInRange:(id)range;	// 0x330f41ed
- (id)wordRangeContainingCaretSelection;	// 0x330f4051
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x330f0c65
@end

