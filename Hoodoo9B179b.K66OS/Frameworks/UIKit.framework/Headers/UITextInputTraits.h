/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UITextInputTraits.h"
#import "NSObject.h"
#import "UITextInputTraits_Private.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library
#import "UIKit-Structs.h"

@class UIColor, UIImage;

@protocol UITextInputTraits <NSObject>
@optional
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) int returnKeyType;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(assign, nonatomic) int spellCheckingType;
// declared property getter: - (int)autocapitalizationType;
// declared property getter: - (int)autocorrectionType;
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;
// declared property getter: - (BOOL)isSecureTextEntry;
// declared property getter: - (int)keyboardAppearance;
// declared property getter: - (int)keyboardType;
// declared property getter: - (int)returnKeyType;
// declared property setter: - (void)setAutocapitalizationType:(int)type;
// declared property setter: - (void)setAutocorrectionType:(int)type;
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;
// declared property setter: - (void)setKeyboardType:(int)type;
// declared property setter: - (void)setReturnKeyType:(int)type;
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;
// declared property setter: - (void)setSpellCheckingType:(int)type;
// declared property getter: - (int)spellCheckingType;
@end

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {
	int autocapitalizationType;	// 4 = 0x4
	int autocorrectionType;	// 8 = 0x8
	int spellCheckingType;	// 12 = 0xc
	unsigned keyboardType : 8;	// 16 = 0x10
	unsigned keyboardAppearance : 8;	// 17 = 0x11
	int returnKeyType;	// 20 = 0x14
	BOOL enablesReturnKeyAutomatically;	// 24 = 0x18
	BOOL secureTextEntry;	// 25 = 0x19
	CFCharacterSetRef textTrimmingSet;	// 28 = 0x1c
	UIColor *insertionPointColor;	// 32 = 0x20
	UIColor *selectionBarColor;	// 36 = 0x24
	UIColor *selectionHighlightColor;	// 40 = 0x28
	UIImage *selectionDragDotImage;	// 44 = 0x2c
	unsigned insertionPointWidth;	// 48 = 0x30
	int textLoupeVisibility;	// 52 = 0x34
	int textSelectionBehavior;	// 56 = 0x38
	id textSuggestionDelegate;	// 60 = 0x3c
	BOOL contentsIsSingleValue;	// 64 = 0x40
	BOOL acceptsEmoji;	// 65 = 0x41
	BOOL returnKeyGoesToNextResponder;	// 66 = 0x42
	BOOL acceptsFloatingKeyboard;	// 67 = 0x43
	BOOL acceptsSplitKeyboard;	// 68 = 0x44
	BOOL richText;	// 69 = 0x45
	BOOL displaySecureTextUsingPlainText;	// 70 = 0x46
	BOOL learnsCorrections;	// 71 = 0x47
	int emptyContentReturnKeyType;	// 72 = 0x48
	int shortcutConversionType;	// 76 = 0x4c
	BOOL suppressReturnKeyStyling;	// 80 = 0x50
	BOOL forceEnableDictation;	// 81 = 0x51
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x32f31ba5; S=0x32f47e01; @synthesize
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;	// G=0x32f31bd5; S=0x3312bde9; @synthesize
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;	// G=0x32f31be5; S=0x3312bdf9; @synthesize
@property(assign, nonatomic) int autocapitalizationType;	// G=0x32f31a79; S=0x32f45af9; @synthesize
@property(assign, nonatomic) int autocorrectionType;	// G=0x32f31a89; S=0x32f085f1; @synthesize
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x32f31b95; S=0x32fe6ca1; @synthesize
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;	// G=0x32f31c05; S=0x3312be09; @synthesize
@property(assign, nonatomic) int emptyContentReturnKeyType;	// G=0x32f31bc5; S=0x3312bdc9; @synthesize
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// G=0x32f31ad9; S=0x32f081b5; @synthesize
@property(assign, nonatomic) BOOL forceEnableDictation;	// G=0x3312be39; S=0x3312be49; @synthesize
@property(retain, nonatomic) UIColor *insertionPointColor;	// G=0x32f31b15; S=0x32f04f25; @synthesize
@property(assign, nonatomic) unsigned insertionPointWidth;	// G=0x32f31b55; S=0x3312bdb9; @synthesize
@property(assign, nonatomic) int keyboardAppearance;	// G=0x32f31ab9; S=0x3312bda9; @synthesize
@property(assign, nonatomic) int keyboardType;	// G=0x32f31aa9; S=0x32f45b19; @synthesize
@property(assign, nonatomic) BOOL learnsCorrections;	// G=0x32f31c15; S=0x3312be19; @synthesize
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;	// G=0x32f31bb5; S=0x3312bdd9; @synthesize
@property(assign, nonatomic) int returnKeyType;	// G=0x32f31ac9; S=0x32f081a5; @synthesize
@property(assign, nonatomic, getter=isRichText) BOOL richText;	// G=0x32f31bf5; S=0x3301a7a1; @synthesize
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// G=0x32ed70b5; S=0x3312b3b1; @synthesize
@property(retain, nonatomic) UIColor *selectionBarColor;	// G=0x32f31b25; S=0x32f04f49; @synthesize
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// G=0x32f31b45; S=0x32f05059; @synthesize
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// G=0x32f31b35; S=0x32f05035; @synthesize
@property(assign, nonatomic) int shortcutConversionType;	// G=0x32f31c25; S=0x3312be29; @synthesize
@property(assign, nonatomic) int spellCheckingType;	// G=0x32f31a99; S=0x32f45b09; @synthesize
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;	// G=0x32f31c35; S=0x33031a49; @synthesize
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x32f31b65; S=0x32f84035; @synthesize
@property(assign, nonatomic) int textSelectionBehavior;	// G=0x32f31b75; S=0x32fa2635; @synthesize
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x32f31b85; S=0x32fe6cb1; @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x32ed6ebd; S=0x32f31ae9; @dynamic
+ (id)defaultTextInputTraits;	// 0x33012795
+ (BOOL)keyboardTypeRequiresASCIICapable:(int)capable;	// 0x32fa6665
+ (id)traitsByAdoptingTraits:(id)traits;	// 0x32fa5841
- (id)init;	// 0x32f04c09
// declared property getter: - (BOOL)acceptsEmoji;	// 0x32f31ba5
// declared property getter: - (BOOL)acceptsFloatingKeyboard;	// 0x32f31bd5
// declared property getter: - (BOOL)acceptsSplitKeyboard;	// 0x32f31be5
// declared property getter: - (int)autocapitalizationType;	// 0x32f31a79
// declared property getter: - (int)autocorrectionType;	// 0x32f31a89
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x32f31b95
- (id)copyWithZone:(NSZone *)zone;	// 0x32f3101d
- (void)dealloc;	// 0x32f438fd
- (id)description;	// 0x3312b3dd
- (id)dictionaryRepresentation;	// 0x3312b14d
// declared property getter: - (BOOL)displaySecureTextUsingPlainText;	// 0x32f31c05
// declared property getter: - (int)emptyContentReturnKeyType;	// 0x32f31bc5
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;	// 0x32f31ad9
// declared property getter: - (BOOL)forceEnableDictation;	// 0x3312be39
// declared property getter: - (id)insertionPointColor;	// 0x32f31b15
// declared property getter: - (unsigned)insertionPointWidth;	// 0x32f31b55
- (BOOL)isEqual:(id)equal;	// 0x3312b9a5
// declared property getter: - (BOOL)isRichText;	// 0x32f31bf5
// declared property getter: - (BOOL)isSecureTextEntry;	// 0x32ed70b5
// declared property getter: - (int)keyboardAppearance;	// 0x32f31ab9
// declared property getter: - (int)keyboardType;	// 0x32f31aa9
// declared property getter: - (BOOL)learnsCorrections;	// 0x32f31c15
// declared property getter: - (BOOL)returnKeyGoesToNextResponder;	// 0x32f31bb5
// declared property getter: - (int)returnKeyType;	// 0x32f31ac9
// declared property getter: - (id)selectionBarColor;	// 0x32f31b25
// declared property getter: - (id)selectionDragDotImage;	// 0x32f31b45
// declared property getter: - (id)selectionHighlightColor;	// 0x32f31b35
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x32f47e01
// declared property setter: - (void)setAcceptsFloatingKeyboard:(BOOL)keyboard;	// 0x3312bde9
// declared property setter: - (void)setAcceptsSplitKeyboard:(BOOL)keyboard;	// 0x3312bdf9
// declared property setter: - (void)setAutocapitalizationType:(int)type;	// 0x32f45af9
// declared property setter: - (void)setAutocorrectionType:(int)type;	// 0x32f085f1
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x32fe6ca1
// declared property setter: - (void)setDisplaySecureTextUsingPlainText:(BOOL)text;	// 0x3312be09
// declared property setter: - (void)setEmptyContentReturnKeyType:(int)type;	// 0x3312bdc9
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;	// 0x32f081b5
// declared property setter: - (void)setForceEnableDictation:(BOOL)dictation;	// 0x3312be49
// declared property setter: - (void)setInsertionPointColor:(id)color;	// 0x32f04f25
// declared property setter: - (void)setInsertionPointWidth:(unsigned)width;	// 0x3312bdb9
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;	// 0x3312bda9
// declared property setter: - (void)setKeyboardType:(int)type;	// 0x32f45b19
// declared property setter: - (void)setLearnsCorrections:(BOOL)corrections;	// 0x3312be19
// declared property setter: - (void)setReturnKeyGoesToNextResponder:(BOOL)nextResponder;	// 0x3312bdd9
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x32f081a5
// declared property setter: - (void)setRichText:(BOOL)text;	// 0x3301a7a1
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;	// 0x3312b3b1
// declared property setter: - (void)setSelectionBarColor:(id)color;	// 0x32f04f49
// declared property setter: - (void)setSelectionDragDotImage:(id)image;	// 0x32f05059
// declared property setter: - (void)setSelectionHighlightColor:(id)color;	// 0x32f05035
// declared property setter: - (void)setShortcutConversionType:(int)type;	// 0x3312be29
// declared property setter: - (void)setSpellCheckingType:(int)type;	// 0x32f45b09
// declared property setter: - (void)setSuppressReturnKeyStyling:(BOOL)styling;	// 0x33031a49
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x32f84035
// declared property setter: - (void)setTextSelectionBehavior:(int)behavior;	// 0x32fa2635
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x32fe6cb1
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x32f31ae9
- (void)setToDefaultValues;	// 0x32f04c51
- (void)setToSecureValues;	// 0x3312b0ad
// declared property getter: - (int)shortcutConversionType;	// 0x32f31c25
// declared property getter: - (int)spellCheckingType;	// 0x32f31a99
// declared property getter: - (BOOL)suppressReturnKeyStyling;	// 0x32f31c35
- (void)takeTraitsFrom:(id)from;	// 0x32f31069
// declared property getter: - (int)textLoupeVisibility;	// 0x32f31b65
// declared property getter: - (int)textSelectionBehavior;	// 0x32f31b75
// declared property getter: - (id)textSuggestionDelegate;	// 0x32f31b85
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x32ed6ebd
@end

