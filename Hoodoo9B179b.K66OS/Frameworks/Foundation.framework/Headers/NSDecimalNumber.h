/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
@private
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x310b28e1
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x310b29e5
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x310b29a5
+ (id)decimalNumberWithString:(id)string;	// 0x310b2a35
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x310b2a65
+ (id)defaultBehavior;	// 0x310b372d
+ (id)maximumDecimalNumber;	// 0x310b2c79
+ (id)minimumDecimalNumber;	// 0x310b2c0d
+ (id)notANumber;	// 0x310b2d95
+ (id)numberWithBool:(BOOL)aBool;	// 0x310b4c2d
+ (id)numberWithChar:(BOOL)aChar;	// 0x310b47f9
+ (id)numberWithDouble:(double)aDouble;	// 0x310b4bdd
+ (id)numberWithFloat:(float)aFloat;	// 0x310b4b91
+ (id)numberWithInt:(int)int;	// 0x310b4929
+ (id)numberWithInteger:(int)integer;	// 0x310b4975
+ (id)numberWithLong:(long)aLong;	// 0x310b4a59
+ (id)numberWithLongLong:(long long)longLong;	// 0x310b4af1
+ (id)numberWithShort:(short)aShort;	// 0x310b4891
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x310b4845
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x310b49c1
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x310b4a0d
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x310b4aa5
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x310b4b41
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x310b48dd
+ (id)one;	// 0x310b2d25
+ (void)setDefaultBehavior:(id)behavior;	// 0x310b36d9
+ (id)zero;	// 0x310b2ce5
- (id)initWithCoder:(id)coder;	// 0x310b2b89
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x310b2ad5
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x310b2a99
- (id)initWithString:(id)string;	// 0x310b2b11
- (id)initWithString:(id)string locale:(id)locale;	// 0x310b2b4d
- (BOOL)boolValue;	// 0x310b3b01
- (BOOL)charValue;	// 0x310b3985
- (Class)classForCoder;	// 0x310b379d
- (int)compare:(id)compare;	// 0x310b2e05
- (id)copy;	// 0x310b291d
- (id)copyWithZone:(NSZone *)zone;	// 0x310b292d
- (id)decimalNumberByAdding:(id)adding;	// 0x310b2fc9
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x310b3019
- (id)decimalNumberByDividingBy:(id)by;	// 0x310b3395
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x310b33e5
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x310b32b9
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x310b3309
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x310b3545
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x310b3595
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x310b3471
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x310b34c1
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x310b3619
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x310b318d
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x310b31cd
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x310b31dd
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x310b322d
- (XXStruct_9isexA)decimalValue;	// 0x310b2be1
- (id)description;	// 0x310b2bc5
- (id)descriptionWithLocale:(id)locale;	// 0x310b2bd9
- (double)doubleValue;	// 0x310b2ed5
- (void)encodeWithCoder:(id)coder;	// 0x310b37b9
- (float)floatValue;	// 0x310b3add
- (void)getValue:(void *)value;	// 0x310b2fad
- (int)intValue;	// 0x310b3a15
- (BOOL)isEqual:(id)equal;	// 0x310b2e81
- (long long)longLongValue;	// 0x310b3aa5
- (long)longValue;	// 0x310b3a5d
- (const char *)objCType;	// 0x310b2ec9
- (short)shortValue;	// 0x310b39cd
- (unsigned char)unsignedCharValue;	// 0x310b39a9
- (unsigned)unsignedIntValue;	// 0x310b3a39
- (unsigned long long)unsignedLongLongValue;	// 0x310b3ac1
- (unsigned long)unsignedLongValue;	// 0x310b3a81
- (unsigned short)unsignedShortValue;	// 0x310b39f1
@end

