/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class AVPlayerItemInternal, NSError, NSString, NSDate;

@interface AVPlayerItem : NSObject <NSCopying> {
@private
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x30aca421; S=0x30aca4d5; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x30aca589; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x30aca69d; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x30aca85d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x30aca749; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x30aca7b1; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x30aca5f1; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x30ac6875; S=0x30ac6a21; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x30aca135; 
@property(retain) id audioMix;	// G=0x30ac7129; S=0x30ac7305; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x30aca115; 
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x30acb881; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x30aca189; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x30ac6ea5; S=0x30ac7051; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x30ac6b8d; S=0x30ac6d39; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x30acb83d; S=0x30acb7a1; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x30acb999; S=0x30acb919; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x30ac3cc1; @dynamic
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x30ac5dfd; S=0x30ac5fd1; converted property
@property(retain) id gaplessInfo;	// G=0x30ac8419; S=0x30ac87bd; converted property
@property(retain) id initialDate;	// G=0x30ac5ad5; S=0x30ac5b19; converted property
@property(retain) id initialEstimatedDate;	// G=0x30ac5bfd; S=0x30ac5c41; converted property
@property(assign) BOOL limitReadAhead;	// G=0x30ac655d; S=0x30ac6709; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x30ac9b35; S=0x30ac9b55; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x30ac61d1; S=0x30ac63a5; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x30ac89b1; S=0x30ac8911; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x30ac3ca1; @dynamic
@property(retain) id videoComposition;	// G=0x30ac73d5; S=0x30ac7419; converted property
@property(assign) float volumeAdjustment;	// G=0x30ac8ae5; S=0x30ac8a45; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x30ac15c5
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x30ac15b1
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x30aca1dd
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x30aca3c1
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x30ac6af5
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x30aca0f5
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x30ac73d1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x30ac7125
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x30ac6e0d
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x30ac60f1
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x30ac889d
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x30ac67dd
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x30aca109
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x30ac9c21
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x30aca0fd
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x30aca101
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x30aca0f9
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x30aca10d
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x30ac64c5
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x30aca105
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x30ac89d1
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x30aca0f1
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x30aca111
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x30ac76d1
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x30ac8b05
+ (void)initialize;	// 0x30ac1551
+ (id)playerItemWithAsset:(id)asset;	// 0x30ac1621
+ (id)playerItemWithURL:(id)url;	// 0x30ac15d9
- (id)init;	// 0x30ac1969
- (id)initWithAsset:(id)asset;	// 0x30ac1ae1
- (id)initWithURL:(id)url;	// 0x30ac1a25
- (int)_CreateSeekID;	// 0x30ac51a5
- (id)_URL;	// 0x30ac3851
- (void)_addFPListeners;	// 0x30ac4621
- (void)_addSyncLayer:(id)layer;	// 0x30ac9ec9
- (BOOL)_alwaysMonitorsPlayability;	// 0x30ac67e1
- (void)_applyAudioMix;	// 0x30ac716d
- (void)_applyInitialAudioMix;	// 0x30ac72ad
- (void)_applyMediaSelectionOptions;	// 0x30ac8d3d
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x30ac8ec9
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x30ac2f9d
- (long long)_availableFileSize;	// 0x30acb715
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30ac9131
- (id)_cachedValueForKey:(id)key;	// 0x30ac25c5
- (BOOL)_canPlayFastForward;	// 0x30ac4cbd
- (BOOL)_canPlayFastReverse;	// 0x30ac4e15
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x30ac5201
- (void)_changeStatusToFailedWithError:(id)error;	// 0x30ac3d05
- (void)_configurePlaybackItemForPlayerType:(int)playerType;	// 0x30ac2889
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x30ac6e11
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x30ac6af9
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x30ac2f05
- (void)_createPlayerItemInternal;	// 0x30ac1669
- (void)_detachFromPlayer;	// 0x30ac370d
- (void)_didAccessKVOForKey:(id)key;	// 0x30ac261d
- (XXStruct_pwHToB)_duration;	// 0x30ac3e85
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x30ac9c25
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x30ac2585
- (long long)_fileSize;	// 0x30acb689
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x30ac5d21
- (id)_fpNotificationNames;	// 0x30ac44a1
- (BOOL)_hasEnabledVideoMedia;	// 0x30ac9fc1
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x30ac3bf1
- (void)_insertAfterItem:(id)item;	// 0x30ac3771
- (void)_invokeReadyForEnqueueingHandlers;	// 0x30ac4a29
- (BOOL)_isCurrentPlayerItem;	// 0x30ac2d71
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x30aca421
// declared property getter: - (BOOL)_isRental;	// 0x30aca589
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x30aca749
- (void)_kickAssetObserversIfAppropriate;	// 0x30ac3b49
- (BOOL)_limitReadAhead;	// 0x30ac64c9
- (id)_loadedTimeRanges;	// 0x30ac80b5
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x30ac39c9
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x30ac4b25
- (id)_nextItem;	// 0x30ac3731
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x30ac9f5d
- (id)_playbackProperties;	// 0x30ac845d
- (id)_player;	// 0x30ac2d45
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x30ac3721
- (id)_playerConnection;	// 0x30ac2e89
- (CGSize)_presentationSize;	// 0x30ac4f6d
- (id)_previousItem;	// 0x30ac3751
- (id)_propertyStorage;	// 0x30ac25a5
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x30ac6951
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x30ac6f81
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x30ac6c69
- (void)_quietlySetEQPreset:(int)preset;	// 0x30acb5bd
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30ac5f0d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x30ac6639
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x30ac8501
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30ac62e1
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x30ac88a1
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x30ac89d5
- (void)_removeFPListeners;	// 0x30ac47fd
- (void)_removeFromItems;	// 0x30ac37e5
- (void)_removeSyncLayer:(id)layer;	// 0x30ac9e7d
// declared property getter: - (id)_rentalExpirationDate;	// 0x30aca69d
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x30aca85d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x30aca7b1
// declared property getter: - (id)_rentalStartDate;	// 0x30aca5f1
- (void)_respondToBecomingReadyForBasicInspection;	// 0x30ac4941
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x30ac60f5
- (id)_seekableTimeRanges;	// 0x30ac7d51
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30ac91f5
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30ac9305
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x30ac9471
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x30ac9069
- (id)_selectedMediaOptionInAlternateTrackGroup:(id)alternateTrackGroup;	// 0x30ac9559
- (id)_selectedMediaOptionInKeyValueGroup:(id)keyValueGroup;	// 0x30ac98a1
- (void)_setAsset:(id)asset;	// 0x30ac38b5
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x30ac3a89
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x30ac3911
- (void)_setAudibleDRMInfo:(id)info;	// 0x30acb519
- (void)_setEQPreset:(int)preset;	// 0x30acb62d
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x30ac8ff5
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x30aca4d5
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x30ac2d91
- (void)_setPlayerConnection:(id)connection;	// 0x30ac2ea9
- (void)_setRampInOutInfo:(id)outInfo;	// 0x30acb475
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x30ac9df5
- (void)_setTimedMetadata:(id)metadata;	// 0x30ac9d81
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x30ac396d
- (void)_setURL:(id)url;	// 0x30ac3871
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x30ac76d5
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x30ac7865
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x30ac77e1
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x30ac7771
- (void)_setVideoCompositor:(id)compositor;	// 0x30ac78b5
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x30ac2565
- (id)_trackWithTrackID:(int)trackID;	// 0x30ac43d9
- (id)_tracks;	// 0x30ac4065
- (id)_unregisterAndReturnRetainedSeekCompletionHandler;	// 0x30ac53a9
- (id)_weakReference;	// 0x30ac2545
- (void)_willAccessKVOForKey:(id)key;	// 0x30ac25f1
- (id)accessLog;	// 0x30aca909
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x30ac2709
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x30ac6875
- (id)asset;	// 0x30ac3e41
// converted property getter: - (id)audioMix;	// 0x30ac7129
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x30acb881
- (BOOL)canPlayFastForward;	// 0x30ac4d39
- (BOOL)canPlayFastReverse;	// 0x30ac4e91
- (void)cancelPendingSeeks;	// 0x30ac5981
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x30ac6ea5
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x30ac6b8d
- (id)copyWithZone:(NSZone *)zone;	// 0x30ac1fe9
- (id)currentDate;	// 0x30ac5a09
- (id)currentEstimatedDate;	// 0x30ac5b75
- (XXStruct_pwHToB)currentTime;	// 0x30ac50f1
// declared property getter: - (id)dataYouTubeID;	// 0x30acb83d
- (void)dealloc;	// 0x30ac1bc1
- (id)description;	// 0x30ac23dd
- (void)didChangeValueForKey:(id)key;	// 0x30ac26a9
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x30acb9b9
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x30acb999
- (XXStruct_pwHToB)duration;	// 0x30ac3f29
// declared property getter: - (id)error;	// 0x30ac3cc1
- (id)errorLog;	// 0x30aca9d5
- (void)finalize;	// 0x30ac1ee5
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x30ac5dfd
// converted property getter: - (id)gaplessInfo;	// 0x30ac8419
// converted property getter: - (id)initialDate;	// 0x30ac5ad5
// converted property getter: - (id)initialEstimatedDate;	// 0x30ac5bfd
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x30aca135
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x30aca115
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x30aca189
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x30ac9b35
- (BOOL)isPlaybackBufferEmpty;	// 0x30ac7b5d
- (BOOL)isPlaybackBufferFull;	// 0x30ac7a65
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x30ac796d
// converted property getter: - (BOOL)limitReadAhead;	// 0x30ac655d
- (id)loadedTimeRanges;	// 0x30ac8381
- (id)playabilityMetrics;	// 0x30ac7ccd
- (CGSize)presentationSize;	// 0x30ac4fe5
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x30ac7c55
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x30ac61d1
- (BOOL)seekToDate:(id)date;	// 0x30ac5a91
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x30ac53f5
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x30ac54a9
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x30ac542d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x30ac5511
- (id)seekableTimeRanges;	// 0x30ac801d
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30ac9535
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x30ac8c41
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x30ac9a95
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x30ac8b09
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x30ac6a21
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x30ac7305
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x30ac7051
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x30ac6d39
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x30acb7a1
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x30acb919
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30ac5fd1
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x30ac87bd
// converted property setter: - (void)setInitialDate:(id)date;	// 0x30ac5b19
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x30ac5c41
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x30ac6709
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x30ac9b55
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30ac63a5
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x30ac8911
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x30ac7419
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x30ac8a45
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x30ac89b1
// declared property getter: - (int)status;	// 0x30ac3ca1
- (void)stepByCount:(int)count;	// 0x30ac5c9d
- (id)timedMetadata;	// 0x30ac9d3d
- (id)tracks;	// 0x30ac4321
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x30ac24bd
// converted property getter: - (id)videoComposition;	// 0x30ac73d5
// converted property getter: - (float)volumeAdjustment;	// 0x30ac8ae5
- (void)willChangeValueForKey:(id)key;	// 0x30ac2649
@end

