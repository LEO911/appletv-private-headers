/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 */

#import "NSObject.h"
#import "CoreFoundation-Structs.h"
#import "NSCopying.h"
#import "NSCoding.h"


@interface NSCalendar : NSObject <NSCopying, NSCoding> {
}
@property(assign) unsigned firstWeekday;	// G=0x30da070d; S=0x30da06e9; converted property
@property(retain) id gregorianStartDate;	// G=0x30da077d; S=0x30da0779; converted property
@property(retain) id locale;	// G=0x30da067d; S=0x30da0659; converted property
@property(assign) unsigned minimumDaysInFirstWeek;	// G=0x30da0755; S=0x30da0731; converted property
@property(retain) id timeZone;	// G=0x30da06c5; S=0x30da06a1; converted property
+ (id)allocWithZone:(NSZone *)zone;	// 0x30d2e3e9
+ (id)currentCalendar;	// 0x30d30d6d
+ (void)initialize;	// 0x30d2e3bd
- (id)init;	// 0x30da0415
- (id)initWithCalendarIdentifier:(id)calendarIdentifier;	// 0x30da0611
- (id)initWithCoder:(id)coder;	// 0x30da0609
- (id)AMSymbol;	// 0x30da0bcd
- (id)PMSymbol;	// 0x30da0c51
- (unsigned char)_addComponents:(double *)components :(unsigned long)arg2 :(const char *)arg3 :(void *)arg4;	// 0x30da19cd
- (unsigned long)_cfTypeID;	// 0x30da0419
- (unsigned char)_composeAbsoluteTime:(double *)time :(const char *)arg2 :(void *)arg3;	// 0x30da158d
- (id)_copyLocale;	// 0x30da08b1
- (id)_copyTimeZone;	// 0x30da08d9
- (unsigned char)_decomposeAbsoluteTime:(double)time :(const char *)arg2 :(void *)arg3;	// 0x30da175d
- (unsigned char)_diffComponents:(double)components :(double)arg2 :(unsigned long)arg3 :(const char *)arg4 :(void *)arg5;	// 0x30da1bc9
- (id)_gregorianStartDate;	// 0x30da0911
- (XXStruct_K5nmsA)_maximumRangeOfUnit:(unsigned)unit;	// 0x30da13d5
- (XXStruct_K5nmsA)_minimumRangeOfUnit:(unsigned)unit;	// 0x30da1389
- (long)_ordinalityOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forAT:(double)at;	// 0x30da149d
- (XXStruct_K5nmsA)_rangeOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forAT:(double)at;	// 0x30da1421
- (unsigned char)_rangeOfUnit:(unsigned)unit startTime:(double *)time interval:(double *)interval forAT:(double)at;	// 0x30da14f1
- (void)_setGregorianStartDate:(id)date;	// 0x30da0901
- (id)calendarIdentifier;	// 0x30da0635
- (id)components:(unsigned)components fromDate:(id)date;	// 0x30da0845
- (id)components:(unsigned)components fromDate:(id)date toDate:(id)date3 options:(unsigned)options;	// 0x30da088d
- (id)copyWithZone:(NSZone *)zone;	// 0x30da04f1
- (id)dateByAddingComponents:(id)components toDate:(id)date options:(unsigned)options;	// 0x30da0869
- (id)dateFromComponents:(id)components;	// 0x30da0821
- (void)encodeWithCoder:(id)coder;	// 0x30da060d
- (id)eraSymbols;	// 0x30da0939
// converted property getter: - (unsigned)firstWeekday;	// 0x30da070d
// converted property getter: - (id)gregorianStartDate;	// 0x30da077d
- (unsigned)hash;	// 0x30da0445
- (BOOL)isEqual:(id)equal;	// 0x30da046d
// converted property getter: - (id)locale;	// 0x30da067d
- (id)longEraSymbols;	// 0x30da0cd5
- (NSRange)maximumRangeOfUnit:(unsigned)unit;	// 0x30da07a9
// converted property getter: - (unsigned)minimumDaysInFirstWeek;	// 0x30da0755
- (NSRange)minimumRangeOfUnit:(unsigned)unit;	// 0x30da0781
- (id)monthSymbols;	// 0x30da09bd
- (unsigned)ordinalityOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x30da07f9
- (id)quarterSymbols;	// 0x30da1179
- (NSRange)rangeOfUnit:(unsigned)unit inUnit:(unsigned)unit2 forDate:(id)date;	// 0x30da07d1
- (BOOL)rangeOfUnit:(unsigned)unit startDate:(id *)date interval:(double *)interval forDate:(id)date4;	// 0x30da081d
// converted property setter: - (void)setFirstWeekday:(unsigned)weekday;	// 0x30da06e9
// converted property setter: - (void)setGregorianStartDate:(id)date;	// 0x30da0779
// converted property setter: - (void)setLocale:(id)locale;	// 0x30da0659
// converted property setter: - (void)setMinimumDaysInFirstWeek:(unsigned)firstWeek;	// 0x30da0731
// converted property setter: - (void)setTimeZone:(id)zone;	// 0x30da06a1
- (id)shortMonthSymbols;	// 0x30da0a41
- (id)shortQuarterSymbols;	// 0x30da11fd
- (id)shortStandaloneMonthSymbols;	// 0x30da0e61
- (id)shortStandaloneQuarterSymbols;	// 0x30da1305
- (id)shortStandaloneWeekdaySymbols;	// 0x30da1071
- (id)shortWeekdaySymbols;	// 0x30da0b49
- (id)standaloneMonthSymbols;	// 0x30da0ddd
- (id)standaloneQuarterSymbols;	// 0x30da1281
- (id)standaloneWeekdaySymbols;	// 0x30da0fed
// converted property getter: - (id)timeZone;	// 0x30da06c5
- (id)veryShortMonthSymbols;	// 0x30da0d59
- (id)veryShortStandaloneMonthSymbols;	// 0x30da0ee5
- (id)veryShortStandaloneWeekdaySymbols;	// 0x30da10f5
- (id)veryShortWeekdaySymbols;	// 0x30da0f69
- (id)weekdaySymbols;	// 0x30da0ac5
@end

