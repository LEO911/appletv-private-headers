/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import <NSObject.h> // Unknown library

@class NSManagedObjectContext, NSManagedObjectID;

@interface NSManagedObject : NSObject {
@private
	int _cd_rc;	// 4 = 0x4
	unsigned _cd_stateFlags;	// 8 = 0x8
	id _cd_rawData;	// 12 = 0xc
	id _cd_entity;	// 16 = 0x10
	NSManagedObjectContext *_cd_managedObjectContext;	// 20 = 0x14
	NSManagedObjectID *_cd_objectID;	// 24 = 0x18
	unsigned _cd_extraFlags;	// 28 = 0x1c
	id _cd_observationInfo;	// 32 = 0x20
	id *_cd_snapshots;	// 36 = 0x24
	unsigned _cd_lockingInfo;	// 40 = 0x28
	id _cd_queueReference;	// 44 = 0x2c
}
@property(retain) id observationInfo;	// G=0x32b3efe9; S=0x32b3efd9; converted property
+ (XXStruct_Iy8xuA *)_PFMOClassFactoryData;	// 0x32afbb11
+ (id)_PFPlaceHolderSingleton;	// 0x32b4b34d
+ (id)_PFPlaceHolderSingleton_core;	// 0x32b3eec1
+ (void)_entityDeallocated;	// 0x32b02d8d
+ (BOOL)_hasOverriddenAwake;	// 0x32b4acd9
+ (void)_initializeAccessorStubs;	// 0x32b4bdf9
+ (void)_initializePrimitiveAccessorStubs;	// 0x32b4b98d
+ (BOOL)_isGeneratedClass;	// 0x32af81e1
+ (BOOL)_isGeneratedClass_1;	// 0x32b4accd
+ (void)_release_1;	// 0x32b02e61
+ (id)_retain_1;	// 0x32b4b595
+ (char *)_transientPropertiesChangesMask__;	// 0x32b3eed1
+ (BOOL)_useFastValidationMethod;	// 0x32b4acd1
+ (id)alloc;	// 0x32b3f3c5
+ (unsigned)allocBatch:(id *)batch withEntity:(id)entity count:(unsigned)count;	// 0x32b4b5b9
+ (id)allocWithEntity:(id)entity;	// 0x32af8c3d
+ (id)allocWithZone:(NSZone *)zone;	// 0x32b3f3b5
+ (id)allocWithZone_10_4:(NSZone *)zone_10_4;	// 0x32b3f3a5
+ (id)alloc_10_4;	// 0x32b3f3ad
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;	// 0x32b3f375
+ (id)batchAllocateWithEntity:(id)entity insertIntoManagedObjectContext:(id)context count:(unsigned)count;	// 0x32b4b69d
+ (Class)classForEntity:(id)entity;	// 0x32af81e5
+ (BOOL)contextShouldIgnoreUnmodeledPropertyChanges;	// 0x32b09f35
+ (void)initialize;	// 0x32b0764d
+ (void)release;	// 0x32b4acd5
+ (BOOL)resolveClassMethod:(SEL)method;	// 0x32b4c511
+ (BOOL)resolveInstanceMethod:(SEL)method;	// 0x32af9b4d
+ (id)retain;	// 0x32b4acc9
- (id)init;	// 0x32b41d59
- (id)initWithEntity:(id)entity insertIntoManagedObjectContext:(id)context;	// 0x32af8df9
- (id)_allProperties__;	// 0x32b42d1d
- (int)_batch_release__;	// 0x32b003e1
- (id)_calculateDiffsBetweenOrderedSet:(id)set andOrderedSet:(id)set2;	// 0x32b42935
- (void)_chainNewError:(id)error toOriginalErrorDoublePointer:(id *)originalErrorDoublePointer;	// 0x32b42fad
- (id)_changedTransientProperties__;	// 0x32b43b81
- (id)_changedValuesForCurrentEvent;	// 0x32b428dd
- (void)_clearAllChanges__;	// 0x32b3f0d1
- (void)_clearPendingChanges__;	// 0x32b3f085
- (void)_clearRawPropertiesWithHint:(NSRange)hint;	// 0x32aff171
- (void)_clearUnprocessedChanges__;	// 0x32b3f0b9
- (void)_commitPhotoshoperyForRelationshipAtIndex:(unsigned)index newValue:(id)value;	// 0x32b43d45
- (BOOL)_defaultValidation:(id *)validation error:(id *)error;	// 0x32b4acc1
- (id)_descriptionValues;	// 0x32b41eb5
- (void)_didChangeValue:(id)value forRelationship:(id)relationship named:(id)named withInverse:(id)inverse;	// 0x32b44dfd
- (void)_excludeObject:(id)object fromPropertyWithKey:(id)key andIndex:(unsigned)index;	// 0x32b46c79
- (id)_faultHandler__;	// 0x32b43805
- (id)_generateErrorDetailForKey:(id)key withValue:(id)value;	// 0x32b43099
- (id)_generateErrorWithCode:(int)code andMessage:(id)message forKey:(id)key andValue:(id)value additionalDetail:(id)detail;	// 0x32b43229
- (id)_genericMutableOrderedSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x32b46839
- (id)_genericMutableSetValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x32b46729
- (void)_genericUpdateFromSnapshot:(id)snapshot;	// 0x32b47f85
- (id)_genericValueForKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x32afbb9d
- (BOOL)_hasAnyObservers__;	// 0x32b3f051
- (BOOL)_hasPendingChanges;	// 0x32b3f069
- (BOOL)_hasRetainedStoreResources__;	// 0x32af95b9
- (BOOL)_hasUnprocessedChanges__;	// 0x32b3f09d
- (id)_implicitObservationInfo;	// 0x32b42f19
- (void)_includeObject:(id)object intoPropertyWithKey:(id)key andIndex:(unsigned)index;	// 0x32b46949
- (id)_initWithEntity:(id)entity withID:(id)anId withHandler:(id)handler withContext:(id)context;	// 0x32af8d49
- (BOOL)_isDeallocating;	// 0x32b3ef59
- (BOOL)_isKindOfEntity:(id)entity;	// 0x32b43375
- (BOOL)_isPendingDeletion__;	// 0x32b3f159
- (BOOL)_isPendingInsertion__;	// 0x32b3f191
- (BOOL)_isPendingUpdate__;	// 0x32b3f1c9
- (BOOL)_isSuppressingChangeNotifications__;	// 0x32b3f0e9
- (BOOL)_isSuppressingKVO__;	// 0x32b3f121
- (BOOL)_isUnprocessedDeletion__;	// 0x32b3f201
- (BOOL)_isUnprocessedInsertion__;	// 0x32b3f239
- (BOOL)_isUnprocessedUpdate__;	// 0x32b3f271
- (BOOL)_isValidRelationshipDestination__;	// 0x32b46f95
- (id)_lastSnapshot__;	// 0x32b3f2b9
- (void)_maintainInverseRelationship:(id)relationship forProperty:(id)property forChange:(unsigned)change onSet:(id)set;	// 0x32b44a49
- (void)_maintainInverseRelationship:(id)relationship forProperty:(id)property oldDestination:(id)destination newDestination:(id)destination4;	// 0x32b456dd
- (id)_newAllPropertiesWithRelationshipFaultsIntact__;	// 0x32b42d71
- (id)_newChangedValuesForRefresh__;	// 0x32b43fed
- (id)_newCommittedSnapshotValues;	// 0x32b439dd
- (id)_newNestedSaveChangedValuesForParent:(id)parent;	// 0x32b461d5
- (id)_newPersistentPropertiesForConflictRecordFaultsIntact__;	// 0x32b42e6d
- (id)_newPersistentPropertiesWithRelationshipFaultsIntact__;	// 0x32b42e21
- (id)_newPropertiesForRetainedTypes:(unsigned *)retainedTypes andCopiedTypes:(unsigned *)types preserveFaults:(BOOL)faults;	// 0x32b43e1d
- (id)_newSetFromSet:(id)set byApplyingDiffs:(id)diffs;	// 0x32b43921
- (id)_newSnapshotForUndo__;	// 0x32b4447d
- (void)_nilOutReservedCurrentEventSnapshot__;	// 0x32b428a1
- (id)_originalSnapshot__;	// 0x32b3f315
- (id)_persistentProperties__;	// 0x32b42dc5
- (void)_prepropagateDeleteForMerge;	// 0x32b42f99
- (void)_propagateDelete;	// 0x32b42f85
- (void)_propagateDelete:(BOOL)aDelete;	// 0x32b45871
- (id)_referenceQueue__;	// 0x32b003d1
- (id)_reservedCurrentEventSnapshot;	// 0x32b3f2d1
- (void)_setGenericValue:(id)value forKey:(id)key withIndex:(long)index flags:(long)flags;	// 0x32b4d365
- (void)_setHasRetainedStoreResources__:(BOOL)_;	// 0x32af95cd
- (void)_setLastSnapshot__:(id)_;	// 0x32b460e5
- (void)_setObjectID__:(id)_;	// 0x32b428ed
- (void)_setOriginalSnapshot__:(id)_;	// 0x32b46171
- (void)_setPendingDeletion__:(BOOL)_;	// 0x32b3f16d
- (void)_setPendingInsertion__:(BOOL)_;	// 0x32b3f1a5
- (void)_setPendingUpdate__:(BOOL)_;	// 0x32b3f1dd
- (void)_setSuppressingChangeNotifications__:(BOOL)_;	// 0x32b3f0fd
- (void)_setSuppressingKVO__:(BOOL)_;	// 0x32b3f135
- (void)_setUnprocessedDeletion__:(BOOL)_;	// 0x32b3f215
- (void)_setUnprocessedInsertion__:(BOOL)_;	// 0x32b3f24d
- (void)_setUnprocessedUpdate__:(BOOL)_;	// 0x32b3f285
- (void)_setVersionReference__:(unsigned)_;	// 0x32b3f305
- (unsigned)_stateFlags;	// 0x32b3f2a9
- (id)_substituteEntityAndProperty:(id)property inString:(id)string;	// 0x32b430f5
- (id)_transientProperties__;	// 0x32b42eb9
- (BOOL)_tryRetain;	// 0x32b42441
- (void)_updateFromRefreshSnapshot:(id)refreshSnapshot includingTransients:(BOOL)transients;	// 0x32b486e9
- (void)_updateFromSnapshot:(id)snapshot;	// 0x32b483b9
- (void)_updateFromUndoSnapshot:(id)undoSnapshot;	// 0x32b49455
- (void)_updateToManyRelationship:(id)manyRelationship from:(id)from to:(id)to with:(id)with;	// 0x32b433a9
- (BOOL)_validateForSave:(id *)save;	// 0x32b43809
- (BOOL)_validatePropertiesWithError:(id *)error;	// 0x32b45f99
- (BOOL)_validateValue:(id *)value forProperty:(id)property andKey:(id)key withIndex:(unsigned)index error:(id *)error;	// 0x32b47021
- (unsigned)_versionReference__;	// 0x32b3f2f5
- (void)awakeFromFetch;	// 0x32afdb41
- (void)awakeFromInsert;	// 0x32b3effd
- (void)awakeFromSnapshotEvents:(unsigned)snapshotEvents;	// 0x32b3f001
- (id)changedValues;	// 0x32b3fb2d
- (id)changedValuesForCurrentEvent;	// 0x32b3f3d5
- (id)committedValuesForKeys:(id)keys;	// 0x32b3fde9
- (void)dealloc;	// 0x32b005f5
- (id)description;	// 0x32b41ddd
- (id)dictionaryWithValuesForKeys:(id)keys;	// 0x32b403ad
- (void)didAccessValueForKey:(id)key;	// 0x32b3eff9
- (void)didChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;	// 0x32b4179d
- (void)didChangeValueForKey:(id)key;	// 0x32b41869
- (void)didChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;	// 0x32b416cd
- (void)didFireFault;	// 0x32b3f045
- (void)didRefresh:(BOOL)refresh;	// 0x32b3f04d
- (void)didSave;	// 0x32b3f00d
- (void)didTurnIntoFault;	// 0x32aff341
- (void)diffOrderedSets:(id)sets :(id)arg2 :(id *)arg3 :(id *)arg4 :(id *)arg5 :(id *)arg6 :(id *)arg7;	// 0x32b476d1
- (id)entity;	// 0x32b3ef99
- (unsigned)faultingState;	// 0x32b3f011
- (void)finalize;	// 0x32b423d1
- (BOOL)hasChanges;	// 0x32b3f025
- (BOOL)hasFaultForRelationshipNamed:(id)relationshipNamed;	// 0x32b41a55
- (unsigned)hash;	// 0x32b3eed5
- (BOOL)implementsSelector:(SEL)selector;	// 0x32b4adc5
- (BOOL)isDeleted;	// 0x32b41cd9
- (BOOL)isEqual:(id)equal;	// 0x32b3ef39
- (BOOL)isFault;	// 0x32b3efc5
- (BOOL)isInserted;	// 0x32b3efa9
- (BOOL)isUpdated;	// 0x32b41d19
- (id)managedObjectContext;	// 0x32b3ef6d
- (/*function-pointer*/ void *)methodForSelector:(SEL)selector;	// 0x32b4ad61
- (id)methodSignatureForSelector:(SEL)selector;	// 0x32b4ae59
- (id)mutableArrayValueForKey:(id)key;	// 0x32b410cd
- (id)mutableOrderedSetValueForKey:(id)key;	// 0x32b40dc9
- (id)mutableSetValueForKey:(id)key;	// 0x32b40f4d
- (id)objectID;	// 0x32afef7d
// converted property getter: - (id)observationInfo;	// 0x32b3efe9
- (void)prepareForDeletion;	// 0x32b3f005
- (id)primitiveValueForKey:(id)key;	// 0x32b40c41
- (oneway void)release;	// 0x32b424a1
- (BOOL)respondsToSelector:(SEL)selector;	// 0x32b4acfd
- (id)retain;	// 0x32b425d5
- (unsigned)retainCount;	// 0x32b3ef45
- (void)setNilValueForKey:(id)key;	// 0x32b3f7c1
// converted property setter: - (void)setObservationInfo:(id)info;	// 0x32b3efd9
- (void)setPrimitiveValue:(id)value forKey:(id)key;	// 0x32b40b39
- (void)setValue:(id)value forKey:(id)key;	// 0x32b40d41
- (void)setValue:(id)value forUndefinedKey:(id)undefinedKey;	// 0x32b3f88d
- (void)setValuesForKeysWithDictionary:(id)dictionary;	// 0x32b407a1
- (BOOL)validateForDelete:(id *)aDelete;	// 0x32b41275
- (BOOL)validateForInsert:(id *)insert;	// 0x32b4122d
- (BOOL)validateForUpdate:(id *)update;	// 0x32b411e5
- (BOOL)validateValue:(id *)value forKey:(id)key error:(id *)error;	// 0x32b41659
- (id)valueForKey:(id)key;	// 0x32af991d
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x32b3f9dd
- (void)willAccessValueForKey:(id)key;	// 0x32b419a1
- (void)willChange:(unsigned)change valuesAtIndexes:(id)indexes forKey:(id)key;	// 0x32b4180d
- (void)willChangeValueForKey:(id)key;	// 0x32b41919
- (void)willChangeValueForKey:(id)key withSetMutation:(unsigned)setMutation usingObjects:(id)objects;	// 0x32b41741
- (void)willFireFault;	// 0x32b3f041
- (void)willRefresh:(BOOL)refresh;	// 0x32b3f049
- (void)willSave;	// 0x32b3f009
- (void)willTurnIntoFault;	// 0x32aff16d
@end

