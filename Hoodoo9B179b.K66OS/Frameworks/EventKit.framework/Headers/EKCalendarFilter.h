/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "NSCopying.h"
#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, NSMutableSet, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface EKCalendarFilter : NSObject <NSCopying> {
@private
	opaque_pthread_mutex_t _lock;	// 4 = 0x4
	NSMutableSet *_calendarUIDs;	// 48 = 0x30
	CalDatabase *_database;	// 52 = 0x34
	NSMutableDictionary *_queryCache;	// 56 = 0x38
	NSString *_searchTerm;	// 60 = 0x3c
	int _entityType;	// 64 = 0x40
}
@property(copy, nonatomic) NSString *searchTerm;	// G=0x30bf9189; S=0x30c354cd; @synthesize=_searchTerm
+ (void)_addCalendarUIDsFromPrefs:(id)prefs toSet:(id)set database:(CalDatabase *)database;	// 0x30bf8e89
+ (void)_addCalendarWithUID:(id)uid toSet:(id)set database:(CalDatabase *)database;	// 0x30bf8f65
+ (void)_addCalendarsForStoreWithUID:(id)uid toSet:(id)set database:(CalDatabase *)database;	// 0x30c351e9
- (id)initFilteringAllWithDatabase:(CalDatabase *)database;	// 0x30c34d45
- (id)initWithDatabase:(CalDatabase *)database;	// 0x30bf87fd
- (id)initWithDatabase:(CalDatabase *)database entityType:(int)type;	// 0x30c34d21
- (id)initWithDatabase:(CalDatabase *)database entityType:(int)type calendarUIDs:(id)uids;	// 0x30bf881d
- (id)initWithDatabase:(CalDatabase *)database entityType:(int)type showingCalendarsWithUIDs:(id)uids;	// 0x30c34df9
- (id)initWithDatabase:(CalDatabase *)database filteringCalendars:(id)calendars;	// 0x30c34e51
- (id)initWithDatabase:(CalDatabase *)database showingCalendars:(id)calendars;	// 0x30c11e41
- (id)initWithDatabase:(CalDatabase *)database showingCalendarsWithUIDs:(id)uids;	// 0x30c34d9d
- (id)initWithPersistentIdentifier:(id)persistentIdentifier database:(CalDatabase *)database;	// 0x30bf89ad
- (id)_UIDAntiSetWithCalendars:(id)calendars;	// 0x30c03b55
- (id)_UIDSetWithCalendars:(id)calendars;	// 0x30bfb865
- (id)_addFilterToQuery:(id)query creator:(/*function-pointer*/ void *)creator userInfo:(void *)info;	// 0x30c03709
- (id)_calendarUIDsFromPersistentIdentifier:(id)persistentIdentifier;	// 0x30bf8a09
- (void)_databaseWillChange:(id)_database;	// 0x30c34ead
- (id)_generateUIDSetToFilterAllCalendars;	// 0x30c34fc9
- (id)_generateUIDSetToFilterCalendars:(id)filterCalendars;	// 0x30c34ef5
- (id)_generateUIDSetToShowCalendarUIDs:(id)showCalendarUIDs;	// 0x30c34f45
- (id)_generateUIDSetToShowCalendars:(id)showCalendars;	// 0x30c11e9d
- (BOOL)_isFilteringAllWhileLocked;	// 0x30bfb7d5
- (id)calendarIDClauseForQueryWithVariableName:(id)variableName;	// 0x30c03919
- (id)copyWithZone:(NSZone *)zone;	// 0x30c35181
- (void)dealloc;	// 0x30bf9199
- (id)filterQueryForKey:(id)key prefix:(id)prefix whereClause:(id)clause creator:(/*function-pointer*/ void *)creator userInfo:(void *)info;	// 0x30c352a9
- (id)filterQueryForQueryString:(id)queryString creator:(/*function-pointer*/ void *)creator userInfo:(void *)info;	// 0x30c03691
- (id)filteredCalendars;	// 0x30c35039
- (BOOL)isCalendarUIDVisible:(id)visible;	// 0x30c0ff95
- (BOOL)isEqual:(id)equal;	// 0x30bf9061
- (BOOL)isFilteringAll;	// 0x30bfb749
- (BOOL)isShowingAll;	// 0x30bf951d
- (id)persistentIdentifier;	// 0x30bffc09
- (void)removeCalendarWithUID:(id)uid;	// 0x30c35161
// declared property getter: - (id)searchTerm;	// 0x30bf9189
// declared property setter: - (void)setSearchTerm:(id)term;	// 0x30c354cd
- (void)validate;	// 0x30c10459
- (int)visibleCalendarCountWithOptions:(int)options;	// 0x30bf9561
- (id)visibleCalendarsWithOptions:(int)options;	// 0x30bf97dd
@end

