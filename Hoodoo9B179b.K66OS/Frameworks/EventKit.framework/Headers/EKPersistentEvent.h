/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EKPersistentCalendarItem.h"
#import "EventKit-Structs.h"

@class NSURL, NSString, NSDate;

@interface EKPersistentEvent : EKPersistentCalendarItem {
	XXStruct_mY3THC _cachedDurationUnits;	// 28 = 0x1c
}
@property(copy, nonatomic) NSURL *URL;	// G=0x30c05001; S=0x30c63785; 
@property(retain) id actions;	// G=0x30c63d1d; S=0x30c63d51; converted property
@property(assign, nonatomic) int availability;	// G=0x30c63ad1; S=0x30c63aed; 
@property(readonly, assign, nonatomic) int birthdayID;	// G=0x30c637c1; 
@property(readonly, assign, nonatomic) double duration;	// G=0x30c637dd; 
@property(readonly, assign, nonatomic) XXStruct_mY3THC durationUnits;	// G=0x30bfcd4d; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x30c63dcd; 
@property(copy, nonatomic) NSDate *endDate;	// G=0x30bfcfb1; S=0x30c0e049; 
@property(readonly, assign, nonatomic) NSString *eventIdentifier;	// G=0x30c04c69; 
@property(readonly, assign, nonatomic, getter=isFloating) BOOL floating;	// G=0x30c05d3d; 
@property(readonly, assign, nonatomic, getter=isInvitation) BOOL invitation;	// G=0x30c054e9; 
@property(readonly, assign, nonatomic, getter=isMeeting) BOOL meeting;	// G=0x30c63849; 
@property(assign, nonatomic) unsigned modifiedProperties;	// G=0x30c638a1; S=0x30c638bd; 
@property(assign, nonatomic) BOOL needsOccurrenceCacheUpdate;	// G=0x30c638d9; S=0x30c638f9; 
@property(copy, nonatomic) NSDate *originalStartDate;	// G=0x30c63b79; S=0x30c63b95; 
@property(assign, nonatomic) int participationStatus;	// G=0x30c63915; S=0x30c63945; 
@property(readonly, assign, nonatomic) int pendingParticipationStatus;	// G=0x30c63975; 
@property(assign, nonatomic) unsigned privacyLevel;	// G=0x30c63b09; S=0x30c63b25; 
@property(assign, nonatomic) unsigned readStatus;	// G=0x30c056e5; S=0x30c63ab5; 
@property(copy, nonatomic) NSString *responseComment;	// G=0x30c63b41; S=0x30c63b5d; 
@property(assign, nonatomic) int status;	// G=0x30bfef35; S=0x30c63885; 
+ (id)defaultPropertiesToLoad;	// 0x30bfc3ed
+ (id)generateUniqueIDWithEvent:(id)event originalEvent:(id)event2 calendar:(id)calendar;	// 0x30c0efdd
+ (id)relations;	// 0x30bfe845
- (id)initCommon;	// 0x30bfc151
// declared property getter: - (id)URL;	// 0x30c05001
- (void)_adjustForNewCalendar;	// 0x30c0ea15
- (BOOL)_areDurationUnitsCached;	// 0x30bfce6d
- (BOOL)_hasExternalIDOrDeliverySource;	// 0x30c63ce5
- (BOOL)_hasValidEventAction;	// 0x30c63c19
- (void)_invalidateCachedDurationUnits;	// 0x30bfc195
// converted property getter: - (id)actions;	// 0x30c63d1d
- (void)addAction:(id)action;	// 0x30c63d95
- (BOOL)allowsParticipationStatusModifications;	// 0x30c052f5
// declared property getter: - (int)availability;	// 0x30c63ad1
// declared property getter: - (int)birthdayID;	// 0x30c637c1
- (int)birthdayId;	// 0x30c639a5
- (void)clearExceptionDatesAndUpdateDetachedOriginalDates;	// 0x30c0e065
- (id)committedStartDate;	// 0x30c63bb1
- (id)copyWithZone:(NSZone *)zone;	// 0x30c64475
- (void)dealloc;	// 0x30c63689
- (void)deleteFromOccurrenceDateOnward:(id)occurrenceDateOnward;	// 0x30c63fd1
- (id)description;	// 0x30c63e39
- (id)detachWithStartDate:(id)startDate newStartDate:(id)date future:(BOOL)future;	// 0x30c6469d
// declared property getter: - (double)duration;	// 0x30c637dd
// declared property getter: - (XXStruct_mY3THC)durationUnits;	// 0x30bfcd4d
// declared property getter: - (id)endDate;	// 0x30bfcfb1
- (int)entityType;	// 0x30c05ce1
// declared property getter: - (id)eventIdentifier;	// 0x30c04c69
- (id)exportToICS;	// 0x30c636b5
- (void)filterExceptionDates;	// 0x30c65285
// declared property getter: - (BOOL)isEditable;	// 0x30c63dcd
// declared property getter: - (BOOL)isFloating;	// 0x30c05d3d
// declared property getter: - (BOOL)isInvitation;	// 0x30c054e9
// declared property getter: - (BOOL)isMeeting;	// 0x30c63849
// declared property getter: - (unsigned)modifiedProperties;	// 0x30c638a1
// declared property getter: - (BOOL)needsOccurrenceCacheUpdate;	// 0x30c638d9
- (id)organizer;	// 0x30c04e71
// declared property getter: - (id)originalStartDate;	// 0x30c63b79
// declared property getter: - (int)participationStatus;	// 0x30c63915
// declared property getter: - (int)pendingParticipationStatus;	// 0x30c63975
- (void)primitiveValueChangedForKey:(id)key;	// 0x30c05add
// declared property getter: - (unsigned)privacyLevel;	// 0x30c63b09
// declared property getter: - (unsigned)readStatus;	// 0x30c056e5
- (BOOL)refresh;	// 0x30c10b0d
- (void)removeAction:(id)action;	// 0x30c63db1
// declared property getter: - (id)responseComment;	// 0x30c63b41
- (BOOL)responseMustApplyToAll;	// 0x30c639c1
// converted property setter: - (void)setActions:(id)actions;	// 0x30c63d51
// declared property setter: - (void)setAvailability:(int)availability;	// 0x30c63aed
// declared property setter: - (void)setEndDate:(id)date;	// 0x30c0e049
// declared property setter: - (void)setModifiedProperties:(unsigned)properties;	// 0x30c638bd
// declared property setter: - (void)setNeedsOccurrenceCacheUpdate:(BOOL)update;	// 0x30c638f9
// declared property setter: - (void)setOriginalStartDate:(id)date;	// 0x30c63b95
// declared property setter: - (void)setParticipationStatus:(int)status;	// 0x30c63945
// declared property setter: - (void)setPrivacyLevel:(unsigned)level;	// 0x30c63b25
// declared property setter: - (void)setReadStatus:(unsigned)status;	// 0x30c63ab5
// declared property setter: - (void)setResponseComment:(id)comment;	// 0x30c63b5d
// declared property setter: - (void)setStatus:(int)status;	// 0x30c63885
// declared property setter: - (void)setURL:(id)url;	// 0x30c63785
// declared property getter: - (int)status;	// 0x30bfef35
- (BOOL)validate:(id *)validate;	// 0x30c0e5a1
@end

