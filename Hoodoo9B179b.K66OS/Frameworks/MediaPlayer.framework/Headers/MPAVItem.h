/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class NSData, AVAsset, MPMediaItem, MPAVController, AVPlayerItem, MPAlternateTracks, NSURL, NSString, MPQueueFeeder, NSArray;

@interface MPAVItem : NSObject {
	AVAsset *_asset;	// 4 = 0x4
	dispatch_queue_s *_assetQueue;	// 8 = 0x8
	AVPlayerItem *_avPlayerItem;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	unsigned _type;	// 68 = 0x44
	float _defaultPlaybackRate;	// 72 = 0x48
	unsigned _indexInQueueFeeder;	// 76 = 0x4c
	unsigned _advancedDuringPlayback : 1;	// 80 = 0x50
	unsigned _handledFinishTime : 1;	// 80 = 0x50
	unsigned _hasPlayedThisSession : 1;	// 80 = 0x50
	unsigned _wasCountedAsSkipped : 1;	// 80 = 0x50
	unsigned _isStreamable : 2;	// 80 = 0x50
	unsigned _useCachedPlayableDuration : 1;	// 80 = 0x50
	unsigned _watchingAttributes : 1;	// 80 = 0x50
	unsigned _lyricsAvailable : 1;	// 81 = 0x51
	unsigned _delayedInvalidateCachedPlayedDurationScheduled : 1;	// 81 = 0x51
	unsigned _timeMarkersNeedLoading : 1;	// 81 = 0x51
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x3094089d; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x309408a5; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x309408ad; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x309408a9; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x30943175; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x309408a1; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x309408b5; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x309408b9; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x30941f19; S=0x30943185; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x3093fac9; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x30941ef1; S=0x309431a9; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x30941fe5; S=0x30941f69; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x309408bd; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x309408e1; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x30940909; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x309431ed; S=0x309431fd; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x309408c5; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x309408c1; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x30940965; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x3094091d; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x309427ad; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x309427ed; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x30942881; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x30942801; 
@property(readonly, assign, nonatomic) BOOL externalProtectionEnabled;	// G=0x3094276d; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x309431cd; S=0x309431dd; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x30940b61; S=0x30940ba1; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x309408dd; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x309409fd; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x30940a01; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x30940a05; S=0x30940c45; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x3094320d; S=0x3094321d; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x3094322d; S=0x3094323d; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x30940975; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x30940a89; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x309ebb05; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x3094260d; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x309429c5; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x30942b45; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x3093ff01; S=0x3093ff15; 
@property(assign, nonatomic) MPAVController *player;	// G=0x3094324d; S=0x3094325d; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x3093fca5; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x30940a8d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x30940b25; 
@property(readonly, assign, nonatomic) BOOL requiresExternalProtection;	// G=0x30942745; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x3094326d; S=0x30940c81; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x3093fe6d; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x30940a19; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x30942c45; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x30942b8d; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x309425f9; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x30941f41; S=0x3094327d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x30940f95; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x30942609; 
@property(assign) BOOL userSkippedPlayback;	// G=0x3093ffa5; S=0x3093ff7d; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x309426f1; S=0x30942719; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x30942619; 
+ (id)URLFromPath:(id)path;	// 0x3093f585
+ (unsigned)defaultScaleMode;	// 0x3093f555
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x3093f565
- (id)init;	// 0x3093f635
- (id)initWithAsset:(id)asset;	// 0x3093f6c1
- (id)initWithURL:(id)url;	// 0x3093f649
- (id)initWithURL:(id)url options:(id)options;	// 0x3093f685
- (void)_checkAllowsBlockingDurationCall;	// 0x30940d21
- (void)_delayedInvalidateCachedPlayedDuration;	// 0x30942d45
- (double)_durationFromExternalMetadataIfAvailable;	// 0x30942825
- (double)_durationInSeconds;	// 0x3093ffb9
- (void)_itemAttributeAvailableKey:(id)key;	// 0x30942d75
- (void)_loadAssetAndPlayerItem;	// 0x3093f99d
- (void)_loadTimeMarkersAsync;	// 0x30941dd1
- (void)_loadTimeMarkersBlocking;	// 0x30940f99
- (void)_realoadEmbeddedTimeMarkers;	// 0x30940ced
- (void)_releaseAllTimeMarkers;	// 0x3093f7ed
// declared property getter: - (id)album;	// 0x3094089d
// declared property getter: - (id)albumArtist;	// 0x309408a5
// declared property getter: - (unsigned)albumTrackCount;	// 0x309408ad
// declared property getter: - (unsigned)albumTrackNumber;	// 0x309408a9
- (BOOL)allowAutoChangingScaleModeToFill;	// 0x3093f551
// declared property getter: - (id)alternateTracks;	// 0x30943175
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x309409d9
- (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x309408b1
// declared property getter: - (id)artist;	// 0x309408a1
// declared property getter: - (id)artworkImageData;	// 0x309408b5
// declared property getter: - (id)artworkMIMEType;	// 0x309408b9
- (id)artworkTimeMarkerForTime:(double)time;	// 0x309420fd
// declared property getter: - (id)artworkTimeMarkers;	// 0x30941f19
// declared property getter: - (id)asset;	// 0x3093fac9
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x30942fb1
- (id)chapterTimeMarkerForTime:(double)time;	// 0x30941ff5
// declared property getter: - (id)chapterTimeMarkers;	// 0x30941ef1
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x3094230d
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x30941fe5
// declared property getter: - (id)composer;	// 0x309408bd
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x309408e1
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x30940909
- (void)dealloc;	// 0x3093f871
// declared property getter: - (float)defaultPlaybackRate;	// 0x309431ed
// declared property getter: - (unsigned)discCount;	// 0x309408c5
// declared property getter: - (unsigned)discNumber;	// 0x309408c1
// declared property getter: - (id)displayableText;	// 0x30940965
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x3094091d
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x309427ad
// declared property getter: - (double)durationFromExternalMetadata;	// 0x309427ed
// declared property getter: - (double)durationIfAvailable;	// 0x30942881
- (double)durationInSeconds;	// 0x30940001
// declared property getter: - (BOOL)durationIsValid;	// 0x30942801
// declared property getter: - (BOOL)externalProtectionEnabled;	// 0x3094276d
// declared property getter: - (id)feeder;	// 0x309431cd
- (void)flushNowPlayingCaches;	// 0x3093f96d
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x30940b61
// declared property getter: - (id)genre;	// 0x309408dd
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x309409b5
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x309409fd
// declared property getter: - (BOOL)hasDisplayableText;	// 0x30940a01
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x30940a05
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x30940eb5
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x3094320d
// declared property getter: - (BOOL)isAssetLoaded;	// 0x3094322d
- (BOOL)isAssetURLValid;	// 0x309408d9
- (BOOL)isPlaceholderForItem:(id)item;	// 0x309408d5
// declared property getter: - (BOOL)isStreamable;	// 0x30940a19
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x3093f579
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x309408c9
- (void)loadAssetAndPlayerItem;	// 0x3093f999
- (id)localeForAssetTrack:(id)assetTrack;	// 0x30940e55
- (id)localizedPositionInPlaylistString;	// 0x3094261d
// declared property getter: - (id)lyrics;	// 0x30940975
// declared property getter: - (id)mainTitle;	// 0x30940a89
// declared property getter: - (id)mediaItem;	// 0x309ebb05
- (CGSize)naturalSize;	// 0x30942f75
- (void)notePlaybackFinishedByHittingEnd;	// 0x3093fee9
- (id)path;	// 0x30940071
// declared property getter: - (unsigned long long)persistentID;	// 0x3094260d
// declared property getter: - (double)playableDuration;	// 0x309429c5
// declared property getter: - (double)playableDurationIfAvailable;	// 0x30942b45
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x3093ff01
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x30940a91
// declared property getter: - (id)player;	// 0x3094324d
// declared property getter: - (id)playerItem;	// 0x3093fca5
// declared property getter: - (id)podcastURL;	// 0x30940a8d
- (void)postDurationDidChange;	// 0x30940859
// declared property getter: - (CGSize)presentationSize;	// 0x30940b25
- (void)reevaluateType;	// 0x30942415
// declared property getter: - (BOOL)requiresExternalProtection;	// 0x30942745
- (void)resetBookkeeping;	// 0x3093fe8d
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x30940be9
- (void)setAlternateAudioTrackID:(unsigned)anId;	// 0x3093fee1
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x30943185
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x309431a9
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x30941f69
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x309431fd
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x309431dd
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x30940ba1
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x30940c45
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x3094321d
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x3094323d
- (void)setOverrideDuration:(double)duration;	// 0x30940c6d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x3093ff15
- (void)setPlaybackFinishedTime:(double)time;	// 0x3093ff19
- (void)setPlaybackStoppedTime:(double)time;	// 0x3093fee5
// declared property setter: - (void)setPlayer:(id)player;	// 0x3094325d
- (void)setRating:(float)rating;	// 0x3093ff31
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x30940c81
- (void)setSubtitleTrackID:(unsigned)anId;	// 0x3093ff35
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x3094327d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x3093ff39
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x3093ff51
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x3093ff7d
// declared property setter: - (void)setVideoID:(id)anId;	// 0x30942719
- (void)setupPlaybackInfo;	// 0x30940169
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x3094326d
// declared property getter: - (int)status;	// 0x3093fe6d
// declared property getter: - (double)timeOfSeekableEnd;	// 0x30942c45
// declared property getter: - (double)timeOfSeekableStart;	// 0x30942b8d
- (id)titlesForTime:(double)time;	// 0x30940f91
// declared property getter: - (unsigned)type;	// 0x309425f9
- (void)updateAttributesForDefaultsChange:(id)defaultsChange;	// 0x30940855
- (id)url;	// 0x309400f9
- (id)urlTimeMarkerForTime:(double)time;	// 0x30942205
// declared property getter: - (id)urlTimeMarkers;	// 0x30941f41
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x30940f95
// declared property getter: - (float)userRating;	// 0x30942609
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x3093ffa5
// declared property getter: - (id)videoID;	// 0x309426f1
// declared property getter: - (BOOL)wantsSubtitles;	// 0x30942619
@end

