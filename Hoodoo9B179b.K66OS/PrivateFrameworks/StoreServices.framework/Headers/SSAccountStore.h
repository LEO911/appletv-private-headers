/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import <NSObject.h> // Unknown library
#import "SSAccountStore.h"
#import "NSObject.h"

@class SSAccount, NSLock, NSArray, SSDistributedNotificationCenter;

@protocol SSAccountStore <NSObject>
@property(readonly, assign) NSArray *accounts;
@property(readonly, assign) SSAccount *activeAccount;
@property(readonly, assign) SSAccount *activeLockerAccount;
@property(readonly, assign, getter=isExpired) BOOL expired;
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier;
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier reloadIfNecessary:(BOOL)necessary;
// declared property getter: - (id)accounts;
// declared property getter: - (id)activeAccount;
// declared property getter: - (id)activeLockerAccount;
- (id)addAccount:(id)account;
// declared property getter: - (BOOL)isExpired;
- (BOOL)isExpiredForTokenType:(int)tokenType;
- (void)resetExpiration;
- (void)resetExpirationForTokenType:(int)tokenType;
- (void)setAccountCredits:(id)credits forAccountWithUniqueIdentifier:(id)uniqueIdentifier;
- (id)setActiveAccount:(id)account;
- (id)setActiveLockerAccount:(id)account;
- (void)signOutAccount:(id)account;
- (void)signOutAllAccounts;
@end

@interface SSAccountStore : NSObject <SSAccountStore> {
@private
	NSArray *_accounts;	// 4 = 0x4
	BOOL _accountsValid;	// 8 = 0x8
	NSLock *_lock;	// 12 = 0xc
	SSDistributedNotificationCenter *_notificationCenter;	// 16 = 0x10
	id _observer;	// 20 = 0x14
}
@property(readonly, assign) NSArray *accounts;	// G=0x33c8cef9; 
@property(readonly, assign) SSAccount *activeAccount;	// G=0x33c8d001; 
@property(readonly, assign) SSAccount *activeLockerAccount;	// G=0x33c8d12d; 
@property(retain) id distributedNotificationCenter;	// G=0x33c8d3b5; S=0x33c8d79d; converted property
@property(readonly, assign, getter=isExpired) BOOL expired;	// G=0x33c8d259; 
+ (id)defaultStore;	// 0x33c8ce69
+ (id)existingDefaultStore;	// 0x33c8d27d
+ (BOOL)isExpired;	// 0x33c8da05
+ (BOOL)isExpiredForTokenType:(int)tokenType;	// 0x33c8da1d
+ (void)resetExpiration;	// 0x33c8db3d
+ (void)resetExpirationForTokenType:(int)tokenType;	// 0x33c8db51
+ (void)setDefaultStore:(id)store;	// 0x33c8dbd1
+ (double)tokenExpirationInterval;	// 0x33c8cee5
- (id)init;	// 0x33c8ccc9
- (id)_accountWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x33c8dc25
- (id)_addAccount:(id)account withMessageParameters:(id)messageParameters;	// 0x33c8dce9
- (void)_invalidateAccounts;	// 0x33c8dee5
- (void)_postAccountStoreChanged;	// 0x33c8e01d
- (BOOL)_reloadAccountsIfNeeded;	// 0x33c8df21
- (void)_setAccounts:(id)accounts;	// 0x33c8e061
- (void)_signOutWithUserInfo:(id)userInfo;	// 0x33c8e0a5
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x33c8cf79
- (id)accountWithUniqueIdentifier:(id)uniqueIdentifier reloadIfNecessary:(BOOL)necessary;	// 0x33c8d2c1
// declared property getter: - (id)accounts;	// 0x33c8cef9
// declared property getter: - (id)activeAccount;	// 0x33c8d001
// declared property getter: - (id)activeLockerAccount;	// 0x33c8d12d
- (id)addAccount:(id)account;	// 0x33c8d3a1
- (void)dealloc;	// 0x33c8cda1
// converted property getter: - (id)distributedNotificationCenter;	// 0x33c8d3b5
// declared property getter: - (BOOL)isExpired;	// 0x33c8d259
- (BOOL)isExpiredForTokenType:(int)tokenType;	// 0x33c8d421
- (void)reloadAccounts;	// 0x33c8d445
- (void)resetExpiration;	// 0x33c8d495
- (void)resetExpirationForTokenType:(int)tokenType;	// 0x33c8d4b1
- (void)setAccountCredits:(id)credits forAccountWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x33c8d4cd
- (id)setActiveAccount:(id)account;	// 0x33c8d65d
- (id)setActiveLockerAccount:(id)account;	// 0x33c8d6fd
// converted property setter: - (void)setDistributedNotificationCenter:(id)center;	// 0x33c8d79d
- (void)signOutAccount:(id)account;	// 0x33c8d91d
- (void)signOutAllAccounts;	// 0x33c8d9f1
@end

