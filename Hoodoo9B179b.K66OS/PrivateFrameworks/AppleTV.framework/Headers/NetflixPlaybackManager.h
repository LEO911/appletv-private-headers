/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTV.framework/AppleTV
 */

#import <NSObject.h> // Unknown library
#import "AppleTV-Structs.h"

@class NSData, NSLock, NSMutableArray, NSDictionary;

__attribute__((visibility("hidden")))
@interface NetflixPlaybackManager : NSObject {
@private
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
	NSDictionary *testStreams_;	// 152 = 0x98
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x30555471; S=0x30555481; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x30554f05; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x30555685; S=0x3055569d; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x305556b1; S=0x305556c9; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x305555ed; S=0x305555fd; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x30554f49; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x30554fad; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x30555069; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x30555391; S=0x305553a1; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x30555639; S=0x30555651; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x3055560d; S=0x30555625; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x30555509; S=0x30555519; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x30555529; S=0x30555539; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x30555371; S=0x30550dcd; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x30555381; S=0x30550ed1; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x30555301; S=0x30555315; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x30555665; S=0x30555675; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x30555575; S=0x3055558d; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x305552e1; S=0x305552f1; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x30555339; S=0x3055534d; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x305554c9; S=0x305554d9; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x30555491; S=0x305554a5; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x305555c1; S=0x305555d9; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x305555a1; S=0x305555b1; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x305553c5; S=0x305553d5; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x305556dd; S=0x305556f5; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x30555709; S=0x3055571d; @synthesize=stalled_
@property(assign) int state;	// G=0x305554e9; S=0x305554f9; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x30555431; S=0x30555441; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x305553f9; S=0x3055540d; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x30555451; S=0x30555461; @synthesize=subtitlesTrackIndex_
@property(copy, nonatomic) NSDictionary *testStreams;	// G=0x3055574d; S=0x30555251; @synthesize=testStreams_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x30555549; S=0x30555561; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x3055572d; S=0x3055573d; @synthesize=totalNumberOfStalls_
+ (void)initialize;	// 0x30550ab9
+ (id)sharedInstance;	// 0x30550abd
- (id)init;	// 0x30550b9d
- (void)audioSelect:(id)select;	// 0x3055274d
- (void)audioSelectAsync:(id)async;	// 0x30552789
// declared property getter: - (int)audioTrackIndex;	// 0x30555471
// declared property getter: - (unsigned)bitrate;	// 0x30554f05
- (void)buffering:(double)buffering;	// 0x30551431
- (void)bufferingComplete:(double)complete;	// 0x30551545
// declared property getter: - (long long)bufferingStartBytes;	// 0x30555685
// declared property getter: - (double)bufferingStartTime;	// 0x305556b1
// declared property getter: - (BwEntry *)bwEntry;	// 0x305555ed
// declared property getter: - (long long)bytes;	// 0x30554f49
// declared property getter: - (long long)bytesForInterface;	// 0x30554fad
- (void)clearErrorStack;	// 0x305552b9
- (void)close;	// 0x3055133d
- (id)createErrorFromStack;	// 0x30552b2d
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x30555069
- (void)dealloc;	// 0x30550c91
- (void)end:(double)end reason:(id)reason;	// 0x30551161
// declared property getter: - (id)errorStack;	// 0x30555391
- (int)fetchBookmark:(id)bookmark;	// 0x30554c3d
// declared property getter: - (long long)lastBwEntryBytes;	// 0x30555639
// declared property getter: - (double)lastBwEntryTime;	// 0x3055560d
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x30555509
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x30555529
// declared property getter: - (IMediaControl *)mediaControl;	// 0x30555371
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x30555381
- (void)mediaDidAcquireLicense;	// 0x30553169
- (void)mediaDidAuthorize;	// 0x30553039
- (void)mediaDidBuildPlaylists;	// 0x30553201
- (void)mediaDidCdnSelect;	// 0x305530d1
- (void)mediaDidClose;	// 0x3055297d
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x30553461
- (void)mediaDidFailOpen:(id)media;	// 0x30552eb9
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x30555189
- (void)mediaDidHandleNccpError:(id)media;	// 0x305529f1
- (void)mediaDidLoadSubtitles:(id)media;	// 0x3055332d
- (void)mediaDidSelectAudio:(id)media;	// 0x305550a1
- (void)mediaDidSetSpeed:(float)media;	// 0x3055324d
- (void)mediaOpenComplete:(id)complete;	// 0x305528e5
- (void)mediaWillAcquireLicense;	// 0x3055311d
- (void)mediaWillAuthorize;	// 0x30552fed
- (void)mediaWillBuildPlaylists;	// 0x305531b5
- (void)mediaWillCdnSelect;	// 0x30553085
- (void)mediaWillLoadSubtitles;	// 0x305532e1
// declared property getter: - (id)movieDetails;	// 0x30555301
// declared property getter: - (int)networkInterfaceType;	// 0x30555665
- (void)networkSelection:(id)selection;	// 0x30552535
- (int)networkTypeStringToType:(id)type;	// 0x305524bd
// declared property getter: - (double)observedBitrate;	// 0x30555575
- (void)open:(id)open;	// 0x30550ef5
- (void)openAsync:(id)async;	// 0x305538cd
// declared property getter: - (BOOL)openNotificationSent;	// 0x305552e1
- (void)pause:(double)pause;	// 0x30550fa1
- (void)play:(double)play;	// 0x30550f31
// declared property getter: - (id)playReadyKey;	// 0x30555339
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x305554c9
// declared property getter: - (id)playbackCommandLock;	// 0x30555491
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x30554dc1
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x30552151
// declared property getter: - (long long)pollBytesStart;	// 0x305555c1
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x305555a1
- (void)postMediaCloseFailure;	// 0x305537c9
- (void)postMediaOpenFailure:(int)failure;	// 0x3055361d
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x305536f5
- (void)postMediaOpenSuccess:(id)success;	// 0x30553581
// declared property getter: - (id)reportableActionId;	// 0x305553c5
- (void)reposition:(double)reposition;	// 0x30551081
// declared property getter: - (double)sampleReportWindow;	// 0x305556dd
- (void)selectedPlaylist:(id)playlist;	// 0x30552261
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x30555481
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x3055569d
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x305556c9
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x305555fd
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x305553a1
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x30555651
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x30555625
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x30555519
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x30555539
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x30550dcd
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x30550ed1
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x30555315
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x30555675
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x3055558d
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x305552f1
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x3055534d
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x305554d9
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x305554a5
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x305555d9
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x305555b1
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x305553d5
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x305556f5
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x3055571d
// declared property setter: - (void)setState:(int)state;	// 0x305554f9
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x30555441
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x3055540d
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x30555461
// declared property setter: - (void)setTestStreams:(id)streams;	// 0x30555251
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x30555561
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x3055573d
// declared property getter: - (bool)stalled;	// 0x30555709
// declared property getter: - (int)state;	// 0x305554e9
- (void)stop:(double)stop;	// 0x305510f1
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x305516bd
- (void)subtitlesDisable;	// 0x3055243d
- (void)subtitlesDisableAsync;	// 0x30554afd
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x30555431
// declared property getter: - (id)subtitlesProcessingLock;	// 0x305553f9
- (void)subtitlesSelect:(id)select;	// 0x30552401
- (void)subtitlesSelectAbort;	// 0x30552479
- (void)subtitlesSelectAsync:(id)async;	// 0x30554705
// declared property getter: - (int)subtitlesTrackIndex;	// 0x30555451
// declared property getter: - (id)testStreams;	// 0x3055574d
// declared property getter: - (long long)totalBytesTransferred;	// 0x30555549
// declared property getter: - (int)totalNumberOfStalls;	// 0x3055572d
- (void)unpause:(double)unpause;	// 0x30551011
- (void)updatePts:(double)pts;	// 0x30551739
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x30551cc5
@end

