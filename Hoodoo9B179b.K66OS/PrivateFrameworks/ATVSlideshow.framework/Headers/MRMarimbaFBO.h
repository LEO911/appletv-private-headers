/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRMarimbaPlayback.h"
#import "MRMarimbaHitBlobSupport.h"
#import "MRMarimbaBasicPlayback.h"
#import <NSObject.h> // Unknown library
#import "EAGLDrawable.h"

@class MPDocument, MRRenderer, EAGLContext, NSDictionary, MRTexture;

@interface MRMarimbaFBO : NSObject <MRMarimbaHitBlobSupport, MRMarimbaPlayback, EAGLDrawable, MRMarimbaBasicPlayback> {
	MRRenderer *_renderer;	// 4 = 0x4
	MPDocument *_document;	// 8 = 0x8
	CGSize _size;	// 12 = 0xc
	BOOL _masterClockIsSet;	// 20 = 0x14
	BOOL _bailTimeWatcher;	// 21 = 0x15
	BOOL _stopWithVideo;	// 22 = 0x16
	BOOL _readOnly;	// 23 = 0x17
	EAGLContext *_context;	// 24 = 0x18
	MRTexture *_texture;	// 28 = 0x1c
}
@property(assign) BOOL bailTimeWatcher;	// G=0x355e959d; S=0x355e95ad; converted property
@property(assign, nonatomic) BOOL displaysFPS;	// G=0x355e85e9; S=0x355e860d; 
@property(retain, nonatomic) MPDocument *document;	// G=0x355e9561; S=0x355e8009; @synthesize=_document
@property(copy) NSDictionary *drawableProperties;	// G=0x355e7b35; S=0x355e7bbd; 
@property(readonly, assign, nonatomic) BOOL isPlaying;	// G=0x355e841d; 
@property(readonly, assign, nonatomic) MRRenderer *renderer;	// G=0x355e9571; @synthesize=_renderer
@property(assign, nonatomic) CGSize size;	// G=0x355e9581; S=0x355e7f9d; @synthesize=_size
@property(assign, nonatomic) BOOL stopWithVideo;	// G=0x355e8539; S=0x355e8549; 
@property(readonly, retain) MRTexture *texture;	// G=0x355e7bc1; converted property
@property(assign, nonatomic) double time;	// G=0x355e862d; S=0x355e864d; 
@property(readonly, assign, nonatomic) double timeRemaining;	// G=0x355e8691; 
@property(assign, nonatomic) float volume;	// G=0x355e86f1; S=0x355e8711; 
+ (id)fboWithDocument:(id)document size:(CGSize)size;	// 0x355e7791
+ (id)fboWithDocument:(id)document size:(CGSize)size context:(id)context;	// 0x355e7709
+ (void)releaseResources;	// 0x355e7805
- (id)init;	// 0x355e7939
- (id)_currentEffectContainer;	// 0x355e408d
- (id)_effectContainerForTime:(double)time;	// 0x355e4841
- (id)_firstEffectContainer;	// 0x355e4795
- (int)_mainLayerIndex;	// 0x355e4969
- (void)_warmupRendererThreaded:(id)threaded;	// 0x355e8a25
- (void)aspectRatioChangedTo:(id)to;	// 0x355e9339
// converted property getter: - (BOOL)bailTimeWatcher;	// 0x355e959d
- (void)beginGesture:(id)gesture;	// 0x355e6d89
- (BOOL)beginLiveUpdateForHitBlob:(id)hitBlob;	// 0x355e656d
- (id)blobHitAtPoint:(CGPoint)point fromObjectsForObjectIDs:(id)objectIDs localPoint:(CGPoint *)point3;	// 0x355e6051
- (void)callbackThread:(id)thread;	// 0x355e4a1d
- (void)cancelGesture:(id)gesture;	// 0x355e7659
- (void)cleanup;	// 0x355e7a11
- (CGPoint)convertPoint:(CGPoint)point toHitBlob:(id)hitBlob;	// 0x355e6491
- (id)currentSlide;	// 0x355e4d95
- (id)currentSlides;	// 0x355e4be5
- (void)dealloc;	// 0x355e798d
- (void)didAddEffects:(id)effects;	// 0x355e92c5
- (void)didLiveChanged:(id)changed;	// 0x355e8381
- (id)displayedEffectContainers;	// 0x355e36a1
// declared property getter: - (BOOL)displaysFPS;	// 0x355e85e9
- (void)doGesture:(id)gesture;	// 0x355e7139
// declared property getter: - (id)document;	// 0x355e9561
// declared property getter: - (id)drawableProperties;	// 0x355e7b35
- (BOOL)effect:(id)effect requestedNumberOfSlides:(unsigned)slides firstSlideIndexStillNeeded:(unsigned)needed;	// 0x355e8e79
- (BOOL)effectRequestedSlidesAfterDelay:(id)delay;	// 0x355e91a5
- (void)endGesture:(id)gesture;	// 0x355e7609
- (BOOL)endLiveUpdateForHitBlob:(id)hitBlob;	// 0x355e6989
- (BOOL)getOnScreenVertices:(CGPoint [4])vertices forHitBlob:(id)hitBlob;	// 0x355e6259
- (void)goBack;	// 0x355e8731
- (void)goForth;	// 0x355e8751
- (void)gotoBeginning;	// 0x355e8829
- (void)gotoEnd;	// 0x355e8771
- (void)gotoNextSlide;	// 0x355e5175
- (void)gotoPreviousSlide;	// 0x355e579d
- (void)gotoSlide:(id)slide;	// 0x355e5d21
- (void)hitCanceledForKey:(id)key;	// 0x355e9501
- (void)hitForKey:(id)key endsAt:(CGPoint)at withModifiers:(unsigned)modifiers;	// 0x355e94a9
- (void)hitForKey:(id)key startsAt:(CGPoint)at hitCount:(int)count withModifiers:(unsigned)modifiers;	// 0x355e9411
- (void)hitForKey:(id)key tracksAt:(CGPoint)at hitCount:(int)count withModifiers:(unsigned)modifiers;	// 0x355e9469
- (BOOL)isInTransition;	// 0x355e4251
// declared property getter: - (BOOL)isPlaying;	// 0x355e841d
- (void)lockRendering;	// 0x355e8a95
- (void)moveToEffectContainer:(id)effectContainer withStartOffset:(double)startOffset toStopOffset:(double)stopOffset blocking:(BOOL)blocking;	// 0x355e3705
- (void)moveToNextEffectContainer;	// 0x355e3909
- (void)moveToPreviousEffectContainer;	// 0x355e39e5
- (void)moveToSubtitleForSlide:(id)slide;	// 0x355e3da9
- (void)moveToTitleSlide;	// 0x355e3abd
- (BOOL)nearingEndForSerializer:(id)serializer;	// 0x355e8af5
- (BOOL)nearingEndForSerializerAfterDelay:(id)serializerAfterDelay;	// 0x355e8d8d
- (void)nextFrame;	// 0x355e8875
- (void)pause;	// 0x355e84fd
- (void)play;	// 0x355e8441
- (void)prevFrame;	// 0x355e88dd
- (double)relativeTime;	// 0x355e3549
- (double)relativeTimeForBackgroundAudio;	// 0x355e3599
- (double)relativeTimeForLayer:(id)layer;	// 0x355e35f9
- (void)removeEffectContainersBeforeTime:(double)time;	// 0x355e4f49
- (void)removeFadeIn;	// 0x355e5efd
// declared property getter: - (id)renderer;	// 0x355e9571
- (void)requestRendering:(BOOL)rendering;	// 0x355e8945
// converted property setter: - (void)setBailTimeWatcher:(BOOL)watcher;	// 0x355e95ad
// declared property setter: - (void)setDisplaysFPS:(BOOL)fps;	// 0x355e860d
// declared property setter: - (void)setDocument:(id)document;	// 0x355e8009
// declared property setter: - (void)setDrawableProperties:(id)properties;	// 0x355e7bbd
- (void)setEAGLContext:(id)context;	// 0x355e7aa5
// declared property setter: - (void)setSize:(CGSize)size;	// 0x355e7f9d
- (void)setSlaveFrameMode:(BOOL)mode;	// 0x355e8ad5
// declared property setter: - (void)setStopWithVideo:(BOOL)video;	// 0x355e8549
// declared property setter: - (void)setTime:(double)time;	// 0x355e864d
// declared property setter: - (void)setVolume:(float)volume;	// 0x355e8711
// declared property getter: - (CGSize)size;	// 0x355e9581
- (CGImageRef)snapshotAsCGImage;	// 0x355e93f1
- (CGImageRef)snapshotAsCGImageForTime:(double)time withSize:(CGSize)size;	// 0x355e933d
// declared property getter: - (BOOL)stopWithVideo;	// 0x355e8539
- (void)swipeAt:(CGPoint)at inDirection:(unsigned)direction withModifiers:(unsigned)modifiers;	// 0x355e9521
- (void)switchToDirectInCALayer:(id)calayer;	// 0x355e7c71
- (void)switchToTexture;	// 0x355e7e01
// converted property getter: - (id)texture;	// 0x355e7bc1
- (unsigned)textureName;	// 0x355e7bd1
// declared property getter: - (double)time;	// 0x355e862d
// declared property getter: - (double)timeRemaining;	// 0x355e8691
- (void)togglePlayback;	// 0x355e83d1
- (void)unlockRendering;	// 0x355e8ab5
// declared property getter: - (float)volume;	// 0x355e86f1
- (void)warmupRenderer;	// 0x355e8965
- (void)watcherThread:(id)thread;	// 0x355e4b05
- (void)whenTransitionIsFinishedSendAction:(SEL)action toTarget:(id)target;	// 0x355e4465
@end

