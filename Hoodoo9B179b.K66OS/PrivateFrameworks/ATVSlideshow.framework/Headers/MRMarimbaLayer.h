/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import <CAEAGLLayer.h> // Unknown library
#import "ATVSlideshow-Structs.h"
#import "MRMarimbaPlayback.h"
#import "MRMarimbaHitBlobSupport.h"
#import "MRMarimbaBasicPlayback.h"

@class MPDocument, MRRenderer, EAGLContext, NSDictionary, MPFaceDetector;

@interface MRMarimbaLayer : CAEAGLLayer <MRMarimbaHitBlobSupport, MRMarimbaPlayback, MRMarimbaBasicPlayback> {
@private
	MRRenderer *_renderer;	// 52 = 0x34
	MPDocument *_document;	// 56 = 0x38
	BOOL _masterClockIsSet;	// 60 = 0x3c
	BOOL _bailTimeWatcher;	// 61 = 0x3d
	BOOL _stopWithVideo;	// 62 = 0x3e
	BOOL _readOnly;	// 63 = 0x3f
	BOOL _wasSuspended;	// 64 = 0x40
	MPFaceDetector *_faceDetector;	// 68 = 0x44
	float _morphingToAspectRatio;	// 72 = 0x48
	CGSize _frameBufferSize;	// 76 = 0x4c
	NSDictionary *_nextMorphInfo;	// 84 = 0x54
	EAGLContext *_context;	// 88 = 0x58
	unsigned _viewRenderbuffer;	// 92 = 0x5c
	unsigned _viewFramebuffer;	// 96 = 0x60
}
@property(assign) BOOL bailTimeWatcher;	// G=0x35555cc5; S=0x35555cd5; converted property
@property(assign, nonatomic) BOOL displaysFPS;	// G=0x355541f9; S=0x3555421d; 
@property(retain, nonatomic) MPDocument *document;	// G=0x355536ad; S=0x355538c5; 
@property(assign, nonatomic) double framesPerSecond;	// G=0x3555459d; S=0x355545d1; @dynamic
@property(readonly, assign, nonatomic) BOOL isPlaying;	// G=0x35553fc5; 
@property(readonly, assign, nonatomic) MRRenderer *renderer;	// G=0x3555458d; 
@property(readonly, assign) CGSize size;	// G=0x3555388d; 
@property(assign, nonatomic) BOOL stopWithVideo;	// G=0x35554149; S=0x35554159; 
@property(assign, nonatomic) double time;	// G=0x3555423d; S=0x3555425d; 
@property(readonly, assign, nonatomic) double timeRemaining;	// G=0x355542a1; 
@property(assign, nonatomic) float volume;	// G=0x35554301; S=0x35554321; 
+ (id)layerWithDocument:(id)document;	// 0x35553235
+ (id)layerWithDocument:(id)document size:(CGSize)size;	// 0x355531c1
+ (void)releaseResources;	// 0x35553285
- (id)init;	// 0x355533d5
- (id)_currentEffectContainer;	// 0x3554fb45
- (id)_effectContainerForTime:(double)time;	// 0x355502f9
- (id)_firstEffectContainer;	// 0x3555024d
- (int)_mainLayerIndex;	// 0x35550421
- (void)_reauthorForAspectRatioChange;	// 0x35554d61
- (void)_warmupRendererThreaded:(id)threaded;	// 0x355546e1
- (void)aspectRatioChangedTo:(id)to;	// 0x355559c9
// converted property getter: - (BOOL)bailTimeWatcher;	// 0x35555cc5
- (void)beginGesture:(id)gesture;	// 0x35552841
- (BOOL)beginLiveUpdateForHitBlob:(id)hitBlob;	// 0x35552025
- (void)beginMorphingToAspectRatio:(float)aspectRatio withDuration:(double)duration;	// 0x355549d1
- (id)blobHitAtPoint:(CGPoint)point fromObjectsForObjectIDs:(id)objectIDs localPoint:(CGPoint *)point3;	// 0x35551b09
- (void)callbackThread:(id)thread;	// 0x355504d5
- (void)cancelGesture:(id)gesture;	// 0x35553111
- (void)cleanup;	// 0x355535f1
- (CGPoint)convertPoint:(CGPoint)point toHitBlob:(id)hitBlob;	// 0x35551f49
- (id)currentSlide;	// 0x3555084d
- (id)currentSlides;	// 0x3555069d
- (void)dealloc;	// 0x355534e9
- (void)destroyFramebuffer;	// 0x35555ce5
- (void)didAddEffects:(id)effects;	// 0x35555955
- (void)didApplyStyle:(id)style;	// 0x35555765
- (void)didLiveChanged:(id)changed;	// 0x35553f29
- (id)displayedEffectContainers;	// 0x3554f159
// declared property getter: - (BOOL)displaysFPS;	// 0x355541f9
- (void)doGesture:(id)gesture;	// 0x35552bf1
// declared property getter: - (id)document;	// 0x355536ad
- (BOOL)effect:(id)effect requestedNumberOfSlides:(unsigned)slides firstSlideIndexStillNeeded:(unsigned)needed;	// 0x35555331
- (BOOL)effectRequestedSlidesAfterDelay:(id)delay;	// 0x35555645
- (void)endGesture:(id)gesture;	// 0x355530c1
- (BOOL)endLiveUpdateForHitBlob:(id)hitBlob;	// 0x35552441
- (void)endMorphing;	// 0x35554b91
// declared property getter: - (double)framesPerSecond;	// 0x3555459d
- (BOOL)getOnScreenVertices:(CGPoint [4])vertices forHitBlob:(id)hitBlob;	// 0x35551d11
- (void)goBack;	// 0x35554379
- (void)goForth;	// 0x35554399
- (void)gotoBeginning;	// 0x35554471
- (void)gotoEnd;	// 0x355543b9
- (void)gotoNextSlide;	// 0x35550c2d
- (void)gotoPreviousSlide;	// 0x35551255
- (void)gotoSlide:(id)slide;	// 0x355517d9
- (void)hitCanceledForKey:(id)key;	// 0x35555c15
- (void)hitForKey:(id)key endsAt:(CGPoint)at withModifiers:(unsigned)modifiers;	// 0x35555b91
- (void)hitForKey:(id)key startsAt:(CGPoint)at hitCount:(int)count withModifiers:(unsigned)modifiers;	// 0x35555aa1
- (void)hitForKey:(id)key tracksAt:(CGPoint)at hitCount:(int)count withModifiers:(unsigned)modifiers;	// 0x35555b25
- (BOOL)isInTransition;	// 0x3554fd09
// declared property getter: - (BOOL)isPlaying;	// 0x35553fc5
- (void)lockRendering;	// 0x35554ef9
- (void)morphToAspectRatio:(float)aspectRatio andOrientation:(int)orientation withDuration:(double)duration;	// 0x35554755
- (void)moveToEffectContainer:(id)effectContainer withStartOffset:(double)startOffset toStopOffset:(double)stopOffset blocking:(BOOL)blocking;	// 0x3554f1bd
- (void)moveToNextEffectContainer;	// 0x3554f3c1
- (void)moveToPreviousEffectContainer;	// 0x3554f49d
- (void)moveToSubtitleForSlide:(id)slide;	// 0x3554f861
- (void)moveToTitleSlide;	// 0x3554f575
- (BOOL)nearingEndForSerializer:(id)serializer;	// 0x35554f39
- (BOOL)nearingEndForSerializerAfterDelay:(id)serializerAfterDelay;	// 0x3555520d
- (void)nextFrame;	// 0x355544bd
- (void)pause;	// 0x355540c9
- (void)play;	// 0x35553fe9
- (void)prevFrame;	// 0x35554525
- (double)relativeTime;	// 0x3554f001
- (double)relativeTimeForBackgroundAudio;	// 0x3554f051
- (double)relativeTimeForLayer:(id)layer;	// 0x3554f0b1
- (void)removeEffectContainersBeforeTime:(double)time;	// 0x35550a01
- (void)removeFadeIn;	// 0x355519b5
// declared property getter: - (id)renderer;	// 0x3555458d
- (void)requestRendering:(BOOL)rendering;	// 0x35554601
- (void)setAsynchronous:(BOOL)asynchronous;	// 0x355536bd
// converted property setter: - (void)setBailTimeWatcher:(BOOL)watcher;	// 0x35555cd5
- (void)setBounds:(CGRect)bounds;	// 0x355536c1
// declared property setter: - (void)setDisplaysFPS:(BOOL)fps;	// 0x3555421d
// declared property setter: - (void)setDocument:(id)document;	// 0x355538c5
// declared property setter: - (void)setFramesPerSecond:(double)second;	// 0x355545d1
- (void)setReadOnly:(BOOL)only;	// 0x35555cb5
// declared property setter: - (void)setStopWithVideo:(BOOL)video;	// 0x35554159
- (void)setSuspended:(BOOL)suspended;	// 0x35554341
// declared property setter: - (void)setTime:(double)time;	// 0x3555425d
// declared property setter: - (void)setVolume:(float)volume;	// 0x35554321
// declared property getter: - (CGSize)size;	// 0x3555388d
- (CGImageRef)snapshotAsCGImage;	// 0x35555a81
- (CGImageRef)snapshotAsCGImageForTime:(double)time withSize:(CGSize)size;	// 0x355559cd
// declared property getter: - (BOOL)stopWithVideo;	// 0x35554149
- (void)swipeAt:(CGPoint)at inDirection:(unsigned)direction withModifiers:(unsigned)modifiers;	// 0x35555c35
// declared property getter: - (double)time;	// 0x3555423d
// declared property getter: - (double)timeRemaining;	// 0x355542a1
- (void)togglePlayback;	// 0x35553f79
- (void)unlockRendering;	// 0x35554f19
- (BOOL)updateFramebuffer;	// 0x35555dc1
// declared property getter: - (float)volume;	// 0x35554301
- (void)warmupRenderer;	// 0x35554621
- (void)watcherThread:(id)thread;	// 0x355505bd
- (void)whenTransitionIsFinishedSendAction:(SEL)action toTarget:(id)target;	// 0x3554ff1d
@end

