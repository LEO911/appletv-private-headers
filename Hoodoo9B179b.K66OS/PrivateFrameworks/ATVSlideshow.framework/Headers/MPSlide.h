/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import "MPAnimationSupport.h"
#import "MPFilterSupport.h"
#import <NSObject.h> // Unknown library

@class MCSlide, MPLayerGroup, NSMutableDictionary, NSMutableArray, MPSlideInternal, NSString, MPFrame;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport> {
@private
	MPFrame *_frame;	// 4 = 0x4
	NSMutableDictionary *_attributes;	// 8 = 0x8
	NSString *_path;	// 12 = 0xc
	MPLayerGroup *_layerGroup;	// 16 = 0x10
	NSMutableArray *_filters;	// 20 = 0x14
	NSMutableDictionary *_animationPaths;	// 24 = 0x18
	MCSlide *_slide;	// 28 = 0x1c
	NSObject<MPEffectSupport> *_parent;	// 32 = 0x20
	MPSlideInternal *_internal;	// 36 = 0x24
}
@property(copy, nonatomic) NSString *absolutePath;	// G=0x354b38a9; S=0x354b3911; @dynamic
@property(readonly, retain) NSMutableDictionary *animationPaths;	// G=0x354b4a61; converted property
@property(assign, nonatomic) double audioDuckInDuration;	// G=0x354b6081; S=0x354b60a1; @dynamic
@property(assign, nonatomic) float audioDuckLevel;	// G=0x354b6239; S=0x354b6269; @dynamic
@property(assign, nonatomic) double audioDuckOutDuration;	// G=0x354b615d; S=0x354b617d; @dynamic
@property(assign, nonatomic) double audioFadeInDuration;	// G=0x354b5ec9; S=0x354b5ee9; @dynamic
@property(assign, nonatomic) double audioFadeOutDuration;	// G=0x354b5fa5; S=0x354b5fc5; @dynamic
@property(assign, nonatomic) float audioVolume;	// G=0x354b5dcd; S=0x354b5e21; @dynamic
@property(assign, nonatomic) CGPoint center;	// G=0x354b6bc9; S=0x354b6bf9; @dynamic
@property(assign, nonatomic) double duration;	// G=0x354b5be5; S=0x354b5cd9; @dynamic
@property(readonly, retain) NSMutableArray *filters;	// G=0x354b3d45; converted property
@property(retain, nonatomic) MPFrame *frame;	// G=0x354b3581; S=0x354b3591; @dynamic
@property(assign) BOOL isSecondary;	// G=0x354b6e59; S=0x354b7385; converted property
@property(retain, nonatomic) MPLayerGroup *layerGroup;	// G=0x354b3bb5; S=0x354b3bc5; 
@property(retain) id parent;	// G=0x354b6a4d; S=0x354b8bdd; converted property
@property(copy, nonatomic) NSString *path;	// G=0x354b3689; S=0x354b3699; @dynamic
@property(assign, nonatomic) float rotation;	// G=0x354b6d91; S=0x354b6db1; @dynamic
@property(assign, nonatomic) float scale;	// G=0x354b6cc9; S=0x354b6ce9; @dynamic
@property(retain) id scriptingAnimations;	// G=0x354b8dcd; S=0x354b910d; converted property
@property(retain) id scriptingFrame;	// G=0x354b9335; S=0x354b93f9; converted property
@property(copy, nonatomic) NSString *sizingMode;	// G=0x354b6319; S=0x354b64b1; @dynamic
@property(retain) MCSlide *slide;	// G=0x354b6f79; S=0x354b7c7d; converted property
@property(assign, nonatomic) double startTime;	// G=0x354b5a35; S=0x354b5af1; @dynamic
+ (id)slide;	// 0x354b1d7d
+ (id)slideWithPath:(id)path;	// 0x354b1db5
- (id)init;	// 0x354b1df1
- (id)initWithCoder:(id)coder;	// 0x354b287d
- (id)initWithLayerGroup:(id)layerGroup;	// 0x354b3161
- (id)initWithPath:(id)path;	// 0x354b311d
// declared property getter: - (id)absolutePath;	// 0x354b38a9
- (id)action;	// 0x354b7285
- (void)addFilter:(id)filter;	// 0x354b3d55
- (void)addFilters:(id)filters;	// 0x354b3db5
- (id)animationPathForKey:(id)key;	// 0x354b4a71
// converted property getter: - (id)animationPaths;	// 0x354b4a61
- (float)aspectRatio;	// 0x354b6a35
// declared property getter: - (double)audioDuckInDuration;	// 0x354b6081
// declared property getter: - (float)audioDuckLevel;	// 0x354b6239
// declared property getter: - (double)audioDuckOutDuration;	// 0x354b615d
// declared property getter: - (double)audioFadeInDuration;	// 0x354b5ec9
// declared property getter: - (double)audioFadeOutDuration;	// 0x354b5fa5
// declared property getter: - (float)audioVolume;	// 0x354b5dcd
// declared property getter: - (CGPoint)center;	// 0x354b6bc9
- (void)cleanup;	// 0x354b7821
- (void)copyAnimationPaths:(id)paths;	// 0x354b7745
- (void)copyFilters:(id)filters;	// 0x354b7629
- (void)copyFrame:(id)frame;	// 0x354b7551
- (void)copyLayerGroup:(id)group;	// 0x354b75bd
- (void)copyStruct:(id)aStruct;	// 0x354b73a5
- (id)copyWithZone:(NSZone *)zone;	// 0x354b31c1
- (int)countOfFilter;	// 0x354b8c4d
- (void)dealloc;	// 0x354b3459
- (id)description;	// 0x354b32c9
- (BOOL)determineShowTime:(double *)time showDuration:(double *)duration;	// 0x354b7991
- (void)dump;	// 0x354b6f89
- (void)duplicateAnimationPaths;	// 0x354b8925
// declared property getter: - (double)duration;	// 0x354b5be5
- (void)encodeWithCoder:(id)coder;	// 0x354b20a1
// converted property getter: - (id)filters;	// 0x354b3d45
- (void)finalize;	// 0x354b3419
// declared property getter: - (id)frame;	// 0x354b3581
- (id)fullDebugLog;	// 0x354b6fb1
- (BOOL)hasMovie;	// 0x354b7121
- (int)index;	// 0x354b67c5
- (void)insertFilters:(id)filters atIndex:(int)index;	// 0x354b3df9
- (void)insertObject:(id)object inFilterAtIndex:(int)index;	// 0x354b8c8d
// converted property getter: - (BOOL)isSecondary;	// 0x354b6e59
// declared property getter: - (id)layerGroup;	// 0x354b3bb5
- (int)liveIndex;	// 0x354b6931
- (double)maxDuration;	// 0x354b7271
- (void)moveFiltersFromIndices:(id)indices toIndex:(int)index;	// 0x354b47a5
- (id)nearestLayer;	// 0x354b790d
- (id)objectInFilterAtIndex:(int)index;	// 0x354b8c6d
// converted property getter: - (id)parent;	// 0x354b6a4d
- (id)parentDocument;	// 0x354b78ed
- (id)parentEffect;	// 0x354b6a3d
- (id)parentSubtitleEffect;	// 0x354b6a5d
// declared property getter: - (id)path;	// 0x354b3689
- (void)removeAllFilters;	// 0x354b4705
- (void)removeAnimationPathForKey:(id)key;	// 0x354b504d
- (void)removeFiltersAtIndices:(id)indices;	// 0x354b4391
- (void)removeObjectFromFilterAtIndex:(int)index;	// 0x354b8cf5
- (void)replaceObjectInFilterAtIndex:(int)index withObject:(id)object;	// 0x354b8d59
- (void)resetCachedTimes;	// 0x354b7305
// declared property getter: - (float)rotation;	// 0x354b6d91
// declared property getter: - (float)scale;	// 0x354b6cc9
// converted property getter: - (id)scriptingAnimations;	// 0x354b8dcd
// converted property getter: - (id)scriptingFrame;	// 0x354b9335
// declared property setter: - (void)setAbsolutePath:(id)path;	// 0x354b3911
- (void)setAnimationPath:(id)path forKey:(id)key;	// 0x354b4c59
// declared property setter: - (void)setAudioDuckInDuration:(double)duration;	// 0x354b60a1
// declared property setter: - (void)setAudioDuckLevel:(float)level;	// 0x354b6269
// declared property setter: - (void)setAudioDuckOutDuration:(double)duration;	// 0x354b617d
// declared property setter: - (void)setAudioFadeInDuration:(double)duration;	// 0x354b5ee9
// declared property setter: - (void)setAudioFadeOutDuration:(double)duration;	// 0x354b5fc5
// declared property setter: - (void)setAudioVolume:(float)volume;	// 0x354b5e21
// declared property setter: - (void)setCenter:(CGPoint)center;	// 0x354b6bf9
// declared property setter: - (void)setDuration:(double)duration;	// 0x354b5cd9
// declared property setter: - (void)setFrame:(id)frame;	// 0x354b3591
// converted property setter: - (void)setIsSecondary:(BOOL)secondary;	// 0x354b7385
// declared property setter: - (void)setLayerGroup:(id)group;	// 0x354b3bc5
- (void)setMediaType:(int)type;	// 0x354b7251
- (void)setMirrorToDuplicatePaths:(BOOL)duplicatePaths;	// 0x354b7365
// converted property setter: - (void)setParent:(id)parent;	// 0x354b8bdd
// declared property setter: - (void)setPath:(id)path;	// 0x354b3699
// declared property setter: - (void)setRotation:(float)rotation;	// 0x354b6db1
// declared property setter: - (void)setScale:(float)scale;	// 0x354b6ce9
// converted property setter: - (void)setScriptingAnimations:(id)animations;	// 0x354b910d
// converted property setter: - (void)setScriptingFrame:(id)frame;	// 0x354b93f9
// declared property setter: - (void)setSizingMode:(id)mode;	// 0x354b64b1
// converted property setter: - (void)setSlide:(id)slide;	// 0x354b7c7d
// declared property setter: - (void)setStartTime:(double)time;	// 0x354b5af1
- (void)setUserInfoAttribute:(id)attribute forKey:(id)key;	// 0x354b6ea9
- (double)showDisplayStartTime;	// 0x354b58f5
- (double)showDisplayTime;	// 0x354b5635
- (double)showDuration;	// 0x354b5475
- (double)showTime;	// 0x354b52f9
// declared property getter: - (id)sizingMode;	// 0x354b6319
// converted property getter: - (id)slide;	// 0x354b6f79
// declared property getter: - (double)startTime;	// 0x354b5a35
- (id)userInfoAttributeForKey:(id)key;	// 0x354b6e7d
@end

