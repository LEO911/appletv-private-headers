/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "ASParsingAcceptingTopLevelLeaves.h"
#import "ASEvent.h"
#import "NSCoding.h"

@class NSDate, NSNumber, ASEmailItem, NSString, NSMutableDictionary;

@interface ASMeetingRequest : ASEvent <ASParsingAcceptingTopLevelLeaves, NSCoding> {
	NSNumber *_instanceType;	// 172 = 0xac
	NSDate *_recurrenceId;	// 176 = 0xb0
	NSMutableDictionary *_placeHolder;	// 180 = 0xb4
	int _meetingClassType;	// 184 = 0xb8
	ASEmailItem *_parentEmailItem;	// 188 = 0xbc
	NSString *_cachedParentFolderId;	// 192 = 0xc0
	NSString *_cachedParentServerId;	// 196 = 0xc4
}
@property(retain) NSString *cachedParentFolderId;	// G=0x31dfb2dd; S=0x31dfb315; converted property
@property(retain) NSString *cachedParentServerId;	// G=0x31dfb359; S=0x31dfb391; converted property
@property(retain) id exceptionDate;	// G=0x31dfadb9; S=0x31dfadc9; converted property
@property(retain) NSNumber *instanceType;	// G=0x31dfb1c5; S=0x31dfb1fd; converted property
@property(assign) int meetingClassType;	// G=0x31dfb2bd; S=0x31dfb2cd; converted property
@property(retain) NSDate *recurrenceId;	// G=0x31dfb241; S=0x31dfb279; converted property
+ (BOOL)acceptsTopLevelLeaves;	// 0x31df8ee9
+ (BOOL)frontingBasicTypes;	// 0x31df8fe5
+ (BOOL)notifyOfUnknownTokens;	// 0x31df9039
+ (BOOL)parsingLeafNode;	// 0x31df8f3d
+ (BOOL)parsingWithSubItems;	// 0x31df8f91
- (id)init;	// 0x31dfa8ad
- (id)initWithCoder:(id)coder;	// 0x31dfae45
- (BOOL)_bailIfNotNewestDataForAccount:(id)account;	// 0x31df9e9d
- (void)_determineSelfnessWithLocalEvent:(void *)localEvent forAccount:(id)account;	// 0x31df95b5
- (void)_setReminderSecsBefore:(id)before;	// 0x31dfa999
- (void)applyPlaceHolder;	// 0x31df908d
- (id)asParseRules;	// 0x31df9149
- (BOOL)cachedOrganizerIsSelfWithAccount:(id)account;	// 0x31dfb189
// converted property getter: - (id)cachedParentFolderId;	// 0x31dfb2dd
// converted property getter: - (id)cachedParentServerId;	// 0x31dfb359
- (void)clearPlaceHolder;	// 0x31df90ad
- (void)dealloc;	// 0x31dfa8fd
- (id)description;	// 0x31dfa83d
- (void)encodeWithCoder:(id)coder;	// 0x31dfb011
// converted property getter: - (id)exceptionDate;	// 0x31dfadb9
// converted property getter: - (id)instanceType;	// 0x31dfb1c5
// converted property getter: - (int)meetingClassType;	// 0x31dfb2bd
- (void)parseASParseContext:(id)context root:(id)root parent:(id)parent callbackDict:(id)dict streamCallbackDict:(id)dict5 account:(id)account;	// 0x31dfa795
- (void)postProcessApplicationData;	// 0x31df9659
// converted property getter: - (id)recurrenceId;	// 0x31dfb241
- (BOOL)saveToCalendarWithExistingRecord:(void *)existingRecord intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x31df9ef1
// converted property setter: - (void)setCachedParentFolderId:(id)anId;	// 0x31dfb315
// converted property setter: - (void)setCachedParentServerId:(id)anId;	// 0x31dfb391
- (void)setDTStamp:(id)stamp;	// 0x31dfadd9
// converted property setter: - (void)setExceptionDate:(id)date;	// 0x31dfadc9
// converted property setter: - (void)setInstanceType:(id)type;	// 0x31dfb1fd
// converted property setter: - (void)setMeetingClassType:(int)type;	// 0x31dfb2cd
- (void)setObject:(id)object forDCCPT:(int)dccpt;	// 0x31df90d9
- (void)setOrganizer:(id)organizer;	// 0x31dfad1d
// converted property setter: - (void)setRecurrenceId:(id)anId;	// 0x31dfb279
- (BOOL)shouldUseInMemoryAttendeesForAccount:(id)account numExistingAttendees:(int)attendees;	// 0x31dfa429
- (void)takeValuesFromParentEmailForAccount:(id)account;	// 0x31dfaa01
- (BOOL)writeInviteToCalDBCreateAsRejected:(BOOL)calDBCreateAsRejected defaultCalendar:(void *)calendar account:(id)account;	// 0x31dfa461
@end

