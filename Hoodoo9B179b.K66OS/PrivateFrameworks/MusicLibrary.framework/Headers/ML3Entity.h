/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
@private
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x30023c85; 
@property(assign) ML3MusicLibrary *library;	// G=0x300125b9; S=0x30025665; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x30017af9; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x30024c11
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x30013109
+ (id)allProperties;	// 0x30025349
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x3000a5d9
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x30025345
+ (id)defaultOrderingProperties;	// 0x30024259
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x30024dd1
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x30031f15
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x3000ab81
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x3002547d
+ (id)extraTablesToDelete;	// 0x3002533d
+ (id)extraTablesToInsert;	// 0x3001793d
+ (id)foreignColumnForProperty:(id)property;	// 0x30024265
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x30024261
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x30013559
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type;	// 0x300232ad
+ (id)indexableSQLForProperties:(id)properties;	// 0x3002534d
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x30017561
+ (BOOL)insertionChangesLibraryContents;	// 0x30017945
+ (id)joinClauseForProperty:(id)property;	// 0x3000ac65
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x30024c0d
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x30015161
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30024185
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x30011f19
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x30011555
+ (id)persistentIDColumnForTable:(id)table;	// 0x30025341
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x3001045d
+ (id)predisambiguatedProperties;	// 0x3000ac0d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x30013999
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x30012775
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x3001072d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x30031e99
+ (id)replacerWithProperties:(id)properties databaseHandle:(sqlite3 *)handle;	// 0x3004c059
+ (int)revisionTrackingCode;	// 0x30025475
+ (id)sectionPropertyForProperty:(id)property;	// 0x3002425d
+ (id)subselectPropertyForProperty:(id)property;	// 0x30024181
+ (id)subselectStatementForProperty:(id)property;	// 0x3000b2bd
+ (id)unsettableProperties;	// 0x3001753d
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30015fdd
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x30011f49
- (id)copyInLibrary:(id)library;	// 0x300239a9
- (id)copyWithZone:(NSZone *)zone;	// 0x30023b31
- (BOOL)deleteFromLibrary;	// 0x300252e9
- (id)description;	// 0x30023c29
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x30018905
// declared property getter: - (BOOL)existsInLibrary;	// 0x30023c85
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x30012025
- (unsigned)hash;	// 0x30023c19
- (void)incrementRevision;	// 0x3002560d
- (BOOL)isEqual:(id)equal;	// 0x30023b95
// declared property getter: - (id)library;	// 0x300125b9
- (BOOL)matchesPredicate:(id)predicate;	// 0x30023f65
- (id)newSelectSQLForProperties:(id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x300121a5
// declared property getter: - (long long)persistentID;	// 0x30017af9
// declared property setter: - (void)setLibrary:(id)library;	// 0x30025665
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x30017fd9
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x30018001
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x300187e1
- (id)valueForProperty:(id)property;	// 0x3001396d
@end

