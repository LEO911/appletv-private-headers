/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import "OfficeImport-Structs.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library


__attribute__((visibility("hidden")))
@interface NSBezierPathStub : NSObject <NSCopying> {
@private
	int _segmentCount;	// 4 = 0x4
	int _segmentMax;	// 8 = 0x8
	PATHSEGMENT *_head;	// 12 = 0xc
	int _lastSubpathIndex;	// 16 = 0x10
	int _elementCount;	// 20 = 0x14
	float _lineWidth;	// 24 = 0x18
	CGRect _controlPointBounds;	// 28 = 0x1c
	float _miterLimit;	// 44 = 0x2c
	float _flatness;	// 48 = 0x30
	float *_dashedLinePattern;	// 52 = 0x34
	unsigned _dashedLineCount;	// 56 = 0x38
	float _dashedLinePhase;	// 60 = 0x3c
	void *_path;	// 64 = 0x40
	id _private[4];	// 68 = 0x44
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	} _bpFlags;	// 84 = 0x54
}
@property(assign) BOOL cachesBezierPath;	// G=0x30eb1a11; S=0x30eb1a15; converted property
@property(readonly, assign) CGRect controlPointBounds;	// G=0x30eb2785; converted property
@property(readonly, assign) int elementCount;	// G=0x30c7cb81; converted property
@property(assign) float flatness;	// G=0x30c7eac5; S=0x30c7ead5; converted property
@property(assign) unsigned lineCapStyle;	// G=0x30c7d6ad; S=0x30c7d4d5; converted property
@property(assign) unsigned lineJoinStyle;	// G=0x30c7d6c1; S=0x30c7d59d; converted property
@property(assign) float lineWidth;	// G=0x30c7ea95; S=0x30c7d3bd; converted property
@property(assign) float miterLimit;	// G=0x30c7eaa5; S=0x30c7eab5; converted property
@property(assign) unsigned windingRule;	// G=0x30c7d111; S=0x30c7cf21; converted property
+ (id)bezierPath;	// 0x30c78de9
+ (id)bezierPathWithOvalInRect:(CGRect)rect;	// 0x30eb1ca1
+ (id)bezierPathWithRect:(CGRect)rect;	// 0x30d62c69
+ (id)bezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x30eb1c4d
+ (void)clipRect:(CGRect)rect;	// 0x30c79fbd
+ (CGContextRef)currentCGContext;	// 0x30c79b51
+ (float)defaultFlatness;	// 0x30eb1769
+ (unsigned)defaultLineCapStyle;	// 0x30eb17a9
+ (unsigned)defaultLineJoinStyle;	// 0x30eb17c9
+ (float)defaultLineWidth;	// 0x30eb17e9
+ (float)defaultMiterLimit;	// 0x30eb1749
+ (unsigned)defaultWindingRule;	// 0x30eb1789
+ (void)drawPackedGlyphs:(const char *)glyphs atPoint:(CGPoint)point;	// 0x30eb1a19
+ (void)drawString:(id)string atPoint:(CGPoint)point withFontName:(id)fontName andHeight:(float)height color:(id)color alignToTop:(BOOL)top currentTransformStruct:(CGAffineTransform)aStruct;	// 0x30c7baa5
+ (void)fillRect:(CGRect)rect;	// 0x30eb1bed
+ (float)flatness;	// 0x30eb317d
+ (void)initialize;	// 0x30d2d4b5
+ (unsigned)lineCapStyle;	// 0x30eb31bd
+ (unsigned)lineJoinStyle;	// 0x30eb31dd
+ (float)lineWidth;	// 0x30eb31fd
+ (float)miterLimit;	// 0x30eb315d
+ (void)setCurrentCGContext:(CGContextRef)context;	// 0x30c73221
+ (void)setDefaultFlatness:(float)flatness;	// 0x30eb1759
+ (void)setDefaultLineCapStyle:(unsigned)style;	// 0x30eb1799
+ (void)setDefaultLineJoinStyle:(unsigned)style;	// 0x30eb17b9
+ (void)setDefaultLineWidth:(float)width;	// 0x30eb17d9
+ (void)setDefaultMiterLimit:(float)limit;	// 0x30eb1739
+ (void)setDefaultWindingRule:(unsigned)rule;	// 0x30eb1779
+ (void)setFlatness:(float)flatness;	// 0x30eb316d
+ (void)setLineCapStyle:(unsigned)style;	// 0x30eb31ad
+ (void)setLineJoinStyle:(unsigned)style;	// 0x30eb31cd
+ (void)setLineWidth:(float)width;	// 0x30eb31ed
+ (void)setMiterLimit:(float)limit;	// 0x30eb314d
+ (void)setWindingRule:(unsigned)rule;	// 0x30eb318d
+ (void)strokeLineFromPoint:(CGPoint)point toPoint:(CGPoint)point2;	// 0x30eb1a71
+ (void)strokeRect:(CGRect)rect;	// 0x30eb1afd
+ (unsigned)windingRule;	// 0x30eb319d
- (id)init;	// 0x30c78e21
- (void)_addPathSegment:(int)segment point:(CGPoint)point;	// 0x30c7c6ed
- (void)_appendArcSegmentWithCenter:(CGPoint)center radius:(double)radius angle1:(double)a1 angle2:(double)a2;	// 0x30c7c7e9
- (id)_copyFlattenedPath;	// 0x30eb2afd
- (void)_deviceClosePath;	// 0x30c7dc41
- (void)_deviceCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x30c7c965
- (void)_deviceLineToPoint:(CGPoint)point;	// 0x30c7dbe5
- (void)_deviceMoveToPoint:(CGPoint)point;	// 0x30c7c5f5
- (void)_doPath;	// 0x30eb2ea9
- (void)_doUserPathWithOp:(unsigned char)op inContext:(CGContextRef)context;	// 0x30c7d125
- (int)_locationOfPoint:(CGPoint)point;	// 0x30eb1d6d
- (int)_segmentIndexForElementIndex:(int)elementIndex;	// 0x30c7cc85
- (void)addClip;	// 0x30d62cfd
- (void)appendBezierPath:(id)path;	// 0x30c7caad
- (void)appendBezierPathWithArcFromPoint:(CGPoint)point toPoint:(CGPoint)point2 radius:(float)radius;	// 0x30eb22cd
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4;	// 0x30c7c315
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x30c7c355
- (void)appendBezierPathWithArcWithCenter:(CGPoint)center radiusSize:(CGSize)size startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;	// 0x30da00c9
- (void)appendBezierPathWithArcWithRect:(CGPoint)rect rightBottom:(CGPoint)bottom start:(CGPoint)start end:(CGPoint)end clockwise:(BOOL)clockwise;	// 0x30d9ff51
- (void)appendBezierPathWithOvalInRect:(CGRect)rect;	// 0x30c7c1cd
- (void)appendBezierPathWithPoints:(CGPoint *)points count:(int)count;	// 0x30c7f38d
- (void)appendBezierPathWithRect:(CGRect)rect;	// 0x30c7dacd
- (void)appendBezierPathWithRoundedRect:(CGRect)roundedRect xRadius:(float)radius yRadius:(float)radius3;	// 0x30eb2049
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes;	// 0x30ea8a45
- (void)appendBezierPathWithString:(id)string attributes:(id)attributes spacing:(int *)spacing spacingCount:(int)count;	// 0x30ea8a49
- (void)attachBezierPath:(id)path;	// 0x30d3fee1
- (id)bezierPathByFlatteningPath;	// 0x30eb2b4d
- (id)bezierPathByReversingPath;	// 0x30eb28f1
- (CGRect)bounds;	// 0x30eb26c5
// converted property getter: - (BOOL)cachesBezierPath;	// 0x30eb1a11
- (void)closePath;	// 0x30c7dc31
- (BOOL)containsPoint:(CGPoint)point;	// 0x30eb1cf9
// converted property getter: - (CGRect)controlPointBounds;	// 0x30eb2785
- (id)copyWithZone:(NSZone *)zone;	// 0x30c7e905
- (CGPoint)currentPoint;	// 0x30d40081
- (void)curveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x30d3fdb5
- (void)dealloc;	// 0x30c73d89
- (id)description;	// 0x30eb320d
- (unsigned)elementAtIndex:(int)index;	// 0x30eb26b1
- (unsigned)elementAtIndex:(int)index associatedPoints:(CGPoint *)points;	// 0x30c7cbe9
// converted property getter: - (int)elementCount;	// 0x30c7cb81
- (BOOL)equalToCurrentPoint:(CGPoint)currentPoint;	// 0x30d3fff1
- (void)fill;	// 0x30c7d09d
- (void)finalize;	// 0x30eb30c5
// converted property getter: - (float)flatness;	// 0x30c7eac5
- (void)flattenIntoPath:(id)path;	// 0x30eb2be5
- (id)getGlyphs:(id)glyphs :(id)arg2 :(unsigned *)arg3;	// 0x30ea8a41
- (void)getLineDash:(float *)dash count:(int *)count phase:(float *)phase;	// 0x30eb17f9
- (BOOL)isEmpty;	// 0x30c7c5dd
- (BOOL)isHitByPath:(id)path;	// 0x30eb1a01
- (BOOL)isHitByPoint:(CGPoint)point;	// 0x30eb1ce1
- (BOOL)isHitByRect:(CGRect)rect;	// 0x30eb19fd
- (BOOL)isStrokeHitByPath:(id)path;	// 0x30eb1a0d
- (BOOL)isStrokeHitByPoint:(CGPoint)point;	// 0x30eb1a05
- (BOOL)isStrokeHitByRect:(CGRect)rect;	// 0x30eb1a09
// converted property getter: - (unsigned)lineCapStyle;	// 0x30c7d6ad
// converted property getter: - (unsigned)lineJoinStyle;	// 0x30c7d6c1
- (void)lineToPoint:(CGPoint)point;	// 0x30c7db71
// converted property getter: - (float)lineWidth;	// 0x30c7ea95
// converted property getter: - (float)miterLimit;	// 0x30c7eaa5
- (void)moveToPoint:(CGPoint)point;	// 0x30c7db61
- (void)relativeCurveToPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2;	// 0x30eb2f89
- (void)relativeLineToPoint:(CGPoint)point;	// 0x30eb3015
- (void)relativeMoveToPoint:(CGPoint)point;	// 0x30eb306d
- (void)removeAllPoints;	// 0x30d3f9c9
- (void)setAssociatedPoints:(CGPoint *)points atIndex:(int)index;	// 0x30eb25e5
// converted property setter: - (void)setCachesBezierPath:(BOOL)path;	// 0x30eb1a15
- (void)setClip;	// 0x30d62ca9
// converted property setter: - (void)setFlatness:(float)flatness;	// 0x30c7ead5
// converted property setter: - (void)setLineCapStyle:(unsigned)style;	// 0x30c7d4d5
- (void)setLineDash:(const float *)dash count:(int)count phase:(float)phase;	// 0x30db70e5
// converted property setter: - (void)setLineJoinStyle:(unsigned)style;	// 0x30c7d59d
// converted property setter: - (void)setLineWidth:(float)width;	// 0x30c7d3bd
// converted property setter: - (void)setMiterLimit:(float)limit;	// 0x30c7eab5
// converted property setter: - (void)setWindingRule:(unsigned)rule;	// 0x30c7cf21
- (void)stroke;	// 0x30c7d5c1
- (void)subdivideBezierWithFlatness:(float)flatness startPoint:(CGPoint)point controlPoint1:(CGPoint)a1 controlPoint2:(CGPoint)a2 endPoint:(CGPoint)point5;	// 0x30eb2cc1
- (void)transformUsingAffineTransform:(id)transform;	// 0x30c7c9ed
// converted property getter: - (unsigned)windingRule;	// 0x30c7d111
@end

