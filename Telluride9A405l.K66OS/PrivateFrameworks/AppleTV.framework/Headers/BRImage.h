/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/AppleTV.framework/AppleTV
 */

#import "AppleTV-Structs.h"
#import <NSObject.h> // Unknown library

@class NSData, NSString, NSURL;

@interface BRImage : NSObject {
@private
	CGImageRef _image;	// 4 = 0x4
	NSString *_accessibilityLabel;	// 8 = 0x8
	CGImageSourceRef _imageSource;	// 12 = 0xc
	float _imageWidth;	// 16 = 0x10
	float _imageHeight;	// 20 = 0x14
	int _imageOrientation;	// 24 = 0x18
	BOOL _enableCache;	// 28 = 0x1c
	NSURL *_imageURL;	// 32 = 0x20
	NSData *_imageData;	// 36 = 0x24
	BOOL _imageBufferInMemory;	// 40 = 0x28
	BOOL _rotationEnabled;	// 41 = 0x29
}
@property(retain) NSString *accessibilityLabel;	// G=0x35da3f5d; S=0x35da3f6d; converted property
@property(assign) BOOL enableCache;	// G=0x35da3c85; S=0x35da3c55; converted property
@property(readonly, assign) CGImageRef image;	// G=0x35da3ab9; converted property
@property(readonly, assign, getter=isImageBufferInMemory) BOOL imageBufferInMemory;	// G=0x35da443d; converted property
@property(readonly, assign, nonatomic) int orientation;	// G=0x35da444d; @synthesize=_imageOrientation
@property(readonly, assign, nonatomic) BOOL rotationEnabled;	// G=0x35da445d; @synthesize=_rotationEnabled
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef;	// 0x35da3329
+ (id)imageWithData:(id)data;	// 0x35da32e5
+ (id)imageWithName:(id)name ofType:(id)type inBundle:(id)bundle;	// 0x35da3455
+ (id)imageWithPDFURL:(id)pdfurl;	// 0x35da336d
+ (id)imageWithPath:(id)path;	// 0x35da327d
+ (id)imageWithRotationFromData:(id)data;	// 0x35da3545
+ (id)imageWithRotationFromPath:(id)path;	// 0x35da3505
+ (id)imageWithRotationFromURL:(id)url;	// 0x35da34ad
+ (id)imageWithURL:(id)url;	// 0x35da3239
- (id)initWithCGImageRef:(CGImageRef)cgimageRef;	// 0x35da359d
- (id)initWithData:(id)data;	// 0x35da3829
- (id)initWithURL:(id)url;	// 0x35da367d
- (id)_initWithCGImageSourceRotationEnabled:(CGImageSourceRef)cgimageSourceRotationEnabled;	// 0x35da446d
- (void)_initializeCGImageWithRotation;	// 0x35da45c5
// converted property getter: - (id)accessibilityLabel;	// 0x35da3f5d
- (float)aspectRatio;	// 0x35da3ba9
- (id)croppedImageForSize:(CGSize)size;	// 0x35da4075
- (void)dealloc;	// 0x35da39e5
- (id)deletterboxedImage;	// 0x35da3c95
- (void)drawImageInContext:(CGContextRef)context rect:(CGRect)rect;	// 0x35da3a85
// converted property getter: - (BOOL)enableCache;	// 0x35da3c85
// converted property getter: - (CGImageRef)image;	// 0x35da3ab9
- (BOOL)isAccessibilityElement;	// 0x35da3f45
// converted property getter: - (BOOL)isImageBufferInMemory;	// 0x35da443d
- (BOOL)isPowerOfTwo;	// 0x35da3bed
- (CGRect)largestSquareRect;	// 0x35da4279
- (id)mapImageWithSourceRect:(CGRect)sourceRect toSize:(CGSize)size;	// 0x35da3fb1
// declared property getter: - (int)orientation;	// 0x35da444d
- (CGSize)pixelBounds;	// 0x35da3b7d
- (void)purgeRawData;	// 0x35ec89e5
- (id)rawData;	// 0x35ec89e1
// declared property getter: - (BOOL)rotationEnabled;	// 0x35da445d
// converted property setter: - (void)setAccessibilityLabel:(id)label;	// 0x35da3f6d
// converted property setter: - (void)setEnableCache:(BOOL)cache;	// 0x35da3c55
- (BOOL)sourceRequiresRotation;	// 0x35da3c39
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)aspectRatioLimit;	// 0x35da4359
@end

