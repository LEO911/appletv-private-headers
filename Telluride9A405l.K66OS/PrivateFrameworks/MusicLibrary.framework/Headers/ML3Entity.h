/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
@private
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x30023199; 
@property(assign) ML3MusicLibrary *library;	// G=0x30011789; S=0x30024b79; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x30016fb1; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x30024125
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x300122b1
+ (id)allProperties;	// 0x3002485d
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x300098c5
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x30024859
+ (id)defaultOrderingProperties;	// 0x3002376d
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x300242e5
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x30031a7d
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x30009e6d
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x30024991
+ (id)extraTablesToDelete;	// 0x30024851
+ (id)extraTablesToInsert;	// 0x30016df5
+ (id)foreignColumnForProperty:(id)property;	// 0x30023779
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x30023775
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x30012701
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type;	// 0x300227c1
+ (id)indexableSQLForProperties:(id)properties;	// 0x30024861
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x30016a19
+ (BOOL)insertionChangesLibraryContents;	// 0x30016dfd
+ (id)joinClauseForProperty:(id)property;	// 0x30009f51
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x30024121
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x30014609
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30023699
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x300110e9
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x30010795
+ (id)persistentIDColumnForTable:(id)table;	// 0x30024855
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x3000f6e1
+ (id)predisambiguatedProperties;	// 0x30009ef9
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x30012b41
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x3001191d
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x3000f9b1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x30031a01
+ (id)replacerWithProperties:(id)properties databaseHandle:(sqlite3 *)handle;	// 0x3004b911
+ (int)revisionTrackingCode;	// 0x30024989
+ (id)sectionPropertyForProperty:(id)property;	// 0x30023771
+ (id)subselectPropertyForProperty:(id)property;	// 0x30023695
+ (id)subselectStatementForProperty:(id)property;	// 0x3000a5a9
+ (id)unsettableProperties;	// 0x300169f5
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30015495
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x30011119
- (id)copyInLibrary:(id)library;	// 0x30022ebd
- (id)copyWithZone:(NSZone *)zone;	// 0x30023045
- (BOOL)deleteFromLibrary;	// 0x300247fd
- (id)description;	// 0x3002313d
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x30017e19
// declared property getter: - (BOOL)existsInLibrary;	// 0x30023199
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x300111f5
- (unsigned)hash;	// 0x3002312d
- (void)incrementRevision;	// 0x30024b21
- (BOOL)isEqual:(id)equal;	// 0x300230a9
// declared property getter: - (id)library;	// 0x30011789
- (BOOL)matchesPredicate:(id)predicate;	// 0x30023479
- (id)newSelectSQLForProperties:(id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x30011375
// declared property getter: - (long long)persistentID;	// 0x30016fb1
// declared property setter: - (void)setLibrary:(id)library;	// 0x30024b79
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x300174ed
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x30017515
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x30017cf5
- (id)valueForProperty:(id)property;	// 0x30012b15
@end

