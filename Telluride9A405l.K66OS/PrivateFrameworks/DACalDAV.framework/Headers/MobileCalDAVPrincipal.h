/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import "CalDAVPrincipal.h"
#import <NSObject.h> // Unknown library

@class NSString, MobileCalDAVAccount, NSSet, NSURL, NSMutableDictionary, NSDictionary, NSNumber, CalDAVRefreshContext, NSDateComponents;
@protocol CalDAVAccount, CoreDAVTaskManager;

@interface MobileCalDAVPrincipal : NSObject <CoreDAVAccountInfoProvider, CalDAVPrincipal> {
	NSString *_uid;	// 4 = 0x4
	MobileCalDAVAccount *_account;	// 8 = 0x8
	NSSet *_calendarUserAddresses;	// 12 = 0xc
	NSMutableDictionary *_calendarUserAddressesPerCalendar;	// 16 = 0x10
	NSURL *_preferredCalendarUserAddress;	// 20 = 0x14
	NSString *_fullName;	// 24 = 0x18
	NSURL *_calendarHomeURL;	// 28 = 0x1c
	NSURL *_principalURL;	// 32 = 0x20
	NSURL *_defaultCalendarURL;	// 36 = 0x24
	NSURL *_notificationCollectionURL;	// 40 = 0x28
	NSString *_notificationCollectionCTag;	// 44 = 0x2c
	NSURL *_inboxURL;	// 48 = 0x30
	NSString *_inboxCTag;	// 52 = 0x34
	NSURL *_outboxURL;	// 56 = 0x38
	NSURL *_dropBoxURL;	// 60 = 0x3c
	NSString *_notificationURLString;	// 64 = 0x40
	NSDictionary *_pushTransports;	// 68 = 0x44
	NSString *_calendarHomePushKey;	// 72 = 0x48
	NSString *_XMPPServer;	// 76 = 0x4c
	NSNumber *_quotaFreeBytes;	// 80 = 0x50
	BOOL _isDelegate;	// 84 = 0x54
	BOOL _isWritable;	// 85 = 0x55
	BOOL _isEnabled;	// 86 = 0x56
	BOOL _isExpandPropertyReportSupported;	// 87 = 0x57
	BOOL _supportsFreebusy;	// 88 = 0x58
	BOOL _shouldUpdatePushDelegate;	// 89 = 0x59
	BOOL _isDirty;	// 90 = 0x5a
	BOOL _calendarsAreDirty;	// 91 = 0x5b
	int _calendarChangeIndex;	// 92 = 0x5c
}
@property(readonly, assign) NSString *APSEnv;	// G=0x3022a5b9; 
@property(readonly, assign) NSURL *APSSubscriptionURL;	// G=0x3022a539; 
@property(readonly, assign) NSString *APSTopic;	// G=0x3022a4f5; 
@property(retain) NSString *XMPPServer;	// G=0x302294e9; S=0x302294f9; 
@property(readonly, assign) id<CalDAVAccount> account;	// G=0x3022895d; 
@property(retain) NSString *calendarHomePushKey;	// G=0x30229465; S=0x30229475; 
@property(retain) NSURL *calendarHomeURL;	// G=0x30228d91; S=0x30228db1; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x30228c65; S=0x30228c75; 
@property(readonly, assign) NSSet *calendars;	// G=0x30229c11; 
@property(assign) BOOL calendarsAreDirty;	// G=0x3022a429; S=0x3022a36d; @synthesize=_calendarsAreDirty
@property(retain) NSURL *defaultCalendarURL;	// G=0x30228ee1; S=0x30228f01; 
@property(readonly, assign) NSSet *deletedCalendarURLs;	// G=0x30229c31; 
@property(retain) NSURL *dropBoxURL;	// G=0x30229289; S=0x302292a9; 
@property(readonly, assign) NSDateComponents *eventFilterEndDate;	// G=0x30229a4d; 
@property(readonly, assign) NSDateComponents *eventFilterStartDate;	// G=0x302299f1; 
@property(retain) NSString *fullName;	// G=0x30228d0d; S=0x30228d1d; 
@property(retain) NSString *inboxCTag;	// G=0x3022915d; S=0x3022916d; 
@property(retain) NSURL *inboxURL;	// G=0x302290b5; S=0x302290d5; 
@property(assign) BOOL isDelegate;	// G=0x302295dd; S=0x302295ed; 
@property(assign) BOOL isDirty;	// G=0x3022b189; S=0x3022b199; @synthesize=_isDirty
@property(assign) BOOL isEnabled;	// G=0x3022966d; S=0x3022967d; 
@property(readonly, assign) BOOL isEnabledForEvents;	// G=0x302296d9; 
@property(readonly, assign) BOOL isEnabledForTodos;	// G=0x30229735; 
@property(assign) BOOL isExpandPropertyReportSupported;	// G=0x30229b61; S=0x30229b71; 
@property(readonly, assign) BOOL isMergeSync;	// G=0x302296b5; 
@property(assign) BOOL isWritable;	// G=0x30229625; S=0x30229635; 
@property(retain) NSString *notificationCollectionCTag;	// G=0x30229031; S=0x30229041; 
@property(retain) NSURL *notificationCollectionURL;	// G=0x30228f89; S=0x30228fa9; 
@property(retain) NSString *notificationURLString;	// G=0x30229331; S=0x30229341; 
@property(retain) NSURL *outboxURL;	// G=0x302291e1; S=0x30229201; 
@property(readonly, assign) NSURL *preferredCalendarUserAddress;	// G=0x3022a929; 
@property(retain) NSURL *principalURL;	// G=0x30228e39; S=0x30228e59; 
@property(readonly, assign) NSSet *pushKeys;	// G=0x3022a6ad; 
@property(retain) NSDictionary *pushTransports;	// G=0x302293c5; S=0x302293d5; 
@property(retain) NSNumber *quotaFreeBytes;	// G=0x3022956d; S=0x3022957d; 
@property(readonly, assign) CalDAVRefreshContext *refreshContext;	// G=0x30229bf1; 
@property(assign) BOOL shouldUpdatePushDelegate;	// G=0x3022b169; S=0x3022b179; @synthesize=_shouldUpdatePushDelegate
@property(readonly, assign) BOOL supportsExtendedCalendarQuery;	// G=0x30229791; 
@property(assign) BOOL supportsFreebusy;	// G=0x30229ba9; S=0x30229bb9; 
@property(readonly, assign) id<CoreDAVTaskManager> taskManager;	// G=0x3022ab99; 
@property(readonly, assign) NSDateComponents *todoFilterEndDate;	// G=0x30229b1d; 
@property(readonly, assign) NSDateComponents *todoFilterStartDate;	// G=0x30229ac1; 
@property(readonly, assign) NSString *uid;	// G=0x3022b159; @synthesize=_uid
+ (id)_preferredCalendarUserAddressFromAddresses:(id)addresses;	// 0x3022a7ad
+ (BOOL)compareAddressURL:(id)url localString:(id)string;	// 0x30227195
- (id)init;	// 0x3022736d
- (id)initWithConfiguration:(id)configuration account:(id)account;	// 0x30227545
// declared property getter: - (id)APSEnv;	// 0x3022a5b9
// declared property getter: - (id)APSSubscriptionURL;	// 0x3022a539
// declared property getter: - (id)APSTopic;	// 0x3022a4f5
// declared property getter: - (id)XMPPServer;	// 0x302294e9
- (id)_addUsernameIfNeeded:(id)needed;	// 0x302288fd
- (id)_sharedSyncEndDate;	// 0x302297c5
- (id)_startDateFromDaysToSync:(int)sync;	// 0x302298c5
- (BOOL)_userAddressSet:(id)set isEqualToSet:(id)set2;	// 0x3022897d
// declared property getter: - (id)account;	// 0x3022895d
- (id)accountID;	// 0x3022ad49
- (id)additionalHeaderValues;	// 0x3022ae65
// declared property getter: - (id)calendarHomePushKey;	// 0x30229465
// declared property getter: - (id)calendarHomeURL;	// 0x30228d91
- (id)calendarOfType:(int)type atURL:(id)url withOptions:(id)options;	// 0x3022a099
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)url;	// 0x3022aab5
// declared property getter: - (id)calendarUserAddresses;	// 0x30228c65
- (id)calendarUserAddressesForCalendar:(id)calendar;	// 0x3022a28d
// declared property getter: - (id)calendars;	// 0x30229c11
// declared property getter: - (BOOL)calendarsAreDirty;	// 0x3022a429
- (BOOL)clearCalendarChanges;	// 0x3022a045
- (id)configuration;	// 0x30227fb9
- (void)dealloc;	// 0x30227381
// declared property getter: - (id)defaultCalendarURL;	// 0x30228ee1
- (id)defaultEventCalendarTitle;	// 0x3022a245
- (id)defaultTodoCalendarTitle;	// 0x3022a251
// declared property getter: - (id)deletedCalendarURLs;	// 0x30229c31
// declared property getter: - (id)dropBoxURL;	// 0x30229289
// declared property getter: - (id)eventFilterEndDate;	// 0x30229a4d
// declared property getter: - (id)eventFilterStartDate;	// 0x302299f1
// declared property getter: - (id)fullName;	// 0x30228d0d
- (BOOL)handleCertificateError:(id)error;	// 0x3022afa5
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x3022af7d
- (BOOL)hasCalendarUserAddress:(id)address;	// 0x3022a9a5
- (id)host;	// 0x3022abd9
- (id)identityPersist;	// 0x3022ad29
// declared property getter: - (id)inboxCTag;	// 0x3022915d
// declared property getter: - (id)inboxURL;	// 0x302290b5
// declared property getter: - (BOOL)isDelegate;	// 0x302295dd
// declared property getter: - (BOOL)isDirty;	// 0x3022b189
// declared property getter: - (BOOL)isEnabled;	// 0x3022966d
// declared property getter: - (BOOL)isEnabledForEvents;	// 0x302296d9
// declared property getter: - (BOOL)isEnabledForTodos;	// 0x30229735
// declared property getter: - (BOOL)isExpandPropertyReportSupported;	// 0x30229b61
// declared property getter: - (BOOL)isMergeSync;	// 0x302296b5
// declared property getter: - (BOOL)isWritable;	// 0x30229625
- (void)noteFailedNetworkRequest;	// 0x3022b0a9
- (void)noteFailedProtocolRequest;	// 0x3022b0e1
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x3022ac19
- (void)noteSuccessfulRequestWithNumDownloadedElements:(int)numDownloadedElements;	// 0x3022b06d
- (void)noteTimeSpentInNetworking:(double)networking;	// 0x3022b119
// declared property getter: - (id)notificationCollectionCTag;	// 0x30229031
// declared property getter: - (id)notificationCollectionURL;	// 0x30228f89
// declared property getter: - (id)notificationURLString;	// 0x30229331
// declared property getter: - (id)outboxURL;	// 0x302291e1
- (id)password;	// 0x3022ad09
- (int)port;	// 0x3022abf9
// declared property getter: - (id)preferredCalendarUserAddress;	// 0x3022a929
- (void)prepareCalendarsForSyncWithCompletionBlock:(id)completionBlock;	// 0x30229d49
// declared property getter: - (id)principalURL;	// 0x30228e39
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x3022aedd
// declared property getter: - (id)pushKeys;	// 0x3022a6ad
// declared property getter: - (id)pushTransports;	// 0x302293c5
// declared property getter: - (id)quotaFreeBytes;	// 0x3022956d
// declared property getter: - (id)refreshContext;	// 0x30229bf1
- (void)removeCalendar:(id)calendar;	// 0x3022a25d
- (id)scheme;	// 0x3022abb9
- (id)serverComplianceClasses;	// 0x3022ad69
- (id)serverRoot;	// 0x3022ace5
- (void)setAccount:(id)account;	// 0x3022896d
// declared property setter: - (void)setCalendarHomePushKey:(id)key;	// 0x30229475
// declared property setter: - (void)setCalendarHomeURL:(id)url;	// 0x30228db1
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x30228c75
- (void)setCalendarUserAddresses:(id)addresses forCalendar:(id)calendar;	// 0x3022a2c9
// declared property setter: - (void)setCalendarsAreDirty:(BOOL)dirty;	// 0x3022a36d
// declared property setter: - (void)setDefaultCalendarURL:(id)url;	// 0x30228f01
// declared property setter: - (void)setDropBoxURL:(id)url;	// 0x302292a9
// declared property setter: - (void)setFullName:(id)name;	// 0x30228d1d
// declared property setter: - (void)setInboxCTag:(id)tag;	// 0x3022916d
// declared property setter: - (void)setInboxURL:(id)url;	// 0x302290d5
// declared property setter: - (void)setIsDelegate:(BOOL)delegate;	// 0x302295ed
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0x3022b199
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0x3022967d
// declared property setter: - (void)setIsExpandPropertyReportSupported:(BOOL)supported;	// 0x30229b71
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x30229635
// declared property setter: - (void)setNotificationCollectionCTag:(id)tag;	// 0x30229041
// declared property setter: - (void)setNotificationCollectionURL:(id)url;	// 0x30228fa9
// declared property setter: - (void)setNotificationURLString:(id)string;	// 0x30229341
// declared property setter: - (void)setOutboxURL:(id)url;	// 0x30229201
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x30228e59
// declared property setter: - (void)setPushTransports:(id)transports;	// 0x302293d5
// declared property setter: - (void)setQuotaFreeBytes:(id)bytes;	// 0x3022957d
// declared property setter: - (void)setShouldUpdatePushDelegate:(BOOL)updatePushDelegate;	// 0x3022b179
// declared property setter: - (void)setSupportsFreebusy:(BOOL)freebusy;	// 0x30229bb9
// declared property setter: - (void)setXMPPServer:(id)server;	// 0x302294f9
- (BOOL)shouldCompressRequests;	// 0x3022b015
- (BOOL)shouldFailAllTasks;	// 0x3022afa9
- (BOOL)shouldHandleHTTPCookiesForURL:(id)url;	// 0x3022afad
- (BOOL)shouldSendClientInfoHeaderForURL:(id)url;	// 0x3022afb1
// declared property getter: - (BOOL)shouldUpdatePushDelegate;	// 0x3022b169
- (BOOL)shouldUseOpportunisticSockets;	// 0x3022b049
// declared property getter: - (BOOL)supportsExtendedCalendarQuery;	// 0x30229791
// declared property getter: - (BOOL)supportsFreebusy;	// 0x30229ba9
// declared property getter: - (id)taskManager;	// 0x3022ab99
// declared property getter: - (id)todoFilterEndDate;	// 0x30229b1d
// declared property getter: - (id)todoFilterStartDate;	// 0x30229ac1
// declared property getter: - (id)uid;	// 0x3022b159
- (id)user;	// 0x3022ace9
- (id)userAgentHeader;	// 0x3022ad6d
@end

