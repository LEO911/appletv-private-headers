/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "ASChangedCollectionLeaf.h"
#import "DADataElement.h"
#import "NSCoding.h"

@class ASRecurrence, NSDate, NSArray, NSNumber, NSString, ASEventUID, ASTimeZone;

@interface ASEvent : ASChangedCollectionLeaf <NSCoding, DADataElement> {
	void *_calRecord;	// 64 = 0x40
	ASTimeZone *_timeZone;	// 68 = 0x44
	NSNumber *_allDayEvent;	// 72 = 0x48
	NSString *_body;	// 76 = 0x4c
	NSNumber *_bodyTruncated;	// 80 = 0x50
	NSNumber *_busyStatus;	// 84 = 0x54
	NSArray *_categories;	// 88 = 0x58
	NSDate *_dTStamp;	// 92 = 0x5c
	NSDate *_endTime;	// 96 = 0x60
	NSString *_location;	// 100 = 0x64
	NSNumber *_meetingStatus;	// 104 = 0x68
	NSString *_organizerEmail;	// 108 = 0x6c
	NSString *_organizerName;	// 112 = 0x70
	NSNumber *_reminderMinsBefore;	// 116 = 0x74
	NSNumber *_sensitivity;	// 120 = 0x78
	NSString *_subject;	// 124 = 0x7c
	NSDate *_startTime;	// 128 = 0x80
	ASEventUID *_eventUID;	// 132 = 0x84
	NSArray *_attendees;	// 136 = 0x88
	NSArray *_attendeesPendingDeletion;	// 140 = 0x8c
	ASRecurrence *_recurrence;	// 144 = 0x90
	NSArray *_exceptions;	// 148 = 0x94
	NSNumber *_responseRequested;	// 152 = 0x98
	int _meetingResponseToEmailAbout;	// 156 = 0x9c
	BOOL _calculateNextStatusAsIfMeetingRequest;	// 160 = 0xa0
	BOOL _shouldUpdateStatus;	// 161 = 0xa1
	BOOL _cachedOrganizerIsSelf;	// 162 = 0xa2
	BOOL _haveCheckedOrganizerEmail;	// 163 = 0xa3
	BOOL _isAttendeeUpdateOnly;	// 164 = 0xa4
	BOOL _isDTStampUpdateOnly;	// 165 = 0xa5
	NSNumber *_responseType;	// 168 = 0xa8
}
@property(retain) NSNumber *allDayEvent;	// G=0x341ece4d; S=0x341ece61; @synthesize=_allDayEvent
@property(retain) NSArray *attendees;	// G=0x341ed16d; S=0x341ed181; @synthesize=_attendees
@property(retain) NSArray *attendeesPendingDeletion;	// G=0x341ed1c5; S=0x341ed1d9; @synthesize=_attendeesPendingDeletion
@property(retain, nonatomic) NSString *body;	// G=0x341ece85; S=0x341eb459; @synthesize=_body
@property(retain) NSNumber *bodyTruncated;	// G=0x341ece95; S=0x341ecea9; @synthesize=_bodyTruncated
@property(retain) NSNumber *busyStatus;	// G=0x341ececd; S=0x341ecee1; @synthesize=_busyStatus
@property(assign) void *calEvent;	// G=0x341ea689; S=0x341ea415; converted property
@property(retain) NSArray *categories;	// G=0x341ecf05; S=0x341ecf19; @synthesize=_categories
@property(retain) NSDate *dTStamp;	// G=0x341ecf3d; S=0x341ecf51; @synthesize=_dTStamp
@property(retain) NSDate *endTime;	// G=0x341ecf75; S=0x341ecf89; @synthesize=_endTime
@property(retain) ASEventUID *eventUID;	// G=0x341eaa59; S=0x341eaa91; @synthesize=_eventUID
@property(retain) id exceptionDate;	// G=0x341eab0d; S=0x341eab11; converted property
@property(retain, nonatomic) NSArray *exceptions;	// G=0x341ed1b5; S=0x341ecce5; @synthesize=_exceptions
@property(retain) NSString *location;	// G=0x341ecfad; S=0x341ecfc1; @synthesize=_location
@property(assign) int meetingResponseForEmail;	// G=0x341e7325; S=0x341e7355; converted property
@property(retain) NSNumber *meetingStatus;	// G=0x341ecfe5; S=0x341ecff9; @synthesize=_meetingStatus
@property(retain) NSString *organizerEmail;	// G=0x341ed01d; S=0x341ed031; @synthesize=_organizerEmail
@property(retain) NSString *organizerName;	// G=0x341ed055; S=0x341ed069; @synthesize=_organizerName
@property(retain, nonatomic) ASRecurrence *recurrence;	// G=0x341ed1a5; S=0x341ecdb9; @synthesize=_recurrence
@property(retain) NSNumber *reminderMinsBefore;	// G=0x341ed08d; S=0x341ed0a1; @synthesize=_reminderMinsBefore
@property(retain) NSNumber *responseRequested;	// G=0x341ed1fd; S=0x341ed211; @synthesize=_responseRequested
@property(retain) NSNumber *responseType;	// G=0x341ed235; S=0x341ed249; @synthesize=_responseType
@property(retain) NSNumber *sensitivity;	// G=0x341ed0c5; S=0x341ed0d9; @synthesize=_sensitivity
@property(retain) NSDate *startTime;	// G=0x341ed135; S=0x341ed149; @synthesize=_startTime
@property(retain) NSString *subject;	// G=0x341ed0fd; S=0x341ed111; @synthesize=_subject
@property(retain) ASTimeZone *timeZone;	// G=0x341ece15; S=0x341ece29; @synthesize=_timeZone
+ (void)_setFakeDTStampDateForUnitTests:(id)unitTests;	// 0x341e9b09
+ (BOOL)acceptsTopLevelLeaves;	// 0x341e5225
+ (id)eventWithCalEvent:(void *)calEvent serverID:(id)anId account:(id)account;	// 0x341e6da5
+ (BOOL)frontingBasicTypes;	// 0x341e5321
+ (BOOL)notifyOfUnknownTokens;	// 0x341e5375
+ (BOOL)parsingLeafNode;	// 0x341e5279
+ (BOOL)parsingWithSubItems;	// 0x341e52cd
+ (void)setSystemTimeZoneNameForUnitTests:(id)unitTests;	// 0x341e51e5
- (id)init;	// 0x341e6c6d
- (id)initWithCalEvent:(void *)calEvent serverID:(id)anId account:(id)account;	// 0x341e6ce1
- (id)initWithCoder:(id)coder;	// 0x341eab15
- (int)CalCalendarItemStatus;	// 0x341e710d
- (BOOL)_bailIfNotNewestDataForAccount:(id)account;	// 0x341e7365
- (void)_determineSelfnessWithLocalEvent:(void *)localEvent forAccount:(id)account;	// 0x341e8d15
- (void)_loadAttributesFromCalEvent:(void *)calEvent forAccount:(id)account;	// 0x341e604d
- (int)_meetingResponseShouldFilterForEmail:(BOOL)_meetingResponse;	// 0x341e72a1
- (int)_nextAttendeeStatusWithOldStatus:(int)oldStatus account:(id)account;	// 0x341e7259
- (int)_nextAttendeeStatusWithOldStatus:(int)oldStatus meetingClassType:(int)type account:(id)account;	// 0x341e71c9
- (int)_nextEventStatusWithOldStatus:(int)oldStatus account:(id)account;	// 0x341e7181
- (int)_nextEventStatusWithOldStatus:(int)oldStatus meetingClassType:(int)type account:(id)account;	// 0x341e712d
- (void)_sanitizeLocalExceptionsForAccount:(id)account;	// 0x341e87c5
- (BOOL)_selfIsMoreCorrectThanOtherEvent:(id)event account:(id)account;	// 0x341ebab5
- (id)_transformedEndDateForActiveSync:(id)activeSync;	// 0x341e552d
- (id)_transformedEndDateForCalFramework:(id)calFramework startDate:(id)date;	// 0x341e5409
- (id)_transformedStartDateForActiveSync:(id)activeSync;	// 0x341e54d5
- (id)_transformedStartDateForCalFramework:(id)calFramework;	// 0x341e53c9
// declared property getter: - (id)allDayEvent;	// 0x341ece4d
- (void)appendActiveSyncDataForTask:(id)task toWBXMLData:(id)wbxmldata;	// 0x341e9b49
- (id)asParseRules;	// 0x341e5635
// declared property getter: - (id)attendees;	// 0x341ed16d
// declared property getter: - (id)attendeesPendingDeletion;	// 0x341ed1c5
// declared property getter: - (id)body;	// 0x341ece85
// declared property getter: - (id)bodyTruncated;	// 0x341ece95
// declared property getter: - (id)busyStatus;	// 0x341ececd
- (BOOL)cachedOrganizerIsSelfWithAccount:(id)account;	// 0x341eb4b1
- (int)calAttendeePendingStatus;	// 0x341e70d9
- (int)calAttendeeStatus;	// 0x341e70a5
// converted property getter: - (void *)calEvent;	// 0x341ea689
// declared property getter: - (id)categories;	// 0x341ecf05
- (void *)copySelfAttendeeGeneratedIfNecessaryWithLocalEvent:(void *)localEvent forAccount:(id)account;	// 0x341e5ebd
// declared property getter: - (id)dTStamp;	// 0x341ecf3d
- (int)dataclass;	// 0x341e5d75
- (void)dealloc;	// 0x341e6ded
- (BOOL)deleteFromCalendar;	// 0x341e9a51
- (BOOL)deleteFromContainer:(void *)container;	// 0x341eba7d
- (id)description;	// 0x341e700d
- (void)encodeWithCoder:(id)coder;	// 0x341eb02d
- (id)endDateForCalFramework;	// 0x341ea9a1
// declared property getter: - (id)endTime;	// 0x341ecf75
- (id)eventByMergingInEvent:(id)event account:(id)account;	// 0x341ecc9d
- (id)eventByMergingInLosingEvent:(id)losingEvent account:(id)account;	// 0x341ec639
// declared property getter: - (id)eventUID;	// 0x341eaa59
// converted property getter: - (id)exceptionDate;	// 0x341eab0d
// declared property getter: - (id)exceptions;	// 0x341ed1b5
- (id)fullOrganizerString;	// 0x341eb4f9
- (BOOL)hasOccurrenceInTheFuture;	// 0x341eb6e5
- (void)informExceptionsThatParentIsReadyForAccount:(id)account;	// 0x341e8c6d
- (BOOL)isEqualToEvent:(id)event;	// 0x341ebead
- (BOOL)loadCalRecordForAccount:(id)account;	// 0x341ea4e9
- (void)loadClientIDs;	// 0x341ea859
- (BOOL)loadLocalItemWithAccount:(id)account;	// 0x341eba4d
// declared property getter: - (id)location;	// 0x341ecfad
- (int)meetingResponse;	// 0x341e7311
// converted property getter: - (int)meetingResponseForEmail;	// 0x341e7325
// declared property getter: - (id)meetingStatus;	// 0x341ecfe5
// declared property getter: - (id)organizerEmail;	// 0x341ed01d
// declared property getter: - (id)organizerName;	// 0x341ed055
- (void)parseASParseContext:(id)context root:(id)root parent:(id)parent callbackDict:(id)dict streamCallbackDict:(id)dict5 account:(id)account;	// 0x341e9989
- (void)postProcessApplicationData;	// 0x341e8e8d
- (BOOL)purgeAttendeesPendingDeletion;	// 0x341eb545
// declared property getter: - (id)recurrence;	// 0x341ed1a5
// declared property getter: - (id)reminderMinsBefore;	// 0x341ed08d
// declared property getter: - (id)responseRequested;	// 0x341ed1fd
// declared property getter: - (id)responseType;	// 0x341ed235
- (BOOL)saveAfterMapWithLocalObject:(void *)localObject toContainer:(void *)container shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x341eba09
- (BOOL)saveDetachedEventsWithExistingRecord:(void *)existingRecord intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x341e8b7d
- (BOOL)saveServerIDToCalendar;	// 0x341ea699
- (BOOL)saveServerIDToExistingItem;	// 0x341eba65
- (BOOL)saveToCalendarWithExistingRecord:(void *)existingRecord intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x341e736d
- (BOOL)saveWithLocalObject:(void *)localObject toContainer:(void *)container shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x341eb9d5
// declared property getter: - (id)sensitivity;	// 0x341ed0c5
// declared property setter: - (void)setAllDayEvent:(id)event;	// 0x341ece61
// declared property setter: - (void)setAttendees:(id)attendees;	// 0x341ed181
// declared property setter: - (void)setAttendeesPendingDeletion:(id)deletion;	// 0x341ed1d9
// declared property setter: - (void)setBody:(id)body;	// 0x341eb459
// declared property setter: - (void)setBodyTruncated:(id)truncated;	// 0x341ecea9
// declared property setter: - (void)setBusyStatus:(id)status;	// 0x341ecee1
// converted property setter: - (void)setCalEvent:(void *)event;	// 0x341ea415
- (void)setCalculateNextStatusAsIfMeetingRequest:(BOOL)request;	// 0x341eba95
// declared property setter: - (void)setCategories:(id)categories;	// 0x341ecf19
// declared property setter: - (void)setDTStamp:(id)stamp;	// 0x341ecf51
// declared property setter: - (void)setEndTime:(id)time;	// 0x341ecf89
// declared property setter: - (void)setEventUID:(id)uid;	// 0x341eaa91
// converted property setter: - (void)setExceptionDate:(id)date;	// 0x341eab11
// declared property setter: - (void)setExceptions:(id)exceptions;	// 0x341ecce5
- (void)setLocalItem:(void *)item;	// 0x341eba3d
// declared property setter: - (void)setLocation:(id)location;	// 0x341ecfc1
// converted property setter: - (void)setMeetingResponseForEmail:(int)email;	// 0x341e7355
// declared property setter: - (void)setMeetingStatus:(id)status;	// 0x341ecff9
// declared property setter: - (void)setOrganizerEmail:(id)email;	// 0x341ed031
// declared property setter: - (void)setOrganizerName:(id)name;	// 0x341ed069
// declared property setter: - (void)setRecurrence:(id)recurrence;	// 0x341ecdb9
// declared property setter: - (void)setReminderMinsBefore:(id)before;	// 0x341ed0a1
// declared property setter: - (void)setResponseRequested:(id)requested;	// 0x341ed211
// declared property setter: - (void)setResponseType:(id)type;	// 0x341ed249
// declared property setter: - (void)setSensitivity:(id)sensitivity;	// 0x341ed0d9
- (void)setShouldUpdateStatus:(BOOL)updateStatus;	// 0x341ebaa5
// declared property setter: - (void)setStartTime:(id)time;	// 0x341ed149
// declared property setter: - (void)setSubject:(id)subject;	// 0x341ed111
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x341ece29
- (BOOL)shouldUseInMemoryAttendeesForAccount:(id)account numExistingAttendees:(int)attendees;	// 0x341e7369
- (id)startDateForCalFramework;	// 0x341ea945
// declared property getter: - (id)startTime;	// 0x341ed135
// declared property getter: - (id)subject;	// 0x341ed0fd
// declared property getter: - (id)timeZone;	// 0x341ece15
- (id)timeZoneNameForCalFramework;	// 0x341e55ad
- (id)uidForCalFramework;	// 0x341eaa39
- (id)uidGeneratedIfNecessaryWithLocalEvent:(void *)localEvent;	// 0x341e5d79
- (BOOL)verifyExternalIds;	// 0x341ea6cd
@end

