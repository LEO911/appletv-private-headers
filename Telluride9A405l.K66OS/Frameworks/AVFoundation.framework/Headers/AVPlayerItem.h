/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import <NSObject.h> // Unknown library
#import "AVFoundation-Structs.h"
#import "NSCopying.h"

@class NSDate, AVPlayerItemInternal, NSError, NSString;

@interface AVPlayerItem : NSObject <NSCopying> {
@private
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x346ac8a1; S=0x346ab1a1; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x346ac961; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x346acae5; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x346acc3d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x346ac9cd; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x346acb91; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x346aca39; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x346a60d5; S=0x346a5f15; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x346ab02d; 
@property(retain) id audioMix;	// G=0x346a58f9; S=0x346a5681; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x346aabe1; 
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x346aaf01; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x346ab07d; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x346a5afd; S=0x346a593d; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x346a5de9; S=0x346a5c29; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x346aaebd; S=0x346aaf91; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x346a1b91; S=0x346ad14d; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x346a8919; @dynamic
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x346a6a19; S=0x346a683d; converted property
@property(retain) id gaplessInfo;	// G=0x346a4711; S=0x346a4405; converted property
@property(retain) id initialDate;	// G=0x346a6d95; S=0x346a6d39; converted property
@property(retain) id initialEstimatedDate;	// G=0x346a6c65; S=0x346a6c09; converted property
@property(assign) BOOL limitReadAhead;	// G=0x346a63c1; S=0x346a6201; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x346a1b29; S=0x346a301d; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x346a66c9; S=0x346a64ed; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x346a1ae1; S=0x346a42f9; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x346a19f9; @dynamic
@property(retain) id videoComposition;	// G=0x346a563d; S=0x346a5399; converted property
@property(assign) float volumeAdjustment;	// G=0x346a1b05; S=0x346a41ed; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x346a17d9
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x346a17c5
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x346acfd9
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x346ad0ed
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x346a1ac9
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x346a1b51
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x346a1ad5
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x346a1ad1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x346a1acd
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x346a1abd
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x346a1add
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x346a1ac5
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x346a1b65
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x346a1b49
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x346a1b59
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x346a1b5d
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x346a1b55
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x346a1b69
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x346a1ac1
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x346a1b61
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x346a1b01
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x346a1b4d
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x346a1b6d
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x346a1ad9
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x346a1b25
+ (void)initialize;	// 0x346a2b0d
+ (id)playerItemWithAsset:(id)asset;	// 0x346a2a7d
+ (id)playerItemWithURL:(id)url;	// 0x346a2ac5
- (id)init;	// 0x346aa335
- (id)initWithAsset:(id)asset;	// 0x346a1c69
- (id)initWithURL:(id)url;	// 0x346a1bb1
- (int)_CreateSeekID;	// 0x346a1a19
- (id)_URL;	// 0x346a19d9
- (void)_addFPListeners;	// 0x346a7f35
- (void)_addSyncLayer:(id)layer;	// 0x346a2d05
- (BOOL)_alwaysMonitorsPlayability;	// 0x346a6161
- (void)_applyAudioMix;	// 0x346a57a1
- (void)_applyInitialAudioMix;	// 0x346a574d
- (void)_applyMediaSelectionOptions;	// 0x346a3df1
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x346a3ca1
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x346a8b61
- (long long)_availableFileSize;	// 0x346ab411
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x346a3a99
- (id)_cachedValueForKey:(id)key;	// 0x346a1d4d
- (BOOL)_canPlayFastForward;	// 0x346a79e5
- (BOOL)_canPlayFastReverse;	// 0x346a78d9
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x346a74c9
- (void)_changeStatusToFailedWithError:(id)error;	// 0x346a87d9
- (void)_configurePlaybackItemForPlayerType:(int)playerType;	// 0x346a92bd
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x346a5b89
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x346a5e75
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x346a1f65
- (void)_createPlayerItemInternal;	// 0x346aa3fd
- (void)_detachFromPlayer;	// 0x346a283d
- (void)_didAccessKVOForKey:(id)key;	// 0x346a1dad
- (XXStruct_pwHToB)_duration;	// 0x346a86f1
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x346a2f2d
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x346a182d
- (long long)_fileSize;	// 0x346ab379
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x346a6aa1
- (id)_fpNotificationNames;	// 0x346a8085
- (BOOL)_hasEnabledVideoMedia;	// 0x346a2b6d
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x346a895d
- (void)_insertAfterItem:(id)item;	// 0x346a18ed
- (void)_invokeReadyForEnqueueingHandlers;	// 0x346a7bf5
- (BOOL)_isCurrentPlayerItem;	// 0x346a186d
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x346ac8a1
// declared property getter: - (BOOL)_isRental;	// 0x346ac961
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x346ac9cd
- (void)_kickAssetObserversIfAppropriate;	// 0x346a8a05
- (BOOL)_limitReadAhead;	// 0x346a644d
- (id)_loadedTimeRanges;	// 0x346a47c5
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x346a29b1
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x346a7a65
- (id)_nextItem;	// 0x346a18ad
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x346a2ca1
- (id)_playbackProperties;	// 0x346a466d
- (id)_player;	// 0x346a1ddd
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x346a2851
- (id)_playerConnection;	// 0x346a188d
- (CGSize)_presentationSize;	// 0x346a77d9
- (id)_previousItem;	// 0x346a18cd
- (id)_propertyStorage;	// 0x346a184d
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x346a5ff9
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x346a5a21
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x346a5d0d
- (void)_quietlySetEQPreset:(int)preset;	// 0x346acf69
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x346a695d
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x346a62e5
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x346a44e5
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x346a660d
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x346a4395
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x346a4289
- (void)_removeFPListeners;	// 0x346a7de5
- (void)_removeFromItems;	// 0x346a1969
- (void)_removeSyncLayer:(id)layer;	// 0x346a2da1
// declared property getter: - (id)_rentalExpirationDate;	// 0x346acae5
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x346acc3d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x346acb91
// declared property getter: - (id)_rentalStartDate;	// 0x346aca39
- (void)_respondToBecomingReadyForBasicInspection;	// 0x346a7cf9
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x346a6751
- (id)_seekableTimeRanges;	// 0x346a4b55
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x346a3985
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x346a3805
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x346a3739
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x346a3b61
- (id)_selectedMediaOptionInAlternateTrackGroup:(id)alternateTrackGroup;	// 0x346a33b1
- (id)_selectedMediaOptionInKeyValueGroup:(id)keyValueGroup;	// 0x346a3179
- (void)_setAsset:(id)asset;	// 0x346a289d
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x346a8aa5
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x346a28f9
- (void)_setAudibleDRMInfo:(id)info;	// 0x346aadbd
- (void)_setEQPreset:(int)preset;	// 0x346aae61
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x346a3c2d
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x346ab1a1
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x346a1e09
- (void)_setPlayerConnection:(id)connection;	// 0x346a1f09
- (void)_setRampInOutInfo:(id)outInfo;	// 0x346aad19
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x346a2ded
- (void)_setTimedMetadata:(id)metadata;	// 0x346a2e75
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x346a2955
- (void)_setURL:(id)url;	// 0x346a2861
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x346a52fd
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x346a51bd
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x346a520d
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x346a528d
- (void)_setVideoCompositor:(id)compositor;	// 0x346a5101
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x346a180d
- (id)_trackWithTrackID:(int)trackID;	// 0x346a8209
- (id)_tracks;	// 0x346a8371
- (id)_unregisterAndReturnRetainedSeekCompletionHandler;	// 0x346a1a79
- (id)_weakReference;	// 0x346a17ed
- (void)_willAccessKVOForKey:(id)key;	// 0x346a1d7d
- (id)accessLog;	// 0x346acce9
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x346a979d
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x346a60d5
- (id)asset;	// 0x346a8795
// converted property getter: - (id)audioMix;	// 0x346a58f9
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x346aaf01
- (BOOL)canPlayFastForward;	// 0x346a7959
- (BOOL)canPlayFastReverse;	// 0x346a784d
- (void)cancelPendingSeeks;	// 0x346a6ead
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x346a5afd
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x346a5de9
- (id)copyWithZone:(NSZone *)zone;	// 0x346a9b39
- (id)currentDate;	// 0x346a6e1d
- (id)currentEstimatedDate;	// 0x346a6ca9
- (XXStruct_pwHToB)currentTime;	// 0x346a7695
// declared property getter: - (id)dataYouTubeID;	// 0x346aaebd
- (void)dealloc;	// 0x346a9fed
- (id)description;	// 0x346a9a61
- (void)didChangeValueForKey:(id)key;	// 0x346a9911
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x346ad1c9
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x346a1b91
- (XXStruct_pwHToB)duration;	// 0x346a8635
// declared property getter: - (id)error;	// 0x346a8919
- (id)errorLog;	// 0x346acdb9
- (void)finalize;	// 0x346a9ef9
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x346a6a19
// converted property getter: - (id)gaplessInfo;	// 0x346a4711
// converted property getter: - (id)initialDate;	// 0x346a6d95
// converted property getter: - (id)initialEstimatedDate;	// 0x346a6c65
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x346ab02d
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x346aabe1
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x346ab07d
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x346a1b29
- (BOOL)isPlaybackBufferEmpty;	// 0x346a4f81
- (BOOL)isPlaybackBufferFull;	// 0x346a5001
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x346a5081
// converted property getter: - (BOOL)limitReadAhead;	// 0x346a63c1
- (id)loadedTimeRanges;	// 0x346a4755
- (id)playabilityMetrics;	// 0x346a4e75
- (CGSize)presentationSize;	// 0x346a773d
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x346a4ef9
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x346a66c9
- (BOOL)seekToDate:(id)date;	// 0x346a6dd9
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x346a7495
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x346a739d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x346a7415
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x346a6f35
- (id)seekableTimeRanges;	// 0x346a4ae5
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x346a3715
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x346a3f99
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x346a30d5
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x346a40a5
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x346a5f15
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x346a5681
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x346a593d
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x346a5c29
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x346aaf91
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x346ad14d
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x346a683d
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x346a4405
// converted property setter: - (void)setInitialDate:(id)date;	// 0x346a6d39
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x346a6c09
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x346a6201
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x346a301d
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x346a64ed
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x346a42f9
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x346a5399
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x346a41ed
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x346a1ae1
// declared property getter: - (int)status;	// 0x346a19f9
- (void)stepByCount:(int)count;	// 0x346a6b8d
- (id)timedMetadata;	// 0x346a2ee9
- (id)tracks;	// 0x346a82e1
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x346a99d5
// converted property getter: - (id)videoComposition;	// 0x346a563d
// converted property getter: - (float)volumeAdjustment;	// 0x346a1b05
- (void)willChangeValueForKey:(id)key;	// 0x346a9971
@end

