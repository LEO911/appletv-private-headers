/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "NSCoding.h"
#import "NSCopying.h"
#import <NSObject.h> // Unknown library

@class NSArray, MPMediaLibrary, MPMediaQuerySectionInfo, NSSet;

@interface MPMediaQuery : NSObject <NSCoding, NSCopying> {
@private
	MPMediaQueryInternal _internal;	// 4 = 0x4
}
@property(assign, nonatomic) MPMediaQueryInternal _internal;	// G=0x33bff419; S=0x33bff441; @synthesize
@property(copy, nonatomic) NSSet *collectionPropertiesToFetch;	// G=0x33bfe4b9; S=0x33bfe501; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *collectionSectionInfo;	// G=0x33bfe591; 
@property(readonly, assign, nonatomic) NSArray *collectionSections;	// G=0x33bfea45; 
@property(readonly, assign, nonatomic) NSArray *collections;	// G=0x33bfde21; 
@property(retain) id criteria;	// G=0x33bff3bd; S=0x33bff3d1; converted property
@property(readonly, assign, nonatomic) BOOL excludesEntitiesWithBlankNames;	// G=0x33bfe6c1; 
@property(retain, nonatomic) NSSet *filterPredicates;	// G=0x33bfdb99; S=0x33bfdbe1; 
@property(assign, nonatomic) int groupingType;	// G=0x33bfde5d; S=0x33bfde81; 
@property(copy, nonatomic) NSSet *itemPropertiesToFetch;	// G=0x33bfe42d; S=0x33bfe451; 
@property(readonly, assign, nonatomic) MPMediaQuerySectionInfo *itemSectionInfo;	// G=0x33bfe569; 
@property(readonly, assign, nonatomic) NSArray *itemSections;	// G=0x33bfea1d; 
@property(readonly, assign, nonatomic) NSArray *items;	// G=0x33bfdde5; 
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary;	// G=0x33bfdd91; S=0x33bfdda1; 
@property(copy, nonatomic, getter=_orderingProperties, setter=_setOrderingProperties:) NSArray *orderingProperties;	// G=0x33bfe621; S=0x33bfe5b9; 
@property(assign, nonatomic) BOOL sortItems;	// G=0x33bfe695; S=0x33bfe669; 
@property(readonly, assign, nonatomic) BOOL specifiesPlaylistItems;	// G=0x33bfe97d; 
@property(readonly, assign, nonatomic) BOOL willGroupEntities;	// G=0x33bfe9a9; 
+ (id)ITunesUAudioQuery;	// 0x33bfd7b9
+ (id)activeGeniusPlaylist;	// 0x33c3e06d
+ (id)albumsQuery;	// 0x33bfd415
+ (id)artistsQuery;	// 0x33bfd4e5
+ (id)audibleAudiobooksQuery;	// 0x33bfd995
+ (id)audiobooksQuery;	// 0x33bfd8dd
+ (id)compilationsQuery;	// 0x33bfda11
+ (id)composersQuery;	// 0x33bfdae1
+ (id)geniusMixesQuery;	// 0x33bfe325
+ (id)genresQuery;	// 0x33bfdb3d
+ (void)initialize;	// 0x33bfc8ad
+ (id)movieRentalsQuery;	// 0x33bfe1f1
+ (id)moviesQuery;	// 0x33bfe139
+ (id)musicVideosQuery;	// 0x33bfdfc9
+ (id)playlistsQuery;	// 0x33bfd68d
+ (id)podcastsQuery;	// 0x33bfd6e9
+ (void)setFilteringDisabled:(BOOL)disabled;	// 0x33bfded1
+ (id)songsQuery;	// 0x33bfd5b5
+ (id)tvShowsQuery;	// 0x33bfe081
+ (id)videoPodcastsQuery;	// 0x33bfe26d
+ (id)videosQuery;	// 0x33bfdf11
- (id)init;	// 0x33bfc8fd
- (id)initWithCoder:(id)coder;	// 0x33bfce2d
- (id)initWithCriteria:(id)criteria library:(id)library;	// 0x33bfc911
- (id)initWithEntities:(id)entities entityType:(int)type;	// 0x33bfca91
- (id)initWithFilterPredicates:(id)filterPredicates;	// 0x33bfca1d
- (id)initWithFilterPredicatesInternal:(id)filterPredicatesInternal;	// 0x33bfc989
- (void)_enumerateCollectionsUsingBlock:(id)block;	// 0x33bff03d
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x33bfeea5
// declared property getter: - (MPMediaQueryInternal)_internal;	// 0x33bff419
- (BOOL)_isFilteringDisabled;	// 0x33bfee59
// declared property getter: - (id)_orderingProperties;	// 0x33bfe621
- (id)_sanitizedQuery;	// 0x33bfea6d
// declared property setter: - (void)_setOrderingProperties:(id)properties;	// 0x33bfe5b9
- (id)_valueForAggregateFunction:(id)aggregateFunction onProperty:(id)property entityType:(int)type;	// 0x33bfeadd
- (void)addFilterPredicate:(id)predicate;	// 0x33bfdc49
// declared property getter: - (id)collectionPropertiesToFetch;	// 0x33bfe4b9
// declared property getter: - (id)collectionSectionInfo;	// 0x33bfe591
// declared property getter: - (id)collectionSections;	// 0x33bfea45
// declared property getter: - (id)collections;	// 0x33bfde21
- (id)copyWithZone:(NSZone *)zone;	// 0x33bfd2ad
// converted property getter: - (id)criteria;	// 0x33bff3bd
- (void)dealloc;	// 0x33bfcadd
- (id)description;	// 0x33bfcb39
- (void)encodeWithCoder:(id)coder;	// 0x33bfd0c1
// declared property getter: - (BOOL)excludesEntitiesWithBlankNames;	// 0x33bfe6c1
// declared property getter: - (id)filterPredicates;	// 0x33bfdb99
- (unsigned)groupingThreshold;	// 0x33bfe9a5
// declared property getter: - (int)groupingType;	// 0x33bfde5d
- (unsigned)hash;	// 0x33bfcde9
- (BOOL)isEqual:(id)equal;	// 0x33bfcd31
// declared property getter: - (id)itemPropertiesToFetch;	// 0x33bfe42d
// declared property getter: - (id)itemSectionInfo;	// 0x33bfe569
// declared property getter: - (id)itemSections;	// 0x33bfea1d
// declared property getter: - (id)items;	// 0x33bfdde5
// declared property getter: - (id)mediaLibrary;	// 0x33bfdd91
- (id)predicateForProperty:(id)property;	// 0x33c3e20d
- (void)removeFilterPredicate:(id)predicate;	// 0x33bfdce5
- (void)removePredicatesForProperty:(id)property;	// 0x33c3e311
// declared property setter: - (void)setCollectionPropertiesToFetch:(id)fetch;	// 0x33bfe501
// converted property setter: - (void)setCriteria:(id)criteria;	// 0x33bff3d1
- (void)setFilterPredicate:(id)predicate forProperty:(id)property;	// 0x33c3e421
// declared property setter: - (void)setFilterPredicates:(id)predicates;	// 0x33bfdbe1
- (void)setFilterPropertyPredicate:(id)predicate;	// 0x33c3e47d
// declared property setter: - (void)setGroupingType:(int)type;	// 0x33bfde81
// declared property setter: - (void)setItemPropertiesToFetch:(id)fetch;	// 0x33bfe451
// declared property setter: - (void)setMediaLibrary:(id)library;	// 0x33bfdda1
// declared property setter: - (void)setSortItems:(BOOL)items;	// 0x33bfe669
- (void)setStaticEntities:(id)entities entityType:(int)type;	// 0x33bff365
// declared property setter: - (void)set_internal:(MPMediaQueryInternal)internal;	// 0x33bff441
// declared property getter: - (BOOL)sortItems;	// 0x33bfe695
// declared property getter: - (BOOL)specifiesPlaylistItems;	// 0x33bfe97d
- (id)valueForAggregateFunction:(id)aggregateFunction onCollectionsForProperty:(id)property;	// 0x33bfee35
- (id)valueForAggregateFunction:(id)aggregateFunction onItemsForProperty:(id)property;	// 0x33bfee11
// declared property getter: - (BOOL)willGroupEntities;	// 0x33bfe9a9
@end

