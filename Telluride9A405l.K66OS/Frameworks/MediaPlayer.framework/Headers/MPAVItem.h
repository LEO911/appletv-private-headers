/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MediaPlayer-Structs.h"

@class AVAsset, AVPlayerItem, MPMediaItem, MPAVController, NSURL, MPAlternateTracks, NSString, MPQueueFeeder, NSArray, NSData;

@interface MPAVItem : NSObject {
	AVAsset *_asset;	// 4 = 0x4
	dispatch_queue_s *_assetQueue;	// 8 = 0x8
	AVPlayerItem *_avPlayerItem;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	NSArray *_chapterTimeMarkers;	// 28 = 0x1c
	NSArray *_artworkTimeMarkers;	// 32 = 0x20
	NSArray *_urlTimeMarkers;	// 36 = 0x24
	NSArray *_closedCaptionTimeMarkers;	// 40 = 0x28
	MPAlternateTracks *_alternateTracks;	// 44 = 0x2c
	double _cachedDuration;	// 48 = 0x30
	double _cachedPlayableDuration;	// 56 = 0x38
	unsigned _type;	// 64 = 0x40
	float _defaultPlaybackRate;	// 68 = 0x44
	unsigned _indexInQueueFeeder;	// 72 = 0x48
	unsigned _advancedDuringPlayback : 1;	// 76 = 0x4c
	unsigned _handledFinishTime : 1;	// 76 = 0x4c
	unsigned _hasPlayedThisSession : 1;	// 76 = 0x4c
	unsigned _wasCountedAsSkipped : 1;	// 76 = 0x4c
	unsigned _isStreamable : 2;	// 76 = 0x4c
	unsigned _useCachedPlayableDuration : 1;	// 76 = 0x4c
	unsigned _watchingAttributes : 1;	// 76 = 0x4c
	unsigned _lyricsAvailable : 1;	// 77 = 0x4d
	unsigned _delayedInvalidateCachedPlayedDurationScheduled : 1;	// 77 = 0x4d
	unsigned _timeMarkersNeedLoading : 1;	// 77 = 0x4d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x33bbb481; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x33bbb489; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x33bbb491; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x33bbb48d; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x33bbdd35; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x33bbb485; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x33bbb495; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x33bbb499; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x33bbcad9; S=0x33bbde09; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x33bba6ad; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x33bbcab1; S=0x33bbdde5; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x33bbcba5; S=0x33bbcb29; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x33bbb49d; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x33bbb4c1; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x33bbb4e9; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x33bbdd65; S=0x33bbdd75; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x33bbb4a5; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x33bbb4a1; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x33bbb545; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x33bbb4fd; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x33bbd36d; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x33bbd3ad; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x33bbd441; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x33bbd3c1; 
@property(readonly, assign, nonatomic) BOOL externalProtectionEnabled;	// G=0x33bbd32d; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x33bbdd45; S=0x33bbdd55; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x33bbb741; S=0x33bbb781; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x33bbb4bd; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x33bbb5dd; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x33bbb5e1; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x33bbb5e5; S=0x33bbb825; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x33bbddc5; S=0x33bbddd5; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x33bbdd85; S=0x33bbdd95; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x33bbb555; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x33bbb669; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x33c633d1; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x33bbd1cd; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x33bbd585; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x33bbd705; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x33bbaae5; S=0x33bbaaf9; 
@property(assign, nonatomic) MPAVController *player;	// G=0x33bbdda5; S=0x33bbddb5; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x33bba889; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x33bbb66d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x33bbb705; 
@property(readonly, assign, nonatomic) BOOL requiresExternalProtection;	// G=0x33bbd305; 
@property(readonly, assign, nonatomic) int status;	// G=0x33bbaa51; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x33bbb5f9; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x33bbd805; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x33bbd74d; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x33bbd1b9; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x33bbcb01; S=0x33bbde2d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x33bbbb55; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x33bbd1c9; 
@property(assign) BOOL userSkippedPlayback;	// G=0x33bbab89; S=0x33bbab61; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x33bbd2b1; S=0x33bbd2d9; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x33bbd1d9; 
+ (id)URLFromPath:(id)path;	// 0x33bba195
+ (unsigned)defaultScaleMode;	// 0x33bba165
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x33bba175
- (id)init;	// 0x33bba245
- (id)initWithAsset:(id)asset;	// 0x33bba2d1
- (id)initWithURL:(id)url;	// 0x33bba259
- (id)initWithURL:(id)url options:(id)options;	// 0x33bba295
- (void)_checkAllowsBlockingDurationCall;	// 0x33bbb895
- (void)_delayedInvalidateCachedPlayedDuration;	// 0x33bbd905
- (double)_durationFromExternalMetadataIfAvailable;	// 0x33bbd3e5
- (double)_durationInSeconds;	// 0x33bbab9d
- (void)_itemAttributeAvailableKey:(id)key;	// 0x33bbd935
- (void)_loadAssetAndPlayerItem;	// 0x33bba5ad
- (void)_loadTimeMarkersAsync;	// 0x33bbc991
- (void)_loadTimeMarkersBlocking;	// 0x33bbbb59
- (void)_realoadEmbeddedTimeMarkers;	// 0x33bbb861
- (void)_releaseAllTimeMarkers;	// 0x33bba3fd
// declared property getter: - (id)album;	// 0x33bbb481
// declared property getter: - (id)albumArtist;	// 0x33bbb489
// declared property getter: - (unsigned)albumTrackCount;	// 0x33bbb491
// declared property getter: - (unsigned)albumTrackNumber;	// 0x33bbb48d
- (BOOL)allowAutoChangingScaleModeToFill;	// 0x33bba161
// declared property getter: - (id)alternateTracks;	// 0x33bbdd35
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x33bbb5b9
// declared property getter: - (id)artist;	// 0x33bbb485
// declared property getter: - (id)artworkImageData;	// 0x33bbb495
// declared property getter: - (id)artworkMIMEType;	// 0x33bbb499
- (id)artworkTimeMarkerForTime:(double)time;	// 0x33bbccbd
// declared property getter: - (id)artworkTimeMarkers;	// 0x33bbcad9
// declared property getter: - (id)asset;	// 0x33bba6ad
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x33bbdb71
- (id)chapterTimeMarkerForTime:(double)time;	// 0x33bbcbb5
// declared property getter: - (id)chapterTimeMarkers;	// 0x33bbcab1
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x33bbcecd
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x33bbcba5
// declared property getter: - (id)composer;	// 0x33bbb49d
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x33bbb4c1
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x33bbb4e9
- (void)dealloc;	// 0x33bba481
// declared property getter: - (float)defaultPlaybackRate;	// 0x33bbdd65
// declared property getter: - (unsigned)discCount;	// 0x33bbb4a5
// declared property getter: - (unsigned)discNumber;	// 0x33bbb4a1
// declared property getter: - (id)displayableText;	// 0x33bbb545
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x33bbb4fd
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x33bbd36d
// declared property getter: - (double)durationFromExternalMetadata;	// 0x33bbd3ad
// declared property getter: - (double)durationIfAvailable;	// 0x33bbd441
- (double)durationInSeconds;	// 0x33bbabe5
// declared property getter: - (BOOL)durationIsValid;	// 0x33bbd3c1
// declared property getter: - (BOOL)externalProtectionEnabled;	// 0x33bbd32d
// declared property getter: - (id)feeder;	// 0x33bbdd45
- (void)flushNowPlayingCaches;	// 0x33bba57d
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x33bbb741
// declared property getter: - (id)genre;	// 0x33bbb4bd
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x33bbb595
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x33bbb5dd
// declared property getter: - (BOOL)hasDisplayableText;	// 0x33bbb5e1
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x33bbb5e5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x33bbba75
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x33bbddc5
// declared property getter: - (BOOL)isAssetLoaded;	// 0x33bbdd85
- (BOOL)isAssetURLValid;	// 0x33bbb4b9
- (BOOL)isPlaceholderForItem:(id)item;	// 0x33bbb4b5
// declared property getter: - (BOOL)isStreamable;	// 0x33bbb5f9
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x33bba189
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x33bbb4a9
- (void)loadAssetAndPlayerItem;	// 0x33bba5a9
- (id)localeForAssetTrack:(id)assetTrack;	// 0x33bbb9c9
- (id)localizedPositionInPlaylistString;	// 0x33bbd1dd
// declared property getter: - (id)lyrics;	// 0x33bbb555
// declared property getter: - (id)mainTitle;	// 0x33bbb669
// declared property getter: - (id)mediaItem;	// 0x33c633d1
- (CGSize)naturalSize;	// 0x33bbdb35
- (void)notePlaybackFinishedByHittingEnd;	// 0x33bbaacd
- (id)path;	// 0x33bbac55
// declared property getter: - (unsigned long long)persistentID;	// 0x33bbd1cd
// declared property getter: - (double)playableDuration;	// 0x33bbd585
// declared property getter: - (double)playableDurationIfAvailable;	// 0x33bbd705
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x33bbaae5
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x33bbb671
// declared property getter: - (id)player;	// 0x33bbdda5
// declared property getter: - (id)playerItem;	// 0x33bba889
// declared property getter: - (id)podcastURL;	// 0x33bbb66d
- (void)postDurationDidChange;	// 0x33bbb43d
// declared property getter: - (CGSize)presentationSize;	// 0x33bbb705
- (void)reevaluateType;	// 0x33bbcfd5
// declared property getter: - (BOOL)requiresExternalProtection;	// 0x33bbd305
- (void)resetBookkeeping;	// 0x33bbaa71
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x33bbb7c9
- (void)setAlternateAudioTrackID:(unsigned)anId;	// 0x33bbaac5
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x33bbde09
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x33bbdde5
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x33bbcb29
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x33bbdd75
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x33bbdd55
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x33bbb781
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x33bbb825
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x33bbddd5
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x33bbdd95
- (void)setOverrideDuration:(double)duration;	// 0x33bbb84d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x33bbaaf9
- (void)setPlaybackFinishedTime:(double)time;	// 0x33bbaafd
- (void)setPlaybackStoppedTime:(double)time;	// 0x33bbaac9
// declared property setter: - (void)setPlayer:(id)player;	// 0x33bbddb5
- (void)setRating:(float)rating;	// 0x33bbab15
- (void)setSubtitleTrackID:(unsigned)anId;	// 0x33bbab19
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x33bbde2d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x33bbab1d
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x33bbab35
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x33bbab61
// declared property setter: - (void)setVideoID:(id)anId;	// 0x33bbd2d9
- (void)setupPlaybackInfo;	// 0x33bbad4d
// declared property getter: - (int)status;	// 0x33bbaa51
// declared property getter: - (double)timeOfSeekableEnd;	// 0x33bbd805
// declared property getter: - (double)timeOfSeekableStart;	// 0x33bbd74d
- (id)titlesForTime:(double)time;	// 0x33bbbb51
// declared property getter: - (unsigned)type;	// 0x33bbd1b9
- (void)updateAttributesForDefaultsChange:(id)defaultsChange;	// 0x33bbb439
- (id)url;	// 0x33bbacdd
- (id)urlTimeMarkerForTime:(double)time;	// 0x33bbcdc5
// declared property getter: - (id)urlTimeMarkers;	// 0x33bbcb01
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x33bbbb55
// declared property getter: - (float)userRating;	// 0x33bbd1c9
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x33bbab89
// declared property getter: - (id)videoID;	// 0x33bbd2b1
// declared property getter: - (BOOL)wantsSubtitles;	// 0x33bbd1d9
@end

