/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x3030a971; S=0x3027dc89; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x3030ab0d; S=0x3029e8cd; converted property
@property(retain) id currencyCode;	// G=0x3030bc6d; S=0x3030bd2d; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x3030abc1; S=0x3030ac81; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x3030d701; S=0x3030d7c1; converted property
@property(retain) id currencySymbol;	// G=0x3030bdc9; S=0x3030be89; converted property
@property(retain) id decimalSeparator;	// G=0x3030a9b1; S=0x3030aa71; converted property
@property(retain) id exponentSymbol;	// G=0x3030c5f1; S=0x3030c6b1; converted property
@property(assign) unsigned formatWidth;	// G=0x3030c981; S=0x3030ca5d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x3030a39d; S=0x3029e6e1; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x3030a355; S=0x3028d69d; converted property
@property(retain) id groupingSeparator;	// G=0x3030add1; S=0x3030ae91; converted property
@property(assign) unsigned groupingSize;	// G=0x3030c74d; S=0x302990fd; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x3030bf25; S=0x3030bfe5; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x3030d85d; S=0x3030d91d; converted property
@property(retain) id locale;	// G=0x3030a2e5; S=0x3028d631; converted property
@property(retain) id maximum;	// G=0x3030d645; S=0x3030d66d; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x3030d4ad; S=0x30293849; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x3030d279; S=0x3030d355; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x3030dc35; S=0x3030dd11; converted property
@property(retain) id minimum;	// G=0x3030d589; S=0x3030d5b1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x3030d3d1; S=0x3029e94d; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x3030d19d; S=0x3029e9c9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x3030dadd; S=0x3030dbb9; converted property
@property(retain) id minusSign;	// G=0x3030c339; S=0x3030c3f9; converted property
@property(retain) id multiplier;	// G=0x3030cad9; S=0x3030cb99; converted property
@property(retain) id negativeFormat;	// G=0x3030a3dd; S=0x3030a495; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x3030b59d; S=0x3027dc31; converted property
@property(retain) id negativePrefix;	// G=0x3030b9b5; S=0x3030ba75; converted property
@property(retain) id negativeSuffix;	// G=0x3030bb11; S=0x3030bbd1; converted property
@property(retain) id nilSymbol;	// G=0x3030b0a5; S=0x3027db81; converted property
@property(retain) id notANumberSymbol;	// G=0x3030b205; S=0x3030b2c5; converted property
@property(assign) unsigned numberStyle;	// G=0x3030a265; S=0x30282f51; converted property
@property(retain) id paddingCharacter;	// G=0x3030cc35; S=0x3030ccf5; converted property
@property(assign) unsigned paddingPosition;	// G=0x3030cd91; S=0x3030ce6d; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x3030dd8d; S=0x3030ddd5; converted property
@property(retain) id perMillSymbol;	// G=0x3030c1dd; S=0x3030c29d; converted property
@property(retain) id percentSymbol;	// G=0x3030c081; S=0x3030c141; converted property
@property(retain) id plusSign;	// G=0x3030c495; S=0x3030c555; converted property
@property(retain) id positiveFormat;	// G=0x3030a6cd; S=0x3030a769; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x3030b43d; S=0x3027dbd9; converted property
@property(retain) id positivePrefix;	// G=0x3030b6fd; S=0x3030b7bd; converted property
@property(retain) id positiveSuffix;	// G=0x3030b859; S=0x3030b919; converted property
@property(retain) id roundingIncrement;	// G=0x3030d041; S=0x3030d101; converted property
@property(assign) unsigned roundingMode;	// G=0x3030cee9; S=0x3030cfc5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x3030c829; S=0x3030c905; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x3030b621; S=0x3030b6a5; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x3030a5f1; S=0x3030a675; converted property
@property(retain) id textAttributesForNil;	// G=0x3030b129; S=0x3030b1ad; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x3030b361; S=0x3030b3e5; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x3030b4c1; S=0x3030b545; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x3030a895; S=0x3030a919; converted property
@property(retain) id textAttributesForZero;	// G=0x3030afc9; S=0x3030b04d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x3030ad1d; S=0x30281331; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x3030d99d; S=0x3030da5d; converted property
@property(retain) id zeroSymbol;	// G=0x30296365; S=0x3030af2d; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x3027db71
+ (void)initialize;	// 0x3027d7a1
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x3029eac1
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x3027d7cd
- (id)init;	// 0x3027d7e5
- (id)initWithCoder:(id)coder;	// 0x303097ad
- (void *)__Keynote_NOOP;	// 0x303094dd
- (void)_regenerateFormatter;	// 0x3027dce5
- (void)_reset;	// 0x303094e1
// converted property getter: - (BOOL)allowsFloats;	// 0x3030a971
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x3030ab0d
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x3030994d
- (id)copyWithZone:(NSZone *)zone;	// 0x3030969d
// converted property getter: - (id)currencyCode;	// 0x3030bc6d
// converted property getter: - (id)currencyDecimalSeparator;	// 0x3030abc1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x3030d701
// converted property getter: - (id)currencySymbol;	// 0x3030bdc9
- (void)dealloc;	// 0x3028d771
// converted property getter: - (id)decimalSeparator;	// 0x3030a9b1
- (void)encodeWithCoder:(id)coder;	// 0x30309705
// converted property getter: - (id)exponentSymbol;	// 0x3030c5f1
- (void)finalize;	// 0x30309659
// converted property getter: - (unsigned)formatWidth;	// 0x3030c981
// converted property getter: - (unsigned)formatterBehavior;	// 0x3030a39d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x3030a355
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x30309951
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x3030a209
// converted property getter: - (id)groupingSeparator;	// 0x3030add1
// converted property getter: - (unsigned)groupingSize;	// 0x3030c74d
// converted property getter: - (id)internationalCurrencySymbol;	// 0x3030bf25
// converted property getter: - (BOOL)isLenient;	// 0x3030d85d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x3030dd8d
// converted property getter: - (id)locale;	// 0x3030a2e5
// converted property getter: - (id)maximum;	// 0x3030d645
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x3030d4ad
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x3030d279
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x3030dc35
// converted property getter: - (id)minimum;	// 0x3030d589
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x3030d3d1
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x3030d19d
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x3030dadd
// converted property getter: - (id)minusSign;	// 0x3030c339
// converted property getter: - (id)multiplier;	// 0x3030cad9
// converted property getter: - (id)negativeFormat;	// 0x3030a3dd
// converted property getter: - (id)negativeInfinitySymbol;	// 0x3030b59d
// converted property getter: - (id)negativePrefix;	// 0x3030b9b5
// converted property getter: - (id)negativeSuffix;	// 0x3030bb11
// converted property getter: - (id)nilSymbol;	// 0x3030b0a5
// converted property getter: - (id)notANumberSymbol;	// 0x3030b205
- (id)numberFromString:(id)string;	// 0x3030a229
// converted property getter: - (unsigned)numberStyle;	// 0x3030a265
// converted property getter: - (id)paddingCharacter;	// 0x3030cc35
// converted property getter: - (unsigned)paddingPosition;	// 0x3030cd91
// converted property getter: - (id)perMillSymbol;	// 0x3030c1dd
// converted property getter: - (id)percentSymbol;	// 0x3030c081
// converted property getter: - (id)plusSign;	// 0x3030c495
// converted property getter: - (id)positiveFormat;	// 0x3030a6cd
// converted property getter: - (id)positiveInfinitySymbol;	// 0x3030b43d
// converted property getter: - (id)positivePrefix;	// 0x3030b6fd
// converted property getter: - (id)positiveSuffix;	// 0x3030b859
// converted property getter: - (id)roundingIncrement;	// 0x3030d041
// converted property getter: - (unsigned)roundingMode;	// 0x3030cee9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x3030c829
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x3027dc89
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x3029e8cd
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x3030bd2d
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x3030ac81
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x3030d7c1
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x3030be89
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x3030aa71
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x3030c6b1
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x3030ca5d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x3029e6e1
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x3028d69d
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x3030ae91
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x302990fd
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x3030bfe5
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x3030d91d
// converted property setter: - (void)setLocale:(id)locale;	// 0x3028d631
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x3030d66d
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x30293849
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x3030d355
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x3030dd11
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x3030d5b1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x3029e94d
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x3029e9c9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x3030dbb9
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x3030c3f9
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x3030cb99
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x3030a495
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x3027dc31
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x3030ba75
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x3030bbd1
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x3027db81
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x3030b2c5
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x30282f51
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x3030ccf5
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x3030ce6d
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x3030ddd5
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x3030c29d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x3030c141
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x3030c555
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x3030a769
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x3027dbd9
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x3030b7bd
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x3030b919
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x3030d101
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x3030cfc5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x3030c905
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x3030b6a5
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x3030a675
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x3030b1ad
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x3030b3e5
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x3030b545
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x3030a919
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x3030b04d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x30281331
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x3030da5d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x3030af2d
- (id)stringForObjectValue:(id)objectValue;	// 0x302813d1
- (id)stringFromNumber:(id)number;	// 0x302813b1
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x3030b621
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x3030a5f1
// converted property getter: - (id)textAttributesForNil;	// 0x3030b129
// converted property getter: - (id)textAttributesForNotANumber;	// 0x3030b361
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x3030b4c1
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x3030a895
// converted property getter: - (id)textAttributesForZero;	// 0x3030afc9
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x3030ad1d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x3030d99d
// converted property getter: - (id)zeroSymbol;	// 0x30296365
@end

