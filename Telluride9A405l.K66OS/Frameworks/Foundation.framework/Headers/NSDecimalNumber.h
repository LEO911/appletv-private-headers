/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSNumber.h"


@interface NSDecimalNumber : NSNumber {
@private
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x302ff8f1
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x302ff9f5
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x302ff9b5
+ (id)decimalNumberWithString:(id)string;	// 0x302ffa45
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x302ffa75
+ (id)defaultBehavior;	// 0x3030073d
+ (id)maximumDecimalNumber;	// 0x302ffc89
+ (id)minimumDecimalNumber;	// 0x302ffc1d
+ (id)notANumber;	// 0x302ffda5
+ (id)numberWithBool:(BOOL)aBool;	// 0x30301c3d
+ (id)numberWithChar:(BOOL)aChar;	// 0x30301809
+ (id)numberWithDouble:(double)aDouble;	// 0x30301bed
+ (id)numberWithFloat:(float)aFloat;	// 0x30301ba1
+ (id)numberWithInt:(int)int;	// 0x30301939
+ (id)numberWithInteger:(int)integer;	// 0x30301985
+ (id)numberWithLong:(long)aLong;	// 0x30301a69
+ (id)numberWithLongLong:(long long)longLong;	// 0x30301b01
+ (id)numberWithShort:(short)aShort;	// 0x303018a1
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x30301855
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x303019d1
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x30301a1d
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x30301ab5
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x30301b51
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x303018ed
+ (id)one;	// 0x302ffd35
+ (void)setDefaultBehavior:(id)behavior;	// 0x303006e9
+ (id)zero;	// 0x302ffcf5
- (id)initWithCoder:(id)coder;	// 0x302ffb99
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x302ffae5
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x302ffaa9
- (id)initWithString:(id)string;	// 0x302ffb21
- (id)initWithString:(id)string locale:(id)locale;	// 0x302ffb5d
- (BOOL)boolValue;	// 0x30300b11
- (BOOL)charValue;	// 0x30300995
- (Class)classForCoder;	// 0x303007ad
- (int)compare:(id)compare;	// 0x302ffe15
- (id)copy;	// 0x302ff92d
- (id)copyWithZone:(NSZone *)zone;	// 0x302ff93d
- (id)decimalNumberByAdding:(id)adding;	// 0x302fffd9
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x30300029
- (id)decimalNumberByDividingBy:(id)by;	// 0x303003a5
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x303003f5
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x303002c9
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x30300319
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x30300555
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x303005a5
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x30300481
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x303004d1
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x30300629
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x3030019d
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x303001dd
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x303001ed
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x3030023d
- (XXStruct_9isexA)decimalValue;	// 0x302ffbf1
- (id)description;	// 0x302ffbd5
- (id)descriptionWithLocale:(id)locale;	// 0x302ffbe9
- (double)doubleValue;	// 0x302ffee5
- (void)encodeWithCoder:(id)coder;	// 0x303007c9
- (float)floatValue;	// 0x30300aed
- (void)getValue:(void *)value;	// 0x302fffbd
- (int)intValue;	// 0x30300a25
- (BOOL)isEqual:(id)equal;	// 0x302ffe91
- (long long)longLongValue;	// 0x30300ab5
- (long)longValue;	// 0x30300a6d
- (const char *)objCType;	// 0x302ffed9
- (short)shortValue;	// 0x303009dd
- (unsigned char)unsignedCharValue;	// 0x303009b9
- (unsigned)unsignedIntValue;	// 0x30300a49
- (unsigned long long)unsignedLongLongValue;	// 0x30300ad1
- (unsigned long)unsignedLongValue;	// 0x30300a91
- (unsigned short)unsignedShortValue;	// 0x30300a01
@end

