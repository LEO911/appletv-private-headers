/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSCoder.h"


@interface NSKeyedArchiver : NSCoder {
@private
	void *_stream;	// 4 = 0x4
	unsigned _flags;	// 8 = 0x8
	id _delegate;	// 12 = 0xc
	id _containers;	// 16 = 0x10
	id _objects;	// 20 = 0x14
	id _objRefMap;	// 24 = 0x18
	id _replacementMap;	// 28 = 0x1c
	id _classNameMap;	// 32 = 0x20
	id _conditionals;	// 36 = 0x24
	id _classes;	// 40 = 0x28
	unsigned _genericKey;	// 44 = 0x2c
	void *_cache;	// 48 = 0x30
	unsigned _cacheSize;	// 52 = 0x34
	unsigned _estimatedCount;	// 56 = 0x38
	void *_reserved2;	// 60 = 0x3c
	id _visited;	// 64 = 0x40
	void *_reserved0;	// 68 = 0x44
}
@property(assign) id delegate;	// G=0x302d507d; S=0x302d506d; converted property
@property(assign) unsigned outputFormat;	// G=0x3026a615; S=0x302d508d; converted property
+ (BOOL)archiveRootObject:(id)object toFile:(id)file;	// 0x302d4e05
+ (id)archivedDataWithRootObject:(id)rootObject;	// 0x30269339
+ (id)classNameForClass:(Class)aClass;	// 0x3026a255
+ (void)initialize;	// 0x302835a1
+ (void)setClassName:(id)name forClass:(Class)aClass;	// 0x30283635
- (id)init;	// 0x302d4dad
- (id)initForWritingWithMutableData:(id)mutableData;	// 0x302693f9
- (id)_blobForCurrentObject;	// 0x302d4d85
- (void)_encodeArrayOfObjects:(id)objects forKey:(id)key;	// 0x30283935
- (void)_encodePropertyList:(id)list forKey:(id)key;	// 0x3028df7d
- (id)_initWithOutput:(id)output;	// 0x30269409
- (void)_setBlobForCurrentObject:(id)currentObject;	// 0x302d4d29
- (BOOL)allowsKeyedCoding;	// 0x3026a2e1
- (id)classNameForClass:(Class)aClass;	// 0x3026a231
- (void)dealloc;	// 0x3026aacd
// converted property getter: - (id)delegate;	// 0x302d507d
- (id)description;	// 0x302d5041
- (void)encodeArrayOfObjCType:(const char *)objCType count:(unsigned)count at:(const void *)at;	// 0x302d5bad
- (void)encodeBool:(BOOL)aBool forKey:(id)key;	// 0x30283b81
- (void)encodeBycopyObject:(id)object;	// 0x302d5579
- (void)encodeByrefObject:(id)object;	// 0x302d5589
- (void)encodeBytes:(const void *)bytes length:(unsigned)length;	// 0x302d55b9
- (void)encodeBytes:(const char *)bytes length:(unsigned)length forKey:(id)key;	// 0x302d5295
- (void)encodeConditionalObject:(id)object;	// 0x302d54d5
- (void)encodeConditionalObject:(id)object forKey:(id)key;	// 0x302d50f5
- (void)encodeDataObject:(id)object;	// 0x302d55a9
- (void)encodeDouble:(double)aDouble forKey:(id)key;	// 0x3028dce5
- (void)encodeFloat:(float)aFloat forKey:(id)key;	// 0x302d51a5
- (void)encodeInt32:(int)a32 forKey:(id)key;	// 0x30283f81
- (void)encodeInt64:(long long)a64 forKey:(id)key;	// 0x3029ab41
- (void)encodeInt:(int)int forKey:(id)key;	// 0x3028db79
- (void)encodeObject:(id)object;	// 0x302d53dd
- (void)encodeObject:(id)object forKey:(id)key;	// 0x30269641
- (void)encodeRootObject:(id)object;	// 0x302d5599
- (void)encodeValueOfObjCType:(const char *)objCType at:(const void *)at;	// 0x302d57b1
- (void)encodeValuesOfObjCTypes:(const char *)objCTypes;	// 0x302d565d
- (void)finalize;	// 0x302d4f21
- (void)finishEncoding;	// 0x3026a39d
// converted property getter: - (unsigned)outputFormat;	// 0x3026a615
- (void)replaceObject:(id)object withObject:(id)object2;	// 0x30269fe5
- (void)setClassName:(id)name forClass:(Class)aClass;	// 0x3029b105
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x302d506d
// converted property setter: - (void)setOutputFormat:(unsigned)format;	// 0x302d508d
- (unsigned)systemVersion;	// 0x302d5db1
- (int)versionForClassName:(id)className;	// 0x302d5d89
@end

