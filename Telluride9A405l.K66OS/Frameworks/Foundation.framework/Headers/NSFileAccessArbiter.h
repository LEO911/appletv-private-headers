/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "NSObject.h"
#import "Foundation-Structs.h"
#import "NSFileAccessArbiter.h"

@class NSMutableDictionary, NSFileAccessNode;

@protocol NSFileAccessArbiter <NSObject>
- (void)cancelAccessClaimForID:(id)anId;
- (dispatch_semaphore_s *)grantAccessClaim:(id)claim synchronouslyIfPossible:(BOOL)possible;
- (void)grantSubarbitrationClaim:(id)claim withServer:(xpc_connection_s *)server;
- (void)revokeAccessClaimForID:(id)anId;
- (void)revokeSubarbitrationClaimForID:(id)anId;
- (void)tiePresenterForID:(id)anId toItemAtURL:(id)url;
- (void)writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;
- (void)writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;
@end

@interface NSFileAccessArbiter : NSObject <NSFileAccessArbiter> {
@private
	dispatch_queue_s *_queue;	// 4 = 0x4
	BOOL _isSubarbiter;	// 8 = 0x8
	NSMutableDictionary *_accessClaimsByID;	// 12 = 0xc
	NSMutableDictionary *_subarbitrationClaimsByID;	// 16 = 0x10
	NSMutableDictionary *_reactorsByID;	// 20 = 0x14
	NSMutableDictionary *_watchersByPresenterID;	// 24 = 0x18
	NSFileAccessNode *_rootNode;	// 28 = 0x1c
	xpc_connection_s *_superarbitrationServer;	// 32 = 0x20
}
- (id)initWithQueue:(dispatch_queue_s *)queue isSubarbiter:(BOOL)subarbiter listener:(xpc_connection_s *)listener;	// 0x303560fd
- (void)_addPresenter:(id)presenter ofItemAtURL:(id)url;	// 0x30357939
- (void)_addProvider:(id)provider ofItemsAtURL:(id)url;	// 0x30358091
- (void)_cancelAccessClaimForID:(id)anId;	// 0x30356e99
- (void)_grantAccessClaim:(id)claim;	// 0x3035674d
- (void)_grantSubarbitrationClaim:(id)claim withServer:(xpc_connection_s *)server;	// 0x30356bbd
- (void)_handleCanceledClient:(xpc_connection_s *)client;	// 0x303593e1
- (void)_handleMessage:(void *)message forSubarbitrationClaim:(id)subarbitrationClaim server:(xpc_connection_s *)server;	// 0x30359049
- (void)_handleMessage:(void *)message fromClient:(xpc_connection_s *)client;	// 0x30358b25
- (BOOL)_handleMessage:(void *)message ofKind:(id)kind withParameters:(id)parameters embeddedServer:(xpc_connection_s *)server fromClient:(xpc_connection_s *)client;	// 0x30358445
- (void)_removeReactorForID:(id)anId;	// 0x30358111
- (void)_revokeAccessClaim:(id)claim;	// 0x303569dd
- (void)_revokeAccessClaimForID:(id)anId fromLocal:(BOOL)local;	// 0x30356aa5
- (void)_sendSubarbitersMessageWithKind:(id)kind parameters:(id)parameters;	// 0x30358361
- (void)_startArbitratingItemsAtURLs:(id)urls withSuperarbitrationServer:(xpc_connection_s *)superarbitrationServer;	// 0x303581bd
- (void)_tiePresenter:(id)presenter toItemAtURL:(id)url;	// 0x303566c1
- (void)_tiePresenterForID:(id)anId toItemAtURL:(id)url;	// 0x303578f5
- (void)_writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;	// 0x30356f59
- (void)_writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;	// 0x303577c9
- (void)cancelAccessClaimForID:(id)anId;	// 0x30359ae5
- (void)dealloc;	// 0x303565bd
- (void)finalize;	// 0x30356681
- (dispatch_semaphore_s *)grantAccessClaim:(id)claim synchronouslyIfPossible:(BOOL)possible;	// 0x3035984d
- (void)grantSubarbitrationClaim:(id)claim withServer:(xpc_connection_s *)server;	// 0x30359aa5
- (void)revokeAccessClaimForID:(id)anId;	// 0x303599f1
- (void)revokeSubarbitrationClaimForID:(id)anId;	// 0x30359ae1
- (void)stopArbitrating;	// 0x303582c9
- (void)tiePresenterForID:(id)anId toItemAtURL:(id)url;	// 0x30359f49
- (void)writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;	// 0x30359bfd
- (void)writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;	// 0x30359d75
@end

