/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import <NSObject.h> // Unknown library
#import "NSLocking.h"
#import "NSCoding.h"
#import "CoreData-Structs.h"

@class NSUndoManager, NSMutableSet;

@interface NSManagedObjectContext : NSObject <NSCoding, NSLocking> {
@private
	int _spinLock;	// 4 = 0x4
	id _parentObjectStore;	// 8 = 0x8
	NSUndoManager *_undoManager;	// 12 = 0xc
	void *_dispatchQueue;	// 16 = 0x10
	managedObjectContextFlags _flags;	// 20 = 0x14
	NSMutableSet *_unprocessedChanges;	// 24 = 0x18
	NSMutableSet *_unprocessedDeletes;	// 28 = 0x1c
	NSMutableSet *_unprocessedInserts;	// 32 = 0x20
	NSMutableSet *_insertedObjects;	// 36 = 0x24
	NSMutableSet *_deletedObjects;	// 40 = 0x28
	NSMutableSet *_changedObjects;	// 44 = 0x2c
	NSMutableSet *_lockedObjects;	// 48 = 0x30
	NSMutableSet *_refreshedObjects;	// 52 = 0x34
	id _infoByGID;	// 56 = 0x38
	id *_cachedObsInfoByEntity;	// 60 = 0x3c
	short _undoTransactionID;	// 64 = 0x40
	id _lock;	// 68 = 0x44
	long _lockCount;	// 72 = 0x48
	long _objectStoreLockCount;	// 76 = 0x4c
	double _fetchTimestamp;	// 80 = 0x50
	id _delegate;	// 88 = 0x58
	id _referenceQueue;	// 92 = 0x5c
	id _userinfo;	// 96 = 0x60
	id _mergePolicy;	// 100 = 0x64
	int _cd_rc;	// 104 = 0x68
	int _ignoreChangeNotification;	// 108 = 0x6c
	id _editors;	// 112 = 0x70
	id *_debuggingRecords;	// 116 = 0x74
	id _childObjectStores;	// 120 = 0x78
	id _reserved2;	// 124 = 0x7c
}
@property(readonly, retain) NSMutableSet *deletedObjects;	// G=0x33fab851; converted property
@property(readonly, retain) NSMutableSet *insertedObjects;	// G=0x33fab785; converted property
@property(retain) id mergePolicy;	// G=0x33fab041; S=0x33f45269; converted property
@property(retain) id parentContext;	// G=0x33fab0fd; S=0x33fac265; converted property
@property(retain) id persistentStoreCoordinator;	// G=0x33f453c9; S=0x33f450d5; converted property
@property(assign) BOOL propagatesDeletesAtEndOfEvent;	// G=0x33fab099; S=0x33fab91d; converted property
@property(assign) BOOL retainsRegisteredObjects;	// G=0x33fab02d; S=0x33fab3cd; converted property
@property(assign) double stalenessInterval;	// G=0x33f5ab2d; S=0x33f67841; converted property
@property(retain) NSUndoManager *undoManager;	// G=0x33fab089; S=0x33f451f1; converted property
+ (void)__Multithreading_Violation_AllThatIsLeftToUsIsHonor__;	// 0x33fab029
+ (BOOL)_handleError:(id)error withError:(id *)error2;	// 0x33fb1399
+ (void)_mergeChangesFromRemoteContextSave:(id)remoteContextSave intoContexts:(id)contexts;	// 0x33fbd339
+ (BOOL)accessInstanceVariablesDirectly;	// 0x33fab025
+ (void)initialize;	// 0x33f65485
- (id)init;	// 0x33f2e001
- (id)initWithCoder:(id)coder;	// 0x33fad1d5
- (id)initWithConcurrencyType:(unsigned)concurrencyType;	// 0x33f2e015
- (BOOL)_attemptCoalesceChangesForFetch;	// 0x33fb1c89
- (unsigned)_batchRetainedObjects:(id *)objects forCount:(unsigned)count withIDs:(id *)ids optionalHandler:(id)handler withInlineStorage:(BOOL)inlineStorage;	// 0x33fbde91
- (void)_changeIDsForManagedObjects:(id)managedObjects toIDs:(id)ids;	// 0x33fbaeb9
- (void)_clearChangedThisTransaction:(id)transaction;	// 0x33fb4589
- (void)_clearDeletions;	// 0x33fb3d0d
- (void)_clearInsertions;	// 0x33fb39c5
- (void)_clearLockedObjects;	// 0x33fb101d
- (void)_clearOriginalSnapshotAndInitializeRec:(id)rec;	// 0x33fb1285
- (void)_clearOriginalSnapshotForObject:(id)object;	// 0x33fb124d
- (void)_clearRefreshedObjects;	// 0x33fb103d
- (void)_clearUnprocessedDeletions;	// 0x33fb3eb1
- (void)_clearUnprocessedInsertions;	// 0x33fb3b69
- (void)_clearUnprocessedUpdates;	// 0x33fb41f9
- (void)_clearUpdates;	// 0x33fb4055
- (id)_committedSnapshotForObject:(id)object;	// 0x33fb12f5
- (void)_copyChildObject:(id)object toParentObject:(id)parentObject fromChildContext:(id)childContext;	// 0x33fbe18d
- (unsigned)_countWithMergedChangesForRequest:(id)request possibleChanges:(id)changes possibleDeletes:(id)deletes error:(id *)error;	// 0x33fb80ed
- (unsigned)_countWithNoChangesForRequest:(id)request error:(id *)error;	// 0x33fb76dd
- (void)_createAndPostChangeNotification:(id)notification withDeletions:(id)deletions withUpdates:(id)updates withRefreshes:(id)refreshes;	// 0x33fb1cfd
- (id)_createStoreFetchRequestForFetchRequest:(id)fetchRequest;	// 0x33f46949
- (id)_currentEventSnapshotForObject:(id)object;	// 0x33fb135d
- (void)_dealloc__;	// 0x33f5bb29
- (id)_debuggingOnly_localObjectForGlobalID:(id)globalID;	// 0x33fb66b1
- (id)_delegate;	// 0x33fab2dd
- (void)_didSaveChanges;	// 0x33fb9c85
- (void)_disableChangeNotifications;	// 0x33f5c9bd
- (BOOL)_disableDiscardEditing;	// 0x33fab201
- (void)_dispose:(BOOL)dispose;	// 0x33f5bf71
- (void)_disposeObjects:(id *)objects count:(unsigned long)count notifyParent:(BOOL)parent;	// 0x33f5cb2d
- (void)_enableChangeNotifications;	// 0x33fab2a1
- (void)_enqueueEndOfEventNotification;	// 0x33fb1fad
- (void)_establishEventSnapshotsForObject:(id)object;	// 0x33fb14ad
- (void)_forceInsertionForObject:(id)object;	// 0x33fb18a9
- (void)_forceRemoveFromDeletedObjects:(id)deletedObjects;	// 0x33fb1a01
- (void)_forgetObject:(id)object propagateToObjectStore:(BOOL)objectStore;	// 0x33fabd79
- (void)_forgetObject:(id)object propagateToObjectStore:(BOOL)objectStore removeFromRegistry:(BOOL)registry;	// 0x33fbab19
- (id)_globalIDForObject:(id)object;	// 0x33fb12bd
- (id)_globalIDsForObjects:(id)objects;	// 0x33fabed9
- (void)_growRegistrationCollectionForEntitySlot:(unsigned)entitySlot toSize:(unsigned)size;	// 0x33fab191
- (BOOL)_handleError:(id)error withError:(id *)error2;	// 0x33fac241
- (BOOL)_handleOptimisticLockingError:(id)error withError:(id *)error2;	// 0x33fac1e5
- (BOOL)_ignoringChangeNotifications;	// 0x33fab289
- (id)_implicitObservationInfoForEntity:(id)entity forResultingClass:(Class *)resultingClass;	// 0x33fbcecd
- (void)_incrementUndoTransactionID;	// 0x33fab251
- (void)_informParentStore:(id)store noLongerInterestedInObjects:(id)objects;	// 0x33fb1155
- (void)_informParentStore:(id)store ofInterestInObjects:(id)objects;	// 0x33fb105d
- (id)_initWithParentObjectStore:(unsigned long)parentObjectStore;	// 0x33f2e119
- (void)_insertObjectWithGlobalID:(id)globalID globalID:(id)anId;	// 0x33fb8b55
- (BOOL)_isDeallocating;	// 0x33fb0b79
- (BOOL)_isImportContext;	// 0x33fab1ad
- (BOOL)_isPreflightSaveInProgress;	// 0x33fab1c1
- (void)_lockObjectStore_oldSchool;	// 0x33f61efd
- (void)_managedObjectContextEditor:(id)editor didCommit:(BOOL)commit contextInfo:(XXStruct_gOQQEC *)info;	// 0x33fbd231
- (void)_mergeChangesFromDidSaveDictionary:(id)_mergeChangesFrom usingObjectIDs:(BOOL)ids;	// 0x33fac575
- (void)_mergeChangesFromRemoteContextSave:(id)remoteContextSave;	// 0x33fb5545
- (id)_newSaveRequestForCurrentState;	// 0x33fabc65
- (id)_newUnchangedLockedObjects;	// 0x33fb37a9
- (void)_noop:(id)noop;	// 0x33fab27d
- (void)_objectsChangedInStore:(id)store;	// 0x33fb211d
- (id)_orderedSetWithResultsFromFetchRequest:(id)fetchRequest;	// 0x33fb2481
- (id)_parentObjectsForFetchRequest:(id)fetchRequest inContext:(id)context error:(id *)error;	// 0x33fbe4bd
- (BOOL)_parentObtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x33fb9a85
- (id)_parentProcessSaveRequest:(id)request inContext:(id)context error:(id *)error;	// 0x33fb7065
- (id)_parentStore;	// 0x33f5a935
- (void)_postObjectsDidChangeNotificationWithUserInfo:(id)_postObjects;	// 0x33fb2035
- (void)_postRefreshedObjectsNotificationAndClearList;	// 0x33fb1c09
- (BOOL)_postSaveNotifications;	// 0x33fab23d
- (BOOL)_prepareForPushChanges:(id *)pushChanges;	// 0x33fb308d
- (void)_processChangedStoreConfigurationNotification:(id)notification;	// 0x33fbc369
- (BOOL)_processDeletedObjects:(id *)objects;	// 0x33fb1f05
- (void)_processEndOfEventNotification:(id)eventNotification;	// 0x33fb5f8d
- (void)_processNotificationQueue;	// 0x33fab2b5
- (void)_processObjectStoreChanges:(id)changes;	// 0x33fab285
- (void)_processOwnedObjects:(id)objects set:(id)set boolean:(BOOL)boolean;	// 0x33fab281
- (id)_processPendingDeletions:(id)deletions withInsertions:(id)insertions withUpdates:(id)updates withNewlyForgottenList:(id)newlyForgottenList withRemovedChangedObjects:(id)removedChangedObjects;	// 0x33fb494d
- (id)_processPendingInsertions:(id)insertions withDeletions:(id)deletions withUpdates:(id)updates;	// 0x33fb4df9
- (id)_processPendingUpdates:(id)updates;	// 0x33fb513d
- (BOOL)_processRecentChanges:(id *)changes;	// 0x33fbb129
- (void)_processRecentlyForgottenObjects:(id)objects;	// 0x33fb53ad
- (void)_processReferenceQueue:(BOOL)queue;	// 0x33f5d551
- (void)_propagateDeletesUsingTable:(id)table;	// 0x33fbbfd5
- (BOOL)_propagatePendingDeletesAtEndOfEvent:(id *)event;	// 0x33fb5e75
- (void)_refaultObject:(id)object globalID:(id)anId boolean:(BOOL)boolean;	// 0x33fabf89
- (void)_registerClearStateWithUndoManager;	// 0x33fb1a9d
- (void)_registerForNotificationsWithCoordinator:(id)coordinator;	// 0x33f45191
- (void)_registerObject:(id)object withID:(id)anId;	// 0x33f56e45
- (void)_registerUndoForDeletedObjects:(id)deletedObjects withDeletedChanges:(id)deletedChanges;	// 0x33fb1619
- (void)_registerUndoForInsertedObjects:(id)insertedObjects;	// 0x33fb1571
- (void)_registerUndoForModifiedObjects:(id)modifiedObjects;	// 0x33fb1875
- (void)_registerUndoForOperation:(SEL)operation withObjects:(id)objects withExtraArguments:(id)extraArguments;	// 0x33fb6e39
- (void)_resetAllChanges;	// 0x33fabd99
- (id)_retainedObjectWithID:(id)anId;	// 0x33fb3081
- (id)_retainedObjectWithID:(id)anId error:(id *)error;	// 0x33fb3075
- (id)_retainedObjectWithID:(id)anId optionalHandler:(id)handler withInlineStorage:(BOOL)inlineStorage;	// 0x33f55ac5
- (id)_retainedObjectsFromRemovedStore:(id)removedStore;	// 0x33fb439d
- (id)_retainedRegisteredObjects;	// 0x33fb3615
- (void)_sendCommitEditingSelectorToTarget:(id)target sender:(id)sender selector:(SEL)selector flag:(BOOL)flag contextInfo:(void *)info delayed:(BOOL)delayed;	// 0x33fb2365
- (void)_sendOrEnqueueNotification:(id)notification selector:(SEL)selector;	// 0x33fb21a9
- (void)_setDelegate:(id)delegate;	// 0x33fab2cd
- (void)_setDisableDiscardEditing:(BOOL)editing;	// 0x33fab1d9
- (void)_setIsUbiquityImportContext:(BOOL)context;	// 0x33fab195
- (void)_setParentContext:(id)context;	// 0x33fac361
- (void)_setPersistentStoreCoordinator:(id)coordinator;	// 0x33fb0d3d
- (void)_setPostSaveNotifications:(BOOL)notifications;	// 0x33fab215
- (void)_setRetainsRegisteredObjects:(BOOL)objects;	// 0x33fb0bfd
- (void)_setStopsValidationAfterFirstError:(BOOL)error;	// 0x33fab169
- (void)_setUndoManager:(id)manager;	// 0x33fab5a1
- (void)_startObservingUndoManagerNotifications;	// 0x33fb20a1
- (void)_stopConflictDetectionForObject:(id)object;	// 0x33fb24c9
- (void)_stopObservingUndoManagerNotifications;	// 0x33f5be39
- (BOOL)_stopsValidationAfterFirstError;	// 0x33fab151
- (void)_storeConfigurationChanged:(id)changed;	// 0x33fb2189
- (BOOL)_tryRetain;	// 0x33fb0ba1
- (void)_undoDeletions:(id)deletions;	// 0x33fb6871
- (void)_undoDeletionsMovedToUpdates:(id)updates;	// 0x33fb15a5
- (void)_undoInsertions:(id)insertions;	// 0x33fb66c5
- (void)_undoManagerCheckpoint:(id)checkpoint;	// 0x33fb1ed5
- (void)_undoUpdates:(id)updates;	// 0x33fb6c99
- (void)_unlockObjectStore_oldSchool;	// 0x33f64e55
- (void)_unregisterForNotifications;	// 0x33f5bd89
- (void)_updateUndoTransactionForThisEvent:(id)thisEvent withDeletions:(id)deletions withUpdates:(id)updates;	// 0x33fb1e49
- (void)_updateUnprocessedOwnDestinations:(id)destinations;	// 0x33fab279
- (BOOL)_validateChangesForSave:(id *)save;	// 0x33fb0e45
- (BOOL)_validateDeletesUsingTable:(id)table withError:(id *)error;	// 0x33fb0e05
- (BOOL)_validateObjects:(id)objects forOperation:(unsigned)operation error:(id *)error exhaustive:(BOOL)exhaustive forSave:(BOOL)save;	// 0x33fb5871
- (void)assignObject:(id)object toPersistentStore:(id)persistentStore;	// 0x33fafe95
- (BOOL)commitEditing;	// 0x33fbd1c1
- (void)commitEditingWithDelegate:(id)delegate didCommitSelector:(SEL)selector contextInfo:(void *)info;	// 0x33fbd2ed
- (unsigned)concurrencyType;	// 0x33fab129
- (unsigned)countForFetchRequest:(id)fetchRequest error:(id *)error;	// 0x33fae595
- (void)dealloc;	// 0x33f5babd
- (void)deleteObject:(id)object;	// 0x33faf8b1
// converted property getter: - (id)deletedObjects;	// 0x33fab851
- (void)detectConflictsForObject:(id)object;	// 0x33fad125
- (void)discardEditing;	// 0x33fbd151
- (void)encodeWithCoder:(id)coder;	// 0x33fab9c5
- (id)executeFetchRequest:(id)request error:(id *)error;	// 0x33f45599
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;	// 0x33fb8e65
- (id)existingObjectWithID:(id)anId error:(id *)error;	// 0x33fae9ed
- (void)finalize;	// 0x33fb0175
- (BOOL)hasChanges;	// 0x33f46935
- (void)insertObject:(id)object;	// 0x33fafa35
// converted property getter: - (id)insertedObjects;	// 0x33fab785
- (BOOL)isEditing;	// 0x33fab2b9
- (void)lock;	// 0x33fad08d
- (void)lockObjectStore;	// 0x33f46a45
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;	// 0x33fb9089
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;	// 0x33fb90d5
- (void)mergeChangesFromContextDidSaveNotification:(id)mergeChangesFromContext;	// 0x33fabb79
// converted property getter: - (id)mergePolicy;	// 0x33fab041
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x33fb94f9
- (id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x33fb9121
- (void)objectDidBeginEditing:(id)object;	// 0x33fbd021
- (void)objectDidEndEditing:(id)object;	// 0x33fbd0b9
- (id)objectRegisteredForID:(id)anId;	// 0x33fafc89
- (id)objectWithID:(id)anId;	// 0x33faeb1d
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x33fafb39
- (BOOL)obtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x33faf441
// converted property getter: - (id)parentContext;	// 0x33fab0fd
- (void)performBlock:(id)block;	// 0x33fac4ad
- (void)performBlockAndWait:(id)wait;	// 0x33fac401
// converted property getter: - (id)persistentStoreCoordinator;	// 0x33f453c9
- (void)processPendingChanges;	// 0x33fab67d
// converted property getter: - (BOOL)propagatesDeletesAtEndOfEvent;	// 0x33fab099
- (void)redo;	// 0x33fad3c5
- (void)refreshObject:(id)object mergeChanges:(BOOL)changes;	// 0x33fad7dd
- (id)registeredObjects;	// 0x33fab75d
- (oneway void)release;	// 0x33f5ba3d
- (void)reset;	// 0x33fb0331
- (id)retain;	// 0x33f678c1
- (unsigned)retainCount;	// 0x33fab051
// converted property getter: - (BOOL)retainsRegisteredObjects;	// 0x33fab02d
- (void)rollback;	// 0x33fadc69
- (BOOL)save:(id *)save;	// 0x33faeb8d
// converted property setter: - (void)setMergePolicy:(id)policy;	// 0x33f45269
// converted property setter: - (void)setParentContext:(id)context;	// 0x33fac265
// converted property setter: - (void)setPersistentStoreCoordinator:(id)coordinator;	// 0x33f450d5
// converted property setter: - (void)setPropagatesDeletesAtEndOfEvent:(BOOL)event;	// 0x33fab91d
// converted property setter: - (void)setRetainsRegisteredObjects:(BOOL)objects;	// 0x33fab3cd
// converted property setter: - (void)setStalenessInterval:(double)interval;	// 0x33f67841
// converted property setter: - (void)setUndoManager:(id)manager;	// 0x33f451f1
// converted property getter: - (double)stalenessInterval;	// 0x33f5ab2d
- (BOOL)tryLock;	// 0x33fababd
- (void)undo;	// 0x33fad5d1
// converted property getter: - (id)undoManager;	// 0x33fab089
- (void)unlock;	// 0x33fabb29
- (void)unlockObjectStore;	// 0x33f5278d
- (id)updatedObjects;	// 0x33fab691
- (id)userInfo;	// 0x33fab0ed
@end

