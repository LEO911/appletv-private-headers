/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <NSObject.h> // Unknown library
#import "EventKit-Structs.h"

@class NSNumber, NSTimeZone, NSArray, NSString, EKDaemonConnection, EKCalendar, NSMutableDictionary, NSMutableSet;

@interface EKEventStore : NSObject {
@private
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKDaemonConnection *_database;	// 32 = 0x20
	unsigned long _flags;	// 36 = 0x24
	NSTimeZone *_timeZone;	// 40 = 0x28
	NSMutableDictionary *_calendars;	// 44 = 0x2c
	NSMutableDictionary *_sources;	// 48 = 0x30
	NSMutableSet *_objectsPendingCommit;	// 52 = 0x34
	dispatch_queue_s *_calendarQueue;	// 56 = 0x38
	dispatch_queue_s *_registeredQueue;	// 60 = 0x3c
	dispatch_queue_s *_unsavedChangesQueue;	// 64 = 0x40
	dispatch_queue_s *_dbChangedQueue;	// 68 = 0x44
}
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x33208e2d; S=0x33208e3d; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x33208e61; S=0x33208e71; @synthesize
@property(assign, nonatomic) dispatch_queue_s *calendarQueue;	// G=0x33208eb5; S=0x33208ec5; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x331dd80d; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x33208dd9; S=0x33208de9; @synthesize=_database
@property(assign, nonatomic) dispatch_queue_s *dbChangedQueue;	// G=0x33208f15; S=0x33208f25; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x331d34ed; S=0x33208cf5; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x331d4391; 
@property(retain) id defaultCalendarForNewTasks;	// G=0x331de599; S=0x33205c85; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x331d21bd; S=0x33208cb1; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x33208d99; S=0x33208da9; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x33203c99; 
@property(assign, nonatomic) unsigned long flags;	// G=0x33208e0d; S=0x33208e1d; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x33208d79; S=0x33208d89; @synthesize=_insertedObjects
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x33208e95; S=0x33208ea5; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x33208d59; S=0x33208d69; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x33208d39; S=0x33208d49; @synthesize=_registeredObjects
@property(assign, nonatomic) dispatch_queue_s *registeredQueue;	// G=0x33208ed5; S=0x33208ee5; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x331c214d; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x331c0421; S=0x331c47dd; @synthesize=_timeZone
@property(assign, nonatomic) dispatch_queue_s *unsavedChangesQueue;	// G=0x33208ef5; S=0x33208f05; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x33208db9; S=0x33208dc9; @synthesize=_updatedObjects
+ (Class)classForEntityName:(id)entityName;	// 0x331c2785
+ (Class)publicClassForEntityName:(id)entityName;	// 0x331cb9b9
+ (id)storeWithOptions:(unsigned long)options path:(id)path;	// 0x33202fbd
- (id)init;	// 0x331bfe99
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x331bfead
- (id)_addFetchedObjectWithID:(id)anId;	// 0x331c2515
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x331da12d
- (id)_allCalendars;	// 0x331cc9ad
- (BOOL)_calendar:(id)calendar supportsEntityType:(int)type;	// 0x331ccb65
// declared property getter: - (id)_calendars;	// 0x33208e2d
- (void)_databaseChangedExternally;	// 0x331dbb25
- (void)_deleteObject:(id)object;	// 0x331dd4d9
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x33204cb9
- (void)_forgetRegisteredObjects;	// 0x33206785
- (void)_insertObject:(id)object;	// 0x331d62b5
- (void)_notifyStoreChanged;	// 0x33203d79
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x33204959
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x331ccdd5
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x331cd2f9
- (void)_protectedDataDidBecomeAvailable;	// 0x33208cad
- (void)_protectedDataWillBecomeUnavailable;	// 0x33208ca9
- (void)_refreshCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x332062e1
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x33206461
- (void)_registerObject:(id)object;	// 0x331d1bed
- (void)_registerObjectImmediate:(id)immediate;	// 0x331c2b85
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x331db545
- (void)_save;	// 0x33203d65
- (void)_saveWithNotify:(BOOL)notify;	// 0x33203cdd
// declared property getter: - (id)_sources;	// 0x33208e61
- (void)_trackModifiedObject:(id)object;	// 0x331dfd09
- (void)_unregisterObject:(id)object;	// 0x331dd72d
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x331dbd95
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x33208725
- (id)alarmWithUUID:(id)uuid;	// 0x3320865d
// declared property getter: - (dispatch_queue_s *)calendarQueue;	// 0x33208eb5
- (id)calendarWithExternalURI:(id)externalURI;	// 0x33206139
- (id)calendarWithID:(id)anId;	// 0x331c79d1
- (id)calendarWithIdentifier:(id)identifier;	// 0x331cd1f5
// declared property getter: - (id)calendars;	// 0x331dd80d
- (void)cancelFetchRequest:(id)request;	// 0x3320863d
- (id)changesSinceSequenceNumber:(int)number;	// 0x33203091
- (BOOL)commit:(id *)commit;	// 0x331da191
- (id)connection;	// 0x331c157d
- (CGColorRef)copyCGColorForNewCalendar;	// 0x33205b25
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x331cd58d
- (void)daemonRestarted;	// 0x33203c51
// declared property getter: - (id)database;	// 0x33208dd9
// declared property getter: - (dispatch_queue_s *)dbChangedQueue;	// 0x33208f15
- (void)dealloc;	// 0x331c1d35
- (id)defaultAllDayAlarm;	// 0x331d3479
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x331d34ed
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x331d4391
// converted property getter: - (id)defaultCalendarForNewTasks;	// 0x331de599
- (id)defaultTimedAlarm;	// 0x331d2149
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x331d21bd
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x33204745
// declared property getter: - (id)deletedObjects;	// 0x33208d99
- (id)earliestExpiringUnreadEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x331c0471
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x33208429
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x331d0a65
// declared property getter: - (id)eventStoreIdentifier;	// 0x33203c99
- (id)eventWithIdentifier:(id)identifier;	// 0x33204879
- (id)eventWithUUID:(id)uuid;	// 0x3320606d
- (id)eventWithUniqueId:(id)uniqueId;	// 0x33204ec9
- (id)eventsMatchingPredicate:(id)predicate;	// 0x331c0d69
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x331c0f29
- (void)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x331e29b5
// declared property getter: - (unsigned long)flags;	// 0x33208e0d
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x33205351
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x332058f1
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x33205445
- (id)insertNewEvent;	// 0x33206219
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x33206275
- (id)insertNewReminder;	// 0x33205ebd
// declared property getter: - (id)insertedObjects;	// 0x33208d79
- (BOOL)isDataProtected;	// 0x331c041d
- (id)localSource;	// 0x33203fd5
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x331ccd51
- (BOOL)markEventRead:(id)read error:(id *)error;	// 0x33204fa1
- (BOOL)markEventsRead:(id)read error:(id *)error;	// 0x332050f9
- (id)objectWithObjectID:(id)objectID;	// 0x331c7a69
// declared property getter: - (id)objectsPendingCommit;	// 0x33208e95
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x33205f7d
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x331ce3f9
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x33205ffd
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x331cd2c1
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x331cdd91
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x331c7c71
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x33208b31
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x331ddc7d
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x331ce42d
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x331e2905
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x33205fb5
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x33206021
- (id)predicateForUnacknowledgedEvents;	// 0x33208c71
- (id)predicateForUnalertedEvents;	// 0x331c0d15
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x33208c8d
- (id)publicObjectWithObjectID:(id)objectID;	// 0x33206a55
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x331cb2a1
// declared property getter: - (id)publicRegisteredObjects;	// 0x33208d59
- (int)readWriteCalendarCountForEntityType:(int)entityType;	// 0x331d2c35
- (id)readWriteCalendarsForEntityType:(int)entityType;	// 0x331cc8a1
- (void)refreshSourcesIfNecessary;	// 0x33206581
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x331c3ec9
- (id)registerFetchedObjectWithID:(id)anId;	// 0x331c23b5
// declared property getter: - (id)registeredObjects;	// 0x33208d39
// declared property getter: - (dispatch_queue_s *)registeredQueue;	// 0x33208ed5
- (oneway void)release;	// 0x331c08a5
- (id)reminderWithExternalURI:(id)externalURI;	// 0x33205ce9
- (id)reminderWithUUID:(id)uuid;	// 0x33205df5
- (id)remindersMatchingPredicate:(id)predicate;	// 0x331cddc9
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x33204689
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x332045b1
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x331dce6d
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x331dce49
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x331e2b85
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x331e2b65
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x33204141
- (void)reset;	// 0x332073d1
- (void)rollback;	// 0x332070d5
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x332045d1
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x33204591
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x331d6121
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x331d60fd
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x331de86d
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x331dfccd
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x33204095
- (int)sequenceNumber;	// 0x33203039
- (unsigned)serverPort;	// 0x331c0571
// declared property setter: - (void)setCalendarQueue:(dispatch_queue_s *)queue;	// 0x33208ec5
// declared property setter: - (void)setDatabase:(id)database;	// 0x33208de9
// declared property setter: - (void)setDbChangedQueue:(dispatch_queue_s *)queue;	// 0x33208f25
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x33208cf5
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x33205c21
// converted property setter: - (void)setDefaultCalendarForNewTasks:(id)newTasks;	// 0x33205c85
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x33208cb1
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x33208da9
- (void)setEventsAlertedAndSave:(id)save;	// 0x331c1ba1
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x33208e1d
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x33208d89
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x33208ea5
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x33208d69
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x33208d49
// declared property setter: - (void)setRegisteredQueue:(dispatch_queue_s *)queue;	// 0x33208ee5
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x331c47dd
// declared property setter: - (void)setUnsavedChangesQueue:(dispatch_queue_s *)queue;	// 0x33208f05
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x33208dc9
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x33208e3d
// declared property setter: - (void)set_sources:(id)sources;	// 0x33208e71
- (id)sourceWithIdentifier:(id)identifier;	// 0x331cb8d1
// converted property getter: - (id)sources;	// 0x331c214d
// declared property getter: - (id)timeZone;	// 0x331c0421
- (int)unacknowledgedEventCount;	// 0x332062b5
- (int)unreadEventCount;	// 0x331c0a15
// declared property getter: - (dispatch_queue_s *)unsavedChangesQueue;	// 0x33208ef5
// declared property getter: - (id)updatedObjects;	// 0x33208db9
@end

