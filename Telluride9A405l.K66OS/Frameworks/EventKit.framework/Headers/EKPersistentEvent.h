/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EKPersistentCalendarItem.h"
#import "EventKit-Structs.h"

@class NSURL, NSString, NSDate;

@interface EKPersistentEvent : EKPersistentCalendarItem {
	XXStruct_mY3THC _cachedDurationUnits;	// 24 = 0x18
}
@property(copy, nonatomic) NSURL *URL;	// G=0x331d0fc9; S=0x3322e99d; 
@property(retain) id actions;	// G=0x3322ef35; S=0x3322ef69; converted property
@property(assign, nonatomic) int availability;	// G=0x3322ece9; S=0x3322ed05; 
@property(readonly, assign, nonatomic) int birthdayID;	// G=0x3322e9d9; 
@property(readonly, assign, nonatomic) double duration;	// G=0x3322e9f5; 
@property(readonly, assign, nonatomic) XXStruct_mY3THC durationUnits;	// G=0x331c8d49; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x3322efe5; 
@property(copy, nonatomic) NSDate *endDate;	// G=0x331c8fa1; S=0x331d9ec1; 
@property(readonly, assign, nonatomic) NSString *eventIdentifier;	// G=0x331d0c35; 
@property(readonly, assign, nonatomic, getter=isFloating) BOOL floating;	// G=0x331d1ca1; 
@property(readonly, assign, nonatomic, getter=isInvitation) BOOL invitation;	// G=0x331d14b1; 
@property(readonly, assign, nonatomic, getter=isMeeting) BOOL meeting;	// G=0x3322ea61; 
@property(assign, nonatomic) unsigned modifiedProperties;	// G=0x3322eab9; S=0x3322ead5; 
@property(assign, nonatomic) BOOL needsOccurrenceCacheUpdate;	// G=0x3322eaf1; S=0x3322eb11; 
@property(copy, nonatomic) NSDate *originalStartDate;	// G=0x3322ed91; S=0x3322edad; 
@property(assign, nonatomic) int participationStatus;	// G=0x3322eb2d; S=0x3322eb5d; 
@property(readonly, assign, nonatomic) int pendingParticipationStatus;	// G=0x3322eb8d; 
@property(assign, nonatomic) unsigned privacyLevel;	// G=0x3322ed21; S=0x3322ed3d; 
@property(assign, nonatomic) unsigned readStatus;	// G=0x331d1649; S=0x3322eccd; 
@property(copy, nonatomic) NSString *responseComment;	// G=0x3322ed59; S=0x3322ed75; 
@property(assign, nonatomic) int status;	// G=0x331caf25; S=0x3322ea9d; 
+ (id)defaultPropertiesToLoad;	// 0x331c8405
+ (id)generateUniqueIDWithEvent:(id)event originalEvent:(id)event2 calendar:(id)calendar;	// 0x331daa91
+ (id)relations;	// 0x331ca835
- (id)initCommon;	// 0x331c8169
// declared property getter: - (id)URL;	// 0x331d0fc9
- (void)_adjustForNewCalendar;	// 0x331da689
- (BOOL)_areDurationUnitsCached;	// 0x331c8e5d
- (BOOL)_hasExternalIDOrDeliverySource;	// 0x3322eefd
- (BOOL)_hasValidEventAction;	// 0x3322ee31
- (void)_invalidateCachedDurationUnits;	// 0x331c81ad
// converted property getter: - (id)actions;	// 0x3322ef35
- (void)addAction:(id)action;	// 0x3322efad
- (BOOL)allowsParticipationStatusModifications;	// 0x331d12bd
// declared property getter: - (int)availability;	// 0x3322ece9
// declared property getter: - (int)birthdayID;	// 0x3322e9d9
- (int)birthdayId;	// 0x3322ebbd
- (void)clearExceptionDatesAndUpdateDetachedOriginalDates;	// 0x331d9edd
- (id)committedStartDate;	// 0x3322edc9
- (id)copyWithZone:(NSZone *)zone;	// 0x3322f68d
- (void)dealloc;	// 0x3322e8a1
- (void)deleteFromOccurrenceDateOnward:(id)occurrenceDateOnward;	// 0x3322f1e9
- (id)description;	// 0x3322f051
- (id)detachWithStartDate:(id)startDate newStartDate:(id)date future:(BOOL)future;	// 0x3322f8b5
// declared property getter: - (double)duration;	// 0x3322e9f5
// declared property getter: - (XXStruct_mY3THC)durationUnits;	// 0x331c8d49
// declared property getter: - (id)endDate;	// 0x331c8fa1
- (int)entityType;	// 0x331d1c45
// declared property getter: - (id)eventIdentifier;	// 0x331d0c35
- (id)exportToICS;	// 0x3322e8cd
- (void)filterExceptionDates;	// 0x3323049d
// declared property getter: - (BOOL)isEditable;	// 0x3322efe5
// declared property getter: - (BOOL)isFloating;	// 0x331d1ca1
// declared property getter: - (BOOL)isInvitation;	// 0x331d14b1
// declared property getter: - (BOOL)isMeeting;	// 0x3322ea61
// declared property getter: - (unsigned)modifiedProperties;	// 0x3322eab9
// declared property getter: - (BOOL)needsOccurrenceCacheUpdate;	// 0x3322eaf1
- (id)organizer;	// 0x331d0e3d
// declared property getter: - (id)originalStartDate;	// 0x3322ed91
// declared property getter: - (int)participationStatus;	// 0x3322eb2d
// declared property getter: - (int)pendingParticipationStatus;	// 0x3322eb8d
- (void)primitiveValueChangedForKey:(id)key;	// 0x331d1a41
// declared property getter: - (unsigned)privacyLevel;	// 0x3322ed21
// declared property getter: - (unsigned)readStatus;	// 0x331d1649
- (BOOL)refresh;	// 0x331dc5c1
- (void)removeAction:(id)action;	// 0x3322efc9
// declared property getter: - (id)responseComment;	// 0x3322ed59
- (BOOL)responseMustApplyToAll;	// 0x3322ebd9
// converted property setter: - (void)setActions:(id)actions;	// 0x3322ef69
// declared property setter: - (void)setAvailability:(int)availability;	// 0x3322ed05
// declared property setter: - (void)setEndDate:(id)date;	// 0x331d9ec1
// declared property setter: - (void)setModifiedProperties:(unsigned)properties;	// 0x3322ead5
// declared property setter: - (void)setNeedsOccurrenceCacheUpdate:(BOOL)update;	// 0x3322eb11
// declared property setter: - (void)setOriginalStartDate:(id)date;	// 0x3322edad
// declared property setter: - (void)setParticipationStatus:(int)status;	// 0x3322eb5d
// declared property setter: - (void)setPrivacyLevel:(unsigned)level;	// 0x3322ed3d
// declared property setter: - (void)setReadStatus:(unsigned)status;	// 0x3322eccd
// declared property setter: - (void)setResponseComment:(id)comment;	// 0x3322ed75
// declared property setter: - (void)setStatus:(int)status;	// 0x3322ea9d
// declared property setter: - (void)setURL:(id)url;	// 0x3322e99d
// declared property getter: - (int)status;	// 0x331caf25
- (BOOL)validate:(id *)validate;	// 0x331da215
@end

