/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UITextInputTraits.h"
#import "NSObject.h"
#import "UITextInputTraits_Private.h"
#import "NSCopying.h"
#import "UIKit-Structs.h"

@class UIImage, UIColor;

@protocol UITextInputTraits <NSObject>
@optional
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) int returnKeyType;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(assign, nonatomic) int spellCheckingType;
// declared property getter: - (int)autocapitalizationType;
// declared property getter: - (int)autocorrectionType;
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;
// declared property getter: - (BOOL)isSecureTextEntry;
// declared property getter: - (int)keyboardAppearance;
// declared property getter: - (int)keyboardType;
// declared property getter: - (int)returnKeyType;
// declared property setter: - (void)setAutocapitalizationType:(int)type;
// declared property setter: - (void)setAutocorrectionType:(int)type;
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;
// declared property setter: - (void)setKeyboardType:(int)type;
// declared property setter: - (void)setReturnKeyType:(int)type;
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;
// declared property setter: - (void)setSpellCheckingType:(int)type;
// declared property getter: - (int)spellCheckingType;
@end

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {
	int autocapitalizationType;	// 4 = 0x4
	int autocorrectionType;	// 8 = 0x8
	int spellCheckingType;	// 12 = 0xc
	unsigned keyboardType : 8;	// 16 = 0x10
	unsigned keyboardAppearance : 8;	// 17 = 0x11
	int returnKeyType;	// 20 = 0x14
	BOOL enablesReturnKeyAutomatically;	// 24 = 0x18
	BOOL secureTextEntry;	// 25 = 0x19
	CFCharacterSetRef textTrimmingSet;	// 28 = 0x1c
	UIColor *insertionPointColor;	// 32 = 0x20
	UIColor *selectionBarColor;	// 36 = 0x24
	UIColor *selectionHighlightColor;	// 40 = 0x28
	UIImage *selectionDragDotImage;	// 44 = 0x2c
	unsigned insertionPointWidth;	// 48 = 0x30
	int textLoupeVisibility;	// 52 = 0x34
	int textSelectionBehavior;	// 56 = 0x38
	id textSuggestionDelegate;	// 60 = 0x3c
	BOOL contentsIsSingleValue;	// 64 = 0x40
	BOOL acceptsEmoji;	// 65 = 0x41
	BOOL returnKeyGoesToNextResponder;	// 66 = 0x42
	BOOL acceptsFloatingKeyboard;	// 67 = 0x43
	BOOL acceptsSplitKeyboard;	// 68 = 0x44
	BOOL richText;	// 69 = 0x45
	BOOL displaySecureTextUsingPlainText;	// 70 = 0x46
	BOOL learnsCorrections;	// 71 = 0x47
	int emptyContentReturnKeyType;	// 72 = 0x48
	int shortcutConversionType;	// 76 = 0x4c
	BOOL suppressReturnKeyStyling;	// 80 = 0x50
	BOOL forceEnableDictation;	// 81 = 0x51
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x32cee65d; S=0x32d04be1; @synthesize
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;	// G=0x32cee68d; S=0x32ee40f9; @synthesize
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;	// G=0x32cee69d; S=0x32ee4109; @synthesize
@property(assign, nonatomic) int autocapitalizationType;	// G=0x32cee531; S=0x32d028d9; @synthesize
@property(assign, nonatomic) int autocorrectionType;	// G=0x32cee541; S=0x32cc3e7d; @synthesize
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x32cee64d; S=0x32da21dd; @synthesize
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;	// G=0x32cee6bd; S=0x32ee4119; @synthesize
@property(assign, nonatomic) int emptyContentReturnKeyType;	// G=0x32cee67d; S=0x32ee40d9; @synthesize
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// G=0x32cee591; S=0x32cc3a41; @synthesize
@property(assign, nonatomic) BOOL forceEnableDictation;	// G=0x32ee4149; S=0x32ee4159; @synthesize
@property(retain, nonatomic) UIColor *insertionPointColor;	// G=0x32cee5cd; S=0x32cc07cd; @synthesize
@property(assign, nonatomic) unsigned insertionPointWidth;	// G=0x32cee60d; S=0x32ee40c9; @synthesize
@property(assign, nonatomic) int keyboardAppearance;	// G=0x32cee571; S=0x32ee40b9; @synthesize
@property(assign, nonatomic) int keyboardType;	// G=0x32cee561; S=0x32d028f9; @synthesize
@property(assign, nonatomic) BOOL learnsCorrections;	// G=0x32cee6cd; S=0x32ee4129; @synthesize
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;	// G=0x32cee66d; S=0x32ee40e9; @synthesize
@property(assign, nonatomic) int returnKeyType;	// G=0x32cee581; S=0x32cc3a31; @synthesize
@property(assign, nonatomic, getter=isRichText) BOOL richText;	// G=0x32cee6ad; S=0x32dd5ce9; @synthesize
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// G=0x32c92af1; S=0x32ee36c1; @synthesize
@property(retain, nonatomic) UIColor *selectionBarColor;	// G=0x32cee5dd; S=0x32cc07f1; @synthesize
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// G=0x32cee5fd; S=0x32cc0901; @synthesize
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// G=0x32cee5ed; S=0x32cc08dd; @synthesize
@property(assign, nonatomic) int shortcutConversionType;	// G=0x32cee6dd; S=0x32ee4139; @synthesize
@property(assign, nonatomic) int spellCheckingType;	// G=0x32cee551; S=0x32d028e9; @synthesize
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;	// G=0x32cee6ed; S=0x32dece69; @synthesize
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x32cee61d; S=0x32d400b5; @synthesize
@property(assign, nonatomic) int textSelectionBehavior;	// G=0x32cee62d; S=0x32d5e13d; @synthesize
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x32cee63d; S=0x32da21ed; @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x32c928f9; S=0x32cee5a1; @dynamic
+ (id)defaultTextInputTraits;	// 0x32dcdcdd
+ (BOOL)keyboardTypeRequiresASCIICapable:(int)capable;	// 0x32d61f9d
+ (id)traitsByAdoptingTraits:(id)traits;	// 0x32d61179
- (id)init;	// 0x32cc04b1
// declared property getter: - (BOOL)acceptsEmoji;	// 0x32cee65d
// declared property getter: - (BOOL)acceptsFloatingKeyboard;	// 0x32cee68d
// declared property getter: - (BOOL)acceptsSplitKeyboard;	// 0x32cee69d
// declared property getter: - (int)autocapitalizationType;	// 0x32cee531
// declared property getter: - (int)autocorrectionType;	// 0x32cee541
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x32cee64d
- (id)copyWithZone:(NSZone *)zone;	// 0x32cedad5
- (void)dealloc;	// 0x32d00711
- (id)description;	// 0x32ee36ed
- (id)dictionaryRepresentation;	// 0x32ee345d
// declared property getter: - (BOOL)displaySecureTextUsingPlainText;	// 0x32cee6bd
// declared property getter: - (int)emptyContentReturnKeyType;	// 0x32cee67d
// declared property getter: - (BOOL)enablesReturnKeyAutomatically;	// 0x32cee591
// declared property getter: - (BOOL)forceEnableDictation;	// 0x32ee4149
// declared property getter: - (id)insertionPointColor;	// 0x32cee5cd
// declared property getter: - (unsigned)insertionPointWidth;	// 0x32cee60d
- (BOOL)isEqual:(id)equal;	// 0x32ee3cb5
// declared property getter: - (BOOL)isRichText;	// 0x32cee6ad
// declared property getter: - (BOOL)isSecureTextEntry;	// 0x32c92af1
// declared property getter: - (int)keyboardAppearance;	// 0x32cee571
// declared property getter: - (int)keyboardType;	// 0x32cee561
// declared property getter: - (BOOL)learnsCorrections;	// 0x32cee6cd
// declared property getter: - (BOOL)returnKeyGoesToNextResponder;	// 0x32cee66d
// declared property getter: - (int)returnKeyType;	// 0x32cee581
// declared property getter: - (id)selectionBarColor;	// 0x32cee5dd
// declared property getter: - (id)selectionDragDotImage;	// 0x32cee5fd
// declared property getter: - (id)selectionHighlightColor;	// 0x32cee5ed
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x32d04be1
// declared property setter: - (void)setAcceptsFloatingKeyboard:(BOOL)keyboard;	// 0x32ee40f9
// declared property setter: - (void)setAcceptsSplitKeyboard:(BOOL)keyboard;	// 0x32ee4109
// declared property setter: - (void)setAutocapitalizationType:(int)type;	// 0x32d028d9
// declared property setter: - (void)setAutocorrectionType:(int)type;	// 0x32cc3e7d
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x32da21dd
// declared property setter: - (void)setDisplaySecureTextUsingPlainText:(BOOL)text;	// 0x32ee4119
// declared property setter: - (void)setEmptyContentReturnKeyType:(int)type;	// 0x32ee40d9
// declared property setter: - (void)setEnablesReturnKeyAutomatically:(BOOL)automatically;	// 0x32cc3a41
// declared property setter: - (void)setForceEnableDictation:(BOOL)dictation;	// 0x32ee4159
// declared property setter: - (void)setInsertionPointColor:(id)color;	// 0x32cc07cd
// declared property setter: - (void)setInsertionPointWidth:(unsigned)width;	// 0x32ee40c9
// declared property setter: - (void)setKeyboardAppearance:(int)appearance;	// 0x32ee40b9
// declared property setter: - (void)setKeyboardType:(int)type;	// 0x32d028f9
// declared property setter: - (void)setLearnsCorrections:(BOOL)corrections;	// 0x32ee4129
// declared property setter: - (void)setReturnKeyGoesToNextResponder:(BOOL)nextResponder;	// 0x32ee40e9
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x32cc3a31
// declared property setter: - (void)setRichText:(BOOL)text;	// 0x32dd5ce9
// declared property setter: - (void)setSecureTextEntry:(BOOL)entry;	// 0x32ee36c1
// declared property setter: - (void)setSelectionBarColor:(id)color;	// 0x32cc07f1
// declared property setter: - (void)setSelectionDragDotImage:(id)image;	// 0x32cc0901
// declared property setter: - (void)setSelectionHighlightColor:(id)color;	// 0x32cc08dd
// declared property setter: - (void)setShortcutConversionType:(int)type;	// 0x32ee4139
// declared property setter: - (void)setSpellCheckingType:(int)type;	// 0x32d028e9
// declared property setter: - (void)setSuppressReturnKeyStyling:(BOOL)styling;	// 0x32dece69
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x32d400b5
// declared property setter: - (void)setTextSelectionBehavior:(int)behavior;	// 0x32d5e13d
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x32da21ed
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x32cee5a1
- (void)setToDefaultValues;	// 0x32cc04f9
- (void)setToSecureValues;	// 0x32ee33bd
// declared property getter: - (int)shortcutConversionType;	// 0x32cee6dd
// declared property getter: - (int)spellCheckingType;	// 0x32cee551
// declared property getter: - (BOOL)suppressReturnKeyStyling;	// 0x32cee6ed
- (void)takeTraitsFrom:(id)from;	// 0x32cedb21
// declared property getter: - (int)textLoupeVisibility;	// 0x32cee61d
// declared property getter: - (int)textSelectionBehavior;	// 0x32cee62d
// declared property getter: - (id)textSuggestionDelegate;	// 0x32cee63d
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x32c928f9
@end

