/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UITextSelection.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "UIWebTiledView.h"
#import "UITextSelectingContent.h"

@class DOMNode, UIWebSelectionAssistant, UITextRange, UIAutoscroll, NSDictionary, UITextPosition, UIView, DOMHTMLElement, UIWebRotatingSheet, UITextSelectionView, UITextInteractionAssistant, UIResponder, UITextChecker, CALayer, UIColor, UIImage, WebView, UILongPressGestureRecognizer, UIReferenceLibraryViewController, DOMElement, UIPopoverController, UITapGestureRecognizer, UITextInputTraits, UIPanGestureRecognizer, WebThreadSafeUndoManager, WebViewReachabilityObserver, NSMutableSet, NSArray, NSTimer;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UITextSelectingContent, UIAutoscrollContainer, UIActionSheetDelegate, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, UITextSelection> {
	int _retainCount;	// 64 = 0x40
	WKWindow *_wkWindow;	// 68 = 0x44
	WebView *_webView;	// 72 = 0x48
	WebViewReachabilityObserver *_reachabilityObserver;	// 76 = 0x4c
	id m_parentTextView;	// 80 = 0x50
	id _delegate;	// 84 = 0x54
	id _textSuggestionDelegate;	// 88 = 0x58
	CGRect _doubleTapRect;	// 92 = 0x5c
	CGRect _mainDocumentDoubleTapRect;	// 108 = 0x6c
	CGPoint _scrollPoint;	// 124 = 0x7c
	CGPoint _doubleTapStartPosition;	// 132 = 0x84
	double _doubleTapStartTime;	// 140 = 0x8c
	CGSize _pendingSize;	// 148 = 0x94
	int _orientation;	// 156 = 0x9c
	DOMHTMLElement *_standaloneEditingElement;	// 160 = 0xa0
	CGPoint _mouseDownPoint;	// 164 = 0xa4
	double _mouseDownTime;	// 172 = 0xac
	UIAutoscroll *_autoscroll;	// 180 = 0xb4
	CFDictionaryRef _plugInViews;	// 184 = 0xb8
	int m_selectionGranularity;	// 188 = 0xbc
	CALayer *_contentLayersHostingLayer;	// 192 = 0xc0
	CALayer *_flattenedRotatingContentLayer;	// 196 = 0xc4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 200 = 0xc8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 204 = 0xcc
	NSMutableSet *_overflowScrollViews;	// 208 = 0xd0
	NSArray *_additionalSubviews;	// 212 = 0xd4
	UITextInputTraits *_traits;	// 216 = 0xd8
	id<UITextInputDelegate> _inputDelegate;	// 220 = 0xdc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 224 = 0xe0
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 228 = 0xe4
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 232 = 0xe8
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 236 = 0xec
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 240 = 0xf0
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 244 = 0xf4
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
	} _interaction;	// 248 = 0xf8
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 296 = 0x128
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 416 = 0x1a0
	CGSize _minimumSize;	// 440 = 0x1b8
	int _documentType;	// 448 = 0x1c0
	float _documentScale;	// 452 = 0x1c4
	float _previousDocumentScale;	// 456 = 0x1c8
	CGRect _documentBounds;	// 460 = 0x1cc
	CGSize _fixedLayoutOriginRoundingDelta;	// 476 = 0x1dc
	CGSize _fixedLayoutSizeRoundingDelta;	// 484 = 0x1e4
	unsigned _customConfigurations;	// 492 = 0x1ec
	unsigned _mouseDownCount;	// 496 = 0x1f0
	unsigned _dataDetectorTypes;	// 500 = 0x1f4
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 504 = 0x1f8
	unsigned _webCoreNeedsDraw : 1;	// 504 = 0x1f8
	unsigned _ignoresFocusingMouse : 1;	// 504 = 0x1f8
	unsigned _ignoresKeyEvents : 1;	// 504 = 0x1f8
	unsigned _autoresizes : 1;	// 504 = 0x1f8
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 504 = 0x1f8
	unsigned _updatingSize : 1;	// 504 = 0x1f8
	unsigned _scalesToFit : 1;	// 504 = 0x1f8
	unsigned _updatesScrollView : 1;	// 505 = 0x1f9
	unsigned _hasCustomScale : 1;	// 505 = 0x1f9
	unsigned _shouldRestoreScrollPosition : 1;	// 505 = 0x1f9
	unsigned _pageNeedsReset : 1;	// 505 = 0x1f9
	unsigned _hasScrollPoint : 1;	// 505 = 0x1f9
	unsigned _gesturesDisabled : 1;	// 505 = 0x1f9
	unsigned _doubleTapRectIsReplaced : 1;	// 505 = 0x1f9
	unsigned _standaloneEditableView : 1;	// 505 = 0x1f9
	unsigned _widgetEditingView : 1;	// 506 = 0x1fa
	unsigned _mouseDragged : 1;	// 506 = 0x1fa
	unsigned _mouseReentrancyGuard : 1;	// 506 = 0x1fa
	unsigned _isShowingFullScreenPlugIn : 1;	// 506 = 0x1fa
	unsigned _isSettingRedrawFrame : 1;	// 506 = 0x1fa
	unsigned _needsScrollNotifications : 1;	// 506 = 0x1fa
	unsigned _loadsSynchronously : 1;	// 506 = 0x1fa
	unsigned _mouseDown : 1;	// 506 = 0x1fa
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 507 = 0x1fb
	unsigned _geolocationDialogAllowed : 1;	// 507 = 0x1fb
	unsigned _usingMinimalTilesDuringLoading : 1;	// 507 = 0x1fb
	unsigned _sheetsCount : 2;	// 507 = 0x1fb
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 507 = 0x1fb
	unsigned _loadInProgress : 1;	// 507 = 0x1fb
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 507 = 0x1fb
	unsigned _classicViewportMode : 1;	// 508 = 0x1fc
	unsigned _sizeUpdatesSuspended : 1;	// 508 = 0x1fc
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 508 = 0x1fc
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 508 = 0x1fc
	unsigned _shouldIgnoreCustomViewport : 1;	// 508 = 0x1fc
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 508 = 0x1fc
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 508 = 0x1fc
	unsigned _shouldRemoveUserStyleSheet : 1;	// 508 = 0x1fc
	unsigned _hasDrawnTiles : 1;	// 509 = 0x1fd
	unsigned _showingTextStyleOptions : 1;	// 509 = 0x1fd
	unsigned _subviewCachesNeedUpdate : 1;	// 509 = 0x1fd
	unsigned _avoidFixedPositionUpdateOnZoomStart : 1;	// 509 = 0x1fd
	WebThreadSafeUndoManager *_undoManager;	// 512 = 0x200
	UIWebSelectionAssistant *_webSelectionAssistant;	// 516 = 0x204
	UITextInteractionAssistant *_textSelectionAssistant;	// 520 = 0x208
	UITextSelectionView *_textSelectionView;	// 524 = 0x20c
	UITextChecker *_textChecker;	// 528 = 0x210
	UIEdgeInsets _caretInsets;	// 532 = 0x214
	int _selectionAffinity;	// 548 = 0x224
	UIPopoverController *_definePopoverController;	// 552 = 0x228
	UIReferenceLibraryViewController *_defineViewController;	// 556 = 0x22c
	DOMElement *_dictationResultPlaceholder;	// 560 = 0x230
	id _dictationResultPlaceholderRemovalObserver;	// 564 = 0x234
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x32e1effd; S=0x32eb3f15; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *asText;	// G=0x32f3e9c5; 
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x32f3e095; S=0x32f3e02d; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x32eadf45; S=0x32eadf49; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x32e1b17d; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x32f3d805; S=0x32d04acd; converted property
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x32ead3f1; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x32d041f9; S=0x32d20c19; converted property
@property(assign) id delegate;	// G=0x32d93a85; S=0x32d21191; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x32ea8bd1; S=0x32e1d639; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x32d219d5; converted property
@property(readonly, assign) int documentType;	// G=0x32d21985; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x32eaa835; S=0x32d073a5; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x32eab455; converted property
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x32ead481; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x32d7ffb9; 
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32d5b941; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x32d52de1; S=0x32d60eb9; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x32ead3f5; 
@property(assign) id interactionDelegate;	// G=0x32eb3db9; S=0x32d211a1; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x32eab4a9; S=0x32d093dd; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x32eab4e5; S=0x32eab4cd; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x32ea8bbd; S=0x32d02e31; converted property
@property(retain) id markedText;	// G=0x32db6f45; S=0x32e1b035; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32d62689; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x32eaea99; S=0x32eaea9d; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x32eaa7f1; S=0x32eaa7a9; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x32d5e9c1; S=0x32d5bb85; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x32d5ea45; S=0x32eaeced; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x32eaecf1; S=0x32d79bc1; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x32eae689; 
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x32d03461; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x32ea8ea9; S=0x32ea8e91; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x32eaa795; S=0x32eaa77d; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x32ea8e7d; S=0x32ea8e0d; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x32eab4bd; S=0x32d0959d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x32eacf45; S=0x32eace1d; converted property
@property(readonly, assign, nonatomic) UIResponder<UITextSelection> *textDocument;	// G=0x32eaed5d; 
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x32d62779; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x32d60261; converted property
@property(assign) BOOL updatesScrollView;	// G=0x32ea9139; S=0x32ea9121; converted property
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x32eadea1; converted property
@property(readonly, retain) WebView *webView;	// G=0x32ca3229; converted property
+ (id)_createDefaultHighlightView;	// 0x32dc6875
+ (id)_sharedHighlightView;	// 0x32dc683d
+ (double)getTimestamp;	// 0x32dc9525
+ (void)initialize;	// 0x32ea8825
+ (Class)layerClass;	// 0x32d01a71
+ (id)standardTextViewPreferences;	// 0x32d01325
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x32d0142d
- (id)initWithFrame:(CGRect)frame;	// 0x32d07379
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x32d01595
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x32dc358d
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x32e1effd
- (void)_addAdditionalSubview:(id)subview;	// 0x32ea9e99
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x32ea9635
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x32dc291d
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x32eb5161
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x32eb53d9
- (void)_bold:(id)bold;	// 0x32ead5c5
- (void)_cancelLongPressGestureRecognizer;	// 0x32dc6a91
- (float)_clampScale:(float)scale toScrollView:(id)scrollView;	// 0x32eaab35
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x32d078d9
- (void)_clearAllConsoleMessages;	// 0x32d08f4d
- (void)_clearDoubleTapRect;	// 0x32d08ee9
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x32eae0a5
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x32eae355
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x32eb45d1
- (BOOL)_dataDetectionIsActivated;	// 0x32d07995
- (void)_define:(id)define;	// 0x32ead885
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x32eabc69
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x32d04e11
- (void)_didScroll;	// 0x32dc6441
- (float)_documentScale;	// 0x32dc4ba9
- (id)_documentUrl;	// 0x32eaed61
- (CGRect)_documentViewVisibleRect;	// 0x32d08c29
- (id)_doubleTapGestureRecognizer;	// 0x32eb3f01
- (void)_doubleTapRecognized:(id)recognized;	// 0x32eb30d9
- (float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width isPDF:(BOOL)pdf;	// 0x32eaa859
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x32eb5bb9
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32d04465
- (void)_finishedUsingDictationPlaceholder;	// 0x32eac029
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x32eae491
- (id)_focusedOrMainFrame;	// 0x32ca2081
- (id)_groupName;	// 0x32e13311
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x32eaab99
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x32eaa969
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x32eab325
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x32eaa389
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x32dcb2d1
- (BOOL)_isDeallocating;	// 0x32ea889d
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x32dc88a5
- (void)_italicize:(id)italicize;	// 0x32ead61d
- (CGRect)_lastRectForRange:(id)range;	// 0x32eae9f1
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x32d08a41
- (void)_longPressRecognized:(id)recognized;	// 0x32dcae11
- (NSRange)_markedTextNSRange;	// 0x32eacb01
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x32ea9df5
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x32ea9d91
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x32d01cd1
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x32ea93f1
- (void)_notifyPlugInViewsOfDidZoom;	// 0x32ea94ed
- (void)_notifyPlugInViewsOfScaleChange;	// 0x32d08829
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x32ea9339
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x32eaa32d
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node;	// 0x32eaa229
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x32eaa1bd
- (id)_parentTextView;	// 0x32d61169
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32eae901
- (Class)_printFormatterClass;	// 0x32fd8b1d
- (void)_promptForReplace:(id)replace;	// 0x32eade49
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x32d22f29
- (void)_removeAdditionalSubview:(id)subview;	// 0x32ea9efd
- (void)_removeDefinitionController:(BOOL)controller;	// 0x32dd7ced
- (id)_requestWithUDIDHeaderIfAppropriate:(id)udidheaderIfAppropriate;	// 0x32eab4a1
- (void)_resetForNewPage;	// 0x32d09639
- (void)_resetFormDataForFrame:(id)frame;	// 0x32d07e3d
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x32dcb415
- (void)_reshapePlugInViews;	// 0x32d05555
- (id)_responderForBecomeFirstResponder;	// 0x32e1f1d1
- (void)_restoreFlattenedContentLayers;	// 0x32eae60d
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x32dc3751
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x32d029cd
- (void)_runLoadBlock:(id)block;	// 0x32d07965
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x32dc5545
- (id)_scriptingInfoForForm:(id)form;	// 0x32eaf01d
- (id)_scriptingInfoForLink:(id)link;	// 0x32eaedc5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x32eae985
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32d043e9
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x32eb3571
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x32eb3f15
- (void)_setDocumentScale:(float)scale;	// 0x32d084cd
- (void)_setDocumentType:(int)type;	// 0x32d20ced
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x32d07f31
- (void)_setParentTextView:(id)view;	// 0x32d03025
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x32dc4b91
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x32eae235
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x32eaa40d
- (void)_showDataDetectorsSheet;	// 0x32eb4c79
- (void)_showImageSheet;	// 0x32eb4859
- (void)_showLinkSheet;	// 0x32eb4acd
- (void)_showPendingContentLayers;	// 0x32d098c9
- (void)_showTextStyleOptions:(id)options;	// 0x32ead6cd
- (void)_singleTapRecognized:(id)recognized;	// 0x32e1e4a5
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x32d91905
- (id)_targetURL;	// 0x32eb3941
- (id)_textSelectingContainer;	// 0x32d94061
- (BOOL)_tryRetain;	// 0x32ea8841
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x32eb3125
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x32eb3171
- (void)_underline:(id)underline;	// 0x32ead675
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x32eab729
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x32eab685
- (void)_updateFixedPositionContent;	// 0x32dc6c15
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;	// 0x32d088e1
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x32dcda71
- (void)_updateScrollViewBoundaryZoomScales;	// 0x32d03199
- (void)_updateSize;	// 0x32dc30fd
- (void)_updateSubviewCaches;	// 0x32dc4d15
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x32dc4651
- (float)_zoomedDocumentScale;	// 0x32dc3099
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x32eb39f5
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x32eb3af1
- (void)addInputString:(id)string;	// 0x32eab809
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x32eab7cd
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x32dcb221
// declared property getter: - (id)asText;	// 0x32f3e9c5
- (void)assistFormNode:(id)node;	// 0x32eab48d
- (void)attemptClick:(id)click;	// 0x32e1ebed
- (id)automaticallySelectedOverlay;	// 0x32e17421
- (CGRect)autoscrollContentFrame;	// 0x32eadf1d
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x32f3e095
- (CGRect)autoscrollDragFrame;	// 0x32eadef9
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x32eaeccd
- (BOOL)becomeFirstResponder;	// 0x32e1eeb9
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x32eadf45
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x32eb590d
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x32eb5721
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x32eb58a5
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x32eb5695
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x32eb56c5
- (void)beginSelectionChange;	// 0x32d5b911
// declared property getter: - (id)beginningOfDocument;	// 0x32e1b17d
- (BOOL)canBecomeFirstResponder;	// 0x32e1efe5
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x32d81a11
- (BOOL)canResignFirstResponder;	// 0x32e1f201
- (void)cancelAutoscroll;	// 0x32f3e8e9
- (void)cancelInteraction;	// 0x32dc94f1
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x32dc6631
- (BOOL)cancelMouseTracking;	// 0x32ea9279
- (BOOL)cancelTouchTracking;	// 0x32ea92cd
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x32f3d805
- (CGRect)caretRect;	// 0x32d03e4d
- (CGRect)caretRectForPosition:(id)position;	// 0x32d5fff9
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x32d60101
- (unsigned short)characterAfterCaretSelection;	// 0x32d821b5
- (unsigned short)characterBeforeCaretSelection;	// 0x32d82185
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x32eac559
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x32eaeb71
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x32eaec61
- (id)checkSpellingOfString:(id)string;	// 0x32dd9af5
- (void)clearInteractionTimer;	// 0x32dc67f9
- (void)clearRangedSelectionInitialExtent;	// 0x32f3d945
- (void)clearSelection;	// 0x32f3d5c1
- (BOOL)clearWKFirstResponder;	// 0x32ddcf19
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x32f3d615
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32d7937d
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x32eaeaa1
- (void)collapseSelection;	// 0x32f3d7b1
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x32db58ad
- (void)completeInteraction;	// 0x32dcddf1
- (void)confirmMarkedText:(id)text;	// 0x32eac4d5
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x32eb614d
- (BOOL)containsOnlySelectableElements;	// 0x32e1e291
// declared property getter: - (id)content;	// 0x32ead3f1
- (CGRect)contentFrameForView:(id)view;	// 0x32f3e111
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x32eb2e3d
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x32ead0dd
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x32dca839
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x32dca7c9
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x32d79461
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x32dca6e9
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x32ea8db1
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x32d03f49
- (void)copy:(id)copy;	// 0x32ead595
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x32ea9201
- (void)cut:(id)cut;	// 0x32ead4e1
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x32d041f9
- (void)dealloc;	// 0x32dd780d
- (void)deferInteraction;	// 0x32eb38f1
- (void)deferredBecomeFirstResponder;	// 0x32eab571
// converted property getter: - (id)delegate;	// 0x32d93a85
- (void)deleteBackward;	// 0x32e11aa1
- (void)deleteFromInput;	// 0x32eab81d
- (void)detachInteractionAssistant;	// 0x32d03131
- (void)detachSelectionView;	// 0x32d03111
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x32ea8bd1
- (id)dictationInterpretations;	// 0x32eac27d
- (id)dictationResultMetadataForRange:(id)range;	// 0x32eabbd1
- (void)didEndScroll;	// 0x32dcd8f5
- (void)didEndZoom;	// 0x32eae045
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x32ea88c9
- (void)didMoveToSuperview;	// 0x32d03189
- (void)didRemovePlugInView:(id)view;	// 0x32dc535d
- (void)didZoom;	// 0x32eadfed
// converted property getter: - (CGRect)documentBounds;	// 0x32d219d5
// converted property getter: - (int)documentType;	// 0x32d21985
// converted property getter: - (CGRect)doubleTapRect;	// 0x32eab455
- (BOOL)doubleTapRectIsReplaced;	// 0x32eab479
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x32eb5ddd
- (unsigned)effectiveDataDetectorTypes;	// 0x32e12f31
- (void)enableReachability;	// 0x32d1ffb1
- (void)enclosingScrollerDidScroll;	// 0x32ea8ee5
// declared property getter: - (id)endOfDocument;	// 0x32d5b941
- (void)endPrintMode;	// 0x32eb5a61
- (void)endSelectionChange;	// 0x32d5be6d
- (void)ensureSelection;	// 0x32dd8b5d
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x32eac9dd
- (void)extendCurrentSelection:(int)selection;	// 0x32eacbf1
- (CGRect)firstRectForRange:(id)range;	// 0x32e172c9
- (id)fontForCaretSelection;	// 0x32e18549
- (void)forceLayout;	// 0x32ea914d
- (id)formElement;	// 0x32d794d5
- (void)forwardInvocation:(id)invocation;	// 0x32d20691
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x32ea9851
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x32dcad55
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x32dcac11
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x32dc883d
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x32dcac85
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x32dca91d
- (int)getPasteboardChangeCount;	// 0x32ea9af1
- (int)getPasteboardItemsCount;	// 0x32ea9799
- (void)handleKeyWebEvent:(id)event;	// 0x32ead195
- (BOOL)hasContent;	// 0x32ca2029
- (BOOL)hasDrawnTiles;	// 0x32dc0189
- (BOOL)hasEditableSelection;	// 0x32d0442d
- (BOOL)hasMarkedText;	// 0x32d04229
- (BOOL)hasPlugInSubviews;	// 0x32ead3a1
- (BOOL)hasRangedSelection;	// 0x32eabc49
- (BOOL)hasRichlyEditableSelection;	// 0x32ea97cd
- (BOOL)hasSelection;	// 0x32eacc71
- (BOOL)hasSelection;	// 0x32ca3239
- (BOOL)hasSimpleTextOnlyStructure;	// 0x32e1e185
- (BOOL)hasText;	// 0x32db4745
- (void)hideTapHighlight;	// 0x32dcd5f9
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x32eb3719
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x32dcb495
- (id)implementationWebView;	// 0x32ead0f1
- (float)initialScale;	// 0x32d08401
// declared property getter: - (id)inputDelegate;	// 0x32d52de1
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x32eab8e9
- (id)insertDictationResultPlaceholder:(CGSize)placeholder;	// 0x32eabccd
- (void)insertText:(id)text;	// 0x32db5bad
- (void)installGestureRecognizers;	// 0x32d01d4d
- (float)integralScaleForScale:(float)scale;	// 0x32d08779
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x32d0878d
// declared property getter: - (id)interactionAssistant;	// 0x32ead3f5
// converted property getter: - (id)interactionDelegate;	// 0x32eb3db9
- (BOOL)isCaretInEmptyParagraph;	// 0x32d820f5
- (BOOL)isClassicViewportMode;	// 0x32ea8ebd
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x32eaa835
// declared property getter: - (BOOL)isEditable;	// 0x32ead481
// declared property getter: - (BOOL)isEditing;	// 0x32d7ffb9
- (BOOL)isEditingSingleLineElement;	// 0x32eab851
- (BOOL)isInInteraction;	// 0x32eb2ffd
- (BOOL)isInPrintMode;	// 0x32eb502d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x32d7981d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x32d79851
- (BOOL)isShowingFullScreenPlugInUI;	// 0x32dbe055
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x32eab4a9
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x32ea9b25
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x32eab4e5
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x32dd8de5
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x32dd9a1d
- (BOOL)keyboardInputChanged:(id)changed;	// 0x32d96a85
- (void)keyboardInputChangedSelection:(id)selection;	// 0x32d939b5
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x32ead0f5
- (void)layoutSubviews;	// 0x32d05255
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x32ea8a91
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x32d07881
- (void)loadRequest:(id)request;	// 0x32dc0201
// converted property getter: - (BOOL)loadsSynchronously;	// 0x32ea8bbd
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x32eade91
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x32eade81
- (BOOL)makeWKFirstResponder;	// 0x32d93bd5
// converted property getter: - (id)markedText;	// 0x32db6f45
// declared property getter: - (id)markedTextRange;	// 0x32d62689
// declared property getter: - (id)markedTextStyle;	// 0x32eaea99
- (float)maximumScale;	// 0x32ea8d9d
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x32eaa7f1
- (id)metadataDictionariesForDictationResults;	// 0x32eabb35
- (id)methodSignatureForSelector:(SEL)selector;	// 0x32d0439d
- (float)minimumScale;	// 0x32d08e1d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x32ea8be5
- (BOOL)mouseEventsChangeSelection;	// 0x32eb6019
- (void)moveBackward:(unsigned)backward;	// 0x32eacd01
- (void)moveForward:(unsigned)forward;	// 0x32eacd65
- (BOOL)needsScrollNotifications;	// 0x32ea8ed1
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x32ea9225
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32eac90d
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x32d96931
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x32f3d6d9
- (void)paste:(id)paste;	// 0x32eadb91
- (void)performClick:(id)click;	// 0x32eb31f9
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x32eb2da1
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x32ea98a1
- (BOOL)playsNicelyWithGestures;	// 0x32eadf41
- (void)popoverControllerDidDismissPopover:(id)popoverController;	// 0x32eadb65
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x32f3e9c9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x32eae961
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x32d93869
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x32d79885
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x32eaebed
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32eac885
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x32eacbbd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x32eacb89
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x32d6277d
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x32eae75d
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x32ea9c11
- (CGRect)rectContainingCaretSelection;	// 0x32eac7dd
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x32eac5cd
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x32eac65d
- (id)rectsForRange:(id)range;	// 0x32eaed01
- (void)redrawScaledDocument;	// 0x32eaa4b5
- (oneway void)release;	// 0x32d05159
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertText:(BOOL)text;	// 0x32eac065
- (void)replace:(id)replace;	// 0x32eadd75
- (void)replaceCurrentWordWithText:(id)text;	// 0x32eac389
- (void)replaceRange:(id)range withText:(id)text;	// 0x32eae841
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x32eac2b5
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x32e1af2d
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x32eaca65
- (BOOL)requiresKeyEvents;	// 0x32d6def5
- (void)resetInteraction;	// 0x32dc67c1
- (void)resetShowingTextStyle:(id)style;	// 0x32ddcd0d
- (void)resetTilingAfterLoadComplete;	// 0x32d09341
- (BOOL)resignFirstResponder;	// 0x32d093f5
- (id)retain;	// 0x32d03151
- (unsigned)retainCount;	// 0x32dd5cd5
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x32d5f0f1
- (void)saveStateToCurrentHistoryItem;	// 0x32dc54f5
- (id)scriptingInfoWithChildren;	// 0x32e14989
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x32f3e909
- (void)scrollViewWasRemoved;	// 0x32eadfa9
- (void)select:(id)select;	// 0x32eadcdd
- (void)selectAll;	// 0x32f3df75
- (void)selectAll;	// 0x32eacdc9
- (void)selectAll:(id)all;	// 0x32eadd29
- (void)selectWord;	// 0x32f3d56d
- (id)selectedDOMRange;	// 0x32eacb59
- (id)selectedDOMRange;	// 0x32d5ea15
// declared property getter: - (id)selectedTextRange;	// 0x32d5e9c1
// declared property getter: - (int)selectionAffinity;	// 0x32d5ea45
- (BOOL)selectionAtDocumentStart;	// 0x32eacca1
- (BOOL)selectionAtWordStart;	// 0x32eaccd1
- (int)selectionBaseWritingDirection;	// 0x32d928a9
- (void)selectionChanged;	// 0x32d033d9
- (void)selectionChanged:(id)changed;	// 0x32d03361
- (CGRect)selectionClipRect;	// 0x32e1a891
// declared property getter: - (int)selectionGranularity;	// 0x32eaecf1
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x32f3dfc9
- (NSRange)selectionRange;	// 0x32dd99dd
- (id)selectionRects;	// 0x32f3dcb5
- (id)selectionRectsForRange:(id)range;	// 0x32d79e99
// declared property getter: - (int)selectionState;	// 0x32eae689
- (int)selectionState;	// 0x32d82155
// declared property getter: - (id)selectionView;	// 0x32d03461
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x32dc39b9
- (void)sendScrollEventIfNecessary;	// 0x32dc6cb9
- (void)sendScrollWheelEvents;	// 0x32eb3b3d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x32e12ead
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x32d21229
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x32eb3dcd
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x32d02bf9
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x32d20cd5
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x32f3e02d
- (void)setBaseWritingDirection:(int)direction;	// 0x32f3d881
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x32d93981
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x32eadf49
- (void)setBottomBufferHeight:(float)height;	// 0x32ead165
- (void)setCaretChangeListener:(id)listener;	// 0x32ead0ad
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x32d04acd
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x32d61bad
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x32d20c19
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x32d21191
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x32e1d639
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x32d073a5
- (void)setDrawsBackground:(BOOL)background;	// 0x32d0307d
- (void)setFrame:(CGRect)frame;	// 0x32d01ac9
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x32d02d9d
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x32ea9321
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x32ea9109
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32d02b45
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x32d60eb9
- (void)setInteractionAssistantGestureRecognizers;	// 0x32eab59d
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x32d211a1
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x32d093dd
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x32eab4cd
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x32d02e31
// converted property setter: - (void)setMarkedText:(id)text;	// 0x32e1b035
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32eac449
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x32eaea9d
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32d02bbd
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x32eaa7a9
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32d02b81
- (void)setMinimumSize:(CGSize)size;	// 0x32d02909
- (void)setOpaque:(BOOL)opaque;	// 0x32d03035
- (void)setPaused:(BOOL)paused;	// 0x32ead1d1
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x32ead1e5
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x32f3d8b5
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x32f3d915
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x32f3d8e5
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x32f3d9d5
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x32f3da7d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x32f3d9a5
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x32f3d975
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x32f3de41
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x32f3dc31
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x32d5bdb9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32d5bb85
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32eae6b9
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x32eaeced
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x32d79bc1
- (void)setSelectionToEnd;	// 0x32f3decd
- (void)setSelectionToStart;	// 0x32f3df21
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x32f3db15
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32f3e90d
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x32ea8e91
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x32eaa77d
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x32ea8e0d
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x32d211b5
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x32d0959d
// converted property setter: - (void)setText:(id)text;	// 0x32eace1d
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x32dc234d
- (void)setTilingArea:(int)area;	// 0x32d07e41
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x32ea9121
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x32e1cd19
- (void)setUserStyleSheet:(id)sheet;	// 0x32e1321d
- (void)setUsesUIScrollView;	// 0x32d1ffad
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x32d02c31
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x32ea8ea9
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x32eaa795
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x32ea8e7d
- (void)smartExtendRangedSelection:(int)selection;	// 0x32f3de0d
// converted property getter: - (id)standaloneEditingElement;	// 0x32eab4bd
- (BOOL)startActionSheet;	// 0x32eb2f1d
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x32f3e149
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x32eb2dfd
- (void)stopLoading:(id)loading;	// 0x32dcdd91
- (id)subviews;	// 0x32d02cd1
- (id)superviewForSheet;	// 0x32eb3de5
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x32ea9bd9
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x32eb3cb1
- (void)takeTraitsFrom:(id)from;	// 0x32ead3c5
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x32eb2e6d
// converted property getter: - (id)text;	// 0x32eacf45
- (id)textColorForCaretSelection;	// 0x32eac58d
// declared property getter: - (id)textDocument;	// 0x32eaed5d
- (id)textFormElement;	// 0x32eab4a5
- (id)textInDOMRange:(id)domrange;	// 0x32d9461d
- (id)textInRange:(id)range;	// 0x32d7275d
- (id)textInputTraits;	// 0x32d02889
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32d5ba21
- (void)toggleBaseWritingDirection;	// 0x32f3d82d
// declared property getter: - (id)tokenizer;	// 0x32d62779
// converted property getter: - (id)undoManager;	// 0x32d60261
- (id)undoManagerForWebView:(id)webView;	// 0x32d60281
- (void)unmarkText;	// 0x32dd8a4d
- (void)updateInteractionElements;	// 0x32eaa6fd
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x32eab4f9
- (void)updateSelection;	// 0x32ead4dd
// converted property getter: - (BOOL)updatesScrollView;	// 0x32ea9139
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x32d2015d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x32eb2eb9
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x32d080c5
- (float)viewportHeight;	// 0x32d21099
- (float)viewportWidth;	// 0x32d20d0d
- (CGRect)visibleBounds;	// 0x32d7fe45
- (CGRect)visibleContentFrame;	// 0x32eaded5
- (CGRect)visibleFrame;	// 0x32eadeb1
- (CGRect)visibleRectForSelecting;	// 0x32eb6031
// converted property getter: - (id)webSelectionAssistant;	// 0x32eadea1
- (void)webThreadWebViewDidLayout:(id)webThreadWebView;	// 0x32ea8f41
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x32ca3155
// converted property getter: - (id)webView;	// 0x32ca3229
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x32ea90b9
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x32d079b1
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node;	// 0x32ea9f65
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x32dc6329
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x32d09075
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x32d02c79
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x32ead329
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x32eb36e5
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x32d08f51
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x32dc639d
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x32dc62c1
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x32dc3a25
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x32dce6c1
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x32dc6021
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x32d5ee01
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x32dc4425
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x32eaa131
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x32ead2d9
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x32d05349
- (void)webViewDidDrawTiles:(id)webView;	// 0x32d055b1
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x32ea8f9d
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x32eb3715
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x32ea8f55
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x32d0150d
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x32d793c9
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x32eb3021
- (void)willMoveToSuperview:(id)superview;	// 0x32d030e1
- (void)willStartScroll;	// 0x32dcd689
- (void)willStartScrollToTop;	// 0x32eadf4d
- (void)willStartZoom;	// 0x32eadfbd
- (id)wordAtPoint:(CGPoint)point;	// 0x32f3dbc9
- (id)wordContainingCaretSelection;	// 0x32eac995
- (int)wordOffsetInRange:(id)range;	// 0x32eaca31
- (id)wordRangeContainingCaretSelection;	// 0x32eac855
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x32ea96ed
@end

