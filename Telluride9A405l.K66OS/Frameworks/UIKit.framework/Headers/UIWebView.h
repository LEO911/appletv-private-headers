/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "NSCoding.h"
#import "UIScrollViewDelegate.h"
#import "UIView.h"

@class UIScrollView, NSURLRequest, UIWebViewInternal;
@protocol UIWebViewDelegate;

@interface UIWebView : UIView <NSCoding, UIScrollViewDelegate> {
@private
	UIWebViewInternal *_internal;	// 48 = 0x30
}
@property(assign, nonatomic) BOOL allowsInlineMediaPlayback;	// G=0x32eb6d85; S=0x32eb6d59; 
@property(readonly, assign, nonatomic, getter=canGoBack) BOOL canGoBack;	// G=0x32eb7149; 
@property(readonly, assign, nonatomic, getter=canGoForward) BOOL canGoForward;	// G=0x32eb7191; 
@property(assign, nonatomic) unsigned dataDetectorTypes;	// G=0x32eb6d2d; S=0x32e1d725; 
@property(assign, nonatomic) id<UIWebViewDelegate> delegate;	// G=0x32eb6f5d; S=0x32eb6f3d; 
@property(assign, nonatomic) BOOL detectsPhoneNumbers;	// G=0x32eb6cf9; S=0x32eb6ccd; 
@property(readonly, assign, nonatomic, getter=isLoading) BOOL loading;	// G=0x32eb6f19; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x32eb6e45; S=0x32eb6e19; 
@property(assign, nonatomic) BOOL mediaPlaybackRequiresUserAction;	// G=0x32eb6de5; S=0x32eb6db9; 
@property(readonly, assign, nonatomic) NSURLRequest *request;	// G=0x32eb6ffd; 
@property(assign, nonatomic) BOOL scalesPageToFit;	// G=0x32eb6ef5; S=0x32eb6e79; 
@property(readonly, assign, nonatomic) UIScrollView *scrollView;	// G=0x32eb6f7d; 
- (id)initWithCoder:(id)coder;	// 0x32eb694d
- (id)initWithFrame:(CGRect)frame;	// 0x32e1be31
- (BOOL)_appliesExclusiveTouchToSubviewTree;	// 0x32e1e4a1
- (void)_beginRotation;	// 0x32eb7215
- (id)_browserView;	// 0x32e1d8a5
- (void)_define:(id)define;	// 0x32eb8a21
- (void)_didCompleteScrolling;	// 0x32eb787d
- (void)_didRotate:(id)rotate;	// 0x32eb677d
- (id)_documentView;	// 0x32e1e481
- (void)_finishRotation;	// 0x32eb7255
- (void)_frameOrBoundsChanged;	// 0x32eb7369
- (BOOL)_isDeallocating;	// 0x32eb6c11
- (id)_pdfViewHandler;	// 0x32eb88fd
- (void)_populateArchivedSubviews:(id)subviews;	// 0x32eb6a3d
- (Class)_printFormatterClass;	// 0x32fcc815
- (void)_reportError:(id)error;	// 0x32eb7975
- (void)_rescaleDocument;	// 0x32eb72cd
- (id)_scrollView;	// 0x32e1d8c5
- (void)_setDrawInWebThread:(BOOL)webThread;	// 0x32e1ccb5
- (void)_setDrawsCheckeredPattern:(BOOL)pattern;	// 0x32e1d751
- (void)_setOverridesOrientationChangeEventHandling:(BOOL)handling;	// 0x32eb891d
- (void)_setRichTextReaderViewportSettings;	// 0x32e1d309
- (void)_setScalesPageToFitViewportSettings;	// 0x32eb67f9
- (void)_setWebSelectionEnabled:(BOOL)enabled;	// 0x32eb8941
- (BOOL)_tryRetain;	// 0x32eb6ba5
- (void)_updateCheckeredPattern;	// 0x32e1cc15
- (void)_updateOpaqueAndBackgroundColor;	// 0x32e1cd31
- (void)_updateRequest;	// 0x32e1dc65
- (void)_updateScrollerViewForInputView:(id)inputView;	// 0x32eb7661
- (void)_updateViewSettings;	// 0x32e1cf71
- (void)_webViewCommonInit:(BOOL)init;	// 0x32e1bf29
// declared property getter: - (BOOL)allowsInlineMediaPlayback;	// 0x32eb6d85
// declared property getter: - (BOOL)canGoBack;	// 0x32eb7149
// declared property getter: - (BOOL)canGoForward;	// 0x32eb7191
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x32eb8965
- (void)copy:(id)copy;	// 0x32eb899d
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x32eb8831
// declared property getter: - (unsigned)dataDetectorTypes;	// 0x32eb6d2d
- (void)dealloc;	// 0x32e1f241
// declared property getter: - (id)delegate;	// 0x32eb6f5d
// declared property getter: - (BOOL)detectsPhoneNumbers;	// 0x32eb6cf9
- (void)encodeWithCoder:(id)coder;	// 0x32eb6aa1
- (void)goBack;	// 0x32eb70b9
- (void)goForward;	// 0x32eb7101
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;	// 0x32f0165d
// declared property getter: - (BOOL)isLoading;	// 0x32eb6f19
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x32eb6fc9
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x32e1d8f5
- (void)loadRequest:(id)request;	// 0x32eb6f9d
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x32eb6e45
// declared property getter: - (BOOL)mediaPlaybackRequiresUserAction;	// 0x32eb6de5
- (void)modalView:(id)view didDismissWithButtonIndex:(int)buttonIndex;	// 0x32eb7e79
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x32eb8855
- (oneway void)release;	// 0x32e1d7f1
- (void)reload;	// 0x32eb7041
// declared property getter: - (id)request;	// 0x32eb6ffd
- (void)restoreStateFromHistoryItem:(id)historyItem forWebView:(id)webView;	// 0x32eb76c1
- (id)retain;	// 0x32e1d7ad
- (unsigned)retainCount;	// 0x32eb6b81
- (void)saveGeolocation:(id)geolocation;	// 0x32eb88c5
- (void)saveStateToHistoryItem:(id)historyItem forWebView:(id)webView;	// 0x32eb768d
// declared property getter: - (BOOL)scalesPageToFit;	// 0x32eb6ef5
// declared property getter: - (id)scrollView;	// 0x32eb6f7d
- (void)scrollViewDidEndDecelerating:(id)scrollView;	// 0x32eb78f9
- (void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;	// 0x32eb78d9
- (void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;	// 0x32eb77ad
- (void)scrollViewDidScrollToTop:(id)scrollView;	// 0x32eb7909
- (void)scrollViewDidZoom:(id)scrollView;	// 0x32eb7751
- (void)scrollViewWasRemoved:(id)removed;	// 0x32eb7919
- (void)scrollViewWillBeginDragging:(id)scrollView;	// 0x32eb7821
- (void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;	// 0x32eb76f5
- (void)select:(id)select;	// 0x32eb89c9
- (void)selectAll:(id)all;	// 0x32eb89f5
// declared property setter: - (void)setAllowsInlineMediaPlayback:(BOOL)playback;	// 0x32eb6d59
- (void)setBackgroundColor:(id)color;	// 0x32e1d67d
- (void)setBounds:(CGRect)bounds;	// 0x32eb7535
// declared property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x32e1d725
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x32eb6f3d
// declared property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x32eb6ccd
- (void)setFrame:(CGRect)frame;	// 0x32e1be81
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x32eb6e19
// declared property setter: - (void)setMediaPlaybackRequiresUserAction:(BOOL)action;	// 0x32eb6db9
- (void)setOpaque:(BOOL)opaque;	// 0x32eb75dd
// declared property setter: - (void)setScalesPageToFit:(BOOL)fit;	// 0x32eb6e79
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x32eb71d9
- (void)stopLoading;	// 0x32eb7089
- (id)stringByEvaluatingJavaScriptFromString:(id)string;	// 0x32eb6c55
- (void)view:(id)view didSetFrame:(CGRect)frame oldFrame:(CGRect)frame3;	// 0x32e1d8e5
- (id)viewForZoomingInScrollView:(id)scrollView;	// 0x32e1d561
- (id)webView:(id)view connectionPropertiesForResource:(id)resource dataSource:(id)source;	// 0x32eb7d49
- (void)webView:(id)view decidePolicyForGeolocationRequestFromOrigin:(id)origin frame:(id)frame listener:(id)listener;	// 0x32eb83ad
- (void)webView:(id)view decidePolicyForMIMEType:(id)mimetype request:(id)request frame:(id)frame decisionListener:(id)listener;	// 0x32eb7a4d
- (void)webView:(id)view decidePolicyForNavigationAction:(id)navigationAction request:(id)request frame:(id)frame decisionListener:(id)listener;	// 0x32e1d949
- (void)webView:(id)view decidePolicyForNewWindowAction:(id)newWindowAction request:(id)request newFrameName:(id)name decisionListener:(id)listener;	// 0x32eb79e1
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x32eb879d
- (void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;	// 0x32e1e379
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x32e1dedd
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x32eb7e25
- (void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;	// 0x32eb7dd1
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x32e1e049
- (void)webView:(id)view didFirstLayoutInFrame:(id)frame;	// 0x32e1d5cd
- (void)webView:(id)view didReceiveServerRedirectForProvisionalLoadForFrame:(id)frame;	// 0x32eb7dc1
- (void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;	// 0x32eb7cd5
- (void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;	// 0x32e1dbb5
- (void)webView:(id)view exceededApplicationCacheOriginQuotaForSecurityOrigin:(id)securityOrigin totalSpaceNeeded:(unsigned)needed;	// 0x32eb7bd1
- (void)webView:(id)view frame:(id)frame exceededDatabaseQuotaForSecurityOrigin:(id)securityOrigin database:(id)database;	// 0x32eb7b31
- (id)webView:(id)view identifierForInitialRequest:(id)initialRequest fromDataSource:(id)dataSource;	// 0x32e1dd39
- (void)webView:(id)view printFrameView:(id)view2;	// 0x32eb7c69
- (BOOL)webView:(id)view resource:(id)resource canAuthenticateAgainstProtectionSpace:(id)space forDataSource:(id)dataSource;	// 0x32eb865d
- (void)webView:(id)view resource:(id)resource didCancelAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;	// 0x32eb85e1
- (void)webView:(id)view resource:(id)resource didFailLoadingWithError:(id)error fromDataSource:(id)dataSource;	// 0x32eb8469
- (void)webView:(id)view resource:(id)resource didFinishLoadingFromDataSource:(id)dataSource;	// 0x32e1e40d
- (void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;	// 0x32eb84e5
- (id)webView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;	// 0x32e1de0d
- (void)webView:(id)view runJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;	// 0x32eb7efd
- (BOOL)webView:(id)view runJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;	// 0x32eb80e1
- (id)webView:(id)view runJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;	// 0x32eb8219
- (void)webView:(id)view unableToImplementPolicyWithError:(id)error frame:(id)frame;	// 0x32eb7b1d
- (void)webViewClose:(id)close;	// 0x32eb7e99
- (void)webViewMainFrameDidCommitLoad:(id)webViewMainFrame;	// 0x32e1de91
- (void)webViewMainFrameDidFinishLoad:(id)webViewMainFrame;	// 0x32e1df75
- (void)webViewMainFrameDidFirstVisuallyNonEmptyLayoutInFrame:(id)webViewMainFrame;	// 0x32e1df49
@end

