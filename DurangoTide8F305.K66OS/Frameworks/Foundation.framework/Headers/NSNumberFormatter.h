/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
@private
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x327da701; S=0x32753d39; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x327dd219; S=0x32770d0d; converted property
@property(retain) id currencyCode;	// G=0x327dd7e9; S=0x327dc525; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x327dd2b5; S=0x327dbb4d; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x327de5e1; S=0x327dce41; converted property
@property(retain) id currencySymbol;	// G=0x327dd891; S=0x327dc5b9; converted property
@property(retain) id decimalSeparator;	// G=0x327dd171; S=0x327dbabd; converted property
@property(retain) id exponentSymbol;	// G=0x327ddc81; S=0x327dc931; converted property
@property(assign) unsigned formatWidth;	// G=0x327ddea9; S=0x327dca2d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x327da8c1; S=0x327666b9; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x327db6ed; S=0x32758655; converted property
@property(retain) id groupingSeparator;	// G=0x327dd3f9; S=0x327dbbe1; converted property
@property(assign) unsigned groupingSize;	// G=0x327ddd29; S=0x32775819; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x327dd939; S=0x327dc64d; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x327de689; S=0x327dced5; converted property
@property(retain) id locale;	// G=0x327db68d; S=0x327585f5; converted property
@property(retain) id maximum;	// G=0x327dce19; S=0x327da601; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x327de521; S=0x327dcd89; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x327de3a1; S=0x327dcd21; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x327dd00d; S=0x327dd0cd; converted property
@property(retain) id minimum;	// G=0x327dcdf1; S=0x327da681; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x327de461; S=0x32770d75; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x327de2e1; S=0x32770ddd; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x327de7c9; S=0x327dcfa5; converted property
@property(retain) id minusSign;	// G=0x327ddb31; S=0x327dc809; converted property
@property(retain) id multiplier;	// G=0x327ddf69; S=0x327dca95; converted property
@property(retain) id negativeFormat;	// G=0x327db729; S=0x327db7c9; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x327dc199; S=0x32753ced; converted property
@property(retain) id negativePrefix;	// G=0x327dd699; S=0x327dc3fd; converted property
@property(retain) id negativeSuffix;	// G=0x327dd741; S=0x327dc491; converted property
@property(retain) id nilSymbol;	// G=0x327dbdc9; S=0x32753c55; converted property
@property(retain) id notANumberSymbol;	// G=0x327dd4a1; S=0x327dbf05; converted property
@property(assign) unsigned numberStyle;	// G=0x327db61d; S=0x3275869d; converted property
@property(retain) id paddingCharacter;	// G=0x327de011; S=0x327dcb29; converted property
@property(assign) unsigned paddingPosition;	// G=0x327de0b9; S=0x327dcbbd; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x327dd135; S=0x327da5b9; converted property
@property(retain) id perMillSymbol;	// G=0x327dda89; S=0x327dc775; converted property
@property(retain) id percentSymbol;	// G=0x327dd9e1; S=0x327dc6e1; converted property
@property(retain) id plusSign;	// G=0x327ddbd9; S=0x327dc89d; converted property
@property(retain) id positiveFormat;	// G=0x327db919; S=0x327db9a5; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x327dc05d; S=0x32753ca1; converted property
@property(retain) id positivePrefix;	// G=0x327dd549; S=0x327dc2d5; converted property
@property(retain) id positiveSuffix;	// G=0x327dd5f1; S=0x327dc369; converted property
@property(retain) id roundingIncrement;	// G=0x327de239; S=0x327dcc8d; converted property
@property(assign) unsigned roundingMode;	// G=0x327de179; S=0x327dcc25; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x327ddde9; S=0x327dc9c5; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x327dc211; S=0x327dc289; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x327da849; S=0x327da7fd; converted property
@property(retain) id textAttributesForNil;	// G=0x327dbe41; S=0x327dbeb9; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x327dbf99; S=0x327dc011; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x327dc0d5; S=0x327dc14d; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x327da785; S=0x327da739; converted property
@property(retain) id textAttributesForZero;	// G=0x327dbd05; S=0x327dbd7d; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x327dd35d; S=0x327692ed; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x327de729; S=0x327dcf3d; converted property
@property(retain) id zeroSymbol;	// G=0x327711f1; S=0x327dbc71; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x32753c49
+ (void)initialize;	// 0x327538f9
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x3277110d
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x32753919
- (id)init;	// 0x3275392d
- (id)initWithCoder:(id)coder;	// 0x327daa05
- (void *)__Keynote_NOOP;	// 0x327da5b1
- (void)_regenerateFormatter;	// 0x32753d81
- (void)_reset;	// 0x327dabf1
// converted property getter: - (BOOL)allowsFloats;	// 0x327da701
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x327dd219
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x327da5b5
- (id)copyWithZone:(NSZone *)zone;	// 0x327dab95
// converted property getter: - (id)currencyCode;	// 0x327dd7e9
// converted property getter: - (id)currencyDecimalSeparator;	// 0x327dd2b5
// converted property getter: - (id)currencyGroupingSeparator;	// 0x327de5e1
// converted property getter: - (id)currencySymbol;	// 0x327dd891
- (void)dealloc;	// 0x3276e4f1
// converted property getter: - (id)decimalSeparator;	// 0x327dd171
- (void)encodeWithCoder:(id)coder;	// 0x327da931
// converted property getter: - (id)exponentSymbol;	// 0x327ddc81
- (void)finalize;	// 0x327da9c5
// converted property getter: - (unsigned)formatWidth;	// 0x327ddea9
// converted property getter: - (unsigned)formatterBehavior;	// 0x327da8c1
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x327db6ed
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x327db551
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x327db531
// converted property getter: - (id)groupingSeparator;	// 0x327dd3f9
// converted property getter: - (unsigned)groupingSize;	// 0x327ddd29
// converted property getter: - (id)internationalCurrencySymbol;	// 0x327dd939
// converted property getter: - (BOOL)isLenient;	// 0x327de689
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x327dd135
// converted property getter: - (id)locale;	// 0x327db68d
// converted property getter: - (id)maximum;	// 0x327dce19
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x327de521
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x327de3a1
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x327dd00d
// converted property getter: - (id)minimum;	// 0x327dcdf1
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x327de461
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x327de2e1
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x327de7c9
// converted property getter: - (id)minusSign;	// 0x327ddb31
// converted property getter: - (id)multiplier;	// 0x327ddf69
// converted property getter: - (id)negativeFormat;	// 0x327db729
// converted property getter: - (id)negativeInfinitySymbol;	// 0x327dc199
// converted property getter: - (id)negativePrefix;	// 0x327dd699
// converted property getter: - (id)negativeSuffix;	// 0x327dd741
// converted property getter: - (id)nilSymbol;	// 0x327dbdc9
// converted property getter: - (id)notANumberSymbol;	// 0x327dd4a1
- (id)numberFromString:(id)string;	// 0x327da8f9
// converted property getter: - (unsigned)numberStyle;	// 0x327db61d
// converted property getter: - (id)paddingCharacter;	// 0x327de011
// converted property getter: - (unsigned)paddingPosition;	// 0x327de0b9
// converted property getter: - (id)perMillSymbol;	// 0x327dda89
// converted property getter: - (id)percentSymbol;	// 0x327dd9e1
// converted property getter: - (id)plusSign;	// 0x327ddbd9
// converted property getter: - (id)positiveFormat;	// 0x327db919
// converted property getter: - (id)positiveInfinitySymbol;	// 0x327dc05d
// converted property getter: - (id)positivePrefix;	// 0x327dd549
// converted property getter: - (id)positiveSuffix;	// 0x327dd5f1
// converted property getter: - (id)roundingIncrement;	// 0x327de239
// converted property getter: - (unsigned)roundingMode;	// 0x327de179
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x327ddde9
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x32753d39
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x32770d0d
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x327dc525
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x327dbb4d
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x327dce41
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x327dc5b9
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x327dbabd
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x327dc931
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x327dca2d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x327666b9
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x32758655
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x327dbbe1
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x32775819
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x327dc64d
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x327dced5
// converted property setter: - (void)setLocale:(id)locale;	// 0x327585f5
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x327da601
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x327dcd89
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x327dcd21
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x327dd0cd
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x327da681
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x32770d75
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x32770ddd
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x327dcfa5
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x327dc809
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x327dca95
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x327db7c9
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x32753ced
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x327dc3fd
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x327dc491
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x32753c55
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x327dbf05
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3275869d
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x327dcb29
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x327dcbbd
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x327da5b9
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x327dc775
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x327dc6e1
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x327dc89d
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x327db9a5
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x32753ca1
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x327dc2d5
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x327dc369
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x327dcc8d
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x327dcc25
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x327dc9c5
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x327dc289
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x327da7fd
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x327dbeb9
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x327dc011
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x327dc14d
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x327da739
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x327dbd7d
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x327692ed
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x327dcf3d
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x327dbc71
- (id)stringForObjectValue:(id)objectValue;	// 0x32758711
- (id)stringFromNumber:(id)number;	// 0x327586f5
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x327dc211
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x327da849
// converted property getter: - (id)textAttributesForNil;	// 0x327dbe41
// converted property getter: - (id)textAttributesForNotANumber;	// 0x327dbf99
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x327dc0d5
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x327da785
// converted property getter: - (id)textAttributesForZero;	// 0x327dbd05
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x327dd35d
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x327de729
// converted property getter: - (id)zeroSymbol;	// 0x327711f1
@end

