/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSURLProtocolClient.h"

@class NSURLProtocol, NSMutableArray, NSLock, NSURLAuthenticationChallenge;

__attribute__((visibility("hidden")))
@interface _NSCFURLProtocolBridge : NSObject <NSURLProtocolClient> {
@private
	unsigned flags;	// 4 = 0x4
	NSURLProtocol *nsProt;	// 8 = 0x8
	CFURLProtocolRef _cfProt;	// 12 = 0xc
	CFURLAuthChallengeRef cfChallenge;	// 16 = 0x10
	NSURLAuthenticationChallenge *nsChallenge;	// 20 = 0x14
	CFRunLoopSourceRef _rlSrc;	// 24 = 0x18
	NSMutableArray *events;	// 28 = 0x1c
	NSLock *eventMutex;	// 32 = 0x20
	NSMutableArray *clientInstructions;	// 36 = 0x24
	NSLock *clientMutex;	// 40 = 0x28
	BOOL _loading;	// 44 = 0x2c
}
+ (void)barRequest:(CFURLRequestRef)request;	// 0x32771075
+ (void)permitRequest:(CFURLRequestRef)request;	// 0x327710c1
+ (void)registerWithCFURLProtocol;	// 0x3275fa1d
- (id)initWithCFURLProtocol:(CFURLProtocolRef)cfurlprotocol;	// 0x3276f431
- (void)URLProtocol:(id)protocol cachedResponseIsValid:(id)valid;	// 0x3276fe39
- (void)URLProtocol:(id)protocol didCancelAuthenticationChallenge:(id)challenge;	// 0x327dee35
- (void)URLProtocol:(id)protocol didFailWithError:(id)error;	// 0x327def75
- (void)URLProtocol:(id)protocol didLoadData:(id)data;	// 0x327df061
- (void)URLProtocol:(id)protocol didLoadData:(id)data lengthReceived:(long long)received;	// 0x327df0d9
- (void)URLProtocol:(id)protocol didReceiveAuthenticationChallenge:(id)challenge;	// 0x327deefd
- (void)URLProtocol:(id)protocol didReceiveResponse:(id)response cacheStoragePolicy:(unsigned)policy;	// 0x327e0121
- (void)URLProtocol:(id)protocol wasRedirectedToRequest:(id)request redirectResponse:(id)response;	// 0x327df1fd
- (void)URLProtocolDidFinishLoading:(id)urlprotocol;	// 0x327defed
- (void)_forgetClient;	// 0x3276ffe5
- (void)cachedResponseIsValid:(id)valid;	// 0x3276feb1
- (void)dealloc;	// 0x327700c5
- (id)description;	// 0x327df5f1
- (void)didFailWithError:(id)error;	// 0x327dfd35
- (void)didFinishLoading;	// 0x327dfd1d
- (void)didLoadData:(id)data lengthReceived:(long long)received;	// 0x327dfcf5
- (void)didReceiveAuthenticationChallenge:(id)challenge;	// 0x327dfd4d
- (void)didReceiveResponse:(id)response;	// 0x327dfcc9
- (void)dispatchInstruction:(int)instruction;	// 0x327df6b5
- (void)dispatchInstructions;	// 0x327df421
- (void)finalize;	// 0x327df7e5
- (void)halt;	// 0x327df3d9
- (void)marshalEvent:(int)event obj:(id)obj obj2:(id)a2;	// 0x327dffed
- (void)processEventQ;	// 0x327dfdb5
- (void)resume;	// 0x327df391
- (void)schedule:(CFRunLoopRef)schedule mode:(CFStringRef)mode;	// 0x3276f999
- (void)sendInstruction:(int)instruction;	// 0x327dfb11
- (void)start;	// 0x3276faa1
- (void)stop;	// 0x3276ff49
- (void)unschedule:(CFRunLoopRef)unschedule mode:(CFStringRef)mode;	// 0x327dfac1
- (void)useCredential:(CFURLCredentialRef)credential forChallenge:(CFURLAuthChallengeRef)challenge;	// 0x327df299
- (void)wasRedirectedToRequest:(id)request redirectResponse:(id)response;	// 0x327dfc59
@end

