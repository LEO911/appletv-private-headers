/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVPlayerInternal, AVPlayerItem, NSError, NSArray;

@interface AVPlayer : NSObject {
@private
	AVPlayerInternal *_player;	// 4 = 0x4
}
@property(copy, nonatomic, setter=_setDisplaysUsedForPlayback:) NSArray *_displaysUsedForPlayback;	// G=0x34737cc1; S=0x3473de45; 
@property(readonly, assign, nonatomic) int _externalProtectionStatus;	// G=0x3473d035; 
@property(assign, nonatomic) int actionAtItemEnd;	// G=0x347384e9; S=0x347384d1; 
@property(readonly, assign, nonatomic, getter=isAudioPlaybackEnabledAtAllRates) BOOL audioPlaybackEnabledAtAllRates;	// G=0x3473cf19; 
@property(assign, nonatomic, getter=isClosedCaptionDisplayEnabled) BOOL closedCaptionDisplayEnabled;	// G=0x347383f9; S=0x3473e0a1; 
@property(readonly, assign, nonatomic) AVPlayerItem *currentItem;	// G=0x34738dd9; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x34738ebd; @dynamic
@property(assign, nonatomic) float maxRateForAudioPlayback;	// G=0x3473d515; S=0x3473da91; 
@property(assign, nonatomic) float minRateForAudioPlayback;	// G=0x3473ca99; S=0x3473db19; 
@property(assign, nonatomic) float rate;	// G=0x3473869d; S=0x3473ce41; 
@property(readonly, assign, nonatomic) int status;	// G=0x34737bf9; @dynamic
@property(assign, getter=isSubtitleDisplayEnabled) BOOL subtitleDisplayEnabled;	// G=0x34738321; S=0x3473dfbd; converted property
@property(assign) BOOL waitsUntilItemsAreReadyForInspectionBeforeMakingEligibleForPlayback;	// G=0x34737c35; S=0x34737c51; converted property
+ (BOOL)automaticallyNotifiesObserversOfActionAtItemEnd;	// 0x34737c75
+ (BOOL)automaticallyNotifiesObserversOfClosedCaptionDisplayEnabled;	// 0x34737c79
+ (BOOL)automaticallyNotifiesObserversOfCurrentItem;	// 0x34737c31
+ (BOOL)automaticallyNotifiesObserversOfRate;	// 0x34737c6d
+ (BOOL)automaticallyNotifiesObserversOfSubtitleDisplayEnabled;	// 0x34737c7d
+ (void)initialize;	// 0x347390a1
+ (id)keyPathsForValuesAffectingActionAtItemEnd;	// 0x347384a9
+ (id)keyPathsForValuesAffectingClosedCaptionDisplayEnabled;	// 0x347383d1
+ (id)keyPathsForValuesAffectingRate;	// 0x34738675
+ (id)keyPathsForValuesAffectingSubtitleDisplayEnabled;	// 0x347382f9
+ (id)playerWithPlayerItem:(id)playerItem;	// 0x34739021
+ (id)playerWithURL:(id)url;	// 0x34739061
- (id)init;	// 0x3473cb39
- (id)initWithDispatchQueue:(dispatch_queue_s *)dispatchQueue;	// 0x3473947d
- (id)initWithPlayerItem:(id)playerItem;	// 0x34738ff1
- (id)initWithURL:(id)url;	// 0x34738fbd
- (int)_actionAtItemEnd;	// 0x3473d415
- (void)_addFPListeners;	// 0x3473b1a5
- (void)_addLayer:(id)layer;	// 0x347380b9
- (void)_advanceCurrentItemToItemContainingFigPlaybackItem:(OpaqueFigPlaybackItem *)itemContainingFigPlaybackItem;	// 0x3473a321
- (BOOL)_attachItem:(id)item andPerformOperation:(int)operation withObject:(id)object;	// 0x3473a849
- (void)_attachLayerToFigPlayer;	// 0x3473df05
- (void)_beginInterruption;	// 0x34739609
- (id)_cachedValueForKey:(id)key;	// 0x34738f7d
- (void)_changeStatusToFailedWithError:(id)error;	// 0x34738e09
- (void)_checkDefaultsWriteForPerformanceLogging;	// 0x3473b945
- (id)_currentItem;	// 0x34737c15
- (int)_defaultActionAtItemEnd;	// 0x34737c71
- (void)_didAccessKVOForKey:(id)key;	// 0x34738ef9
// declared property getter: - (id)_displaysUsedForPlayback;	// 0x34737cc1
- (void)_enumerateItemsUsingBlock:(id)block;	// 0x347388b1
// declared property getter: - (int)_externalProtectionStatus;	// 0x3473d035
- (OpaqueFigPlayer *)_figPlayer;	// 0x34737ba5
- (id)_fpNotificationNames;	// 0x34738031
- (BOOL)_insertItem:(id)item afterItem:(id)item2;	// 0x34738add
- (BOOL)_insertPlaybackItemOfItem:(id)item inPlayerQueueAfterPlaybackItemOfItem:(id)item2;	// 0x34738b59
- (BOOL)_isClosedCaptionDisplayEnabled;	// 0x3473d361
- (BOOL)_isSubtitleDisplayEnabled;	// 0x3473d2ad
- (id)_items;	// 0x34738801
- (void)_logPerformanceDataForCurrentItem;	// 0x3473d0dd
- (void)_logPerformanceDataForPreviousItem;	// 0x3473d1b9
- (id)_playbackDisplaysForFigPlayer;	// 0x34737cfd
- (id)_playerLayers;	// 0x347380e5
- (int)_playerType;	// 0x34737bc1
- (void)_preparePlaybackItemOfItemForEnqueueing:(id)enqueueing withCompletionHandler:(id)completionHandler;	// 0x34738b1d
- (id)_propertyStorage;	// 0x34737bdd
- (float)_rate;	// 0x3473963d
- (void)_removeAllItems;	// 0x34738749
- (BOOL)_removeAnItem:(id)item;	// 0x3473897d
- (void)_removeFPListeners;	// 0x3473b069
- (BOOL)_removeItem:(id)item;	// 0x34738901
- (void)_removeLayer:(id)layer;	// 0x347380cd
- (void)_setActionAtItemEnd:(int)itemEnd allowingAdvance:(BOOL)advance;	// 0x3473e185
- (void)_setCachedValue:(id)value forKey:(id)key;	// 0x34738f51
- (void)_setCurrentItem:(id)item;	// 0x34738d15
// declared property setter: - (void)_setDisplaysUsedForPlayback:(id)playback;	// 0x3473de45
- (void)_setLayer:(id)layer;	// 0x34738139
- (BOOL)_shouldLogPerformanceData;	// 0x34737c81
- (dispatch_queue_s *)_stateDispatchQueue;	// 0x34737b89
- (id)_weakReference;	// 0x34737b6d
- (void)_willAccessKVOForKey:(id)key;	// 0x34738f25
// declared property getter: - (int)actionAtItemEnd;	// 0x347384e9
- (id)addBoundaryTimeObserverForTimes:(id)times queue:(dispatch_queue_s *)queue usingBlock:(id)block;	// 0x347381bd
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x34739d99
- (id)addPeriodicTimeObserverForInterval:(XXStruct_pwHToB)interval queue:(dispatch_queue_s *)queue usingBlock:(id)block;	// 0x3473820d
// declared property getter: - (id)currentItem;	// 0x34738dd9
- (XXStruct_pwHToB)currentTime;	// 0x34739d49
- (void)dealloc;	// 0x34739735
- (void)didChangeValueForKey:(id)key;	// 0x3473931d
- (dispatch_queue_s *)dispatchQueue;	// 0x34738fa9
// declared property getter: - (id)error;	// 0x34738ebd
- (void)finalize;	// 0x3473cd7d
// declared property getter: - (BOOL)isAudioPlaybackEnabledAtAllRates;	// 0x3473cf19
// declared property getter: - (BOOL)isClosedCaptionDisplayEnabled;	// 0x347383f9
// converted property getter: - (BOOL)isSubtitleDisplayEnabled;	// 0x34738321
// declared property getter: - (float)maxRateForAudioPlayback;	// 0x3473d515
// declared property getter: - (float)minRateForAudioPlayback;	// 0x3473ca99
- (void)pause;	// 0x347382c9
- (void)play;	// 0x347382e1
- (void)prepareItem:(id)item withCompletionHandler:(id)completionHandler;	// 0x34738afd
// declared property getter: - (float)rate;	// 0x3473869d
- (void)release;	// 0x347393cd
- (void)removeAudioPlaybackRateLimits;	// 0x3473dba1
- (void)removeTimeObserver:(id)observer;	// 0x3473a591
- (void)replaceCurrentItemWithPlayerItem:(id)playerItem;	// 0x34738285
- (id)retain;	// 0x34739425
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x34738625
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x347385a5
// declared property setter: - (void)setActionAtItemEnd:(int)itemEnd;	// 0x347384d1
// declared property setter: - (void)setClosedCaptionDisplayEnabled:(BOOL)enabled;	// 0x3473e0a1
// declared property setter: - (void)setMaxRateForAudioPlayback:(float)audioPlayback;	// 0x3473da91
// declared property setter: - (void)setMinRateForAudioPlayback:(float)audioPlayback;	// 0x3473db19
// declared property setter: - (void)setRate:(float)rate;	// 0x3473ce41
// converted property setter: - (void)setSubtitleDisplayEnabled:(BOOL)enabled;	// 0x3473dfbd
// converted property setter: - (void)setWaitsUntilItemsAreReadyForInspectionBeforeMakingEligibleForPlayback:(BOOL)playback;	// 0x34737c51
// declared property getter: - (int)status;	// 0x34737bf9
// converted property getter: - (BOOL)waitsUntilItemsAreReadyForInspectionBeforeMakingEligibleForPlayback;	// 0x34737c35
- (void)willChangeValueForKey:(id)key;	// 0x34739375
@end

