/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class NSDictionary, NSURL, NSData;
@protocol AVAudioPlayerDelegate;

@interface AVAudioPlayer : NSObject {
@private
	void *_impl;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x3472b499; S=0x3472b091; @dynamic
@property(readonly, assign) NSData *data;	// G=0x34728a99; @dynamic
@property(assign) id<AVAudioPlayerDelegate> delegate;	// G=0x34728aa9; S=0x34728bcd; @dynamic
@property(readonly, assign) double deviceCurrentTime;	// G=0x3472b365; @dynamic
@property(readonly, assign) double duration;	// G=0x34729179; 
@property(assign, getter=isMeteringEnabled) BOOL meteringEnabled;	// G=0x34728b29; S=0x3472aa05; @dynamic
@property(readonly, assign) unsigned numberOfChannels;	// G=0x34728af1; @dynamic
@property(assign) int numberOfLoops;	// G=0x34728b15; S=0x34728b01; @dynamic
@property(assign) float pan;	// G=0x34728add; S=0x3472b595; @dynamic
@property(readonly, assign, getter=isPlaying) BOOL playing;	// G=0x34728a75; @dynamic
@property(readonly, assign) NSDictionary *settings;	// G=0x34728ab9; @dynamic
@property(readonly, assign) NSURL *url;	// G=0x34728a89; @dynamic
@property(assign) float volume;	// G=0x34728ac9; S=0x3472b659; @dynamic
- (id)initWithContentsOfURL:(id)url error:(id *)error;	// 0x347295dd
- (id)initWithData:(id)data error:(id *)error;	// 0x347296b9
- (float)averagePowerForChannel:(unsigned)channel;	// 0x34728b6d
- (id)baseInit;	// 0x34728bed
- (void)beginInterruption;	// 0x34728cb1
// declared property getter: - (double)currentTime;	// 0x3472b499
// declared property getter: - (id)data;	// 0x34728a99
- (void)dealloc;	// 0x347290a9
- (void)decodeError;	// 0x34728cd5
// declared property getter: - (id)delegate;	// 0x34728aa9
// declared property getter: - (double)deviceCurrentTime;	// 0x3472b365
// declared property getter: - (double)duration;	// 0x34729179
- (void)endInterruption;	// 0x34728c65
- (void)endInterruptionWithFlags;	// 0x34728c89
- (void)finalize;	// 0x34729129
- (void)finishedPlaying;	// 0x3472adbd
- (AudioPlayerImpl *)impl;	// 0x34728a65
// declared property getter: - (BOOL)isMeteringEnabled;	// 0x34728b29
// declared property getter: - (BOOL)isPlaying;	// 0x34728a75
// declared property getter: - (unsigned)numberOfChannels;	// 0x34728af1
// declared property getter: - (int)numberOfLoops;	// 0x34728b15
// declared property getter: - (float)pan;	// 0x34728add
- (void)pause;	// 0x3472b7f1
- (float)peakPowerForChannel:(unsigned)channel;	// 0x34728b3d
- (BOOL)play;	// 0x3472aea5
- (BOOL)playAtTime:(double)time;	// 0x3472b8b1
- (BOOL)prepareToPlay;	// 0x3472afa9
- (void)privCommonCleanup;	// 0x34729041
// declared property setter: - (void)setCurrentTime:(double)time;	// 0x3472b091
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x34728bcd
// declared property setter: - (void)setMeteringEnabled:(BOOL)enabled;	// 0x3472aa05
// declared property setter: - (void)setNumberOfLoops:(int)loops;	// 0x34728b01
// declared property setter: - (void)setPan:(float)pan;	// 0x3472b595
// declared property setter: - (void)setVolume:(float)volume;	// 0x3472b659
// declared property getter: - (id)settings;	// 0x34728ab9
- (void)stop;	// 0x3472b719
- (void)updateMeters;	// 0x3472a901
// declared property getter: - (id)url;	// 0x34728a89
// declared property getter: - (float)volume;	// 0x34728ac9
@end

