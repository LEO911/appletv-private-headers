/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UIView.h"

@class UITextPosition, NSDictionary, UITextRange, UITextInputTraits, UITextInteractionAssistant, UITextSelectionView, UIColor;
@protocol UITextSelectingContent, UITextInputDelegate;

@interface UIDefaultKeyboardInput : UIView <UIKeyboardInput> {
	UITextInputTraits *m_traits;	// 44 = 0x2c
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x321372e5; S=0x321372e1; @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign) BOOL becomesEditableWithGestures;	// G=0x32137319; S=0x3213731d; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x32137335; 
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent> *content;	// G=0x32137309; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// @dynamic
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// @dynamic
@property(assign) id editingDelegate;	// G=0x321372d1; S=0x321372d5; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32137339; 
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x321373c9; S=0x321373cd; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x32137305; 
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(retain) id markedText;	// G=0x321371e1; S=0x321371d9; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32137379; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x3213737d; S=0x32137381; 
@property(assign, nonatomic) BOOL plainText;
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, getter=isSecure) BOOL secure;	// G=0x321372d9; S=0x321372dd; converted property
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x3213732d; S=0x32137331; 
@property(assign, nonatomic) int selectionAffinity;
@property(readonly, assign, nonatomic) UITextSelectionView *selectionView;	// G=0x321372e9; 
@property(retain) id text;	// G=0x3213728d; S=0x32137289; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x321373c5; 
- (NSRange)_markedTextNSRange;	// 0x3213725d
// declared property getter: - (BOOL)acceptsEmoji;	// 0x321372e5
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x32137399
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x32137319
- (void)beginSelectionChange;	// 0x3213730d
// declared property getter: - (id)beginningOfDocument;	// 0x32137335
- (CGRect)caretRect;	// 0x32137295
- (CGRect)caretRectForPosition:(id)position;	// 0x32137361
- (unsigned short)characterAfterCaretSelection;	// 0x321371ed
- (unsigned short)characterBeforeCaretSelection;	// 0x321371e9
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x321371e5
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x3213738d
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x32137395
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32137385
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x32137389
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x321373a5
- (void)confirmMarkedText:(id)text;	// 0x321371dd
// declared property getter: - (id)content;	// 0x32137309
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x321372ad
- (void)dealloc;	// 0x32137531
- (id)delegate;	// 0x321371b9
- (void)deleteBackward;	// 0x321371bd
- (void)detachInteractionAssistant;	// 0x32137325
- (void)detachSelectionView;	// 0x32137321
// converted property getter: - (id)editingDelegate;	// 0x321372d1
// declared property getter: - (id)endOfDocument;	// 0x32137339
- (void)endSelectionChange;	// 0x32137311
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x3213723d
- (void)extendCurrentSelection:(int)selection;	// 0x32137279
- (CGRect)firstRectForRange:(id)range;	// 0x32137349
- (id)fontForCaretSelection;	// 0x321371f1
- (void)forwardInvocation:(id)invocation;	// 0x321374a9
- (BOOL)hasContent;	// 0x32137249
- (BOOL)hasSelection;	// 0x3213724d
- (BOOL)hasText;	// 0x32137329
// declared property getter: - (id)inputDelegate;	// 0x321373c9
- (void)insertText:(id)text;	// 0x321371c1
// declared property getter: - (id)interactionAssistant;	// 0x32137305
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x321373b5
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x321373bd
// converted property getter: - (BOOL)isSecure;	// 0x321372d9
- (BOOL)isShowingPlaceholder;	// 0x321372c9
// converted property getter: - (id)markedText;	// 0x321371e1
// declared property getter: - (id)markedTextRange;	// 0x32137379
// declared property getter: - (id)markedTextStyle;	// 0x3213737d
- (id)methodSignatureForSelector:(SEL)selector;	// 0x32137419
- (void)moveBackward:(unsigned)backward;	// 0x3213727d
- (void)moveForward:(unsigned)forward;	// 0x32137281
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x321373a9
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x321373b1
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x321373ad
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x321373b9
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x32137391
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x32137275
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x32137271
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x321373c1
- (CGRect)rectContainingCaretSelection;	// 0x32137215
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x321371f5
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x32137211
- (void)replaceCurrentWordWithText:(id)text;	// 0x321371c9
- (void)replaceRange:(id)range withText:(id)text;	// 0x32137345
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x321371c5
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x321371cd
- (void)selectAll;	// 0x32137285
- (id)selectedDOMRange;	// 0x32137269
// declared property getter: - (id)selectedTextRange;	// 0x3213732d
- (BOOL)selectionAtDocumentStart;	// 0x32137255
- (BOOL)selectionAtWordStart;	// 0x32137259
- (CGRect)selectionClipRect;	// 0x321372ed
- (NSRange)selectionRange;	// 0x32137591
- (int)selectionState;	// 0x32137251
// declared property getter: - (id)selectionView;	// 0x321372e9
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x321372e1
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x3213739d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x3213731d
// converted property setter: - (void)setEditingDelegate:(id)delegate;	// 0x321372d5
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x321373cd
// converted property setter: - (void)setMarkedText:(id)text;	// 0x321371d9
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x321371d1
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x32137381
// converted property setter: - (void)setSecure:(BOOL)secure;	// 0x321372dd
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x3213726d
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32137331
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32137291
// converted property setter: - (void)setText:(id)text;	// 0x32137289
- (void)setupPlaceholderTextIfNeeded;	// 0x321372cd
- (BOOL)shouldEnableAutoShift;	// 0x32137231
- (void)takeTraitsFrom:(id)from;	// 0x321373f1
// converted property getter: - (id)text;	// 0x3213728d
- (id)textColorForCaretSelection;	// 0x321373d1
- (id)textInRange:(id)range;	// 0x3213733d
- (id)textInputTraits;	// 0x3213745d
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32137341
// declared property getter: - (id)tokenizer;	// 0x321373c5
- (void)unmarkText;	// 0x321373a1
- (void)updateSelection;	// 0x32137315
- (CGRect)visibleBounds;	// 0x32137579
- (id)wordContainingCaretSelection;	// 0x32137235
- (id)wordInRange:(id)range;	// 0x32137239
- (int)wordOffsetInRange:(id)range;	// 0x32137241
- (id)wordRangeContainingCaretSelection;	// 0x3213722d
@end

