/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"

@class NSString, NSMutableArray, NSMutableDictionary, UITextInputArrowKeyHistory, UIDelayedAction, UIKeyboardCandidate, NSArray, NSTimer, UITextInputTraits, UIAutocorrectInlinePrompt, UIKeyboardLayout, UIKeyboardInputManager;
@protocol UIKeyInput, UIKeyboardInput, UITextInputPrivate, UIKeyboardRivenCenterView, UITextInput, UIKeyboardImplGeometryDelegate, UIKeyboardCandidateList, UIKeyboardRecording, UIApplicationEventRecording;

@interface UIKeyboardImpl : UIView {
	id<UIKeyInput> m_delegate;	// 44 = 0x2c
	id<UIKeyboardRivenCenterView> m_centerView;	// 48 = 0x30
	UIView *m_languageIndicator;	// 52 = 0x34
	NSString *m_previousInputString;	// 56 = 0x38
	UIKeyboardInputManager *m_inputManager;	// 60 = 0x3c
	UIKeyboardCandidate *m_autocorrection;	// 64 = 0x40
	UIAutocorrectInlinePrompt *m_autocorrectPrompt;	// 68 = 0x44
	UIDelayedAction *m_autocorrectPromptAction;	// 72 = 0x48
	NSMutableDictionary *m_autocorrectHistoryLists;	// 76 = 0x4c
	NSMutableArray *m_recentUnacceptedAutocorrections;	// 80 = 0x50
	NSArray *m_candidates;	// 84 = 0x54
	id<UIKeyboardCandidateList> m_candidateList;	// 88 = 0x58
	UIView *m_markedTextOverlay;	// 92 = 0x5c
	id<UIKeyboardImplGeometryDelegate> m_geometryDelegate;	// 96 = 0x60
	NSObject<UIKeyboardRecording, UIApplicationEventRecording> *m_recorder;	// 100 = 0x64
	UIKeyboardLayout *m_layout;	// 104 = 0x68
	NSMutableDictionary *m_keyedLayouts;	// 108 = 0x6c
	NSString *m_inputModeLastChosen;	// 112 = 0x70
	UIDelayedAction *m_synchronizePreferencesAction;	// 116 = 0x74
	struct {
		NSTimer *timer;
		GSEventRef eventToRepeat;
		BOOL firstRepeat;
	} m_hardwareRepeat;	// 120 = 0x78
	NSTimer *m_autoDeleteTimer;	// 132 = 0x84
	unsigned m_autoDeleteCount;	// 136 = 0x88
	double m_autoDeleteLastDelete;	// 140 = 0x8c
	double m_autoDeleteInterval;	// 148 = 0x94
	unsigned short m_autoDeleteShiftCharacter;	// 156 = 0x9c
	UIDelayedAction *m_longPressAction;	// 160 = 0xa0
	int m_orientation;	// 164 = 0xa4
	int m_originalOrientation;	// 168 = 0xa8
	CGPoint m_inputPoint;	// 172 = 0xac
	int m_changeCount;	// 180 = 0xb4
	double m_changeTime;	// 184 = 0xb8
	double m_doubleSpacePeriodTime;	// 192 = 0xc0
	id m_changedDelegate;	// 200 = 0xc8
	CFRunLoopObserverRef m_observer;	// 204 = 0xcc
	unsigned m_textInputChangingCount;	// 208 = 0xd0
	BOOL m_textInputChangingText;	// 212 = 0xd4
	BOOL m_textInputChangesIgnored;	// 213 = 0xd5
	BOOL m_insideKeyInputDelegateCall;	// 214 = 0xd6
	UITextInputTraits *m_defaultTraits;	// 216 = 0xd8
	UITextInputTraits *m_traits;	// 220 = 0xdc
	int m_returnKeyState;	// 224 = 0xe0
	int m_currentDirection;	// 228 = 0xe4
	BOOL m_automaticMinimizationEnabled;	// 232 = 0xe8
	BOOL m_anotherTouchWaiting;	// 233 = 0xe9
	BOOL m_autoDeleteOK;	// 234 = 0xea
	BOOL m_autocapitalizationPreference;	// 235 = 0xeb
	BOOL m_autocorrectPromptTimerFired;	// 236 = 0xec
	BOOL m_autocorrectionPreference;	// 237 = 0xed
	BOOL m_autoshift;	// 238 = 0xee
	BOOL m_caretShowingNow;	// 239 = 0xef
	BOOL m_changeNotificationDisabled;	// 240 = 0xf0
	BOOL m_delegateIsSMSTextView;	// 241 = 0xf1
	BOOL m_delegateRequiresKeyEvents;	// 242 = 0xf2
	BOOL m_doubleSpacePeriodPreference;	// 243 = 0xf3
	BOOL m_hardwareKeyboardAttached;	// 244 = 0xf4
	BOOL m_inDealloc;	// 245 = 0xf5
	BOOL m_inHardwareKeyboardMode;	// 246 = 0xf6
	BOOL m_initializationDone;	// 247 = 0xf7
	BOOL m_performDecomposingDelete;	// 248 = 0xf8
	BOOL m_performanceLoggingEnabled;	// 249 = 0xf9
	BOOL m_preferencesNeedSynchronization;	// 250 = 0xfa
	BOOL m_selecting;	// 251 = 0xfb
	BOOL m_shift;	// 252 = 0xfc
	BOOL m_shiftLocked;	// 253 = 0xfd
	BOOL m_shiftLockedEnabled;	// 254 = 0xfe
	BOOL m_settingShift;	// 255 = 0xff
	BOOL m_shouldSkipCandidateSelection;	// 256 = 0x100
	BOOL m_showingCandidateBar;	// 257 = 0x101
	BOOL m_swipeToTabPreference;	// 258 = 0x102
	BOOL m_updatingPreferences;	// 259 = 0x103
	BOOL m_zoomEnabled;	// 260 = 0x104
	BOOL m_zoomed;	// 261 = 0x105
	BOOL m_changingGeometryWithSameOrientation;	// 262 = 0x106
	BOOL m_suppressGeometryChangeNotifications;	// 263 = 0x107
	BOOL m_acceptingCandidate;	// 264 = 0x108
	BOOL m_dynamicDictionaryDisabled;	// 265 = 0x109
	BOOL m_userChangedSelection;	// 266 = 0x10a
	BOOL m_shouldChargeKeys;	// 267 = 0x10b
	BOOL m_longPress;	// 268 = 0x10c
	BOOL m_syntheticInput;	// 269 = 0x10d
	BOOL m_replacingWord;	// 270 = 0x10e
	BOOL m_shiftNeedsUpdate;	// 271 = 0x10f
	BOOL m_shiftPreventAutoshift;	// 272 = 0x110
	BOOL m_shiftHeldDownNeedsUpdated;	// 273 = 0x111
	BOOL m_delegateAdoptsTextInput;	// 274 = 0x112
	BOOL m_delegateAdoptsTextInputPrivate;	// 275 = 0x113
	BOOL m_delegateAdoptsKeyboardInput;	// 276 = 0x114
	BOOL m_clientVariantSupportEnabled;	// 277 = 0x115
	BOOL m_clientVariantSupportEnabledEver;	// 278 = 0x116
	NSMutableArray *m_keyplaneNamesPreviousDelegate;	// 280 = 0x118
	NSMutableArray *m_keyplaneNamesCurrentDelegate;	// 284 = 0x11c
	UITextInputArrowKeyHistory *m_arrowKeyHistory;	// 288 = 0x120
	BOOL m_preRotateShift;	// 292 = 0x124
	BOOL m_preRotateShiftLocked;	// 293 = 0x125
	BOOL m_showInputModeIndicator;	// 294 = 0x126
	BOOL m_suppressUpdateCandidateView;	// 295 = 0x127
	BOOL m_shouldUpdateCacheOnInputModesChange;	// 296 = 0x128
	BOOL m_currentInputModeChanged;	// 297 = 0x129
	BOOL m_lastUsedInputModeChangedBySystem;	// 298 = 0x12a
	BOOL m_rivenInstalled;	// 299 = 0x12b
	BOOL m_rivenPreference;	// 300 = 0x12c
	BOOL m_rivenMiniPreference;	// 301 = 0x12d
	BOOL m_rivenCenterViewPreference;	// 302 = 0x12e
	BOOL m_rivenCenterDismissPreference;	// 303 = 0x12f
	BOOL m_rivenTranslationPreference;	// 304 = 0x130
	BOOL m_rivenPopupHammersPreference;	// 305 = 0x131
	unsigned m_rivenVisualStyle;	// 308 = 0x134
	unsigned m_rivenSeparationStyle;	// 312 = 0x138
	float m_splitProgress;	// 316 = 0x13c
	float m_persistentOffset;	// 320 = 0x140
	BOOL m_needsCandidates;	// 324 = 0x144
	id<UIKeyboardRivenCenterView> _centerView;	// 328 = 0x148
}
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory;	// G=0x32065999; S=0x320659a9; @synthesize=m_arrowKeyHistory
@property(readonly, assign) BOOL autocapitalizationPreference;	// G=0x31f7e21d; converted property
@property(readonly, retain) UIAutocorrectInlinePrompt *autocorrectPrompt;	// G=0x3212de89; converted property
@property(assign) BOOL autocorrectSpellingEnabled;	// G=0x320b229d; S=0x31f7e349; converted property
@property(readonly, assign) BOOL autocorrectionPreference;	// G=0x31f7e2f1; converted property
@property(assign) BOOL automaticMinimizationEnabled;	// G=0x32130185; S=0x3213059d; converted property
@property(assign, getter=isCandidateBarShowing) BOOL candidateBarShowing;	// G=0x3212d155; S=0x3212deb9; converted property
@property(assign) BOOL caretBlinks;	// G=0x3212d7a1; S=0x32054961; converted property
@property(assign) BOOL caretVisible;	// G=0x32063a31; S=0x320549bd; converted property
@property(retain, nonatomic) id<UIKeyboardRivenCenterView> centerView;	// G=0x3212d195; S=0x32131e09; @synthesize=_centerView
@property(readonly, assign) int changeCount;	// G=0x31f7b535; converted property
@property(assign) BOOL changeNotificationDisabled;	// G=0x3212d0f1; S=0x3212d101; converted property
@property(retain, nonatomic) id changedDelegate;	// G=0x31f7bf7d; S=0x31f7bfad; @synthesize=m_changedDelegate
@property(retain, nonatomic) id changedDelegate;
@property(readonly, assign, getter=isClientVariantSupportEnabled) BOOL clientVariantSupportEnabled;	// G=0x31f82089; converted property
@property(assign, nonatomic) BOOL currentInputModeChanged;	// G=0x3212d1c5; S=0x3209848d; @synthesize=m_currentInputModeChanged
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;	// G=0x31f7c1e9; S=0x31f7af81; 
@property(readonly, assign, nonatomic) UIResponder *delegateAsResponder;	// G=0x3212f24d; 
@property(readonly, assign) BOOL delegateIsSMSTextView;	// G=0x31f7bffd; converted property
@property(readonly, assign) BOOL doubleSpacePeriodPreference;	// G=0x31f98e39; converted property
@property(assign, nonatomic, getter=isDynamicDictionaryDisabled) BOOL dynamicDictionaryDisabled;	// G=0x3212d185; S=0x3212d175; 
@property(assign, nonatomic) id<UIKeyboardImplGeometryDelegate> geometryDelegate;	// G=0x31f7af71; S=0x32053c79; @synthesize=m_geometryDelegate
@property(retain) id hardwareKeyboardsSeenPreference;	// G=0x3213009d; S=0x32130541; converted property
@property(assign, nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;	// G=0x31f985a1; S=0x32064c1d; 
@property(readonly, assign, nonatomic) UIResponder<UITextInput> *inputDelegate;	// G=0x31f7b56d; 
@property(retain, nonatomic) UIKeyboardInputManager *inputManager;	// G=0x31f98591; S=0x32053029; @synthesize=m_inputManager
@property(readonly, retain) NSString *inputModeLastChosen;	// G=0x3212d0e1; converted property
@property(readonly, assign, nonatomic) id<UIKeyboardInput> legacyInputDelegate;	// G=0x31f825a1; 
@property(readonly, assign, getter=isLongPress) BOOL longPress;	// G=0x3205cac5; converted property
@property(readonly, retain) UIView *markedTextOverlay;	// G=0x3212f129; converted property
@property(readonly, assign) unsigned minimumTouchesForTranslation;	// G=0x3212d0cd; 
@property(readonly, assign) int orientation;	// G=0x3205ab3d; converted property
@property(assign) CGPoint persistentOffset;	// G=0x320581f5; S=0x321301f1; 
@property(assign) unsigned phraseBoundary;	// G=0x3212ed01; S=0x3212ed21; converted property
@property(assign, nonatomic) BOOL preferencesNeedSynchronization;	// G=0x3212d1a5; S=0x3212d1b5; @synthesize=m_preferencesNeedSynchronization
@property(readonly, assign, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;	// G=0x31f7c1c9; 
@property(retain, nonatomic) id<UIKeyboardRecording, UIApplicationEventRecording> recorder;	// G=0x31f88665; S=0x3212d6c5; 
@property(assign) BOOL returnKeyEnabled;	// G=0x31f7d3ad; S=0x31f7d2b5; converted property
@property(readonly, assign) BOOL rivenCenterDismissPreference;	// G=0x3212d09d; 
@property(readonly, assign) BOOL rivenCenterViewPreference;	// G=0x31f7b525; 
@property(readonly, assign) BOOL rivenInstalled;	// G=0x320588dd; 
@property(readonly, assign) BOOL rivenMiniPreference;	// G=0x3212d08d; 
@property(readonly, assign) BOOL rivenPopupHammersPreference;	// G=0x3205cbe5; 
@property(readonly, assign) BOOL rivenPreference;	// G=0x31f82bf9; 
@property(readonly, assign) unsigned rivenSeparationStyle;	// G=0x3212d0bd; 
@property(readonly, assign) BOOL rivenTranslationPreference;	// G=0x32058461; 
@property(readonly, assign) unsigned rivenVisualStyle;	// G=0x3212d0ad; 
@property(assign, getter=isShiftLocked) BOOL shiftLocked;	// G=0x31f81809; S=0x3212eebd; converted property
@property(readonly, assign) BOOL shiftLockedEnabled;	// G=0x3212d131; converted property
@property(assign) BOOL shouldChargeKeys;	// G=0x3212d165; S=0x31f7d281; converted property
@property(assign, nonatomic) BOOL shouldSkipCandidateSelection;	// G=0x32065ac9; S=0x31f840c5; 
@property(assign, nonatomic) BOOL showInputModeIndicator;	// G=0x3212d1d5; S=0x3212d1e5; @synthesize=m_showInputModeIndicator
@property(assign) float splitProgress;	// G=0x3205cbf5; S=0x32130339; 
@property(readonly, assign) BOOL swipeToTabPreference;	// G=0x31f98ea5; converted property
@property(readonly, assign, nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;	// G=0x3212d05d; 
@property(assign, nonatomic, getter=isZoomed, setter=setZoomed:) BOOL zoomed;	// G=0x3212d06d; S=0x3212d07d; 
+ (void)_clearHardwareKeyboardMinimizationPreference;	// 0x32130479
+ (id)activeInstance;	// 0x31f7b9fd
+ (float)additionalInstanceHeight;	// 0x31f82d45
+ (void)applicationDidReceiveMemoryWarning:(id)application;	// 0x32131e31
+ (void)applicationWillSuspend:(id)application;	// 0x32131e3d
+ (CGSize)defaultSize;	// 0x320518a9
+ (CGSize)defaultSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x32002d91
+ (CGSize)defaultSizeForOrientation:(int)orientation;	// 0x320a0199
+ (void)defaultsDidChange;	// 0x31f97d7d
+ (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x3212f671
+ (void)hardwareKeyboardAvailabilityChanged;	// 0x3212dba1
+ (CGSize)keyboardSizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x32002d45
+ (void)markElapsed:(id)elapsed;	// 0x31f825c1
+ (void)markPerformance:(id)performance;	// 0x31f8136d
+ (void)newCarrierChange;	// 0x3212dc01
+ (id)normalizedInputModesFromPreference;	// 0x32130789
+ (int)orientationForSize:(CGSize)size;	// 0x32053d21
+ (void)releaseSharedInstance;	// 0x31fe03d5
+ (void)setCurrentInputModeChanged;	// 0x3209845d
+ (void)setParentTestForProfiling:(id)profiling;	// 0x3212d651
+ (id)sharedInstance;	// 0x31f7ae5d
+ (CGSize)sizeForInterfaceOrientation:(int)interfaceOrientation;	// 0x31f82a69
- (id)initWithFrame:(CGRect)frame;	// 0x320518c5
- (id)UILanguagePreference;	// 0x31f9803d
- (id)_getAutocorrection;	// 0x3212d3a9
- (id)_getCurrentKeyboardName;	// 0x3212d44d
- (id)_getCurrentKeyplaneName;	// 0x3212d4ad
- (id)_getLocalizedInputMode;	// 0x3212d3ed
- (void)_handleWebKeyEvent:(GSEventRef)event withEventType:(int)eventType withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x32131b61
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString;	// 0x32131cad
- (void)_handleWebKeyEvent:(GSEventRef)event withInputString:(id)inputString withInputStringIgnoringModifiers:(id)inputStringIgnoringModifiers;	// 0x32131c29
- (BOOL)_hasCandidates;	// 0x3212d33d
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;	// 0x3212d56d
- (id)_layout;	// 0x3212d1f5
- (BOOL)_needsCandidates;	// 0x3212d249
- (int)_positionInCandidateList:(id)candidateList;	// 0x3212d299
- (void)_releaseInputManager;	// 0x3212d259
- (void)_resetInputLocation;	// 0x3212d279
- (void)_setAutocorrects:(BOOL)autocorrects;	// 0x3212d3c9
- (void)_setInputManager:(id)manager;	// 0x3212d63d
- (void)_setNeedsCandidates:(BOOL)candidates;	// 0x3212d239
- (void)_setShiftLockedEnabled:(BOOL)enabled;	// 0x3212d205
- (BOOL)_shouldMinimizeForHardwareKeyboard;	// 0x32053ef1
- (void)_updateSoundPreheatingForWindow:(id)window;	// 0x31f7bbdd
- (void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;	// 0x32058cdd
- (void)acceptAutocorrection;	// 0x32073509
- (void)acceptCandidate:(id)candidate atIndex:(unsigned)index;	// 0x3212e399
- (void)acceptCurrentCandidate;	// 0x3212e329
- (void)acceptCurrentCandidateIfSelected;	// 0x31f9e4d9
- (BOOL)acceptInputString:(id)string;	// 0x3205cb7d
- (BOOL)acceptWord:(id)word firstDelete:(unsigned)aDelete;	// 0x3206a1c5
- (void)addAutocorrectionRecord:(id)record forTyping:(id)typing;	// 0x3212fd45
- (void)addInputObject:(id)object;	// 0x3212e1e5
- (void)addInputString:(id)string;	// 0x3212ed99
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x32065b7d
- (void)addTyping:(id)typing forAutocorrection:(id)autocorrection;	// 0x320ba999
- (void)animateAutocorrection;	// 0x320b81cd
- (void)applicationResumedEventsOnly:(id)only;	// 0x3212f631
- (void)applicationSuspendedEventsOnly:(id)only;	// 0x3212f649
// declared property getter: - (id)arrowKeyHistory;	// 0x32065999
- (void)autoDeleteTimerFired:(id)fired;	// 0x321314b5
// converted property getter: - (BOOL)autocapitalizationPreference;	// 0x31f7e21d
- (id)autocorrectHistoryForInputMode:(id)inputMode;	// 0x320baab1
// converted property getter: - (id)autocorrectPrompt;	// 0x3212de89
// converted property getter: - (BOOL)autocorrectSpellingEnabled;	// 0x320b229d
- (void)autocorrectionAnimationDidStop:(id)autocorrectionAnimation finished:(id)finished context:(void *)context;	// 0x320bafc5
// converted property getter: - (BOOL)autocorrectionPreference;	// 0x31f7e2f1
- (BOOL)autocorrectionPreferenceForTraits;	// 0x31f7e2a1
- (id)autocorrectionRecordForWord:(id)word;	// 0x320c618d
// converted property getter: - (BOOL)automaticMinimizationEnabled;	// 0x32130185
- (void)callChanged;	// 0x320680c9
- (void)callChangedSelection;	// 0x32054e09
- (BOOL)callLayoutIsShiftKeyBeingHeld;	// 0x31f81199
- (BOOL)callLayoutIsShiftKeyPlaneChooser;	// 0x31f7bdc1
- (void)callLayoutLongPressAction;	// 0x3212d685
- (void)callLayoutSetAutoshift:(BOOL)autoshift;	// 0x31f82479
- (void)callLayoutSetShift:(BOOL)shift;	// 0x31f813c5
- (BOOL)callLayoutShiftKeyRequiresImmediateUpdate;	// 0x320c045d
- (void)callLayoutUpdateLocalizedKeys;	// 0x31f82501
- (void)callLayoutUpdateReturnKey;	// 0x31f7d2ed
- (BOOL)callLayoutUsesAutoShift;	// 0x31f81209
- (BOOL)callShouldDelete;	// 0x3212f199
- (BOOL)callShouldInsertText:(id)call;	// 0x3206681d
- (BOOL)canHandleKeyHitTest;	// 0x31f87d8d
- (void)cancelAllKeyEvents;	// 0x31f97649
- (id)candidateList;	// 0x3212d145
- (void)candidateListAcceptCandidate:(id)candidate;	// 0x3212e2f5
- (void)candidateListSelectionDidChange:(id)candidateListSelection;	// 0x3212e2c1
// converted property getter: - (BOOL)caretBlinks;	// 0x3212d7a1
// converted property getter: - (BOOL)caretVisible;	// 0x32063a31
// declared property getter: - (id)centerView;	// 0x3212d195
// converted property getter: - (int)changeCount;	// 0x31f7b535
// converted property getter: - (BOOL)changeNotificationDisabled;	// 0x3212d0f1
// declared property getter: - (id)changedDelegate;	// 0x31f7bf7d
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x3212de01
- (BOOL)checkSpellingPreference;	// 0x32053f79
- (void)clearAnimations;	// 0x3212e1a5
- (void)clearAutocorrectPromptTimer;	// 0x31f9eac9
- (void)clearChangeTimeAndCount;	// 0x31f7b545
- (void)clearDelegate;	// 0x3212e171
- (void)clearInput;	// 0x32051fb1
- (void)clearKeyAreas;	// 0x31f87db1
- (void)clearLayouts;	// 0x320539dd
- (void)clearLongPressTimer;	// 0x32067fbd
- (void)clearSelection;	// 0x3212d6fd
- (void)clearShiftState;	// 0x31f7bc91
- (void)clearSynchronizePreferencesTimer;	// 0x3212f581
- (void)clearTimers;	// 0x3212fecd
- (void)clearTransientState;	// 0x31f7bfd5
- (id)clientOverrideForKey:(id)key;	// 0x3212f4e1
- (id)clientVariantDelegate;	// 0x31f7e0e9
- (id)clientVariantsForKey:(id)key;	// 0x3212f531
- (CGRect)convertRectToAutocorrectRect:(CGRect)autocorrectRect delegateView:(id)view container:(id)container;	// 0x320b5661
// declared property getter: - (BOOL)currentInputModeChanged;	// 0x3212d1c5
- (BOOL)currentKeyboardTraitsAllowCandidateBar;	// 0x32073619
- (float)currentLandscapeHeight;	// 0x3212f849
- (float)currentLandscapeWidth;	// 0x3212f8ed
- (float)currentPortraitHeight;	// 0x31f82c55
- (float)currentPortraitWidth;	// 0x31f82b55
- (void)dealloc;	// 0x3212f9e5
- (void)defaultsDidChange;	// 0x31f97da9
- (void)defaultsDidChange:(id)defaults;	// 0x31f961d9
- (void)delayedInit;	// 0x32059b45
// declared property getter: - (id)delegate;	// 0x31f7c1e9
// declared property getter: - (id)delegateAsResponder;	// 0x3212f24d
// converted property getter: - (BOOL)delegateIsSMSTextView;	// 0x31f7bffd
- (BOOL)delegateSuggestionsForCurrentInput;	// 0x32132051
- (BOOL)delegateSupportsCorrectionUI;	// 0x320b44ed
- (void)deleteBackward;	// 0x3212edb1
- (void)deleteBackwardAndNotify:(BOOL)notify;	// 0x320c77fd
- (void)deleteFromInput;	// 0x3212e54d
- (void)detach;	// 0x3212fd85
- (void)dismissKeyboard;	// 0x3212d8d9
- (BOOL)displaysCandidates;	// 0x32067e0d
// converted property getter: - (BOOL)doubleSpacePeriodPreference;	// 0x31f98e39
- (void)enable;	// 0x3212f221
- (void)fadeAnimationDidStop:(id)fadeAnimation finished:(id)finished;	// 0x3212f431
- (void)fadeAutocorrectPrompt;	// 0x32131295
- (void)firstHardwareAutoRepeat:(id)repeat;	// 0x3212dac5
- (BOOL)flushKeyplaneName:(id)name;	// 0x31f86745
- (void)forceShiftUpdate;	// 0x3212ee6d
- (void)forceShiftUpdateIfKeyboardStateChanged;	// 0x3205b451
- (id)generateAutocorrectionReplacements:(id)replacements;	// 0x3212de21
- (void)generateCandidates;	// 0x3205a219
- (void)generateCandidatesWithCompletions:(BOOL)completions;	// 0x3205a231
- (void)geometryChangeDone:(BOOL)done;	// 0x3205a149
// declared property getter: - (id)geometryDelegate;	// 0x31f7af71
- (void)handleDelete;	// 0x3212edc9
- (void)handleDeleteAsRepeat:(BOOL)repeat;	// 0x3213109d
- (void)handleDeleteWithNonZeroInputCount;	// 0x3212e93d
- (void)handleDeleteWithZeroInputCount;	// 0x32130d31
- (BOOL)handleKeyCommand:(GSEventRef)command repeatOkay:(BOOL *)okay;	// 0x32064d15
- (void)handleKeyEvent:(GSEventRef)event;	// 0x32064489
- (void)handleObserverCallback;	// 0x31f88fb5
- (void)handleSpecificHardwareKeyboard:(id)keyboard;	// 0x321317a5
- (void)handleStringInput:(id)input fromVariantKey:(BOOL)variantKey;	// 0x32065ad9
- (void)hardwareAutoRepeat:(id)repeat;	// 0x3212db49
- (void)hardwareKeyboardAvailabilityChanged;	// 0x3212fbb5
// converted property getter: - (id)hardwareKeyboardsSeenPreference;	// 0x3213009d
- (BOOL)hasAutoRepeat;	// 0x3212d215
- (BOOL)hasEditableMarkedText;	// 0x32054689
- (BOOL)hasMarkedText;	// 0x32052095
- (void)hideKeyboard;	// 0x3212da41
- (id)hitTest:(CGPoint)test withEvent:(id)event;	// 0x3205abcd
// declared property getter: - (id)inputDelegate;	// 0x31f7b56d
// declared property getter: - (id)inputManager;	// 0x31f98591
- (id)inputModeFirstPreference;	// 0x3212ff7d
// converted property getter: - (id)inputModeLastChosen;	// 0x3212d0e1
- (id)inputModeLastChosenPreference;	// 0x32130131
- (id)inputModeLastUsedForLanguage:(id)language;	// 0x32130a69
- (id)inputModeLastUsedPreference;	// 0x31f9816d
- (id)inputModePreference;	// 0x31f7e3e1
- (id)inputModesLastUsedForLanguagePreference;	// 0x321300d9
- (id)inputOverlayContainer;	// 0x320b54c5
- (void)insertText:(id)text;	// 0x32066c19
- (void)installRecorder;	// 0x32053ba1
- (BOOL)isAllowedInputMode:(id)mode;	// 0x31f80629
- (BOOL)isAutoDeleteActive;	// 0x3212d50d
- (BOOL)isAutoFillMode;	// 0x320b73e1
- (BOOL)isAutoShifted;	// 0x3212d121
// converted property getter: - (BOOL)isCandidateBarShowing;	// 0x3212d155
// converted property getter: - (BOOL)isClientVariantSupportEnabled;	// 0x31f82089
- (BOOL)isDesiredInputMode:(id)mode;	// 0x31f80779
// declared property getter: - (BOOL)isDynamicDictionaryDisabled;	// 0x3212d185
// declared property getter: - (BOOL)isInHardwareKeyboardMode;	// 0x31f985a1
// converted property getter: - (BOOL)isLongPress;	// 0x3205cac5
- (BOOL)isMinimized;	// 0x3212ded1
// converted property getter: - (BOOL)isShiftLocked;	// 0x31f81809
- (BOOL)isShifted;	// 0x3212d111
- (BOOL)isValidKeyInput:(id)input;	// 0x320659d1
// declared property getter: - (BOOL)isZoomEnabled;	// 0x3212d05d
// declared property getter: - (BOOL)isZoomed;	// 0x3212d06d
- (void)keyActivated;	// 0x320c03cd
- (void)keyDeactivated;	// 0x3212d141
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift;	// 0x3205bf21
- (BOOL)keySlidIntoSwipe;	// 0x320c9981
- (id)keyboardDefaultForKey:(id)key;	// 0x3213003d
- (BOOL)keyboardRecordingEnabled;	// 0x32053bd9
- (BOOL)keyboardsExpandedPreference;	// 0x31f7e419
- (id)keyplaneNameInCurrentDelegateListForIndex:(int)index;	// 0x3212f469
- (void)layoutHasChanged;	// 0x3212f239
// declared property getter: - (id)legacyInputDelegate;	// 0x31f825a1
- (void)longPressAction;	// 0x3212dc61
// converted property getter: - (id)markedTextOverlay;	// 0x3212f129
- (void)mediaKeyDown:(GSEventRef)down;	// 0x3212d859
// declared property getter: - (unsigned)minimumTouchesForTranslation;	// 0x3212d0cd
- (void)movePhraseBoundaryToDirection:(int)direction;	// 0x3212ebd1
- (BOOL)needKeyboardsIncludeIntlPreference;	// 0x32130411
- (BOOL)needsToDeferUpdateTextCandidateView;	// 0x321311c5
- (void)newCarrierChange;	// 0x3213178d
- (BOOL)noContent;	// 0x31f7dd81
- (void)notifyShiftState;	// 0x31f812ad
// converted property getter: - (int)orientation;	// 0x3205ab3d
- (void)performClientVariantActionNamed:(id)named;	// 0x321303d1
- (BOOL)performanceLoggingPreference;	// 0x31f98efd
// declared property getter: - (CGPoint)persistentOffset;	// 0x320581f5
// converted property getter: - (unsigned)phraseBoundary;	// 0x3212ed01
- (BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;	// 0x3205a8e5
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x3205ac91
- (void)postEmptyDelegateNotificationIfNeeded;	// 0x320667d9
// declared property getter: - (BOOL)preferencesNeedSynchronization;	// 0x3212d1a5
- (void)prepareForGeometryChange;	// 0x32058d5d
- (void)prepareForSelectionChange;	// 0x3206ab19
- (void)prepareLayoutForInterfaceOrientation:(int)interfaceOrientation;	// 0x3212f371
- (void)prepareUsedKeyplaneNameListForNewDelegate;	// 0x31f7e1e1
// declared property getter: - (id)privateInputDelegate;	// 0x31f7c1c9
- (void)recomputeActiveInputModes;	// 0x3212ff5d
- (void)recomputeActiveInputModesFromList:(id)list;	// 0x31f80375
// declared property getter: - (id)recorder;	// 0x31f88665
- (void)refreshRivenPreferences;	// 0x31f7ceed
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x31f88015
- (void)releaseKeyplaneNameFromPreviousDelegateList:(id)previousDelegateList;	// 0x31f9c389
- (void)removeAutocorrectPrompt;	// 0x31f9e519
- (void)removeFromSuperview;	// 0x3212f991
- (void)replaceText:(id)text;	// 0x3212e005
- (void)retainKeyplaneNameInCurrentDelegateList:(id)currentDelegateList;	// 0x31f9c3cd
- (id)returnKeyDisplayName;	// 0x31f7d3cd
// converted property getter: - (BOOL)returnKeyEnabled;	// 0x31f7d3ad
- (int)returnKeyType;	// 0x31f7dd25
// declared property getter: - (BOOL)rivenCenterDismissPreference;	// 0x3212d09d
// declared property getter: - (BOOL)rivenCenterViewPreference;	// 0x31f7b525
// declared property getter: - (BOOL)rivenInstalled;	// 0x320588dd
// declared property getter: - (BOOL)rivenMiniPreference;	// 0x3212d08d
// declared property getter: - (BOOL)rivenPopupHammersPreference;	// 0x3205cbe5
// declared property getter: - (BOOL)rivenPreference;	// 0x31f82bf9
// declared property getter: - (unsigned)rivenSeparationStyle;	// 0x3212d0bd
// declared property getter: - (BOOL)rivenTranslationPreference;	// 0x32058461
// declared property getter: - (unsigned)rivenVisualStyle;	// 0x3212d0ad
- (void)saveInputModesPreference:(id)preference;	// 0x321306fd
- (void)scheduleReplacementsWithOptions:(unsigned)options;	// 0x3212dfa5
- (id)searchStringForMarkedText;	// 0x3212f0fd
- (void)selectionDidChange:(id)selection;	// 0x3206ac91
- (void)selectionWillChange:(id)selection;	// 0x3206aae1
- (void)setAnotherTouchWaiting:(BOOL)waiting;	// 0x3212dc2d
// declared property setter: - (void)setArrowKeyHistory:(id)history;	// 0x320659a9
// converted property setter: - (void)setAutocorrectSpellingEnabled:(BOOL)enabled;	// 0x31f7e349
- (void)setAutocorrection:(id)autocorrection;	// 0x320520bd
// converted property setter: - (void)setAutomaticMinimizationEnabled:(BOOL)enabled;	// 0x3213059d
// converted property setter: - (void)setCandidateBarShowing:(BOOL)showing;	// 0x3212deb9
- (void)setCandidates:(id)candidates;	// 0x32052255
// converted property setter: - (void)setCaretBlinks:(BOOL)blinks;	// 0x32054961
// converted property setter: - (void)setCaretVisible:(BOOL)visible;	// 0x320549bd
// declared property setter: - (void)setCenterView:(id)view;	// 0x32131e09
// converted property setter: - (void)setChangeNotificationDisabled:(BOOL)disabled;	// 0x3212d101
- (void)setChanged;	// 0x32067ee9
// declared property setter: - (void)setChangedDelegate:(id)delegate;	// 0x31f7bfad
// declared property setter: - (void)setCurrentInputModeChanged:(BOOL)changed;	// 0x3209848d
- (void)setDefaultTextInputTraits:(id)traits;	// 0x32058c61
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x31f7af81
- (void)setDelegate:(id)delegate force:(BOOL)force;	// 0x31f7af99
// declared property setter: - (void)setDynamicDictionaryDisabled:(BOOL)disabled;	// 0x3212d175
- (void)setFrame:(CGRect)frame;	// 0x32051d0d
// declared property setter: - (void)setGeometryDelegate:(id)delegate;	// 0x32053c79
// converted property setter: - (void)setHardwareKeyboardsSeenPreference:(id)preference;	// 0x32130541
// declared property setter: - (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x32064c1d
- (void)setInitialDirection;	// 0x32054a19
// declared property setter: - (void)setInputManager:(id)manager;	// 0x32053029
- (void)setInputMode:(id)mode;	// 0x31f981dd
- (void)setInputMode:(id)mode userInitiated:(BOOL)initiated;	// 0x31f981f5
- (void)setInputModeFromPreferences;	// 0x31f980b9
- (void)setInputModeLastChosenPreference;	// 0x321307b5
- (void)setInputModeLastUsedPreference;	// 0x321308b9
- (void)setInputModeToNextASCIICapableInPreferredList;	// 0x32130ced
- (void)setInputModeToNextInPreferredList;	// 0x32130c8d
- (void)setInputObject:(id)object;	// 0x32131f2d
- (void)setInputPoint:(CGPoint)point;	// 0x3205cbb1
- (void)setKeyboardDefault:(id)aDefault forKey:(id)key;	// 0x321304d1
- (void)setKeyboardsExpandedPreference;	// 0x32130625
- (void)setMarkedText;	// 0x32131ea1
- (void)setOrientationForSize:(CGSize)size;	// 0x32051d7d
// declared property setter: - (void)setPersistentOffset:(CGPoint)offset;	// 0x321301f1
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x3212ed21
// declared property setter: - (void)setPreferencesNeedSynchronization:(BOOL)synchronization;	// 0x3212d1b5
- (void)setPreviousInputString:(id)string;	// 0x32066be1
// declared property setter: - (void)setRecorder:(id)recorder;	// 0x3212d6c5
// converted property setter: - (void)setReturnKeyEnabled:(BOOL)enabled;	// 0x31f7d2b5
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x3212f0a5
- (void)setShift:(BOOL)shift;	// 0x31f7bcbd
- (void)setShift:(BOOL)shift autoshift:(BOOL)autoshift;	// 0x31f7bcd5
// converted property setter: - (void)setShiftLocked:(BOOL)locked;	// 0x3212eebd
- (void)setShiftLockedForced:(BOOL)forced;	// 0x3212ee91
- (void)setShiftNeedsUpdate;	// 0x31f7bed5
- (void)setShiftOffIfNeeded;	// 0x32067e59
- (void)setShiftPreventAutoshift:(BOOL)autoshift;	// 0x31f7bf8d
// converted property setter: - (void)setShouldChargeKeys:(BOOL)chargeKeys;	// 0x31f7d281
// declared property setter: - (void)setShouldSkipCandidateSelection:(BOOL)skipCandidateSelection;	// 0x31f840c5
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)updateCacheOnInputModesChange;	// 0x3212d0d1
// declared property setter: - (void)setShowInputModeIndicator:(BOOL)indicator;	// 0x3212d1e5
// declared property setter: - (void)setSplitProgress:(float)progress;	// 0x32130339
// declared property setter: - (void)setZoomed:(BOOL)zoomed;	// 0x3212d07d
- (BOOL)shiftLockPreference;	// 0x31f97fe5
// converted property getter: - (BOOL)shiftLockedEnabled;	// 0x3212d131
// converted property getter: - (BOOL)shouldChargeKeys;	// 0x3212d165
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned short)deletedCharacter;	// 0x3213115d
// declared property getter: - (BOOL)shouldSkipCandidateSelection;	// 0x32065ac9
- (BOOL)shouldSwitchInputMode:(id)mode;	// 0x31f80855
- (void)showCandidateBar:(BOOL)bar;	// 0x31f8806d
// declared property getter: - (BOOL)showInputModeIndicator;	// 0x3212d1d5
- (void)showKeyboard;	// 0x3212fc21
- (void)showNextCandidates;	// 0x3212e309
// declared property getter: - (float)splitProgress;	// 0x3205cbf5
- (void)startAutoDeleteTimer;	// 0x3212dc95
- (void)startCaretBlinkIfNeeded;	// 0x3212d7fd
- (void)startKeyboardRecording;	// 0x321e9f71
- (void)stopAutoDelete;	// 0x31f7ba09
- (void)stopKeyboardRecording;	// 0x321e9f09
- (void)storeDelegateConformance;	// 0x31f7b58d
- (CGRect)subtractKeyboardFrameFromRect:(CGRect)rect inView:(id)view;	// 0x3209891d
- (BOOL)suppliesCompletions;	// 0x3212ede1
// converted property getter: - (BOOL)swipeToTabPreference;	// 0x31f98ea5
- (void)synchronizePreferences;	// 0x3212ffe9
- (void)synchronizePreferencesIfNeeded;	// 0x31f7d181
- (void)takeTextInputTraitsFromDelegate;	// 0x31f7c0b1
- (void)testAutocorrectionPromptWithCorrection:(id)correction;	// 0x3212d549
- (void)textChanged:(id)changed;	// 0x3206ad41
- (void)textDidChange:(id)text;	// 0x3206ad2d
- (int)textInputChangingCount;	// 0x3212d229
- (id)textInputTraits;	// 0x31f86735
- (void)textWillChange:(id)text;	// 0x3206aab1
- (void)timeElapsed:(unsigned)elapsed message:(id)message;	// 0x3205cd15
- (void)timeMark:(unsigned)mark;	// 0x3205cbc9
- (void)timeMark:(unsigned)mark message:(id)message;	// 0x3205cad5
- (void)toggleShift;	// 0x3212eef5
- (void)touchAutoDeleteTimerWithThreshold:(double)threshold;	// 0x3212dd01
- (void)touchAutocorrectPromptTimer;	// 0x32057069
- (void)touchLongPressTimer;	// 0x3205cd85
- (void)touchLongPressTimerWithDelay:(double)delay;	// 0x3205cda1
- (void)touchSynchronizePreferencesTimer;	// 0x3212f5bd
- (void)updateAutocorrectPrompt:(id)prompt;	// 0x31f9ed41
- (void)updateAutocorrectPromptAction;	// 0x3205a5c9
- (void)updateCandidateDisplay;	// 0x31f9eb11
- (void)updateCandidateDisplayAsyncWithCandidates:(id)candidates forInputManager:(id)inputManager;	// 0x3212df05
- (void)updateChangeTimeAndIncrementCount;	// 0x32066af5
- (void)updateForChangedSelection;	// 0x31f8089d
- (void)updateFromTextInputTraits;	// 0x3212d615
- (void)updateInputManagerAutoShiftFlag;	// 0x31f82545
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)only;	// 0x32132afd
- (void)updateKeyboardEventsLagging:(GSEventRef)lagging;	// 0x32064b79
- (void)updateLayout;	// 0x31f82619
- (void)updateLayoutAndSetShift;	// 0x3212eba9
- (void)updateLayoutIfNeeded;	// 0x32058e3d
- (void)updateLayoutToCurrentInterfaceOrientation;	// 0x3212f2e9
- (void)updateObserverState;	// 0x31f7bef9
- (void)updateReturnKey;	// 0x32067ed1
- (void)updateReturnKey:(BOOL)key;	// 0x31f879b5
- (void)updateShiftState;	// 0x31f80ded
- (void)updateSplitCenterView;	// 0x3212f201
- (void)updateTextCandidateView;	// 0x32132431
- (BOOL)usesCandidateBar;	// 0x31f82d85
- (BOOL)zoomPreference;	// 0x3205398d
@end

