/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

#import "CoreMotion-Structs.h"
#import <NSObject.h> // Unknown library

@class NSOperationQueue;

@interface CMMotionManagerInternal : NSObject {
	CLAccelerometer *fAccelerometer;	// 4 = 0x4
	Dispatcher *fAccelerometerDispatcher;	// 8 = 0x8
	double fAccelerometerUpdateInterval;	// 12 = 0xc
	id fAccelerometerHandler;	// 20 = 0x14
	NSOperationQueue *fAccelerometerQueue;	// 24 = 0x18
	double fLastAccelerometerNotificationTimestamp;	// 28 = 0x1c
	bool fStartAccelerometerOnResume;	// 36 = 0x24
	CLGyro *fGyro;	// 40 = 0x28
	Dispatcher *fGyroDispatcher;	// 44 = 0x2c
	double fGyroUpdateInterval;	// 48 = 0x30
	id fGyroHandler;	// 56 = 0x38
	NSOperationQueue *fGyroQueue;	// 60 = 0x3c
	double fLastGyroNotificationTimestamp;	// 64 = 0x40
	bool fStartGyroOnResume;	// 72 = 0x48
	CLDeviceMotion *fDeviceMotion;	// 76 = 0x4c
	Dispatcher *fDeviceMotionDispatcher;	// 80 = 0x50
	double fDeviceMotionUpdateInterval;	// 84 = 0x54
	id fDeviceMotionHandler;	// 92 = 0x5c
	NSOperationQueue *fDeviceMotionQueue;	// 96 = 0x60
	double fLastDeviceMotionNotificationTimestamp;	// 100 = 0x64
	bool fStartDeviceMotionOnResume;	// 108 = 0x6c
	Dispatcher *fPrivateAccelerometerDataDispatcher;	// 112 = 0x70
	/*function-pointer*/ void *fPrivateAccelerometerDataCallback;	// 116 = 0x74
	void *fPrivateAccelerometerDataCallbackInfo;	// 120 = 0x78
	Dispatcher *fPrivateGyroDataDispatcher;	// 124 = 0x7c
	/*function-pointer*/ void *fPrivateGyroDataCallback;	// 128 = 0x80
	void *fPrivateGyroDataCallbackInfo;	// 132 = 0x84
	Dispatcher *fPrivateDeviceMotionDispatcher;	// 136 = 0x88
	/*function-pointer*/ void *fPrivateDeviceMotionCallback;	// 140 = 0x8c
	void *fPrivateDeviceMotionCallbackInfo;	// 144 = 0x90
	CLMagnetometer *fMagnetometer;	// 148 = 0x94
	Dispatcher *fMagnetometerDispatcher;	// 152 = 0x98
	double fMagnetometerUpdateInterval;	// 156 = 0x9c
	id fMagnetometerHandler;	// 164 = 0xa4
	NSOperationQueue *fMagnetometerQueue;	// 168 = 0xa8
	double fLastMagnetometerNotificationTimestamp;	// 172 = 0xac
	bool fStartMagnetometerOnResume;	// 180 = 0xb4
	bool fShowsDeviceMovementDisplay;	// 181 = 0xb5
	bool fInactive;	// 182 = 0xb6
}
- (id)initWithInfo:(id)info;	// 0x339cd8a1
- (void)dealloc;	// 0x339cd871
@end

