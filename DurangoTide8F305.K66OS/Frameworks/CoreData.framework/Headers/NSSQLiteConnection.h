/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import "NSSQLConnection.h"

@class NSMutableSet, NSString, NSMutableDictionary, NSSQLiteStatement, NSSQLEntity;

__attribute__((visibility("hidden")))
@interface NSSQLiteConnection : NSSQLConnection {
@private
	sqlite3 *_db;	// 28 = 0x1c
	sqlite3_stmt *_vmstatement;	// 32 = 0x20
	int _rowsProcessedCount;	// 36 = 0x24
	unsigned _lastEntityKey;	// 40 = 0x28
	NSString *_pathname;	// 44 = 0x2c
	NSSQLEntity *_finalEntity;	// 48 = 0x30
	NSSQLEntity *_lastEntity;	// 52 = 0x34
	sqlite3_stmt *_fetchPKStatement;	// 56 = 0x38
	sqlite3_stmt *_updatePKStatement;	// 60 = 0x3c
	NSSQLiteStatement *_beginStatement;	// 64 = 0x40
	NSSQLiteStatement *_commitStatement;	// 68 = 0x44
	NSSQLiteStatement *_rollbackStatement;	// 72 = 0x48
	NSMutableSet *_vmCachedStatements;	// 76 = 0x4c
	NSMutableDictionary *_pragmaSettings;	// 80 = 0x50
	CFDictionaryRef _cachedEntityUpdateStatements;	// 84 = 0x54
	double _timeOutOption;	// 88 = 0x58
	void *_extraBuffersForRegisteredFunctions[5];	// 96 = 0x60
	NSString *_dbPathRegisteredWithBackupd;	// 116 = 0x74
	long long _vacuumTracker;	// 120 = 0x78
	sqliteConnectionFlags _sqliteConnectionFlags;	// 128 = 0x80
}
+ (BOOL)_destroyPersistentStoreAtURL:(id)url error:(id *)error;	// 0x3434f769
+ (BOOL)_preflightDatabaseAtURL:(id)url;	// 0x342bd0b1
+ (void)_setDebugFlags:(int)flags;	// 0x3434b2b5
+ (void)initialize;	// 0x342bccd5
+ (int)readMagicWordFromFD:(int)fd;	// 0x342bd10d
- (id)initWithAdapter:(id)adapter;	// 0x342bcd15
- (id)_adapter;	// 0x342bd021
- (void)_bindVariablesWithDeletedRow:(id)deletedRow;	// 0x3434ba05
- (void)_bindVariablesWithInsertedRow:(id)insertedRow;	// 0x3434dc19
- (void)_bindVariablesWithUpdatedRow:(id)updatedRow andOriginalRow:(id)row forDeltasMask:(CFBitVectorRef)deltasMask;	// 0x3434e141
- (void **)_buffersForRegisteredFunctions;	// 0x342bd455
- (void)_clearBindVariablesForInsertedRow;	// 0x3434daf1
- (void)_clearBindVariablesForUpdateStatement:(id)updateStatement forDeltasMask:(CFBitVectorRef)deltasMask;	// 0x3434df31
- (void)_clearCachedStatements;	// 0x342d0eb1
- (void)_clearOtherStatements;	// 0x342d0f95
- (void)_clearTransactionCaches;	// 0x342d0d31
- (void)_configureAutoVacuum;	// 0x3434b41d
- (void)_configureIntegrityCheck;	// 0x342bd48d
- (void)_configurePageSize;	// 0x3434b2f9
- (void)_configurePragmaOptions;	// 0x342bd5a9
- (void)_configureSynchronousMode;	// 0x342bd465
- (void)_ensureDatabaseOpen;	// 0x3429e21d
- (void)_ensureNoFetchInProgress;	// 0x3429e269
- (void)_ensureNoStatementPrepared;	// 0x342be481
- (void)_ensureNoTransactionOpen;	// 0x3434bd85
- (void)_executeSQLString:(id)string;	// 0x342bdacd
- (void)_finalizeStatement;	// 0x342a1ca9
- (void)_forceDisconnectOnError;	// 0x3434d465
- (long long)_getCurrentAutoVacuumValue;	// 0x3434d7f1
- (BOOL)_hasTableWithName:(id)name;	// 0x3434b685
- (id)_newValueForColumn:(id)column atIndex:(unsigned)index inStatement:(sqlite3_stmt *)statement;	// 0x342bea09
- (void)_performPostSaveTasks;	// 0x3434d849
- (void)_registerExtraFunctions;	// 0x342bd155
- (int)_rowsChangedByLastExecute;	// 0x3434d7d9
- (void)_setupVacuumIfNecessary;	// 0x3434ba99
- (sqlite3_stmt *)_vmstatement;	// 0x3434b2c1
- (void)beginTransaction;	// 0x3434c835
- (void)cacheCurrentDBStatementOn:(id)on;	// 0x3434b8c9
- (void)cacheUpdateStatement:(id)statement forEntity:(id)entity andDeltasMask:(CFBitVectorRef)mask;	// 0x3434e4b1
- (id)cachedUpdateStatementForEntity:(id)entity andDeltasMask:(CFBitVectorRef)mask;	// 0x3434d441
- (BOOL)canConnect;	// 0x342bcfb1
- (void)commitTransaction;	// 0x3434d665
- (void)connect;	// 0x34296aa1
- (BOOL)databaseIsEmpty;	// 0x342bd041
- (void)dealloc;	// 0x342d110d
- (void)deleteCorrelation:(id)correlation;	// 0x3434b92d
- (void)deleteRow:(id)row;	// 0x3434bec1
- (id)describeResults;	// 0x3434b90d
- (void)disconnect;	// 0x342d0be1
- (void)endFetch;	// 0x3429fac9
- (void)endPrimaryKeyGeneration;	// 0x3434b639
- (void)execute;	// 0x3429e2e1
- (long long)fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x3434c5ad
- (int)fetchResultSet:(void *)set usingFetchPlan:(void *)plan;	// 0x3429f1dd
- (id)fetchTableCreationSQL;	// 0x3434f1d5
- (id)fetchTableNames;	// 0x3434f4c1
- (void)finalize;	// 0x3434bc8d
- (long long)generatePrimaryKeysForEntity:(id)entity batch:(unsigned)batch;	// 0x3434e649
- (void)handleCorruptedDB:(id)db;	// 0x3434bdd9
- (BOOL)hasMetadataTable;	// 0x3434b661
- (BOOL)hasPrimaryKeyTable;	// 0x3434b615
- (void)insertCorrelation:(id)correlation;	// 0x3434b999
- (void)insertRow:(id)row;	// 0x3434c3c1
- (BOOL)isFetchInProgress;	// 0x3429db69
- (BOOL)isOpen;	// 0x3429dbd9
- (id)newFetchedArray;	// 0x342be8c9
- (BOOL)performIntegrityCheck;	// 0x3434ee45
- (void)prepareForPrimaryKeyGeneration;	// 0x3434b64d
- (void)prepareSQLStatement:(id)statement;	// 0x3429dc39
- (CFArrayRef)rawIntegerRowsForSQL:(id)sql;	// 0x3434c929
- (void)releaseSQLStatement;	// 0x342a1c6d
- (void)resetSQLStatement;	// 0x3434e5fd
- (void)rollbackTransaction;	// 0x3434d4f5
- (void)setExclusiveLockingMode:(BOOL)mode;	// 0x3434b7d9
- (void)updateRow:(id)row;	// 0x3434c0e5
- (void)willCreateSchema;	// 0x3434b2d1
@end

