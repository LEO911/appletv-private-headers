/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/BackRow.framework/BackRow
 */

#import "BackRow-Structs.h"
#import "BRControl.h"
#import "BRApplianceBrowserProtocol.h"

@class BRApplianceProvider, BRScrollControl, BRApplianceCategoryListProvider, BRTopShelfView, BRImageControl, NSDate, BRImage, BRCursorControl, NSMutableDictionary, NSArray, NSTimer, BRListView;
@protocol BRAppliance;

__attribute__((visibility("hidden")))
@interface BRMainMenuControl : BRControl <BRApplianceBrowserProtocol> {
@private
	int _focusState;	// 44 = 0x2c
	BRApplianceProvider *_applianceProvider;	// 48 = 0x30
	id<BRAppliance> _currentAppliance;	// 52 = 0x34
	NSArray *_columns;	// 56 = 0x38
	long _activeColumn;	// 60 = 0x3c
	float _columnScrollAdjustment;	// 64 = 0x40
	long _curPreviewedColumn;	// 68 = 0x44
	long _oldPreviewedColumn;	// 72 = 0x48
	BRTopShelfView *_curPreview;	// 76 = 0x4c
	BRTopShelfView *_oldPreview;	// 80 = 0x50
	NSTimer *_previewTimer;	// 84 = 0x54
	BRImageControl *_logo;	// 88 = 0x58
	BRImageControl *_backgroundImgControl;	// 92 = 0x5c
	BRImageControl *_barGlow;	// 96 = 0x60
	BRImage *_barGlowActiveImage;	// 100 = 0x64
	BRImage *_barGlowInactiveImage;	// 104 = 0x68
	BRControl *_topDivider;	// 108 = 0x6c
	BRControl *_bottomDivider;	// 112 = 0x70
	BRControl *_leftColumnFade;	// 116 = 0x74
	BRControl *_rightColumnFade;	// 120 = 0x78
	BRCursorControl *_cursor;	// 124 = 0x7c
	BRScrollControl *_categoryScroller;	// 128 = 0x80
	BRListView *_categoryList;	// 132 = 0x84
	BRApplianceCategoryListProvider *_categoryListProvider;	// 136 = 0x88
	NSTimer *_menuTimer;	// 140 = 0x8c
	NSDate *_menuTriggerTime;	// 144 = 0x90
	NSMutableDictionary *_remembery;	// 148 = 0x94
	BOOL _createCategoryList;	// 152 = 0x98
	BOOL _isLoaded;	// 153 = 0x99
	id _datasource;	// 156 = 0x9c
	id _delegate;	// 160 = 0xa0
}
@property(readonly, assign) id<BRAppliance> currentAppliance;	// G=0x329e7db1; @synthesize=_currentAppliance
@property(readonly, assign) long currentApplianceIndex;	// G=0x329e7da1; @synthesize=_activeColumn
@property(assign) id datasource;	// G=0x329e7de1; S=0x329e7df1; @synthesize=_datasource
@property(assign) id delegate;	// G=0x329e7dc1; S=0x329e7dd1; @synthesize=_delegate
+ (id)_categoryTextAttributes;	// 0x329eb309
- (id)init;	// 0x329eaf05
- (BOOL)_activateColumnIndex:(long)index;	// 0x329e9071
- (void)_applianceProviderChanged:(id)changed;	// 0x329e80c9
- (float)_calculateLongestStringForColumn:(long)column;	// 0x329eb191
- (id)_categoryListActions;	// 0x329e8391
- (void)_categoryListChanged:(id)changed;	// 0x329e844d
- (id)_categoryListSlowActions;	// 0x329e82f5
- (void)_categoryListTimerFired:(id)fired;	// 0x329e8765
- (BOOL)_categorySelected:(id)selected;	// 0x329e92d5
- (void)_createCategoryList;	// 0x329e8499
- (id)_currentApplianceKey;	// 0x329e93e9
- (id)_currentCategoryIdentifier;	// 0x329e9379
- (void)_expandAndCollapseShelves;	// 0x329e88c1
- (long)_focusedCategoryIndex;	// 0x329e842d
- (BOOL)_handleEventInMenuFocusedState:(id)menuFocusedState;	// 0x329e8db5
- (BOOL)_handleEventInMenuUnocusedState:(id)menuUnocusedState;	// 0x329e7e01
- (BOOL)_handleEventInShelfFocusedState:(id)shelfFocusedState;	// 0x329e8d45
- (void)_hideCategoryList;	// 0x329e8789
- (void)_highlightDefaultCategory;	// 0x329e81cd
- (BOOL)_isCategoryListActive;	// 0x329e82c1
- (void)_languageChanged:(id)changed;	// 0x329e8111
- (id)_leftFadeFilters;	// 0x329eb6b9
- (BOOL)_previewColumnAtIndex:(long)index;	// 0x329e8a79
- (void)_previewTimerFired:(id)fired;	// 0x329e8a49
- (void)_reload;	// 0x329e9755
- (void)_removeCategoryList;	// 0x329e86d9
- (id)_rightFadeFilters;	// 0x329eb5bd
- (void)_showCategoryList;	// 0x329e87d1
- (void)_unload;	// 0x329e9621
- (void)_updateAppliance;	// 0x329e9429
- (void)_updateCategoryList;	// 0x329eaebd
- (void)_updateCategoryListAfterDelay:(double)delay;	// 0x329eada5
- (void)_updateCategoryProvider;	// 0x329e8819
- (void)_updateCategoryRemembery;	// 0x329e8279
- (void)_updatePreviewAfterDelay:(double)delay;	// 0x329e89d1
- (void)_windowBoundsChanged:(id)changed;	// 0x329e9299
- (id)accessibilityLabel;	// 0x329ea239
- (id)accessibilityScreenContent;	// 0x329e819d
- (id)actionForCurrentSelection;	// 0x329eaae1
- (BOOL)brEventAction:(id)action;	// 0x329ea3cd
- (void)clearRemembery;	// 0x329ea8f5
- (void)controlWasActivated;	// 0x329ea321
- (void)controlWasDeactivated;	// 0x329ea2e5
- (id)controllerForCurrentSelection;	// 0x329eab51
- (BOOL)controllerMatchesCurrentSelection:(id)selection;	// 0x329ea915
// declared property getter: - (id)currentAppliance;	// 0x329e7db1
// declared property getter: - (long)currentApplianceIndex;	// 0x329e7da1
// declared property getter: - (id)datasource;	// 0x329e7de1
- (void)dealloc;	// 0x329eabb9
// declared property getter: - (id)delegate;	// 0x329e7dc1
- (id)focusedControlForEvent:(id)event focusPoint:(CGPoint *)point;	// 0x329ea3b9
- (void)highlightApplianceWithKey:(id)key andCategoryWithIdentifier:(id)identifier;	// 0x329ea9cd
- (void)highlightItemsForController:(id)controller;	// 0x329eaa85
- (BOOL)isAccessibilityElement;	// 0x329ea2a5
- (void)layoutSubcontrols;	// 0x329eb7b5
- (float)list:(id)list heightForItemAtIndexPath:(id)indexPath;	// 0x329eb2f5
- (void)reloadTopShelf;	// 0x329ea8d5
// declared property setter: - (void)setDatasource:(id)datasource;	// 0x329e7df1
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x329e7dd1
- (BOOL)setMenuFocusState:(int)state;	// 0x329ea571
- (CGSize)sizeThatFits:(CGSize)fits;	// 0x329eb165
@end

