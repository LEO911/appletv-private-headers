/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, NSArray, ML3CacheGenerator, ML3MusicLibrary_SQLiteDatabaseContext, ML3Container;

@interface ML3MusicLibrary : NSObject {
@private
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 4 = 0x4
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 8 = 0x8
	dispatch_queue_s *_backgroundQueue;	// 12 = 0xc
	NSString *_path;	// 16 = 0x10
	NSString *_notifyName;	// 20 = 0x14
	NSString *_nonContentsNotifyName;	// 24 = 0x18
	int _notifyToken;	// 28 = 0x1c
	int _nonContentsNotifyToken;	// 32 = 0x20
	int _downloadFinishedNotifyToken;	// 36 = 0x24
	BOOL _enableWrites;	// 40 = 0x28
	BOOL _hasEverConnectedToDatabase;	// 41 = 0x29
	id _revertToBackupObserver;	// 44 = 0x2c
	id _mcSettingsObserver;	// 48 = 0x30
}
@property(readonly, assign) ML3CacheGenerator *cacheGenerator;	// G=0x333de161; 
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x333b606d; @synthesize=_hasEverConnectedToDatabase
@property(readonly, copy) NSArray *localizedSectionIndexTitles;	// G=0x333af5fd; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x333aeec9; 
@property(readonly, copy) NSString *path;	// G=0x333e21e1; @synthesize=_path
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x333bb4ad; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x333bb521; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x333df505; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x333aa675; 
@property(readonly, assign) BOOL requiresiTunesCommandsProcessing;	// G=0x333aa6b1; 
@property(readonly, assign, nonatomic) unsigned long long syncGenerationID;	// G=0x333b5ea9; 
+ (void)attachAuxiliaryDatabases:(sqlite3 *)databases;	// 0x333a8725
+ (void)buildDatabaseFromHomeSharingConnection:(id)homeSharingConnection atPath:(id)path completionHandler:(id)handler;	// 0x333eefb1
+ (void)buildDatabaseFromHomeSharingConnection:(id)homeSharingConnection atPath:(id)path completionHandler:(id)handler progressHandler:(id)handler4;	// 0x333f31b1
+ (void)buildDatabaseTablesUsingHandle:(sqlite3 *)handle;	// 0x333f2a5d
+ (void)closeDatabaseHandle:(sqlite3 *)handle;	// 0x333e21f9
+ (BOOL)createContainerTriggersUsingHandle:(sqlite3 *)handle;	// 0x333f46b5
+ (BOOL)createItemTriggersUsingHandle:(sqlite3 *)handle;	// 0x333f57dd
+ (void)createTriggersUsingHandle:(sqlite3 *)handle;	// 0x333f45f5
+ (BOOL)dropOldContainerTriggersUsingHandle:(sqlite3 *)handle;	// 0x333f475d
+ (BOOL)dropOldItemTriggersUsingHandle:(sqlite3 *)handle;	// 0x333f4799
+ (void)dropOldTriggersUsingHandle:(sqlite3 *)handle;	// 0x333f470d
+ (void)ensureIndexExists:(id)exists onHandle:(sqlite3 *)handle entityClass:(Class)aClass indexableSQL:(id)sql;	// 0x333deee5
+ (void)ensureIndexExists:(id)exists onHandle:(sqlite3 *)handle entityClass:(Class)aClass properties:(id)properties;	// 0x333dee41
+ (void)ensureIndicesExistOnHandle:(sqlite3 *)handle;	// 0x333de591
+ (void)ensureSectionAndListIndicesExist:(id)exist onHandle:(sqlite3 *)handle entityClass:(Class)aClass filteredProperties:(id)properties sectionProperties:(id)properties5 orderingProperties:(id)properties6 representativeItemProperty:(id)property;	// 0x333ded51
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x333dec15
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x333a87d9
+ (BOOL)executeUsingHandle:(sqlite3 *)handle eachSQL:(id)sql;	// 0x333f56e5
+ (BOOL)importationEnabled;	// 0x333ddf39
+ (void)initialize;	// 0x333a6509
+ (void)limitCacheSize:(sqlite3 *)size;	// 0x333a99d9
+ (id)mainLibraryPath;	// 0x333a6bb9
+ (void)mediaFolderPathDidChangeNotification:(id)mediaFolderPath;	// 0x333df151
+ (void)prepareStatementForSQL:(id)sql usingHandle:(sqlite3 *)handle block:(id)block;	// 0x333e2231
+ (void)registerCustomCallbacksOnHandle:(sqlite3 *)handle;	// 0x333a99f9
+ (void)registerFunctionsOnHandle:(sqlite3 *)handle;	// 0x333a9a0d
+ (id)selectStatementValueForSQL:(id)sql defaultValue:(id)value usingHandle:(sqlite3 *)handle;	// 0x333f4b85
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x333a71d5
+ (id)sharedLibrary;	// 0x333a7739
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x333b7b25
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x333aa5a5
+ (void)stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x333aa5d1
+ (CFDictionaryRef)threadLocalCFMutableDictionaryForKey:(id)key withValueCallbacks:(const XXStruct_MSEYlC *)valueCallbacks;	// 0x333df235
+ (BOOL)updateSortMapOnHandle:(sqlite3 *)handle;	// 0x333e24ed
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x333a67f1
- (void)_debugLoggingOptionsDidChangeNotification:(id)_debugLoggingOptions;	// 0x333e043d
- (int)_executediTunesCommandsVersion;	// 0x333aa6cd
- (BOOL)_mustProcessLanguageChange;	// 0x333aa7b1
- (BOOL)_schemaHasDefinedTable:(id)table;	// 0x333f4c65
- (void)accessDatabaseContextUsingBlock:(id)block;	// 0x333a7791
- (void)accessSortKeyBuilder:(id)builder;	// 0x333afce1
- (long long)addStringToSortMap:(id)sortMap;	// 0x333df98d
- (id)backgroundQueue_backgroundDatabaseContext;	// 0x333af559
// declared property getter: - (id)cacheGenerator;	// 0x333de161
- (BOOL)canWriteToDatabase;	// 0x333ddf3d
- (void)checkForChangesOnConnection:(id)changesOnConnection completionHandler:(id)handler;	// 0x333efe89
- (void)createTriggers;	// 0x333de019
- (void)dealloc;	// 0x333e0245
- (void)dropOldTriggers;	// 0x333ddf8d
- (void)ensureIndicesExist;	// 0x333de505
- (id)entityForClass:(Class)aClass persistentID:(long long)anId;	// 0x333def95
- (void)executeITDBPostProcessing;	// 0x333f4f51
- (BOOL)executeITunesCommands;	// 0x333f5129
- (BOOL)executeSQL:(id)sql;	// 0x333dfbc5
- (void)fillContainerForHomeSharingConnection:(id)homeSharingConnection containerID:(long long)anId completionHandler:(id)handler;	// 0x333eefdd
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x333b606d
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x333e05cd
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x333afbad
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x333af5fd
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x333aeec9
- (id)newDatabaseContext;	// 0x333a7875
- (void)notifyContentsDidChange;	// 0x333b8145
- (void)notifyNonContentsPropertyDidChange;	// 0x333bb8b9
- (int)openDatabaseHandle:(sqlite3 **)handle;	// 0x333a78c1
// declared property getter: - (id)path;	// 0x333e21e1
- (void)performOperationInBackground:(id)background;	// 0x333e0e55
- (void)performTransactionWithBlock:(id)block;	// 0x333af4ed
- (void)populateStaticItemsOfDynamicContainers;	// 0x333de4b5
- (void)postChangeNotificationAndScheduleFlush;	// 0x333b8231
- (void)postNonContentsChangeNotificationAndScheduleFlush;	// 0x333bb905
// declared property getter: - (id)preferredAudioTracks;	// 0x333bb4ad
// declared property getter: - (id)preferredSubtitleTracks;	// 0x333bb521
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x333a7745
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x333df505
- (void)reconnectToDatabase;	// 0x333e0ea1
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x333aa675
// declared property getter: - (BOOL)requiresiTunesCommandsProcessing;	// 0x333aa6b1
- (void)savePlaylists;	// 0x333de0a5
- (void)saveTrackMetadata;	// 0x333e15cd
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x333afd91
- (id)selectStatementValueForSQL:(id)sql defaultValue:(id)value;	// 0x333b52b5
// declared property getter: - (unsigned long long)syncGenerationID;	// 0x333b5ea9
- (void)updateActivePlaylistNamesForCurrentLanguage;	// 0x333f494d
- (void)updateOrderingLanguagesForCurrentLangauge;	// 0x333f5621
- (BOOL)updateSortMap;	// 0x333df6dd
@end

