/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "MRLoadable.h"
#import "ATVSlideshow-Structs.h"
#import "MRRenderable.h"
#import <NSObject.h> // Unknown library

@class MRProviderPreloadOperation, MRAsset, NSDictionary, NSString, MRImage;

@interface MRImageProvider : NSObject <MRLoadable, MRRenderable> {
	NSString *mAssetPath;	// 4 = 0x4
	MRAsset *mAsset;	// 8 = 0x8
	CGSize mDefaultSize;	// 12 = 0xc
	NSString *mImageSizeScript;	// 20 = 0x14
	NSDictionary *mEffectAttributes;	// 24 = 0x18
	MRProviderPreloadOperation *mPreloadOperation;	// 28 = 0x1c
	MRImage *mOriginalImage;	// 32 = 0x20
	CGSize mOriginalImageSize;	// 36 = 0x24
	BOOL mIsLoaded;	// 44 = 0x2c
	CGSize mRequestedSize;	// 48 = 0x30
	double mShowTime;	// 56 = 0x38
	double mShowDuration;	// 64 = 0x40
	CGSize mLastImageSize;	// 72 = 0x48
	double mLastTime;	// 80 = 0x50
	CGSize mLastDaSize;	// 88 = 0x58
	BOOL mNeedsToUpdate;	// 96 = 0x60
	BOOL mIsMonochromatic;	// 97 = 0x61
	BOOL mUseMipmapping;	// 98 = 0x62
	BOOL mUsePowerOfTwo;	// 99 = 0x63
	BOOL mIsCleanedUp;	// 100 = 0x64
}
@property(copy, nonatomic) NSString *assetPath;	// G=0x332d603d; S=0x332d4d05; @synthesize=mAssetPath
@property(assign, nonatomic) CGSize defaultSize;	// G=0x332d5f11; S=0x332d4961; @synthesize=mDefaultSize
@property(retain, nonatomic) NSDictionary *effectAttributes;	// G=0x332d5f39; S=0x332d4a85; @synthesize=mEffectAttributes
@property(readonly, assign) float imageAspectRatio;	// G=0x332d49e1; 
@property(copy, nonatomic) NSString *imageSizeScript;	// G=0x332d5f29; S=0x332d49fd; @synthesize=mImageSizeScript
@property(readonly, assign) BOOL isAlphaFriendly;	// G=0x332d5579; 
@property(readonly, assign) BOOL isInfinite;	// G=0x332d557d; 
@property(readonly, assign) BOOL isLoaded;	// G=0x332d5f49; @synthesize=mIsLoaded
@property(assign) BOOL isMonochromatic;	// G=0x332d5f59; S=0x332d5f69; @synthesize=mIsMonochromatic
@property(readonly, assign) BOOL isNative3D;	// G=0x332d5571; 
@property(readonly, assign) BOOL isOpaque;	// G=0x332d5575; 
@property(assign) CGSize originalImageSize;	// G=0x332d604d; S=0x332d6071; @synthesize=mOriginalImageSize
@property(readonly, assign) CGSize requestedSize;	// G=0x332d6019; @synthesize=mRequestedSize
@property(assign) double showDuration;	// G=0x332d5fe9; S=0x332d6001; @synthesize=mShowDuration
@property(assign) double showTime;	// G=0x332d5fb9; S=0x332d5fd1; @synthesize=mShowTime
@property(assign) BOOL useMipmapping;	// G=0x332d5f79; S=0x332d5f89; @synthesize=mUseMipmapping
@property(assign) BOOL usePowerOfTwo;	// G=0x332d5f99; S=0x332d5fa9; @synthesize=mUsePowerOfTwo
- (id)init;	// 0x332d46dd
// declared property getter: - (id)assetPath;	// 0x332d603d
- (void)cancelLoading;	// 0x332d5465
- (void)cleanup;	// 0x332d47c9
- (void)dealloc;	// 0x332d4749
// declared property getter: - (CGSize)defaultSize;	// 0x332d5f11
// declared property getter: - (id)effectAttributes;	// 0x332d5f39
- (void)finalize;	// 0x332d4789
// declared property getter: - (float)imageAspectRatio;	// 0x332d49e1
- (CGSize)imageSizeForAspectRatio:(float)aspectRatio;	// 0x332d4af5
// declared property getter: - (id)imageSizeScript;	// 0x332d5f29
// declared property getter: - (BOOL)isAlphaFriendly;	// 0x332d5579
// declared property getter: - (BOOL)isInfinite;	// 0x332d557d
// declared property getter: - (BOOL)isLoaded;	// 0x332d5f49
- (BOOL)isLoadedForTime:(double)time;	// 0x332d4dd9
// declared property getter: - (BOOL)isMonochromatic;	// 0x332d5f59
// declared property getter: - (BOOL)isNative3D;	// 0x332d5571
// declared property getter: - (BOOL)isOpaque;	// 0x332d5575
- (void)loadForTime:(double)time inContext:(id)context withArguments:(id)arguments now:(BOOL)now;	// 0x332d4de9
- (void)loadWithArguments:(id)arguments;	// 0x332d5051
// declared property getter: - (CGSize)originalImageSize;	// 0x332d604d
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332d5e09
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332d5581
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332d5769
// declared property getter: - (CGSize)requestedSize;	// 0x332d6019
- (id)retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332d577d
// declared property setter: - (void)setAssetPath:(id)path;	// 0x332d4d05
// declared property setter: - (void)setDefaultSize:(CGSize)size;	// 0x332d4961
// declared property setter: - (void)setEffectAttributes:(id)attributes;	// 0x332d4a85
// declared property setter: - (void)setImageSizeScript:(id)script;	// 0x332d49fd
// declared property setter: - (void)setIsMonochromatic:(BOOL)monochromatic;	// 0x332d5f69
// declared property setter: - (void)setOriginalImageSize:(CGSize)size;	// 0x332d6071
// declared property setter: - (void)setShowDuration:(double)duration;	// 0x332d6001
// declared property setter: - (void)setShowTime:(double)time;	// 0x332d5fd1
// declared property setter: - (void)setUseMipmapping:(BOOL)mipmapping;	// 0x332d5f89
// declared property setter: - (void)setUsePowerOfTwo:(BOOL)two;	// 0x332d5fa9
// declared property getter: - (double)showDuration;	// 0x332d5fe9
// declared property getter: - (double)showTime;	// 0x332d5fb9
- (void)unload;	// 0x332d52e9
// declared property getter: - (BOOL)useMipmapping;	// 0x332d5f79
// declared property getter: - (BOOL)usePowerOfTwo;	// 0x332d5f99
@end

