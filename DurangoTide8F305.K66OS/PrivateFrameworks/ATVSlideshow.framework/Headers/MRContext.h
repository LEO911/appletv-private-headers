/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import <NSObject.h> // Unknown library

@class EAGLContext, MRShader, MRImage, MRImageManager, NSMutableDictionary;
@protocol MediaManagementProtocol;

@interface MRContext : NSObject {
	MRContext *mBaseContext;	// 4 = 0x4
	EAGLContext *mGLContext;	// 8 = 0x8
	CGSize mPixelSize;	// 12 = 0xc
	int mVRAM;	// 20 = 0x14
	float mFieldOfViewFactor;	// 24 = 0x18
	float mProjectionMatrix[16];	// 28 = 0x1c
	id<MediaManagementProtocol> mAssetManager;	// 92 = 0x5c
	MRImageManager *mImageManager;	// 96 = 0x60
	BOOL mIsLocalContext;	// 100 = 0x64
	BOOL mIsFlipped;	// 101 = 0x65
	BOOL mBlendingIsEnabled;	// 102 = 0x66
	int mBlendingType;	// 104 = 0x68
	BOOL mCullingIsEnabled;	// 108 = 0x6c
	BOOL mCullFrontfacing;	// 109 = 0x6d
	BOOL mDepthTestIsEnabled;	// 110 = 0x6e
	BOOL mIsUsingIntelGPU;	// 111 = 0x6f
	BOOL mIsUsingIntelGMA950;	// 112 = 0x70
	BOOL mPrefersSharedVRAM;	// 113 = 0x71
	BOOL mSupportsFragmentShaders;	// 114 = 0x72
	float mModelViewMatrix[16];	// 116 = 0x74
	float mTextureMatrix[4][16];	// 180 = 0xb4
	int mScissorRect[4];	// 436 = 0x1b4
	int mModelViewProjectionMatrixIndex;	// 452 = 0x1c4
	int mTextureMatrixIndex[4];	// 456 = 0x1c8
	const float *mVertexPointer;	// 472 = 0x1d8
	int mVertexIndex;	// 476 = 0x1dc
	const float *mColorsPointer;	// 480 = 0x1e0
	int mForeColorAsAttributeIndex;	// 484 = 0x1e4
	int mForeColorAsUniformIndex;	// 488 = 0x1e8
	const float *mNormalsPointer;	// 492 = 0x1ec
	int mNormalIndex;	// 496 = 0x1f0
	float *mTextureCoordinatesPointer[4];	// 500 = 0x1f4
	int mTextureCoordinatesIndex[4];	// 516 = 0x204
	const float *mInSpriteCoordinatesPointer;	// 532 = 0x214
	int mInSpriteCoordinatesIndex;	// 536 = 0x218
	BOOL mVertexArrayIsEnabled;	// 540 = 0x21c
	BOOL mForeColorArrayIsEnabled;	// 541 = 0x21d
	BOOL mNormalArrayIsEnabled;	// 542 = 0x21e
	BOOL mTextureCoordinatesArrayIsEnabled[4];	// 543 = 0x21f
	BOOL mInSpriteCoordinatesArrayIsEnabled;	// 547 = 0x223
	NSMutableDictionary *mVertexAttributes;	// 548 = 0x224
	float mLocalAspectRatio;	// 552 = 0x228
	float mForeColor[4];	// 556 = 0x22c
	float mBackColor[4];	// 572 = 0x23c
	MRShader *mCurrentShader;	// 588 = 0x24c
	MRImage *mTextureUnitImages[4];	// 592 = 0x250
	int mTextureUnitUsedForFragmentCoordinates;	// 608 = 0x260
	MRImage *mBlackImage;	// 612 = 0x264
}
@property(readonly, assign) float aspectRatio;	// G=0x3327bbc9; 
@property(retain) id<MediaManagementProtocol> assetManager;	// G=0x3327e679; S=0x3327e691; @synthesize=mAssetManager
@property(readonly, assign) const float *backColor;	// G=0x3327c805; 
@property(readonly, assign) MRContext *baseContext;	// G=0x3327e669; @synthesize=mBaseContext
@property(readonly, assign) CGColorSpaceRef colorSpace;	// G=0x3327bbe5; 
@property(readonly, assign) const float *foreColor;	// G=0x3327c32d; 
@property(readonly, assign) EAGLContext *glContext;	// G=0x3327e761; @synthesize=mGLContext
@property(readonly, assign) MRImageManager *imageManager;	// G=0x3327e6b9; @synthesize=mImageManager
@property(readonly, assign) BOOL isDoubleBuffered;	// G=0x3327bc2d; 
@property(assign) BOOL isFlipped;	// G=0x3327e701; S=0x3327e711; @synthesize=mIsFlipped
@property(readonly, assign) BOOL isUsingIntelGMA950;	// G=0x3327e741; @synthesize=mIsUsingIntelGMA950
@property(readonly, assign) BOOL isUsingIntelGPU;	// G=0x3327e731; @synthesize=mIsUsingIntelGPU
@property(assign) float localAspectRatio;	// G=0x3327e6e1; S=0x3327e6f1; @synthesize=mLocalAspectRatio
@property(readonly, assign) unsigned long maxDimension;	// G=0x3327bc35; 
@property(readonly, assign) const float *modelViewMatrix;	// G=0x3327d949; 
@property(readonly, assign) CGColorSpaceRef monochromaticColorSpace;	// G=0x3327bc09; 
@property(assign, nonatomic) CGSize pixelSize;	// G=0x3327e6c9; S=0x3327b909; @synthesize=mPixelSize
@property(readonly, assign) BOOL prefersSharedVRAM;	// G=0x3327e751; @synthesize=mPrefersSharedVRAM
@property(readonly, assign) const float *projectionMatrix;	// G=0x3327d939; 
@property(readonly, assign) CGSize size;	// G=0x3327bb75; 
@property(readonly, assign) BOOL supportsFragmentShaders;	// G=0x3327e721; @synthesize=mSupportsFragmentShaders
@property(readonly, assign) unsigned virtualScreen;	// G=0x3327bc31; 
@property(readonly, assign) int vram;	// G=0x3327e771; @synthesize=mVRAM
- (id)initLocalWithContext:(id)context glContext:(id)context2 andSize:(CGSize)size;	// 0x3327b4ad
- (id)initWithEAGLContext:(id)eaglcontext andAssetManager:(id)manager;	// 0x3327b245
- (void)_applyForeColor;	// 0x3327c33d
// declared property getter: - (float)aspectRatio;	// 0x3327bbc9
// declared property getter: - (id)assetManager;	// 0x3327e679
// declared property getter: - (const float *)backColor;	// 0x3327c805
// declared property getter: - (id)baseContext;	// 0x3327e669
- (id)beginLocalContextWithSize:(CGSize)size backgroundColor:(const float *)color state:(XXStruct_vue6hD *)state;	// 0x3327bc81
- (void)blend:(int)blend;	// 0x3327c011
- (void)cleanup;	// 0x3327b81d
- (void)clear:(int)clear;	// 0x3327c191
// declared property getter: - (CGColorSpaceRef)colorSpace;	// 0x3327bbe5
- (BOOL)commitShaderChange;	// 0x3327cc59
- (void)composeForeColor:(const float *)color saveTo:(float *)to;	// 0x3327c62d
- (void)composeForeColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x3327c709
- (void)composeModelViewMatrix:(float [16])matrix saveTo:(float *)to;	// 0x3327da75
- (void)cull:(int)cull;	// 0x3327c0cd
- (void)dealloc;	// 0x3327b79d
- (void)depthTest:(BOOL)test;	// 0x3327c145
- (void)drawTriangleStripFromOffset:(unsigned)offset count:(unsigned)count;	// 0x3327e5bd
- (void)drawTrianglesFromOffset:(unsigned)offset count:(unsigned)count;	// 0x3327e601
- (void)finalize;	// 0x3327b7dd
- (void)flush;	// 0x3327bc3d
// declared property getter: - (const float *)foreColor;	// 0x3327c32d
// declared property getter: - (id)glContext;	// 0x3327e761
// declared property getter: - (id)imageManager;	// 0x3327e6b9
// declared property getter: - (BOOL)isDoubleBuffered;	// 0x3327bc2d
// declared property getter: - (BOOL)isFlipped;	// 0x3327e701
// declared property getter: - (BOOL)isUsingIntelGMA950;	// 0x3327e741
// declared property getter: - (BOOL)isUsingIntelGPU;	// 0x3327e731
// declared property getter: - (float)localAspectRatio;	// 0x3327e6e1
- (void)lock;	// 0x3327b901
// declared property getter: - (unsigned long)maxDimension;	// 0x3327bc35
// declared property getter: - (const float *)modelViewMatrix;	// 0x3327d949
// declared property getter: - (CGColorSpaceRef)monochromaticColorSpace;	// 0x3327bc09
// declared property getter: - (CGSize)pixelSize;	// 0x3327e6c9
// declared property getter: - (BOOL)prefersSharedVRAM;	// 0x3327e751
// declared property getter: - (const float *)projectionMatrix;	// 0x3327d939
- (void)purgeResources:(BOOL)resources;	// 0x3327bc61
- (void)restoreBackColor:(const float *)color;	// 0x3327c999
- (void)restoreForeColor:(const float *)color;	// 0x3327c7ed
- (void)restoreModelViewMatrix:(float [16])matrix;	// 0x3327dab9
- (void)restoreScissorRect:(const int *)rect;	// 0x3327c315
- (void)resyncState;	// 0x3327bed9
- (id)retainedByUserBlackImage;	// 0x3327bff1
- (id)retainedByUserImageByEndingLocalContext:(id)context andRestoreState:(const XXStruct_vue6hD *)state;	// 0x3327be19
// declared property setter: - (void)setAssetManager:(id)manager;	// 0x3327e691
- (void)setBackColor:(const float *)color saveTo:(float *)to;	// 0x3327c815
- (void)setBackColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x3327c8d9
- (void)setColorsPointer:(const float *)pointer;	// 0x3327def5
- (void)setForeColor:(const float *)color saveTo:(float *)to;	// 0x3327c4ad
- (void)setForeColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha saveTo:(float *)to;	// 0x3327c569
- (void)setImage:(id)image onTextureUnit:(unsigned)unit withReferenceAspectRatio:(float)referenceAspectRatio state:(XXStruct_S04vsC *)state;	// 0x3327c9b1
- (void)setInSpriteCoordinatesPointer:(const float *)spriteCoordinatesPointer;	// 0x3327e0cd
// declared property setter: - (void)setIsFlipped:(BOOL)flipped;	// 0x3327e711
// declared property setter: - (void)setLocalAspectRatio:(float)ratio;	// 0x3327e6f1
- (void)setModelViewMatrix:(float [16])matrix saveTo:(float *)to;	// 0x3327d959
- (void)setNormal:(float)normal :(float)arg2 :(float)arg3;	// 0x3327dad1
- (void)setNormalsPointer:(const float *)pointer;	// 0x3327de1d
// declared property setter: - (void)setPixelSize:(CGSize)size;	// 0x3327b909
- (void)setScissorRect:(const int *)rect saveTo:(int *)to;	// 0x3327c20d
- (BOOL)setShader:(id)shader;	// 0x3327cf85
- (BOOL)setShaderUniformFloat:(float)aFloat forKey:(id)key;	// 0x3327d791
- (BOOL)setShaderUniformInt:(int)int forKey:(id)key;	// 0x3327d741
- (BOOL)setShaderUniformVec2:(float)a2 :(float)arg2 forKey:(id)key;	// 0x3327d7e5
- (BOOL)setShaderUniformVec3:(float)a3 :(float)arg2 :(float)arg3 forKey:(id)key;	// 0x3327d84d
- (BOOL)setShaderUniformVec4:(float)a4 :(float)arg2 :(float)arg3 :(float)arg4 forKey:(id)key;	// 0x3327d8bd
- (void)setTextureCoordinatesPointer:(const float *)pointer onTextureUnit:(unsigned)unit;	// 0x3327dfcd
- (void)setTextureMatrix:(float [16])matrix onTextureUnit:(unsigned)unit;	// 0x3327db89
- (void)setVertex2DPointer:(const float *)pointer;	// 0x3327dc71
- (void)setVertex3DPointer:(const float *)pointer;	// 0x3327dd45
- (void)setVertexAttributePointer:(const float *)pointer ofSize:(unsigned)size forKey:(id)key;	// 0x3327e1a5
// declared property getter: - (CGSize)size;	// 0x3327bb75
// declared property getter: - (BOOL)supportsFragmentShaders;	// 0x3327e721
- (BOOL)supportsMirroredRepeatForImage:(id)image;	// 0x3327e645
- (void)unlock;	// 0x3327b905
- (void)unsetColorsPointer;	// 0x3327e441
- (void)unsetImage:(id)image onTextureUnit:(unsigned)unit state:(const XXStruct_S04vsC *)state;	// 0x3327cbed
- (void)unsetInSpriteCoordinatesPointer;	// 0x3327e4e1
- (void)unsetNormalsPointer;	// 0x3327e3f9
- (void)unsetShader;	// 0x3327d3d9
- (void)unsetTextureCoordinatesPointerOnTextureUnit:(unsigned)unit;	// 0x3327e489
- (void)unsetVertexAttributePointerForKey:(id)key;	// 0x3327e529
- (void)unsetVertexPointer;	// 0x3327e3b5
// declared property getter: - (unsigned)virtualScreen;	// 0x3327bc31
// declared property getter: - (int)vram;	// 0x3327e771
@end

