/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MRLoadable.h"
#import "MRRenderable.h"
#import <NSObject.h> // Unknown library

@class NSDictionary, MRFrame, MRImage, MCSlide, MRProviderPreloadOperation, MRLayerEffect, NSString;

@interface MRSlideProvider : NSObject <MRLoadable, MRRenderable> {
	CGSize mDefaultSize;	// 4 = 0x4
	BOOL mIsMonochromatic;	// 12 = 0xc
	BOOL mUseMipmapping;	// 13 = 0xd
	BOOL mIsStill;	// 14 = 0xe
	BOOL mIsSupportedMovie;	// 15 = 0xf
	float mStillTime;	// 16 = 0x10
	NSString *mImageSizeScript;	// 20 = 0x14
	NSDictionary *mEffectAttributes;	// 24 = 0x18
	MRProviderPreloadOperation *mPreloadOperation;	// 28 = 0x1c
	MRFrame *mFrame;	// 32 = 0x20
	MRImage *mOriginalImage;	// 36 = 0x24
	MRImage *mOutputImage;	// 40 = 0x28
	BOOL mIsLoaded;	// 44 = 0x2c
	BOOL mIsPlaying;	// 45 = 0x2d
	CGSize mRequestedSize;	// 48 = 0x30
	double mShowTime;	// 56 = 0x38
	double mShowDuration;	// 64 = 0x40
	MRLayerEffect *mEffectLayer;	// 72 = 0x48
	MCSlide *mSlide;	// 76 = 0x4c
	int mKenBurnsType;	// 80 = 0x50
	NSString *mAssetPath;	// 84 = 0x54
	CGSize mOriginalImageSize;	// 88 = 0x58
	NSString *mFrameID;	// 96 = 0x60
	BOOL mHasKenBurnsAnimations;	// 100 = 0x64
	CGSize mLastImageSize;	// 104 = 0x68
	double mLastTime;	// 112 = 0x70
	CGSize mLastDaSize;	// 120 = 0x78
	CGSize mSizeFactor;	// 128 = 0x80
	MCSlide *mSlideCopy;	// 136 = 0x88
	BOOL mNeedsToUpdateSlide;	// 140 = 0x8c
	BOOL mNeedsToUpdateKenBurns;	// 141 = 0x8d
	CGSize mFramedImageSize;	// 144 = 0x90
	unsigned mSlideIndex;	// 152 = 0x98
	BOOL mNeedsToUpdateFrame;	// 156 = 0x9c
	BOOL mCanUseOptimizedConfiguration;	// 157 = 0x9d
}
@property(assign) BOOL canUseOptimizedConfiguration;	// G=0x332fd51d; S=0x332fd52d; @synthesize=mCanUseOptimizedConfiguration
@property(assign, nonatomic) CGSize defaultSize;	// G=0x332fd465; S=0x332f9cd1; @synthesize=mDefaultSize
@property(retain, nonatomic) NSDictionary *effectAttributes;	// G=0x332fd4fd; S=0x332f9e05; @synthesize=mEffectAttributes
@property(readonly, assign) MRFrame *frame;	// G=0x332fd63d; @synthesize=mFrame
@property(readonly, assign) float imageAspectRatio;	// G=0x332f9c9d; 
@property(copy, nonatomic) NSString *imageSizeScript;	// G=0x332fd4ed; S=0x332f9d89; @synthesize=mImageSizeScript
@property(readonly, assign) BOOL isAlphaFriendly;	// G=0x332fb091; 
@property(readonly, assign) BOOL isInfinite;	// G=0x332fb095; 
@property(readonly, assign) BOOL isLoaded;	// G=0x332fd50d; @synthesize=mIsLoaded
@property(assign, nonatomic) BOOL isMonochromatic;	// G=0x332fd47d; S=0x332f9d5d; @synthesize=mIsMonochromatic
@property(readonly, assign) BOOL isNative3D;	// G=0x332fafc5; 
@property(readonly, assign) BOOL isOpaque;	// G=0x332fafc9; 
@property(assign, nonatomic) BOOL isPlaying;	// G=0x332fd5fd; S=0x332fa615; @synthesize=mIsPlaying
@property(assign) BOOL isStill;	// G=0x332fd4ad; S=0x332fd4bd; @synthesize=mIsStill
@property(assign) int kenBurnsType;	// G=0x332fd61d; S=0x332fd62d; @synthesize=mKenBurnsType
@property(readonly, assign) CGSize requestedSize;	// G=0x332fd59d; @synthesize=mRequestedSize
@property(assign) double showDuration;	// G=0x332fd56d; S=0x332fd585; @synthesize=mShowDuration
@property(assign) double showTime;	// G=0x332fd53d; S=0x332fd555; @synthesize=mShowTime
@property(assign) CGSize sizeFactor;	// G=0x332fd5c1; S=0x332fd5e5; @synthesize=mSizeFactor
@property(retain, nonatomic) MCSlide *slide;	// G=0x332fd60d; S=0x332fa339; @synthesize=mSlide
@property(assign) float stillTime;	// G=0x332fd4cd; S=0x332fd4dd; @synthesize=mStillTime
@property(assign) double time;	// G=0x332fa6a9; S=0x332fa6bd; 
@property(assign) BOOL useMipmapping;	// G=0x332fd48d; S=0x332fd49d; @synthesize=mUseMipmapping
+ (void)applyKenBurnsForSlide:(id)slide inPlug:(id)plug forSize:(CGSize)size atTime:(double)time withTargetSize:(CGSize)targetSize kenBurnsType:(int)type translation:(CGPoint *)translation scale:(float *)scale rotation:(float *)rotation;	// 0x332fd64d
- (id)initWithEffectLayer:(id)effectLayer;	// 0x332f98a1
// declared property getter: - (BOOL)canUseOptimizedConfiguration;	// 0x332fd51d
- (void)cancelLoading;	// 0x332faea9
- (void)cleanup;	// 0x332f99b1
- (void)dealloc;	// 0x332f9931
// declared property getter: - (CGSize)defaultSize;	// 0x332fd465
// declared property getter: - (id)effectAttributes;	// 0x332fd4fd
- (void)finalize;	// 0x332f9971
// declared property getter: - (id)frame;	// 0x332fd63d
- (CGSize)framedImageSizeAtIndex:(unsigned long)index aspectRatio:(float)ratio;	// 0x332f9e69
// declared property getter: - (float)imageAspectRatio;	// 0x332f9c9d
// declared property getter: - (id)imageSizeScript;	// 0x332fd4ed
// declared property getter: - (BOOL)isAlphaFriendly;	// 0x332fb091
// declared property getter: - (BOOL)isInfinite;	// 0x332fb095
// declared property getter: - (BOOL)isLoaded;	// 0x332fd50d
- (BOOL)isLoadedForTime:(double)time;	// 0x332fa75d
// declared property getter: - (BOOL)isMonochromatic;	// 0x332fd47d
// declared property getter: - (BOOL)isNative3D;	// 0x332fafc5
// declared property getter: - (BOOL)isOpaque;	// 0x332fafc9
// declared property getter: - (BOOL)isPlaying;	// 0x332fd5fd
// declared property getter: - (BOOL)isStill;	// 0x332fd4ad
// declared property getter: - (int)kenBurnsType;	// 0x332fd61d
- (void)loadForTime:(double)time inContext:(id)context withArguments:(id)arguments now:(BOOL)now;	// 0x332fa76d
- (void)loadWithArguments:(id)arguments;	// 0x332fa9d5
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x332f9b41
- (id)patchworkAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332fd35d
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332fb099
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332fb775
// declared property getter: - (CGSize)requestedSize;	// 0x332fd59d
- (id)retainedByUserRenderedImageAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x332fb789
// declared property setter: - (void)setCanUseOptimizedConfiguration:(BOOL)configuration;	// 0x332fd52d
// declared property setter: - (void)setDefaultSize:(CGSize)size;	// 0x332f9cd1
// declared property setter: - (void)setEffectAttributes:(id)attributes;	// 0x332f9e05
// declared property setter: - (void)setImageSizeScript:(id)script;	// 0x332f9d89
// declared property setter: - (void)setIsMonochromatic:(BOOL)monochromatic;	// 0x332f9d5d
// declared property setter: - (void)setIsPlaying:(BOOL)playing;	// 0x332fa615
// declared property setter: - (void)setIsStill:(BOOL)still;	// 0x332fd4bd
// declared property setter: - (void)setKenBurnsType:(int)type;	// 0x332fd62d
// declared property setter: - (void)setShowDuration:(double)duration;	// 0x332fd585
// declared property setter: - (void)setShowTime:(double)time;	// 0x332fd555
// declared property setter: - (void)setSizeFactor:(CGSize)factor;	// 0x332fd5e5
// declared property setter: - (void)setSlide:(id)slide;	// 0x332fa339
// declared property setter: - (void)setStillTime:(float)time;	// 0x332fd4dd
// declared property setter: - (void)setTime:(double)time;	// 0x332fa6bd
// declared property setter: - (void)setUseMipmapping:(BOOL)mipmapping;	// 0x332fd49d
// declared property getter: - (double)showDuration;	// 0x332fd56d
// declared property getter: - (double)showTime;	// 0x332fd53d
// declared property getter: - (CGSize)sizeFactor;	// 0x332fd5c1
// declared property getter: - (id)slide;	// 0x332fd60d
// declared property getter: - (float)stillTime;	// 0x332fd4cd
// declared property getter: - (double)time;	// 0x332fa6a9
- (CGSize)unframedImageSizeForAspectRatio:(float)aspectRatio frameID:(id)anId andFrameAttributes:(id)attributes atIndex:(unsigned long)index framedImageSize:(CGSize *)size;	// 0x332fa101
- (void)unload;	// 0x332fac6d
// declared property getter: - (BOOL)useMipmapping;	// 0x332fd48d
@end

