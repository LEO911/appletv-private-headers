/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Notes.framework/Notes
 */

#import <NSObject.h> // Unknown library
#import "Notes-Structs.h"

@class NSMutableDictionary, NSNumber, NSManagedObjectModel, NSManagedObjectContext, NoteStoreObject, NSPersistentStoreCoordinator, NoteAccountObject, NSPredicate, CPExclusiveLock, NSString;

@interface NoteContext : NSObject {
@private
	NSManagedObjectModel *_managedObjectModel;	// 4 = 0x4
	NSManagedObjectContext *_managedObjectContext;	// 8 = 0x8
	NSPersistentStoreCoordinator *_persistentStoreCoordinator;	// 12 = 0xc
	NSPredicate *_searchPredicate;	// 16 = 0x10
	NoteStoreObject *_localStore;	// 20 = 0x14
	NoteAccountObject *_localAccount;	// 24 = 0x18
	CXIndexRef __SharedNoteStoreSearchIndex;	// 28 = 0x1c
	CPExclusiveLock *__SharedNoteStoreSearchIndexLock;	// 32 = 0x20
	int __SharedNoteStoreSearchIndexCount;	// 36 = 0x24
	BOOL _isIndexing;	// 40 = 0x28
	NSManagedObjectContext *_nextIdContext;	// 44 = 0x2c
	CPExclusiveLock *_nextIdLock;	// 48 = 0x30
	NSNumber *_nextId;	// 52 = 0x34
	CPExclusiveLock *_objectCreationLock;	// 56 = 0x38
	unsigned _notificationCount;	// 60 = 0x3c
	BOOL _logChanges;	// 64 = 0x40
	BOOL _indexInBatches;	// 65 = 0x41
	BOOL _hasPriorityInSaveConflicts;	// 66 = 0x42
	BOOL _inMigrator;	// 67 = 0x43
	NSString *_testingFilePrefix;	// 68 = 0x44
	NSString *_testingFilePath;	// 72 = 0x48
	NSMutableDictionary *_notePropertyObjectsRealized;	// 76 = 0x4c
}
@property(readonly, assign, nonatomic) BOOL isIndexing;	// G=0x32f80779; @synthesize=_isIndexing
@property(readonly, retain) NoteAccountObject *localAccount;	// G=0x32f82859; converted property
@property(readonly, retain) NoteStoreObject *localStore;	// G=0x32f80fd9; converted property
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext;	// G=0x32f80bc5; 
@property(readonly, retain) NSManagedObjectModel *managedObjectModel;	// G=0x32f86071; converted property
@property(readonly, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;	// G=0x32f85611; converted property
+ (BOOL)shouldLogIndexing;	// 0x32f81fcd
- (id)init;	// 0x32f81c95
- (id)initForMigrator;	// 0x32f81cc5
- (id)initWithTestingFilePrefix:(id)testingFilePrefix;	// 0x32f81cad
- (id)initWithTestingFilePrefix:(id)testingFilePrefix atPath:(id)path inMigrator:(BOOL)migrator;	// 0x32f85401
- (id)initWithTestingFilePrefix:(id)testingFilePrefix inMigrator:(BOOL)migrator;	// 0x32f81cdd
- (void)_createLocalAccount:(id *)account andStore:(id *)store;	// 0x32f81f09
- (id)_notePropertyObjectForKey:(id)key;	// 0x32f82681
- (id)accountForAccountId:(id)accountId;	// 0x32f82a0d
- (id)allAccounts;	// 0x32f82bc1
- (id)allNotes;	// 0x32f8137d
- (id)allNotesInCollection:(id)collection;	// 0x32f81301
- (id)allNotesMatchingPredicate:(id)predicate;	// 0x32f81275
- (id)allNotesWithoutBodiesInCollection:(id)collection;	// 0x32f83009
- (id)allStores;	// 0x32f82e75
- (id)allVisibleNotes;	// 0x32f8165d
- (id)allVisibleNotesInCollection:(id)collection;	// 0x32f81619
- (id)allVisibleNotesMatchingPredicate:(id)predicate;	// 0x32f81511
- (void)cleanUpLocks;	// 0x32f808a1
- (void)clearCaches;	// 0x32f81ab9
- (id)collectionForInfo:(id)info;	// 0x32f81131
- (id)collectionForObjectID:(id)objectID;	// 0x32f8196d
- (id)copyNotesForSearch:(void *)search complete:(char *)complete;	// 0x32f808e9
- (id)copyNotesForSearch:(void *)search predicate:(id)predicate complete:(char *)complete;	// 0x32f82011
- (unsigned)countOfNotes;	// 0x32f8132d
- (unsigned)countOfNotesInCollection:(id)collection;	// 0x32f812d5
- (unsigned)countOfNotesMatchingPredicate:(id)notesMatchingPredicate;	// 0x32f81215
- (unsigned)countOfStores;	// 0x32f82d55
- (unsigned)countOfVisibleNotes;	// 0x32f81645
- (unsigned)countOfVisibleNotesInCollection:(id)collection;	// 0x32f815ed
- (unsigned)countOfVisibleNotesMatchingPredicate:(id)visibleNotesMatchingPredicate;	// 0x32f81435
- (void)dealloc;	// 0x32f8533d
- (id)defaultStoreForNewNote;	// 0x32f81029
- (BOOL)deleteAccount:(id)account;	// 0x32f80fa1
- (void)deleteChanges:(id)changes;	// 0x32f84405
- (BOOL)deleteIndexFile;	// 0x32f80799
- (void)deleteNote:(id)note;	// 0x32f81835
- (void)deleteNoteRegardlessOfConstraints:(id)constraints;	// 0x32f8180d
- (BOOL)deleteStore:(id)store;	// 0x32f83f81
- (void)destroySearchIndex;	// 0x32f86aa5
- (void)enableChangeLogging:(BOOL)logging;	// 0x32f80749
- (BOOL)forceDeleteAccount:(id)account;	// 0x32f84069
- (void)forceSetUpUniqueObjects;	// 0x32f81e39
- (id)getNextIdObject;	// 0x32f822c9
- (void)handleMigration;	// 0x32f858fd
- (BOOL)handleSaveErrors:(id)errors;	// 0x32f84131
- (BOOL)hasMultipleEnabledStores;	// 0x32f80f05
- (void)indexInBatches:(BOOL)batches;	// 0x32f80759
- (void)indexNotes:(id)notes;	// 0x32f86131
- (void)invalidate;	// 0x32f81789
// declared property getter: - (BOOL)isIndexing;	// 0x32f80779
- (id)liveNotesNeedingBodiesPredicate;	// 0x32f81bdd
// converted property getter: - (id)localAccount;	// 0x32f82859
// converted property getter: - (id)localStore;	// 0x32f80fd9
// declared property getter: - (id)managedObjectContext;	// 0x32f80bc5
// converted property getter: - (id)managedObjectModel;	// 0x32f86071
- (id)newFRCForCollection:(id)collection delegate:(id)delegate;	// 0x32f8327d
- (id)newFetchRequestForNotes;	// 0x32f81ad9
- (void *)newSearchContextWithText:(id)text;	// 0x32f80909
- (id)newlyAddedAccount;	// 0x32f810b9
- (id)newlyAddedNote;	// 0x32f8199d
- (id)newlyAddedStore;	// 0x32f810f5
- (id)nextIndex;	// 0x32f849dd
- (id)noteChangeWithType:(int)type store:(id)store;	// 0x32f8097d
- (id)noteForObjectID:(id)objectID;	// 0x32f811e5
- (BOOL)noteIsSafeToAccess:(id)access;	// 0x32f807e5
- (id)notesForIntegerIds:(id)integerIds;	// 0x32f830ad
- (id)notesToResumeIndexing;	// 0x32f80b05
- (id)pathForIndex;	// 0x32f80d41
- (id)pathForPersistentStore;	// 0x32f80dbd
// converted property getter: - (id)persistentStoreCoordinator;	// 0x32f85611
- (id)propertyValueForKey:(id)key;	// 0x32f80e39
- (void)receiveDarwinNotificationWithChangeLogging:(BOOL)changeLogging;	// 0x32f80a69
- (void)removeConflictingSqliteAndIdxFiles;	// 0x32f85011
- (void)removeSqliteAndIdxFiles;	// 0x32f81cfd
- (void)resetNotificationCount;	// 0x32f80769
- (void)resumeIndexing;	// 0x32f821f9
- (id)rootDirectory;	// 0x32f86059
- (BOOL)save:(id *)save;	// 0x32f85579
- (void)saveNotesToResumeIndexing:(id)resumeIndexing;	// 0x32f83e39
- (BOOL)saveOutsideApp:(id *)app;	// 0x32f81771
- (BOOL)saveSilently:(id *)silently;	// 0x32f81675
- (CXIndexRef)searchIndex:(char *)index;	// 0x32f86539
- (void)setHasPriorityInSaveConflicts:(BOOL)saveConflicts;	// 0x32f80c91
- (void)setPropertyValue:(id)value forKey:(id)key;	// 0x32f80e5d
- (void)setUpCoreDataStack;	// 0x32f850c9
- (BOOL)setUpLastIndexTid;	// 0x32f844b5
- (BOOL)setUpLocalAccountAndStore;	// 0x32f8470d
- (void)setUpUniqueObjects;	// 0x32f84ced
- (BOOL)shouldDisableLocalStore;	// 0x32f80f55
- (BOOL)shouldResumeIndexing;	// 0x32f80b89
- (void)sortNotes:(id)notes;	// 0x32f81a41
- (id)storeForObjectID:(id)objectID;	// 0x32f8193d
- (void)tearDownCoreDataStack;	// 0x32f85241
- (void)trackChanges:(id)changes;	// 0x32f83449
- (void)updateSearchIndex:(id)index;	// 0x32f86b2d
- (id)urlForPersistentStore;	// 0x32f80d0d
- (id)visibleNoteForObjectID:(id)objectID;	// 0x32f813cd
- (id)visibleNotesForIntegerIds:(id)integerIds;	// 0x32f83161
- (id)visibleNotesPredicate;	// 0x32f81c25
- (void)wrapUpIndexing;	// 0x32f868cd
@end

