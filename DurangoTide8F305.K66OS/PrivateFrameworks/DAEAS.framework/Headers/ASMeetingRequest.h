/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "NSCoding.h"
#import "ASParsingAcceptingTopLevelLeaves.h"
#import "ASEvent.h"

@class NSNumber, NSString, NSMutableDictionary, ASEmailItem, NSDate;

@interface ASMeetingRequest : ASEvent <ASParsingAcceptingTopLevelLeaves, NSCoding> {
	NSNumber *_instanceType;	// 168 = 0xa8
	NSDate *_recurrenceId;	// 172 = 0xac
	NSMutableDictionary *_placeHolder;	// 176 = 0xb0
	int _meetingClassType;	// 180 = 0xb4
	ASEmailItem *_parentEmailItem;	// 184 = 0xb8
	NSString *_cachedParentFolderId;	// 188 = 0xbc
	NSString *_cachedParentServerId;	// 192 = 0xc0
}
@property(retain) NSString *cachedParentFolderId;	// G=0x3032c3a1; S=0x3032c365; converted property
@property(retain) NSString *cachedParentServerId;	// G=0x3032c335; S=0x3032c2f9; converted property
@property(retain) id exceptionDate;	// G=0x3032c4f1; S=0x3032c4dd; converted property
@property(retain) NSNumber *instanceType;	// G=0x3032c479; S=0x3032c43d; converted property
@property(assign) int meetingClassType;	// G=0x3032c2d9; S=0x3032c2e9; converted property
@property(retain) NSDate *recurrenceId;	// G=0x3032c40d; S=0x3032c3d1; converted property
+ (BOOL)acceptsTopLevelLeaves;	// 0x3032d461
+ (BOOL)frontingBasicTypes;	// 0x3032d389
+ (BOOL)notifyOfUnknownTokens;	// 0x3032d341
+ (BOOL)parsingLeafNode;	// 0x3032d419
+ (BOOL)parsingWithSubItems;	// 0x3032d3d1
- (id)init;	// 0x3032d889
- (id)initWithCoder:(id)coder;	// 0x3032d5f9
- (BOOL)_bailIfNotNewestDataForAccount:(id)account;	// 0x3032c695
- (void)_determineSelfnessWithLocalEvent:(void *)localEvent forAccount:(id)account;	// 0x3032cef9
- (void)_setReminderSecsBefore:(id)before;	// 0x3032c591
- (void)applyPlaceHolder;	// 0x3032d321
- (id)asParseRules;	// 0x3032cf95
- (BOOL)cachedOrganizerIsSelfWithAccount:(id)account;	// 0x3032c4a9
// converted property getter: - (id)cachedParentFolderId;	// 0x3032c3a1
// converted property getter: - (id)cachedParentServerId;	// 0x3032c335
- (void)clearPlaceHolder;	// 0x3032d2f9
- (void)dealloc;	// 0x3032d7f9
- (id)description;	// 0x3032c5ed
- (void)encodeWithCoder:(id)coder;	// 0x3032d4a9
// converted property getter: - (id)exceptionDate;	// 0x3032c4f1
// converted property getter: - (id)instanceType;	// 0x3032c479
// converted property getter: - (int)meetingClassType;	// 0x3032c2d9
- (void)parseASParseContext:(id)context root:(id)root parent:(id)parent callbackDict:(id)dict streamCallbackDict:(id)dict5 account:(id)account;	// 0x3032d8d5
- (void)postProcessApplicationData;	// 0x3032c6e1
// converted property getter: - (id)recurrenceId;	// 0x3032c40d
- (BOOL)saveToCalendarWithExistingRecord:(void *)existingRecord intoCalendar:(void *)calendar shouldMergeProperties:(BOOL)properties outMergeDidChooseLocalProperties:(BOOL *)outMerge account:(id)account;	// 0x3032d96d
// converted property setter: - (void)setCachedParentFolderId:(id)anId;	// 0x3032c365
// converted property setter: - (void)setCachedParentServerId:(id)anId;	// 0x3032c2f9
- (void)setDTStamp:(id)stamp;	// 0x3032d791
// converted property setter: - (void)setExceptionDate:(id)date;	// 0x3032c4dd
// converted property setter: - (void)setInstanceType:(id)type;	// 0x3032c43d
// converted property setter: - (void)setMeetingClassType:(int)type;	// 0x3032c2e9
- (void)setObject:(id)object forDCCPT:(int)dccpt;	// 0x3032d291
- (void)setOrganizer:(id)organizer;	// 0x3032c505
// converted property setter: - (void)setRecurrenceId:(id)anId;	// 0x3032c3d1
- (BOOL)shouldUseInMemoryAttendeesForAccount:(id)account numExistingAttendees:(int)attendees;	// 0x3032c665
- (void)takeValuesFromParentEmailForAccount:(id)account;	// 0x3032e1b1
- (BOOL)writeInviteToCalDBCreateAsRejected:(BOOL)calDBCreateAsRejected defaultCalendar:(void *)calendar account:(id)account;	// 0x3032dec5
@end

