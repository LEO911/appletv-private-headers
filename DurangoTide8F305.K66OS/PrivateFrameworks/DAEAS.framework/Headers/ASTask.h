/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DAEAS.framework/DAEAS
 */

#import "DATask.h"
#import <NSObject.h> // Unknown library
#import "DAEAS-Structs.h"

@class NSString, ASItem, NSError, ASTaskManager, ASParseContext, NSHTTPURLResponse, NSURLConnection, NSMutableSet, NSURLRequest, NSTimer, NSDate, DATaskManager;

@interface ASTask : NSObject <DATask> {
	BOOL _haveSwitchedCodePage;	// 4 = 0x4
	BOOL _haveParsedCommand;	// 5 = 0x5
	ASItem *_currentlyParsingItem;	// 8 = 0x8
	id _delegate;	// 12 = 0xc
	NSHTTPURLResponse *_response;	// 16 = 0x10
	ASParseContext *_parseContext;	// 20 = 0x14
	NSURLConnection *_connection;	// 24 = 0x18
@private
	NSURLRequest *_request;	// 28 = 0x1c
	NSMutableSet *_attemptedIdentities;	// 32 = 0x20
	BOOL _isFakingIt;	// 36 = 0x24
	BOOL _didSendRequest;	// 37 = 0x25
	BOOL _didFailWithError;	// 38 = 0x26
	BOOL _didCancel;	// 39 = 0x27
	BOOL _didReceiveResponse;	// 40 = 0x28
	BOOL _didReceiveData;	// 41 = 0x29
	BOOL _didFinishLoading;	// 42 = 0x2a
	BOOL _didReset;	// 43 = 0x2b
	BOOL _finished;	// 44 = 0x2c
	BOOL _inDelegateCallout;	// 45 = 0x2d
	BOOL _finishedByTimeoutEnforcer;	// 46 = 0x2e
	int _interfaceBinding;	// 48 = 0x30
	void *_context;	// 52 = 0x34
	BOOL _isExclusive;	// 56 = 0x38
	BOOL _receivedBadPasswordResponse;	// 57 = 0x39
	BOOL _askedToCancelWhileModal;	// 58 = 0x3a
	BOOL _haveCheckedForTopLevelError;	// 59 = 0x3b
	BOOL _handledTopLevelError;	// 60 = 0x3c
	int _taskID;	// 64 = 0x40
	ASTaskManager *_taskManager;	// 68 = 0x44
	int _modalReason;	// 72 = 0x48
	int _modalPushCount;	// 76 = 0x4c
	NSString *_lastKnownPolicyKey;	// 80 = 0x50
	NSError *_passwordNotificationError;	// 84 = 0x54
	NSString *_lastKnownPassword;	// 88 = 0x58
	NSDate *_dateConnectionWentOut;	// 92 = 0x5c
	NSTimer *_timeoutEnforcer;	// 96 = 0x60
@protected
	BOOL _retry;	// 100 = 0x64
}
@property(assign, nonatomic) BOOL askedToCancelWhileModal;	// G=0x30337b5d; S=0x30337b6d; @synthesize=_askedToCancelWhileModal
@property(assign, nonatomic) void *context;	// G=0x30337bcd; S=0x30337bdd; @synthesize=_context
@property(retain, nonatomic) ASItem *currentlyParsingItem;	// G=0x30337b7d; S=0x3033d069; @synthesize=_currentlyParsingItem
@property(assign, nonatomic) id delegate;	// G=0x30337bed; S=0x30337bfd; @synthesize=_delegate
@property(assign, nonatomic) int interfaceBinding;	// G=0x30337bad; S=0x30337bbd; @synthesize=_interfaceBinding
@property(assign, nonatomic) BOOL isExclusive;	// G=0x30337b8d; S=0x30337b9d; @synthesize=_isExclusive
@property(retain, nonatomic) NSString *lastKnownPassword;	// G=0x30337b4d; S=0x3033d091; @synthesize=_lastKnownPassword
@property(readonly, assign) int taskID;	// G=0x30337a81; converted property
@property(assign, nonatomic) DATaskManager *taskManager;	// G=0x30337c0d; S=0x30337c6d; @synthesize=_taskManager
@property(retain, nonatomic) NSTimer *timeoutEnforcer;	// G=0x30337b3d; S=0x30337c1d; @synthesize=_timeoutEnforcer
+ (void)_restoreDefaultTaskTimeout;	// 0x30337ac1
+ (void)_setDefaultTaskTimeout:(double)timeout;	// 0x30337aa5
- (id)init;	// 0x3033aca9
- (id)_HTTPMethodForRequest:(id)request;	// 0x303384e1
- (id)_applyAuthenticationChain:(CFArrayRef)chain toRequest:(id)request;	// 0x3033cd91
- (void)_continuePerformTask;	// 0x3033c3ad
- (id)_createBodyData;	// 0x303380e5
- (id)_easVersion;	// 0x30338439
- (void)_failImmediately;	// 0x3033a3e5
- (void)_handleBadPasswordResponse;	// 0x30337eb5
- (BOOL)_handleCertificateError:(id)error;	// 0x30339d3d
- (BOOL)_handleRedirect:(id)redirect;	// 0x30339ab9
- (void)_initFakeParseContext;	// 0x30337e45
- (BOOL)_isWBXML;	// 0x303383ed
- (id)_policyKey;	// 0x30338419
- (void)_popModal;	// 0x30338055
- (void)_pushModalForReason:(int)reason;	// 0x3033808d
- (BOOL)_shouldRedirectToHTTPForRequest:(id)request;	// 0x30337aa1
- (BOOL)_shouldSendAuthForRequest:(id)request;	// 0x30337a9d
- (void)_timeoutEnforcerFired:(id)fired;	// 0x3033a479
- (id)_url;	// 0x30338459
// declared property getter: - (BOOL)askedToCancelWhileModal;	// 0x30337b5d
- (BOOL)attemptRetryWithStatus:(int)status error:(id)error;	// 0x3033ccdd
- (void)cancelTaskWithReason:(int)reason underlyingError:(id)error;	// 0x30339dfd
- (BOOL)checkForErrorInContext:(id)context;	// 0x3033a601
- (id)command;	// 0x3033adbd
- (int)commandCode;	// 0x3033aa89
- (BOOL)connection:(id)connection canAuthenticateAgainstProtectionSpace:(id)space;	// 0x30339051
- (void)connection:(id)connection didFailWithError:(id)error;	// 0x3033add5
- (void)connection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;	// 0x30338ec5
- (void)connection:(id)connection didReceiveData:(id)data;	// 0x30339121
- (void)connection:(id)connection didReceiveResponse:(id)response;	// 0x303388e5
- (void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;	// 0x30339a29
- (id)connection:(id)connection needNewBodyStream:(id)stream;	// 0x303390d5
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;	// 0x3033be01
- (int)connectionActionForResponse:(id)response;	// 0x3033a52d
- (void)connectionDidFinishLoading:(id)connection;	// 0x30338b71
- (id)contentType;	// 0x30337b05
// declared property getter: - (void *)context;	// 0x30337bcd
// declared property getter: - (id)currentlyParsingItem;	// 0x30337b7d
- (void)dealloc;	// 0x3033aac5
// declared property getter: - (id)delegate;	// 0x30337bed
- (id)description;	// 0x3033852d
- (void)didCallOutToDelegate;	// 0x3033a14d
- (void)didProcessContext:(id)context;	// 0x303381f9
- (BOOL)expectsWBXML;	// 0x30337ae5
- (void)finishWithError:(id)error;	// 0x30339f25
- (BOOL)getTopLevelToken:(char *)token outStatusCodePage:(char *)page outStatusToken:(char *)token3;	// 0x3033836d
- (void)handleTopLevelErrorStatus:(id)status;	// 0x303386d9
- (id)httpMethod;	// 0x30337a91
// declared property getter: - (int)interfaceBinding;	// 0x30337bad
// declared property getter: - (BOOL)isExclusive;	// 0x30337b8d
- (BOOL)isInCallOutToDelegate;	// 0x30337b21
// declared property getter: - (id)lastKnownPassword;	// 0x30337b4d
- (void)loadRequest:(id)request;	// 0x3033b429
- (int)numDownloadedElements;	// 0x30337b39
- (id)parameterData;	// 0x30337ae9
- (double)percentComplete;	// 0x30337af5
- (void)performTask;	// 0x3033a32d
- (id)powerAssertionGroupIdentifier;	// 0x303381c9
- (BOOL)processContext:(id)context;	// 0x30337af1
- (void)reportStatusWithError:(id)error;	// 0x3033cfe5
- (id)requestBody;	// 0x3033aa4d
- (id)requestBodyStreamOutKnownSize:(int *)size;	// 0x30337aed
- (BOOL)requiresEASVersionInformaton;	// 0x30337b19
- (void)reset;	// 0x30337d2d
- (id)responseContentType;	// 0x303384f5
// declared property setter: - (void)setAskedToCancelWhileModal:(BOOL)cancelWhileModal;	// 0x30337b6d
// declared property setter: - (void)setContext:(void *)context;	// 0x30337bdd
// declared property setter: - (void)setCurrentlyParsingItem:(id)item;	// 0x3033d069
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x30337bfd
// declared property setter: - (void)setInterfaceBinding:(int)binding;	// 0x30337bbd
// declared property setter: - (void)setIsExclusive:(BOOL)exclusive;	// 0x30337b9d
// declared property setter: - (void)setLastKnownPassword:(id)password;	// 0x3033d091
// declared property setter: - (void)setTaskManager:(id)manager;	// 0x30337c6d
// declared property setter: - (void)setTimeoutEnforcer:(id)enforcer;	// 0x30337c1d
- (BOOL)shouldHandlePasswordErrors;	// 0x30337b31
- (BOOL)shouldHoldPowerAssertion;	// 0x30337b1d
- (BOOL)shouldLogIncomingData;	// 0x30337b15
- (BOOL)shouldReportTimeInNetwork;	// 0x30337b35
- (void)startModal;	// 0x3033b21d
// converted property getter: - (int)taskID;	// 0x30337a81
// declared property getter: - (id)taskManager;	// 0x30337c0d
- (void)taskManagerDidFailToUpdatePolicyKey;	// 0x30337f19
- (void)taskManagerDidFindEASVersion;	// 0x30337fd1
- (void)taskManagerDidUpdatePolicyKey;	// 0x30337f4d
- (int)taskStatusForError:(id)error;	// 0x30338211
- (int)taskStatusForExchangeStatus:(int)exchangeStatus;	// 0x30337b01
- (void)tearDownResources;	// 0x30338109
// declared property getter: - (id)timeoutEnforcer;	// 0x30337b3d
- (double)timeoutInterval;	// 0x3033848d
- (void)willCallOutToDelegate;	// 0x3033a1ad
- (void)willProcessContext;	// 0x30337b11
@end

