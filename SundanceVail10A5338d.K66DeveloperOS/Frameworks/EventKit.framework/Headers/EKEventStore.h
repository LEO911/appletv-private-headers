/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSMutableDictionary, NSMutableSet, EKDaemonConnection, EKCalendar, NSNumber, NSTimeZone, NSString, NSArray;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject {
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKCalendar *_defaultCalendarForNewEvents;	// 32 = 0x20
	EKCalendar *_defaultCalendarForNewReminders;	// 36 = 0x24
	EKDaemonConnection *_database;	// 40 = 0x28
	double _lastDatabaseNotificationTimestamp;	// 44 = 0x2c
	unsigned long _flags;	// 52 = 0x34
	NSTimeZone *_timeZone;	// 56 = 0x38
	NSMutableDictionary *_calendars;	// 60 = 0x3c
	NSMutableDictionary *_sources;	// 64 = 0x40
	NSMutableSet *_objectsPendingCommit;	// 68 = 0x44
	NSObject<OS_dispatch_queue> *_calendarQueue;	// 72 = 0x48
	NSObject<OS_dispatch_queue> *_registeredQueue;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *_unsavedChangesQueue;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_dbChangedQueue;	// 84 = 0x54
	NSMutableDictionary *_cachedValidatedEmails;	// 88 = 0x58
}
@property(retain, nonatomic) NSMutableDictionary *_cachedValidatedEmails;	// G=0x34b6f5a5; S=0x34b6f5b5; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x34b6f4c5; S=0x34b6f4d5; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewEvents;	// G=0x34b6f419; S=0x34b6f429; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewReminders;	// G=0x34b6f439; S=0x34b6f449; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x34b6f4e5; S=0x34b6f4f5; @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *calendarQueue;	// G=0x34b6f525; S=0x34b6f535; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x34b3d735; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x34b6f459; S=0x34b6f469; @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;	// G=0x34b6f585; S=0x34b6f595; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x34b32a5d; S=0x34b6f269; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x34b339e5; 
@property(retain) EKCalendar *defaultCalendarForNewReminders;	// G=0x34b69b19; S=0x34b69c99; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x34b316e9; S=0x34b6f225; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x34b6f3d9; S=0x34b6f3e9; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x34b67161; 
@property(assign, nonatomic) unsigned long flags;	// G=0x34b6f4a5; S=0x34b6f4b5; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x34b6f3b9; S=0x34b6f3c9; @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// G=0x34b6f479; S=0x34b6f491; @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x34b6f505; S=0x34b6f515; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x34b6f399; S=0x34b6f3a9; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x34b6f379; S=0x34b6f389; @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;	// G=0x34b6f545; S=0x34b6f555; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x34b219cd; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x34b20461; S=0x34b24205; @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;	// G=0x34b6f565; S=0x34b6f575; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x34b6f3f9; S=0x34b6f409; @synthesize=_updatedObjects
+ (int)authorizationStatusForEntityType:(unsigned)entityType;	// 0x34b65d29
+ (Class)classForEntityName:(id)entityName;	// 0x34b21f39
+ (Class)publicClassForEntityName:(id)entityName;	// 0x34b2b689
- (id)init;	// 0x34b203bd
- (id)initWithAccessToEntityTypes:(unsigned)entityTypes;	// 0x34b65a09
- (id)initWithAccessToEntityTypes:(unsigned)entityTypes options:(unsigned long)options path:(id)path;	// 0x34b65a29
- (void)_accessStatusChanged;	// 0x34b65ee9
- (id)_addFetchedObjectWithID:(id)anId;	// 0x34b21c7d
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x34b395c5
- (id)_allCalendars;	// 0x34b2c6a9
// declared property getter: - (id)_cachedValidatedEmails;	// 0x34b6f5a5
- (BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;	// 0x34b2c8c1
- (id)_calendarItemsMatchingPredicate:(id)predicate;	// 0x34b6a169
- (id)_calendarWithID:(id)anId;	// 0x34b67f4d
// declared property getter: - (id)_calendars;	// 0x34b6f4c5
- (void)_databaseChangedExternally;	// 0x34b3b4c5
// declared property getter: - (id)_defaultCalendarForNewEvents;	// 0x34b6f419
// declared property getter: - (id)_defaultCalendarForNewReminders;	// 0x34b6f439
- (void)_deleteObject:(id)object;	// 0x34b3d3f9
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x34b68825
- (void)_forgetRegisteredObjects;	// 0x34b6c829
- (void)_insertObject:(id)object;	// 0x34b35639
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x34b684e5
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x34b2cb95
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x34b2d225
- (void)_protectedDataDidBecomeAvailable;	// 0x34b6f21d
- (void)_protectedDataWillBecomeUnavailable;	// 0x34b6f219
- (void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;	// 0x34b6c2b5
- (void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;	// 0x34b6c045
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x34b6c4f1
- (void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x34b6c181
- (void)_registerObject:(id)object;	// 0x34b31109
- (void)_registerObjectImmediate:(id)immediate;	// 0x34b22399
- (void)_requestAuthorizationStatusForEntityType:(unsigned)entityType;	// 0x34b65d75
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x34b3aeb9
- (void)_saveWithoutNotify;	// 0x34b671c1
// declared property getter: - (id)_sources;	// 0x34b6f4e5
- (void)_trackModifiedObject:(id)object;	// 0x34b3fc09
- (void)_unregisterObject:(id)object;	// 0x34b3d651
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x34b3b771
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x34b6e9ed
- (id)alarmWithUUID:(id)uuid;	// 0x34b6e901
- (void)cacheValidationStatusForEmail:(id)email status:(int)status;	// 0x34b6f2ad
- (id)calendarItemWithIdentifier:(id)identifier;	// 0x34b69ee5
- (id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;	// 0x34b6a005
// declared property getter: - (id)calendarQueue;	// 0x34b6f525
- (id)calendarWithExternalURI:(id)externalURI;	// 0x34b6acc9
- (id)calendarWithID:(id)anId;	// 0x34b27541
- (id)calendarWithIdentifier:(id)identifier;	// 0x34b2d08d
// declared property getter: - (id)calendars;	// 0x34b3d735
- (id)calendarsForEntityType:(unsigned)entityType;	// 0x34b679b5
- (void)cancelFetchRequest:(id)request;	// 0x34b6e8a5
- (id)changesSinceSequenceNumber:(int)number;	// 0x34b65f9d
- (id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;	// 0x34b6abdd
- (BOOL)commit:(id *)commit;	// 0x34b39635
- (id)connection;	// 0x34b21155
- (CGColorRef)copyCGColorForNewCalendar;	// 0x34b697d9
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x34b2d3a5
- (void)daemonRestarted;	// 0x34b67115
// declared property getter: - (id)database;	// 0x34b6f459
// declared property getter: - (id)dbChangedQueue;	// 0x34b6f585
- (void)dealloc;	// 0x34b21561
- (id)defaultAllDayAlarm;	// 0x34b329e9
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x34b32a5d
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x34b339e5
// converted property getter: - (id)defaultCalendarForNewReminders;	// 0x34b69b19
- (id)defaultTimedAlarm;	// 0x34b31675
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x34b316e9
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x34b682bd
// declared property getter: - (id)deletedObjects;	// 0x34b6f3d9
- (id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x34b6b3f5
- (int)emailAddressValidationStatus:(id)status;	// 0x34b6f341
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x34b6e639
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x34b2ffb1
- (id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;	// 0x34b68a55
// declared property getter: - (id)eventStoreIdentifier;	// 0x34b67161
- (id)eventWithIdentifier:(id)identifier;	// 0x34b683ed
- (id)eventWithUUID:(id)uuid;	// 0x34b6aaed
- (id)eventWithUniqueId:(id)uniqueId;	// 0x34b68b61
- (id)eventsMatchingPredicate:(id)predicate;	// 0x34b208e9
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x34b20aa5
- (BOOL)fetchProperties:(id)properties forReminders:(id)reminders;	// 0x34b6a7dd
- (id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x34b42789
// declared property getter: - (unsigned long)flags;	// 0x34b6f4a5
- (BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id *)error;	// 0x34b67709
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x34b69039
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x34b69595
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x34b69131
- (id)insertNewEvent;	// 0x34b6ada9
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x34b6ae05
- (id)insertNewReminder;	// 0x34b6a329
// declared property getter: - (id)insertedObjects;	// 0x34b6f3b9
- (id)inviteReplyNotifications;	// 0x34b6bb2d
- (int)inviteReplyNotificationsCount;	// 0x34b6bb05
- (BOOL)isDataProtected;	// 0x34b20459
// declared property getter: - (double)lastDatabaseNotificationTimestamp;	// 0x34b6f479
- (id)localSource;	// 0x34b674f5
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x34b2cb0d
- (BOOL)markCalendarAlerted:(id)alerted;	// 0x34b678d1
- (void)markEventAlerted:(id)alerted;	// 0x34b68fb5
- (BOOL)markInviteReplyNotificationAlerted:(id)alerted;	// 0x34b6bdbd
- (void)markNotificationsAlertedAndSave:(id)save;	// 0x34b6b1c9
- (BOOL)markResourceChangeAlerted:(id)alerted error:(id *)error;	// 0x34b6b86d
- (int)notifiableEventCount;	// 0x34b6b3c9
- (id)objectWithObjectID:(id)objectID;	// 0x34b275dd
// declared property getter: - (id)objectsPendingCommit;	// 0x34b6f505
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;	// 0x34b6b02d
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;	// 0x34b6ae71
- (BOOL)occurrenceCacheOccurrencesAreBeingGenerated;	// 0x34b6ae45
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x34b6a609
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x34b2e08d
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x34b6a69d
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;	// 0x34b6a4e5
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x34b2d1ed
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x34b2da3d
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x34b277f9
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;	// 0x34b6ef59
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x34b6f065
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;	// 0x34b6a5d1
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x34b6a599
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;	// 0x34b6a435
- (id)predicateForNotifiableEvents;	// 0x34b6f1a5
- (id)predicateForNotificationCenterVisibleEvents;	// 0x34b6f1c1
- (id)predicateForRemindersInCalendars:(id)calendars;	// 0x34b6a3ed
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x34b42749
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x34b6a641
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x34b6a6c1
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;	// 0x34b6a6fd
- (id)predicateForUnacknowledgedEvents;	// 0x34b6f1dd
- (id)predicateForUnalertedEvents;	// 0x34b20891
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x34b6f1fd
- (id)publicObjectWithObjectID:(id)objectID;	// 0x34b6cc4d
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x34b2ae4d
// declared property getter: - (id)publicRegisteredObjects;	// 0x34b6f399
- (int)readWriteCalendarCountForEntityType:(unsigned)entityType;	// 0x34b3212d
- (id)readWriteCalendarsForEntityType:(unsigned)entityType;	// 0x34b2c571
- (void)refreshSourcesIfNecessary;	// 0x34b6c625
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x34b2388d
- (id)registerFetchedObjectWithID:(id)anId;	// 0x34b21c31
- (id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;	// 0x34b6c91d
// declared property getter: - (id)registeredObjects;	// 0x34b6f379
// declared property getter: - (id)registeredQueue;	// 0x34b6f545
- (oneway void)release;	// 0x34b20819
- (id)reminderWithExternalURI:(id)externalURI;	// 0x34b69da9
- (id)remindersMatchingPredicate:(id)predicate;	// 0x34b2da75
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x34b68201
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x34b6810d
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x34b3c7f1
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x34b3c7c9
- (BOOL)removeInviteReplyNotification:(id)notification error:(id *)error;	// 0x34b6bead
- (BOOL)removeInviteReplyNotifications:(id)notifications error:(id *)error;	// 0x34b6bee9
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x34b428b9
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x34b42899
- (BOOL)removeResourceChange:(id)change error:(id *)error;	// 0x34b6b96d
- (BOOL)removeResourceChanges:(id)changes error:(id *)error;	// 0x34b6b9a9
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x34b6767d
- (void)reset;	// 0x34b6d5d5
- (id)resourceChangesForEntityTypes:(unsigned)entityTypes;	// 0x34b6b681
- (void)rollback;	// 0x34b6d2d5
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x34b6812d
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x34b680ed
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x34b35485
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x34b3545d
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x34b3e77d
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x34b3fbcd
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x34b675d5
- (int)sequenceNumber;	// 0x34b65f45
- (unsigned)serverPort;	// 0x34b204e1
// declared property setter: - (void)setCalendarQueue:(id)queue;	// 0x34b6f535
// declared property setter: - (void)setDatabase:(id)database;	// 0x34b6f469
// declared property setter: - (void)setDbChangedQueue:(id)queue;	// 0x34b6f595
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x34b6f269
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x34b69a0d
// converted property setter: - (void)setDefaultCalendarForNewReminders:(id)newReminders;	// 0x34b69c99
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x34b6f225
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x34b6f3e9
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x34b6f4b5
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x34b6f3c9
- (BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id *)error;	// 0x34b68c4d
- (BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id *)error;	// 0x34b68d71
// declared property setter: - (void)setLastDatabaseNotificationTimestamp:(double)timestamp;	// 0x34b6f491
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x34b6f515
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x34b6f3a9
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x34b6f389
// declared property setter: - (void)setRegisteredQueue:(id)queue;	// 0x34b6f555
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x34b24205
// declared property setter: - (void)setUnsavedChangesQueue:(id)queue;	// 0x34b6f575
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x34b6f409
// declared property setter: - (void)set_cachedValidatedEmails:(id)emails;	// 0x34b6f5b5
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x34b6f4d5
// declared property setter: - (void)set_defaultCalendarForNewEvents:(id)newEvents;	// 0x34b6f429
// declared property setter: - (void)set_defaultCalendarForNewReminders:(id)newReminders;	// 0x34b6f449
// declared property setter: - (void)set_sources:(id)sources;	// 0x34b6f4f5
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;	// 0x34b6b4f5
- (id)sourceWithIdentifier:(id)identifier;	// 0x34b2b581
// converted property getter: - (id)sources;	// 0x34b219cd
// declared property getter: - (id)timeZone;	// 0x34b20461
- (int)unacknowledgedEventCount;	// 0x34b6b39d
// declared property getter: - (id)unsavedChangesQueue;	// 0x34b6f565
// declared property getter: - (id)updatedObjects;	// 0x34b6f3f9
@end

