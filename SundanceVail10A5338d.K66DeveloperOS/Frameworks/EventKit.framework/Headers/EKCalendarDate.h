/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <NSObject.h> // Unknown library
#import "NSCopying.h"
#import "NSMutableCopying.h"
#import "EventKit-Structs.h"

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x34b3249d; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x34b252f9
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x34b28189
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x34b26b15
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x34b33de9
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x34b8c0dd
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x34b25341
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x34b281cd
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x34b26b55
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x34b26a79
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x34b33e3d
- (double)absoluteTime;	// 0x34b25d0d
- (id)calendarDateByAddingDays:(int)days;	// 0x34b26e69
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x34b26e99
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x34b8c2ad
- (id)calendarDateForDay;	// 0x34b26ce9
- (id)calendarDateForEndOfDay;	// 0x34b26f91
- (id)calendarDateForEndOfMonth;	// 0x34b2be09
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x34b2bc45
- (id)calendarDateForMonth;	// 0x34b2bd25
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x34b25c61
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x34b25c75
- (id)calendarDateForYear;	// 0x34b8c4bd
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x34b3dc0d
- (id)calendarDateWithDate:(id)date;	// 0x34b8c2e1
- (int)compare:(id)compare;	// 0x34b29195
- (id)components;	// 0x34b3dd11
- (id)copyWithZone:(NSZone *)zone;	// 0x34b25c51
- (id)date;	// 0x34b27089
- (unsigned)day;	// 0x34b425d9
- (unsigned)dayOfWeek;	// 0x34b418f9
- (unsigned)dayOfYear;	// 0x34b8c3c1
- (unsigned)daysInMonth;	// 0x34b2bf11
- (unsigned)daysInYear;	// 0x34b8c425
- (void)dealloc;	// 0x34b283dd
- (id)description;	// 0x34b8c15d
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x34b28b95
- (int)differenceInDays:(id)days;	// 0x34b2bc09
- (int)differenceInMonths:(id)months;	// 0x34b4257d
- (int)differenceInYears:(id)years;	// 0x34b8c321
- (id)earlierDate:(id)date;	// 0x34b42995
- (XXStruct_lQVxyC)gregorianDate;	// 0x34b26dc5
- (unsigned)hour;	// 0x34b4109d
- (BOOL)isEqual:(id)equal;	// 0x34b3313d
- (id)laterDate:(id)date;	// 0x34b8c5ad
- (unsigned)minute;	// 0x34b410d1
- (unsigned)month;	// 0x34b8c38d
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x34b41851
- (double)second;	// 0x34b41109
- (int)secondsFromGMT;	// 0x34b8c26d
// converted property getter: - (id)timeZone;	// 0x34b3249d
- (unsigned)weekOfYear;	// 0x34b8c3f1
- (unsigned)weeksInYear;	// 0x34b8c46d
- (unsigned)year;	// 0x34b8c35d
@end

