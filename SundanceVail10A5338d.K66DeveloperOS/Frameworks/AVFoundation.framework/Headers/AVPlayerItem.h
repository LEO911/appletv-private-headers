/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"

@class NSArray, NSString, NSError, AVPlayerItemInternal, NSDate;

@interface AVPlayerItem : NSObject <NSCopying> {
	AVPlayerItemInternal *_playerItem;	// 4 = 0x4
}
@property(assign, nonatomic, getter=_isExternalProtectionRequiredForPlayback, setter=_setExternalProtectionRequiredForPlayback:) BOOL _externalProtectionRequiredForPlayback;	// G=0x3175c4d9; S=0x3175c58d; 
@property(readonly, assign, nonatomic, getter=_isRental) BOOL _rental;	// G=0x3175c641; 
@property(readonly, assign, nonatomic) NSDate *_rentalExpirationDate;	// G=0x3175c755; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackExpirationDate;	// G=0x3175c90d; 
@property(readonly, assign, nonatomic, getter=_isRentalPlaybackStarted) BOOL _rentalPlaybackStarted;	// G=0x3175c7f9; 
@property(readonly, assign, nonatomic) NSDate *_rentalPlaybackStartedDate;	// G=0x3175c869; 
@property(readonly, assign, nonatomic) NSDate *_rentalStartDate;	// G=0x3175c6b1; 
@property(assign) BOOL alwaysMonitorsPlayability;	// G=0x31757c89; S=0x31757e35; converted property
@property(readonly, assign, nonatomic, getter=isApplicationAuthorizedForPlayback) BOOL applicationAuthorizedForPlayback;	// G=0x3175c1f9; 
@property(retain) id audioMix;	// G=0x31758b95; S=0x31758de9; converted property
@property(readonly, assign, nonatomic, getter=isAuthorizationRequiredForPlayback) BOOL authorizationRequiredForPlayback;	// G=0x3175c1dd; 
@property(assign) double bufferingTargetMaximum;	// G=0x317578a1; S=0x31757a35; converted property
@property(assign) double bufferingTargetMinimum;	// G=0x31757a59; S=0x31757bed; converted property
@property(readonly, assign, nonatomic) BOOL canDisplayExternalSubtitles;	// G=0x3175d625; 
@property(readonly, assign, nonatomic, getter=isContentAuthorizedForPlayback) BOOL contentAuthorizedForPlayback;	// G=0x3175c251; 
@property(assign) BOOL continuesPlayingDuringPrerollForRateChange;	// G=0x31758911; S=0x31758abd; converted property
@property(assign) BOOL continuesPlayingDuringPrerollForSeek;	// G=0x317585f9; S=0x317587a5; converted property
@property(copy, nonatomic) NSString *dataYouTubeID;	// G=0x3175d51d; S=0x3175d485; 
@property(assign, nonatomic) BOOL displaysExternalSubtitles;	// G=0x3175d73d; S=0x3175d6b9; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x31754225; 
@property(assign) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x31756d81; S=0x31756f5d; converted property
@property(retain) id gaplessInfo;	// G=0x3175a5a5; S=0x3175a961; converted property
@property(retain) id initialDate;	// G=0x31756a39; S=0x31756a7d; converted property
@property(retain) id initialEstimatedDate;	// G=0x31756b5d; S=0x31756ba1; converted property
@property(assign) BOOL limitReadAhead;	// G=0x31757609; S=0x317577b1; converted property
@property(assign, getter=isNonForcedSubtitleDisplayEnabled) BOOL nonForcedSubtitleDisplayEnabled;	// G=0x3175ba39; S=0x3175ba59; converted property
@property(readonly, assign, nonatomic) NSArray *outputs;	// G=0x3175ded9; 
@property(assign) int playbackLikelyToKeepUpTrigger;	// G=0x31757fcd; S=0x31758175; converted property
@property(assign) XXStruct_pwHToB reversePlaybackEndTime;	// G=0x31757179; S=0x31757355; converted property
@property(assign) BOOL seekingWaitsForVideoCompositionRendering;	// G=0x317594dd; S=0x3175957d; converted property
@property(assign) float soundCheckVolumeNormalization;	// G=0x3175ab49; S=0x3175aaa9; converted property
@property(readonly, assign, nonatomic) int status;	// G=0x31754205; 
@property(retain) id textStyleRules;	// G=0x3175960d; S=0x317596d5; converted property
@property(retain) id variableSpeedAudioProcessor;	// G=0x31759861; S=0x31759955; converted property
@property(retain) id videoComposition;	// G=0x31758ead; S=0x31758ef1; converted property
@property(assign) float volumeAdjustment;	// G=0x3175ac7d; S=0x3175abdd; converted property
@property(assign) BOOL willNeverSeekBackwardsHint;	// G=0x317582e1; S=0x3175848d; converted property
+ (BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;	// 0x3175178d
+ (BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;	// 0x31751779
+ (id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)provider withOptions:(id)options;	// 0x3175c2a9
+ (void)_uninitializeProtectedContentPlaybackSupportSession:(id)session;	// 0x3175c475
+ (BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;	// 0x31757f09
+ (BOOL)automaticallyNotifiesObserversOfAsset;	// 0x3175c1bd
+ (BOOL)automaticallyNotifiesObserversOfAudioMix;	// 0x31758ea9
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;	// 0x31757a39
+ (BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;	// 0x31757bf1
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;	// 0x31758b91
+ (BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;	// 0x31758879
+ (BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;	// 0x31757075
+ (BOOL)automaticallyNotifiesObserversOfGaplessInfo;	// 0x3175aa35
+ (BOOL)automaticallyNotifiesObserversOfLimitReadAhead;	// 0x31757885
+ (BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;	// 0x3175c1d1
+ (BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;	// 0x3175bb25
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;	// 0x3175c1c5
+ (BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;	// 0x3175c1c9
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;	// 0x3175c1c1
+ (BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;	// 0x31758249
+ (BOOL)automaticallyNotifiesObserversOfPresentationSize;	// 0x3175c1d5
+ (BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;	// 0x3175746d
+ (BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;	// 0x3175c1cd
+ (BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;	// 0x31759609
+ (BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;	// 0x3175ab69
+ (BOOL)automaticallyNotifiesObserversOfStatus;	// 0x3175c1b9
+ (BOOL)automaticallyNotifiesObserversOfTextStyleRules;	// 0x31759795
+ (BOOL)automaticallyNotifiesObserversOfTracks;	// 0x3175c1d9
+ (BOOL)automaticallyNotifiesObserversOfVariableSpeedAudioProcessor;	// 0x31759abd
+ (BOOL)automaticallyNotifiesObserversOfVideoComposition;	// 0x31759189
+ (BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;	// 0x3175ac9d
+ (BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;	// 0x31758561
+ (void)initialize;	// 0x31751711
+ (id)playerItemWithAsset:(id)asset;	// 0x317517e9
+ (id)playerItemWithURL:(id)url;	// 0x317517a1
- (id)init;	// 0x31751ad5
- (id)initWithAsset:(id)asset;	// 0x31751d31
- (id)initWithURL:(id)url;	// 0x31751c29
- (int)_CreateSeekID;	// 0x31755f89
- (id)_URL;	// 0x31753dc9
- (void)_addFPListeners;	// 0x31754cd5
- (void)_addSyncLayer:(id)layer;	// 0x3175bd85
- (BOOL)_alwaysMonitorsPlayability;	// 0x31757bf5
- (void)_applyAudioMix;	// 0x31758bd9
- (void)_applyInitialAudioMix;	// 0x31758d95
- (void)_applyMediaSelectionOptions;	// 0x3175b185
- (void)_applySeekingWaitsForVideoCompositionRendering;	// 0x317594fd
- (void)_applyTextStyleRules;	// 0x31759651
- (void)_applyTrackSelectionsFromAlternateTrackGroupSPI;	// 0x3175af5d
- (void)_attachOutputs;	// 0x3175daed
- (void)_attachToPlayer:(id)player forImmediateEnqueueing:(BOOL)immediateEnqueueing shouldAppendItem:(BOOL)item;	// 0x317533ed
- (long long)_availableFileSize;	// 0x3175d3f9
- (double)_bufferingTargetMaximum;	// 0x31757889
- (double)_bufferingTargetMinimum;	// 0x31757a41
- (void)_cacheMediaSelectionOption:(id)option forMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3175b331
- (id)_cachedValueForKey:(id)key;	// 0x3175294d
- (BOOL)_canPlayFastForward;	// 0x31755591
- (BOOL)_canPlayFastReverse;	// 0x317556e5
- (BOOL)_canPlayReverse;	// 0x31755891
- (BOOL)_canPlaySlowForward;	// 0x31755985
- (BOOL)_canPlaySlowReverse;	// 0x31755a79
- (BOOL)_canStepBackward;	// 0x31755c65
- (BOOL)_canStepForward;	// 0x31755b6d
- (int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(id)handler;	// 0x31755fe5
- (void)_changeStatusToFailedWithError:(id)error;	// 0x31754269
- (void)_configurePlaybackItem;	// 0x31752c05
- (BOOL)_continuesPlayingDuringPrerollForRateChange;	// 0x3175887d
- (BOOL)_continuesPlayingDuringPrerollForSeek;	// 0x31758565
- (OpaqueCMTimebase *)_copyTimebase;	// 0x31757471
- (void)_createPlayerConnection:(id)connection shouldAppendItem:(BOOL)item;	// 0x31753355
- (void)_createPlayerItemInternal;	// 0x31751831
- (void)_detachFromPlayer;	// 0x31753c95
- (void)_detachOutputs;	// 0x3175dbed
- (void)_didAccessKVOForKey:(id)key;	// 0x317529a5
- (XXStruct_pwHToB)_duration;	// 0x31754431
- (void)_evaluateSuppression;	// 0x3175c091
- (void)_evaluateVisualContexts;	// 0x3175d88d
- (OpaqueFigCPEProtector *)_figCPEProtector;	// 0x3175bb29
- (OpaqueFigPlaybackItem *)_figPlaybackItem;	// 0x3175290d
- (long long)_fileSize;	// 0x3175d36d
- (XXStruct_pwHToB)_forwardPlaybackEndTime;	// 0x31756c81
- (id)_fpNotificationNames;	// 0x31754a6d
- (BOOL)_hasEnabledVideoMedia;	// 0x3175be81
- (void)_informObserversAboutAvailabilityOfTracks;	// 0x3175415d
- (void)_insertAfterItem:(id)item;	// 0x31753cf9
- (void)_invokeReadyForEnqueueingHandlers;	// 0x31755109
- (BOOL)_isAFileBasedItemThatsReadyToPlay;	// 0x31755839
- (BOOL)_isCurrentPlayerItem;	// 0x317531a9
// declared property getter: - (BOOL)_isExternalProtectionRequiredForPlayback;	// 0x3175c4d9
// declared property getter: - (BOOL)_isRental;	// 0x3175c641
// declared property getter: - (BOOL)_isRentalPlaybackStarted;	// 0x3175c7f9
- (void)_kickAssetObserversIfAppropriate;	// 0x317540c1
- (BOOL)_limitReadAhead;	// 0x31757575
- (id)_loadedTimeRanges;	// 0x3175a225
- (void)_makeNewAssetWithFigPlaybackItem;	// 0x31753f31
- (void)_makeReadyForEnqueueingWithCompletionHandler:(id)completionHandler;	// 0x3175525d
- (id)_nextItem;	// 0x31753cb9
- (id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)error;	// 0x3175be1d
- (int)_playbackLikelyToKeepUpTrigger;	// 0x31757f0d
- (id)_playbackProperties;	// 0x3175a5e9
- (id)_player;	// 0x3175317d
- (void)_playerChangeStatusToFailedWithError:(id)error;	// 0x31753ca9
- (id)_playerConnection;	// 0x317532dd
- (CGSize)_presentationSize;	// 0x31755d59
- (id)_previousItem;	// 0x31753cd9
- (id)_propertyStorage;	// 0x3175292d
- (void)_quietlySetAlwaysMonitorsPlayability:(BOOL)playability;	// 0x31757d65
- (void)_quietlySetBufferingTargetMaximum:(double)maximum;	// 0x3175797d
- (void)_quietlySetBufferingTargetMinimum:(double)minimum;	// 0x31757b35
- (void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x317589ed
- (void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x317586d5
- (void)_quietlySetEQPreset:(int)preset;	// 0x3175d29d
- (void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)algorithm;	// 0x31759905
- (void)_quietlySetForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x31756e99
- (void)_quietlySetLimitReadAhead:(BOOL)ahead;	// 0x317576e5
- (void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x317580a9
- (void)_quietlySetPlaybackProperties:(id)properties;	// 0x3175a68d
- (void)_quietlySetReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x31757291
- (void)_quietlySetSoundCheckVolumeNormalization:(float)normalization;	// 0x3175aa39
- (void)_quietlySetVolumeAdjustment:(float)adjustment;	// 0x3175ab6d
- (void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)_quietlySet;	// 0x317583bd
- (void)_removeFPListeners;	// 0x31754ed1
- (void)_removeFromItems;	// 0x31753d61
- (void)_removeSyncLayer:(id)layer;	// 0x3175bd3d
- (void)_renderingSuppressionDidChangeForOutput:(id)_renderingSuppression;	// 0x3175c169
// declared property getter: - (id)_rentalExpirationDate;	// 0x3175c755
// declared property getter: - (id)_rentalPlaybackExpirationDate;	// 0x3175c90d
// declared property getter: - (id)_rentalPlaybackStartedDate;	// 0x3175c869
// declared property getter: - (id)_rentalStartDate;	// 0x3175c6b1
- (void)_respondToBecomingReadyForBasicInspection;	// 0x3175501d
- (XXStruct_pwHToB)_reversePlaybackEndTime;	// 0x31757079
- (id)_seekableTimeRanges;	// 0x31759ea5
- (void)_selectMediaOption:(id)option inAlternateTrackGroup:(id)alternateTrackGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x3175b625
- (void)_selectMediaOption:(id)option inKeyValueGroup:(id)keyValueGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x3175b6a9
- (void)_selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup cacheIfAppropriate:(BOOL)appropriate;	// 0x3175b6f9
- (void)_selectMediaOption:(id)option usingFigSelectedMediaArrayObtainedFromGroup:(id)group;	// 0x3175b405
- (void)_selectTrackWithID:(int)anId amongTrackIDs:(id)ids;	// 0x3175ae6d
- (void)_setAsset:(id)asset;	// 0x31753e29
- (void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;	// 0x31753fe9
- (void)_setAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x31753e81
- (void)_setAudibleDRMInfo:(id)info;	// 0x3175d1fd
- (void)_setEQPreset:(int)preset;	// 0x3175d30d
- (void)_setEnabledState:(BOOL)state ofTrackID:(int)trackID;	// 0x3175adf9
// declared property setter: - (void)_setExternalProtectionRequiredForPlayback:(BOOL)playback;	// 0x3175c58d
- (void)_setIsCurrentPlayerItem:(BOOL)item;	// 0x317531c9
- (void)_setPlayerConnection:(id)connection;	// 0x317532fd
- (void)_setRampInOutInfo:(id)outInfo;	// 0x3175d15d
- (void)_setSyncLayersOnFigPlaybackItem;	// 0x3175bcb1
- (void)_setTimebaseOnOutputs:(OpaqueCMTimebase *)outputs;	// 0x3175da1d
- (void)_setTimedMetadata:(id)metadata;	// 0x3175bc41
- (void)_setTrackIDsForAssetWithFigPlaybackItem:(id)figPlaybackItem;	// 0x31753ed9
- (void)_setURL:(id)url;	// 0x31753de9
- (void)_setVideoCompositionFrameDuration:(XXStruct_pwHToB)duration;	// 0x3175918d
- (void)_setVideoCompositionInstructions:(id)instructions;	// 0x31759315
- (void)_setVideoCompositionRenderScale:(float)scale;	// 0x31759299
- (void)_setVideoCompositionRenderSize:(CGSize)size;	// 0x31759229
- (void)_setVideoCompositor:(id)compositor;	// 0x317593d1
- (id)_stateDispatchQueue;	// 0x317528ed
- (BOOL)_suppressionForOutputs:(id)outputs;	// 0x3175bfcd
- (id)_trackWithTrackID:(int)trackID;	// 0x31754985
- (id)_tracks;	// 0x31754629
- (void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)seekID finished:(BOOL)finished;	// 0x317561bd
- (void)_updateTimebase;	// 0x317574e9
- (id)_variableSpeedAudioProcessor;	// 0x31759799
- (id)_weakReference;	// 0x317528cd
- (void)_willAccessKVOForKey:(id)key;	// 0x31752979
- (BOOL)_willNeverSeekBackwardsHint;	// 0x3175824d
- (id)accessLog;	// 0x3175c9b1
- (void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void *)context;	// 0x31752a91
- (void)addOutput:(id)output;	// 0x3175dccd
// converted property getter: - (BOOL)alwaysMonitorsPlayability;	// 0x31757c89
- (id)asset;	// 0x317543ed
// converted property getter: - (id)audioMix;	// 0x31758b95
// converted property getter: - (double)bufferingTargetMaximum;	// 0x317578a1
// converted property getter: - (double)bufferingTargetMinimum;	// 0x31757a59
// declared property getter: - (BOOL)canDisplayExternalSubtitles;	// 0x3175d625
- (BOOL)canPlayFastForward;	// 0x31755609
- (BOOL)canPlayFastReverse;	// 0x3175575d
- (BOOL)canPlayReverse;	// 0x317558a9
- (BOOL)canPlaySlowForward;	// 0x3175599d
- (BOOL)canPlaySlowReverse;	// 0x31755a91
- (BOOL)canStepBackward;	// 0x31755c7d
- (BOOL)canStepForward;	// 0x31755b89
- (void)cancelPendingSeeks;	// 0x317568c5
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForRateChange;	// 0x31758911
// converted property getter: - (BOOL)continuesPlayingDuringPrerollForSeek;	// 0x317585f9
- (id)copyWithZone:(NSZone *)zone;	// 0x31752351
- (id)currentDate;	// 0x317568d9
- (id)currentEstimatedDate;	// 0x31756ad5
- (XXStruct_pwHToB)currentTime;	// 0x31755ee1
// declared property getter: - (id)dataYouTubeID;	// 0x3175d51d
- (void)dealloc;	// 0x31751e65
- (id)description;	// 0x31752761
- (void)didChangeValueForKey:(id)key;	// 0x31752a31
- (void)displayExternalSubtitleString:(id)string forced:(BOOL)forced;	// 0x3175d75d
// declared property getter: - (BOOL)displaysExternalSubtitles;	// 0x3175d73d
- (XXStruct_pwHToB)duration;	// 0x317544e9
// declared property getter: - (id)error;	// 0x31754225
- (id)errorLog;	// 0x3175ca79
- (void)finalize;	// 0x31752209
// converted property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x31756d81
// converted property getter: - (id)gaplessInfo;	// 0x3175a5a5
// converted property getter: - (id)initialDate;	// 0x31756a39
// converted property getter: - (id)initialEstimatedDate;	// 0x31756b5d
// declared property getter: - (BOOL)isApplicationAuthorizedForPlayback;	// 0x3175c1f9
// declared property getter: - (BOOL)isAuthorizationRequiredForPlayback;	// 0x3175c1dd
// declared property getter: - (BOOL)isContentAuthorizedForPlayback;	// 0x3175c251
// converted property getter: - (BOOL)isNonForcedSubtitleDisplayEnabled;	// 0x3175ba39
- (BOOL)isPlaybackBufferEmpty;	// 0x31759cb1
- (BOOL)isPlaybackBufferFull;	// 0x31759bb9
- (BOOL)isPlaybackLikelyToKeepUp;	// 0x31759ac1
// converted property getter: - (BOOL)limitReadAhead;	// 0x31757609
- (id)loadedTimeRanges;	// 0x3175a50d
// declared property getter: - (id)outputs;	// 0x3175ded9
- (id)playabilityMetrics;	// 0x31759e21
// converted property getter: - (int)playbackLikelyToKeepUpTrigger;	// 0x31757fcd
- (CGSize)presentationSize;	// 0x31755de5
- (float)progressTowardsPlaybackLikelyToKeepUp;	// 0x31759da9
- (void)removeOutput:(id)output;	// 0x3175dde5
- (id)requestForStreamingKey:(id)streamingKey appID:(id)anId assetID:(id)anId3 errorOut:(id *)anOut;	// 0x3175d561
// converted property getter: - (XXStruct_pwHToB)reversePlaybackEndTime;	// 0x31757179
- (BOOL)seekToDate:(id)date;	// 0x31756a21
- (BOOL)seekToDate:(id)date completionHandler:(id)handler;	// 0x31756961
- (void)seekToTime:(XXStruct_pwHToB)time;	// 0x31756271
- (void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;	// 0x3175632d
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;	// 0x317562a9
- (void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;	// 0x317563a5
- (id)seekableTimeRanges;	// 0x3175a18d
// converted property getter: - (BOOL)seekingWaitsForVideoCompositionRendering;	// 0x317594dd
- (void)selectMediaOption:(id)option inMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3175b7bd
- (void)selectTrackWithID:(int)anId inTrackGroup:(id)trackGroup;	// 0x3175b085
- (id)selectedMediaOptionInMediaSelectionGroup:(id)mediaSelectionGroup;	// 0x3175b7e1
- (int)selectedTrackIDInTrackGroup:(id)trackGroup;	// 0x3175aca1
// converted property setter: - (void)setAlwaysMonitorsPlayability:(BOOL)playability;	// 0x31757e35
// converted property setter: - (void)setAudioMix:(id)mix;	// 0x31758de9
// converted property setter: - (void)setBufferingTargetMaximum:(double)maximum;	// 0x31757a35
// converted property setter: - (void)setBufferingTargetMinimum:(double)minimum;	// 0x31757bed
// converted property setter: - (void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)rateChange;	// 0x31758abd
// converted property setter: - (void)setContinuesPlayingDuringPrerollForSeek:(BOOL)seek;	// 0x317587a5
// declared property setter: - (void)setDataYouTubeID:(id)anId;	// 0x3175d485
// declared property setter: - (void)setDisplaysExternalSubtitles:(BOOL)subtitles;	// 0x3175d6b9
// converted property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x31756f5d
// converted property setter: - (void)setGaplessInfo:(id)info;	// 0x3175a961
// converted property setter: - (void)setInitialDate:(id)date;	// 0x31756a7d
// converted property setter: - (void)setInitialEstimatedDate:(id)date;	// 0x31756ba1
// converted property setter: - (void)setLimitReadAhead:(BOOL)ahead;	// 0x317577b1
// converted property setter: - (void)setNonForcedSubtitleDisplayEnabled:(BOOL)enabled;	// 0x3175ba59
// converted property setter: - (void)setPlaybackLikelyToKeepUpTrigger:(int)keepUpTrigger;	// 0x31758175
// converted property setter: - (void)setReversePlaybackEndTime:(XXStruct_pwHToB)time;	// 0x31757355
// converted property setter: - (void)setSeekingWaitsForVideoCompositionRendering:(BOOL)videoCompositionRendering;	// 0x3175957d
// converted property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x3175aaa9
// converted property setter: - (void)setTextStyleRules:(id)rules;	// 0x317596d5
// converted property setter: - (void)setVariableSpeedAudioProcessor:(id)processor;	// 0x31759955
// converted property setter: - (void)setVideoComposition:(id)composition;	// 0x31758ef1
// converted property setter: - (void)setVolumeAdjustment:(float)adjustment;	// 0x3175abdd
// converted property setter: - (void)setWillNeverSeekBackwardsHint:(BOOL)neverSeekBackwardsHint;	// 0x3175848d
// converted property getter: - (float)soundCheckVolumeNormalization;	// 0x3175ab49
// declared property getter: - (int)status;	// 0x31754205
- (void)stepByCount:(int)count;	// 0x31756bf9
// converted property getter: - (id)textStyleRules;	// 0x3175960d
- (OpaqueCMTimebase *)timebase;	// 0x317574c9
- (id)timedMetadata;	// 0x3175bbfd
- (id)tracks;	// 0x317548cd
- (id)valueForUndefinedKey:(id)undefinedKey;	// 0x31752845
// converted property getter: - (id)variableSpeedAudioProcessor;	// 0x31759861
// converted property getter: - (id)videoComposition;	// 0x31758ead
// converted property getter: - (float)volumeAdjustment;	// 0x3175ac7d
- (void)willChangeValueForKey:(id)key;	// 0x317529d1
// converted property getter: - (BOOL)willNeverSeekBackwardsHint;	// 0x317582e1
@end

