/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "Foundation-Structs.h"
#import "NSFormatter.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x373c738d; S=0x3733422d; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x373c7541; S=0x37354fc5; converted property
@property(retain) id currencyCode;	// G=0x373c86fd; S=0x373c87bd; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x373c7609; S=0x373c76c9; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x373ca141; S=0x373ca201; converted property
@property(retain) id currencySymbol;	// G=0x373c885d; S=0x373c891d; converted property
@property(retain) id decimalSeparator;	// G=0x373c73cd; S=0x373c748d; converted property
@property(retain) id exponentSymbol;	// G=0x373c909d; S=0x373c915d; converted property
@property(assign) unsigned formatWidth;	// G=0x373c9415; S=0x373c94e1; converted property
@property(assign) unsigned formatterBehavior;	// G=0x373c6d3d; S=0x37354dd9; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x373c6cf5; S=0x37343ef9; converted property
@property(retain) id groupingSeparator;	// G=0x373c7831; S=0x373c78f1; converted property
@property(assign) unsigned groupingSize;	// G=0x373c91fd; S=0x3734f7ed; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x373c89bd; S=0x373c8a7d; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x373ca2a1; S=0x373ca37d; converted property
@property(retain) id locale;	// G=0x373c6c4d; S=0x37343e8d; converted property
@property(retain) id maximum;	// G=0x373ca085; S=0x373ca0ad; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x373c9efd; S=0x37349df1; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x373c9ce5; S=0x373c9db1; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x373ca6ad; S=0x373ca779; converted property
@property(retain) id minimum;	// G=0x373c9fc9; S=0x373c9ff1; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x373c9e31; S=0x37355049; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x373c9c19; S=0x373550c9; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x373ca561; S=0x373ca62d; converted property
@property(retain) id minusSign;	// G=0x373c8ddd; S=0x373c8e9d; converted property
@property(retain) id multiplier;	// G=0x373c9561; S=0x373c9621; converted property
@property(retain) id negativeFormat;	// G=0x373c6d7d; S=0x373c6e51; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x373c801d; S=0x373341d5; converted property
@property(retain) id negativePrefix;	// G=0x373c843d; S=0x373c84fd; converted property
@property(retain) id negativeSuffix;	// G=0x373c859d; S=0x373c865d; converted property
@property(retain) id nilSymbol;	// G=0x373c7b21; S=0x37334125; converted property
@property(retain) id notANumberSymbol;	// G=0x373c7c81; S=0x373c7d41; converted property
@property(assign) unsigned numberStyle;	// G=0x373c6bad; S=0x3733929d; converted property
@property(retain) id paddingCharacter;	// G=0x373c96c1; S=0x373c9781; converted property
@property(assign) unsigned paddingPosition;	// G=0x373c9821; S=0x373c98ed; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x373ca7f9; S=0x373ca841; converted property
@property(retain) id perMillSymbol;	// G=0x373c8c7d; S=0x373c8d3d; converted property
@property(retain) id percentSymbol;	// G=0x373c8b1d; S=0x373c8bdd; converted property
@property(retain) id plusSign;	// G=0x373c8f3d; S=0x373c8ffd; converted property
@property(retain) id positiveFormat;	// G=0x373c70ad; S=0x373c7165; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x373c7ebd; S=0x3733417d; converted property
@property(retain) id positivePrefix;	// G=0x373c817d; S=0x373c823d; converted property
@property(retain) id positiveSuffix;	// G=0x373c82dd; S=0x373c839d; converted property
@property(retain) id roundingIncrement;	// G=0x373c9ab9; S=0x373c9b79; converted property
@property(assign) unsigned roundingMode;	// G=0x373c996d; S=0x373c9a39; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x373c92c9; S=0x373c9395; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x373c80a1; S=0x373c8125; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x373c6fd1; S=0x373c7055; converted property
@property(retain) id textAttributesForNil;	// G=0x373c7ba5; S=0x373c7c29; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x373c7de1; S=0x373c7e65; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x373c7f41; S=0x373c7fc5; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x373c72b1; S=0x373c7335; converted property
@property(retain) id textAttributesForZero;	// G=0x373c7a45; S=0x373c7ac9; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x373c7769; S=0x373378a1; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x373ca401; S=0x373ca4dd; converted property
@property(retain) id zeroSymbol;	// G=0x3734ca15; S=0x373c79a5; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x37334115
+ (void)initialize;	// 0x37333d59
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x373551c5
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x37333d7d
- (id)init;	// 0x37333d95
- (id)initWithCoder:(id)coder;	// 0x373c6171
- (void *)__Keynote_NOOP;	// 0x373c5ea1
- (void)_clearFormatter;	// 0x373c5e7d
- (void)_regenerateFormatter;	// 0x37334289
- (void)_reset;	// 0x373c5ea5
// converted property getter: - (BOOL)allowsFloats;	// 0x373c738d
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x373c7541
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x373c62f1
- (id)copyWithZone:(NSZone *)zone;	// 0x373c6061
// converted property getter: - (id)currencyCode;	// 0x373c86fd
// converted property getter: - (id)currencyDecimalSeparator;	// 0x373c7609
// converted property getter: - (id)currencyGroupingSeparator;	// 0x373ca141
// converted property getter: - (id)currencySymbol;	// 0x373c885d
- (void)dealloc;	// 0x37343fcd
// converted property getter: - (id)decimalSeparator;	// 0x373c73cd
- (void)encodeWithCoder:(id)coder;	// 0x373c60c9
// converted property getter: - (id)exponentSymbol;	// 0x373c909d
- (void)finalize;	// 0x373c601d
// converted property getter: - (unsigned)formatWidth;	// 0x373c9415
// converted property getter: - (unsigned)formatterBehavior;	// 0x373c6d3d
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x373c6cf5
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x373c62f5
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x373c6b55
// converted property getter: - (id)groupingSeparator;	// 0x373c7831
// converted property getter: - (unsigned)groupingSize;	// 0x373c91fd
// converted property getter: - (id)internationalCurrencySymbol;	// 0x373c89bd
// converted property getter: - (BOOL)isLenient;	// 0x373ca2a1
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x373ca7f9
// converted property getter: - (id)locale;	// 0x373c6c4d
// converted property getter: - (id)maximum;	// 0x373ca085
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x373c9efd
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x373c9ce5
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x373ca6ad
// converted property getter: - (id)minimum;	// 0x373c9fc9
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x373c9e31
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x373c9c19
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x373ca561
// converted property getter: - (id)minusSign;	// 0x373c8ddd
// converted property getter: - (id)multiplier;	// 0x373c9561
// converted property getter: - (id)negativeFormat;	// 0x373c6d7d
// converted property getter: - (id)negativeInfinitySymbol;	// 0x373c801d
// converted property getter: - (id)negativePrefix;	// 0x373c843d
// converted property getter: - (id)negativeSuffix;	// 0x373c859d
// converted property getter: - (id)nilSymbol;	// 0x373c7b21
// converted property getter: - (id)notANumberSymbol;	// 0x373c7c81
- (id)numberFromString:(id)string;	// 0x373c6b75
// converted property getter: - (unsigned)numberStyle;	// 0x373c6bad
// converted property getter: - (id)paddingCharacter;	// 0x373c96c1
// converted property getter: - (unsigned)paddingPosition;	// 0x373c9821
// converted property getter: - (id)perMillSymbol;	// 0x373c8c7d
// converted property getter: - (id)percentSymbol;	// 0x373c8b1d
// converted property getter: - (id)plusSign;	// 0x373c8f3d
// converted property getter: - (id)positiveFormat;	// 0x373c70ad
// converted property getter: - (id)positiveInfinitySymbol;	// 0x373c7ebd
// converted property getter: - (id)positivePrefix;	// 0x373c817d
// converted property getter: - (id)positiveSuffix;	// 0x373c82dd
// converted property getter: - (id)roundingIncrement;	// 0x373c9ab9
// converted property getter: - (unsigned)roundingMode;	// 0x373c996d
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x373c92c9
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x3733422d
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x37354fc5
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x373c87bd
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x373c76c9
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x373ca201
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x373c891d
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x373c748d
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x373c915d
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x373c94e1
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x37354dd9
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x37343ef9
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x373c78f1
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x3734f7ed
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x373c8a7d
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x373ca37d
// converted property setter: - (void)setLocale:(id)locale;	// 0x37343e8d
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x373ca0ad
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x37349df1
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x373c9db1
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x373ca779
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x373c9ff1
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x37355049
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x373550c9
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x373ca62d
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x373c8e9d
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x373c9621
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x373c6e51
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x373341d5
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x373c84fd
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x373c865d
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x37334125
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x373c7d41
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x3733929d
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x373c9781
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x373c98ed
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x373ca841
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x373c8d3d
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x373c8bdd
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x373c8ffd
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x373c7165
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x3733417d
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x373c823d
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x373c839d
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x373c9b79
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x373c9a39
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x373c9395
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x373c8125
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x373c7055
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x373c7c29
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x373c7e65
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x373c7fc5
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x373c7335
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x373c7ac9
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x373378a1
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x373ca4dd
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x373c79a5
- (id)stringForObjectValue:(id)objectValue;	// 0x3733793d
- (id)stringFromNumber:(id)number;	// 0x37337925
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x373c80a1
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x373c6fd1
// converted property getter: - (id)textAttributesForNil;	// 0x373c7ba5
// converted property getter: - (id)textAttributesForNotANumber;	// 0x373c7de1
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x373c7f41
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x373c72b1
// converted property getter: - (id)textAttributesForZero;	// 0x373c7a45
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x373c7769
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x373ca401
// converted property getter: - (id)zeroSymbol;	// 0x3734ca15
@end

