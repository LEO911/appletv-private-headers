/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <NSObject.h> // Unknown library
#import "Foundation-Structs.h"
#import "NSISConstraint.h"

@class NSString;

@interface NSLayoutConstraint : NSObject <NSISConstraint> {
	id _container;	// 4 = 0x4
	id _firstItem;	// 8 = 0x8
	id _secondItem;	// 12 = 0xc
	float _constant;	// 16 = 0x10
	float _loweredConstant;	// 20 = 0x14
	id _markerAndPositiveExtraVar;	// 24 = 0x18
	id _negativeExtraVar;	// 28 = 0x1c
	float _coefficient;	// 32 = 0x20
	float _priority;	// 36 = 0x24
	unsigned long long _layoutConstraintFlags;	// 40 = 0x28
	id _flange;	// 48 = 0x30
}
@property(retain) id animations;	// G=0x37452769; S=0x37452779; converted property
@property(assign) float constant;	// G=0x37453021; S=0x374530dd; 
@property(assign) id container;	// G=0x37452b5d; S=0x37452b81; 
@property(assign) int firstAttribute;	// G=0x37451e79; 
@property(assign) id firstItem;	// G=0x37456439; @synthesize=_firstItem
@property(readonly, assign) BOOL hasBeenLowered;	// G=0x37452541; 
@property(copy) NSString *identifier;	// G=0x37452749; S=0x37452759; 
@property(assign) float multiplier;	// G=0x37451ffd; 
@property(assign) float priority;	// G=0x37452249; S=0x37452259; 
@property(assign) int relation;	// G=0x37451f35; 
@property(assign) int secondAttribute;	// G=0x37452159; 
@property(assign) id secondItem;	// G=0x37456465; @synthesize=_secondItem
@property(assign) BOOL shouldBeArchived;	// G=0x3745221d; S=0x37452231; 
@property(copy) NSString *symbolicConstant;	// G=0x374532cd; S=0x374532dd; 
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by constant:(float)constant;	// 0x374563fd
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5;	// 0x374563c5
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 constant:(float)constant;	// 0x37456385
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier;	// 0x3745634d
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier constant:(float)constant;	// 0x37456045
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant;	// 0x37455d3d
+ (id)constraintWithItem:(id)item attribute:(int)attribute relatedBy:(int)by toItem:(id)item4 attribute:(int)attribute5 multiplier:(float)multiplier symbolicConstant:(id)constant theme:(id)theme;	// 0x37455d2d
+ (id)constraintsWithVisualFormat:(id)visualFormat options:(unsigned)options metrics:(id)metrics views:(id)views;	// 0x37455d11
- (id)init;	// 0x374532f1
- (id)initWithCoder:(id)coder;	// 0x374545a5
- (void)_addToEngine:(id)engine;	// 0x3745507d
- (BOOL)_addToEngine:(id)engine integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id *)constraints;	// 0x37454e6d
- (float)_allowedMagnitudeForIntegralizationAdjustment;	// 0x374527c9
- (float)_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarkerScaling:(float *)markerScaling;	// 0x37452939
- (void)_clearWeakContainerReference;	// 0x37452b99
- (id)_constantDescriptionForDTrace;	// 0x37452fa9
- (id)_constraintByReplacingItem:(id)item withItem:(id)item2;	// 0x37454925
- (id)_constraintByReplacingView:(id)view withView:(id)view2;	// 0x37454b25
- (int)_constraintType;	// 0x374533d1
- (void)_containerGeometryDidChange;	// 0x37452bad
- (BOOL)_deferDTraceLogging;	// 0x37452ad1
- (BOOL)_describesSameRestrictionAsConstraint:(id)constraint;	// 0x37454b35
- (id)_descriptionforSymbolicConstant;	// 0x37452f1d
- (BOOL)_effectiveConstant:(float *)constant error:(id *)error;	// 0x37452cd1
- (CGSize)_engineToContainerScalingCoefficients;	// 0x374553d9
- (float)_fudgeIncrement;	// 0x374527b9
- (id)_identifier;	// 0x3745256d
- (BOOL)_isFudgeable;	// 0x3745278d
- (BOOL)_loweredConstantIsRounded;	// 0x37452b6d
- (id)_loweredExpression;	// 0x374556e5
- (id)_loweredExpressionReportingConstantIsRounded:(BOOL *)rounded;	// 0x37455419
- (void)_makeExtraVars;	// 0x374551e1
- (id)_markerAndPositiveExtraVar;	// 0x37452a29
- (id)_negativeExtraVar;	// 0x37452a7d
- (BOOL)_nsib_isRedundant;	// 0x37455cd1
- (BOOL)_nsib_isRedundantInEngine:(id)engine;	// 0x374558b5
- (int)_primitiveConstraintType;	// 0x37452afd
- (id)_priorityDescription;	// 0x37453b15
- (void)_removeFromEngine:(id)engine;	// 0x3745509d
- (void)_setDeferDTraceLogging:(BOOL)logging;	// 0x37452ae5
- (void)_setFirstAttribute:(int)attribute;	// 0x37451e89
- (void)_setFirstItem:(id)item;	// 0x3745644d
- (void)_setIdentifier:(id)identifier;	// 0x374525f9
- (void)_setMarkerAndPositiveErrorVar:(id)var;	// 0x37452a39
- (void)_setMultiplier:(float)multiplier;	// 0x3745200d
- (void)_setNegativeExtraVar:(id)var;	// 0x37452a8d
- (void)_setPrimitiveConstraintType:(int)type;	// 0x37452b29
- (void)_setRelation:(int)relation;	// 0x37451f4d
- (void)_setSecondAttribute:(int)attribute;	// 0x3745216d
- (void)_setSecondItem:(id)item;	// 0x37456479
- (void)_setSymbolicConstant:(id)constant;	// 0x37453191
- (void)_setSymbolicConstant:(id)constant constant:(float)constant2;	// 0x37452d75
- (id)_symbolicConstant;	// 0x374530f1
// converted property getter: - (id)animations;	// 0x37452769
- (id)asciiArtDescription;	// 0x374536d5
// declared property getter: - (float)constant;	// 0x37453021
// declared property getter: - (id)container;	// 0x37452b5d
- (void)dealloc;	// 0x37453345
- (id)description;	// 0x37453f5d
- (id)descriptionAccessory;	// 0x37453b95
- (void)encodeWithCoder:(id)coder;	// 0x374542f1
- (id)equationDescription;	// 0x37453b99
// declared property getter: - (int)firstAttribute;	// 0x37451e79
// declared property getter: - (id)firstItem;	// 0x37456439
// declared property getter: - (BOOL)hasBeenLowered;	// 0x37452541
// declared property getter: - (id)identifier;	// 0x37452749
// declared property getter: - (float)multiplier;	// 0x37451ffd
- (float)nsis_allowedMagnitudeForIntegralizationAdjustmentOfConstraintWithMarker:(id)marker;	// 0x37452a0d
- (id)nsis_descriptionOfVariable:(id)variable;	// 0x37455739
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;	// 0x37452a21
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;	// 0x37452a1d
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;	// 0x37452a25
// declared property getter: - (float)priority;	// 0x37452249
- (float)priorityForVariable:(id)variable;	// 0x37454e5d
// declared property getter: - (int)relation;	// 0x37451f35
// declared property getter: - (int)secondAttribute;	// 0x37452159
// declared property getter: - (id)secondItem;	// 0x37456465
// converted property setter: - (void)setAnimations:(id)animations;	// 0x37452779
// declared property setter: - (void)setConstant:(float)constant;	// 0x374530dd
// declared property setter: - (void)setContainer:(id)container;	// 0x37452b81
- (void)setHasBeenLowered:(BOOL)lowered;	// 0x37452555
// declared property setter: - (void)setIdentifier:(id)identifier;	// 0x37452759
// declared property setter: - (void)setPriority:(float)priority;	// 0x37452259
// declared property setter: - (void)setShouldBeArchived:(BOOL)beArchived;	// 0x37452231
// declared property setter: - (void)setSymbolicConstant:(id)constant;	// 0x374532dd
// declared property getter: - (BOOL)shouldBeArchived;	// 0x3745221d
// declared property getter: - (id)symbolicConstant;	// 0x374532cd
@end

