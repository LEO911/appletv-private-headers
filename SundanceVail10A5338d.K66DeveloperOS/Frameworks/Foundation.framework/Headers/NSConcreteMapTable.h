/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSMapTable.h"
#import "Foundation-Structs.h"


__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable {
	NSSlice keys;	// 4 = 0x4
	NSSlice values;	// 68 = 0x44
	unsigned count;	// 132 = 0x84
	unsigned capacity;	// 136 = 0x88
	unsigned keyOptions;	// 140 = 0x8c
	unsigned valueOptions;	// 144 = 0x90
	unsigned mutations;	// 148 = 0x94
	int growLock;	// 152 = 0x98
	bool shouldRehash;	// 156 = 0x9c
}
@property(readonly, assign) unsigned count;	// G=0x3733f49d; converted property
- (id)init;	// 0x373951ed
- (id)initWithCoder:(id)coder;	// 0x373958f9
- (id)initWithKeyOptions:(unsigned)keyOptions valueOptions:(unsigned)options capacity:(unsigned)capacity;	// 0x3730d8f1
- (id)initWithKeyPointerFunctions:(id)keyPointerFunctions valuePointerFunctions:(id)functions capacity:(unsigned)capacity;	// 0x373956e9
- (void)_initBlock;	// 0x3730da5d
- (void)_setBackingStore;	// 0x3730da81
- (id)allKeys;	// 0x3739659d
- (id)allValues;	// 0x3739665d
- (void)assign:(unsigned)assign key:(const void *)key value:(const void *)value isNew:(BOOL)aNew;	// 0x3730db9d
- (void)checkCount:(const char *)count;	// 0x373952ed
- (Class)classForCoder;	// 0x373958dd
- (BOOL)containsKeys:(const void **)keys values:(const void **)values count:(unsigned)count;	// 0x37395c41
- (id)copy;	// 0x37395489
// converted property getter: - (unsigned)count;	// 0x3733f49d
- (unsigned)countByEnumeratingWithState:(XXStruct_kFm5bA *)state objects:(id *)objects count:(unsigned)count;	// 0x373962f1
- (void)dealloc;	// 0x3730dd99
- (id)description;	// 0x373961d1
- (id)dump;	// 0x37395d25
- (void)encodeWithCoder:(id)coder;	// 0x373959a1
- (void *)existingItemForSetItem:(const void *)setItem forAbsentKey:(const void *)absentKey;	// 0x37395f25
- (void)finalize;	// 0x3739616d
- (unsigned)getKeys:(const void **)keys values:(const void **)values;	// 0x3733f4f9
- (void)grow;	// 0x373315a9
- (unsigned)hash;	// 0x37396431
- (BOOL)isEqual:(id)equal;	// 0x37396469
- (id)keyEnumerator;	// 0x373963b5
- (id)keyPointerFunctions;	// 0x37395b79
- (BOOL)mapMember:(const void *)member originalKey:(const void **)key value:(const void **)value;	// 0x37395fc9
- (id)objectEnumerator;	// 0x37396411
- (id)objectForKey:(id)key;	// 0x3730d625
- (void)raiseCountUnderflowException;	// 0x37395211
- (unsigned)realCount;	// 0x37395255
- (void)rehash;	// 0x373960b5
- (unsigned)rehashAround:(unsigned)around;	// 0x3732f0ed
- (void)removeAllItems;	// 0x3731f5b5
- (void)removeObjectForKey:(id)key;	// 0x3732cd2d
- (void)replaceItem:(const void *)item forExistingKey:(const void *)existingKey;	// 0x37396041
- (void)setItem:(const void *)item forAbsentKey:(const void *)absentKey;	// 0x37395de1
- (void)setItem:(const void *)item forKnownAbsentKey:(const void *)knownAbsentKey;	// 0x37395e6d
- (void)setObject:(id)object forKey:(id)key;	// 0x3730db09
- (id)valuePointerFunctions;	// 0x37395bdd
- (void)zeroPairedEntries;	// 0x37395375
@end

