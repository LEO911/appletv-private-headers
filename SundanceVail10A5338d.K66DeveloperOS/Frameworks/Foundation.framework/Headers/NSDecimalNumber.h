/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSNumber.h"
#import "Foundation-Structs.h"


@interface NSDecimalNumber : NSNumber {
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x373bbe85
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x373bbffd
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x373bbf8d
+ (id)decimalNumberWithString:(id)string;	// 0x373bc079
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x373bc0cd
+ (id)defaultBehavior;	// 0x373bcdad
+ (id)maximumDecimalNumber;	// 0x373bc305
+ (id)minimumDecimalNumber;	// 0x373bc299
+ (id)notANumber;	// 0x373bc421
+ (id)numberWithBool:(BOOL)aBool;	// 0x373be449
+ (id)numberWithChar:(BOOL)aChar;	// 0x373be015
+ (id)numberWithDouble:(double)aDouble;	// 0x373be3f9
+ (id)numberWithFloat:(float)aFloat;	// 0x373be3ad
+ (id)numberWithInt:(int)int;	// 0x373be145
+ (id)numberWithInteger:(int)integer;	// 0x373be191
+ (id)numberWithLong:(long)aLong;	// 0x373be275
+ (id)numberWithLongLong:(long long)longLong;	// 0x373be30d
+ (id)numberWithShort:(short)aShort;	// 0x373be0ad
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x373be061
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x373be1dd
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x373be229
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x373be2c1
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x373be35d
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x373be0f9
+ (id)one;	// 0x373bc3b1
+ (void)setDefaultBehavior:(id)behavior;	// 0x373bcd59
+ (id)zero;	// 0x373bc371
- (id)initWithCoder:(id)coder;	// 0x373bc215
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x373bc161
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x373bc125
- (id)initWithString:(id)string;	// 0x373bc19d
- (id)initWithString:(id)string locale:(id)locale;	// 0x373bc1d9
- (bool)_getCString:(char *)string length:(int)length multiplier:(double)multiplier;	// 0x373bd1d1
- (BOOL)boolValue;	// 0x373bd1ad
- (BOOL)charValue;	// 0x373bd031
- (Class)classForCoder;	// 0x373bce1d
- (int)compare:(id)compare;	// 0x373bc491
- (id)copy;	// 0x373bbee5
- (id)copyWithZone:(NSZone *)zone;	// 0x373bbef5
- (id)decimalNumberByAdding:(id)adding;	// 0x373bc65d
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x373bc6ad
- (id)decimalNumberByDividingBy:(id)by;	// 0x373bca11
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x373bca61
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x373bc939
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x373bc989
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x373bcbc1
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x373bcc11
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x373bcae9
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x373bcb39
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x373bcc99
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x373bc811
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x373bc851
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x373bc861
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x373bc8b1
- (XXStruct_9isexA)decimalValue;	// 0x373bc26d
- (id)description;	// 0x373bc251
- (id)descriptionWithLocale:(id)locale;	// 0x373bc265
- (double)doubleValue;	// 0x373bc569
- (void)encodeWithCoder:(id)coder;	// 0x373bce39
- (float)floatValue;	// 0x373bd189
- (void)getValue:(void *)value;	// 0x373bc641
- (int)intValue;	// 0x373bd0c1
- (BOOL)isEqual:(id)equal;	// 0x373bc511
- (long long)longLongValue;	// 0x373bd151
- (long)longValue;	// 0x373bd109
- (const char *)objCType;	// 0x373bc559
- (short)shortValue;	// 0x373bd079
- (unsigned char)unsignedCharValue;	// 0x373bd055
- (unsigned)unsignedIntValue;	// 0x373bd0e5
- (unsigned long long)unsignedLongLongValue;	// 0x373bd16d
- (unsigned long)unsignedLongValue;	// 0x373bd12d
- (unsigned short)unsignedShortValue;	// 0x373bd09d
@end

