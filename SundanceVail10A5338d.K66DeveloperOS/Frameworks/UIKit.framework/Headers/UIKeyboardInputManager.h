/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x30e91bb5; S=0x30e91bad; converted property
@property(assign) unsigned phraseBoundary;	// G=0x30e91be5; S=0x30e91be1; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x30e91bf1; S=0x30cf00f1; converted property
+ (id)activeInstance;	// 0x30cf570d
+ (void)clearAllCentroids;	// 0x30cf5b01
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x30e91dfd
+ (id)keyboardUserDirectory;	// 0x30c389f1
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x30cf5e29
+ (void)releaseSharedInstance;	// 0x30c7b01d
+ (void)removeAllDynamicDictionaries;	// 0x30e91f1d
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x30e91e8d
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x30c82f95
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x30c389bd
- (void)acceptInput;	// 0x30e91b9d
- (BOOL)acceptInputString:(id)string;	// 0x30d0d391
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x30e91bc9
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x30e91ce9
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x30d3bc6d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x30e91b81
- (id)addInputObject:(id)object;	// 0x30e92075
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x30e91c65
- (void)appendToInputContext:(id)inputContext;	// 0x30e91ba1
- (id)autocorrection;	// 0x30e91bd1
- (BOOL)canHandleKeyHitTest;	// 0x30e92111
- (BOOL)canUseGeometryKeyTouch;	// 0x30cf5ad9
- (void)candidateAccepted:(id)accepted;	// 0x30e91de9
- (void)candidateRejected:(id)rejected;	// 0x30e91ded
- (id)candidates;	// 0x30e91bd9
- (id)candidatesForString:(id)string;	// 0x30e91bd5
- (CFArrayRef)chargeableKeys;	// 0x30e9206d
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x30e92071
- (void)clearAllCentroids;	// 0x30e92129
- (void)clearDynamicDictionary;	// 0x30e91df9
- (void)clearInput;	// 0x30e91b99
- (void)clearInputContext;	// 0x30e91ba9
- (void)clearKeyAreas;	// 0x30e92115
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x30e91d05
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x30c857e1
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x30e91d09
- (id)defaultCandidate;	// 0x30e91bf9
- (unsigned)defaultCandidateIndex;	// 0x30e91bfd
- (id)deleteFromInput:(unsigned *)input;	// 0x30e91b91
- (void)deleteFromStrokeHistory;	// 0x30e92121
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x30e91c69
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x30e91c6d
- (BOOL)ignoresDeadKeys;	// 0x30e91de1
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x30e91ce5
- (unsigned)inputCount;	// 0x30e91bb9
- (BOOL)inputEmpty;	// 0x30e91bbd
// converted property getter: - (unsigned)inputIndex;	// 0x30e91bb5
- (void)inputLocationChanged;	// 0x30e91bc5
- (id)inputString;	// 0x30e91bc1
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x30e9211d
- (void)lastAcceptedCandidateCorrected;	// 0x30e91df1
- (unsigned)maximumNumberOfColumnsForSortingMethod:(id)sortingMethod interfaceOrientation:(int)orientation isInline:(BOOL)anInline reducedWidth:(BOOL)width;	// 0x30e91c71
- (unsigned)maximumShortcutLengthAllowed;	// 0x30e92135
- (BOOL)nextInputWouldStartSentence;	// 0x30e91c51
// converted property getter: - (unsigned)phraseBoundary;	// 0x30e91be5
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x30e92125
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x30e92119
- (id)remainingInput;	// 0x30e91bdd
- (id)remapKeyWithString:(id)string stringWithoutModifiers:(id)modifiers modifierFlags:(unsigned)flags;	// 0x30e9210d
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x30e91ba5
- (id)searchStringForMarkedText;	// 0x30e91c05
- (void)setAutoCorrects:(BOOL)corrects;	// 0x30e91cf1
- (void)setAutocapitalizationType:(int)type;	// 0x30e91cf5
- (void)setAutocorrectionHistory:(id)history;	// 0x30e91df5
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x30e92069
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x30e91cfd
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x30e91d01
- (void)setInput:(id)input;	// 0x30e91b8d
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x30e91bad
- (id)setInputObject:(id)object;	// 0x30e920c1
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x30e91cf9
- (void)setLearnsCorrection:(BOOL)correction;	// 0x30e91ddd
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x30e91be1
- (void)setTypologyRecorder:(id)recorder;	// 0x30e9212d
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x30cf00f1
- (id)shadowTyping;	// 0x30e92065
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x30e92139
- (BOOL)shouldExtendPriorWord;	// 0x30d1d461
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x30e91c55
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x30e91c59
- (id)sortingMethods;	// 0x30e91c5d
- (BOOL)stringEndsWord:(id)word;	// 0x30d3bab5
- (id)stringForDoubleKey:(id)doubleKey;	// 0x30e91c19
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x30e91bcd
- (BOOL)suppliesCompletions;	// 0x30e91c11
- (BOOL)supportsNumberKeySelection;	// 0x30e91ced
- (BOOL)supportsSetPhraseBoundary;	// 0x30e91bed
- (BOOL)supportsShortcutConversion;	// 0x30e92131
- (BOOL)suppressCompletionsForFieldEditor;	// 0x30e91c15
- (BOOL)suppressesCandidateDisplay;	// 0x30d5bc61
- (void)textAccepted:(id)accepted;	// 0x30e91de5
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x30e91c61
- (BOOL)usesAutoDeleteWord;	// 0x30e91bf5
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x30e91bf1
- (unsigned)wordHistoryDepth;	// 0x30e91bb1
@end

