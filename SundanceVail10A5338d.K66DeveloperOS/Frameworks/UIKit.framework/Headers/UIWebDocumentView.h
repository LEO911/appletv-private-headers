/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UIWebTiledView.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class UITextInteractionAssistant, WebThreadSafeUndoManager, UIWebRotatingSheet, WebViewReachabilityObserver, DOMHTMLElement, UITextChecker, UIReferenceLibraryViewController, UIViewController, UILongPressGestureRecognizer, UIPopoverController, WebView, UIAutoscroll, CALayer, DOMNode, UITapGestureRecognizer, DOMElement, DOMRange, UIPanGestureRecognizer, UITextInputTraits, UITextRange, NSDictionary, UITextPosition, UIWebSelectionAssistant, UIView, NSMutableSet, NSArray, NSTimer, UIColor, UIImage;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	int _selectionAffinity;	// 580 = 0x244
	UIPopoverController *_definePopoverController;	// 584 = 0x248
	UIReferenceLibraryViewController *_defineViewController;	// 588 = 0x24c
	UIPopoverController *_shortcutPopoverController;	// 592 = 0x250
	UIViewController *_shortcutViewController;	// 596 = 0x254
	DOMElement *_dictationResultPlaceholder;	// 600 = 0x258
	id _dictationResultPlaceholderRemovalObserver;	// 604 = 0x25c
	DOMRange *_rangeToRestoreAfterDictation;	// 608 = 0x260
	BOOL _suppressesIncrementalRendering;	// 612 = 0x264
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x30d98599; S=0x30e43e21; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x30ebf581; S=0x30ebf511; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30e3d4d1; S=0x30e3d4d5; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x30d95385; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x30ebeb95; S=0x30c92fad; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x30c9275d; S=0x30caddf9; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x30d1acf9; S=0x30cae385; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x30e37c71; S=0x30d96ca9; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x30caeaf9; converted property
@property(readonly, assign) int documentType;	// G=0x30caeaa5; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x30e39e65; S=0x30c95d91; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x30e3a0dd; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30ce5699; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30cdc46d; S=0x30ceae35; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x30e3c4f5; 
@property(assign) id interactionDelegate;	// G=0x30e43ca5; S=0x30cae399; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x30e3a131; S=0x30c97ea9; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x30e3a16d; S=0x30e3a155; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x30e37c59; S=0x30c91775; converted property
@property(retain) id markedText;	// G=0x30d3d149; S=0x30d952e9; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30cec5fd; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30e3e11d; S=0x30e3e121; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x30e39e1d; S=0x30e39dd5; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x30e3e759; S=0x30e3e769; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x30ce8999; S=0x30ce58c5; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30ce89ed; S=0x30e3e37d; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x30e3e381; S=0x30d01841; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x30d0925d; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x30e37fd9; S=0x30e37fc1; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x30e39dc1; S=0x30e39da9; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x30e37fad; S=0x30e37f45; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x30e3a145; S=0x30c9802d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x30e3e779; S=0x30e3e789; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x30e3c019; S=0x30e3beed; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30cec681; 
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x30cea481; converted property
@property(assign) BOOL updatesScrollView;	// G=0x30e38319; S=0x30e38301; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x30e3d42d; converted property
@property(readonly, retain) WebView *webView;	// G=0x30c38c15; converted property
+ (id)_createDefaultHighlightView;	// 0x30d4c301
+ (id)_sharedHighlightView;	// 0x30d4c2c9
+ (double)getTimestamp;	// 0x30d4efb9
+ (BOOL)hasLandscapeOrientation;	// 0x30e383fd
+ (void)initialize;	// 0x30e37411
+ (Class)layerClass;	// 0x30c90329
+ (id)standardTextViewPreferences;	// 0x30c8fb11
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x30c8fc19
- (id)initWithFrame:(CGRect)frame;	// 0x30c95d61
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x30c8fd75
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x30d492d5
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x30d98599
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x30e42b75
- (void)_addAdditionalSubview:(id)subview;	// 0x30e391b5
- (void)_addShortcut:(id)shortcut;	// 0x30e3ce99
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x30e388fd
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x30d48745
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x30e45581
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x30e45825
- (void)_cancelLongPressGestureRecognizer;	// 0x30d4c521
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x30c962f1
- (void)_cleanupSheet;	// 0x30e439ad
- (void)_clearAllConsoleMessages;	// 0x30c97a1d
- (void)_clearDoubleTapRect;	// 0x30c979b5
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x30e3d729
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x30e3d9f5
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x30e4461d
- (BOOL)_dataDetectionIsActivated;	// 0x30c963ad
- (void)_define:(id)define;	// 0x30e3caa5
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x30e3aa09
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x30c93349
- (void)_didScroll;	// 0x30d4bf01
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x30e37745
- (float)_documentScale;	// 0x30d4a989
- (id)_documentUrl;	// 0x30e3e3ed
- (CGRect)_documentViewVisibleRect;	// 0x30c97715
- (id)_doubleTapGestureRecognizer;	// 0x30e43e0d
- (void)_doubleTapRecognized:(id)recognized;	// 0x30e42aed
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30e46061
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x30c929bd
- (void)_finishedUsingDictationPlaceholder;	// 0x30e3b035
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x30e3db35
- (id)_focusedOrMainFrame;	// 0x30c37871
- (id)_groupName;	// 0x30d8e075
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x30e3a065
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x30e39e89
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x30e3a0a1
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x30e3969d
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x30d50861
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x30e375e9
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x30e37601
- (BOOL)_isInspectorSearchingForNode;	// 0x30e3e48d
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x30d4e271
- (CGRect)_lastRectForRange:(id)range;	// 0x30e3e06d
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x30c974f5
- (void)_longPressRecognized:(id)recognized;	// 0x30d504a9
- (NSRange)_markedTextNSRange;	// 0x30e3bbbd
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x30e39115
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x30e390a9
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x30c905c1
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x30e38645
- (void)_notifyPlugInViewsOfDidZoom;	// 0x30e38759
- (void)_notifyPlugInViewsOfScaleChange;	// 0x30c97279
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x30e38535
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x30e3965d
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x30e39559
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x30e394f5
- (id)_parentTextView;	// 0x30ceb0e9
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30e3df81
- (void)_presentShortcutController;	// 0x30e3cdc9
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x30e376e1
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x30e45179
- (Class)_printFormatterClass;	// 0x30f64ff9
- (void)_promptForReplace:(id)replace;	// 0x30e3d3d5
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x30cb0085
- (void)_removeAdditionalSubview:(id)subview;	// 0x30e39221
- (void)_removeDefinitionController:(BOOL)controller;	// 0x30d5b819
- (void)_removeShortcutController:(BOOL)controller;	// 0x30e3761d
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x30e39855
- (void)_resetForNewPage;	// 0x30c980cd
- (void)_resetFormDataForFrame:(id)frame;	// 0x30c96861
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x30d50999
- (void)_resetShowingTextStyle:(id)style;	// 0x30e37435
- (void)_reshapePlugInViews;	// 0x30c93bf1
- (id)_responderForBecomeFirstResponder;	// 0x30d98799
- (void)_restoreFlattenedContentLayers;	// 0x30e3dcb9
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x30d4949d
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x30c912e9
- (void)_runLoadBlock:(id)block;	// 0x30c96375
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x30d4b395
- (id)_scriptingInfoForForm:(id)form;	// 0x30e3ea19
- (id)_scriptingInfoForLink:(id)link;	// 0x30e3e79d
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30e3e009
- (CGRect)_selectionClipRect;	// 0x30e3c639
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x30c92941
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x30e432bd
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x30e43e21
- (void)_setDocumentScale:(float)scale;	// 0x30c96f1d
- (void)_setDocumentType:(int)type;	// 0x30caded1
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x30c96971
- (void)_setFont:(id)font;	// 0x30e377a1
- (void)_setParentTextView:(id)view;	// 0x30c91961
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x30d4a96d
- (void)_setTextColor:(id)color;	// 0x30e37871
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x30e3d8e1
- (BOOL)_shouldResetForNewPage;	// 0x30e3e44d
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x30e39729
- (BOOL)_shouldUseInitialScale;	// 0x30e3d6e9
- (void)_showDataDetectorsSheet;	// 0x30e44dc5
- (void)_showImageSheet;	// 0x30e448d1
- (void)_showLinkSheet;	// 0x30e44bad
- (void)_showPendingContentLayers;	// 0x30c9833d
- (void)_showTextStyleOptions:(id)options;	// 0x30e3c8e9
- (void)_singleTapRecognized:(id)recognized;	// 0x30d97a01
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x30d18d69
- (id)_targetURL;	// 0x30e43801
- (id)_textSelectingContainer;	// 0x30d1b0e1
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x30e42b31
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x30e42cf9
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x30e3a3b1
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x30e3a305
- (void)_updateCurrentViewportConfigurationSize;	// 0x30e37ed1
- (void)_updateFixedPositionContent;	// 0x30d4c659
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;	// 0x30c9738d
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x30d52ed1
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x30e3d53d
- (void)_updateScrollViewBoundaryZoomScales;	// 0x30c91a51
- (void)_updateSize;	// 0x30d48e51
- (void)_updateSubviewCaches;	// 0x30d4aaf5
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x30d4a459
- (float)_zoomedDocumentScale;	// 0x30d48de9
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x30e438b1
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x30e43961
- (void)addInputString:(id)string;	// 0x30e3a499
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x30e3a45d
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x30d507a9
- (id)asText;	// 0x30ebfee1
- (void)assistFormNode:(id)node;	// 0x30e3a115
- (void)attemptClick:(id)click;	// 0x30d98125
- (id)automaticallySelectedOverlay;	// 0x30d919f5
- (CGRect)autoscrollContentFrame;	// 0x30e3d4a9
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x30ebf581
- (CGRect)autoscrollDragFrame;	// 0x30e3d485
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30e3e359
- (BOOL)becomeFirstResponder;	// 0x30d9843d
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30e3d4d1
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x30e45d71
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x30e45b6d
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x30e45d09
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x30e45ae1
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x30e45b11
- (void)beginSelectionChange;	// 0x30ce561d
// declared property getter: - (id)beginningOfDocument;	// 0x30d95385
- (BOOL)canBecomeFirstResponder;	// 0x30d98581
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x30d08a15
- (BOOL)canResignFirstResponder;	// 0x30d987c9
- (void)cancelAutoscroll;	// 0x30ebfe0d
- (void)cancelInteraction;	// 0x30d4ef81
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x30d4c0d9
- (BOOL)cancelMouseTracking;	// 0x30e384ad
- (BOOL)cancelTouchTracking;	// 0x30e384e5
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x30ebeb95
- (CGRect)caretRect;	// 0x30c92389
- (CGRect)caretRectForPosition:(id)position;	// 0x30cea0d5
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x30cea381
- (unsigned short)characterAfterCaretSelection;	// 0x30d092bd
- (unsigned short)characterBeforeCaretSelection;	// 0x30d0928d
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30e3b621
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30e3e1f9
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30e3e2ed
- (id)checkSpellingOfString:(id)string;	// 0x30d5cefd
- (void)clearInteractionTimer;	// 0x30d4c289
- (void)clearRangedSelectionInitialExtent;	// 0x30ebecd5
- (void)clearSelection;	// 0x30ebe95d
- (BOOL)clearWKFirstResponder;	// 0x30d60079
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x30ebe9b1
- (id)closestPositionToPoint:(CGPoint)point;	// 0x30d011e5
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30e3e129
- (void)collapseSelection;	// 0x30ebeb41
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x30d3ba3d
- (void)completeInteraction;	// 0x30d5329d
- (void)confirmMarkedText:(id)text;	// 0x30e3b599
- (BOOL)considerHeightForDoubleTap;	// 0x30e3e645
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30e46629
- (BOOL)containsOnlySelectableElements;	// 0x30d977f1
- (CGRect)contentFrameForView:(id)view;	// 0x30ebf5fd
- (id)contentView;	// 0x30e3e4b1
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x30e42859
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x30e3c1c1
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x30d4feb9
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x30d4fe49
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x30d012c5
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x30d4fd8d
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x30e37e71
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x30c92481
- (void)copy:(id)copy;	// 0x30e3c7d5
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x30e38435
- (float)currentDocumentScale;	// 0x30e3e4c5
- (void)cut:(id)cut;	// 0x30e3c709
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x30c9275d
- (void)dealloc;	// 0x30d5b351
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x30e434fd
- (void)deferInteraction;	// 0x30e437b1
- (void)deferredBecomeFirstResponder;	// 0x30e3a1f9
// converted property getter: - (id)delegate;	// 0x30d1acf9
- (void)deleteBackward;	// 0x30d8d005
- (void)deleteFromInput;	// 0x30e3a4ad
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x30e37c71
- (id)dictationInterpretations;	// 0x30e3b329
- (id)dictationResultMetadataForRange:(id)range;	// 0x30e3a9a9
- (void)didEndScroll;	// 0x30d52dc1
- (void)didEndZoom;	// 0x30e3d62d
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x30e3796d
- (void)didMoveToSuperview;	// 0x30c91a3d
- (void)didRemovePlugInView:(id)view;	// 0x30d4b19d
- (void)didRotateInteractionSheet;	// 0x30e39d41
- (void)didZoom;	// 0x30e3d5d5
- (void)disableClearsOnInsertion;	// 0x30e3a4e1
// converted property getter: - (CGRect)documentBounds;	// 0x30caeaf9
// converted property getter: - (int)documentType;	// 0x30caeaa5
// converted property getter: - (CGRect)doubleTapRect;	// 0x30e3a0dd
- (BOOL)doubleTapRectIsReplaced;	// 0x30e3a101
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x30e3e5e5
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x30e4629d
- (unsigned)effectiveDataDetectorTypes;	// 0x30d8dedd
- (void)enableReachability;	// 0x30cad215
- (id)enclosingScrollView;	// 0x30e3e4a1
// declared property getter: - (id)endOfDocument;	// 0x30ce5699
- (void)endPrintMode;	// 0x30e45edd
- (void)endSelectionChange;	// 0x30ce5bad
- (void)ensureSelection;	// 0x30d5c485
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30e3ba9d
- (void)extendCurrentSelection:(int)selection;	// 0x30e3bca9
- (CGRect)firstRectForRange:(id)range;	// 0x30d917fd
- (id)fontForCaretSelection;	// 0x30d92a65
- (void)forceLayout;	// 0x30e3832d
- (id)formElement;	// 0x30d01331
- (void)forwardInvocation:(id)invocation;	// 0x30cad8c9
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x30e38ba5
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30e3afa5
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x30d503e9
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x30d502a1
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x30d4e209
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x30d50315
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x30d4ff9d
- (int)getPasteboardChangeCount;	// 0x30e38f09
- (int)getPasteboardItemsCount;	// 0x30e38aa9
- (void)handleKeyWebEvent:(id)event;	// 0x30e3c281
- (BOOL)hasContent;	// 0x30c37819
- (BOOL)hasDrawnTiles;	// 0x30d460c9
- (BOOL)hasEditableSelection;	// 0x30c92985
- (BOOL)hasMarkedText;	// 0x30c92781
- (BOOL)hasPlugInSubviews;	// 0x30e3c49d
- (BOOL)hasRangedSelection;	// 0x30e3a9e9
- (BOOL)hasRichlyEditableSelection;	// 0x30e38b25
- (BOOL)hasSelection;	// 0x30e3bd29
- (BOOL)hasSimpleTextOnlyStructure;	// 0x30d976dd
- (BOOL)hasText;	// 0x30d3a8e9
- (void)hideTapHighlight;	// 0x30d52ab5
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x30e435b9
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x30d50a15
- (id)hostViewForSheet:(id)sheet;	// 0x30e451cd
- (id)implementationWebView;	// 0x30e3c1d5
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x30e451dd
- (float)initialScale;	// 0x30c96e4d
// declared property getter: - (id)inputDelegate;	// 0x30cdc46d
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x30e3a5c9
- (id)insertDictationResultPlaceholder;	// 0x30e3aa71
- (void)insertText:(id)text;	// 0x30d3bd15
- (void)installGestureRecognizers;	// 0x30c90641
- (float)integralScaleForScale:(float)scale;	// 0x30c971b9
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x30c971d1
// declared property getter: - (id)interactionAssistant;	// 0x30e3c4f5
// converted property getter: - (id)interactionDelegate;	// 0x30e43ca5
- (id)interactionElement;	// 0x30e43cd1
- (CGPoint)interactionLocation;	// 0x30e43ce5
- (BOOL)isCaretInEmptyParagraph;	// 0x30d091fd
- (BOOL)isClassicViewportMode;	// 0x30e37fed
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x30e39e65
- (BOOL)isEditable;	// 0x30e3c585
- (BOOL)isEditing;	// 0x30d07399
- (BOOL)isEditingSingleLineElement;	// 0x30e3a531
- (BOOL)isInInteraction;	// 0x30e42a09
- (BOOL)isInPrintMode;	// 0x30e4542d
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x30e38add
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x30d0149d
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x30d014d5
- (BOOL)isShowingFullScreenPlugInUI;	// 0x30d43ee9
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x30e3a131
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x30e38f3d
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x30e3a16d
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x30d5c741
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x30d5ce29
- (BOOL)keyboardInputChanged:(id)changed;	// 0x30d1d5dd
- (void)keyboardInputChangedSelection:(id)selection;	// 0x30d1ac19
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x30e3c1dd
- (void)layoutSubviews;	// 0x30c938c1
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x30e37b25
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x30c96299
- (void)loadRequest:(id)request;	// 0x30d46149
// converted property getter: - (BOOL)loadsSynchronously;	// 0x30e37c59
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x30e3d41d
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x30e3d40d
- (BOOL)makeWKFirstResponder;	// 0x30d1ae49
// converted property getter: - (id)markedText;	// 0x30d3d149
// declared property getter: - (id)markedTextRange;	// 0x30cec5fd
// declared property getter: - (id)markedTextStyle;	// 0x30e3e11d
- (float)maximumDoubleTapScale;	// 0x30e3d6dd
- (float)maximumScale;	// 0x30e37e5d
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x30e39e1d
- (id)metadataDictionariesForDictationResults;	// 0x30e3a83d
- (id)methodSignatureForSelector:(SEL)selector;	// 0x30c928f1
- (float)minimumScale;	// 0x30c978f1
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x30e37c89
- (float)minimumScaleForSize:(CGSize)size;	// 0x30e3e515
- (BOOL)mouseEventsChangeSelection;	// 0x30e464c9
- (void)moveBackward:(unsigned)backward;	// 0x30e3bdc1
- (void)moveForward:(unsigned)forward;	// 0x30e3be2d
- (BOOL)needsScrollNotifications;	// 0x30e38001
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x30e38459
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30e3b9ed
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x30d1d469
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x30ebea75
- (void)paste:(id)paste;	// 0x30e3d0ad
- (void)performClick:(id)click;	// 0x30e42d99
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x30e427c1
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x30e38bf5
- (BOOL)playsNicelyWithGestures;	// 0x30e3d4cd
- (void)popoverControllerDidDismissPopover:(id)popoverController;	// 0x30e3cd85
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x30ebfee5
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30e3dfe1
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30d1aad5
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x30d01509
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30e3e281
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x30e45259
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30e3b985
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30e3bc75
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30e3bc41
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x30cec685
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30e3ddd9
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x30e3e759
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x30e38e39
- (CGRect)rectContainingCaretSelection;	// 0x30e3b8dd
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30e3b695
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x30e3e525
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x30e3b729
- (void)redrawScaledDocument;	// 0x30e39a01
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30e3b06d
- (void)replace:(id)replace;	// 0x30e3d301
- (void)replaceCurrentWordWithText:(id)text;	// 0x30e3b435
- (void)replaceRange:(id)range withText:(id)text;	// 0x30e3debd
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x30e3b361
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30d951f1
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x30e3bb25
- (BOOL)requiresKeyEvents;	// 0x30cf6c3d
- (void)resetInteraction;	// 0x30d4c251
- (void)resetTilingAfterLoadComplete;	// 0x30c97e0d
- (BOOL)resignFirstResponder;	// 0x30c97ec5
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x30ce90a1
- (void)saveStateToCurrentHistoryItem;	// 0x30d4b341
- (id)scriptingInfoWithChildren;	// 0x30d8f971
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x30ebfe2d
- (void)scrollViewWasRemoved;	// 0x30e3d555
- (void)select:(id)select;	// 0x30e3d265
- (void)selectAll;	// 0x30e3be99
- (void)selectAll:(id)all;	// 0x30e3d2b1
- (void)selectWord;	// 0x30ebe909
- (id)selectedDOMRange;	// 0x30e3bc11
// declared property getter: - (id)selectedTextRange;	// 0x30ce8999
// declared property getter: - (int)selectionAffinity;	// 0x30ce89ed
- (BOOL)selectionAtDocumentStart;	// 0x30e3bd61
- (BOOL)selectionAtWordStart;	// 0x30e3bd91
- (int)selectionBaseWritingDirection;	// 0x30d19d79
- (void)selectionChanged;	// 0x30c91cad
- (void)selectionChanged:(id)changed;	// 0x30c91c2d
// declared property getter: - (int)selectionGranularity;	// 0x30e3e381
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x30ebf4b1
- (NSRange)selectionRange;	// 0x30d5cde9
- (id)selectionRects;	// 0x30ebf1c9
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x30ebf03d
- (id)selectionRectsForRange:(id)range;	// 0x30e3e391
// declared property getter: - (int)selectionState;	// 0x30d0925d
- (id)selectionView;	// 0x30c91d65
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x30d49725
- (void)sendScrollEventIfNecessary;	// 0x30d4c6fd
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x30e38019
- (void)sendScrollWheelEvents;	// 0x30e43a3d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x30d8de51
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x30cae449
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x30e43cb9
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x30c9151d
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x30cadeb5
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x30ebf511
- (void)setBaseWritingDirection:(int)direction;	// 0x30ebec11
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30d1abe1
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30e3d4d5
- (void)setBottomBufferHeight:(float)height;	// 0x30e3c251
- (void)setCaretChangeListener:(id)listener;	// 0x30e3c191
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x30c92fad
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x30cebb29
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x30caddf9
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x30cae385
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x30d96ca9
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x30c95d91
- (void)setDrawsBackground:(BOOL)background;	// 0x30c919b5
- (void)setFrame:(CGRect)frame;	// 0x30c90385
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x30c916e1
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x30e38519
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x30e382e5
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30c91469
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x30ceae35
- (void)setInteractionAssistantGestureRecognizers;	// 0x30e3a225
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x30cae399
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x30c97ea9
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x30e3a155
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x30c91775
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30d952e9
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30e3b4fd
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30e3e121
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30c914e1
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x30e39dd5
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x30c914a5
- (void)setMinimumSize:(CGSize)size;	// 0x30c91215
- (void)setOpaque:(BOOL)opaque;	// 0x30c91971
- (void)setPaused:(BOOL)paused;	// 0x30e3c2bd
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x30e3c2d1
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x30e3e769
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x30ebec45
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x30ebeca5
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x30ebec75
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x30ebed65
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x30ebee05
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x30ebed35
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x30ebed05
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x30ebf385
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x30ebefb9
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x30ce5af9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30ce58c5
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30e3dd39
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30e3e37d
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x30d01841
- (void)setSelectionToEnd;	// 0x30ebf409
- (void)setSelectionToStart;	// 0x30ebf45d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x30ebeea1
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30ebfe31
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x30e37fc1
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x30e39da9
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x30e37f45
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x30cae3b1
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x30c9802d
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x30e3e789
// converted property setter: - (void)setText:(id)text;	// 0x30e3beed
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x30d4815d
- (void)setTilingArea:(int)area;	// 0x30c96869
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x30e38301
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x30d9645d
- (void)setUserStyleSheet:(id)sheet;	// 0x30d8df81
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x30c91555
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x30e37fd9
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x30e39dc1
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x30e3e669
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x30e37fad
- (void)smartExtendRangedSelection:(int)selection;	// 0x30ebf351
// converted property getter: - (id)standaloneEditingElement;	// 0x30e3a145
- (BOOL)startActionSheet;	// 0x30e42929
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x30ebf635
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x30e42825
- (void)stopLoading:(id)loading;	// 0x30d5323d
- (id)subviews;	// 0x30c915f9
- (id)superviewForSheet;	// 0x30e43d01
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x30e38e01
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x30e43ba5
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x30e3e779
- (void)takeTraitsFrom:(id)from;	// 0x30e3c4c9
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x30e42881
// converted property getter: - (id)text;	// 0x30e3c019
- (id)textColorForCaretSelection;	// 0x30e3b659
- (id)textFormElement;	// 0x30e3a12d
- (id)textInDOMRange:(id)domrange;	// 0x30d1b0f9
- (id)textInRange:(id)range;	// 0x30cfb815
- (id)textInputTraits;	// 0x30c91191
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30ce5771
- (void)toggleBaseWritingDirection;	// 0x30ebebbd
- (void)toggleBoldface:(id)boldface;	// 0x30e3c805
- (void)toggleItalics:(id)italics;	// 0x30e3c851
- (void)toggleUnderline:(id)underline;	// 0x30e3c89d
// declared property getter: - (id)tokenizer;	// 0x30cec681
// converted property getter: - (id)undoManager;	// 0x30cea481
- (id)undoManagerForWebView:(id)webView;	// 0x30cea4a5
- (void)unmarkText;	// 0x30d5c379
- (void)updateInteractionElements;	// 0x30e39c49
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x30e3a181
- (void)updateSelection;	// 0x30e3c635
// converted property getter: - (BOOL)updatesScrollView;	// 0x30e38319
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x30cad3b9
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x30e428d1
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x30c96ae5
- (float)viewportHeight;	// 0x30cae28d
- (float)viewportWidth;	// 0x30cadef1
- (CGRect)visibleBounds;	// 0x30d071dd
- (CGRect)visibleContentFrame;	// 0x30e3d461
- (CGRect)visibleContentRect;	// 0x30e3e4d5
- (CGRect)visibleFrame;	// 0x30e3d43d
- (CGRect)visibleRectForSelecting;	// 0x30e464e1
// converted property getter: - (id)webSelectionAssistant;	// 0x30e3d42d
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x30c38b61
// converted property getter: - (id)webView;	// 0x30c38c15
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x30e38295
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x30c963cd
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x30e39289
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x30d4bddd
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x30c97b3d
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x30c9159d
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x30e3c421
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x30e434cd
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x30c97a25
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x30d4be59
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x30d4bd71
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x30d49791
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x30d53bf5
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x30e38229
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x30d4bad9
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x30ce8d9d
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x30d4a215
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x30e39465
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x30e3c3cd
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x30c939c9
- (void)webViewDidDrawTiles:(id)webView;	// 0x30c93cc9
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x30e381e9
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x30e434f5
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x30e381a9
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x30c8fcf1
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x30d01231
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x30e42a2d
- (void)willMoveToSuperview:(id)superview;	// 0x30c91a1d
- (void)willRotateInteractionSheet;	// 0x30e39cdd
- (void)willStartScroll;	// 0x30d52b45
- (void)willStartScrollToTop;	// 0x30e3d4dd
- (void)willStartZoom;	// 0x30e3d569
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x30e3e709
- (void)willZoomToMinimumScale;	// 0x30e3e659
- (id)wordAtPoint:(CGPoint)point;	// 0x30ebef59
- (id)wordContainingCaretSelection;	// 0x30e3ba55
- (int)wordOffsetInRange:(id)range;	// 0x30e3baf1
- (id)wordRangeContainingCaretSelection;	// 0x30e3b955
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x30e389b1
- (float)zoomedDocumentScale;	// 0x30e3e4b5
@end

