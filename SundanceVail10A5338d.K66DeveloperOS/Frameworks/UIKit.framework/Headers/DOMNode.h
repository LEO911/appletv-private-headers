/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import <DOMNode.h> // Unknown library
#import "UIKit-Structs.h"
#import "UIKeyInput.h"

@class UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant, UIResponder;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x30e1bc29
- (id)createPickerCell;	// 0x30e1bc31
- (id)createSelectedItem;	// 0x30e1bc2d
- (id)itemTitle;	// 0x30e1bc39
- (void)populateCell:(id)cell;	// 0x30e1bc35
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x30e31c69
- (id)urlScheme;	// 0x30e31cc1
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x30e3f0b9
- (BOOL)isSecure;	// 0x30e3f1c9
- (BOOL)isTextControl;	// 0x30e3f1c5
- (int)keyboardType;	// 0x30e3f1cd
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x30e40e29; S=0x30e40e2d; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x30e41055; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x30e407e1; S=0x30e407e5; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x30e4108d; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x30e407f9; S=0x30e407fd; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x30e41b3d; S=0x30e41b95; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x30e40d55; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x30e3fa59; S=0x30e3f6ed; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x30e41749; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x30e41cd5; S=0x30e41cd9; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x30e407f1; S=0x30e407f5; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x30e40e89; S=0x30e40fe1; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x30e420e1; S=0x30e42139; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x30e40525; S=0x30e40491; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x30e407e9; S=0x30e407ed; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x30e407d9; S=0x30e407dd; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x30e3f441; S=0x30e3f445; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x30e41b39; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x30e41459
- (NSRange)_markedTextNSRange;	// 0x30e3ffd5
- (CGRect)_selectionClipRect;	// 0x30e40df9
- (id)_textSelectingContainer;	// 0x30e40e31
- (void)acceptedAutoFillWord:(id)word;	// 0x30e40ca1
- (id)automaticallySelectedOverlay;	// 0x30e40801
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x30e41eed
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x30e40e29
- (void)beginSelectionChange;	// 0x30e3f3e1
// declared property getter: - (id)beginningOfDocument;	// 0x30e41055
- (CGRect)caretRect;	// 0x30e40635
- (CGRect)caretRectForPosition:(id)position;	// 0x30e41bf1
- (unsigned short)characterAfterCaretSelection;	// 0x30e3fc7d
- (unsigned short)characterBeforeCaretSelection;	// 0x30e3f6ad
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x30e3f669
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x30e41d9d
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x30e41e81
- (id)closestPositionToPoint:(CGPoint)point;	// 0x30e41cdd
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x30e41d3d
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x30e41861
- (void)confirmMarkedText:(id)text;	// 0x30e3f859
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x30e40c71
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x30e40391
- (id)content;	// 0x30e40e1d
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x30e407e1
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x30e40749
- (id)delegate;	// 0x30e3f395
- (void)deleteBackward;	// 0x30e3f449
- (BOOL)editable;	// 0x30e420d9
- (BOOL)editing;	// 0x30e420dd
// declared property getter: - (id)endOfDocument;	// 0x30e4108d
- (void)endSelectionChange;	// 0x30e3f411
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x30e3ff39
- (void)extendCurrentSelection:(int)selection;	// 0x30e401a9
- (CGRect)firstRectForRange:(id)range;	// 0x30e41341
- (id)fontForCaretSelection;	// 0x30e3fcc1
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x30e3f625
- (void)handleKeyWebEvent:(id)event;	// 0x30e3f39d
- (BOOL)hasContent;	// 0x30e3f1fd
- (BOOL)hasSelection;	// 0x30e40239
- (BOOL)hasText;	// 0x30e41849
// converted property getter: - (int)initialSelectionBehavior;	// 0x30e407f9
// declared property getter: - (id)inputDelegate;	// 0x30e41b3d
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x30e3f575
- (id)insertDictationResultPlaceholder;	// 0x30e3f5cd
- (void)insertText:(id)text;	// 0x30e3f4bd
// declared property getter: - (id)interactionAssistant;	// 0x30e40d55
- (BOOL)isAutoFillMode;	// 0x30e40cfd
- (BOOL)isEditable;	// 0x30e40e21
- (BOOL)isEditing;	// 0x30e40e25
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x30e419a5
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x30e41a59
- (BOOL)isShowingPlaceholder;	// 0x30e407d5
// converted property getter: - (id)markedText;	// 0x30e3fa59
// declared property getter: - (id)markedTextRange;	// 0x30e41749
// declared property getter: - (id)markedTextStyle;	// 0x30e41cd5
- (id)metadataDictionariesForDictationResults;	// 0x30e3f5a5
- (void)moveBackward:(unsigned)backward;	// 0x30e402e9
- (void)moveDown;	// 0x30e416d5
- (void)moveForward:(unsigned)forward;	// 0x30e402ed
- (void)moveLeft;	// 0x30e415ed
- (void)moveRight;	// 0x30e41579
- (void)moveUp;	// 0x30e41661
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30e3fe75
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x30e4189d
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x30e41945
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x30e418d9
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x30e419ed
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x30e41e19
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x30e3fe49
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x30e4016d
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x30e40131
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x30e41aa1
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x30e411b1
- (CGRect)rectContainingCaretSelection;	// 0x30e3fdc5
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x30e3f949
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x30e3f9f5
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x30e3f5f5
- (void)replaceCurrentWordWithText:(id)text;	// 0x30e3fbad
- (void)replaceRange:(id)range withText:(id)text;	// 0x30e412f9
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x30e411fd
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x30e3fac9
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x30e4131d
- (BOOL)requiresKeyEvents;	// 0x30e3f399
// declared property getter: - (int)returnKeyType;	// 0x30e407f1
- (void)selectAll;	// 0x30e402f1
- (id)selectedDOMRange;	// 0x30e40081
// declared property getter: - (id)selectedTextRange;	// 0x30e40e89
// declared property getter: - (int)selectionAffinity;	// 0x30e420e1
- (BOOL)selectionAtDocumentStart;	// 0x30e40279
- (BOOL)selectionAtWordStart;	// 0x30e402b1
- (NSRange)selectionRange;	// 0x30e40035
- (id)selectionRectsForRange:(id)range;	// 0x30e41ef5
- (int)selectionState;	// 0x30e40351
- (id)selectionView;	// 0x30e40dcd
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x30e41ef1
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x30e40e2d
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x30e407e5
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x30e407fd
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x30e41b95
// converted property setter: - (void)setMarkedText:(id)text;	// 0x30e3f6ed
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30e3f79d
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x30e41cd9
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x30e407f5
- (void)setSecure:(BOOL)secure;	// 0x30e3f391
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x30e400b9
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x30e40fe1
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30e40ef9
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x30e42139
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x30e40611
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x30e40575
// converted property setter: - (void)setText:(id)text;	// 0x30e40491
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x30e407ed
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x30e407dd
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x30e3f445
- (void)setupPlaceholderTextIfNeeded;	// 0x30e3f23d
- (void)takeTraitsFrom:(id)from;	// 0x30e3f1d1
// converted property getter: - (id)text;	// 0x30e40525
- (id)textColorForCaretSelection;	// 0x30e3fda9
- (id)textDocument;	// 0x30e4213d
- (id)textInRange:(id)range;	// 0x30e410c5
- (id)textInputTraits;	// 0x30e3f241
// declared property getter: - (int)textLoupeVisibility;	// 0x30e407e9
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x30e41119
// declared property getter: - (id)textSuggestionDelegate;	// 0x30e407d9
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x30e3f441
// declared property getter: - (id)tokenizer;	// 0x30e41b39
- (id)uiWebDocumentView;	// 0x30e3f52d
- (void)unmarkText;	// 0x30e417c5
- (void)updateAutoscroll:(id)autoscroll;	// 0x30e40849
- (void)updateSelection;	// 0x30e40df5
- (id)wordContainingCaretSelection;	// 0x30e3fee1
- (int)wordOffsetInRange:(id)range;	// 0x30e3ff99
- (id)wordRangeContainingCaretSelection;	// 0x30e3fea1
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x30ea6f61
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x30d516cd
- (BOOL)isLikelyToBeginPageLoad;	// 0x30ea7105
- (BOOL)nodeCanBecomeFirstResponder;	// 0x30ea7109
- (BOOL)showsTapHighlight;	// 0x30d515ed
- (id)tapHighlightColor;	// 0x30ea70c1
- (BOOL)touchCalloutEnabled;	// 0x30ea7101
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x30eda4b9
- (id)asDomRange;	// 0x30eda4bd
- (id)asElement;	// 0x30eda1c5
- (CGRect)boundingRect;	// 0x30d4fc1d
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x30eda7cd
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x30d4fb85
- (BOOL)containsBlock:(id)block;	// 0x30eda309
- (BOOL)containsNode:(id)node;	// 0x30eda131
- (BOOL)containsRange:(id)range;	// 0x30eda59d
- (id)enclosingDocument;	// 0x30eda83d
- (id)enclosingElementIncludingSelf;	// 0x30eda1e9
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x30edaa49
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x30eda84d
- (BOOL)hasCustomLineHeight;	// 0x30eda27d
- (BOOL)isSameBlock:(id)block;	// 0x30eda2b9
- (id)largerParent;	// 0x30eda3c1
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x30edaae9
- (id)parentBlock;	// 0x30eda221
- (id)rangeOfContents;	// 0x30eda6a5
- (BOOL)rendersAsBlock;	// 0x30eda4a1
- (BOOL)selectable;	// 0x30eda231
- (BOOL)strictlyContainsBlock:(id)block;	// 0x30eda379
- (BOOL)strictlyContainsNode:(id)node;	// 0x30eda181
- (id)webFrame;	// 0x30d4fd61
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x30eee68d; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x30ef14a5; 
- (unsigned long)_characterAfterCaretSelection;	// 0x30eee7d1
- (unsigned long)_characterBeforeCaretSelection;	// 0x30eee7e5
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x30eee7f9
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x30eee871
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x30eefa71
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x30eef4e1
- (void)_deleteByWord;	// 0x30eef17d
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x30eef509
- (void)_deleteToEndOfLine;	// 0x30eef385
- (void)_deleteToStartOfLine;	// 0x30eef229
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x30eeef71
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x30eeef85
- (void)_extendCurrentSelection:(int)selection;	// 0x30eeedbd
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x30eef929
- (id)_fontForCaretSelection;	// 0x30eefb95
- (id)_fullRange;	// 0x30eef8d1
- (id)_fullText;	// 0x30eeead9
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x30eeed55
- (int)_indexForTextPosition:(id)textPosition;	// 0x30eee6fd
- (BOOL)_isEmptySelection;	// 0x30eeece1
- (id)_keyInput;	// 0x30eee69d
- (CGRect)_lastRectForRange:(id)range;	// 0x30eef6d9
- (void)_moveCurrentSelection:(int)selection;	// 0x30eeee8d
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x30ef0f19
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x30ef110d
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x30ef1209
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x30ef0c0d
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x30ef05f1
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30ef0965
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x30ef0305
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x30ef0b51
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x30ef0469
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30ef0779
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x30ef0091
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x30ef0d25
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x30ef1871
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x30eee741
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x30ef1961
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30ef1309
// declared property getter: - (id)_proxyTextInput;	// 0x30eee68d
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x30eef7dd
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x30eef849
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x30eef88d
- (void)_replaceCurrentWordWithText:(id)text;	// 0x30eef665
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30eef7d9
- (id)_selectableText;	// 0x30eee66d
- (int)_selectionAffinity;	// 0x30ef13ad
- (NSRange)_selectionAsNSRange;	// 0x30eee6a1
- (BOOL)_selectionAtDocumentEnd;	// 0x30eeec4d
- (BOOL)_selectionAtDocumentStart;	// 0x30eeebdd
- (BOOL)_selectionAtWordStart;	// 0x30eeeb45
- (CGRect)_selectionClipRect;	// 0x30eeecbd
- (void)_setCaretSelectionAtEndOfSelection;	// 0x30eef0f5
- (void)_setGestureRecognizers;	// 0x30ef14a9
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30eefed9
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30ef16f1
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30ef1339
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x30eefc85
- (id)_textColorForCaretSelection;	// 0x30eefad5
// declared property getter: - (id)_textSelectingContainer;	// 0x30ef14a5
- (void)_unmarkText;	// 0x30ef1819
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30eefc55
- (id)_wordContainingCaretSelection;	// 0x30eeea41
- (int)selectionAffinity;	// 0x30ef1eb9
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x30ef2011
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x30f2c1dd
- (id)_nextAssistedNode;	// 0x30f2c1e1
- (id)_previousAssistedNode;	// 0x30f2c225
- (BOOL)_requiresAccessoryView;	// 0x30f2c1a5
- (BOOL)_requiresInputView;	// 0x30f2c1bd
- (void)_startAssistingDocumentView:(id)view;	// 0x30f2c119
- (void)_stopAssistingDocumentView:(id)view;	// 0x30f2c14d
- (BOOL)_supportsAccessoryClear;	// 0x30f2c1d9
- (BOOL)_supportsAutoFill;	// 0x30f2c1d5
- (id)_textFormElement;	// 0x30f2c269
@end

