/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import <NSObject.h> // Unknown library
#import "UITextInput_Internal.h"
#import "UIKit-Structs.h"

@class NSString, UIView, NSUndoManager;
@protocol UITextInputPrivate, UITextInput;

@interface UIResponder : NSObject <UITextInput_Internal> {
}
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x30eeae3d; 
@property(readonly, assign, nonatomic) UIResponder *_editingDelegate;	// G=0x30d089f5; 
@property(readonly, assign, nonatomic) UIResponder *_responderForEditing;	// G=0x30d089d1; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x30eedc55; 
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;	// G=0x30ef1f09; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x30ef1ee9; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x30ef1eed; 
@property(readonly, assign) UIView *inputAccessoryView;	// G=0x30c19c09; 
@property(readonly, assign) UIView *inputView;	// G=0x30c19b75; 
@property(copy, nonatomic) NSString *restorationIdentifier;	// G=0x3103b9cd; S=0x3103ba49; 
@property(readonly, assign, nonatomic) NSUndoManager *undoManager;	// G=0x30df60ad; 
+ (void)_cleanupAllStateRestorationTables;	// 0x3103c029
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;	// 0x3103bfd5
+ (void)_finishStateRestoration;	// 0x3103c06d
+ (void)_prepareForSecondPassStateRestoration;	// 0x3103c019
+ (void)_setRestoredIdentifierPathForObject:(id)object identifierPath:(id)path;	// 0x3103bee5
+ (void)_startTrackingObjectsWithIdentifiers;	// 0x3103bde1
+ (void)_stopTrackingObjectsWithIdentifiers;	// 0x3103bdf1
+ (void)_updateStateRestorationIdentifierMap;	// 0x3103be01
+ (id)objectWithRestorationIdentifierPath:(id)restorationIdentifierPath;	// 0x3103ba7d
- (id)_asTextSelection;	// 0x30ef1f05
- (void)_becomeFirstResponder;	// 0x30c191d9
- (void)_becomeFirstResponderAndMakeVisible;	// 0x30df6239
- (BOOL)_becomeFirstResponderWhenPossible;	// 0x30c7cf69
- (void)_beginPinningInputViews;	// 0x30d354b9
- (BOOL)_canBecomeFirstResponderWhenPossible;	// 0x30df6339
// declared property getter: - (CGRect)_caretRect;	// 0x30ef1f09
- (unsigned long)_characterAfterCaretSelection;	// 0x30eeaf81
- (unsigned long)_characterBeforeCaretSelection;	// 0x30eeaf95
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x30eeafa9
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x30eeb021
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x30eec221
- (void)_clearBecomeFirstResponderWhenCapable;	// 0x30ca4269
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event;	// 0x30c26639
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event index:(unsigned)index;	// 0x30c2665d
- (BOOL)_containedInAbsoluteResponderChain;	// 0x30c66899
- (BOOL)_containsResponder:(id)responder;	// 0x30c2e629
- (void)_controlMouseDown:(GSEventRef)down;	// 0x30df61cd
- (void)_controlMouseDragged:(GSEventRef)dragged;	// 0x30df61d5
- (void)_controlMouseUp:(GSEventRef)up;	// 0x30df61d1
- (void)_controlTouchBegan:(id)began withEvent:(id)event;	// 0x30c27659
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;	// 0x30c288f9
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;	// 0x30d40d79
- (id)_deepestDefaultFirstResponder;	// 0x30c36181
- (id)_deepestDefaultFirstResponderMatching:(id)matching;	// 0x30df6249
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x30eebc91
- (void)_deleteByWord;	// 0x30eeb92d
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x30eebcb9
- (void)_deleteToEndOfLine;	// 0x30eebb35
- (void)_deleteToStartOfLine;	// 0x30eeb9d9
// declared property getter: - (id)_editingDelegate;	// 0x30d089f5
- (void)_endPinningInputViews;	// 0x30cdc515
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x30eeb721
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x30eeb735
- (void)_extendCurrentSelection:(int)selection;	// 0x30eeb56d
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x30eec0d9
- (void)_finishResignFirstResponder;	// 0x30c2e75d
- (id)_firstResponder;	// 0x30c2f1a9
- (id)_fontForCaretSelection;	// 0x30eec345
- (id)_fullRange;	// 0x30eec081
- (id)_fullText;	// 0x30eeb289
- (void)_handleKeyEvent:(GSEventRef)event;	// 0x30d15da1
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x30eeb505
- (int)_indexForTextPosition:(id)textPosition;	// 0x30eeaead
- (BOOL)_isEmptySelection;	// 0x30eeb491
- (BOOL)_isPinningInputViews;	// 0x30cdc4b9
- (BOOL)_isRootForKeyResponderCycle;	// 0x30df60a9
- (BOOL)_isSettingFirstResponder;	// 0x30c18ff5
- (BOOL)_isTransitioningFromView:(id)view;	// 0x30d1a8d1
- (BOOL)_isViewController;	// 0x30df62ed
- (id)_keyInput;	// 0x30eeae4d
- (id)_keyboardResponder;	// 0x30c19ce5
- (CGRect)_lastRectForRange:(id)range;	// 0x30eebe89
- (void)_moveCurrentSelection:(int)selection;	// 0x30eeb63d
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x30eed6c9
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x30eed8bd
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x30eed9b9
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x30eed3bd
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x30eecda1
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30eed115
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x30eecab5
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x30eed301
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x30eecc19
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x30eecf29
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x30eec841
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x30eed4d5
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x30eee021
- (id)_nextFirstResponderIfAllowed;	// 0x30c2e66d
- (id)_nextKeyResponder;	// 0x30df60a1
- (id)_nextViewControllerInResponderChain;	// 0x30df62f1
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x30eeaef1
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x30eee111
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30eedab9
- (id)_previousKeyResponder;	// 0x30df60a5
- (BOOL)_promoteDeepestDefaultFirstResponder;	// 0x30c3602d
// declared property getter: - (id)_proxyTextInput;	// 0x30eeae3d
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x30eebf8d
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x30eebff9
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x30eec03d
- (void)_replaceCurrentWordWithText:(id)text;	// 0x30eebe15
- (BOOL)_requiresKeyboardResetOnReload;	// 0x30c1999d
- (BOOL)_requiresKeyboardWhenFirstResponder;	// 0x30c19c65
- (void)_resignFirstResponder;	// 0x30c2f0e9
- (id)_responderForBecomeFirstResponder;	// 0x30c2e625
// declared property getter: - (id)_responderForEditing;	// 0x30d089d1
- (id)_restorationIdentifierPath;	// 0x3103bb15
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x30eebf89
- (id)_selectableText;	// 0x30eeae19
- (int)_selectionAffinity;	// 0x30eedb5d
- (NSRange)_selectionAsNSRange;	// 0x30eeae51
- (BOOL)_selectionAtDocumentEnd;	// 0x30eeb3fd
- (BOOL)_selectionAtDocumentStart;	// 0x30eeb38d
- (BOOL)_selectionAtWordStart;	// 0x30eeb2f5
- (CGRect)_selectionClipRect;	// 0x30eeb46d
- (void)_setCaretSelectionAtEndOfSelection;	// 0x30eeb8a5
- (void)_setFirstResponder:(id)responder;	// 0x30c191ed
- (void)_setGestureRecognizers;	// 0x30eedc59
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30eec689
- (void)_setIsSettingFirstResponder:(BOOL)responder;	// 0x30c19115
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x30eedea1
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30eedae9
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x30eec435
- (BOOL)_shouldUseDefaultFirstResponder;	// 0x30c3621d
- (BOOL)_shouldUseKeyWindowStack;	// 0x30c2f1d1
- (BOOL)_shouldUseNextFirstResponder;	// 0x30c2e6b9
- (id)_targetForAction:(SEL)action withSender:(id)sender;	// 0x30df61d9
- (id)_textColorForCaretSelection;	// 0x30eec285
// declared property getter: - (id)_textSelectingContainer;	// 0x30eedc55
- (void)_trackObjectWithIdentifier:(id)identifier;	// 0x3103b9dd
- (void)_unmarkText;	// 0x30eedfc9
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x30eec405
- (id)_window;	// 0x30c86d95
- (void)_windowBecameKey;	// 0x30d1a861
- (void)_windowResignedKey;	// 0x30d1a85d
- (id)_wordContainingCaretSelection;	// 0x30eeb1f1
- (BOOL)becomeFirstResponder;	// 0x30c18d91
- (void)beginSelectionChange;	// 0x30ef1f8d
- (BOOL)canBecomeFirstResponder;	// 0x30c2f1a5
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x30cdcdc1
- (BOOL)canResignFirstResponder;	// 0x30c2e669
- (void)decodeRestorableStateWithCoder:(id)coder;	// 0x3103c081
- (id)defaultFirstResponder;	// 0x30c36219
- (void)encodeRestorableStateWithCoder:(id)coder;	// 0x3103c07d
- (void)endSelectionChange;	// 0x30ef1fcd
- (id)firstResponder;	// 0x30c19089
- (void)gestureChanged:(GSEventRef)changed;	// 0x30df609d
- (void)gestureEnded:(GSEventRef)ended;	// 0x30df6099
- (void)gestureStarted:(GSEventRef)started;	// 0x30df6095
// declared property getter: - (id)inputAccessoryView;	// 0x30c19c09
// declared property getter: - (id)inputView;	// 0x30c19b75
- (id)interactionAssistant;	// 0x30ef1ee5
// declared property getter: - (BOOL)isEditable;	// 0x30ef1ee9
// declared property getter: - (BOOL)isEditing;	// 0x30ef1eed
- (BOOL)isFirstResponder;	// 0x30c194c1
- (void)motionBegan:(int)began withEvent:(id)event;	// 0x30df6081
- (void)motionCancelled:(int)cancelled withEvent:(id)event;	// 0x30df6089
- (void)motionEnded:(int)ended withEvent:(id)event;	// 0x30df6085
- (void)mouseDown:(GSEventRef)down;	// 0x30df6029
- (void)mouseDragged:(GSEventRef)dragged;	// 0x30df6071
- (void)mouseEntered:(GSEventRef)entered;	// 0x30df6075
- (void)mouseExited:(GSEventRef)exited;	// 0x30df6079
- (void)mouseMoved:(GSEventRef)moved;	// 0x30df607d
- (void)mouseUp:(GSEventRef)up;	// 0x30df606d
- (id)nextFirstResponder;	// 0x30c2e6f1
- (id)nextResponder;	// 0x30c19c05
- (void)reloadInputViews;	// 0x30c19415
- (void)reloadInputViewsWithoutReset;	// 0x30df60e5
- (void)remoteControlReceivedWithEvent:(id)event;	// 0x30df608d
- (BOOL)resignFirstResponder;	// 0x30c162fd
// declared property getter: - (id)restorationIdentifier;	// 0x3103b9cd
- (void)scrollWheel:(GSEventRef)wheel;	// 0x30df6091
- (int)selectionAffinity;	// 0x30eee669
// declared property setter: - (void)setRestorationIdentifier:(id)identifier;	// 0x3103ba49
- (id)textInputView;	// 0x30ef1ebd
- (void)touchesBegan:(id)began withEvent:(id)event;	// 0x30d24e19
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;	// 0x30d1b12d
- (void)touchesEnded:(id)ended withEvent:(id)event;	// 0x30d27485
- (void)touchesMoved:(id)moved withEvent:(id)event;	// 0x30d588f1
// declared property getter: - (id)undoManager;	// 0x30df60ad
@end

