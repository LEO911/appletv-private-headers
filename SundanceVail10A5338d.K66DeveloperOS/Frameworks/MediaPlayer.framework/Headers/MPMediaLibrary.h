/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "NSCoding.h"
#import <NSObject.h> // Unknown library

@class NSCache, NSURL, NSString, NSHashTable, CADisplayLink, NSDate;
@protocol MPMediaLibraryDataProviderPrivate, OS_dispatch_queue;

@interface MPMediaLibrary : NSObject <NSCoding> {
	id<MPMediaLibraryDataProviderPrivate> _libraryDataProvider;	// 4 = 0x4
	int _libraryChangeObservers;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_entityCacheQueue;	// 12 = 0xc
	NSCache *_itemsForCriteriaCache;	// 16 = 0x10
	NSCache *_hasItemsForCriteriaCache;	// 20 = 0x14
	NSCache *_countOfItemsForCriteriaCache;	// 24 = 0x18
	NSCache *_itemResultSetsForCriteriaCache;	// 28 = 0x1c
	NSCache *_collectionsForCriteriaCache;	// 32 = 0x20
	NSCache *_hasCollectionsForCriteriaCache;	// 36 = 0x24
	NSCache *_countOfCollectionsForCriteriaCache;	// 40 = 0x28
	NSCache *_collectionsResultSetsForCriteriaCache;	// 44 = 0x2c
	NSHashTable *_connectionAssertions;	// 48 = 0x30
	BOOL _disconnectAfterReleasingAssertions;	// 52 = 0x34
	float _connectionProgress;	// 56 = 0x38
	CADisplayLink *_connectionProgressDisplayLink;	// 60 = 0x3c
	double _connectionProgressStartTime;	// 64 = 0x40
	int _removalReason;	// 72 = 0x48
	unsigned _filteringDisabled : 1;	// 76 = 0x4c
	unsigned _determinedHasMedia : 1;	// 76 = 0x4c
	unsigned _hasMedia : 1;	// 76 = 0x4c
	unsigned _determinedHasSongs : 1;	// 76 = 0x4c
	unsigned _hasSongs : 1;	// 76 = 0x4c
	unsigned _determinedHasGeniusMixes : 1;	// 76 = 0x4c
	unsigned _hasGeniusMixes : 1;	// 76 = 0x4c
	unsigned _determinedHasPlaylists : 1;	// 76 = 0x4c
	unsigned _hasPlaylists : 1;	// 77 = 0x4d
	unsigned _determinedHasComposers : 1;	// 77 = 0x4d
	unsigned _hasComposers : 1;	// 77 = 0x4d
	unsigned _determinedHasPodcasts : 1;	// 77 = 0x4d
	unsigned _hasPodcasts : 1;	// 77 = 0x4d
	unsigned _determinedHasUniversalBookmarkableItems : 1;	// 77 = 0x4d
	unsigned _hasUniversalBookmarkableContent : 1;	// 77 = 0x4d
	unsigned _determinedHasAudiobooks : 1;	// 77 = 0x4d
	unsigned _hasAudiobooks : 1;	// 78 = 0x4e
	BOOL _hasVideos;	// 79 = 0x4f
	BOOL _determinedHasVideos;	// 80 = 0x50
	BOOL _hasMusicVideos;	// 81 = 0x51
	BOOL _determinedHasMusicVideos;	// 82 = 0x52
	BOOL _hasAudibleAudioBooks;	// 83 = 0x53
	BOOL _determinedHasAudibleAudioBooks;	// 84 = 0x54
	BOOL _hasMovies;	// 85 = 0x55
	BOOL _determinedHasMovies;	// 86 = 0x56
	BOOL _hasCompilations;	// 87 = 0x57
	BOOL _determinedHasCompilations;	// 88 = 0x58
	BOOL _hasITunesU;	// 89 = 0x59
	BOOL _determinedHasITunesU;	// 90 = 0x5a
	BOOL _hasMovieRentals;	// 91 = 0x5b
	BOOL _determinedHasMovieRentals;	// 92 = 0x5c
	BOOL _hasTVShows;	// 93 = 0x5d
	BOOL _determinedHasTVShows;	// 94 = 0x5e
	BOOL _hasVideoPodcasts;	// 95 = 0x5f
	BOOL _determinedHasVideoPodcasts;	// 96 = 0x60
}
@property(readonly, assign, nonatomic) NSString *_syncValidity;	// G=0x3419f00d; 
@property(readonly, assign) float connectionProgress;	// G=0x3419ca79; converted property
@property(assign, getter=isFilteringDisabled) BOOL filteringDisabled;	// G=0x3419cd39; S=0x3419cd4d; converted property
@property(readonly, assign) BOOL hasAudibleAudioBooks;	// G=0x3419bb39; converted property
@property(readonly, assign) BOOL hasCompilations;	// G=0x3419bc2d; converted property
@property(readonly, assign) BOOL hasMovieRentals;	// G=0x3419bd21; converted property
@property(readonly, assign) BOOL hasMovies;	// G=0x3419bbb1; converted property
@property(readonly, assign) BOOL hasMusicVideos;	// G=0x3419babd; converted property
@property(readonly, assign) BOOL hasTVShows;	// G=0x3419bd99; converted property
@property(readonly, assign) BOOL hasVideoPodcasts;	// G=0x3419be15; converted property
@property(readonly, assign) BOOL hasVideos;	// G=0x3419ba41; converted property
@property(readonly, assign, nonatomic) NSDate *lastModifiedDate;	// G=0x3419ae59; 
@property(readonly, assign, nonatomic) NSURL *protectedContentSupportStorageURL;	// G=0x3419ed35; 
@property(assign, nonatomic) int removalReason;	// G=0x3419b081; S=0x3419b091; 
@property(retain) id ubiquitousBookmarkDomainVersionAnchorToken;	// G=0x3419c6c5; S=0x3419c631; converted property
@property(assign) unsigned long long ubiquitousBookmarkEntityRevisionAnchor;	// G=0x3419c679; S=0x3419c5d9; converted property
+ (id)_libraryDataProviders;	// 0x3419e901
+ (id)_libraryForDataProvider:(id)dataProvider;	// 0x3419e829
+ (id)_mediaLibraries;	// 0x3419e6a1
+ (void)addLibraryDataProvider:(id)provider;	// 0x3419e981
+ (void)beginDiscoveringMediaLibraries;	// 0x3419a7d1
+ (id)defaultMediaLibrary;	// 0x34199821
+ (id)deviceMediaLibrary;	// 0x34199951
+ (void)endDiscoveringMediaLibraries;	// 0x3419a7ed
+ (BOOL)isLibraryServerDisabled;	// 0x3419caa9
+ (id)libraryDataProviders;	// 0x3419e949
+ (id)mediaLibraries;	// 0x3419e705
+ (id)mediaLibraryWithUniqueIdentifier:(id)uniqueIdentifier;	// 0x3419e73d
+ (void)reloadDisplayValuesForLibraryDataProvider:(id)libraryDataProvider;	// 0x3419ebe9
+ (void)reloadDynamicPropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x3419eb91
+ (void)reloadInvisiblePropertiesForLibraryDataProvider:(id)libraryDataProvider;	// 0x3419ebbd
+ (void)reloadLibraryDataProvider:(id)provider;	// 0x3419eb65
+ (void)removeLibraryDataProvider:(id)provider removalReason:(int)reason;	// 0x3419ea79
+ (void)setDefaultMediaLibrary:(id)library;	// 0x34199845
+ (void)setLibraryServerDisabled:(BOOL)disabled;	// 0x3419caad
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x3419cab1
+ (void)syncGenerationDidChangeForLibraryDataProvider:(id)syncGeneration;	// 0x3419ec65
+ (void)uniqueIdentifierDidChangeForLibraryDataProvider:(id)uniqueIdentifier;	// 0x3419ecb9
- (id)init;	// 0x34199999
- (id)initWithCoder:(id)coder;	// 0x34199f2d
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined mediaType:(int)type queryHasEntitiesBlock:(id)block;	// 0x3419b9d1
- (BOOL)_checkHasContent:(BOOL *)content determined:(BOOL *)determined queryHasEntitiesBlock:(id)block;	// 0x3419b9b1
- (void)_clearCachedContentDataWithCompletionBlock:(id)completionBlock;	// 0x3419a29d
- (void)_clearCachedEntitiesIncludingResultSets:(BOOL)sets completionBlock:(id)block;	// 0x3419a155
- (void)_clearPendingDisconnection;	// 0x3419dcbd
- (id)_collectionsForQueryCriteria:(id)queryCriteria;	// 0x3419dcd1
- (void)_connectionProgressDisplayLinkCallback:(id)callback;	// 0x3419e381
- (unsigned)_countOfCollectionsForQueryCriteria:(id)queryCriteria;	// 0x3419dc61
- (unsigned)_countOfEntitiesForQueryCritiera:(id)queryCritiera countOfEntitiesForCriteriaCache:(id)criteriaCache entitiesForCriteriaCache:(id)criteriaCache3 loadBlock:(id)block;	// 0x3419d859
- (unsigned)_countOfItemsForQueryCriteria:(id)queryCriteria;	// 0x3419dc05
- (void)_didReceiveMemoryWarning:(id)warning;	// 0x3419a761
- (void)_displayValuesDidChangeNotification:(id)_displayValues;	// 0x3419a775
- (BOOL)_hasCollectionsForQueryCriteria:(id)queryCriteria;	// 0x3419dba9
- (BOOL)_hasEntitiesForQueryCritiera:(id)queryCritiera hasEntitiesForCriteriaCache:(id)criteriaCache entitiesForCriteriaCache:(id)criteriaCache3 loadBlock:(id)block;	// 0x3419d561
- (BOOL)_hasItemsForQueryCriteria:(id)queryCriteria;	// 0x3419db4d
- (id)_initWithLibraryDataProvider:(id)libraryDataProvider;	// 0x3419e569
- (id)_itemsForQueryCriteria:(id)queryCriteria immediate:(BOOL)immediate;	// 0x3419cf8d
- (unsigned long long)_persistentIDForAssetURL:(id)assetURL;	// 0x3419cb45
- (void)_reloadLibraryForContentsChangeWithNotificationInfo:(id)notificationInfo;	// 0x3419a3e9
- (void)_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x3419a575
- (void)_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:(id)notificationInfo;	// 0x3419a705
- (void)_removeConnectionAssertion:(id)assertion;	// 0x3419e441
- (void)_stopConnectionProgressDisplayLink;	// 0x3419e4c1
// declared property getter: - (id)_syncValidity;	// 0x3419f00d
- (id)addPlaylistWithName:(id)name;	// 0x3419c171
- (id)addPlaylistWithName:(id)name activeGeniusPlaylist:(BOOL)playlist;	// 0x3419c185
- (void)beginGeneratingLibraryChangeNotifications;	// 0x3419a809
- (void)connectWithAuthenticationData:(id)authenticationData completionBlock:(id)block;	// 0x3419c889
- (void)connectWithCompletionHandler:(id)completionHandler;	// 0x3419a81d
- (id)connectionAssertionWithIdentifier:(id)identifier;	// 0x3419c909
// converted property getter: - (float)connectionProgress;	// 0x3419ca79
- (unsigned long long)currentEntityRevision;	// 0x3419aebd
- (void)dealloc;	// 0x34199bb9
- (id)description;	// 0x34199d3d
- (void)disconnect;	// 0x3419ada1
- (void)downloadAsset:(id)asset completionHandler:(id)handler;	// 0x3419c4b5
- (void)downloadItem:(id)item completionHandler:(id)handler;	// 0x3419c42d
- (void)encodeWithCoder:(id)coder;	// 0x34199e49
- (void)endGeneratingLibraryChangeNotifications;	// 0x3419ae41
- (void)enumerateEntityChangesAfterSyncAnchor:(id)anchor usingBlock:(id)block;	// 0x3419f02d
- (id)errorResolverForMediaItem:(id)mediaItem;	// 0x341c45e9
- (BOOL)hasAlbums;	// 0x3419b611
- (BOOL)hasArtists;	// 0x3419b5f9
// converted property getter: - (BOOL)hasAudibleAudioBooks;	// 0x3419bb39
- (BOOL)hasAudiobooks;	// 0x3419b8ed
// converted property getter: - (BOOL)hasCompilations;	// 0x3419bc2d
- (BOOL)hasComposers;	// 0x3419b875
- (BOOL)hasGeniusMixes;	// 0x3419b4d5
- (BOOL)hasGenres;	// 0x3419b85d
- (BOOL)hasITunesUContent;	// 0x3419bca5
- (BOOL)hasMedia;	// 0x3419b3ed
- (BOOL)hasMediaOfType:(int)type;	// 0x3419b37d
// converted property getter: - (BOOL)hasMovieRentals;	// 0x3419bd21
// converted property getter: - (BOOL)hasMovies;	// 0x3419bbb1
// converted property getter: - (BOOL)hasMusicVideos;	// 0x3419babd
- (BOOL)hasPlaylists;	// 0x3419b581
- (BOOL)hasPodcasts;	// 0x3419b6ed
- (BOOL)hasSongs;	// 0x3419b629
// converted property getter: - (BOOL)hasTVShows;	// 0x3419bd99
- (BOOL)hasUniversalBookmarkableItems;	// 0x3419b7b1
// converted property getter: - (BOOL)hasVideoPodcasts;	// 0x3419be15
// converted property getter: - (BOOL)hasVideos;	// 0x3419ba41
- (unsigned)hash;	// 0x34199e21
- (BOOL)isArtworkIdenticalForItem:(id)item otherItem:(id)item2 compareRepresentativeItemArtwork:(BOOL)artwork missingAlwaysComparesEqual:(BOOL)equal;	// 0x3419c395
- (BOOL)isEqual:(id)equal;	// 0x34199db1
// converted property getter: - (BOOL)isFilteringDisabled;	// 0x3419cd39
- (BOOL)isGeniusEnabled;	// 0x3419c769
- (BOOL)isValidAssetURL:(id)url;	// 0x3419cab5
- (BOOL)itemExistsWithPersistentID:(unsigned long long)persistentID;	// 0x3419cd6d
- (id)itemWithPersistentID:(unsigned long long)persistentID;	// 0x3419be91
- (id)itemWithPersistentID:(unsigned long long)persistentID verifyExistence:(BOOL)existence;	// 0x3419beb5
- (id)itemWithStoreID:(unsigned long long)storeID;	// 0x3419bf35
// declared property getter: - (id)lastModifiedDate;	// 0x3419ae59
- (id)libraryDataProvider;	// 0x3419e691
- (BOOL)libraryHasBeenModifiedWithToken:(id)token;	// 0x3419b23d
- (id)modificationToken;	// 0x3419b0c1
- (id)name;	// 0x3419b061
- (id)newPlaylistWithPersistentID:(unsigned long long)persistentID;	// 0x3419bfb1
- (id)pathForAssetURL:(id)assetURL;	// 0x3419cad1
- (void)performReadTransactionWithBlock:(id)block;	// 0x3419ca15
- (BOOL)performTransactionWithBlock:(id)block;	// 0x3419c9b9
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)persistentID;	// 0x3419ce7d
- (long long)playlistGeneration;	// 0x3419af55
- (id)playlistWithPersistentID:(unsigned long long)persistentID;	// 0x3419c149
- (void)populateLocationPropertiesOfItem:(id)item withPath:(id)path;	// 0x3419c569
- (id)preferredAudioLanguages;	// 0x3419c7b1
- (id)preferredSubtitleLanguages;	// 0x3419c7f9
// declared property getter: - (id)protectedContentSupportStorageURL;	// 0x3419ed35
// declared property getter: - (int)removalReason;	// 0x3419b081
- (BOOL)removeItems:(id)items;	// 0x3419c265
- (BOOL)removePlaylist:(id)playlist;	// 0x3419c32d
- (BOOL)requiresAuthentication;	// 0x3419c841
// converted property setter: - (void)setFilteringDisabled:(BOOL)disabled;	// 0x3419cd4d
// declared property setter: - (void)setRemovalReason:(int)reason;	// 0x3419b091
// converted property setter: - (void)setUbiquitousBookmarkDomainVersionAnchorToken:(id)token;	// 0x3419c631
// converted property setter: - (void)setUbiquitousBookmarkEntityRevisionAnchor:(unsigned long long)anchor;	// 0x3419c5d9
- (int)status;	// 0x3419afed
- (unsigned long long)syncGenerationID;	// 0x3419af09
- (id)syncValidity;	// 0x3419ca89
// converted property getter: - (id)ubiquitousBookmarkDomainVersionAnchorToken;	// 0x3419c6c5
// converted property getter: - (unsigned long long)ubiquitousBookmarkEntityRevisionAnchor;	// 0x3419c679
- (id)uniqueIdentifier;	// 0x3419b0a1
- (void)updateUbiquitousValuesForTrackWithKey:(id)key mediaPropertyValues:(id)values timestamp:(double)timestamp;	// 0x3419c70d
- (BOOL)writable;	// 0x3419afa5
@end

