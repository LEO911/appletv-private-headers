/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library

@class MPMediaItem, NSURL, NSArray, MPAVController, MPImageCache, MPAlternateTracks, NSData, MPQueueFeeder, AVPlayerItem, AVAsset, NSString;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x34152ae1; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x34152ae9; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x34152af1; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x34152aed; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x34152ce1; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x3415506d; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x34152ae5; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x34152af9; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x34152afd; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x341540dd; S=0x3415507d; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x341523fd; 
@property(retain, nonatomic) AVPlayerItem *avPlayerItem;	// G=0x34155dc5; S=0x34155dd5; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x34152b01; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x341540b5; S=0x3415508d; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x341541a9; S=0x3415412d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x34152b05; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x34152b29; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x34152b51; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x34152cdd; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x341550bd; S=0x341550cd; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x34152b0d; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x34152b09; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x34152bb1; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x34152b69; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x341546c9; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x34154711; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x341547b1; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x34154729; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x3415509d; S=0x341550ad; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x34152e31; S=0x34152e75; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x34152b25; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x34152c49; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x34152c4d; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x34152c51; S=0x34152f19; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x34152ffd; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x341550dd; S=0x341550ed; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x341550fd; S=0x34155115; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x34152bc1; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x34152d01; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x34205cb9; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x34152d05; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x34154589; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x341548f1; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x34154909; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x34152861; S=0x34152879; 
@property(assign, nonatomic) MPAVController *player;	// G=0x3415512d; S=0x3415513d; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x341525ed; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x34152d5d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x34152df5; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x3415514d; S=0x34152f51; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x341527c9; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x34152c65; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x34152899; S=0x3415289d; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x34152fc1; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x34154a01; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x34154921; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x34154575; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x34154105; S=0x3415515d; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x3415310d; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x34154585; 
@property(assign) BOOL userSkippedPlayback;	// G=0x34152909; S=0x341528e5; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x34154675; S=0x3415469d; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x34154595; 
+ (id)URLFromPath:(id)path;	// 0x34151d55
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x34152af5
+ (unsigned)defaultScaleMode;	// 0x34151d41
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x34151d45
- (id)init;	// 0x34151e05
- (id)initWithAsset:(id)asset;	// 0x34151e91
- (id)initWithURL:(id)url;	// 0x34151e19
- (id)initWithURL:(id)url options:(id)options;	// 0x34151e55
- (void)_applicationDidBecomeActive:(id)_application;	// 0x34154d69
- (void)_checkAllowsBlockingDurationCall;	// 0x3415596d
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x34154d49
- (double)_durationFromExternalMetadataIfAvailable;	// 0x34154751
- (double)_durationInSeconds;	// 0x3415291d
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x34154411
- (void)_itemAttributeAvailableKey:(id)key;	// 0x34154b41
- (void)_loadAssetAndPlayerItem;	// 0x341522cd
- (void)_loadAssetProperties;	// 0x34154fa1
- (void)_loadTimeMarkersAsync;	// 0x34153f95
- (void)_loadTimeMarkersBlocking;	// 0x34153111
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x34154eb1
- (void)_realoadEmbeddedTimeMarkers;	// 0x34152fc5
- (void)_releaseAllTimeMarkers;	// 0x34152085
- (id)_seekableTimeRanges;	// 0x34154df1
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x341541b9
// declared property getter: - (id)album;	// 0x34152ae1
// declared property getter: - (id)albumArtist;	// 0x34152ae9
// declared property getter: - (unsigned)albumTrackCount;	// 0x34152af1
// declared property getter: - (unsigned)albumTrackNumber;	// 0x34152aed
// declared property getter: - (BOOL)allowsEQ;	// 0x34152ce1
// declared property getter: - (id)alternateTracks;	// 0x3415506d
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x34152c25
// declared property getter: - (id)artist;	// 0x34152ae5
// declared property getter: - (id)artworkImageData;	// 0x34152af9
// declared property getter: - (id)artworkMIMEType;	// 0x34152afd
- (id)artworkTimeMarkerForTime:(double)time;	// 0x3415435d
// declared property getter: - (id)artworkTimeMarkers;	// 0x341540dd
// declared property getter: - (id)asset;	// 0x341523fd
// declared property getter: - (id)avPlayerItem;	// 0x34155dc5
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x3415516d
// declared property getter: - (BOOL)canSeedGenius;	// 0x34152b01
- (id)chapterTimeMarkerForTime:(double)time;	// 0x34154321
// declared property getter: - (id)chapterTimeMarkers;	// 0x341540b5
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x341543d5
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x341541a9
// declared property getter: - (id)composer;	// 0x34152b05
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x34152b29
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x34152b51
// declared property getter: - (int)customAVEQPreset;	// 0x34152cdd
- (void)dealloc;	// 0x34152105
// declared property getter: - (float)defaultPlaybackRate;	// 0x341550bd
// declared property getter: - (unsigned)discCount;	// 0x34152b0d
// declared property getter: - (unsigned)discNumber;	// 0x34152b09
// declared property getter: - (id)displayableText;	// 0x34152bb1
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x34152b69
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x341546c9
// declared property getter: - (double)durationFromExternalMetadata;	// 0x34154711
// declared property getter: - (double)durationIfAvailable;	// 0x341547b1
- (double)durationInSeconds;	// 0x34152971
// declared property getter: - (BOOL)durationIsValid;	// 0x34154729
// declared property getter: - (id)feeder;	// 0x3415509d
- (void)flushNowPlayingCaches;	// 0x3415229d
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x34152e31
// declared property getter: - (id)genre;	// 0x34152b25
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x34152c01
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x34152c49
// declared property getter: - (BOOL)hasDisplayableText;	// 0x34152c4d
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x34152c51
// declared property getter: - (id)imageCache;	// 0x34152ffd
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x34153001
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x3415302d
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x341550dd
// declared property getter: - (BOOL)isAssetLoaded;	// 0x341550fd
- (BOOL)isAssetURLValid;	// 0x34152b21
- (BOOL)isPlaceholderForItem:(id)item;	// 0x34152b1d
// declared property getter: - (BOOL)isStreamable;	// 0x34152c65
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x34151d49
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x34152b11
- (void)loadAssetAndPlayerItem;	// 0x341522c9
- (id)localeForAssetTrack:(id)assetTrack;	// 0x34155aa1
- (id)localizedPositionInPlaylistString;	// 0x34154599
// declared property getter: - (id)lyrics;	// 0x34152bc1
// declared property getter: - (id)mainTitle;	// 0x34152d01
// declared property getter: - (id)mediaItem;	// 0x34205cb9
// declared property getter: - (CGSize)naturalSize;	// 0x34152d05
- (void)notePlaybackFinishedByHittingEnd;	// 0x34152845
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x34154d89
- (id)path;	// 0x341529e1
// declared property getter: - (unsigned long long)persistentID;	// 0x34154589
// declared property getter: - (double)playableDuration;	// 0x341548f1
// declared property getter: - (double)playableDurationIfAvailable;	// 0x34154909
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x34152861
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x34152d61
// declared property getter: - (id)player;	// 0x3415512d
// declared property getter: - (id)playerItem;	// 0x341525ed
// declared property getter: - (id)podcastURL;	// 0x34152d5d
// declared property getter: - (CGSize)presentationSize;	// 0x34152df5
- (void)reevaluateType;	// 0x34155b01
- (void)resetBookkeeping;	// 0x341527e9
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x34152ebd
- (void)setAlternateAudioTrackID:(int)anId;	// 0x3415283d
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x3415507d
// declared property setter: - (void)setAvPlayerItem:(id)item;	// 0x34155dd5
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x3415508d
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x3415412d
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x341550cd
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x341550ad
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x34152e75
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x34152f19
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x341550ed
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x34155115
- (void)setOverrideDuration:(double)duration;	// 0x34152f3d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x34152879
- (void)setPlaybackFinishedTime:(double)time;	// 0x3415287d
- (void)setPlaybackStoppedTime:(double)time;	// 0x34152841
// declared property setter: - (void)setPlayer:(id)player;	// 0x3415513d
- (void)setRating:(float)rating;	// 0x34152895
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x34152f51
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x3415289d
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x3415515d
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x341528a1
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x341528b9
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x341528e5
// declared property setter: - (void)setVideoID:(id)anId;	// 0x3415469d
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x34155321
- (void)setupPlaybackInfo;	// 0x34155389
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x3415514d
// declared property getter: - (int)status;	// 0x341527c9
// declared property getter: - (int)subtitleTrackID;	// 0x34152899
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x34152fc1
// declared property getter: - (double)timeOfSeekableEnd;	// 0x34154a01
// declared property getter: - (double)timeOfSeekableStart;	// 0x34154921
- (id)titlesForTime:(double)time;	// 0x34153109
// declared property getter: - (unsigned)type;	// 0x34154575
- (id)url;	// 0x34152a6d
- (id)urlTimeMarkerForTime:(double)time;	// 0x34154399
// declared property getter: - (id)urlTimeMarkers;	// 0x34154105
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x3415310d
// declared property getter: - (float)userRating;	// 0x34154585
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x34152909
// declared property getter: - (id)videoID;	// 0x34154675
// declared property getter: - (BOOL)wantsSubtitles;	// 0x34154595
@end

