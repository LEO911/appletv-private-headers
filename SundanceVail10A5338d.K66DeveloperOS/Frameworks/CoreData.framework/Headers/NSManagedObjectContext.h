/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "NSLocking.h"
#import <NSObject.h> // Unknown library
#import "NSCoding.h"
#import "CoreData-Structs.h"

@class NSMutableSet, NSUndoManager;

@interface NSManagedObjectContext : NSObject <NSCoding, NSLocking> {
	int _spinLock;	// 4 = 0x4
	id _parentObjectStore;	// 8 = 0x8
	NSUndoManager *_undoManager;	// 12 = 0xc
	void *_dispatchQueue;	// 16 = 0x10
	managedObjectContextFlags _flags;	// 20 = 0x14
	NSMutableSet *_unprocessedChanges;	// 24 = 0x18
	NSMutableSet *_unprocessedDeletes;	// 28 = 0x1c
	NSMutableSet *_unprocessedInserts;	// 32 = 0x20
	NSMutableSet *_insertedObjects;	// 36 = 0x24
	NSMutableSet *_deletedObjects;	// 40 = 0x28
	NSMutableSet *_changedObjects;	// 44 = 0x2c
	NSMutableSet *_lockedObjects;	// 48 = 0x30
	NSMutableSet *_refreshedObjects;	// 52 = 0x34
	id _infoByGID;	// 56 = 0x38
	id *_cachedObsInfoByEntity;	// 60 = 0x3c
	short _undoTransactionID;	// 64 = 0x40
	id _lock;	// 68 = 0x44
	long _lockCount;	// 72 = 0x48
	long _objectStoreLockCount;	// 76 = 0x4c
	double _fetchTimestamp;	// 80 = 0x50
	id _delegate;	// 88 = 0x58
	id _referenceQueue;	// 92 = 0x5c
	id _userinfo;	// 96 = 0x60
	id _mergePolicy;	// 100 = 0x64
	int _cd_rc;	// 104 = 0x68
	int _ignoreChangeNotification;	// 108 = 0x6c
	id _editors;	// 112 = 0x70
	id *_debuggingRecords;	// 116 = 0x74
	id _childObjectStores;	// 120 = 0x78
	id _reserved2;	// 124 = 0x7c
}
@property(readonly, retain) NSMutableSet *deletedObjects;	// G=0x365e0f55; converted property
@property(readonly, retain) NSMutableSet *insertedObjects;	// G=0x365e0e91; converted property
@property(retain) id mergePolicy;	// G=0x365dfc29; S=0x36580929; converted property
@property(retain) id parentContext;	// G=0x365e5871; S=0x365e5721; converted property
@property(retain) id persistentStoreCoordinator;	// G=0x36580ac5; S=0x3658079d; converted property
@property(assign) BOOL propagatesDeletesAtEndOfEvent;	// G=0x365e1019; S=0x365e102d; converted property
@property(assign) BOOL retainsRegisteredObjects;	// G=0x365dfb75; S=0x365dfad5; converted property
@property(assign) double stalenessInterval;	// G=0x365949e1; S=0x365a0751; converted property
@property(retain) NSUndoManager *undoManager;	// G=0x365e0acd; S=0x365808b5; converted property
+ (void)__Multithreading_Violation_AllThatIsLeftToUsIsHonor__;	// 0x365df8ad
+ (BOOL)_handleError:(id)error withError:(id *)error2;	// 0x365e8169
+ (void)_mergeChangesFromRemoteContextSave:(id)remoteContextSave intoContexts:(id)contexts;	// 0x365ef431
+ (BOOL)accessInstanceVariablesDirectly;	// 0x365df8a9
+ (void)initialize;	// 0x3659e77d
- (id)init;	// 0x3656e001
- (id)initWithCoder:(id)coder;	// 0x365e3f55
- (id)initWithConcurrencyType:(unsigned)concurrencyType;	// 0x3656e03d
- (BOOL)_attemptCoalesceChangesForFetch;	// 0x365eb9f1
- (unsigned)_batchRetainedObjects:(id *)objects forCount:(unsigned)count withIDs:(id *)ids optionalHandler:(id)handler withInlineStorage:(BOOL)inlineStorage;	// 0x365e7951
- (void)_changeIDsForManagedObjects:(id)managedObjects toIDs:(id)ids;	// 0x365e7475
- (void)_clearChangedThisTransaction:(id)transaction;	// 0x365eb2f1
- (void)_clearDeletions;	// 0x365e98dd
- (void)_clearInsertions;	// 0x365e96ed
- (void)_clearLockedObjects;	// 0x365e9cbd
- (void)_clearOriginalSnapshotAndInitializeRec:(id)rec;	// 0x365ea119
- (void)_clearOriginalSnapshotForObject:(id)object;	// 0x365ea0e1
- (void)_clearRefreshedObjects;	// 0x365e9cdd
- (void)_clearUnprocessedDeletions;	// 0x365e99d5
- (void)_clearUnprocessedInsertions;	// 0x365e97e5
- (void)_clearUnprocessedUpdates;	// 0x365e9bc5
- (void)_clearUpdates;	// 0x365e9acd
- (id)_committedSnapshotForObject:(id)object;	// 0x365ea189
- (void)_copyChildObject:(id)object toParentObject:(id)parentObject fromChildContext:(id)childContext;	// 0x365f06b5
- (unsigned)_countWithMergedChangesForRequest:(id)request possibleChanges:(id)changes possibleDeletes:(id)deletes error:(id *)error;	// 0x365e62cd
- (unsigned)_countWithNoChangesForRequest:(id)request error:(id *)error;	// 0x365e59d5
- (void)_createAndPostChangeNotification:(id)notification withDeletions:(id)deletions withUpdates:(id)updates withRefreshes:(id)refreshes;	// 0x365ed441
- (id)_createStoreFetchRequestForFetchRequest:(id)fetchRequest;	// 0x36581e65
- (id)_currentEventSnapshotForObject:(id)object;	// 0x365ea1f1
- (void)_dealloc__;	// 0x3659598d
- (id)_debuggingOnly_localObjectForGlobalID:(id)globalID;	// 0x365ea0cd
- (id)_delegate;	// 0x365ef3b9
- (void)_didSaveChanges;	// 0x365e8a49
- (void)_disableChangeNotifications;	// 0x365967d5
- (BOOL)_disableDiscardEditing;	// 0x365ea29d
- (void)_dispose:(BOOL)dispose;	// 0x36595e0d
- (void)_disposeObjects:(id *)objects count:(unsigned long)count notifyParent:(BOOL)parent;	// 0x36596955
- (void)_enableChangeNotifications;	// 0x365ee041
- (void)_enqueueEndOfEventNotification;	// 0x365edcb5
- (void)_establishEventSnapshotsForObject:(id)object;	// 0x365ea2e9
- (void)_forceInsertionForObject:(id)object;	// 0x365eb0dd
- (void)_forceRemoveFromDeletedObjects:(id)deletedObjects;	// 0x365eb229
- (void)_forgetObject:(id)object propagateToObjectStore:(BOOL)objectStore;	// 0x365e6c1d
- (void)_forgetObject:(id)object propagateToObjectStore:(BOOL)objectStore removeFromRegistry:(BOOL)registry;	// 0x365e6c3d
- (id)_globalIDForObject:(id)object;	// 0x365ea151
- (id)_globalIDsForObjects:(id)objects;	// 0x365e7895
- (void)_growRegistrationCollectionForEntitySlot:(unsigned)entitySlot toSize:(unsigned)size;	// 0x365ea231
- (BOOL)_handleError:(id)error withError:(id *)error2;	// 0x365e8145
- (BOOL)_handleOptimisticLockingError:(id)error withError:(id *)error2;	// 0x365e80e9
- (BOOL)_ignoringChangeNotifications;	// 0x365ee029
- (id)_implicitObservationInfoForEntity:(id)entity forResultingClass:(Class *)resultingClass;	// 0x365eea15
- (void)_incrementUndoTransactionID;	// 0x365eb2c9
- (void)_informParentStore:(id)store noLongerInterestedInObjects:(id)objects;	// 0x365e9e1d
- (void)_informParentStore:(id)store ofInterestInObjects:(id)objects;	// 0x365e9cfd
- (id)_initWithParentObjectStore:(unsigned long)parentObjectStore;	// 0x3656e155
- (void)_insertObjectWithGlobalID:(id)globalID globalID:(id)anId;	// 0x365e7f9d
- (BOOL)_isDeallocating;	// 0x365dfca1
- (BOOL)_isImportContext;	// 0x365ea24d
- (BOOL)_isPreflightSaveInProgress;	// 0x365ea261
- (void)_lockObjectStore_oldSchool;	// 0x3659b6ed
- (void)_managedObjectContextEditor:(id)editor didCommit:(BOOL)commit contextInfo:(XXStruct_gOQQEC *)info;	// 0x365ef2d5
- (void)_mergeChangesFromDidSaveDictionary:(id)_mergeChangesFrom usingObjectIDs:(BOOL)ids;	// 0x365e444d
- (void)_mergeChangesFromRemoteContextSave:(id)remoteContextSave;	// 0x365f02ed
- (void)_mergeRefreshEpilogueForObject:(id)object mergeChanges:(BOOL)changes;	// 0x365e3b5d
- (BOOL)_mergeRefreshObject:(id)object mergeChanges:(BOOL)changes withPersistentSnapshot:(id)persistentSnapshot;	// 0x365e3779
- (id)_newSaveRequestForCurrentState;	// 0x365e58c9
- (id)_newUnchangedLockedObjects;	// 0x365e7ba1
- (void)_noop:(id)noop;	// 0x365ed851
- (void)_objectsChangedInStore:(id)store;	// 0x365ee0c1
- (id)_orderedSetWithResultsFromFetchRequest:(id)fetchRequest;	// 0x365ef3c9
- (id)_parentObjectsForFetchRequest:(id)fetchRequest inContext:(id)context error:(id *)error;	// 0x365f0f35
- (BOOL)_parentObtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x365f2115
- (id)_parentProcessSaveRequest:(id)request inContext:(id)context error:(id *)error;	// 0x365f09dd
- (id)_parentStore;	// 0x365947e9
- (void)_postObjectsDidChangeNotificationWithUserInfo:(id)_postObjects;	// 0x365edfbd
- (void)_postRefreshedObjectsNotificationAndClearList;	// 0x365eb6fd
- (BOOL)_postSaveNotifications;	// 0x365ea2d5
- (BOOL)_prepareForPushChanges:(id *)pushChanges;	// 0x365eb785
- (void)_processChangedStoreConfigurationNotification:(id)notification;	// 0x365ee151
- (BOOL)_processDeletedObjects:(id *)objects;	// 0x365ed859
- (void)_processEndOfEventNotification:(id)eventNotification;	// 0x365edd31
- (void)_processNotificationQueue;	// 0x365eef6d
- (void)_processObjectStoreChanges:(id)changes;	// 0x365edcb1
- (void)_processOwnedObjects:(id)objects set:(id)set boolean:(BOOL)boolean;	// 0x365ed855
- (id)_processPendingDeletions:(id)deletions withInsertions:(id)insertions withUpdates:(id)updates withNewlyForgottenList:(id)newlyForgottenList withRemovedChangedObjects:(id)removedChangedObjects;	// 0x365ecc75
- (id)_processPendingInsertions:(id)insertions withDeletions:(id)deletions withUpdates:(id)updates;	// 0x365ecfdd
- (id)_processPendingUpdates:(id)updates;	// 0x365ed265
- (BOOL)_processRecentChanges:(id *)changes;	// 0x365eba69
- (void)_processRecentlyForgottenObjects:(id)objects;	// 0x365ed70d
- (void)_processReferenceQueue:(BOOL)queue;	// 0x36597391
- (void)_propagateDeletesUsingTable:(id)table;	// 0x365ed8f5
- (BOOL)_propagatePendingDeletesAtEndOfEvent:(id *)event;	// 0x365ed585
- (void)_refaultObject:(id)object globalID:(id)anId boolean:(BOOL)boolean;	// 0x365e7d2d
- (void)_registerClearStateWithUndoManager;	// 0x365eb599
- (void)_registerForNotificationsWithCoordinator:(id)coordinator;	// 0x36580859
- (void)_registerObject:(id)object withID:(id)anId;	// 0x36591559
- (void)_registerUndoForDeletedObjects:(id)deletedObjects withDeletedChanges:(id)deletedChanges;	// 0x365eaa89
- (void)_registerUndoForInsertedObjects:(id)insertedObjects;	// 0x365ea585
- (void)_registerUndoForModifiedObjects:(id)modifiedObjects;	// 0x365eae75
- (void)_registerUndoForOperation:(SEL)operation withObjects:(id)objects withExtraArguments:(id)extraArguments;	// 0x365eaea9
- (void)_resetAllChanges;	// 0x365e765d
- (id)_retainedObjectWithID:(id)anId;	// 0x365e7469
- (id)_retainedObjectWithID:(id)anId error:(id *)error;	// 0x365e7011
- (id)_retainedObjectWithID:(id)anId optionalHandler:(id)handler withInlineStorage:(BOOL)inlineStorage;	// 0x3659027d
- (id)_retainedObjectsFromRemovedStore:(id)removedStore;	// 0x365e9f3d
- (id)_retainedRegisteredObjects;	// 0x365e779d
- (void)_sendCommitEditingSelectorToTarget:(id)target sender:(id)sender selector:(SEL)selector flag:(BOOL)flag contextInfo:(void *)info delayed:(BOOL)delayed;	// 0x365ef189
- (void)_sendOrEnqueueNotification:(id)notification selector:(SEL)selector;	// 0x365eeb61
- (void)_setDelegate:(id)delegate;	// 0x365ef3a9
- (void)_setDisableDiscardEditing:(BOOL)editing;	// 0x365ea279
- (void)_setIsUbiquityImportContext:(BOOL)context;	// 0x365ea235
- (void)_setParentContext:(id)context;	// 0x365e568d
- (void)_setPersistentStoreCoordinator:(id)coordinator;	// 0x365df8b1
- (void)_setPostSaveNotifications:(BOOL)notifications;	// 0x365ea2b1
- (void)_setRetainsRegisteredObjects:(BOOL)objects;	// 0x365df9b9
- (void)_setStopsValidationAfterFirstError:(BOOL)error;	// 0x365ea0a5
- (void)_setUndoManager:(id)manager;	// 0x365e0a05
- (void)_startObservingUndoManagerNotifications;	// 0x365ee055
- (void)_stopConflictDetectionForObject:(id)object;	// 0x365ef411
- (void)_stopObservingUndoManagerNotifications;	// 0x36595cd9
- (BOOL)_stopsValidationAfterFirstError;	// 0x365ea08d
- (void)_storeConfigurationChanged:(id)changed;	// 0x365ee135
- (BOOL)_tryRetain;	// 0x365dfc51
- (void)_undoDeletions:(id)deletions;	// 0x365ea63d
- (void)_undoDeletionsMovedToUpdates:(id)updates;	// 0x365ea5b9
- (void)_undoInsertions:(id)insertions;	// 0x365ea3b1
- (void)_undoManagerCheckpoint:(id)checkpoint;	// 0x365ed829
- (void)_undoUpdates:(id)updates;	// 0x365eacb9
- (void)_unlockObjectStore_oldSchool;	// 0x3659e075
- (void)_unregisterForNotifications;	// 0x36595c2d
- (void)_updateUndoTransactionForThisEvent:(id)thisEvent withDeletions:(id)deletions withUpdates:(id)updates;	// 0x365ed689
- (void)_updateUnprocessedOwnDestinations:(id)destinations;	// 0x365eb6f9
- (BOOL)_validateChangesForSave:(id *)save;	// 0x365e82bd
- (BOOL)_validateDeletesUsingTable:(id)table withError:(id *)error;	// 0x365e827d
- (BOOL)_validateObjects:(id)objects forOperation:(unsigned)operation error:(id *)error exhaustive:(BOOL)exhaustive forSave:(BOOL)save;	// 0x365e8459
- (void)assignObject:(id)object toPersistentStore:(id)persistentStore;	// 0x365e0af1
- (BOOL)commitEditing;	// 0x365ef111
- (void)commitEditingWithDelegate:(id)delegate didCommitSelector:(SEL)selector contextInfo:(void *)info;	// 0x365ef289
- (unsigned)concurrencyType;	// 0x365e589d
- (unsigned)countForFetchRequest:(id)fetchRequest error:(id *)error;	// 0x365e250d
- (void)dealloc;	// 0x3659592d
- (void)deleteObject:(id)object;	// 0x365e1671
// converted property getter: - (id)deletedObjects;	// 0x365e0f55
- (void)detectConflictsForObject:(id)object;	// 0x365e4225
- (void)discardEditing;	// 0x365ef0a1
- (void)encodeWithCoder:(id)coder;	// 0x365e4131
- (id)executeFetchRequest:(id)request error:(id *)error;	// 0x36580c8d
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;	// 0x365f11cd
- (id)existingObjectWithID:(id)anId error:(id *)error;	// 0x365e23d9
- (void)finalize;	// 0x365e0819
- (BOOL)hasChanges;	// 0x36581e51
- (void)insertObject:(id)object;	// 0x365e156d
// converted property getter: - (id)insertedObjects;	// 0x365e0e91
- (BOOL)isEditing;	// 0x365ef395
- (void)lock;	// 0x365e42d5
- (void)lockObjectStore;	// 0x36581f61
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)managedObjectContext;	// 0x365f165d
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)managedObjectContext;	// 0x365f1739
- (void)mergeChangesFromContextDidSaveNotification:(id)mergeChangesFromContext;	// 0x365e5305
// converted property getter: - (id)mergePolicy;	// 0x365dfc29
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x365f1c31
- (id)newValuesForObjectWithID:(id)anId withContext:(id)context error:(id *)error;	// 0x365f1815
- (void)objectDidBeginEditing:(id)object;	// 0x365eef71
- (void)objectDidEndEditing:(id)object;	// 0x365ef009
- (id)objectRegisteredForID:(id)anId;	// 0x365e10f1
- (id)objectWithID:(id)anId;	// 0x365e2369
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x365e1329
- (BOOL)obtainPermanentIDsForObjects:(id)objects error:(id *)error;	// 0x365e17e5
// converted property getter: - (id)parentContext;	// 0x365e5871
- (void)performBlock:(id)block;	// 0x365e53d1
- (void)performBlockAndWait:(id)wait;	// 0x365e55bd
// converted property getter: - (id)persistentStoreCoordinator;	// 0x36580ac5
- (void)processPendingChanges;	// 0x365e0add
// converted property getter: - (BOOL)propagatesDeletesAtEndOfEvent;	// 0x365e1019
- (void)redo;	// 0x365e3d99
- (void)refreshObject:(id)object mergeChanges:(BOOL)changes;	// 0x365e32d5
- (id)registeredObjects;	// 0x365e0e69
- (oneway void)release;	// 0x365958b9
- (void)reset;	// 0x365dfccd
- (id)retain;	// 0x365a07dd
- (unsigned)retainCount;	// 0x365dfc3d
// converted property getter: - (BOOL)retainsRegisteredObjects;	// 0x365dfb75
- (void)rollback;	// 0x365e2965
- (BOOL)save:(id *)save;	// 0x365e1c2d
// converted property setter: - (void)setMergePolicy:(id)policy;	// 0x36580929
// converted property setter: - (void)setParentContext:(id)context;	// 0x365e5721
// converted property setter: - (void)setPersistentStoreCoordinator:(id)coordinator;	// 0x3658079d
// converted property setter: - (void)setPropagatesDeletesAtEndOfEvent:(BOOL)event;	// 0x365e102d
// converted property setter: - (void)setRetainsRegisteredObjects:(BOOL)objects;	// 0x365dfad5
// converted property setter: - (void)setStalenessInterval:(double)interval;	// 0x365a0751
// converted property setter: - (void)setUndoManager:(id)manager;	// 0x365808b5
// converted property getter: - (double)stalenessInterval;	// 0x365949e1
- (BOOL)tryLock;	// 0x365e4369
- (void)undo;	// 0x365e3bdd
// converted property getter: - (id)undoManager;	// 0x365e0acd
- (void)unlock;	// 0x365e4405
- (void)unlockObjectStore;	// 0x3658d511
- (id)updatedObjects;	// 0x365e0da5
- (id)userInfo;	// 0x365e567d
@end

