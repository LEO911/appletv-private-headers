/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AppleTV-Structs.h"

@class NSMutableArray, NSLock, NSData, NSDictionary;

@interface NetflixPlaybackManager : XXUnknownSuperclass {
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
	NSDictionary *testStreams_;	// 152 = 0x98
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x4b54e1; S=0x4b54f1; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x4b4f75; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x4b56f5; S=0x4b570d; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x4b5721; S=0x4b5739; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x4b565d; S=0x4b566d; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x4b4fb9; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x4b501d; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x4b50d9; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x4b5401; S=0x4b5411; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x4b56a9; S=0x4b56c1; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x4b567d; S=0x4b5695; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x4b5579; S=0x4b5589; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x4b5599; S=0x4b55a9; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x4b53e1; S=0x4b0e3d; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x4b53f1; S=0x4b0f41; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x4b5371; S=0x4b5385; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x4b56d5; S=0x4b56e5; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x4b55e5; S=0x4b55fd; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x4b5351; S=0x4b5361; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x4b53a9; S=0x4b53bd; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x4b5539; S=0x4b5549; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x4b5501; S=0x4b5515; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x4b5631; S=0x4b5649; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x4b5611; S=0x4b5621; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x4b5435; S=0x4b5445; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x4b574d; S=0x4b5765; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x4b5779; S=0x4b578d; @synthesize=stalled_
@property(assign) int state;	// G=0x4b5559; S=0x4b5569; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x4b54a1; S=0x4b54b1; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x4b5469; S=0x4b547d; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x4b54c1; S=0x4b54d1; @synthesize=subtitlesTrackIndex_
@property(copy, nonatomic) NSDictionary *testStreams;	// G=0x4b57bd; S=0x4b52c1; @synthesize=testStreams_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x4b55b9; S=0x4b55d1; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x4b579d; S=0x4b57ad; @synthesize=totalNumberOfStalls_
+ (void)initialize;	// 0x4b0b29
+ (id)sharedInstance;	// 0x4b0b2d
- (id)init;	// 0x4b0c0d
- (void)audioSelect:(id)select;	// 0x4b27bd
- (void)audioSelectAsync:(id)async;	// 0x4b27f9
// declared property getter: - (int)audioTrackIndex;	// 0x4b54e1
// declared property getter: - (unsigned)bitrate;	// 0x4b4f75
- (void)buffering:(double)buffering;	// 0x4b14a1
- (void)bufferingComplete:(double)complete;	// 0x4b15b5
// declared property getter: - (long long)bufferingStartBytes;	// 0x4b56f5
// declared property getter: - (double)bufferingStartTime;	// 0x4b5721
// declared property getter: - (BwEntry *)bwEntry;	// 0x4b565d
// declared property getter: - (long long)bytes;	// 0x4b4fb9
// declared property getter: - (long long)bytesForInterface;	// 0x4b501d
- (void)clearErrorStack;	// 0x4b5329
- (void)close;	// 0x4b13ad
- (id)createErrorFromStack;	// 0x4b2b9d
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x4b50d9
- (void)dealloc;	// 0x4b0d01
- (void)end:(double)end reason:(id)reason;	// 0x4b11d1
// declared property getter: - (id)errorStack;	// 0x4b5401
- (int)fetchBookmark:(id)bookmark;	// 0x4b4cad
// declared property getter: - (long long)lastBwEntryBytes;	// 0x4b56a9
// declared property getter: - (double)lastBwEntryTime;	// 0x4b567d
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x4b5579
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x4b5599
// declared property getter: - (IMediaControl *)mediaControl;	// 0x4b53e1
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x4b53f1
- (void)mediaDidAcquireLicense;	// 0x4b31d9
- (void)mediaDidAuthorize;	// 0x4b30a9
- (void)mediaDidBuildPlaylists;	// 0x4b3271
- (void)mediaDidCdnSelect;	// 0x4b3141
- (void)mediaDidClose;	// 0x4b29ed
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x4b34d1
- (void)mediaDidFailOpen:(id)media;	// 0x4b2f29
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x4b51f9
- (void)mediaDidHandleNccpError:(id)media;	// 0x4b2a61
- (void)mediaDidLoadSubtitles:(id)media;	// 0x4b339d
- (void)mediaDidSelectAudio:(id)media;	// 0x4b5111
- (void)mediaDidSetSpeed:(float)media;	// 0x4b32bd
- (void)mediaOpenComplete:(id)complete;	// 0x4b2955
- (void)mediaWillAcquireLicense;	// 0x4b318d
- (void)mediaWillAuthorize;	// 0x4b305d
- (void)mediaWillBuildPlaylists;	// 0x4b3225
- (void)mediaWillCdnSelect;	// 0x4b30f5
- (void)mediaWillLoadSubtitles;	// 0x4b3351
// declared property getter: - (id)movieDetails;	// 0x4b5371
// declared property getter: - (int)networkInterfaceType;	// 0x4b56d5
- (void)networkSelection:(id)selection;	// 0x4b25a5
- (int)networkTypeStringToType:(id)type;	// 0x4b252d
// declared property getter: - (double)observedBitrate;	// 0x4b55e5
- (void)open:(id)open;	// 0x4b0f65
- (void)openAsync:(id)async;	// 0x4b393d
// declared property getter: - (BOOL)openNotificationSent;	// 0x4b5351
- (void)pause:(double)pause;	// 0x4b1011
- (void)play:(double)play;	// 0x4b0fa1
// declared property getter: - (id)playReadyKey;	// 0x4b53a9
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x4b5539
// declared property getter: - (id)playbackCommandLock;	// 0x4b5501
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x4b4e31
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x4b21c1
// declared property getter: - (long long)pollBytesStart;	// 0x4b5631
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x4b5611
- (void)postMediaCloseFailure;	// 0x4b3839
- (void)postMediaOpenFailure:(int)failure;	// 0x4b368d
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x4b3765
- (void)postMediaOpenSuccess:(id)success;	// 0x4b35f1
// declared property getter: - (id)reportableActionId;	// 0x4b5435
- (void)reposition:(double)reposition;	// 0x4b10f1
// declared property getter: - (double)sampleReportWindow;	// 0x4b574d
- (void)selectedPlaylist:(id)playlist;	// 0x4b22d1
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x4b54f1
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x4b570d
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x4b5739
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x4b566d
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x4b5411
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x4b56c1
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x4b5695
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x4b5589
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x4b55a9
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x4b0e3d
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x4b0f41
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x4b5385
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x4b56e5
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x4b55fd
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x4b5361
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x4b53bd
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x4b5549
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x4b5515
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x4b5649
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x4b5621
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x4b5445
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x4b5765
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x4b578d
// declared property setter: - (void)setState:(int)state;	// 0x4b5569
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x4b54b1
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x4b547d
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x4b54d1
// declared property setter: - (void)setTestStreams:(id)streams;	// 0x4b52c1
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x4b55d1
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x4b57ad
// declared property getter: - (bool)stalled;	// 0x4b5779
// declared property getter: - (int)state;	// 0x4b5559
- (void)stop:(double)stop;	// 0x4b1161
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x4b172d
- (void)subtitlesDisable;	// 0x4b24ad
- (void)subtitlesDisableAsync;	// 0x4b4b6d
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x4b54a1
// declared property getter: - (id)subtitlesProcessingLock;	// 0x4b5469
- (void)subtitlesSelect:(id)select;	// 0x4b2471
- (void)subtitlesSelectAbort;	// 0x4b24e9
- (void)subtitlesSelectAsync:(id)async;	// 0x4b4775
// declared property getter: - (int)subtitlesTrackIndex;	// 0x4b54c1
// declared property getter: - (id)testStreams;	// 0x4b57bd
// declared property getter: - (long long)totalBytesTransferred;	// 0x4b55b9
// declared property getter: - (int)totalNumberOfStalls;	// 0x4b579d
- (void)unpause:(double)unpause;	// 0x4b1081
- (void)updatePts:(double)pts;	// 0x4b17a9
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x4b1d35
@end

