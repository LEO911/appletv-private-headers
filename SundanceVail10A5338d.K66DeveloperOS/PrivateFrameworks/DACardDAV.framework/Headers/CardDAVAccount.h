/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACardDAV.framework/DACardDAV
 */

#import "CoreDAVAccountInfoProvider.h"
#import <DAAccount.h> // Unknown library
#import "CoreDAVLogDelegate.h"
#import "CoreDAVDiscoveryTaskGroupDelegate.h"

@class DACoreDAVTaskManager, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger;

@interface CardDAVAccount : DAAccount <CoreDAVAccountInfoProvider, CoreDAVLogDelegate, CoreDAVDiscoveryTaskGroupDelegate> {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 64 = 0x40
	DACoreDAVLogger *_curLogger;	// 68 = 0x44
}
@property(assign) int cardDAVAccountVersion;	// G=0x36fa717d; S=0x36fa7199; 
@property(retain) id host;	// G=0x36fa6df9; S=0x36fa6e5d; converted property
@property(assign) int port;	// G=0x36fa6f19; S=0x36fa6f7d; converted property
@property(retain) id principalURL;	// G=0x36fa6b09; S=0x36fa6991; converted property
@property(retain) id scheme;	// G=0x36fa6fe9; S=0x36fa704d; converted property
@property(retain) id serverComplianceClasses;	// G=0x36fa74b5; S=0x36fa74b9; converted property
@property(retain) id serverRoot;	// G=0x36fa7175; S=0x36fa7179; converted property
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x36fa63b9; converted property
@property(assign) BOOL useSSL;	// G=0x36fa7115; S=0x36fa7145; converted property
@property(retain) id username;	// G=0x36fa6cd9; S=0x36fa6d3d; converted property
+ (Class)accountClass;	// 0x36fa5f19
+ (id)addressBookConstraintsPlistPath;	// 0x36fa74ad
+ (Class)clientClass;	// 0x36fa5f35
+ (id)defaultProperties;	// 0x36fa5ba9
+ (id)supportedDataclasses;	// 0x36fa5f51
- (id)init;	// 0x36fa5d05
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x36fa5e19
- (id)initWithProperties:(id)properties;	// 0x36fa5dd5
- (void)_massageAddedOrModifiedVCard:(id)card;	// 0x36fa74b1
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x36fa6471
- (id)_oldURLsForKeychain;	// 0x36fa647d
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x36fa65a9
- (BOOL)accountNeedsUpgrade;	// 0x36fa689d
// declared property getter: - (int)cardDAVAccountVersion;	// 0x36fa717d
- (void)checkValidityWithConsumer:(id)consumer;	// 0x36fa5fcd
- (void)configureAccount;	// 0x36fa5d45
- (id)copyImageContentsAtURL:(id)url outError:(id *)error;	// 0x36fa6c51
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x36fa75ed
- (int)coreDAVLogLevel;	// 0x36fa75cd
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x36fa7655
- (int)coreDAVOutputLevel;	// 0x36fa75e5
- (void)coreDAVTransmittedDataFinished;	// 0x36fa7675
- (void)dealloc;	// 0x36fa5e5d
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x36fa6241
- (BOOL)handleCertificateError:(id)error;	// 0x36fa75c9
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x36fa7599
// converted property getter: - (id)host;	// 0x36fa6df9
- (BOOL)isEqualToAccount:(id)account;	// 0x36fa71b5
- (id)localizedIdenticalAccountFailureMessage;	// 0x36fa7385
- (id)localizedInvalidPasswordMessage;	// 0x36fa73fd
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0x36fa6b91
// converted property getter: - (int)port;	// 0x36fa6f19
// converted property getter: - (id)principalURL;	// 0x36fa6b09
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0x36fa7505
// converted property getter: - (id)scheme;	// 0x36fa6fe9
// converted property getter: - (id)serverComplianceClasses;	// 0x36fa74b5
// converted property getter: - (id)serverRoot;	// 0x36fa7175
// declared property setter: - (void)setCardDAVAccountVersion:(int)version;	// 0x36fa7199
// converted property setter: - (void)setHost:(id)host;	// 0x36fa6e5d
// converted property setter: - (void)setPort:(int)port;	// 0x36fa6f7d
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x36fa6991
// converted property setter: - (void)setScheme:(id)scheme;	// 0x36fa704d
// converted property setter: - (void)setServerComplianceClasses:(id)classes;	// 0x36fa74b9
// converted property setter: - (void)setServerRoot:(id)root;	// 0x36fa7179
- (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x36fa61fd
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x36fa7145
// converted property setter: - (void)setUsername:(id)username;	// 0x36fa6d3d
- (BOOL)shouldLogTransmittedData;	// 0x36fa7631
- (id)spinnerIdentifiers;	// 0x36fa74c1
- (id)stateString;	// 0x36fa6409
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x36fa5f71
// converted property getter: - (id)taskManager;	// 0x36fa63b9
- (BOOL)upgradeAccount;	// 0x36fa6815
// converted property getter: - (BOOL)useSSL;	// 0x36fa7115
- (id)userAgentHeader;	// 0x36fa74bd
// converted property getter: - (id)username;	// 0x36fa6cd9
- (id)wellKnownPathsToCheck;	// 0x36fa5f81
@end

