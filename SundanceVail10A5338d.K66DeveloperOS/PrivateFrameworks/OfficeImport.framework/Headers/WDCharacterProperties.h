/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <NSObject.h> // Unknown library
#import "OfficeImport-Structs.h"

@class WDDocument;

@interface WDCharacterProperties : NSObject {
	WDDocument *mDocument;	// 4 = 0x4
	unsigned mOriginal : 1;	// 8 = 0x8
	unsigned mTracked : 1;	// 8 = 0x8
	unsigned mResolved : 1;	// 8 = 0x8
	XXStruct_F4yHWB *mOriginalProperties;	// 12 = 0xc
	XXStruct_F4yHWB *mTrackedProperties;	// 16 = 0x10
}
@property(retain) id baseStyle;	// G=0x33a58a89; S=0x33a3a0dd; converted property
@property(assign) int bold;	// G=0x33a5447d; S=0x33a2aded; converted property
@property(assign) int bracketTwoLinesInOne;	// G=0x33c008b5; S=0x33c00951; converted property
@property(assign) int caps;	// G=0x33a58285; S=0x33a2b991; converted property
@property(assign) long charPositionOfPictureBulletInBookmark;	// G=0x33b27001; S=0x33aaa0cd; converted property
@property(retain) id color;	// G=0x33a37789; S=0x33a2b479; converted property
@property(assign, getter=isColorAuto) BOOL colorAuto;	// G=0x33bff009; S=0x33a37821; converted property
@property(assign) BOOL compressHorizontalInVertical;	// G=0x33c004f1; S=0x33c0058d; converted property
@property(assign) int deleted;	// G=0x33b189d1; S=0x33b188ad; converted property
@property(assign) int doubleStrikeThrough;	// G=0x33b1a469; S=0x33a2b2d1; converted property
@property(assign) int edited;	// G=0x33bff3f5; S=0x33b18801; converted property
@property(assign) BOOL embeddedObject;	// G=0x33bffbb1; S=0x33bffc4d; converted property
@property(assign) int embossed;	// G=0x33bfd8b1; S=0x33a2afed; converted property
@property(assign) int emphasisMark;	// G=0x33bfee35; S=0x33bfeed1; converted property
@property(retain) id extendedFont;	// G=0x33bfd10d; S=0x33a2be69; converted property
@property(retain) id farEastFont;	// G=0x33bfd25d; S=0x33a2bdbd; converted property
@property(retain) id font;	// G=0x33a5403d; S=0x33a2bd11; converted property
@property(assign) unsigned short fontSize;	// G=0x33a53e31; S=0x33a2bc11; converted property
@property(assign) unsigned short fontSizeForBiText;	// G=0x33bffa5d; S=0x33a9e46d; converted property
@property(assign) int formattingChanged;	// G=0x33bff549; S=0x33bff5e5; converted property
@property(assign) int hidden;	// G=0x33aa5231; S=0x33a2ba11; converted property
@property(assign, getter=isHighlight) BOOL highlight;	// G=0x33bfe125; S=0x33affa91; converted property
@property(assign) int highlightColor;	// G=0x33bfe26d; S=0x33a2b891; converted property
@property(assign) BOOL horizontalInVertical;	// G=0x33c0030d; S=0x33c003a9; converted property
@property(assign) int imprint;	// G=0x33bfd9f9; S=0x33a2b06d; converted property
@property(assign) int italic;	// G=0x33a85ff1; S=0x33a2ae6d; converted property
@property(assign) unsigned short kerning;	// G=0x33bfdfd1; S=0x33a2bc91; converted property
@property(assign) int languageForBiText;	// G=0x33bff90d; S=0x33a2c0c1; converted property
@property(assign) int languageForDefaultText;	// G=0x33bff15d; S=0x33a2bfc1; converted property
@property(assign) int languageForFarEast;	// G=0x33bff7b9; S=0x33a2c041; converted property
@property(assign) int ligature;	// G=0x33bfe3c1; S=0x33bfe45d; converted property
@property(assign, getter=isListCharacterPictureBullet) BOOL listCharacterPictureBullet;	// G=0x33aaa14d; S=0x33aaa03d; converted property
@property(assign, getter=isLowerCase) BOOL lowerCase;	// G=0x33bfe595; S=0x33bfe631; converted property
@property(assign) long objectIDForOle2;	// G=0x33bfff79; S=0x33c0000d; converted property
@property(assign) long offsetToPictureData;	// G=0x33c0013d; S=0x33c001d5; converted property
@property(assign) BOOL ole2;	// G=0x33bffd95; S=0x33bffe31; converted property
@property(assign) int outline;	// G=0x33bfd75d; S=0x33a2aeed; converted property
@property(assign) short position;	// G=0x33bfe8bd; S=0x33a2bb11; converted property
@property(retain) id reflection;	// G=0x33bfea0d; S=0x33bfeaa5; converted property
@property(assign) int resolveMode;	// G=0x33bfb921; S=0x33a2ad81; converted property
@property(assign) int rightToLeft;	// G=0x33bff2a1; S=0x33ae8949; converted property
@property(assign) int shadow;	// G=0x33bfdb4d; S=0x33a2af6d; converted property
@property(retain) id shadow2010;	// G=0x33bfebed; S=0x33bfec85; converted property
@property(assign) float shadow2010Opacity;	// G=0x33bfdca1; S=0x33bfdd45; converted property
@property(assign) int smallCaps;	// G=0x33ae9c21; S=0x33a2b911; converted property
@property(assign) short spacing;	// G=0x33bfe779; S=0x33a2ba91; converted property
@property(assign, getter=isSpecialCharacter) BOOL specialCharacter;	// G=0x33bff665; S=0x33a435c9; converted property
@property(assign) int strikeThrough;	// G=0x33b06ee1; S=0x33a2b251; converted property
@property(assign) unsigned short symbolCharacter;	// G=0x33bfd609; S=0x33a983cd; converted property
@property(retain) id symbolFont;	// G=0x33bfd3ad; S=0x33a2bf15; converted property
@property(assign) BOOL twoLinesInOne;	// G=0x33c006d5; S=0x33c00771; converted property
@property(assign) int underline;	// G=0x33a387e1; S=0x33a2b0ed; converted property
@property(retain) id underlineColor;	// G=0x33bfde81; S=0x33a2b1a9; converted property
@property(assign) int verticalAlign;	// G=0x33a59a09; S=0x33a2bb91; converted property
+ (SEL)fontOverriddenSelectorForLanguageType:(int)languageType;	// 0x33bfd5c5
+ (SEL)fontSelectorForLanguageType:(int)languageType;	// 0x33bfd581
+ (int)languageFromString:(id)string;	// 0x33a346fd
+ (BOOL)languageIsArabicOrHebrew:(int)hebrew;	// 0x33c00fb9
+ (BOOL)languageIsCJK:(int)cjk;	// 0x33c00f89
+ (BOOL)languageIsChinese:(int)chinese;	// 0x33c00f3d
- (id)initWithDocument:(id)document;	// 0x33a2ace9
- (void)applyPropertiesFrom:(id)from ifOverriddenIn:(id)anIn;	// 0x33bfb969
// converted property getter: - (id)baseStyle;	// 0x33a58a89
// converted property getter: - (int)bold;	// 0x33a5447d
- (id)border;	// 0x33bfcfbd
// converted property getter: - (int)bracketTwoLinesInOne;	// 0x33c008b5
// converted property getter: - (int)caps;	// 0x33a58285
// converted property getter: - (long)charPositionOfPictureBulletInBookmark;	// 0x33b27001
- (void)clearBaseStyle;	// 0x33a79389
// converted property getter: - (id)color;	// 0x33a37789
// converted property getter: - (BOOL)compressHorizontalInVertical;	// 0x33c004f1
- (void)copyPropertiesInto:(id)into;	// 0x33c00c6d
- (id)copyWithZone:(NSZone *)zone;	// 0x33c00a89
- (void)dealloc;	// 0x33a5a85d
// converted property getter: - (int)deleted;	// 0x33b189d1
- (id)document;	// 0x33a346dd
// converted property getter: - (int)doubleStrikeThrough;	// 0x33b1a469
// converted property getter: - (int)edited;	// 0x33bff3f5
// converted property getter: - (BOOL)embeddedObject;	// 0x33bffbb1
// converted property getter: - (int)embossed;	// 0x33bfd8b1
// converted property getter: - (int)emphasisMark;	// 0x33bfee35
// converted property getter: - (id)extendedFont;	// 0x33bfd10d
// converted property getter: - (id)farEastFont;	// 0x33bfd25d
// converted property getter: - (id)font;	// 0x33a5403d
- (id)fontForLanguageType:(int)languageType;	// 0x33bfd4f1
// converted property getter: - (unsigned short)fontSize;	// 0x33a53e31
// converted property getter: - (unsigned short)fontSizeForBiText;	// 0x33bffa5d
// converted property getter: - (int)formattingChanged;	// 0x33bff549
// converted property getter: - (int)hidden;	// 0x33aa5231
// converted property getter: - (int)highlightColor;	// 0x33bfe26d
// converted property getter: - (BOOL)horizontalInVertical;	// 0x33c0030d
// converted property getter: - (int)imprint;	// 0x33bfd9f9
- (BOOL)isAnythingOverridden;	// 0x33bfb86d
- (BOOL)isAnythingOverriddenIn:(XXStruct_F4yHWB *)anIn;	// 0x33c01099
- (BOOL)isBaseStyleOverridden;	// 0x33a53165
- (BOOL)isBoldOverridden;	// 0x33a53a99
- (BOOL)isBooleanProbablyDifferent:(int)different than:(int)than;	// 0x33c01175
- (BOOL)isBorderOverridden;	// 0x33bfd055
- (BOOL)isBracketTwoLinesInOneOverridden;	// 0x33c009d1
- (BOOL)isCapsOverridden;	// 0x33a54255
- (BOOL)isCharPositionOfPictureBulletInBookmarkOverridden;	// 0x33b26f51
// converted property getter: - (BOOL)isColorAuto;	// 0x33bff009
- (BOOL)isColorAutoOverridden;	// 0x33bff0a5
- (BOOL)isColorOverridden;	// 0x33a5430d
- (BOOL)isCompressHorizontalInVerticalOverridden;	// 0x33c0061d
- (BOOL)isDeletedOverridden;	// 0x33a54961
- (BOOL)isDoubleStrikeThroughOverridden;	// 0x33a53cc1
- (BOOL)isEditedOverridden;	// 0x33bff491
- (BOOL)isEmbeddedObjectOverridden;	// 0x33bffcdd
- (BOOL)isEmbossedOverridden;	// 0x33bfd949
- (BOOL)isEmphasisMarkOverridden;	// 0x33bfef51
- (BOOL)isExtendedFontOverridden;	// 0x33bfd1a5
- (BOOL)isFarEastFontOverridden;	// 0x33bfd2f5
- (BOOL)isFontOverridden;	// 0x33a53f85
- (BOOL)isFontOverriddenForLanguageType:(int)languageType;	// 0x33bfd535
- (BOOL)isFontSizeForBiTextOverridden;	// 0x33bffaf9
- (BOOL)isFontSizeOverridden;	// 0x33a53d79
- (BOOL)isFormattingChangedOverridden;	// 0x33a35b99
- (BOOL)isHiddenOverridden;	// 0x33a54a19
// converted property getter: - (BOOL)isHighlight;	// 0x33bfe125
- (BOOL)isHighlightColorOverridden;	// 0x33bfe309
- (BOOL)isHighlightOverridden;	// 0x33bfe1bd
- (BOOL)isHorizontalInVerticalOverridden;	// 0x33c00439
- (BOOL)isImprintOverridden;	// 0x33bfda95
- (BOOL)isItalicOverridden;	// 0x33a53b51
- (BOOL)isKerningOverridden;	// 0x33bfe06d
- (BOOL)isLanguageForBiTextOverridden;	// 0x33bff9a5
- (BOOL)isLanguageForDefaultTextOverridden;	// 0x33bff1f1
- (BOOL)isLanguageForFarEastOverridden;	// 0x33bff855
- (BOOL)isLigatureOverridden;	// 0x33bfe4dd
// converted property getter: - (BOOL)isListCharacterPictureBullet;	// 0x33aaa14d
- (BOOL)isListCharacterPictureBulletOverridden;	// 0x33a7d291
// converted property getter: - (BOOL)isLowerCase;	// 0x33bfe595
- (BOOL)isLowerCaseOverridden;	// 0x33bfe6c1
- (BOOL)isObjectIDForOle2Overridden;	// 0x33c0008d
- (BOOL)isOffsetToPictureDataOverridden;	// 0x33c00255
- (BOOL)isOle2Overridden;	// 0x33bffec1
- (BOOL)isOutlineOverridden;	// 0x33bfd7f9
- (BOOL)isPositionOverridden;	// 0x33bfe955
- (BOOL)isReflectionOverridden;	// 0x33bfeb35
- (BOOL)isRightToLeftOverridden;	// 0x33bff33d
- (BOOL)isShadingOverridden;	// 0x33a543c5
- (BOOL)isShadow2010OpacityOverridden;	// 0x33bfddc9
- (BOOL)isShadow2010Overridden;	// 0x33bfed7d
- (BOOL)isShadowOverridden;	// 0x33bfdbe9
- (BOOL)isSmallCapsOverridden;	// 0x33a5419d
- (BOOL)isSpacingOverridden;	// 0x33bfe80d
// converted property getter: - (BOOL)isSpecialCharacter;	// 0x33bff665
- (BOOL)isSpecialCharacterOverridden;	// 0x33bff701
- (BOOL)isStrikeThroughOverridden;	// 0x33a53c09
- (BOOL)isSymbolCharacterOverridden;	// 0x33bfd6a5
- (BOOL)isSymbolFontOverridden;	// 0x33bfd441
- (BOOL)isTwoLinesInOneOverridden;	// 0x33c007fd
- (BOOL)isUnderlineColorOverridden;	// 0x33bfdf19
- (BOOL)isUnderlineOverridden;	// 0x33a540e5
- (BOOL)isVerticalAlignOverridden;	// 0x33a53ecd
// converted property getter: - (int)italic;	// 0x33a85ff1
// converted property getter: - (unsigned short)kerning;	// 0x33bfdfd1
// converted property getter: - (int)languageForBiText;	// 0x33bff90d
// converted property getter: - (int)languageForDefaultText;	// 0x33bff15d
// converted property getter: - (int)languageForFarEast;	// 0x33bff7b9
// converted property getter: - (int)ligature;	// 0x33bfe3c1
- (id)mutableBorder;	// 0x33a2b351
- (id)mutableShading;	// 0x33a2b521
- (void)negateFormattingChangesWithDefaults:(id)defaults;	// 0x33a34b1d
// converted property getter: - (long)objectIDForOle2;	// 0x33bfff79
// converted property getter: - (long)offsetToPictureData;	// 0x33c0013d
// converted property getter: - (BOOL)ole2;	// 0x33bffd95
// converted property getter: - (int)outline;	// 0x33bfd75d
// converted property getter: - (short)position;	// 0x33bfe8bd
// converted property getter: - (id)reflection;	// 0x33bfea0d
- (void)removeEmptyFormattingChanges:(id)changes;	// 0x33bfc591
// converted property getter: - (int)resolveMode;	// 0x33bfb921
- (int)reverseBooleanProperty:(int)property;	// 0x33c01199
// converted property getter: - (int)rightToLeft;	// 0x33bff2a1
// converted property setter: - (void)setBaseStyle:(id)style;	// 0x33a3a0dd
// converted property setter: - (void)setBold:(int)bold;	// 0x33a2aded
// converted property setter: - (void)setBracketTwoLinesInOne:(int)one;	// 0x33c00951
// converted property setter: - (void)setCaps:(int)caps;	// 0x33a2b991
// converted property setter: - (void)setCharPositionOfPictureBulletInBookmark:(long)bookmark;	// 0x33aaa0cd
// converted property setter: - (void)setColor:(id)color;	// 0x33a2b479
// converted property setter: - (void)setColorAuto:(BOOL)auto;	// 0x33a37821
// converted property setter: - (void)setCompressHorizontalInVertical:(BOOL)vertical;	// 0x33c0058d
// converted property setter: - (void)setDeleted:(int)deleted;	// 0x33b188ad
// converted property setter: - (void)setDoubleStrikeThrough:(int)through;	// 0x33a2b2d1
// converted property setter: - (void)setEdited:(int)edited;	// 0x33b18801
// converted property setter: - (void)setEmbeddedObject:(BOOL)object;	// 0x33bffc4d
// converted property setter: - (void)setEmbossed:(int)embossed;	// 0x33a2afed
// converted property setter: - (void)setEmphasisMark:(int)mark;	// 0x33bfeed1
// converted property setter: - (void)setExtendedFont:(id)font;	// 0x33a2be69
// converted property setter: - (void)setFarEastFont:(id)font;	// 0x33a2bdbd
// converted property setter: - (void)setFont:(id)font;	// 0x33a2bd11
// converted property setter: - (void)setFontSize:(unsigned short)size;	// 0x33a2bc11
// converted property setter: - (void)setFontSizeForBiText:(unsigned short)biText;	// 0x33a9e46d
// converted property setter: - (void)setFormattingChanged:(int)changed;	// 0x33bff5e5
// converted property setter: - (void)setHidden:(int)hidden;	// 0x33a2ba11
// converted property setter: - (void)setHighlight:(BOOL)highlight;	// 0x33affa91
// converted property setter: - (void)setHighlightColor:(int)color;	// 0x33a2b891
// converted property setter: - (void)setHorizontalInVertical:(BOOL)vertical;	// 0x33c003a9
// converted property setter: - (void)setImprint:(int)imprint;	// 0x33a2b06d
// converted property setter: - (void)setItalic:(int)italic;	// 0x33a2ae6d
// converted property setter: - (void)setKerning:(unsigned short)kerning;	// 0x33a2bc91
// converted property setter: - (void)setLanguageForBiText:(int)biText;	// 0x33a2c0c1
// converted property setter: - (void)setLanguageForDefaultText:(int)defaultText;	// 0x33a2bfc1
// converted property setter: - (void)setLanguageForFarEast:(int)farEast;	// 0x33a2c041
// converted property setter: - (void)setLigature:(int)ligature;	// 0x33bfe45d
// converted property setter: - (void)setListCharacterPictureBullet:(BOOL)bullet;	// 0x33aaa03d
// converted property setter: - (void)setLowerCase:(BOOL)aCase;	// 0x33bfe631
// converted property setter: - (void)setObjectIDForOle2:(long)ole2;	// 0x33c0000d
// converted property setter: - (void)setOffsetToPictureData:(long)pictureData;	// 0x33c001d5
// converted property setter: - (void)setOle2:(BOOL)a2;	// 0x33bffe31
// converted property setter: - (void)setOutline:(int)outline;	// 0x33a2aeed
// converted property setter: - (void)setPosition:(short)position;	// 0x33a2bb11
// converted property setter: - (void)setReflection:(id)reflection;	// 0x33bfeaa5
// converted property setter: - (void)setResolveMode:(int)mode;	// 0x33a2ad81
// converted property setter: - (void)setRightToLeft:(int)left;	// 0x33ae8949
// converted property setter: - (void)setShadow2010:(id)a2010;	// 0x33bfec85
// converted property setter: - (void)setShadow2010Opacity:(float)opacity;	// 0x33bfdd45
// converted property setter: - (void)setShadow:(int)shadow;	// 0x33a2af6d
// converted property setter: - (void)setSmallCaps:(int)caps;	// 0x33a2b911
// converted property setter: - (void)setSpacing:(short)spacing;	// 0x33a2ba91
// converted property setter: - (void)setSpecialCharacter:(BOOL)character;	// 0x33a435c9
// converted property setter: - (void)setStrikeThrough:(int)through;	// 0x33a2b251
// converted property setter: - (void)setSymbolCharacter:(unsigned short)character;	// 0x33a983cd
// converted property setter: - (void)setSymbolFont:(id)font;	// 0x33a2bf15
// converted property setter: - (void)setTwoLinesInOne:(BOOL)one;	// 0x33c00771
// converted property setter: - (void)setUnderline:(int)underline;	// 0x33a2b0ed
// converted property setter: - (void)setUnderlineColor:(id)color;	// 0x33a2b1a9
// converted property setter: - (void)setVerticalAlign:(int)align;	// 0x33a2bb91
- (id)shading;	// 0x33b18939
// converted property getter: - (int)shadow;	// 0x33bfdb4d
// converted property getter: - (id)shadow2010;	// 0x33bfebed
// converted property getter: - (float)shadow2010Opacity;	// 0x33bfdca1
// converted property getter: - (int)smallCaps;	// 0x33ae9c21
// converted property getter: - (short)spacing;	// 0x33bfe779
// converted property getter: - (int)strikeThrough;	// 0x33b06ee1
// converted property getter: - (unsigned short)symbolCharacter;	// 0x33bfd609
// converted property getter: - (id)symbolFont;	// 0x33bfd3ad
// converted property getter: - (BOOL)twoLinesInOne;	// 0x33c006d5
// converted property getter: - (int)underline;	// 0x33a387e1
// converted property getter: - (id)underlineColor;	// 0x33bfde81
// converted property getter: - (int)verticalAlign;	// 0x33a59a09
@end

