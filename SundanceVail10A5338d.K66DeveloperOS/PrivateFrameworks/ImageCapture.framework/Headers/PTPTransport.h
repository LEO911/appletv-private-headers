/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ImageCapture.framework/ImageCapture
 */

#import "ImageCapture-Structs.h"
#import <NSObject.h> // Unknown library

@class PTPOperationResponsePacket, PTPWrappedBytes;

@interface PTPTransport : NSObject {
	unsigned short _type;	// 4 = 0x4
	int _role;	// 8 = 0x8
	int _connectionStatus;	// 12 = 0xc
	id _delegate;	// 16 = 0x10
	BOOL _timedOut;	// 20 = 0x14
	BOOL _responseReceived;	// 21 = 0x15
	PTPOperationResponsePacket *_response;	// 24 = 0x18
	opaque_pthread_t *_callbackThread;	// 28 = 0x1c
	opaque_pthread_mutex_t _callbackThreadMutex;	// 32 = 0x20
	opaque_pthread_cond_t _callbackThreadCondition;	// 76 = 0x4c
	BOOL _callbackThreadConditionSignaled;	// 104 = 0x68
	CFRunLoopRef _callbackThreadRunLoop;	// 108 = 0x6c
	CFRunLoopSourceRef _callbackDummyMachPortRLSrc;	// 112 = 0x70
	unsigned char _headerBuffer[12];	// 116 = 0x74
	BOOL _headerBufferFound;	// 128 = 0x80
	BOOL _delegateNeedsResponse;	// 129 = 0x81
	BOOL _busy;	// 130 = 0x82
	unsigned long _canceledTransactionID;	// 132 = 0x84
	PTPWrappedBytes *_dataForTransaction;	// 136 = 0x88
	unsigned long long _excessReceivedDataSize;	// 140 = 0x8c
}
@property(readonly, assign) CFRunLoopRef callbackThreadRunLoop;	// G=0x33e62a6d; converted property
@property(readonly, assign) int connectionStatus;	// G=0x33e62d01; converted property
@property(readonly, assign) unsigned long long excessReceivedDataSize;	// G=0x33e62f51; converted property
@property(retain) PTPOperationResponsePacket *response;	// G=0x33e62c2d; S=0x33e62c3d; converted property
@property(assign) BOOL responseReceived;	// G=0x33e62c89; S=0x33e62c99; converted property
@property(readonly, assign) int role;	// G=0x33e62ead; converted property
@property(assign) BOOL timedOut;	// G=0x33e62ec1; S=0x33e62ed1; converted property
@property(readonly, assign) unsigned short type;	// G=0x33e62cf1; converted property
- (id)init;	// 0x33e62825
- (void)abortPendingIO;	// 0x33e62f3d
- (void *)callbackThreadFunction;	// 0x33e628f9
// converted property getter: - (CFRunLoopRef)callbackThreadRunLoop;	// 0x33e62a6d
- (void)cancelTransaction:(id)transaction;	// 0x33e62f41
- (void)cleanupCallbackThread;	// 0x33e628e5
- (BOOL)connected;	// 0x33e62ebd
// converted property getter: - (int)connectionStatus;	// 0x33e62d01
- (void)dealloc;	// 0x33e628b9
- (void)deviceReset;	// 0x33e62f4d
- (unsigned short)deviceStatus;	// 0x33e62f45
- (void)endCallbackThread;	// 0x33e62ded
// converted property getter: - (unsigned long long)excessReceivedDataSize;	// 0x33e62f51
- (int)lockCallbackThreadMutex;	// 0x33e62a7d
// converted property getter: - (id)response;	// 0x33e62c2d
// converted property getter: - (BOOL)responseReceived;	// 0x33e62c89
// converted property getter: - (int)role;	// 0x33e62ead
- (void)sendData:(id)data;	// 0x33e62f31
- (BOOL)sendEvent:(id)event;	// 0x33e62f39
- (id)sendRequest:(id)request receiveData:(id)data timeout:(unsigned long)timeout;	// 0x33e62f29
- (id)sendRequest:(id)request sendData:(id)data timeout:(unsigned long)timeout;	// 0x33e62f2d
- (BOOL)sendResponse:(id)response;	// 0x33e62f35
- (void)setDelegate:(id)delegate;	// 0x33e62c79
// converted property setter: - (void)setResponse:(id)response;	// 0x33e62c3d
// converted property setter: - (void)setResponseReceived:(BOOL)received;	// 0x33e62c99
// converted property setter: - (void)setTimedOut:(BOOL)anOut;	// 0x33e62ed1
- (int)signalCallbackThreadCondition;	// 0x33e62b4d
- (BOOL)startCallbackThread;	// 0x33e62d11
- (BOOL)startInitiator;	// 0x33e62e85
- (BOOL)startResponder;	// 0x33e62e6d
- (void)stop;	// 0x33e62e9d
// converted property getter: - (BOOL)timedOut;	// 0x33e62ec1
// converted property getter: - (unsigned short)type;	// 0x33e62cf1
- (int)unlockCallbackThreadMutex;	// 0x33e62ae5
- (int)waitForCallbackThreadConditionSignalWithTimeout:(long)timeout;	// 0x33e62b79
@end

