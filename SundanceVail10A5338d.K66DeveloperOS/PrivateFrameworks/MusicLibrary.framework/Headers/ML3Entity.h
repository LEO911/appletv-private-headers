/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class ML3MusicLibrary;

@interface ML3Entity : NSObject {
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x30ad9599; 
@property(assign) __weak ML3MusicLibrary *library;	// G=0x30ac662d; S=0x30adbf91; @synthesize=_library
@property(readonly, assign) long long persistentID;	// G=0x30acb549; @synthesize=_persistentID
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x30adb43d
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0x30ac6e9d
+ (id)allProperties;	// 0x30adbc95
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x30abd8b1
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x30adbc91
+ (id)defaultOrderingProperties;	// 0x30ada975
+ (BOOL)deleteFromLibrary:(id)library deletionType:(int)type persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x30adb65d
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x30af04f9
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x30abdcad
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x30adbe3d
+ (void)enumeratePersistentIDsInLibrary:(id)library matchingPredicate:(id)predicate orderingTerms:(id)terms persistentIDs:(const long long *)ids count:(unsigned)count usingBlock:(id)block;	// 0x30ad9891
+ (id)extraTablesToDelete;	// 0x30adbc89
+ (id)extraTablesToInsert;	// 0x30acb425
+ (id)foreignColumnForProperty:(id)property;	// 0x30ada981
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x30ada97d
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0x30ac739d
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deletionType:(int)type revisionType:(int)type4;	// 0x30ad88a5
+ (id)indexableSQLForProperties:(id)properties;	// 0x30adbc99
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0x30acb049
+ (BOOL)insertionChangesLibraryContents;	// 0x30acb42d
+ (id)joinClausesForProperty:(id)property;	// 0x30ada739
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x30adb435
+ (BOOL)libraryDynamicChangeForProperty:(id)property;	// 0x30adb439
+ (id)newSelectSQLForProperties:(const id *)properties count:(unsigned)count predicate:(id)predicate;	// 0x30ada179
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0x30ac8c19
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30ada825
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x30ac6321
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x30ac5afd
+ (id)persistentIDColumnForTable:(id)table;	// 0x30adbc8d
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x30ac48ad
+ (id)predisambiguatedProperties;	// 0x30abddbd
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0x30ac78f1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0x30ac66cd
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x30ac4bb9
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms;	// 0x30af05d1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms propertyToCount:(id)count;	// 0x30af0661
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingTerms:(id)terms usingSections:(BOOL)sections;	// 0x30af0701
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x30af0449
+ (id)replacerWithProperties:(id)properties databaseConnection:(id)connection;	// 0x30b14c15
+ (int)revisionTrackingCode;	// 0x30adbe35
+ (id)sectionPropertyForProperty:(id)property;	// 0x30ada979
+ (id)subselectPropertyForProperty:(id)property;	// 0x30ada175
+ (id)subselectStatementForProperty:(id)property;	// 0x30abdfe9
+ (id)unsettableProperties;	// 0x30acb025
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x30ac97a9
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0x30ac6375
- (void).cxx_destruct;	// 0x30adbfa5
- (id)copyInLibrary:(id)library;	// 0x30ad91fd
- (id)copyWithZone:(NSZone *)zone;	// 0x30ad93e1
- (BOOL)deleteFromLibrary;	// 0x30adbc29
- (id)description;	// 0x30ad951d
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x30acc531
// declared property getter: - (BOOL)existsInLibrary;	// 0x30ad9599
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0x30ac6485
- (unsigned)hash;	// 0x30ad950d
- (void)incrementRevision;	// 0x30adbf31
- (BOOL)isEqual:(id)equal;	// 0x30ad9455
// declared property getter: - (id)library;	// 0x30ac662d
- (BOOL)matchesPredicate:(id)predicate;	// 0x30ad9f0d
// declared property getter: - (long long)persistentID;	// 0x30acb549
// declared property setter: - (void)setLibrary:(id)library;	// 0x30adbf91
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x30acb939
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x30acb981
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x30acc38d
- (id)valueForProperty:(id)property;	// 0x30ac78a9
@end

