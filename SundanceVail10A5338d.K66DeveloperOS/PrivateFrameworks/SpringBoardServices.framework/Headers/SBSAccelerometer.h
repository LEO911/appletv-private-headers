/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
 */

#import "BKSAccelerometerDelegate.h"
#import <NSObject.h> // Unknown library

@class BKSAccelerometer;
@protocol SBSAccelerometerDelegate;

@interface SBSAccelerometer : NSObject <BKSAccelerometerDelegate> {
	id<SBSAccelerometerDelegate> _delegate;	// 4 = 0x4
	BKSAccelerometer *_bksMirror;	// 8 = 0x8
}
@property(assign, nonatomic) BOOL accelerometerEventsEnabled;	// G=0x343d8fe1; S=0x343d9005; 
@property(assign, nonatomic) id<SBSAccelerometerDelegate> delegate;	// G=0x343d9239; S=0x343d9249; @synthesize=_delegate
@property(assign, nonatomic) BOOL orientationEventsEnabled;	// G=0x343d9145; S=0x343d9125; 
@property(assign, nonatomic) double updateInterval;	// G=0x343d9025; S=0x343d9045; 
@property(assign, nonatomic) float xThreshold;	// G=0x343d9065; S=0x343d9085; 
@property(assign, nonatomic) float yThreshold;	// G=0x343d90a5; S=0x343d90c5; 
@property(assign, nonatomic) float zThreshold;	// G=0x343d90e5; S=0x343d9105; 
- (id)init;	// 0x343d8f09
- (void)accelerometer:(id)accelerometer didAccelerateWithTimeStamp:(double)timeStamp x:(float)x y:(float)y z:(float)z eventType:(int)type;	// 0x343d9189
- (void)accelerometer:(id)accelerometer didChangeDeviceOrientation:(int)orientation;	// 0x343d91e1
// declared property getter: - (BOOL)accelerometerEventsEnabled;	// 0x343d8fe1
- (int)currentDeviceOrientation;	// 0x343d9169
- (void)dealloc;	// 0x343d8f81
// declared property getter: - (id)delegate;	// 0x343d9239
// declared property getter: - (BOOL)orientationEventsEnabled;	// 0x343d9145
// declared property setter: - (void)setAccelerometerEventsEnabled:(BOOL)enabled;	// 0x343d9005
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x343d9249
// declared property setter: - (void)setOrientationEventsEnabled:(BOOL)enabled;	// 0x343d9125
// declared property setter: - (void)setUpdateInterval:(double)interval;	// 0x343d9045
// declared property setter: - (void)setXThreshold:(float)threshold;	// 0x343d9085
// declared property setter: - (void)setYThreshold:(float)threshold;	// 0x343d90c5
// declared property setter: - (void)setZThreshold:(float)threshold;	// 0x343d9105
// declared property getter: - (double)updateInterval;	// 0x343d9025
// declared property getter: - (float)xThreshold;	// 0x343d9065
// declared property getter: - (float)yThreshold;	// 0x343d90a5
// declared property getter: - (float)zThreshold;	// 0x343d90e5
@end

