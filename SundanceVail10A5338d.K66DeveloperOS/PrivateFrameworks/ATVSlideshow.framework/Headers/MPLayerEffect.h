/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MPEffectSupport.h"
#import "MPLayer.h"
#import "MPEffectSupportPrivate.h"

@class MCContainerEffect, NSString, NSArray, NSMutableDictionary, NSMutableArray;
@protocol MZEffectTiming;

@interface MPLayerEffect : MPLayer <MPEffectSupportPrivate, MPEffectSupport> {
	MCContainerEffect *_layerEffect;	// 48 = 0x30
	NSString *_effectID;	// 52 = 0x34
	NSString *_presetID;	// 56 = 0x38
	NSMutableArray *_slides;	// 60 = 0x3c
	NSMutableArray *_secondarySlides;	// 64 = 0x40
	NSMutableArray *_texts;	// 68 = 0x44
	NSMutableDictionary *_effectAttributes;	// 72 = 0x48
	int _randomSeed;	// 76 = 0x4c
	NSObject<MZEffectTiming> *_effectTiming;	// 80 = 0x50
	BOOL _supportsEffectTiming;	// 84 = 0x54
	BOOL _skipEffectTiming;	// 85 = 0x55
	int _liveIndex;	// 88 = 0x58
}
@property(retain) NSMutableDictionary *effectAttributes;	// G=0x333c6605; S=0x333c669d; converted property
@property(copy, nonatomic) NSString *effectID;	// G=0x333c634d; S=0x333c635d; 
@property(readonly, assign, nonatomic) NSObject<MZEffectTiming> *effectTiming;	// G=0x333c91ad; @synthesize=_effectTiming
@property(assign) int liveIndex;	// G=0x333c91bd; S=0x333c91cd; converted property
@property(copy, nonatomic) NSString *presetID;	// G=0x333c648d; S=0x333c64b1; 
@property(assign) int randomSeed;	// G=0x333c6565; S=0x333c6575; converted property
@property(readonly, retain) NSMutableArray *secondarySlides;	// G=0x333c798d; converted property
@property(readonly, assign, nonatomic) NSArray *slides;	// G=0x333c69e9; 
@property(readonly, assign, nonatomic) NSArray *texts;	// G=0x333c8005; 
+ (id)layerEffectWithEffectID:(id)effectID;	// 0x333c55e9
+ (id)layerEffectWithEffectID:(id)effectID andPaths:(id)paths;	// 0x333c5625
+ (id)layerEffectWithEffectID:(id)effectID andStrings:(id)strings;	// 0x333c5665
+ (id)layerEffectWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x333c56a5
- (id)init;	// 0x333c5511
- (id)initWithCoder:(id)coder;	// 0x333c5bc5
- (id)initWithEffectID:(id)effectID;	// 0x333c56ed
- (id)initWithEffectID:(id)effectID andPaths:(id)paths;	// 0x333c5701
- (id)initWithEffectID:(id)effectID andStrings:(id)strings;	// 0x333c5815
- (id)initWithEffectID:(id)effectID strings:(id)strings paths:(id)paths;	// 0x333c592d
- (id)_effectAttributes;	// 0x333c8d85
- (void)_updateEffectTiming;	// 0x333c8c01
- (void)_updateTiming:(BOOL)timing;	// 0x333c8e2d
- (void)addSecondarySlide:(id)slide;	// 0x333c799d
- (void)addSecondarySlides:(id)slides;	// 0x333c79fd
- (void)addSlide:(id)slide;	// 0x333c69f9
- (void)addSlides:(id)slides;	// 0x333c6a59
- (void)addText:(id)text;	// 0x333c8015
- (void)addTexts:(id)texts;	// 0x333c8075
- (id)allSlides:(BOOL)slides;	// 0x333c8fe5
- (void)applyFormattedAttributes;	// 0x333c9b55
- (id)container;	// 0x333c9219
- (void)copySecondarySlides:(id)slides;	// 0x333ca7dd
- (void)copySlides:(id)slides;	// 0x333ca6c1
- (void)copyTexts:(id)texts;	// 0x333ca8f9
- (id)copyWithZone:(NSZone *)zone;	// 0x333c6239
- (void)createSecondarySlidesWithPaths:(id)paths;	// 0x333c9879
- (void)createSlidesWithPaths:(id)paths;	// 0x333c96c5
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor;	// 0x333c92d9
- (void)createTextsWithStrings:(id)strings secondLineFactor:(float)factor fillIn:(BOOL)anIn;	// 0x333c92fd
- (void)dealloc;	// 0x333c612d
- (id)description;	// 0x333c607d
- (id)effectAttributeForKey:(id)key;	// 0x333c6709
// converted property getter: - (id)effectAttributes;	// 0x333c6605
// declared property getter: - (id)effectID;	// 0x333c634d
// declared property getter: - (id)effectTiming;	// 0x333c91ad
- (void)encodeWithCoder:(id)coder;	// 0x333c5a61
- (void)finalize;	// 0x333c60ed
- (id)formattedAttributes;	// 0x333c9a51
- (double)fullDuration;	// 0x333c92c9
- (void)insertSecondarySlides:(id)slides atIndex:(int)index;	// 0x333c7a41
- (void)insertSlides:(id)slides atIndex:(int)index;	// 0x333c6a9d
- (void)insertTexts:(id)texts atIndex:(int)index;	// 0x333c80b9
// converted property getter: - (int)liveIndex;	// 0x333c91bd
- (double)lowestDisplayTime;	// 0x333c91e1
- (double)mainDuration;	// 0x333c8739
- (int)maxNumberOfSecondarySlides;	// 0x333c9279
- (int)maxNumberOfSlides;	// 0x333c9229
- (void)moveSlidesFromIndices:(id)indices toIndex:(int)index;	// 0x333c78bd
- (void)moveTextsFromIndices:(id)indices toIndex:(int)index;	// 0x333c8605
// declared property getter: - (id)presetID;	// 0x333c648d
// converted property getter: - (int)randomSeed;	// 0x333c6565
- (void)removeAllSecondarySlides;	// 0x333c86d5
- (void)removeAllSlides;	// 0x333c7859
- (void)removeAllTexts;	// 0x333c85a5
- (void)removeSecondarySlidesAtIndices:(id)indices;	// 0x333c7e81
- (void)removeSlidesAtIndices:(id)indices;	// 0x333c74b9
- (void)removeTextsAtIndices:(id)indices;	// 0x333c843d
// converted property getter: - (id)secondarySlides;	// 0x333c798d
- (void)setDuration:(double)duration;	// 0x333c8799
- (void)setEffectAttribute:(id)attribute forKey:(id)key;	// 0x333c6855
// converted property setter: - (void)setEffectAttributes:(id)attributes;	// 0x333c669d
// declared property setter: - (void)setEffectID:(id)anId;	// 0x333c635d
- (void)setLayerEffect:(id)effect;	// 0x333c9ebd
// converted property setter: - (void)setLiveIndex:(int)index;	// 0x333c91cd
- (void)setPhaseInDuration:(double)duration;	// 0x333c8911
- (void)setPhaseOutDuration:(double)duration;	// 0x333c8a89
// declared property setter: - (void)setPresetID:(id)anId;	// 0x333c64b1
// converted property setter: - (void)setRandomSeed:(int)seed;	// 0x333c6575
- (void)setSkipEffectTiming:(BOOL)timing;	// 0x333c9a2d
- (id)slideInformation;	// 0x333c9c2d
// declared property getter: - (id)slides;	// 0x333c69e9
// declared property getter: - (id)texts;	// 0x333c8005
- (void)updateTiming;	// 0x333c9a3d
@end

