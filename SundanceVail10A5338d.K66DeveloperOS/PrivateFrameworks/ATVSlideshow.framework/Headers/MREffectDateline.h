/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MZEffectTiming.h"
#import "MREffect.h"

@class NSMutableArray, MRImageProvider, NSDictionary, MRCroppingSprite, MRImage, NSMutableDictionary;

@interface MREffectDateline : MREffect <MZEffectTiming> {
	NSMutableDictionary *mSprites;	// 116 = 0x74
	NSDictionary *mJournal;	// 120 = 0x78
	NSMutableArray *mLengths;	// 124 = 0x7c
	NSMutableArray *mChapterDurations;	// 128 = 0x80
	NSMutableArray *mChapters;	// 132 = 0x84
	NSMutableDictionary *mText;	// 136 = 0x88
	NSMutableDictionary *mChapterDates;	// 140 = 0x8c
	NSMutableDictionary *mChapterNumDate;	// 144 = 0x90
	NSMutableArray *mIndicies;	// 148 = 0x94
	NSMutableDictionary *mWeatherImages;	// 152 = 0x98
	NSMutableDictionary *mDayImages;	// 156 = 0x9c
	NSMutableDictionary *mBreakInformation;	// 160 = 0xa0
	BOOL mIsLoaded;	// 164 = 0xa4
	BOOL mIsVertical;	// 165 = 0xa5
	MRImageProvider *mTextBackground;	// 168 = 0xa8
	MRImageProvider *mQuoteOpen;	// 172 = 0xac
	MRImageProvider *mQuoteClose;	// 176 = 0xb0
	MRImageProvider *mQuoteBox;	// 180 = 0xb4
	MRImageProvider *mWeatherWindowMask;	// 184 = 0xb8
	MRImageProvider *mDateWindowMask;	// 188 = 0xbc
	MRImage *mGrayImage;	// 192 = 0xc0
	MRCroppingSprite *mChapterSprite;	// 196 = 0xc4
}
@property(readonly, assign, nonatomic) double mainDuration;	// @dynamic
@property(readonly, assign, nonatomic) double phaseInDuration;	// @dynamic
@property(readonly, assign, nonatomic) double phaseOutDuration;	// @dynamic
+ (id)customTimingWithEffectID:(id)effectID effectAttributes:(id)attributes slideInformation:(id)information textInformation:(id)information4 inAspectRatio:(float)aspectRatio;	// 0x33546079
+ (BOOL)hasCustomTiming;	// 0x33546071
+ (void)initialize;	// 0x335453e9
- (id)initWithEffectID:(id)effectID;	// 0x33545495
- (void)_addTextImage:(id)image forKey:(id)key inDictionary:(id)dictionary;	// 0x335507bd
- (float)_aspectRatioForSlideIndex:(int)slideIndex;	// 0x3354760d
- (void)_calculateDurations:(id)durations slideInformation:(id)information aspectRatio:(float)ratio;	// 0x33547259
- (double)_calculateMainDurationWithAttributes:(id)attributes;	// 0x33546429
- (int)_chapterIndexForTime:(double)time;	// 0x33548859
- (NSRange)_chapterRangeForSlide:(int)slide startIndex:(int *)index endIndex:(int *)index3;	// 0x33547119
- (void)_cleanUpDictionary:(id)dictionary;	// 0x33550061
- (void)_cleanup;	// 0x33545981
- (int)_currentItemForChapter:(int)chapter atTime:(double)time forDuration:(double *)duration fromTime:(double *)time4;	// 0x33548cf9
- (void)_drawChapterDateSwitch:(int)aSwitch to:(int)to progress:(float)progress time:(double)time arguments:(id)arguments context:(id)context;	// 0x3354ef89
- (void)_drawGrayChapters:(id)chapters time:(double)time arguments:(id)arguments showInfo:(BOOL)info startProgress:(float)progress titleEnd:(float)end titleToChapter:(float)chapter drawPhotos:(BOOL)photos startIndex:(int)index exit:(float)exit isExiting:(BOOL)exiting chapterIntro:(float)intro chapterProgress:(float)progress13;	// 0x3354b701
- (void)_loadDateForChapter:(int)chapter context:(id)context;	// 0x33551569
- (void)_loadForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33551fed
- (void)_loadTextForChapter:(int)chapter context:(id)context;	// 0x33550c21
- (int)_maxLinesForTextElement:(id)textElement;	// 0x335526f1
- (CGSize)_maxSizeForTextElement:(id)textElement;	// 0x335526c9
- (float)_offsetForChapterIndex:(int)chapterIndex layoutIndex:(int)index aspectRatio:(float)ratio;	// 0x335486b1
- (float)_startTimeForChapter:(int)chapter;	// 0x33548989
- (double)_startTimeForSlideIndex:(int)slideIndex inChapter:(int)chapter;	// 0x33548a81
- (id)_textImageForString:(id)string string2:(id)a2 type:(int)type inContext:(id)context firstLine:(CGRect *)line lastLine:(CGRect *)line6;	// 0x335501f1
- (id)_textImageForString:(id)string type:(int)type inContext:(id)context;	// 0x335501c1
- (BOOL)_timeIs24HourFormat;	// 0x33551e99
- (void)_unload;	// 0x335526f5
- (void)_unloadTextForChapter:(int)chapter;	// 0x33550abd
- (void)_updateIndiciesWithAttributes:(id)attributes;	// 0x33546179
- (void)_updateSlideProviders:(float)providers;	// 0x33546c01
- (id)_weatherStringForCondition:(int)condition;	// 0x335485b9
- (void)beginMorphingToAspectRatio:(float)aspectRatio withDuration:(double)duration;	// 0x33550805
- (double)displayTimeForSlideAtIndex:(unsigned)index;	// 0x33546879
- (double)displayTimeForTextAtIndex:(unsigned)index;	// 0x33546979
- (id)elementHitAtPoint:(CGPoint)point withInverseMatrix:(float [16])inverseMatrix localPoint:(CGPoint *)point3;	// 0x3354fecd
- (void)endMorphing;	// 0x3355096d
- (BOOL)getVerticesCoordinates:(CGPoint (*)[4])coordinates withMatrix:(float [16])matrix forElement:(id)element;	// 0x33550019
- (BOOL)isLoadedForTime:(double)time;	// 0x33546991
- (double)lowestDisplayTime;	// 0x33546861
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33547699
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x33548f91
- (void)setAttributes:(id)attributes;	// 0x33546b65
- (void)setPixelSize:(CGSize)size;	// 0x33545f21
- (double)showDurationForSlideAtIndex:(unsigned)index;	// 0x33546651
- (double)showTimeForSlideAtIndex:(unsigned)index;	// 0x33546541
@end

