/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GeoServices-Structs.h"
#import <NSObject.h> // Unknown library

@class GEOExpiringTileCache, NSMutableArray, NSLock, GEOTileCache;
@protocol GEOTileServerProxy;

@interface GEOTileLoader : NSObject {
	GEOTileCache *_tiles;	// 4 = 0x4
	GEOExpiringTileCache *_expTiles;	// 8 = 0x8
	NSMutableArray *_pendingLoads;	// 12 = 0xc
	NSLock *_pendingLoadsLock;	// 16 = 0x10
	NSMutableArray *_tileDecoders;	// 20 = 0x14
	id<GEOTileServerProxy> _serverConnection;	// 24 = 0x18
	int _memoryHits;	// 28 = 0x1c
	int _diskHits;	// 32 = 0x20
	int _networkHits;	// 36 = 0x24
}
@property(readonly, assign, nonatomic) int diskHits;	// G=0x3244dc05; 
@property(readonly, assign, nonatomic) int memoryHits;	// G=0x3244dbf5; 
@property(readonly, assign, nonatomic) int networkHits;	// G=0x3244dc15; 
+ (id)diskCacheLocation;	// 0x3244b0d1
+ (void)setDiskCacheLocation:(id)location;	// 0x3244b091
+ (void)setMemoryCacheCountLimit:(unsigned)limit;	// 0x3244b071
+ (void)setMemoryCacheMinCapacity:(unsigned)capacity;	// 0x3244b061
+ (void)setMemoryCacheTotalCostLimit:(unsigned)limit;	// 0x3244b081
+ (id)sharedLoader;	// 0x3244b0ed
+ (void)useLocalLoader;	// 0x3244b051
+ (void)useRemoteLoader;	// 0x3244b041
- (id)init;	// 0x3244b159
- (void)_asyncDecodeTile:(id)tile forKey:(const GEOTileKey *)key completion:(id)completion;	// 0x3244b5fd
- (id)_decodeTile:(id)tile forKey:(const GEOTileKey *)key;	// 0x3244b509
- (void)_loadTilesFromServer:(id)server checkDisk:(BOOL)disk allowNetworking:(BOOL)networking;	// 0x3244c3ed
- (id)_pendingLoadForNetworkLoadList:(id)networkLoadList acquireLock:(BOOL)lock;	// 0x3244c2ad
- (id)_pendingLoadForOriginalList:(id)originalList acquireLock:(BOOL)lock;	// 0x3244c16d
- (void)_preempt:(id)preempt;	// 0x3244d14d
- (void)_reportCorruptTile:(const GEOTileKey *)tile;	// 0x3244d2ad
- (void)_tileEditionChanged:(id)changed;	// 0x3244c045
- (void)beginPreloadSessionOfSize:(unsigned long long)size;	// 0x3244d2cd
- (void)cancelRequest:(id)request;	// 0x3244cdfd
- (void)clearAllCaches;	// 0x3244b4c9
- (void)closeDatabase;	// 0x3244bfbd
- (void)dealloc;	// 0x3244b391
// declared property getter: - (int)diskHits;	// 0x3244dc05
- (void)endPreloadSession;	// 0x3244d2ed
- (id)expireTilesWithType:(unsigned char)type provider:(unsigned short)provider olderThan:(double)than;	// 0x3244db7d
- (void)loadTiles:(id)tiles progress:(id)progress finished:(id)finished error:(id)error;	// 0x3244ca7d
- (void)loadTilesFromCache:(id)cache progress:(id)progress finished:(id)finished error:(id)error;	// 0x3244ca51
- (void)loadTilesFromCacheAndNetwork:(id)cacheAndNetwork progress:(id)progress finished:(id)finished error:(id)error;	// 0x3244ca25
- (void)loadTilesFromCacheAndNetwork:(id)cacheAndNetwork progress:(id)progress finished:(id)finished error:(id)error skipNetwork:(BOOL)network;	// 0x3244c751
// declared property getter: - (int)memoryHits;	// 0x3244dbf5
// declared property getter: - (int)networkHits;	// 0x3244dc15
- (void)openDatabase;	// 0x3244c025
- (void)preloadTiles:(id)tiles progress:(id)progress finished:(id)finished error:(id)error;	// 0x3244cb69
- (void)registerTileDecoder:(id)decoder;	// 0x3244b45d
- (void)registerTileLoader:(Class)loader;	// 0x3244db9d
- (id)renderDataForKey:(GEOTileKey *)key;	// 0x3244b99d
- (id)renderDataForKey:(GEOTileKey *)key asyncHandler:(id)handler;	// 0x3244bc69
- (void)shrinkDiskCacheToSize:(unsigned long long)size finished:(id)finished;	// 0x3244dc25
- (void)tileServerProxy:(id)proxy receivedData:(id)data forKey:(GEOTileKey)key forRequest:(id)request fromDisk:(BOOL)disk userInfo:(id)info;	// 0x3244d30d
- (void)tileServerProxy:(id)proxy receivedError:(id)error forRequest:(id)request;	// 0x3244da3d
- (void)tileServerProxy:(id)proxy requestFinished:(id)finished;	// 0x3244dae1
- (void)tileServerProxy:(id)proxy requestMovedToNetwork:(id)network;	// 0x3244d8d1
@end

