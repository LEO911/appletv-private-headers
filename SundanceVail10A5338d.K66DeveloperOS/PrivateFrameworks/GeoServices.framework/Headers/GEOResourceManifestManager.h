/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

#import "GEOResourceManifestServerProxyDelegate.h"
#import "GeoServices-Structs.h"
#import <NSObject.h> // Unknown library

@class GEOActiveTileGroup, NSMutableArray, NSHashTable, NSLock, NSDictionary;
@protocol GEOResourceManifestServerProxy;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {
	id<GEOResourceManifestServerProxy> _serverProxy;	// 4 = 0x4
	NSHashTable *_serverProxyObservers;	// 8 = 0x8
	NSMutableArray *_pendingRegionalResourceLoads;	// 12 = 0xc
	GEOActiveTileGroup *_activeTileGroup;	// 16 = 0x10
	NSLock *_activeTileGroupLock;	// 20 = 0x14
	NSDictionary *_resourceNamesToPaths;	// 24 = 0x18
}
@property(readonly, assign, nonatomic) GEOActiveTileGroup *activeTileGroup;	// G=0x324980e1; 
@property(assign) unsigned activeTileGroupIdentifier;	// G=0x32499891; S=0x324998b9; converted property
@property(readonly, assign, nonatomic) BOOL hasActiveTileGroup;	// G=0x324983c1; 
@property(readonly, assign, nonatomic) id<GEOResourceManifestServerProxy> serverProxy;	// G=0x32499961; @synthesize=_serverProxy
+ (void)disableServerConnection;	// 0x32497c91
+ (void)setCallerWillStartServer;	// 0x32497cc5
+ (void)setHiDPI:(BOOL)dpi;	// 0x32497cc1
+ (id)sharedManager;	// 0x32497cd5
+ (void)useLocalProxy;	// 0x32497cb1
+ (void)useRemoteProxy;	// 0x32497ca1
- (id)init;	// 0x32497d41
- (id)_activeTileSetForKey:(const GEOTileKey *)key;	// 0x324983dd
- (void)_buildResourceNamesToPaths;	// 0x3249890d
- (id)_listenerForTileKeys:(id)tileKeys;	// 0x32498dcd
- (void)_localeChanged:(id)changed;	// 0x3249827d
// declared property getter: - (id)activeTileGroup;	// 0x324980e1
// converted property getter: - (unsigned)activeTileGroupIdentifier;	// 0x32499891
- (void)addServerProxyObserver:(id)observer;	// 0x324982a5
- (id)allResourceNames;	// 0x32498575
- (id)authToken;	// 0x3249814d
- (id)baseURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x32498409
- (void)cancelRegionalResourcesRequest:(id)request;	// 0x3249904d
- (void)closeServerConnection;	// 0x3249825d
- (void)dealloc;	// 0x32497fbd
- (void)forceUpdate;	// 0x32499941
- (void)getResourceManifestWithHandler:(id)handler;	// 0x32499871
// declared property getter: - (BOOL)hasActiveTileGroup;	// 0x324983c1
- (BOOL)hasResourceManifest;	// 0x32499835
- (BOOL)isAvailableForTileKey:(const GEOTileKey *)tileKey;	// 0x324984e5
- (id)languageForTileKey:(const GEOTileKey *)tileKey;	// 0x32498511
- (void)loadRegionalResourcesForKeys:(id)keys allowNetwork:(BOOL)network progress:(id)progress finished:(id)finished error:(id)error;	// 0x32498ec9
- (void)loadRegionalResourcesForKeys:(id)keys progress:(id)progress finished:(id)finished error:(id)error;	// 0x32498ea1
- (id)localizationURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x32498461
- (int)mapMatchingTileSetStyle;	// 0x32498339
- (unsigned)mapMatchingZoomLevel;	// 0x3249833d
- (id)multiTileURLStringForTileKey:(const GEOTileKey *)tileKey;	// 0x32498435
- (void)openServerConnection;	// 0x3249816d
- (id)pathForResourceWithName:(id)name;	// 0x32498bed
- (void)refreshActiveTileGroup;	// 0x32499921
- (void)removeServerProxyObserver:(id)observer;	// 0x32498319
- (void)resetActiveTileGroup;	// 0x32499901
// declared property getter: - (id)serverProxy;	// 0x32499961
- (oneway void)serverProxyDidChangeActiveTileGroup:(id)serverProxy finishedCallback:(id)callback;	// 0x324990b1
- (oneway void)serverProxyDidFinishLoadingForList:(id)serverProxy;	// 0x324996c9
- (oneway void)serverProxyDidReceiveError:(id)serverProxy forList:(id)list;	// 0x32499535
- (oneway void)serverProxyDidReceiveResourceNames:(id)serverProxy attributions:(id)attributions forKey:(GEOTileKey)key fromList:(id)list;	// 0x324993b9
// converted property setter: - (void)setActiveTileGroupIdentifier:(unsigned)identifier;	// 0x324998b9
- (BOOL)supportsTileStyle:(int)style size:(int)size scale:(int)scale;	// 0x3249853d
- (double)timeToLiveForTileKey:(const GEOTileKey *)tileKey;	// 0x324984b9
- (unsigned)versionForTileKey:(const GEOTileKey *)tileKey;	// 0x3249848d
@end

