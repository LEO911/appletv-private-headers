/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF
 */

#import "CorePDF-Structs.h"
#import <NSObject.h> // Unknown library
#import "CPDisposable.h"
#import "NSCopying.h"
#import "CPCopying.h"

@class CPMemoryOwner;

@interface CPCharSequence : NSObject <NSCopying, CPCopying, CPDisposable> {
	unsigned length;	// 4 = 0x4
	CPPDFChar **charArray;	// 8 = 0x8
	unsigned previousSize;	// 12 = 0xc
	unsigned size;	// 16 = 0x10
	CPMemoryOwner *sharedMemory;	// 20 = 0x14
	BOOL wasMerged;	// 24 = 0x18
}
@property(readonly, assign) CPPDFChar **charArray;	// G=0x332f99a5; converted property
@property(readonly, assign) unsigned length;	// G=0x332f9945; converted property
@property(readonly, assign) BOOL wasMerged;	// G=0x332fa039; converted property
- (id)initSuper;	// 0x332f9635
- (id)initWithChars:(CPPDFChar *)chars length:(unsigned)length;	// 0x332f95dd
- (id)initWithSizeFor:(unsigned)aFor;	// 0x332f9575
- (void)addChar:(CPPDFChar *)aChar;	// 0x332f99b5
- (void)addChars:(CPPDFChar *)chars length:(unsigned)length;	// 0x332f9a1d
- (void)addChars:(CPPDFChar *)chars length:(unsigned)length ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x332f9a8d
- (void)addCharsFromSequence:(id)sequence;	// 0x332f9b25
- (CGRect)bounds;	// 0x332fa899
- (CGRect)boundsFrom:(unsigned)from length:(unsigned)length;	// 0x332fa8d5
// converted property getter: - (CPPDFChar **)charArray;	// 0x332f99a5
- (CPPDFChar *)charAtIndex:(unsigned)index;	// 0x332f9955
- (void)copyToSubsequence:(id)subsequence from:(unsigned)from length:(unsigned)length;	// 0x332fa3b1
- (void)copyToSubsequence:(id)subsequence ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x332fa44d
- (id)copyWithZone:(NSZone *)zone;	// 0x332f9739
- (void)dealloc;	// 0x332f96d9
- (void)dispose;	// 0x332f9661
- (void)finalize;	// 0x332f9699
// converted property getter: - (unsigned)length;	// 0x332f9945
- (BOOL)map:(/*function-pointer*/ void *)map passing:(void *)passing;	// 0x332fa5e1
- (BOOL)map:(/*function-pointer*/ void *)map whereNeighborsWith:(id)with passing:(void *)passing;	// 0x332fa7ad
- (BOOL)mapToPairs:(/*function-pointer*/ void *)pairs passing:(void *)passing;	// 0x332fa701
- (BOOL)mapToPairsWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x332fa751
- (BOOL)mapWithIndex:(/*function-pointer*/ void *)index from:(unsigned)from length:(unsigned)length passing:(void *)passing;	// 0x332fa681
- (BOOL)mapWithIndex:(/*function-pointer*/ void *)index passing:(void *)passing;	// 0x332fa62d
- (void)merge:(id)merge by:(/*function-pointer*/ void *)by;	// 0x332f9f69
- (void)mergeByAnchorXIncreasingYDecreasing:(id)decreasing;	// 0x332f9f4d
- (void)mergeByAnchorYDecreasingXIncreasing:(id)increasing;	// 0x332f9f31
- (id)newSubsequenceFrom:(unsigned)from length:(unsigned)length;	// 0x332fa049
- (void)removeAllChars;	// 0x332f9bc9
- (void)removeChar;	// 0x332f9b85
- (void)removeCharAtIndex:(unsigned)index;	// 0x332f9cbd
- (void)removeFrom:(unsigned)from;	// 0x332f9d69
- (BOOL)removeSubsequences:(id)subsequences whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x332fa295
- (BOOL)removeToSubsequence:(id)subsequence ifTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x332fa4e9
- (void)replaceCharAtIndex:(unsigned)index withChar:(CPPDFChar *)aChar;	// 0x332f9c45
- (void)resize:(unsigned)resize;	// 0x332f981d
- (void)sortBy:(/*function-pointer*/ void *)by;	// 0x332f9ed1
- (void)sortByAnchorXIncreasingYDecreasing;	// 0x332f9e49
- (void)sortByAnchorYDecreasingXIncreasing;	// 0x332f9dc1
- (void)splitToSubsequences:(id)subsequences whereTrue:(/*function-pointer*/ void *)aTrue passing:(void *)passing;	// 0x332fa189
// converted property getter: - (BOOL)wasMerged;	// 0x332fa039
@end

