/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x3095b5d5; S=0x3095bd7d; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x3095eca1; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x3095fa69; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x3096128d; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x3095b0ed; S=0x3095ef19; 
@property(copy) NSString *emailAddress;	// G=0x3095d471; S=0x3095d4f9; 
@property(copy) NSArray *emailAddresses;	// G=0x3095d5d1; S=0x3095d66d; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x3095fa25; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x3095d8c5; 
@property(copy) NSString *host;	// G=0x3095d1c1; S=0x3095d249; 
@property(readonly, assign) NSData *identityPersist;	// G=0x3095e3f9; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x3095e6b5; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x3095e36d; 
@property(assign) BOOL needsRediscovery;	// G=0x3095de21; S=0x3095de41; 
@property(copy) NSString *password;	// G=0x3095cdfd; S=0x3095cf55; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x3095ae4d; 
@property(assign) int port;	// G=0x3095d9d9; S=0x3095da65; 
@property(copy) NSURL *principalURL;	// G=0x3095dc05; S=0x3095dcad; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x3095de5d; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x3095bd4d; 
@property(copy) NSString *scheme;	// G=0x3095daf1; S=0x3095db79; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x3095fa7d; S=0x3095fa91; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x3095dde5; S=0x3095de05; 
@property(assign) BOOL shouldFailAllTasks;	// G=0x3095fab5; S=0x3095facd; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x3095fa39; S=0x3095fa51; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x3095fae5; S=0x3095fafd; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x3095d7b1; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x3095faa1; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x3096c9cd; S=0x3096c9d1; converted property
@property(assign) BOOL useSSL;	// G=0x3095d321; S=0x3095d3a9; 
@property(copy) NSString *user;	// G=0x3095ec35; S=0x3095ec45; 
@property(copy) NSString *username;	// G=0x3095beb5; S=0x3095bfa5; 
@property(retain) id version;	// G=0x3095d119; S=0x3095d165; converted property
+ (Class)accountClass;	// 0x3095bc65
+ (Class)classForAccountType:(id)accountType;	// 0x3095ee89
+ (Class)clientClass;	// 0x3095c689
+ (Class)daemonClass;	// 0x3095c6d5
+ (id)defaultProperties;	// 0x3095ee85
+ (id)newAccountOfAccountType:(id)accountType;	// 0x3095eec1
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x3095bb65
- (id)initWithProperties:(id)properties;	// 0x3095aac9
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x3095fb15
- (id)_exceptionsDict;	// 0x3095e4dd
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x30960f2d
- (BOOL)_isIdentityManagedByProfile;	// 0x3095e4bd
- (void)_removeHostsToTrust;	// 0x3095f029
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x30960781
- (id)_serverSuffixesToAlwaysFail;	// 0x3095fc19
- (void)_setPersistentUUID:(id)uuid;	// 0x3095bd61
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x3095f059
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x3095c931
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x3095d6d1
// declared property getter: - (id)accountDescription;	// 0x3095b5d5
- (id)accountID;	// 0x3095ad51
- (int)accountIntPropertyForKey:(id)key;	// 0x3095c999
- (BOOL)accountNeedsUpgrade;	// 0x3095ef35
- (id)accountPropertyForKey:(id)key;	// 0x3095c721
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x3095eca1
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x3095dde1
- (id)backingACAccountTypeIdentifier;	// 0x3095f20d
// declared property getter: - (id)backingAccountInfo;	// 0x3095fa69
// declared property getter: - (id)backingCredentialAccount;	// 0x3096128d
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x309614fd
- (void)cancelAllSearchQueries;	// 0x3096a879
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x309615a5
- (void)cancelSearchQuery:(id)query;	// 0x3096a875
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x30961645
- (void)checkValidityWithConsumer:(id)consumer;	// 0x3095dd99
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x3095e981
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x3095ea45
- (void)cleanupAccountFiles;	// 0x3095e655
- (id)consumerForTask:(id)task;	// 0x3095cc1d
- (id)contactsFolders;	// 0x30961675
- (CFURLStorageSessionRef)copyStorageSession;	// 0x3095ea49
// declared property getter: - (int)daAccountVersion;	// 0x3095b0ed
- (id)dataclassProperties;	// 0x3095c571
- (void)dealloc;	// 0x3095afe5
- (id)defaultContactsFolder;	// 0x30961671
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x3095dfd5
- (id)defaultEventsFolder;	// 0x309614ed
- (id)defaultNotesFolder;	// 0x3097bb7d
- (id)defaultToDosFolder;	// 0x3096c9c1
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x309616dd
- (id)deletedItemsFolder;	// 0x309616d5
- (id)description;	// 0x3095eba5
- (id)displayName;	// 0x3095be59
- (id)domainOnly;	// 0x3095d1bd
// declared property getter: - (id)emailAddress;	// 0x3095d471
// declared property getter: - (id)emailAddresses;	// 0x3095d5d1
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x3095fa25
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x3095c0f1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x3095d8c5
- (id)eventsFolders;	// 0x309614f1
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x3095e4f9
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x30982aad
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x3095fca5
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x30960445
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x3095e6b9
// declared property getter: - (id)host;	// 0x3095d1c1
// declared property getter: - (id)identityPersist;	// 0x3095e3f9
- (id)inboxFolder;	// 0x309616cd
- (BOOL)isActiveSyncAccount;	// 0x3095e965
- (BOOL)isCalDAVAccount;	// 0x3095e96d
- (BOOL)isCalDAVChildAccount;	// 0x3095e979
- (BOOL)isCardDAVAccount;	// 0x3095e975
// declared property getter: - (BOOL)isChildAccount;	// 0x3095e6b5
- (BOOL)isDAMMeAccount;	// 0x3095e971
- (BOOL)isDisabled;	// 0x3095b4d9
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x3095c1b9
- (BOOL)isEqualToAccount:(id)account;	// 0x3095e8bd
- (BOOL)isHotmailAccount;	// 0x3095e97d
- (BOOL)isLDAPAccount;	// 0x3095e969
// declared property getter: - (int)keychainAccessibilityType;	// 0x3095e36d
- (id)localizedIdenticalAccountFailureMessage;	// 0x3096113d
- (id)localizedInvalidPasswordMessage;	// 0x309611e5
- (BOOL)monitorFolderWithID:(id)anId;	// 0x3095ded5
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x3095ded1
// declared property getter: - (BOOL)needsRediscovery;	// 0x3095de21
- (id)notesFolders;	// 0x3097bb81
// declared property getter: - (id)password;	// 0x3095cdfd
- (id)passwordWithExpected:(BOOL)expected;	// 0x3095cc55
- (void)performSearchQuery:(id)query;	// 0x3096a7d1
// declared property getter: - (id)persistentUUID;	// 0x3095ae4d
// declared property getter: - (int)port;	// 0x3095d9d9
- (void)prepareForAccountSave;	// 0x3095e031
// declared property getter: - (id)principalURL;	// 0x3095dc05
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x309616d9
- (void)removeAccountPropertyForKey:(id)key;	// 0x3095c8cd
- (void)removeClientCertificateData;	// 0x3095dfd9
- (void)removeConsumerForTask:(id)task;	// 0x3095cc39
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x3096129d
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x3095de5d
- (void)resetAccountID;	// 0x3095bc81
- (BOOL)resetCertWarnings;	// 0x3095e7c1
- (void)resetStatusReport;	// 0x3095e7ed
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x309615a9
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x3095ca01
- (void)saveAccountProperties;	// 0x3095e035
- (void)saveAccountSettings;	// 0x3095edcd
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x3095ed7d
// declared property getter: - (id)scheduleIdentifier;	// 0x3095bd4d
// declared property getter: - (id)scheme;	// 0x3095daf1
- (BOOL)searchQueriesRunning;	// 0x3096a87d
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x309614f9
- (id)sentItemsFolder;	// 0x309616d1
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x3095c959
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x3095bd7d
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x3095c9c1
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x3095c7f5
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x3095cbc1
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x3095ef19
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x3095d4f9
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x3095d66d
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x3095c295
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x3095d94d
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x3095e53d
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x3095e6fd
// declared property setter: - (void)setHost:(id)host;	// 0x3095d249
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x3095e415
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x3095de41
// declared property setter: - (void)setPassword:(id)password;	// 0x3095cf55
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x3095ce35
// declared property setter: - (void)setPort:(int)port;	// 0x3095da65
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x3095dcad
// declared property setter: - (void)setScheme:(id)scheme;	// 0x3095db79
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x3095fa91
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x3095de05
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x3095facd
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x3095fa51
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x3095fafd
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x3095d839
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x3096c9d1
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x3095d3a9
// declared property setter: - (void)setUser:(id)user;	// 0x3095ec45
// declared property setter: - (void)setUsername:(id)username;	// 0x3095bfa5
// converted property setter: - (void)setVersion:(id)version;	// 0x3095d165
// declared property getter: - (id)settingsTemplate;	// 0x3095fa7d
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x3095dde5
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x3095fab5
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x3095fa39
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x3095fae5
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x3095d7b1
- (id)spinnerIdentifiers;	// 0x3095c63d
- (id)stateString;	// 0x3095cb11
// declared property getter: - (id)statusReport;	// 0x3095faa1
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x3095caad
- (void)stopMonitoringFolders;	// 0x3095df71
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x3095df0d
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x3095c0a5
- (int)supportsEmailFlagging;	// 0x3096a885
- (int)supportsMailboxSearch;	// 0x3096a881
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x3095ca49
- (id)syncStoreIdentifier;	// 0x3095afd5
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x30982ab1
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x30961679
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x309614f5
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x3097bb85
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x3096c9c9
- (void)tearDown;	// 0x3095de6d
- (id)toDosFolders;	// 0x3096c9c5
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x3096c9cd
- (BOOL)upgradeAccount;	// 0x3095f1ad
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x3095f209
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x3095f211
- (void)upgradeToHoodooAccountInfo;	// 0x3095f205
- (id)urlForKeychain;	// 0x3095ec55
// declared property getter: - (BOOL)useSSL;	// 0x3095d321
// declared property getter: - (id)user;	// 0x3095ec35
// declared property getter: - (id)username;	// 0x3095beb5
- (id)usernameWithoutDomain;	// 0x3095d1ad
- (BOOL)usesLegacyAccountSettings;	// 0x3095eb8d
// converted property getter: - (id)version;	// 0x3095d119
@end

