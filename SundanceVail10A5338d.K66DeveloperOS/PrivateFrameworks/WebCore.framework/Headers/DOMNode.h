/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

#import "WebCore-Structs.h"
#import "DOMEventTarget.h"
#import "DOMObject.h"

@class DOMDocument, NSString, DOMElement, DOMNamedNodeMap, DOMNodeList;

@interface DOMNode : DOMObject <DOMEventTarget> {
}
@property(readonly, assign) DOMNamedNodeMap *attributes;	// G=0x3584d105; 
@property(readonly, assign) NSString *baseURI;	// G=0x3584d72d; 
@property(readonly, assign) DOMNodeList *childNodes;	// G=0x356fae95; 
@property(readonly, assign) DOMNode *firstChild;	// G=0x355a3da1; 
@property(readonly, assign) BOOL isContentEditable;	// G=0x3584dd81; 
@property(readonly, assign) DOMNode *lastChild;	// G=0x356fb685; 
@property(readonly, assign) NSString *localName;	// G=0x3584d611; 
@property(readonly, assign) NSString *namespaceURI;	// G=0x3584d21d; 
@property(readonly, assign) DOMNode *nextSibling;	// G=0x355c6985; 
@property(readonly, assign) NSString *nodeName;	// G=0x356efb59; 
@property(readonly, assign) unsigned short nodeType;	// G=0x355c66d1; 
@property(copy) NSString *nodeValue;	// G=0x356f6d41; S=0x3584cf49; 
@property(readonly, assign) DOMDocument *ownerDocument;	// G=0x356f5255; 
@property(readonly, assign) DOMElement *parentElement;	// G=0x3584dc65; 
@property(readonly, assign) DOMNode *parentNode;	// G=0x356efd19; 
@property(copy) NSString *prefix;	// G=0x3584d339; S=0x3584d455; 
@property(readonly, assign) DOMNode *previousSibling;	// G=0x356ff2e9; 
@property(copy) NSString *textContent;	// G=0x3584d8ed; S=0x3584daad; 
- (Element *)_linkElement;	// 0x357dbfa5
- (RootObject *)_rootObject;	// 0x357db8dd
- (WKQuad)absoluteQuad;	// 0x357db969
- (WKQuad)absoluteQuadAndInsideFixedPosition:(BOOL *)position;	// 0x357db999
- (id)absoluteQuads;	// 0x35861945
- (void)addEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x3584f8e5
- (void)addEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x356f92d5
- (id)appendChild:(id)child;	// 0x356fa0c1
// declared property getter: - (id)attributes;	// 0x3584d105
// declared property getter: - (id)baseURI;	// 0x3584d72d
- (id)borderRadii;	// 0x35861b31
- (CGRect)boundingBox;	// 0x357db901
- (CGRect)boundingBoxUsingTransforms;	// 0x357dbc99
- (id)boundingBoxes;	// 0x358617cd
- (CGRect)boundingFrame;	// 0x357dc601
// declared property getter: - (id)childNodes;	// 0x356fae95
- (id)cloneNode:(BOOL)node;	// 0x3584e63d
- (unsigned short)compareDocumentPosition:(id)position;	// 0x3584f5c9
- (float)computedFontSize;	// 0x357dc7e5
- (BOOL)contains:(id)contains;	// 0x3584f6d9
- (BOOL)containsOnlyInlineObjects;	// 0x35861d75
- (void)dealloc;	// 0x355cbeb9
- (id)description;	// 0x357db7d5
- (BOOL)dispatchEvent:(id)event;	// 0x3584ffb9
- (void)finalize;	// 0x3584cef1
- (id)findExplodedTextNodeAtPoint:(CGPoint)point;	// 0x358623bd
// declared property getter: - (id)firstChild;	// 0x355a3da1
- (BOOL)hasAttributes;	// 0x3584ed09
- (BOOL)hasChildNodes;	// 0x355a3d2d
- (CGRect)hrefFrame;	// 0x357dc225
- (id)hrefLabel;	// 0x357dc27d
- (id)hrefTarget;	// 0x357dc1d9
- (id)hrefTitle;	// 0x357dc3ed
- (id)hrefURL;	// 0x357dbfcd
- (WKQuad)innerFrameQuad;	// 0x357dc625
- (id)insertBefore:(id)before :(id)arg2;	// 0x3584e025
- (id)insertBefore:(id)before refChild:(id)child;	// 0x3584de81
- (void)inspect;	// 0x3584f7e9
// declared property getter: - (BOOL)isContentEditable;	// 0x3584dd81
- (BOOL)isDefaultNamespace:(id)aNamespace;	// 0x3584f1c5
- (BOOL)isEqualNode:(id)node;	// 0x3584ee5d
- (BOOL)isSameNode:(id)node;	// 0x3584ee15
- (BOOL)isSelectableBlock;	// 0x35861dc1
- (BOOL)isSupported:(id)supported :(id)arg2;	// 0x3584ead9
- (BOOL)isSupported:(id)supported version:(id)version;	// 0x3584e8a9
// declared property getter: - (id)lastChild;	// 0x356fb685
- (id)lineBoxQuads;	// 0x357dbcf1
- (id)lineBoxRects;	// 0x357db959
// declared property getter: - (id)localName;	// 0x3584d611
- (id)lookupNamespaceURI:(id)uri;	// 0x3584f371
- (id)lookupPrefix:(id)prefix;	// 0x3584ef6d
// declared property getter: - (id)namespaceURI;	// 0x3584d21d
- (id)nextFocusNode;	// 0x357dc811
// declared property getter: - (id)nextSibling;	// 0x355c6985
// declared property getter: - (id)nodeName;	// 0x356efb59
// declared property getter: - (unsigned short)nodeType;	// 0x355c66d1
// declared property getter: - (id)nodeValue;	// 0x356f6d41
- (void)normalize;	// 0x3584e7ad
// declared property getter: - (id)ownerDocument;	// 0x356f5255
// declared property getter: - (id)parentElement;	// 0x3584dc65
// declared property getter: - (id)parentNode;	// 0x356efd19
// declared property getter: - (id)prefix;	// 0x3584d339
- (id)previousFocusNode;	// 0x357dc97d
// declared property getter: - (id)previousSibling;	// 0x356ff2e9
- (id)rangeOfContainingParagraph;	// 0x35861e01
- (id)removeChild:(id)child;	// 0x3584e511
- (void)removeEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x3584fd95
- (void)removeEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x3584fb71
- (id)replaceChild:(id)child :(id)arg2;	// 0x3584e36d
- (id)replaceChild:(id)child oldChild:(id)child2;	// 0x3584e1c9
// declared property setter: - (void)setNodeValue:(id)value;	// 0x3584cf49
// declared property setter: - (void)setPrefix:(id)prefix;	// 0x3584d455
// declared property setter: - (void)setTextContent:(id)content;	// 0x3584daad
// declared property getter: - (id)textContent;	// 0x3584d8ed
- (float)textHeight;	// 0x35862381
- (id)textRects;	// 0x357dcae9
@end

