/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "ML3Entity.h"
#import "MusicLibrary-Structs.h"

@class NSArray, NSString, ML3Predicate;

@interface ML3Container : ML3Entity {
}
@property(readonly, assign) NSArray *cloudDisplayOrderingTerms;	// G=0x3406b6d1; 
@property(readonly, assign) NSArray *displayOrderingTerms;	// G=0x3406b74d; 
@property(readonly, assign) ML3Predicate *dynamicPredicate;	// G=0x3406b29d; 
@property(readonly, assign, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;	// G=0x3406b39d; 
@property(readonly, assign) NSArray *limitOrderingTerms;	// G=0x3406b58d; 
@property(readonly, assign) long long limitValue;	// G=0x3406b609; 
@property(readonly, assign, getter=isLimitedByCount) BOOL limitedByCount;	// G=0x3406b351; 
@property(readonly, assign) NSString *limitingProperty;	// G=0x3406b489; 
@property(readonly, assign) ML3Predicate *staticPredicate;	// G=0x3406b241; 
+ (void)_insertNewSmartPlaylist:(id)playlist criteriaBlob:(id)blob evaluationOrder:(unsigned long)order limited:(BOOL)limited trackOrder:(unsigned long)order5 distinguishedKind:(int)kind inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x3406a059
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs;	// 0x3406ac31
+ (BOOL)createMissingBuiltInSmartPlaylists:(id)smartPlaylists;	// 0x3406a485
+ (id)databaseTable;	// 0x34039ca9
+ (id)defaultOrderingProperties;	// 0x3403f0c1
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs inLibrary:(id)library;	// 0x3406af79
+ (id)extraTablesToDelete;	// 0x34068ba1
+ (id)foreignColumnForProperty:(id)property;	// 0x34068b85
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x34068b69
+ (BOOL)hasCriterionInCriteriaList:(SearchCriteriaList *)criteriaList forITDBTrackField:(int)itdbtrackField;	// 0x34069cc9
+ (void)initialize;	// 0x3403817d
+ (id)joinClausesForProperty:(id)property;	// 0x34039c21
+ (id)nextFilepathForPlaylistType:(int)playlistType withPersistentID:(unsigned long long)persistentID inLibrary:(id)library;	// 0x34068bcd
+ (id)persistentIDColumnForTable:(id)table;	// 0x34068bb1
+ (void)populateDynamicContainersInLibrary:(id)library;	// 0x3406c47d
+ (void)populateDynamicContainersInLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x3406c4a1
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library;	// 0x3406c4c5
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x3406c4fd
+ (void)populateSortOrdersOfPropertyValues:(id)propertyValues inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x34068db9
+ (void)populateStaticItemsOfDynamicContainersInLibrary:(id)library;	// 0x3406bbd5
+ (id)predicateForCriteriaList:(SearchCriteriaList *)criteriaList dynamicCriteria:(BOOL)criteria;	// 0x34069d79
+ (int)revisionTrackingCode;	// 0x34068b49
+ (id)sectionPropertyForProperty:(id)property;	// 0x34068b4d
+ (BOOL)smartCriteriaCanBeEvaluated:(id)evaluated;	// 0x34068d15
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x34069009
- (void)_accessCurrentSwappedPersisentIDsUsingBlock:(id)block;	// 0x3406cfbd
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size;	// 0x3406cf75
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size notify:(BOOL)notify;	// 0x3406cc89
- (BOOL)addTrackWithPersistentID:(long long)persistentID;	// 0x3406dd01
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count;	// 0x3406dd2d
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x3406dd51
- (void)bindPopulateStatement:(id)statement withStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x3406bb49
// declared property getter: - (id)cloudDisplayOrderingTerms;	// 0x3406b6d1
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x34069b41
// declared property getter: - (id)displayOrderingTerms;	// 0x3406b74d
// declared property getter: - (id)dynamicPredicate;	// 0x3406b29d
- (id)evaluationOrderingTerms;	// 0x3406b511
- (SearchCriteriaList *)importedCriteriaList;	// 0x3406b1ad
- (BOOL)isCustomContainerOrderingDescending;	// 0x3406b43d
- (BOOL)isEvaluationOrderingDescending;	// 0x3406b2f9
// declared property getter: - (BOOL)isLimitOrderingDescending;	// 0x3406b39d
// declared property getter: - (BOOL)isLimitedByCount;	// 0x3406b351
// declared property getter: - (id)limitOrderingTerms;	// 0x3406b58d
// declared property getter: - (long long)limitValue;	// 0x3406b609
// declared property getter: - (id)limitingProperty;	// 0x3406b489
- (BOOL)moveTrackFromIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x3406e11d
- (id)populateSQLWithStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x3406b951
- (BOOL)removeAllTracks;	// 0x3406cf99
- (BOOL)removeTracksAtIndexes:(id)indexes;	// 0x3406db75
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify;	// 0x3406db51
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify indexesTransformBlock:(id)block;	// 0x3406d32d
- (BOOL)removeTracksWithPersistentIDs:(const long long *)persistentIDs atFilteredIndexes:(id)filteredIndexes;	// 0x3406db95
- (BOOL)setContainsTrack:(BOOL)track forPersistentID:(long long)persistentID notify:(BOOL)notify;	// 0x3406d851
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count;	// 0x3406e55d
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x3406e581
- (BOOL)setTracksWithSwappedPersistentIDData:(id)swappedPersistentIDData;	// 0x3406e8f9
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x34069661
// declared property getter: - (id)staticPredicate;	// 0x3406b241
@end

