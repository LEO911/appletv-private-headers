/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <NSObject.h> // Unknown library

@class NSString, ML3DatabaseMetadata, ML3NondurableWriteSet, ML3UbiquitousDatabase, MLSQLiteConnection, ML3Container, NSCountedSet, NSMutableArray, ML3MusicLibrary_SQLiteDatabaseContext, NSArray, ML3SqliteDatabase;
@protocol OS_dispatch_queue;

@interface ML3MusicLibrary : NSObject {
	NSString *_path;	// 4 = 0x4
	BOOL _enableWrites;	// 8 = 0x8
	ML3MusicLibrary_SQLiteDatabaseContext *_mainDatabaseContext;	// 12 = 0xc
	ML3MusicLibrary_SQLiteDatabaseContext *_backgroundDatabaseContext;	// 16 = 0x10
	MLSQLiteConnection *_inMemoryDatabaseConnection;	// 20 = 0x14
	NSObject<OS_dispatch_queue> *_atomicityQueue;	// 24 = 0x18
	ML3UbiquitousDatabase *_ubiquitousDatabase;	// 28 = 0x1c
	ML3SqliteDatabase *_geniusDatabase;	// 32 = 0x20
	NSCountedSet *_notifyNamesToIgnore;	// 36 = 0x24
	NSMutableArray *_pendingNotifyPostNames;	// 40 = 0x28
	NSString *_notifyName;	// 44 = 0x2c
	int _notifyToken;	// 48 = 0x30
	NSString *_nonContentsNotifyName;	// 52 = 0x34
	int _nonContentsNotifyToken;	// 56 = 0x38
	NSString *_invisiblePropertyNotifyName;	// 60 = 0x3c
	int _invisiblePropertyNotifyToken;	// 64 = 0x40
	NSString *_displayValuesNotifyName;	// 68 = 0x44
	int _displayValuesNotifyToken;	// 72 = 0x48
	NSString *_syncGenerationNotifyName;	// 76 = 0x4c
	int _syncGenerationNotifyToken;	// 80 = 0x50
	NSString *_libraryUIDNotifyName;	// 84 = 0x54
	int _libraryUIDNotifyToken;	// 88 = 0x58
	BOOL _requiresProcessAssertion;	// 92 = 0x5c
	int _backupDisabledCount;	// 96 = 0x60
	BOOL _backupNeeded;	// 100 = 0x64
	BOOL _hasEverConnectedToDatabase;	// 101 = 0x65
	id _mcSettingsObserver;	// 104 = 0x68
	id _loggingObserver;	// 108 = 0x6c
	NSObject<OS_dispatch_queue> *_nondurableConcurrentQueue;	// 112 = 0x70
	ML3NondurableWriteSet *_nondurableWriteSet;	// 116 = 0x74
	NSString *_artworkDirectory;	// 120 = 0x78
	BOOL _artworkDirectoryFilesystemRepresentation[1024];	// 124 = 0x7c
	BOOL _hasEverConnectedTo;	// 1148 = 0x47c
	BOOL _keepPresignedValidyAfterVerification;	// 1149 = 0x47d
}
@property(readonly, assign) long long autoFilledTracksTotalSize;	// G=0x34057d9d; 
@property(readonly, assign) long long currentContentRevision;	// G=0x340348c1; 
@property(readonly, assign) long long currentRevision;	// G=0x3402d535; 
@property(readonly, assign) ML3DatabaseMetadata *databaseInfo;	// G=0x340306b5; 
@property(readonly, retain) ML3SqliteDatabase *geniusDatabase;	// G=0x3403f439; converted property
@property(readonly, assign, nonatomic) BOOL hasEverConnectedToDatabase;	// G=0x3405bf01; @synthesize=_hasEverConnectedTo
@property(assign, nonatomic) BOOL keepPresignedValidyAfterVerification;	// G=0x3405bf11; S=0x3405bf21; @synthesize=_keepPresignedValidyAfterVerification
@property(retain) id libraryUID;	// G=0x34038e99; S=0x340569cd; converted property
@property(readonly, assign) NSArray *localizedSectionIndexTitles;	// G=0x340376a9; 
@property(readonly, assign) BOOL mediaRestrictionEnabled;	// G=0x34033389; 
@property(readonly, assign, nonatomic, getter=isNondurableWritingActive) BOOL nondurableWritingActive;	// G=0x3403d7d1; 
@property(readonly, assign) NSString *path;	// G=0x3402f005; @synthesize=_path
@property(readonly, assign) long long persistentID;	// G=0x34056939; 
@property(readonly, assign) NSArray *preferredAudioTracks;	// G=0x3403062d; 
@property(readonly, assign) NSArray *preferredSubtitleTracks;	// G=0x34032bd9; 
@property(readonly, assign) ML3Container *purchasedTracksPlaylist;	// G=0x34054769; 
@property(readonly, assign) BOOL requiresPostProcessing;	// G=0x3402f01d; 
@property(assign) long long syncGenerationID;	// G=0x34039ad9; S=0x34056955; 
@property(readonly, retain) ML3UbiquitousDatabase *ubiquitousDatabase;	// G=0x3402f74d; converted property
@property(readonly, assign, nonatomic) BOOL writable;	// G=0x340521a5; 
+ (BOOL)_inTransactionUpdateSearchMapOnConnection:(id)transactionUpdateSearchMapOnConnection;	// 0x34087839
+ (BOOL)_inTransactionUpdateSortMapOnConnection:(id)transactionUpdateSortMapOnConnection;	// 0x34086e19
+ (id)_newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes forLibrary:(id)library;	// 0x34027075
+ (id)_purgeableTrackPredicateWithUrgency:(int)urgency;	// 0x34057589
+ (void)_stepStatement:(sqlite3_stmt *)statement hasRow:(BOOL *)row didFinish:(BOOL *)finish;	// 0x34052871
+ (id)allArtworkFormatSizes;	// 0x34058479
+ (id)allSchemaSQL;	// 0x34080d0d
+ (id)allTables;	// 0x34080fcd
+ (MLArtworkFormatSpec)artworkFormatSpecForArtworkFormatID:(unsigned)artworkFormatID;	// 0x340395c5
+ (void)beginDatabaseMigrationIfNecessary;	// 0x3402ef1d
+ (BOOL)buildDatabaseTablesUsingConnection:(id)connection;	// 0x34081371
+ (void)connection:(id)connection didOpenDBHandle:(sqlite3 *)handle;	// 0x34052435
+ (void)connection:(id)connection willCloseDBHandle:(sqlite3 *)handle;	// 0x34052469
+ (id)controlDirectoryPathWithBasePath:(id)basePath;	// 0x3409e3a9
+ (BOOL)createIndexesUsingConnection:(id)connection;	// 0x340843e1
+ (int)currentUserVersion;	// 0x3402f3b1
+ (BOOL)dropIndexesUsingConnection:(id)connection;	// 0x340843c1
+ (BOOL)dropIndexesUsingConnection:(id)connection tableNames:(const char *)names;	// 0x34084169
+ (void)enumerateSortMapTablesUsingBlock:(id)block;	// 0x34056359
+ (BOOL)executeSQL:(id)sql usingHandle:(sqlite3 *)handle;	// 0x3405403d
+ (id)fallbackGeniusDatabaseFilePath;	// 0x34052299
+ (id)geniusDatabaseFilePath;	// 0x3403f57d
+ (BOOL)importationEnabled;	// 0x34051ad5
+ (id)indexSchemaSQL;	// 0x34081235
+ (void)initialize;	// 0x34024e0d
+ (id)itemIndexSchemaSQL;	// 0x340811ad
+ (id)itemSchemaSQL;	// 0x34080cf5
+ (id)localizedSectionHeaderForSectionHeader:(id)sectionHeader;	// 0x3403afa9
+ (id)localizedSectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x3403af29
+ (id)mainDatabasePath;	// 0x340265f5
+ (id)mediaFolderPath;	// 0x3409e2b1
+ (id)mediaFolderRelativePath:(id)path;	// 0x3409e2d9
+ (BOOL)migrateToCurrentUserVersionUsingConnection:(id)currentUserVersionUsingConnection;	// 0x34081785
+ (id)newDatabaseConnectionForPath:(id)path enableWrites:(BOOL)writes;	// 0x34027051
+ (unsigned)numberOfArtworkStyles;	// 0x34058969
+ (BOOL)orderingLanguageMatchesSystemUsingConnection:(id)connection;	// 0x3402f3bd
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder;	// 0x3409ea85
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base createParentFolderIfNecessary:(BOOL)necessary;	// 0x3409eaa9
+ (id)pathForResourceFileOrFolder:(int)resourceFileOrFolder basePath:(id)path relativeToBase:(BOOL)base isFolder:(BOOL *)folder;	// 0x3409e3c5
+ (unsigned)readableArtworkFormatIDForArtworkFormatID:(unsigned)artworkFormatID;	// 0x34058699
+ (id)sectionIndexTitleForSectionHeader:(id)sectionHeader;	// 0x3403ab69
+ (id)sectionIndexTitles;	// 0x3403ab01
+ (void)setImportationEnabled:(BOOL)enabled;	// 0x340252a1
+ (id)sharedLibrary;	// 0x340253f5
+ (id)sortMapSchemaSQL;	// 0x34080cdd
+ (BOOL)statementDidFinishAfterStepping:(sqlite3_stmt *)statement;	// 0x34052845
+ (BOOL)statementHasRowAfterStepping:(sqlite3_stmt *)stepping;	// 0x3405281d
+ (id)storeLinkSchemaSQL;	// 0x34080cc5
+ (id)systemCurrentLanguage;	// 0x3402f6ad
+ (BOOL)updateSortMapOnConnection:(id)connection;	// 0x340878b9
+ (BOOL)updateTrackIntegrityOnConnection:(id)connection;	// 0x34052165
+ (BOOL)userVersionMatchesSystemUsingConnection:(id)connection;	// 0x3402f309
+ (int)userVersionUsingConnection:(id)connection;	// 0x3402f369
- (id)initWithPath:(id)path enableWrites:(BOOL)writes;	// 0x34025e11
- (void).cxx_destruct;	// 0x3405bf31
- (void)_accessAccountCacheDBForSQL:(id)sql usingBlock:(id)block;	// 0x3405b22d
- (void)_accessDatabaseContextUsingBlock:(id)block;	// 0x3402d6f9
- (id)_albumArtistGroupingNameFromDataSource:(id)dataSource;	// 0x3409109d
- (long long)_albumArtistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingAlbumArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoAlbumArtistStatement:(id)statement;	// 0x34091431
- (id)_albumGroupingIdentifierFromDataSource:(id)dataSource albumArtistPersistentID:(long long)anId groupingKeysForGroupingNames:(id)groupingNames;	// 0x340919c9
- (long long)_albumPIDFromDataSource:(id)dataSource sortableNames:(id)names albumArtistPID:(long long)pid existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers insertIntoAlbumStatement:(id)statement groupingKeysForGroupingNames:(id)groupingNames;	// 0x34091e35
- (id)_artistGroupingNameFromDataSource:(id)dataSource;	// 0x340906bd
- (long long)_artistPIDFromDataSource:(id)dataSource sortableNames:(id)names existingArtistPIDsForGroupingKeys:(id)groupingKeys insertIntoItemArtistStatement:(id)statement;	// 0x34090a01
- (long long)_baseLocationPIDFromDataSource:(id)dataSource;	// 0x34093619
- (BOOL)_commitNondurableWrites;	// 0x3403c129
- (id)_composerGroupingNameFromDataSource:(id)dataSource;	// 0x34092d05
- (long long)_composerPIDFromDataSource:(id)dataSource sortableNames:(id)names existingComposerPIDsForGroupingKeys:(id)groupingKeys insertIntoComposerStatement:(id)statement;	// 0x34092f85
- (void)_delayableNotifyPost:(id)post localNotificationName:(id)name;	// 0x3403deb9
- (BOOL)_drawAndWriteImage:(CGImageRef)image outputWidth:(unsigned long)width outputHeight:(unsigned long)height colorSpace:(CGColorSpaceRef)space cacheID:(id)anId formatID:(unsigned)anId6 artworkStyle:(XXStruct_$eUQoB *)style resultingImageSubRect:(CGRect *)rect resultingLength:(unsigned *)length;	// 0x34053769
- (void)_enumerateDatabaseContextsUsingBlock:(id)block;	// 0x3405181d
- (void)_enumeratePurgeableTracksForUrgency:(int)urgency respectSongMattress:(BOOL)mattress usingBlock:(id)block;	// 0x34057769
- (id)_existingAlbumStatesForGroupingIdentifiers:(id)groupingIdentifiers;	// 0x34096e65
- (id)_existingCollectionPIDsForTable:(id)table groupingNames:(id)names groupingKeysForGroupingNames:(id)groupingNames;	// 0x3409665d
- (id)_genreGroupingNameFromDataSource:(id)dataSource;	// 0x340926ed
- (long long)_genrePIDFromDataSource:(id)dataSource sortableNames:(id)names existingGenrePIDsForGroupingKeys:(id)groupingKeys insertIntoGenreStatement:(id)statement;	// 0x34092955
- (id)_insertIntoAlbumArtistStatement;	// 0x3409125d
- (id)_insertIntoAlbumStatement;	// 0x34091bed
- (id)_insertIntoChapterUsingVtabSQL;	// 0x340960d1
- (id)_insertIntoComposerStatement;	// 0x34092dc5
- (id)_insertIntoGenreStatement;	// 0x340927ad
- (id)_insertIntoItemArtistStatement;	// 0x34090815
- (id)_insertIntoItemExtraUsingVtabSQL;	// 0x34094a55
- (id)_insertIntoItemSearchUsingVtabSQL;	// 0x34095b45
- (id)_insertIntoItemStatsUsingVtabSQL;	// 0x34095665
- (id)_insertIntoItemUsingVtabSQL;	// 0x34093ca9
- (id)_insertIntoPurgeableListUsingVtabSQL;	// 0x34095db9
- (id)_insertStringsIntoSortMapOrFail:(id)fail;	// 0x34084efd
- (long long)_int64ValueForFirstRowAndColumnWithSQL:(id)sql;	// 0x3402d555
- (long long)_locationKindPIDFromDataSource:(id)dataSource;	// 0x34093429
- (void)_migrateArtworkFrom:(unsigned)from to:(unsigned)to;	// 0x3405a8b9
- (BOOL)_mustProcessLanguageChange;	// 0x340564bd
- (id)_newGeniusDBConnectionAtPath:(id)path;	// 0x3403f599
- (void)_onBackgroundQueuePerformDatabaseContextBlock:(id)block;	// 0x3402d909
- (void)_onMainQueuePerformDatabaseContextBlock:(id)block;	// 0x34031765
- (void)_populateNameOrderForPID:(unordered_map<long long, ML3NameOrder, std::tr1::hash<long long>, std::equal_to<long long>, std::allocator<std::pair<const long long, ML3NameOrder>>, false> *)pid table:(id)table nameSQL:(id)sql;	// 0x34096255
- (void)_postChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x34056235
- (void)_postDisplayValuesChangeNotificationLocalOnly:(BOOL)only;	// 0x34056325
- (void)_postInvisiblePropertyChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x340562f1
- (void)_postLibraryNotification:(id)notification isSourceExternal:(BOOL)external userInfo:(id)info;	// 0x3403e651
- (void)_postNonContentsChangeNotificationAndScheduleFlushLocalOnly:(BOOL)only;	// 0x3403de85
- (id)_replaceIntoPurgeableListUsingVtabSQL;	// 0x34095f55
- (BOOL)_runStatementWithSQL:(id)sql bindingValue:(id)value :(id)arg3;	// 0x3405356d
- (void)_scheduleCommitNondurableWritesAfterTimeInterval:(double)interval;	// 0x3405b841
- (BOOL)_writeCGImage:(CGImageRef)image length:(unsigned long)length forCacheID:(id)cacheID formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x34053b71
- (BOOL)_writeImageBytes:(const void *)bytes length:(unsigned long)length formatID:(unsigned)anId cacheID:(id)anId4;	// 0x34053c59
- (void)accessConnectionUsingBlock:(id)block;	// 0x3402f165
- (void)accessDatabaseUsingBlock:(id)block;	// 0x34052c71
- (void)accessSortKeyBuilder:(id)builder;	// 0x34037da5
- (long long)addStringToSortMap:(id)sortMap;	// 0x34056559
- (id)albumArtistForEffectiveAlbumArtistName:(id)effectiveAlbumArtistName;	// 0x3407671d
- (id)albumForAlbumArtistPersistentID:(long long)albumArtistPersistentID albumName:(id)name feedURL:(id)url seasonNumber:(id)number compilation:(BOOL)compilation;	// 0x34063895
- (id)appleIDForDSID:(unsigned long long)dsid;	// 0x3405b52d
- (id)artistForArtistName:(id)artistName seriesName:(id)name;	// 0x34062931
- (id)artistGroupingKeyForArtistName:(id)artistName seriesName:(id)name;	// 0x340628c5
- (id)artworkDataForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x34039711
// declared property getter: - (long long)autoFilledTracksTotalSize;	// 0x34057d9d
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency;	// 0x34057db1
- (long long)autoFilledTracksTotalSizeWithUrgency:(int)urgency respectSongMattress:(BOOL)mattress;	// 0x34057dc5
- (BOOL)buildDatabaseTables;	// 0x34081635
- (BOOL)coerceValidDatabase;	// 0x3408482d
- (BOOL)compactArtwork;	// 0x34059dd1
- (id)composerForComposerName:(id)composerName;	// 0x34075ab5
- (BOOL)createIndexes;	// 0x34084635
// declared property getter: - (long long)currentContentRevision;	// 0x340348c1
// declared property getter: - (long long)currentRevision;	// 0x3402d535
// declared property getter: - (id)databaseInfo;	// 0x340306b5
- (void)dealloc;	// 0x3405235d
- (BOOL)deleteAllArtwork;	// 0x340593ed
- (BOOL)deleteAndRecreateDatabaseUsingConnection:(id)connection;	// 0x340847a9
- (BOOL)deleteArtworkForCacheID:(id)cacheID;	// 0x3405960d
- (BOOL)deleteArtworkForCacheID:(id)cacheID formatID:(unsigned)anId;	// 0x34059a99
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize;	// 0x34057f21
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency;	// 0x34057f45
- (long long)deleteAutoFilledTracksOfAtLeastTotalSize:(long long)leastTotalSize urgency:(int)urgency respectSongMattress:(BOOL)mattress;	// 0x34057f69
- (BOOL)deleteDatabase;	// 0x34053245
- (void)deletePresignedValidity;	// 0x34051d81
- (BOOL)dropItemIndexes;	// 0x340844d9
- (void)enumeratePersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(unsigned)code usingBlock:(id)block;	// 0x34056a1d
- (void)enumeratePersistentIDsAfterRevision:(long long)revision usingBlock:(id)block;	// 0x34056f51
- (BOOL)executeSQL:(id)sql;	// 0x340527dd
// converted property getter: - (id)geniusDatabase;	// 0x3403f439
- (id)genreForGenre:(id)genre;	// 0x34067e85
- (void)getChangedPersistentIDsAfterRevision:(long long)revision revisionTrackingCode:(int)code usingBlock:(id)block;	// 0x34057181
- (id)groupingKeyForString:(id)string;	// 0x34052d39
- (id)groupingKeysForStrings:(id)strings;	// 0x34052f4d
- (BOOL)handlePrepareDatabase;	// 0x34076d61
- (BOOL)hasArtworkForCacheID:(id)cacheID;	// 0x340586dd
- (BOOL)hasArtworkForCacheID:(id)cacheID ensureArtworkFileExists:(BOOL)exists;	// 0x340586f5
// declared property getter: - (BOOL)hasEverConnectedToDatabase;	// 0x3405bf01
- (BOOL)hasPresignedValidity;	// 0x34051ddd
- (BOOL)importTracksFromDataSource:(id)dataSource;	// 0x3409a4f5
- (BOOL)importTracksFromDataSource:(id)dataSource progressHandler:(id)handler;	// 0x3409a519
- (BOOL)insertArtworkWithImageData:(id)imageData forCacheID:(id)cacheID;	// 0x34059265
- (long long)insertStringIntoSortMapNoTransaction:(id)transaction;	// 0x340864b1
- (id)insertStringsIntoSortMap:(id)map;	// 0x340862cd
// declared property getter: - (BOOL)isNondurableWritingActive;	// 0x3403d7d1
- (BOOL)isReadable;	// 0x34056555
// declared property getter: - (BOOL)keepPresignedValidyAfterVerification;	// 0x3405bf11
// converted property getter: - (id)libraryUID;	// 0x34038e99
- (void)loadArtworkForCacheID:(id)cacheID formatID:(unsigned)anId completionHandler:(id)handler;	// 0x34039665
- (id)localizedSectionHeaderForSectionIndex:(unsigned)sectionIndex;	// 0x34037c01
// declared property getter: - (id)localizedSectionIndexTitles;	// 0x340376a9
- (id)locationKindForKind:(id)kind;	// 0x3408a505
// declared property getter: - (BOOL)mediaRestrictionEnabled;	// 0x34033389
- (void)migrateAlbumGridBGRA1xToJPEG1x;	// 0x3405b06d
- (void)migrateAlbumListJPEGToBGRA;	// 0x3405b125
- (BOOL)migrateLegacyArtworkFromArtworkBlobFilePath:(id)artworkBlobFilePath;	// 0x3405a3a9
- (void)migratePresignedValidity;	// 0x34052101
- (XXStruct_Cy4r_A)nameOrderForString:(id)string;	// 0x34084c6d
- (id)newDatabaseConnection;	// 0x34026edd
- (id)nondurableWriteSetForReading;	// 0x34031de5
- (id)nondurableWriteSetForWriting;	// 0x3403b79d
- (void)notifyContentsDidChange;	// 0x34054511
- (void)notifyDisplayValuesPropertyDidChange;	// 0x340546a9
- (void)notifyInvisiblePropertyDidChange;	// 0x340545e9
- (void)notifyNonContentsPropertyDidChange;	// 0x3403dc39
// declared property getter: - (id)path;	// 0x3402f005
- (void)performTransactionAllowingWrites:(BOOL)writes withBlock:(id)block;	// 0x34034a59
- (void)performTransactionKind:(int)kind waitIfBusy:(BOOL)busy withBlock:(id)block;	// 0x34034a85
- (void)performTransactionKind:(int)kind withBlock:(id)block;	// 0x340540d5
- (void)performTransactionWithBlock:(id)block;	// 0x3403ca81
// declared property getter: - (long long)persistentID;	// 0x34056939
- (BOOL)persistentID:(long long)anId changedAfterRevision:(long long)revision revisionTrackingCode:(int)code;	// 0x34056fdd
- (BOOL)populateArtworkCacheWithArtworkData:(id)artworkData trackValues:(id)values;	// 0x3407d755
- (BOOL)populateStaticItemsOfDynamicContainers;	// 0x340527f5
// declared property getter: - (id)preferredAudioTracks;	// 0x3403062d
// declared property getter: - (id)preferredSubtitleTracks;	// 0x34032bd9
- (void)prepareStatementForSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x34053e29
- (void)prepareStatementForSQL:(id)sql usingBlock:(id)block;	// 0x34054005
// declared property getter: - (id)purchasedTracksPlaylist;	// 0x34054769
- (void)reconnectToDatabase;	// 0x340528f9
- (void)reconnectToDatabaseWithCompletionHandler:(id)completionHandler;	// 0x3405290d
- (BOOL)removeLocationsForItemsMissingAssets;	// 0x34087975
- (void)removeOrphanedTracks;	// 0x3405b9ad
// declared property getter: - (BOOL)requiresPostProcessing;	// 0x3402f01d
- (BOOL)resetAllContents;	// 0x34087e0d
- (void)resetUbiquitousMetadata;	// 0x340521b5
- (BOOL)runStatementWithSQL:(id)sql bindingValue:(id)value;	// 0x340533a5
- (void)savePlaylists;	// 0x3405570d
- (void)savePlaylistsSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x34055731
- (void)saveTrackMetadata;	// 0x34054ccd
- (void)saveTrackMetadataSinceRevision:(long long)revision withGrappaID:(unsigned)grappaID;	// 0x34054cf1
- (unsigned)sectionIndexTitleIndexForSectionIndex:(unsigned)sectionIndex;	// 0x34037ed5
- (BOOL)setAppleID:(id)anId forDSID:(unsigned long long)dsid;	// 0x3405b375
// declared property setter: - (void)setKeepPresignedValidyAfterVerification:(BOOL)verification;	// 0x3405bf21
// converted property setter: - (void)setLibraryUID:(id)uid;	// 0x340569cd
// declared property setter: - (void)setSyncGenerationID:(long long)anId;	// 0x34056955
- (BOOL)setValue:(id)value forDatabaseProperty:(id)databaseProperty;	// 0x3405b729
- (id)statementWithSQL:(id)sql;	// 0x34041c79
- (void)statementWithSQL:(id)sql cache:(BOOL)cache usingBlock:(id)block;	// 0x3402d66d
- (void)statementWithSQL:(id)sql usingBlock:(id)block;	// 0x340316a1
- (void)statementWithSQLPrefix:(id)sqlprefix inPersistentIDs:(const long long *)persistentIDs count:(unsigned)count usingBlock:(id)block;	// 0x34051115
// declared property getter: - (long long)syncGenerationID;	// 0x34039ad9
// converted property getter: - (id)ubiquitousDatabase;	// 0x3402f74d
- (BOOL)updateActivePlaylistNamesForCurrentLanguage;	// 0x340774a1
- (void)updateOrderingLanguagesForCurrentLanguage;	// 0x3407764d
- (BOOL)updateSortMap;	// 0x34056755
- (void)updateTrackIntegrity;	// 0x34052189
- (id)valueForDatabaseProperty:(id)databaseProperty;	// 0x34038eb9
- (BOOL)verifyPresignedValidity;	// 0x34051e51
// declared property getter: - (BOOL)writable;	// 0x340521a5
- (BOOL)writeToDatabaseArtworkForCacheID:(id)cacheID length:(unsigned long)length formatID:(unsigned)anId imageSubRect:(CGRect)rect;	// 0x34058f45
- (BOOL)writeToDiskArtworkWithImageData:(id)imageData forCacheID:(id)cacheID resultingLengths:(unsigned **)lengths formatIDs:(unsigned **)ids imageSubRects:(CGRect **)rects count:(unsigned *)count;	// 0x3405896d
@end

