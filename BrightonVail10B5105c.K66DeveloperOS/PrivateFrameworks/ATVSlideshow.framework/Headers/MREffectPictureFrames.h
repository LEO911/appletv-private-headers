/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
 */

#import "ATVSlideshow-Structs.h"
#import "MZEffectTiming.h"
#import "MREffect.h"

@class NSMutableDictionary, NSMutableArray, MRImageProvider, MRCroppingSprite, NSString;

@interface MREffectPictureFrames : MREffect <MZEffectTiming> {
	NSMutableDictionary *mSprites;	// 116 = 0x74
	NSMutableDictionary *mFrameProviders;	// 120 = 0x78
	MRCroppingSprite *mFrameSprite;	// 124 = 0x7c
	MRImageProvider *mWallProvider;	// 128 = 0x80
	MRImageProvider *mGradientProvider;	// 132 = 0x84
	NSMutableArray *mTableProviders;	// 136 = 0x88
	NSMutableArray *mWallSprites;	// 140 = 0x8c
	NSMutableArray *mLayoutWidths;	// 144 = 0x90
	float mTotalWidth;	// 148 = 0x94
	float mXOffset;	// 152 = 0x98
	BOOL mIsLoaded;	// 156 = 0x9c
	NSMutableArray *mLayouts;	// 160 = 0xa0
	NSMutableArray *mFrames;	// 164 = 0xa4
	NSMutableArray *mSlideOrder;	// 168 = 0xa8
	NSMutableArray *mAspectRatios;	// 172 = 0xac
	NSString *mFirstFrame;	// 176 = 0xb0
	NSString *mLastFrame;	// 180 = 0xb4
}
@property(readonly, assign, nonatomic) double mainDuration;	// @dynamic
@property(readonly, assign, nonatomic) double phaseInDuration;	// @dynamic
@property(readonly, assign, nonatomic) double phaseOutDuration;	// @dynamic
+ (id)customTimingWithEffectID:(id)effectID effectAttributes:(id)attributes slideInformation:(id)information textInformation:(id)information4 inAspectRatio:(float)aspectRatio;	// 0x325906e9
+ (BOOL)hasCustomTiming;	// 0x325906e1
+ (void)initialize;	// 0x3258be81
- (id)initWithEffectID:(id)effectID;	// 0x3258dc7d
- (void)_applyTimingToSlideProviders;	// 0x32590889
- (float)_aspectRatioForSlideIndex:(int)slideIndex;	// 0x32591eb5
- (void)_cleanup;	// 0x3258dd91
- (void)_drawBreakFrame:(id)frame provider:(id)provider index:(int)index rect:(CGRect)rect time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x32594541
- (void)_drawBreakFrameInRect:(CGRect)rect frameWidth:(float)width time:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x32594b6d
- (id)_drawFrame:(id)frame provider:(id)provider index:(int)index rect:(CGRect)rect time:(double)time onTable:(BOOL)table inContext:(id)context withArguments:(id)arguments;	// 0x32594fed
- (double)_durationForEffect;	// 0x32590c01
- (double)_durationForEffect:(BOOL)effect;	// 0x32590c19
- (CGRect)_frameRectFromInfo:(id)info onShelf:(BOOL)shelf;	// 0x32592231
- (float)_nextSlideProviderAspectRatioToFitInAspectRatio:(id)aspectRatio providerKeys:(id)keys slideInformation:(id)information index:(int *)index force:(BOOL)force;	// 0x32593bf1
- (id)_populateFrames;	// 0x32591f41
- (id)_randomFrameForAspectRatio:(id)aspectRatio forTable:(BOOL)table allowMatte:(BOOL)matte onlyLoaded:(BOOL)loaded ignoreFrames:(id)frames randomGenerator:(id)generator;	// 0x3259407d
- (CGRect)_rectForFrameID:(id)frameID rect:(CGRect)rect onTable:(BOOL)table aspectRatio:(float)ratio slideAspectRatio:(float)ratio5;	// 0x32594371
- (void)_setupLayoutWithSlideInformation:(id)slideInformation;	// 0x32591235
- (float)_startingOffset;	// 0x325911b5
- (float)_startingWidth;	// 0x3259105d
- (void)_unload;	// 0x3259584d
- (float)_xForSlideAtIndex:(int)index layoutWidth:(float *)width;	// 0x32592311
- (double)displayTimeForSlideAtIndex:(unsigned)index;	// 0x325929b1
- (double)displayTimeForTextAtIndex:(unsigned)index;	// 0x32592a99
- (id)elementHitAtPoint:(CGPoint)point withInverseMatrix:(float [16])inverseMatrix localPoint:(CGPoint *)point3;	// 0x325956b9
- (BOOL)getVerticesCoordinates:(CGPoint (*)[4])coordinates withMatrix:(float [16])matrix forElement:(id)element;	// 0x32595805
- (BOOL)isLoadedForTime:(double)time;	// 0x3258e579
- (id)layoutsWithSlidesInfo:(id)slidesInfo seed:(unsigned)seed hasShelf:(BOOL)shelf;	// 0x3258e089
- (double)lowestDisplayTime;	// 0x32592ab1
- (BOOL)prerenderForTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x3258e999
- (void)renderAtTime:(double)time inContext:(id)context withArguments:(id)arguments;	// 0x32592ac9
- (void)setPhaseInDuration:(double)duration mainDuration:(double)duration2 phaseOutDuration:(double)duration3;	// 0x32590839
- (void)setPixelSize:(CGSize)size;	// 0x3258e779
- (double)showDurationForSlideAtIndex:(unsigned)index;	// 0x32592871
- (double)showTimeForSlideAtIndex:(unsigned)index;	// 0x32592781
@end

