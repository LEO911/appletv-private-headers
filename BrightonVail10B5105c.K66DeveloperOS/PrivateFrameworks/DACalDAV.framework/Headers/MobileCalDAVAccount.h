/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DAAccount.h> // Unknown library
#import "DACalDAV-Structs.h"

@class NSURL, NSDictionary, NSTimeZone, DACoreDAVTaskManager, NSMutableDictionary, NSMutableSet, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, CalDAVServerVersion, NSDate, MobileCalDAVPrincipal, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, NSString, NSSet;

@interface MobileCalDAVAccount : DAAccount {
	DACoreDAVTaskManager *_taskManager;	// 60 = 0x3c
	NSMutableDictionary *_principals;	// 64 = 0x40
	MobileCalDAVPrincipal *_mainPrincipal;	// 68 = 0x44
	int _preferredEventDaysToSync;	// 72 = 0x48
	int _preferredToDoDaysToSync;	// 76 = 0x4c
	NSMutableSet *_calendars;	// 80 = 0x50
	BOOL _subscribedCalendarsChanged;	// 84 = 0x54
	NSString *_collectionSetName;	// 88 = 0x58
	CalDAVPrincipalSearchPropertySet *_searchPropertySet;	// 92 = 0x5c
	CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;	// 96 = 0x60
	MobileCalDAVAccountRefreshActor *_actor;	// 100 = 0x64
	BOOL _isRefreshing;	// 104 = 0x68
	BOOL _isSpinning;	// 105 = 0x69
	BOOL _needsAccountPropertyRefresh;	// 106 = 0x6a
	CalDAVRefreshContext *_refreshContext;	// 108 = 0x6c
	NSMutableSet *_searchTaskSet;	// 112 = 0x70
	DACoreDAVLogger *_curLogger;	// 116 = 0x74
	CalDAVServerVersion *_serverVersion;	// 120 = 0x78
	NSMutableDictionary *_itemIDsToMoveActions;	// 124 = 0x7c
	NSMutableSet *_movedItemURLStrings;	// 128 = 0x80
	int _wasMigrated;	// 132 = 0x84
	BOOL _searchQueriesShouldCancel;	// 136 = 0x88
}
@property(assign) int calDAVAccountVersion;	// G=0x3174b189; S=0x3174b1bd; 
@property(readonly, assign) NSSet *calendars;	// G=0x3174b959; 
@property(retain) NSURL *collectionSetURL;	// G=0x3174b671; S=0x3174b6b5; 
@property(retain) id host;	// G=0x3174ff1d; S=0x3174ff95; converted property
@property(assign) BOOL isRefreshing;	// G=0x31750311; S=0x31750329; @synthesize=_isRefreshing
@property(assign) BOOL isWritable;	// G=0x3174b745; S=0x3174b7b1; 
@property(readonly, assign) NSMutableDictionary *itemIDsToMoveActions;	// G=0x31750395; @synthesize=_itemIDsToMoveActions
@property(retain) MobileCalDAVPrincipal *mainPrincipal;	// G=0x317503bd; S=0x317503d1; @synthesize=_mainPrincipal
@property(readonly, assign) NSSet *movedItemURLStrings;	// G=0x317503a9; @synthesize=_movedItemURLStrings
@property(assign) BOOL needsAccountPropertyRefresh;	// G=0x31750365; S=0x3175037d; @synthesize=_needsAccountPropertyRefresh
@property(readonly, assign) NSDate *ocurrenceCacheEndDate;	// G=0x3174c36d; 
@property(readonly, assign) NSDate *ocurrenceCacheStartDate;	// G=0x3174c335; 
@property(assign) int overriddenPort;	// G=0x3174b2dd; S=0x3174b27d; 
@property(retain) NSString *overriddenScheme;	// G=0x3174b371; S=0x3174b311; 
@property(retain) NSString *overriddenServer;	// G=0x3174b261; S=0x3174b201; 
@property(assign) int port;	// G=0x31750225; S=0x3175019d; converted property
@property(assign) int preferredEventDaysToSync;	// G=0x317503f5; S=0x31750409; @synthesize=_preferredEventDaysToSync
@property(assign) int preferredToDoDaysToSync;	// G=0x31750421; S=0x31750435; @synthesize=_preferredToDoDaysToSync
@property(retain) id principalURL;	// G=0x3174b38d; S=0x3174b3ad; converted property
@property(readonly, assign) NSDictionary *principals;	// G=0x317503e1; @synthesize=_principals
@property(retain) CalDAVRefreshContext *refreshContext;	// G=0x31750341; S=0x31750355; @synthesize=_refreshContext
@property(retain) id scheme;	// G=0x3175005d; S=0x317500d5; converted property
@property(retain) id searchPropertySet;	// G=0x3174b6f1; S=0x3174b701; 
@property(assign) BOOL searchQueriesShouldCancel;	// G=0x3175044d; S=0x31750465; @synthesize=_searchQueriesShouldCancel
@property(assign) CalDAVServerVersion *serverVersion;	// G=0x3174c151; S=0x3174c1c9; 
@property(readonly, assign) BOOL shouldFilterEventSyncTimeRange;	// G=0x3174c3a5; 
@property(readonly, assign) BOOL shouldFilterSyncTimeRangeForInbox;	// G=0x3174c43d; 
@property(readonly, assign) BOOL shouldFilterTodoSyncTimeRange;	// G=0x3174c3f1; 
@property(retain, nonatomic) NSDictionary *subscribedCalendars;	// G=0x3174b169; S=0x3174b0cd; 
@property(readonly, assign) BOOL supportsEvents;	// G=0x3174c569; 
@property(readonly, assign) BOOL supportsReminders;	// G=0x3174c4a5; 
@property(readonly, retain) DACoreDAVTaskManager *taskManager;	// G=0x3174c5bd; converted property
@property(assign) BOOL useSSL;	// G=0x317502e1; S=0x317502b1; converted property
@property(retain) id username;	// G=0x3174fde9; S=0x3174fe51; converted property
@property(readonly, assign) NSTimeZone *viewedTimeZone;	// G=0x3174c319; 
@property(assign) BOOL wasMigrated;	// G=0x3174b7f5; S=0x3174b83d; 
+ (Class)accountClass;	// 0x3174a349
+ (Class)clientClass;	// 0x3174a365
+ (id)defaultProperties;	// 0x31749aad
+ (id)supportedDataclasses;	// 0x3174a381
- (id)init;	// 0x31749bf1
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x31749a69
- (id)initWithProperties:(id)properties;	// 0x31749a25
- (id)_calendarConstraintsPath;	// 0x3174c711
- (id)_calendarConstraintsResource;	// 0x3174c60d
- (void)_clearOrphanedCalendarItemChangesOfType:(int)type withContext:(id)context goodCalendarIds:(id)ids;	// 0x3174cee9
- (void)_clearOrphanedChangesWithChangesCall:(/*function-pointer*/ void *)changesCall clearChanges:(/*function-pointer*/ void *)changes withContext:(id)context;	// 0x3174d151
- (void)_clearOrphanedChangesWithContext:(id)context;	// 0x3174d39d
- (id)_collectActionsFromMoveDictionary:(CFDictionaryRef)moveDictionary forDataclass:(id)dataclass outShouldSave:(BOOL *)anOut;	// 0x3174dd2d
- (void)_collectMoveActions;	// 0x3174e241
- (BOOL)_needsNewAccountIDForOldVersion:(int)oldVersion;	// 0x3174ab6d
- (id)_oldURLsForKeychain;	// 0x3174a915
- (id)_powerAssertionContext;	// 0x3174f845
- (id)_powerAssertionGroupIdentifier;	// 0x3174f849
- (void)_setSpinning:(BOOL)spinning;	// 0x3174cdad
- (void)_updateCalendarStore:(BOOL)store;	// 0x3174cbdd
- (BOOL)_updateCalendarStoreNoDBOpen:(BOOL)open;	// 0x3174cad9
- (BOOL)_updateCalendarStoreProperties:(void *)properties;	// 0x3174c7dd
- (void)_upgradeAccountToTelluride;	// 0x3174a419
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x3174ab79
- (BOOL)accountNeedsUpgrade;	// 0x3174afd1
- (void)addCalendar:(id)calendar;	// 0x3174b895
- (void)addPrincipal:(id)principal;	// 0x3174c0bd
// declared property getter: - (int)calDAVAccountVersion;	// 0x3174b189
// declared property getter: - (id)calendars;	// 0x3174b959
- (void)cancelAllSearchQueries;	// 0x3174f0f9
- (void)cancelRefresh;	// 0x3174ce11
- (void)cancelSearchQuery:(id)query;	// 0x3174ef95
- (void)checkValidityWithConsumer:(id)consumer;	// 0x3174f5fd
// declared property getter: - (id)collectionSetURL;	// 0x3174b671
- (void)configureAccount;	// 0x3174956d
- (void *)copyCalStore;	// 0x3174c789
- (void)coreDAVLogDiagnosticMessage:(id)message atLevel:(int)level;	// 0x3174fd5d
- (int)coreDAVLogLevel;	// 0x3174fd3d
- (void)coreDAVLogTransmittedDataPartial:(id)partial;	// 0x3174fdc5
- (int)coreDAVOutputLevel;	// 0x3174fd55
- (void)coreDAVTransmittedDataFinished;	// 0x3174fde5
- (void)dealloc;	// 0x31749c31
- (void)discoveryTask:(id)task gotAccountInfo:(id)info error:(id)error;	// 0x3174f259
- (void)dropPowerAssertions;	// 0x3174f965
// converted property getter: - (id)host;	// 0x3174ff1d
- (BOOL)isCalDAVAccount;	// 0x3174fa05
- (BOOL)isEqualToAccount:(id)account;	// 0x3174fa09
// declared property getter: - (BOOL)isRefreshing;	// 0x31750311
// declared property getter: - (BOOL)isWritable;	// 0x3174b745
// declared property getter: - (id)itemIDsToMoveActions;	// 0x31750395
- (id)localizedIdenticalAccountFailureMessage;	// 0x3174fc15
- (id)localizedInvalidPasswordMessage;	// 0x3174fc8d
// declared property getter: - (id)mainPrincipal;	// 0x317503bd
// declared property getter: - (id)movedItemURLStrings;	// 0x317503a9
// declared property getter: - (BOOL)needsAccountPropertyRefresh;	// 0x31750365
// declared property getter: - (id)ocurrenceCacheEndDate;	// 0x3174c36d
// declared property getter: - (id)ocurrenceCacheStartDate;	// 0x3174c335
// declared property getter: - (int)overriddenPort;	// 0x3174b2dd
// declared property getter: - (id)overriddenScheme;	// 0x3174b371
// declared property getter: - (id)overriddenServer;	// 0x3174b261
- (void)performSearchQuery:(id)query;	// 0x3174ec09
// converted property getter: - (int)port;	// 0x31750225
// declared property getter: - (int)preferredEventDaysToSync;	// 0x317503f5
// declared property getter: - (int)preferredToDoDaysToSync;	// 0x31750421
- (void)prepareForAccountSave;	// 0x31749e85
// converted property getter: - (id)principalURL;	// 0x3174b38d
// declared property getter: - (id)principals;	// 0x317503e1
- (id)properties;	// 0x3174a309
- (void)reattainPowerAssertions;	// 0x3174f9b5
- (void)refreshActor:(id)actor didCompleteWithError:(id)error;	// 0x3174d5a1
// declared property getter: - (id)refreshContext;	// 0x31750341
- (void)refreshWithContext:(id)context;	// 0x3174e519
- (void)releasePowerAssertion;	// 0x3174f8bd
- (void)reloadCalendars;	// 0x3174bfed
- (void)removeCalendar:(id)calendar;	// 0x3174b8ed
- (void)removePrincipal:(id)principal;	// 0x3174c115
- (void)retainPowerAssertion;	// 0x3174f859
// converted property getter: - (id)scheme;	// 0x3175005d
// declared property getter: - (id)searchPropertySet;	// 0x3174b6f1
- (BOOL)searchQueriesRunning;	// 0x3174f229
// declared property getter: - (BOOL)searchQueriesShouldCancel;	// 0x3175044d
- (id)serverBaseURL;	// 0x3174b589
// declared property getter: - (id)serverVersion;	// 0x3174c151
- (void)setAccountDescription:(id)description;	// 0x3174b62d
// declared property setter: - (void)setCalDAVAccountVersion:(int)version;	// 0x3174b1bd
// declared property setter: - (void)setCollectionSetURL:(id)url;	// 0x3174b6b5
// converted property setter: - (void)setHost:(id)host;	// 0x3174ff95
// declared property setter: - (void)setIsRefreshing:(BOOL)refreshing;	// 0x31750329
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0x3174b7b1
// declared property setter: - (void)setMainPrincipal:(id)principal;	// 0x317503d1
// declared property setter: - (void)setNeedsAccountPropertyRefresh:(BOOL)refresh;	// 0x3175037d
// declared property setter: - (void)setOverriddenPort:(int)port;	// 0x3174b27d
// declared property setter: - (void)setOverriddenScheme:(id)scheme;	// 0x3174b311
// declared property setter: - (void)setOverriddenServer:(id)server;	// 0x3174b201
// converted property setter: - (void)setPort:(int)port;	// 0x3175019d
// declared property setter: - (void)setPreferredEventDaysToSync:(int)sync;	// 0x31750409
// declared property setter: - (void)setPreferredToDoDaysToSync:(int)sync;	// 0x31750435
// converted property setter: - (void)setPrincipalURL:(id)url;	// 0x3174b3ad
// declared property setter: - (void)setRefreshContext:(id)context;	// 0x31750355
// converted property setter: - (void)setScheme:(id)scheme;	// 0x317500d5
// declared property setter: - (void)setSearchPropertySet:(id)set;	// 0x3174b701
// declared property setter: - (void)setSearchQueriesShouldCancel:(BOOL)cancel;	// 0x31750465
// declared property setter: - (void)setServerVersion:(id)version;	// 0x3174c1c9
// declared property setter: - (void)setSubscribedCalendars:(id)calendars;	// 0x3174b0cd
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x317502b1
// converted property setter: - (void)setUsername:(id)username;	// 0x3174fe51
// declared property setter: - (void)setWasMigrated:(BOOL)migrated;	// 0x3174b83d
// declared property getter: - (BOOL)shouldFilterEventSyncTimeRange;	// 0x3174c3a5
// declared property getter: - (BOOL)shouldFilterSyncTimeRangeForInbox;	// 0x3174c43d
// declared property getter: - (BOOL)shouldFilterTodoSyncTimeRange;	// 0x3174c3f1
- (BOOL)shouldLogTransmittedData;	// 0x3174fda1
- (void)shutdown;	// 0x3174f255
- (id)spinnerIdentifiers;	// 0x3174cd4d
- (id)stateString;	// 0x3174a3b1
// declared property getter: - (id)subscribedCalendars;	// 0x3174b169
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x3174a3a1
// declared property getter: - (BOOL)supportsEvents;	// 0x3174c569
// declared property getter: - (BOOL)supportsReminders;	// 0x3174c4a5
- (void)task:(id)task didFinishWithError:(id)error;	// 0x3174e8d1
// converted property getter: - (id)taskManager;	// 0x3174c5bd
- (BOOL)upgradeAccount;	// 0x3174af49
// converted property getter: - (BOOL)useSSL;	// 0x317502e1
// converted property getter: - (id)username;	// 0x3174fde9
- (BOOL)usesTokenAuth;	// 0x3174c5b9
// declared property getter: - (id)viewedTimeZone;	// 0x3174c319
// declared property getter: - (BOOL)wasMigrated;	// 0x3174b7f5
- (id)wellKnownPaths;	// 0x3174f465
@end

