/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AccountCreationProtocol.h"
#import "DataAccess-Structs.h"
#import "BasicAccountSyncing.h"
#import "AccountFullAccountProtocol.h"

@class ACAccount, NSMutableDictionary, DAStatusReport, NSString, NSData, NSURL, NSArray, DASettingsTemplate;

@interface DAAccount : XXUnknownSuperclass <AccountFullAccountProtocol, AccountCreationProtocol, BasicAccountSyncing> {
	ACAccount *_backingAccountInfo;	// 24 = 0x18
	int _dataclasses;	// 28 = 0x1c
	BOOL _requiresAccountDeleteAndReAdd;	// 32 = 0x20
	BOOL _hasInitted;	// 33 = 0x21
	BOOL _shouldPromptForPassword;	// 34 = 0x22
	BOOL _shouldFailAllTasks;	// 35 = 0x23
	BOOL _shouldUseOpportunisticSockets;	// 36 = 0x24
	NSMutableDictionary *_haveWarnedAboutCertDict;	// 40 = 0x28
	DASettingsTemplate *_settingsTemplate;	// 44 = 0x2c
	DAStatusReport *_statusReport;	// 48 = 0x30
	CFDictionaryRef _consumers;	// 52 = 0x34
	CFURLStorageSessionRef _storageSession;	// 56 = 0x38
}
@property(copy) NSString *accountDescription;	// G=0x35e352ed; S=0x35e3594d; 
@property(readonly, assign) NSArray *appIdsForPasswordPrompt;	// G=0x35e38a25; 
@property(readonly, assign) ACAccount *backingAccountInfo;	// G=0x35e397ed; @synthesize=_backingAccountInfo
@property(readonly, assign) ACAccount *backingCredentialAccount;	// G=0x35e3aff5; 
@property(assign, setter=setDAAccountVersion:) int daAccountVersion;	// G=0x35e34e01; S=0x35e38c9d; 
@property(copy) NSString *emailAddress;	// G=0x35e37041; S=0x35e370c9; 
@property(copy) NSArray *emailAddresses;	// G=0x35e371a1; S=0x35e3723d; 
@property(readonly, assign) int enabledDataclassesBitmask;	// G=0x35e397a9; @synthesize=_dataclasses
@property(retain) NSData *encryptionIdentityPersistentReference;	// G=0x35e37495; 
@property(copy) NSString *host;	// G=0x35e36d91; S=0x35e36e19; 
@property(readonly, assign) NSData *identityPersist;	// G=0x35e380a9; 
@property(readonly, assign) BOOL isChildAccount;	// G=0x35e38365; 
@property(readonly, assign) int keychainAccessibilityType;	// G=0x35e37f69; 
@property(assign) BOOL needsRediscovery;	// G=0x35e37a1d; S=0x35e37a3d; 
@property(copy) NSString *password;	// G=0x35e369cd; S=0x35e36b25; 
@property(readonly, assign) NSString *persistentUUID;	// G=0x35e34b65; 
@property(assign) int port;	// G=0x35e375a9; S=0x35e37635; 
@property(copy) NSURL *principalURL;	// G=0x35e377d5; S=0x35e37895; 
@property(readonly, assign) BOOL requiresAccountDeleteAndReAdd;	// G=0x35e37a59; converted property
@property(readonly, assign, nonatomic) NSString *scheduleIdentifier;	// G=0x35e3591d; 
@property(copy) NSString *scheme;	// G=0x35e376c1; S=0x35e37749; 
@property(retain) DASettingsTemplate *settingsTemplate;	// G=0x35e39801; S=0x35e39815; @synthesize=_settingsTemplate
@property(assign) BOOL shouldAutodiscoverPrincipalURL;	// G=0x35e379e1; S=0x35e37a01; 
@property(assign, nonatomic) BOOL shouldFailAllTasks;	// G=0x35e3856d; S=0x35e39839; @synthesize=_shouldFailAllTasks
@property(assign) BOOL shouldPromptForPassword;	// G=0x35e397bd; S=0x35e397d5; @synthesize=_shouldPromptForPassword
@property(assign) BOOL shouldUseOpportunisticSockets;	// G=0x35e39849; S=0x35e39861; @synthesize=_shouldUseOpportunisticSockets
@property(retain) NSData *signingIdentityPersistentReference;	// G=0x35e37381; 
@property(readonly, assign) DAStatusReport *statusReport;	// G=0x35e39825; @synthesize=_statusReport
@property(assign) int toDosNumberOfPastDaysToSync;	// G=0x35e46621; S=0x35e46625; converted property
@property(assign) BOOL useSSL;	// G=0x35e36ef1; S=0x35e36f79; 
@property(copy) NSString *user;	// G=0x35e389b9; S=0x35e389c9; 
@property(copy) NSString *username;	// G=0x35e35a85; S=0x35e35b75; 
@property(retain) id version;	// G=0x35e36ce9; S=0x35e36d35; converted property
+ (Class)accountClass;	// 0x35e35835
+ (Class)classForAccountType:(id)accountType;	// 0x35e38c0d
+ (Class)clientClass;	// 0x35e36259
+ (Class)daemonClass;	// 0x35e362a5
+ (id)defaultProperties;	// 0x35e38c09
+ (id)newAccountOfAccountType:(id)accountType;	// 0x35e38c45
- (id)initWithBackingAccountInfo:(id)backingAccountInfo;	// 0x35e35735
- (id)initWithProperties:(id)properties;	// 0x35e347e1
- (int)_actionForTrust:(SecTrust *)trust host:(id)host service:(id)service;	// 0x35e39879
- (id)_exceptionsDict;	// 0x35e3818d
- (void)_handlePasswordNotification:(CFUserNotificationRef)notification response:(unsigned long)response callback:(id)callback;	// 0x35e3ac95
- (BOOL)_isIdentityManagedByProfile;	// 0x35e3816d
- (void)_removeHostsToTrust;	// 0x35e38dad
- (void)_renewAccountCredentialsWithHandler_legacy:(id)handler_legacy;	// 0x35e3a4e9
- (id)_serverSuffixesToAlwaysFail;	// 0x35e3997d
- (void)_setPersistentUUID:(id)uuid;	// 0x35e35931
- (BOOL)_upgradeSelfFromPreKirkwood;	// 0x35e38ddd
- (BOOL)accountBoolPropertyForKey:(id)key;	// 0x35e36501
- (BOOL)accountContainsEmailAddress:(id)address;	// 0x35e372a1
// declared property getter: - (id)accountDescription;	// 0x35e352ed
- (id)accountID;	// 0x35e34a69
- (int)accountIntPropertyForKey:(id)key;	// 0x35e36569
- (BOOL)accountNeedsUpgrade;	// 0x35e38cb9
- (id)accountPropertyForKey:(id)key;	// 0x35e362f1
- (id)addUsernameToURL:(id)url;	// 0x35e37ff5
// declared property getter: - (id)appIdsForPasswordPrompt;	// 0x35e38a25
- (BOOL)autodiscoverAccountConfigurationWithConsumer:(id)consumer;	// 0x35e379dd
- (id)backingACAccountTypeIdentifier;	// 0x35e38f91
// declared property getter: - (id)backingAccountInfo;	// 0x35e397ed
// declared property getter: - (id)backingCredentialAccount;	// 0x35e3aff5
- (id)beginDownloadingAttachmentWithUUID:(id)uuid consumer:(id)consumer;	// 0x35e3b265
- (void)cancelAllSearchQueries;	// 0x35e444a9
- (void)cancelDownloadingInstance:(id)instance error:(id)error;	// 0x35e3b30d
- (void)cancelSearchQuery:(id)query;	// 0x35e444a5
- (void)cancelShareResponseInstance:(id)instance error:(id)error;	// 0x35e3b3ad
- (void)checkValidityWithConsumer:(id)consumer;	// 0x35e37995
- (BOOL)childKeyIsSharedForReading:(id)reading;	// 0x35e38705
- (BOOL)childKeyIsSharedForWriting:(id)writing;	// 0x35e387c9
- (void)cleanupAccountFiles;	// 0x35e38305
- (id)consumerForTask:(id)task;	// 0x35e367ed
- (id)contactsFolders;	// 0x35e3b3dd
- (CFURLStorageSessionRef)copyStorageSession;	// 0x35e387cd
// declared property getter: - (int)daAccountVersion;	// 0x35e34e01
- (id)dataclassProperties;	// 0x35e36141
- (void)dealloc;	// 0x35e34cfd
- (id)defaultContactsFolder;	// 0x35e3b3d9
- (id)defaultContainerIdentifierForDADataclass:(int)dadataclass;	// 0x35e37bd1
- (id)defaultEventsFolder;	// 0x35e3b255
- (id)defaultNotesFolder;	// 0x35e55b55
- (id)defaultToDosFolder;	// 0x35e46615
- (id)delegateeInvitationICSRepresentationForMetaData:(id)metaData inFolderWithId:(id)anId outSummary:(id *)summary;	// 0x35e3b445
- (id)deletedItemsFolder;	// 0x35e3b43d
- (id)description;	// 0x35e38929
- (id)displayName;	// 0x35e35a29
- (id)domainOnly;	// 0x35e36d8d
// declared property getter: - (id)emailAddress;	// 0x35e37041
// declared property getter: - (id)emailAddresses;	// 0x35e371a1
// declared property getter: - (int)enabledDataclassesBitmask;	// 0x35e397a9
- (BOOL)enabledForDADataclass:(int)dadataclass;	// 0x35e35cc1
// declared property getter: - (id)encryptionIdentityPersistentReference;	// 0x35e37495
- (id)eventsFolders;	// 0x35e3b259
- (CFDataRef)exceptionsForDigest:(id)digest;	// 0x35e381a9
- (void)getRootFolderWithConsumer:(id)consumer;	// 0x35e5ca85
- (void)handleTrust:(SecTrust *)trust forHost:(id)host withCompletionBlock:(id)completionBlock;	// 0x35e39a09
- (BOOL)handleTrustChallenge:(id)challenge;	// 0x35e3a1a9
- (BOOL)haveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x35e38369
// declared property getter: - (id)host;	// 0x35e36d91
// declared property getter: - (id)identityPersist;	// 0x35e380a9
- (id)inboxFolder;	// 0x35e3b435
- (BOOL)isActiveSyncAccount;	// 0x35e386e9
- (BOOL)isCalDAVAccount;	// 0x35e386f1
- (BOOL)isCalDAVChildAccount;	// 0x35e386fd
- (BOOL)isCardDAVAccount;	// 0x35e386f9
// declared property getter: - (BOOL)isChildAccount;	// 0x35e38365
- (BOOL)isDAMMeAccount;	// 0x35e386f5
- (BOOL)isDisabled;	// 0x35e351f1
- (BOOL)isEnabledForDataclass:(id)dataclass;	// 0x35e35d89
- (BOOL)isEqualToAccount:(id)account;	// 0x35e38641
- (BOOL)isHotmailAccount;	// 0x35e38701
- (BOOL)isLDAPAccount;	// 0x35e386ed
// declared property getter: - (int)keychainAccessibilityType;	// 0x35e37f69
- (id)localizedIdenticalAccountFailureMessage;	// 0x35e3aea5
- (id)localizedInvalidPasswordMessage;	// 0x35e3af4d
- (BOOL)monitorFolderWithID:(id)anId;	// 0x35e37ad1
- (BOOL)monitorFoldersWithIDs:(id)ids;	// 0x35e37acd
// declared property getter: - (BOOL)needsRediscovery;	// 0x35e37a1d
- (id)notesFolders;	// 0x35e55b59
// declared property getter: - (id)password;	// 0x35e369cd
- (id)passwordWithExpected:(BOOL)expected;	// 0x35e36825
- (void)performSearchQuery:(id)query;	// 0x35e44401
// declared property getter: - (id)persistentUUID;	// 0x35e34b65
// declared property getter: - (int)port;	// 0x35e375a9
- (void)prepareForAccountSave;	// 0x35e37c2d
// declared property getter: - (id)principalURL;	// 0x35e377d5
- (BOOL)reattemptInvitationLinkageForMetaData:(id)metaData inFolderWithId:(id)anId;	// 0x35e3b441
- (void)removeAccountPropertyForKey:(id)key;	// 0x35e3649d
- (void)removeClientCertificateData;	// 0x35e37bd5
- (void)removeConsumerForTask:(id)task;	// 0x35e36809
- (void)renewAccountCredentialsWithHandler:(id)handler;	// 0x35e3b005
// converted property getter: - (BOOL)requiresAccountDeleteAndReAdd;	// 0x35e37a59
- (void)resetAccountID;	// 0x35e35851
- (BOOL)resetCertWarnings;	// 0x35e38471
- (void)resetStatusReport;	// 0x35e3849d
- (id)respondToShareRequestForCalendar:(id)calendar withResponse:(int)response consumer:(id)consumer;	// 0x35e3b311
- (void)resumeMonitoringFoldersWithIDs:(id)ids;	// 0x35e365d1
- (void)saveAccountProperties;	// 0x35e37c31
- (void)saveAccountSettings;	// 0x35e38b51
- (void)saveChildAccountSettingsWithAccountsManager:(id)accountsManager;	// 0x35e38b01
// declared property getter: - (id)scheduleIdentifier;	// 0x35e3591d
// declared property getter: - (id)scheme;	// 0x35e376c1
- (BOOL)searchQueriesRunning;	// 0x35e444ad
- (BOOL)sendEmailsForCalEvents:(id)calEvents consumer:(id)consumer;	// 0x35e3b261
- (id)sentItemsFolder;	// 0x35e3b439
- (void)setAccountBoolProperty:(BOOL)property forKey:(id)key;	// 0x35e36529
// declared property setter: - (void)setAccountDescription:(id)description;	// 0x35e3594d
- (void)setAccountIntProperty:(int)property forKey:(id)key;	// 0x35e36591
- (void)setAccountProperty:(id)property forKey:(id)key;	// 0x35e363c5
- (void)setConsumer:(id)consumer forTask:(id)task;	// 0x35e36791
// declared property setter: - (void)setDAAccountVersion:(int)version;	// 0x35e38c9d
// declared property setter: - (void)setEmailAddress:(id)address;	// 0x35e370c9
// declared property setter: - (void)setEmailAddresses:(id)addresses;	// 0x35e3723d
- (void)setEnabled:(BOOL)enabled forDADataclass:(int)dadataclass;	// 0x35e35e65
- (oneway void)setEncryptionIdentityPersistentReference:(id)reference;	// 0x35e3751d
- (void)setExceptions:(CFDataRef)exceptions forDigest:(id)digest;	// 0x35e381ed
- (void)setHaveWarnedAboutCert:(id)cert forHost:(id)host;	// 0x35e383ad
// declared property setter: - (void)setHost:(id)host;	// 0x35e36e19
- (void)setIdentityCertificatePersistentID:(id)anId managedByProfile:(BOOL)profile;	// 0x35e380c5
// declared property setter: - (void)setNeedsRediscovery:(BOOL)rediscovery;	// 0x35e37a3d
// declared property setter: - (void)setPassword:(id)password;	// 0x35e36b25
- (void)setPassword:(id)password withAccessibility:(int)accessibility;	// 0x35e36a05
// declared property setter: - (void)setPort:(int)port;	// 0x35e37635
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x35e37895
// declared property setter: - (void)setScheme:(id)scheme;	// 0x35e37749
// declared property setter: - (void)setSettingsTemplate:(id)aTemplate;	// 0x35e39815
// declared property setter: - (void)setShouldAutodiscoverPrincipalURL:(BOOL)autodiscoverPrincipalURL;	// 0x35e37a01
// declared property setter: - (void)setShouldFailAllTasks:(BOOL)failAllTasks;	// 0x35e39839
// declared property setter: - (void)setShouldPromptForPassword:(BOOL)promptForPassword;	// 0x35e397d5
// declared property setter: - (void)setShouldUseOpportunisticSockets:(BOOL)useOpportunisticSockets;	// 0x35e39861
- (oneway void)setSigningIdentityPersistentReference:(id)reference;	// 0x35e37409
// converted property setter: - (void)setToDosNumberOfPastDaysToSync:(int)sync;	// 0x35e46625
// declared property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x35e36f79
// declared property setter: - (void)setUser:(id)user;	// 0x35e389c9
// declared property setter: - (void)setUsername:(id)username;	// 0x35e35b75
// converted property setter: - (void)setVersion:(id)version;	// 0x35e36d35
// declared property getter: - (id)settingsTemplate;	// 0x35e39801
// declared property getter: - (BOOL)shouldAutodiscoverPrincipalURL;	// 0x35e379e1
// declared property getter: - (BOOL)shouldFailAllTasks;	// 0x35e3856d
// declared property getter: - (BOOL)shouldPromptForPassword;	// 0x35e397bd
// declared property getter: - (BOOL)shouldUseOpportunisticSockets;	// 0x35e39849
// declared property getter: - (id)signingIdentityPersistentReference;	// 0x35e37381
- (id)spinnerIdentifiers;	// 0x35e3620d
- (id)stateString;	// 0x35e366e1
// declared property getter: - (id)statusReport;	// 0x35e39825
- (void)stopMonitoringFolderWithID:(id)anId;	// 0x35e3667d
- (void)stopMonitoringFolders;	// 0x35e37b6d
- (void)stopMonitoringFoldersWithIDs:(id)ids;	// 0x35e37b09
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x35e35c75
- (int)supportsEmailFlagging;	// 0x35e444b5
- (int)supportsMailboxSearch;	// 0x35e444b1
- (void)suspendMonitoringFoldersWithIDs:(id)ids;	// 0x35e36619
- (id)syncStoreIdentifier;	// 0x35e34ced
- (void)synchronizeBookmarkTreeWithConsumer:(id)consumer hasRemoteChanges:(BOOL)changes;	// 0x35e5ca89
- (void)synchronizeContactsFolder:(id)folder previousTag:(id)tag previousSyncToken:(id)token actions:(id)actions highestIdContext:(XXStruct_K5nmsA *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed previousTagIsSuspect:(BOOL)suspect consumer:(id)consumer;	// 0x35e3b3e1
- (void)synchronizeEventsFolder:(id)folder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x35e3b25d
- (void)synchronizeNotesFolder:(id)folder noteContext:(id)context previousTag:(id)tag actions:(id)actions changeSet:(id)set notesToDeleteAfterSync:(id)deleteAfterSync isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x35e55b5d
- (void)synchronizeToDosFolder:(id)dosFolder previousTag:(id)tag actions:(id)actions highestIdContext:(XXStruct_SMhV9B *)context isInitialUberSync:(BOOL)sync isResyncAfterConnectionFailed:(BOOL)failed consumer:(id)consumer;	// 0x35e4661d
- (void)tearDown;	// 0x35e37a69
- (id)toDosFolders;	// 0x35e46619
// converted property getter: - (int)toDosNumberOfPastDaysToSync;	// 0x35e46621
- (BOOL)upgradeAccount;	// 0x35e38f31
- (void)upgradeAccountSpecificPropertiesOnAccount:(id)account inStore:(id)store parentAccount:(id)account3;	// 0x35e38f8d
- (BOOL)upgradeToAccountsdWithStore:(id)store parentAccount:(id)account;	// 0x35e38f95
- (void)upgradeToHoodooAccountInfo;	// 0x35e38f89
- (id)urlForKeychain;	// 0x35e389d9
// declared property getter: - (BOOL)useSSL;	// 0x35e36ef1
// declared property getter: - (id)user;	// 0x35e389b9
// declared property getter: - (id)username;	// 0x35e35a85
- (id)usernameWithoutDomain;	// 0x35e36d7d
- (BOOL)usesLegacyAccountSettings;	// 0x35e38911
// converted property getter: - (id)version;	// 0x35e36ce9
@end

