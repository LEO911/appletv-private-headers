/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import "Celestial-Structs.h"
#import <NSObject.h> // Unknown library


@interface AVController : NSObject {
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(assign) double currentTime;	// G=0x30baacdd; S=0x30bc2e51; converted property
@property(assign) id delegate;	// G=0x30bc3e05; S=0x30baa651; converted property
@property(assign) BOOL muted;	// G=0x30bc2ff9; S=0x30bc30f5; converted property
@property(retain) id outputQTESFilePath;	// G=0x30baf515; S=0x30bc32d1; converted property
@property(retain) id queue;	// G=0x30bc2185; S=0x30ba825d; converted property
@property(retain) id queueFeeder;	// G=0x30bc2949; S=0x30bb2e39; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x30bc3355; S=0x30baa801; converted property
@property(assign) BOOL vibrationEnabled;	// G=0x30bc1b41; S=0x30bc1b59; converted property
@property(retain) id vibrationPattern;	// G=0x30bc1c31; S=0x30bc1bb1; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x30bc320d; S=0x30bc3221; converted property
@property(assign) float volume;	// G=0x30baa5ad; S=0x30bb3255; converted property
+ (id)avController;	// 0x30bc1e29
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x30bc1e65
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x30bc1c71
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x30bc1ea9
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0x30bb1e89
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x30bc1dd5
+ (BOOL)isSupportedMimeType:(id)type;	// 0x30bc1d81
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0x30bb3325
- (id)init;	// 0x30ba7b25
- (id)initForStreaming;	// 0x30bc1ff1
- (id)initWithError:(id *)error;	// 0x30ba805d
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x30ba7b39
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x30ba7b71
- (id)_figPlayerNotifications;	// 0x30bc3ebd
- (BOOL)activate:(id *)activate;	// 0x30bc2cc9
- (id)addNextFeederItemToQueue;	// 0x30bab015
- (void)applyDesiredRepeatMode;	// 0x30bc39a9
- (id)attributeForKey:(id)key;	// 0x30ba9da1
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x30ba8ba9
- (BOOL)beginInterruption:(id *)interruption;	// 0x30bc2ba1
- (BOOL)beginRepeatGap;	// 0x30bb37e1
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x30bacba1
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x30bacbc9
- (BOOL)canBeginInterruption;	// 0x30bc2c55
- (void)cancelAllCGImageRequests;	// 0x30bc3795
- (void)cancelContinueAfterRepeatGap;	// 0x30baeb35
- (void)checkQueueSpace;	// 0x30baaf89
- (void)continueAfterRepeatGap;	// 0x30bc2975
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x30bc2179
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0x30baf3b1
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x30baadcd
- (id)currentItem;	// 0x30baaded
- (void)currentItemHasChanged:(id)changed;	// 0x30bad4c9
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x30bad031
// converted property getter: - (double)currentTime;	// 0x30baacdd
- (void)dealloc;	// 0x30bb8bed
// converted property getter: - (id)delegate;	// 0x30bc3e05
- (void)dequeueDeadItem;	// 0x30bc4869
- (void)dequeueFirstItem;	// 0x30bb222d
- (void)endInterruptionWithStatus:(id)status;	// 0x30bc2db5
- (void)ensurePlaybackQueueImmed;	// 0x30bc472d
- (int)eqPreset;	// 0x30bc31f9
- (id)errorWithDescription:(id)description code:(long)code;	// 0x30bc2b05
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x30bc2761
- (void)feederRangeWasInserted:(id)inserted;	// 0x30bc2199
- (void)feederRangeWasRemoved:(id)removed;	// 0x30bc24a1
- (void)figPlayerNotificationHandler:(id)handler;	// 0x30bc4891
- (void)fmpEffectiveVolumeDidChange;	// 0x30bc385d
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x30bad989
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x30bb86ed
- (BOOL)havePlayedCurrentItem;	// 0x30bc2961
- (unsigned)indexOfCurrentQueueFeederItem;	// 0x30bb1f65
- (BOOL)isCurrentItemReady;	// 0x30bc46dd
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x30bc2175
- (BOOL)isValid;	// 0x30bc3e5d
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0x30bb36f9
- (id)lkLayer;	// 0x30bc333d
- (void)logPerformanceDataForCurrentItem;	// 0x30bc4175
- (void)makeCurrentItemReady;	// 0x30baeb71
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0x30bb2df5
// converted property getter: - (BOOL)muted;	// 0x30bc2ff9
- (BOOL)okToNotifyFromThisThread;	// 0x30bad399
// converted property getter: - (id)outputQTESFilePath;	// 0x30baf515
- (void)pause;	// 0x30bb1f51
- (BOOL)play:(id *)play;	// 0x30bc29cd
- (BOOL)playNextItem:(id *)item;	// 0x30bb2185
- (AVControllerPrivate *)privateStorage;	// 0x30bc2165
// converted property getter: - (id)queue;	// 0x30bc2185
// converted property getter: - (id)queueFeeder;	// 0x30bc2949
- (float)rate;	// 0x30bad64d
- (void)rateDidChangeToRate:(float)rate;	// 0x30bb0d49
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x30bc4571
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0x30bb2a95
- (int)repeatMode;	// 0x30bb2e25
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x30bc34f1
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x30bc34cd
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x30bc29ed
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x30bc3e19
- (void)scheduleQueueSpaceCheck;	// 0x30bae8c9
- (void)scheduleUpdateTimeMarkerObservations;	// 0x30bad6ed
- (void)seekToDate:(id)date;	// 0x30bc2ec1
- (void)setAVItemClass:(Class)aClass;	// 0x30bc1f95
- (void)setApplyVideoTrackMatrix;	// 0x30bc336d
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x30ba8ec9
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x30bc2e51
- (void)setCurrentTime:(double)time options:(int)options;	// 0x30bb2f35
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x30baa651
- (void)setEQPreset:(int)preset;	// 0x30baa6d9
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0x30bb1fcd
- (void)setLayer:(id)layer;	// 0x30baa901
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x30bc30f5
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x30bc32d1
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x30bc4791
// converted property setter: - (void)setQueue:(id)queue;	// 0x30ba825d
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0x30bb2e39
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x30baaa21
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x30bae9a5
- (BOOL)setRepeatMode:(int)mode;	// 0x30baa9ad
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x30baa801
- (void)setSubtitleRecipient:(id)recipient;	// 0x30baa785
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x30bc1b59
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x30bc1bb1
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x30bc3221
// converted property setter: - (void)setVolume:(float)volume;	// 0x30bb3255
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0x30baff75
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x30bc3355
- (void)stepByCount:(int)count;	// 0x30bc2f5d
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0x30bb2911
- (long)updateActionAtEnd;	// 0x30baa819
- (void)updateTimeMarkerObservations;	// 0x30bb0191
// converted property getter: - (BOOL)vibrationEnabled;	// 0x30bc1b41
// converted property getter: - (id)vibrationPattern;	// 0x30bc1c31
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x30bc320d
// converted property getter: - (float)volume;	// 0x30baa5ad
@end

