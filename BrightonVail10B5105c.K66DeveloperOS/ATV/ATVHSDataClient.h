/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ATVDataClient.h"
#import "AppleTV-Structs.h"

@class NSMutableDictionary, NSString, NSURL, ATVHSConnectionStream;

__attribute__((visibility("hidden")))
@interface ATVHSDataClient : ATVDataClient {
	FPSAPContextOpaque_Ref _fpsapContext;	// 4 = 0x4
	ATVHSConnectionStream *_connectionStream;	// 8 = 0x8
	unsigned long long _pairingID;	// 12 = 0xc
	unsigned long long _machineID;	// 20 = 0x14
	unsigned long _sessionID;	// 28 = 0x1c
	NSString *_homeShareGroupID;	// 32 = 0x20
	NSURL *_serverURL;	// 36 = 0x24
	NSURL *_serverIPURL;	// 40 = 0x28
	int _serverPort;	// 44 = 0x2c
	NSString *_databaseName;	// 48 = 0x30
	unsigned long _databaseID;	// 52 = 0x34
	unsigned long long _databasePersistentID;	// 56 = 0x38
	unsigned long _dpapDatabaseID;	// 64 = 0x40
	unsigned long long _dpapDatabasePersistentID;	// 68 = 0x44
	unsigned long _basePlaylistID;	// 76 = 0x4c
	unsigned long long _basePlaylistPersistentID;	// 80 = 0x50
	unsigned short _daapProtocolMajorVersion;	// 88 = 0x58
	unsigned short _daapProtocolMinorVersion;	// 90 = 0x5a
	unsigned short _dpapProtocolMajorVersion;	// 92 = 0x5c
	unsigned short _dpapProtocolMinorVersion;	// 94 = 0x5e
	BOOL _enhancedClient;	// 96 = 0x60
	BOOL _supportsDRMTokenEncryption;	// 97 = 0x61
	unsigned long _databaseRevision;	// 100 = 0x64
	unsigned long _drmRevision;	// 104 = 0x68
	unsigned long _photoDBRevision;	// 108 = 0x6c
	BOOL _dpapImportInProgress;	// 112 = 0x70
	NSMutableDictionary *_artworkRequestMap;	// 116 = 0x74
}
@property(retain, nonatomic) NSMutableDictionary *artworkRequestMap;	// G=0xe4ead; S=0xe4ebd; @synthesize=_artworkRequestMap
@property(assign, nonatomic) unsigned long basePlaylistID;	// G=0xe4d21; S=0xe4d31; @synthesize=_basePlaylistID
@property(assign, nonatomic) unsigned long long basePlaylistPersistentID;	// G=0xe4d41; S=0xe4d59; @synthesize=_basePlaylistPersistentID
@property(assign, nonatomic) unsigned short daapProtocolMajorVersion;	// G=0xe4d6d; S=0xe4d7d; @synthesize=_daapProtocolMajorVersion
@property(assign, nonatomic) unsigned short daapProtocolMinorVersion;	// G=0xe4d8d; S=0xe4d9d; @synthesize=_daapProtocolMinorVersion
@property(assign, nonatomic) unsigned long databaseID;	// G=0xe4c89; S=0xe4c99; @synthesize=_databaseID
@property(retain, nonatomic) NSString *databaseName;	// G=0xe4c69; S=0xe4c79; @synthesize=_databaseName
@property(assign, nonatomic) unsigned long long databasePersistentID;	// G=0xe4ca9; S=0xe4cc1; @synthesize=_databasePersistentID
@property(assign, nonatomic) unsigned long databaseRevision;	// G=0xe4e2d; S=0xe4e3d; @synthesize=_databaseRevision
@property(assign, nonatomic) unsigned long dpapDatabaseID;	// G=0xe4cd5; S=0xe4ce5; @synthesize=_dpapDatabaseID
@property(assign, nonatomic) unsigned long long dpapDatabasePersistentID;	// G=0xe4cf5; S=0xe4d0d; @synthesize=_dpapDatabasePersistentID
@property(assign, nonatomic) BOOL dpapImportInProgress;	// G=0xe4e8d; S=0xe4e9d; @synthesize=_dpapImportInProgress
@property(assign, nonatomic) unsigned short dpapProtocolMajorVersion;	// G=0xe4dad; S=0xe4dbd; @synthesize=_dpapProtocolMajorVersion
@property(assign, nonatomic) unsigned short dpapProtocolMinorVersion;	// G=0xe4dcd; S=0xe4ddd; @synthesize=_dpapProtocolMinorVersion
@property(assign, nonatomic) unsigned long drmRevision;	// G=0xe4e4d; S=0xe4e5d; @synthesize=_drmRevision
@property(assign, nonatomic) BOOL enhancedClient;	// G=0xe4ded; S=0xe4dfd; @synthesize=_enhancedClient
@property(retain, nonatomic) NSString *homeShareGroupID;	// G=0xe4bf1; S=0xe4c01; @synthesize=_homeShareGroupID
@property(assign, nonatomic) unsigned long long machineID;	// G=0xe4ba5; S=0xe4bbd; @synthesize=_machineID
@property(assign, nonatomic) unsigned long long pairingID;	// G=0xe4b79; S=0xe4b91; @synthesize=_pairingID
@property(assign, nonatomic) unsigned long photoDBRevision;	// G=0xe4e6d; S=0xe4e7d; @synthesize=_photoDBRevision
@property(copy) NSURL *serverIPURL;	// G=0xe4c25; S=0xe4c39; @synthesize=_serverIPURL
@property(assign, nonatomic) int serverPort;	// G=0xe4c49; S=0xe4c59; @synthesize=_serverPort
@property(copy, nonatomic) NSURL *serverURL;	// G=0xe4c11; S=0xe40b9; @synthesize=_serverURL
@property(assign, nonatomic) unsigned long sessionID;	// G=0xe4bd1; S=0xe4be1; @synthesize=_sessionID
@property(assign, nonatomic) BOOL supportsDRMTokenEncryption;	// G=0xe4e0d; S=0xe4e1d; @synthesize=_supportsDRMTokenEncryption
+ (id)hsDataClientWithServerURL:(id)serverURL serverName:(id)name hsGroupID:(id)anId machineID:(unsigned long long)anId4 pairingID:(unsigned long long)anId5 clientType:(unsigned long)type;	// 0xe3d69
- (id)initWithServerURL:(id)serverURL hsGroupID:(id)anId machineID:(unsigned long long)anId3 pairingID:(unsigned long long)anId4 clientName:(id)name clientType:(unsigned long)type;	// 0xe3dd5
- (void)_dataClientConnectionHandler:(id)handler;	// 0xe4ab1
- (void)artworkRequestCompletedForIdentifier:(id)identifier;	// 0xf42ed
// declared property getter: - (id)artworkRequestMap;	// 0xe4ead
// declared property getter: - (unsigned long)basePlaylistID;	// 0xe4d21
// declared property getter: - (unsigned long long)basePlaylistPersistentID;	// 0xe4d41
- (id)baseURL;	// 0xe4275
- (id)browseRequestWithQuery:(id)query;	// 0xf1c3d
- (void)cancelArtworkRequestForIdentifier:(id)identifier;	// 0xf41d9
- (void)cancelImageRequest:(id)request;	// 0xe4881
- (void)concreteDataClientConnect;	// 0xe42a9
- (void)concreteDataClientDisconnect;	// 0xe4451
// declared property getter: - (unsigned short)daapProtocolMajorVersion;	// 0xe4d6d
// declared property getter: - (unsigned short)daapProtocolMinorVersion;	// 0xe4d8d
// declared property getter: - (unsigned long)databaseID;	// 0xe4c89
// declared property getter: - (id)databaseName;	// 0xe4c69
// declared property getter: - (unsigned long long)databasePersistentID;	// 0xe4ca9
// declared property getter: - (unsigned long)databaseRevision;	// 0xe4e2d
- (void)dealloc;	// 0xe3f29
- (id)description;	// 0xe3fbd
- (void)determineBasePlaylist;	// 0xec64d
- (void)determineDAAPDatabase;	// 0xec245
- (void)determineDPAPDatabase;	// 0xec47d
- (void)determineDPAPDatabaseOnUpdate;	// 0xee119
- (void)determinePhotoDatabase;	// 0xee74d
- (void)disconnectClient;	// 0xed69d
// declared property getter: - (unsigned long)dpapDatabaseID;	// 0xe4cd5
// declared property getter: - (unsigned long long)dpapDatabasePersistentID;	// 0xe4cf5
// declared property getter: - (BOOL)dpapImportInProgress;	// 0xe4e8d
// declared property getter: - (unsigned short)dpapProtocolMajorVersion;	// 0xe4dad
// declared property getter: - (unsigned short)dpapProtocolMinorVersion;	// 0xe4dcd
// declared property getter: - (unsigned long)drmRevision;	// 0xe4e4d
- (id)drmTokenRequestWithQuery:(id)query;	// 0xf170d
- (void)drmUpdate;	// 0xed741
// declared property getter: - (BOOL)enhancedClient;	// 0xe4ded
- (BOOL)establishFairPlayContextWithServerFPVer:(unsigned long)serverFPVer;	// 0xeb879
- (void)executeQuery:(id)query withCompletionQueue:(id)completionQueue completionHandler:(id)handler;	// 0xe4779
- (FPSAPContextOpaque_Ref)fairPlayContext;	// 0xe4265
- (BOOL)groupingSupportsProperty:(id)property;	// 0xe46f9
- (id)groupsRequestWithQuery:(id)query;	// 0xf1d95
- (void)handleDAAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xf22f5
- (void)handleDPAPQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0xf2db9
- (unsigned)hash;	// 0xe4041
// declared property getter: - (id)homeShareGroupID;	// 0xe4bf1
- (void)homeShareVerify;	// 0xebd9d
- (void)iTunesDPAPDatabaseUpdate;	// 0xeddf9
- (void)iTunesDatabaseUpdate;	// 0xed2b9
- (void)iTunesPhotoDatabaseUpdate;	// 0xeda61
- (id)imageRequestWithAsset:(id)asset artworkIdentifier:(id)identifier requestedSize:(CGSize)size crop:(BOOL)crop withContext:(void *)context;	// 0xf38d1
- (id)imageRequestWithAsset:(id)asset imageID:(id)anId size:(CGSize)size crop:(BOOL)crop context:(id)context;	// 0xe484d
- (BOOL)isEqual:(id)equal;	// 0xe4011
- (id)itemsRequestWithQuery:(id)query;	// 0xf0c35
- (void)logErrorWithRequest:(id)request httpStatus:(long)status;	// 0xed25d
- (void)loginToITunes;	// 0xeb4f9
- (void)loginToPhotoApp;	// 0xee431
// declared property getter: - (unsigned long long)machineID;	// 0xe4ba5
- (void)machineVerify;	// 0xec001
- (void)mediaItemPropertyUpdateHandler:(id)handler;	// 0xf2925
- (id)networkTestURLWithOptions:(id)options headers:(id *)headers;	// 0xe4899
// declared property getter: - (unsigned long long)pairingID;	// 0xe4b79
- (void)photoAppDatabaseUpdate;	// 0xee901
- (id)photoDBRequestWithQuery:(id)query;	// 0xf1f55
// declared property getter: - (unsigned long)photoDBRevision;	// 0xe4e6d
- (BOOL)photosShared;	// 0xe4209
- (id)playbackURLWithItemID:(unsigned long)itemID;	// 0xe4165
- (id)playlistRequestWithQuery:(id)query;	// 0xf2165
- (BOOL)processQueryAsync:(id)async;	// 0xe4775
- (BOOL)queryFilterSupportsProperty:(id)property;	// 0xe467d
- (id)rentalRequestWithQuery:(id)query;	// 0xf1a99
// declared property getter: - (id)serverIPURL;	// 0xe4c25
- (void)serverInfo;	// 0xeca9d
// declared property getter: - (int)serverPort;	// 0xe4c49
// declared property getter: - (id)serverURL;	// 0xe4c11
- (id)serverURLStr;	// 0xe413d
// declared property getter: - (unsigned long)sessionID;	// 0xe4bd1
// declared property setter: - (void)setArtworkRequestMap:(id)map;	// 0xe4ebd
// declared property setter: - (void)setBasePlaylistID:(unsigned long)anId;	// 0xe4d31
// declared property setter: - (void)setBasePlaylistPersistentID:(unsigned long long)anId;	// 0xe4d59
// declared property setter: - (void)setDaapProtocolMajorVersion:(unsigned short)version;	// 0xe4d7d
// declared property setter: - (void)setDaapProtocolMinorVersion:(unsigned short)version;	// 0xe4d9d
// declared property setter: - (void)setDatabaseID:(unsigned long)anId;	// 0xe4c99
// declared property setter: - (void)setDatabaseName:(id)name;	// 0xe4c79
// declared property setter: - (void)setDatabasePersistentID:(unsigned long long)anId;	// 0xe4cc1
// declared property setter: - (void)setDatabaseRevision:(unsigned long)revision;	// 0xe4e3d
- (BOOL)setDatabaseWithResponse:(id)response daapResponse:(BOOL)response2;	// 0xeced9
// declared property setter: - (void)setDpapDatabaseID:(unsigned long)anId;	// 0xe4ce5
// declared property setter: - (void)setDpapDatabasePersistentID:(unsigned long long)anId;	// 0xe4d0d
// declared property setter: - (void)setDpapImportInProgress:(BOOL)progress;	// 0xe4e9d
// declared property setter: - (void)setDpapProtocolMajorVersion:(unsigned short)version;	// 0xe4dbd
// declared property setter: - (void)setDpapProtocolMinorVersion:(unsigned short)version;	// 0xe4ddd
// declared property setter: - (void)setDrmRevision:(unsigned long)revision;	// 0xe4e5d
// declared property setter: - (void)setEnhancedClient:(BOOL)client;	// 0xe4dfd
// declared property setter: - (void)setHomeShareGroupID:(id)anId;	// 0xe4c01
// declared property setter: - (void)setMachineID:(unsigned long long)anId;	// 0xe4bbd
// declared property setter: - (void)setPairingID:(unsigned long long)anId;	// 0xe4b91
// declared property setter: - (void)setPhotoDBRevision:(unsigned long)revision;	// 0xe4e7d
// declared property setter: - (void)setServerIPURL:(id)ipurl;	// 0xe4c39
// declared property setter: - (void)setServerPort:(int)port;	// 0xe4c59
// declared property setter: - (void)setServerURL:(id)url;	// 0xe40b9
// declared property setter: - (void)setSessionID:(unsigned long)anId;	// 0xe4be1
// declared property setter: - (void)setSupportsDRMTokenEncryption:(BOOL)encryption;	// 0xe4e1d
- (void)submitPropertyUpdateQueryWithURLStr:(id)urlstr property:(id)property propertyValue:(unsigned long)value itemID:(id)anId;	// 0xf2bf5
// declared property getter: - (BOOL)supportsDRMTokenEncryption;	// 0xe4e0d
- (BOOL)supportsProperty:(id)property;	// 0xe4649
@end

