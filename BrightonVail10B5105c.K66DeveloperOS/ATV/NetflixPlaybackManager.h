/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSDictionary, NSData, NSLock, NSMutableArray;

@interface NetflixPlaybackManager : XXUnknownSuperclass {
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x4f94a1; S=0x4f94b1; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x4f8ff1; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x4f96bd; S=0x4f96d5; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x4f96e9; S=0x4f9701; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x4f9625; S=0x4f9635; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x4f9035; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x4f9099; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x4f9159; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x4f93ed; S=0x4f93fd; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x4f9671; S=0x4f9689; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x4f9645; S=0x4f965d; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x4f9541; S=0x4f9551; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x4f9561; S=0x4f9571; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x4f93cd; S=0x4f498d; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x4f93dd; S=0x4f4aa1; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x4f9385; S=0x4f9399; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x4f969d; S=0x4f96ad; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x4f95ad; S=0x4f95c5; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x4f9365; S=0x4f9375; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x4f93a9; S=0x4f93bd; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x4f94e5; S=0x4f94fd; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x4f94c1; S=0x4f94d5; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x4f95f9; S=0x4f9611; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x4f95d9; S=0x4f95e9; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x4f940d; S=0x4f941d; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x4f9715; S=0x4f972d; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x4f9741; S=0x4f9755; @synthesize=stalled_
@property(assign) int state;	// G=0x4f9515; S=0x4f9529; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x4f9451; S=0x4f9469; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x4f942d; S=0x4f9441; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x4f9481; S=0x4f9491; @synthesize=subtitlesTrackIndex_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x4f9581; S=0x4f9599; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x4f9765; S=0x4f9775; @synthesize=totalNumberOfStalls_
+ (void)initialize;	// 0x4f4691
+ (id)sharedInstance;	// 0x4f4695
- (id)init;	// 0x4f4781
- (void)audioSelect:(id)select;	// 0x4f635d
- (void)audioSelectAsync:(id)async;	// 0x4f6399
// declared property getter: - (int)audioTrackIndex;	// 0x4f94a1
// declared property getter: - (unsigned)bitrate;	// 0x4f8ff1
- (void)buffering:(double)buffering;	// 0x4f5031
- (void)bufferingComplete:(double)complete;	// 0x4f5149
// declared property getter: - (long long)bufferingStartBytes;	// 0x4f96bd
// declared property getter: - (double)bufferingStartTime;	// 0x4f96e9
// declared property getter: - (BwEntry *)bwEntry;	// 0x4f9625
// declared property getter: - (long long)bytes;	// 0x4f9035
// declared property getter: - (long long)bytesForInterface;	// 0x4f9099
- (id)capitalizeAudioTracksArray:(id)array;	// 0x4f6879
- (id)capitalizeSubtitlesForMovieDetails:(id)movieDetails;	// 0x4f6969
- (id)capitalizeSubtitlesForTrackCombinationArray:(id)trackCombinationArray;	// 0x4f6789
- (id)capitalizeTrackCombination:(id)combination;	// 0x4f66b5
- (id)capitalizeTracks:(id)tracks;	// 0x4f65c5
- (void)clearErrorStack;	// 0x4f933d
- (void)close;	// 0x4f4f39
- (id)createErrorFromStack;	// 0x4f6cb5
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x4f9159
- (void)dealloc;	// 0x4f4879
- (void)end:(double)end reason:(id)reason;	// 0x4f4d59
// declared property getter: - (id)errorStack;	// 0x4f93ed
- (int)fetchBookmark:(id)bookmark;	// 0x4f8d01
// declared property getter: - (long long)lastBwEntryBytes;	// 0x4f9671
// declared property getter: - (double)lastBwEntryTime;	// 0x4f9645
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x4f9541
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x4f9561
// declared property getter: - (IMediaControl *)mediaControl;	// 0x4f93cd
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x4f93dd
- (void)mediaDidAcquireLicense;	// 0x4f72c5
- (void)mediaDidAuthorize;	// 0x4f7195
- (void)mediaDidBuildPlaylists;	// 0x4f735d
- (void)mediaDidCdnSelect;	// 0x4f722d
- (void)mediaDidClose;	// 0x4f6b01
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x4f75bd
- (void)mediaDidFailOpen:(id)media;	// 0x4f700d
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x4f9275
- (void)mediaDidHandleNccpError:(id)media;	// 0x4f6b75
- (void)mediaDidLoadSubtitles:(id)media;	// 0x4f7489
- (void)mediaDidSelectAudio:(id)media;	// 0x4f9191
- (void)mediaDidSetSpeed:(float)media;	// 0x4f73a9
- (void)mediaOpenComplete:(id)complete;	// 0x4f6a41
- (void)mediaWillAcquireLicense;	// 0x4f7279
- (void)mediaWillAuthorize;	// 0x4f7149
- (void)mediaWillBuildPlaylists;	// 0x4f7311
- (void)mediaWillCdnSelect;	// 0x4f71e1
- (void)mediaWillLoadSubtitles;	// 0x4f743d
// declared property getter: - (id)movieDetails;	// 0x4f9385
// declared property getter: - (int)networkInterfaceType;	// 0x4f969d
- (void)networkSelection:(id)selection;	// 0x4f614d
- (int)networkTypeStringToType:(id)type;	// 0x4f60d9
// declared property getter: - (double)observedBitrate;	// 0x4f95ad
- (void)open:(id)open;	// 0x4f4ac5
- (void)openAsync:(id)async;	// 0x4f7a31
// declared property getter: - (BOOL)openNotificationSent;	// 0x4f9365
- (void)pause:(double)pause;	// 0x4f4b79
- (void)play:(double)play;	// 0x4f4b01
// declared property getter: - (id)playReadyKey;	// 0x4f93a9
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x4f94e5
// declared property getter: - (id)playbackCommandLock;	// 0x4f94c1
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x4f8e85
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x4f5d69
// declared property getter: - (long long)pollBytesStart;	// 0x4f95f9
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x4f95d9
- (void)postMediaCloseFailure;	// 0x4f792d
- (void)postMediaOpenFailure:(int)failure;	// 0x4f777d
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x4f7855
- (void)postMediaOpenSuccess:(id)success;	// 0x4f76e1
// declared property getter: - (id)reportableActionId;	// 0x4f940d
- (void)reposition:(double)reposition;	// 0x4f4c69
// declared property getter: - (double)sampleReportWindow;	// 0x4f9715
- (void)selectedPlaylist:(id)playlist;	// 0x4f5e79
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x4f94b1
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x4f96d5
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x4f9701
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x4f9635
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x4f93fd
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x4f9689
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x4f965d
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x4f9551
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x4f9571
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x4f498d
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x4f4aa1
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x4f9399
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x4f96ad
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x4f95c5
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x4f9375
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x4f93bd
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x4f94fd
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x4f94d5
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x4f9611
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x4f95e9
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x4f941d
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x4f972d
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x4f9755
// declared property setter: - (void)setState:(int)state;	// 0x4f9529
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x4f9469
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x4f9441
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x4f9491
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x4f9599
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x4f9775
// declared property getter: - (bool)stalled;	// 0x4f9741
// declared property getter: - (int)state;	// 0x4f9515
- (void)stop:(double)stop;	// 0x4f4ce1
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x4f52e9
- (void)subtitlesDisable;	// 0x4f6055
- (void)subtitlesDisableAsync;	// 0x4f8bd1
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x4f9451
// declared property getter: - (id)subtitlesProcessingLock;	// 0x4f942d
- (void)subtitlesSelect:(id)select;	// 0x4f6019
- (void)subtitlesSelectAbort;	// 0x4f6091
- (void)subtitlesSelectAsync:(id)async;	// 0x4f87c9
// declared property getter: - (int)subtitlesTrackIndex;	// 0x4f9481
// declared property getter: - (long long)totalBytesTransferred;	// 0x4f9581
// declared property getter: - (int)totalNumberOfStalls;	// 0x4f9765
- (id)trackWithCapitalizedDescriptionFromTrack:(id)track;	// 0x4f64e5
- (void)unpause:(double)unpause;	// 0x4f4bf1
- (void)updatePts:(double)pts;	// 0x4f5371
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x4f58d1
@end

