/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "MPAssetKeyDelegate.h"
#import "AppleTV-Structs.h"
#import "BRMediaPlayer.h"

@class NSString, NSMutableDictionary, BRAsyncTask, BRControl, NSTimer, NSArray, BRImageManager, ATVDataServer, ATVDataQuery, BRMarimbaSlideshowControl, ATVDataCollection, NSDictionary;

__attribute__((visibility("hidden")))
@interface LTMarimbaPhotoPlayer : BRMediaPlayer <MPAssetKeyDelegate> {
	BRControl *_tempVisuals;	// 8 = 0x8
	NSTimer *_spinnerTimer;	// 12 = 0xc
	BRAsyncTask *_preloadImageTask;	// 16 = 0x10
	NSString *_assetIDBeingLoaded;	// 20 = 0x14
	BRMarimbaSlideshowControl *_visuals;	// 24 = 0x18
	NSArray *_assets;	// 28 = 0x1c
	BRMediaPlayer *_audioPlayer;	// 32 = 0x20
	id _musicServerID;	// 36 = 0x24
	id _musicPlaylistID;	// 40 = 0x28
	ATVDataServer *_musicServerRef;	// 44 = 0x2c
	ATVDataCollection *_musicPlaylistRef;	// 48 = 0x30
	ATVDataQuery *_playlistsQuery;	// 52 = 0x34
	ATVDataQuery *_songsQuery;	// 56 = 0x38
	NSDictionary *_slideshowPlaybackOptions;	// 60 = 0x3c
	NSArray *_orderedPhotoAssets;	// 64 = 0x40
	NSTimer *_screensaverTickleTimer;	// 68 = 0x44
	int _state;	// 72 = 0x48
	int _numPreloadAttemptsToMake;	// 76 = 0x4c
	int _numPreloadSuccesses;	// 80 = 0x50
	int _indexOfNextImageToPreload;	// 84 = 0x54
	long _startIndex;	// 88 = 0x58
	int _imageSizeToLoad;	// 92 = 0x5c
	BOOL _initialImagePrefetchInProgress;	// 96 = 0x60
	BOOL _playbackInitiated;	// 97 = 0x61
	BOOL _shuffleSet;	// 98 = 0x62
	BOOL _shuffle;	// 99 = 0x63
	BOOL _repeatModeSet;	// 100 = 0x64
	int _repeatMode;	// 104 = 0x68
	BOOL _muted;	// 108 = 0x6c
	BOOL _weOwnMusicPlayback;	// 109 = 0x6d
	BOOL _musicPlaybackOnwershipPermanentlyRelinquished;	// 110 = 0x6e
	BRImageManager *_preferredImageManager;	// 112 = 0x70
	BOOL _preloadingDisabled;	// 116 = 0x74
	BOOL _substitute;	// 117 = 0x75
	int _substituteIndex;	// 120 = 0x78
	BOOL _preloadingComplete;	// 124 = 0x7c
	BOOL _marimbaVisualsOnDisplay;	// 125 = 0x7d
	BOOL _musicPrefetchInProgress;	// 126 = 0x7e
	BOOL _documentSetupComplete;	// 127 = 0x7f
	float _lastRemovedEffectsTime;	// 128 = 0x80
	NSArray *_pendingAssets;	// 132 = 0x84
	NSString *_uniqueIDForPlayPauseRegistration;	// 136 = 0x88
	int _marimbaDidAddEffectsVisitCounter;	// 140 = 0x8c
	NSMutableDictionary *_assetKeyToAssetMap;	// 144 = 0x90
	id _musicQueryToRun;	// 148 = 0x94
	int _imageManagerPruneCountToRestore;	// 152 = 0x98
	int _imageLoadBatchCounter;	// 156 = 0x9c
}
@property(assign, nonatomic) int imageLoadBatchCounter;	// G=0x460dd; S=0x460ed; @synthesize=_imageLoadBatchCounter
@property(assign, nonatomic) int imageManagerPruneCountToRestore;	// G=0x460bd; S=0x460cd; @synthesize=_imageManagerPruneCountToRestore
@property(copy, nonatomic) id musicQueryToRun;	// G=0x46099; S=0x460ad; @synthesize=_musicQueryToRun
@property(assign) BOOL muted;	// G=0x45b25; S=0x45ac9; converted property
@property(retain) id playerSpecificOptions;	// G=0x456d5; S=0x4551d; converted property
@property(assign) int repeatMode;	// G=0x45799; S=0x45775; converted property
@property(assign) BOOL shufflePlayback;	// G=0x4570d; S=0x456e9; converted property
@property(readonly, retain) BRMarimbaSlideshowControl *visuals;	// G=0x45499; converted property
@property(assign) float volume;	// G=0x45a29; S=0x459c1; converted property
+ (id)contentTypes;	// 0x44b09
- (id)init;	// 0x44b9d
- (void).cxx_destruct;	// 0x460fd
- (void)_applyDocumentChangesAfterTransition:(id)transition;	// 0x48e2d
- (void)_applyPlayerSpecificOptions;	// 0x484e9
- (void)_authorizationAttemptComplete:(id)complete;	// 0x4b955
- (void)_authorizeMedia;	// 0x4a43d
- (void)_beginMusicPrefetch;	// 0x470d1
- (void)_beginMusicPrefetchFromDefaults;	// 0x46d9d
- (void)_beginMusicPrefetchFromPlayerOptions;	// 0x46a85
- (void)_cancelMusicPrefetch;	// 0x472b1
- (void)_configureImageManagerPruneCount;	// 0x462ad
- (void)_cueMedia;	// 0x4a545
- (id)_dataClient;	// 0x49c4d
- (void)_dataClientStatusChanged:(id)changed;	// 0x4bc59
- (BOOL)_handlePauseActionWithError:(id *)error;	// 0x4ae4d
- (BOOL)_handlePlayActionWithError:(id *)error;	// 0x4af4d
- (BOOL)_handleStopActionWithError:(id *)error;	// 0x4ab4d
- (void)_imageWritten:(id)written;	// 0x4b1d9
- (int)_indexOfAssetPathInOrderedAssets:(id)orderedAssets;	// 0x4a8a9
- (void)_loadFailed:(id)failed;	// 0x4b339
- (void)_marimbaDidAddEffects:(id)_marimba;	// 0x4b871
- (void)_marimbaSlideshowPlaybackFinished:(id)finished;	// 0x4b4f9
- (void)_marimbaSlideshowWillRepeat:(id)_marimbaSlideshow;	// 0x4b50d
- (void)_needPathsNotification:(id)notification;	// 0x4b451
- (void)_newPhotoPlayerPlaying:(id)playing;	// 0x4b485
- (id)_pathForLocalAssetID:(id)localAssetID;	// 0x4a835
- (void)_playerError:(id)error;	// 0x4bb55
- (void)_playerMediaCued:(id)cued;	// 0x4ba81
- (void)_playlistsQueryComplete;	// 0x49cf9
- (void)_preloadNextImage;	// 0x46371
- (int)_preloadSuccessThresholdForStyle:(id)style;	// 0x4a951
- (void)_reorderImages;	// 0x47321
- (void)_restoreImageManagerPruneCount;	// 0x46331
- (void)_runPlaylistsQuery;	// 0x49a41
- (void)_runSongsQuery;	// 0x49ed1
- (void)_screenSaverDismissed:(id)dismissed;	// 0x4bec5
- (void)_screenSaverWillActivate:(id)_screenSaver;	// 0x4beb5
- (void)_setMusic;	// 0x49899
- (void)_setNewMedia:(id)media;	// 0x4aa55
- (void)_setNewState:(int)state;	// 0x4aae1
- (void)_setPlaylistsQuery:(id)query;	// 0x49bf9
- (void)_setSlideshowTheme;	// 0x48e81
- (void)_setSongsQuery:(id)query;	// 0x4a151
- (void)_setTimePerSlide;	// 0x49455
- (void)_setTransition;	// 0x48ff5
- (void)_setupDocument;	// 0x47e99
- (void)_songsQueryComplete;	// 0x4a1a5
- (void)_speakVOString:(id)string;	// 0x4a9ad
- (void)_spinnerTimerFired;	// 0x47485
- (void)_startPreloadTask;	// 0x46a29
- (void)_startScreenSaverTickleTimer;	// 0x4a6dd
- (void)_startSlideshowIfReady;	// 0x48459
- (void)_stopScreenSaverTickleTimer;	// 0x4a7ad
- (void)_tickleScreensaver:(id)screensaver;	// 0x4a7e1
- (void)_triggerPreloadOfNextImage;	// 0x46839
- (void)_updateDocumentForNewMedia;	// 0x47675
- (void)_updateForNewMedia;	// 0x47ca1
- (void)_updatePreloadingStateForLastPlayed:(id)lastPlayed;	// 0x466b5
- (id)absolutePathForAssetKey:(id)assetKey;	// 0x45b35
- (id)absolutePathForAssetKey:(id)assetKey andSize:(CGSize)size;	// 0x45efd
- (id)absolutePathForStillAssetAtPath:(id)path andSize:(CGSize)size;	// 0x45f0d
- (id)collection;	// 0x453b5
- (void)dealloc;	// 0x44f59
// declared property getter: - (int)imageLoadBatchCounter;	// 0x460dd
// declared property getter: - (int)imageManagerPruneCountToRestore;	// 0x460bd
- (id)media;	// 0x453b9
// declared property getter: - (id)musicQueryToRun;	// 0x46099
// converted property getter: - (BOOL)muted;	// 0x45b25
- (void)nextMedia;	// 0x458b1
// converted property getter: - (id)playerSpecificOptions;	// 0x456d5
- (int)playerState;	// 0x45485
- (BOOL)playingVisualContent;	// 0x45495
- (void)previousMedia;	// 0x45809
// converted property getter: - (int)repeatMode;	// 0x45799
- (CGImageRef)retainedCGImageForAssetKey:(id)assetKey andSize:(CGSize)size;	// 0x45f11
- (BOOL)reverseTouchSwipeBehavior;	// 0x450d1
// declared property setter: - (void)setImageLoadBatchCounter:(int)counter;	// 0x460ed
// declared property setter: - (void)setImageManagerPruneCountToRestore:(int)restore;	// 0x460cd
- (void)setMediaAsCurrentlyPlayingAppendingTrackList:(id)list;	// 0x45345
- (BOOL)setMediaAtIndex:(long)index inCollection:(id)collection error:(id *)error;	// 0x450d5
- (BOOL)setMediaAtIndex:(long)index inTrackList:(id)trackList error:(id *)error;	// 0x45121
// declared property setter: - (void)setMusicQueryToRun:(id)run;	// 0x460ad
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x45ac9
// converted property setter: - (void)setPlayerSpecificOptions:(id)options;	// 0x4551d
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x45775
// converted property setter: - (void)setShufflePlayback:(BOOL)playback;	// 0x456e9
- (BOOL)setState:(int)state error:(id *)error;	// 0x45425
// converted property setter: - (void)setVolume:(float)volume;	// 0x459c1
// converted property getter: - (BOOL)shufflePlayback;	// 0x4570d
- (BOOL)stopsActiveAudioPlayer;	// 0x450cd
- (BOOL)supportsRepeatModes;	// 0x45805
- (BOOL)supportsVolumeControl;	// 0x45959
// converted property getter: - (id)visuals;	// 0x45499
// converted property getter: - (float)volume;	// 0x45a29
@end

