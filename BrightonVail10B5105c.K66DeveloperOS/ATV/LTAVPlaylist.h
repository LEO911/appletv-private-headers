/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class ATVDataClient, NSString, NSArray;

__attribute__((visibility("hidden")))
@interface LTAVPlaylist : XXUnknownSuperclass {
	NSArray *_mediaList;	// 4 = 0x4
	int _sequentialIndex;	// 8 = 0x8
	unsigned _queueLength;	// 12 = 0xc
	BOOL _shuffleEnabled;	// 16 = 0x10
	BOOL _skipExplicit;	// 17 = 0x11
	BOOL _isPlaylistDynamic;	// 18 = 0x12
	int _repeatMode;	// 20 = 0x14
	ATVDataClient *_dataClient;	// 24 = 0x18
	NSString *_playlistName;	// 28 = 0x1c
	NSArray *_sourceTracks;	// 32 = 0x20
}
@property(assign) BOOL isPlaylistDynamic;	// G=0x3debd; S=0x3dead; converted property
@property(readonly, retain) NSArray *mediaList;	// G=0x3d81d; converted property
@property(assign) unsigned queueLength;	// G=0x3f4f35; S=0x3f4f21; converted property
@property(assign) int repeatMode;	// G=0x3de7d; S=0x3de6d; converted property
@property(assign) BOOL shuffleEnabled;	// G=0x3de5d; S=0x3db01; converted property
@property(assign) BOOL skipExplicit;	// G=0x3de9d; S=0x3de8d; converted property
- (id)initWithIndex:(long)index inMediaList:(id)mediaList;	// 0x3d689
- (id)initWithIndex:(long)index inMediaList:(id)mediaList playlistName:(id)name;	// 0x3d619
- (void).cxx_destruct;	// 0x3e5dd
- (id)_mediaForSequentialIndex:(long)sequentialIndex;	// 0x3e43d
- (long)_nextSequentialIndexInDirection:(int)direction;	// 0x3e495
- (long)_sequentialIndex;	// 0x3e42d
- (void)appendMediaList:(id)list;	// 0x3d8f9
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x3d831
- (id)changeMedia:(int)media;	// 0x3e011
- (void)clearBackToItems;	// 0x3f4909
- (void)clearHistory;	// 0x3f4b35
- (long)count;	// 0x3dedd
- (id)currentMedia;	// 0x3defd
- (void)demoteAssetAtIndex:(unsigned)index;	// 0x3f5389
- (void)enqueueItems:(id)items action:(int)action;	// 0x3f4f49
- (void)insertMedia:(id)media atIndex:(long)index;	// 0x3d9cd
- (BOOL)isEqual:(id)equal;	// 0x3e131
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x3debd
- (BOOL)isQueueEnabled;	// 0x3f44a1
- (BOOL)isQueueEstablishedForDataClient:(id)dataClient;	// 0x3e3c9
- (BOOL)isValidForDataClient:(id)dataClient;	// 0x3f4485
- (long)mediaIndex;	// 0x3decd
// converted property getter: - (id)mediaList;	// 0x3d81d
- (BOOL)moreItemsAvailable:(int)available;	// 0x3df99
- (void)moveObjectAtIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x3f56cd
- (id)name;	// 0x3de49
- (id)nextMedia;	// 0x3df65
- (void)playExistingAssetAtIndex:(unsigned)index;	// 0x3f5ba9
- (id)previouslyPlayedItems;	// 0x3f45e1
- (void)promoteAssetAtIndex:(unsigned)index;	// 0x3f5245
- (void)pruneHistory;	// 0x3f5cf1
- (void)purge;	// 0x3f46ed
- (void)purgeTrackList;	// 0x3da65
- (id)queueAssetAtIndex:(int)index;	// 0x3f4e0d
// converted property getter: - (unsigned)queueLength;	// 0x3f4f35
- (id)queuedItems;	// 0x3f44d9
- (void)removeAssetAtIndex:(unsigned)index;	// 0x3f5965
// converted property getter: - (int)repeatMode;	// 0x3de7d
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x3dead
// converted property setter: - (void)setQueueLength:(unsigned)length;	// 0x3f4f21
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x3de6d
// converted property setter: - (void)setShuffleEnabled:(BOOL)enabled;	// 0x3db01
- (void)setShuffleEnabled:(BOOL)enabled preservingNowPlaying:(BOOL)playing;	// 0x3db15
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x3de8d
// converted property getter: - (BOOL)shuffleEnabled;	// 0x3de5d
// converted property getter: - (BOOL)skipExplicit;	// 0x3de9d
- (BOOL)supportsShufflePlayback;	// 0x3de31
- (void)swapObjectAtIndex:(unsigned)index withObjectAtIndex:(unsigned)index2;	// 0x3f5505
- (id)upNext:(unsigned *)next;	// 0x3f4cad
@end

