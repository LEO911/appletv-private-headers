/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "NSCopying.h"
#import "NSMutableCopying.h"

@class EKTimeZone;

@interface EKCalendarDate : NSObject <NSCopying, NSMutableCopying> {
	XXStruct_lQVxyC _dateGr;	// 4 = 0x4
	double _dateAbs;	// 20 = 0x14
	EKTimeZone *_timeZone;	// 28 = 0x1c
	unsigned _flags;	// 32 = 0x20
}
@property(readonly, retain) EKTimeZone *timeZone;	// G=0x35b2817d; converted property
+ (id)calendarDateWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x35b1a899
+ (id)calendarDateWithDate:(id)date timeZone:(id)zone;	// 0x35b1bfa9
+ (id)calendarDateWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x35b1889d
+ (id)calendarDateWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x35b28b81
- (id)initWithAbsoluteTime:(double)absoluteTime internalTimeZone:(id)zone;	// 0x35b81165
- (id)initWithAbsoluteTime:(double)absoluteTime timeZone:(id)zone;	// 0x35b1a8e1
- (id)initWithDate:(id)date timeZone:(id)zone;	// 0x35b1bfed
- (id)initWithDateComponents:(id)dateComponents timeZone:(id)zone;	// 0x35b188dd
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate internalTimeZone:(id)zone;	// 0x35b19fb9
- (id)initWithGregorianDate:(XXStruct_lQVxyC)gregorianDate timeZone:(id)zone;	// 0x35b28bd5
- (double)absoluteTime;	// 0x35b1a185
- (id)calendarDateByAddingDays:(int)days;	// 0x35b19441
- (id)calendarDateByAddingGregorianUnits:(XXStruct_mY3THC)units;	// 0x35b19471
- (id)calendarDateByAddingWeeks:(int)weeks;	// 0x35b8150d
- (id)calendarDateForDay;	// 0x35b192c1
- (id)calendarDateForEndOfDay;	// 0x35b1a051
- (id)calendarDateForEndOfMonth;	// 0x35b20679
- (id)calendarDateForEndOfWeekWithWeekStart:(unsigned)weekStart;	// 0x35b207b5
- (id)calendarDateForMonth;	// 0x35b203cd
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart;	// 0x35b204b1
- (id)calendarDateForWeekWithWeekStart:(unsigned)weekStart daysSinceWeekStart:(int *)start;	// 0x35b204c5
- (id)calendarDateForYear;	// 0x35b818e5
- (id)calendarDateInTimeZone:(id)timeZone;	// 0x35b8153d
- (id)calendarDateWithDate:(id)date;	// 0x35b81599
- (int)compare:(id)compare;	// 0x35b2897d
- (id)components;	// 0x35b81391
- (id)copyWithZone:(NSZone *)zone;	// 0x35b1c051
- (id)date;	// 0x35b1a149
- (unsigned)day;	// 0x35b816d9
- (unsigned)dayOfWeek;	// 0x35b817b9
- (unsigned)dayOfYear;	// 0x35b817e9
- (unsigned)daysInMonth;	// 0x35b20781
- (unsigned)daysInYear;	// 0x35b8184d
- (void)dealloc;	// 0x35b1a99d
- (id)description;	// 0x35b81285
- (XXStruct_mY3THC)differenceAsGregorianUnits:(id)units flags:(unsigned long)flags;	// 0x35b1f62d
- (int)differenceInDays:(id)days;	// 0x35b20391
- (int)differenceInMonths:(id)months;	// 0x35b81615
- (int)differenceInYears:(id)years;	// 0x35b815d9
- (id)earlierDate:(id)date;	// 0x35b819d5
- (XXStruct_lQVxyC)gregorianDate;	// 0x35b1939d
- (unsigned)hour;	// 0x35b8170d
- (BOOL)isEqual:(id)equal;	// 0x35b288bd
- (id)laterDate:(id)date;	// 0x35b81a1d
- (unsigned)minute;	// 0x35b81741
- (unsigned)month;	// 0x35b816a5
- (id)mutableCopyWithZone:(NSZone *)zone;	// 0x35b811e1
- (double)second;	// 0x35b81779
- (int)secondsFromGMT;	// 0x35b814cd
// converted property getter: - (id)timeZone;	// 0x35b2817d
- (unsigned)weekOfYear;	// 0x35b81819
- (unsigned)weeksInYear;	// 0x35b81895
- (unsigned)year;	// 0x35b81675
@end

