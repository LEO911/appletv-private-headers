/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <NSObject.h> // Unknown library

@class NSArray, NSMutableSet, NSMutableDictionary, EKDaemonConnection, EKCalendar, NSNumber, NSString, NSTimeZone;
@protocol OS_dispatch_queue;

@interface EKEventStore : NSObject {
	NSMutableDictionary *_registeredObjects;	// 4 = 0x4
	NSMutableDictionary *_publicRegisteredObjects;	// 8 = 0x8
	NSMutableSet *_insertedObjects;	// 12 = 0xc
	NSMutableSet *_deletedObjects;	// 16 = 0x10
	NSMutableSet *_updatedObjects;	// 20 = 0x14
	NSNumber *_defaultTimedAlarmOffset;	// 24 = 0x18
	NSNumber *_defaultAllDayAlarmOffset;	// 28 = 0x1c
	EKCalendar *_defaultCalendarForNewEvents;	// 32 = 0x20
	EKCalendar *_defaultCalendarForNewReminders;	// 36 = 0x24
	EKDaemonConnection *_database;	// 40 = 0x28
	double _lastDatabaseNotificationTimestamp;	// 44 = 0x2c
	unsigned long _flags;	// 52 = 0x34
	NSTimeZone *_timeZone;	// 56 = 0x38
	NSMutableDictionary *_calendars;	// 60 = 0x3c
	NSMutableDictionary *_sources;	// 64 = 0x40
	NSMutableSet *_objectsPendingCommit;	// 68 = 0x44
	NSObject<OS_dispatch_queue> *_calendarQueue;	// 72 = 0x48
	NSObject<OS_dispatch_queue> *_registeredQueue;	// 76 = 0x4c
	NSObject<OS_dispatch_queue> *_unsavedChangesQueue;	// 80 = 0x50
	NSObject<OS_dispatch_queue> *_dbChangedQueue;	// 84 = 0x54
	NSMutableDictionary *_cachedValidatedEmails;	// 88 = 0x58
}
@property(retain, nonatomic) NSMutableDictionary *_cachedValidatedEmails;	// G=0x35b6179d; S=0x35b617ad; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_calendars;	// G=0x35b616bd; S=0x35b616cd; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewEvents;	// G=0x35b61631; S=0x35b18831; @synthesize
@property(retain, nonatomic) EKCalendar *_defaultCalendarForNewReminders;	// G=0x35b61641; S=0x35b21609; @synthesize
@property(retain, nonatomic) NSMutableDictionary *_sources;	// G=0x35b616dd; S=0x35b616ed; @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *calendarQueue;	// G=0x35b6171d; S=0x35b6172d; @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray *calendars;	// G=0x35b59db9; 
@property(retain, nonatomic) EKDaemonConnection *database;	// G=0x35b61651; S=0x35b61661; @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *dbChangedQueue;	// G=0x35b6177d; S=0x35b6178d; @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber *defaultAllDayAlarmOffset;	// G=0x35b28795; S=0x35b61481; @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar *defaultCalendarForNewEvents;	// G=0x35b185b1; 
@property(retain) EKCalendar *defaultCalendarForNewReminders;	// G=0x35b2129d; S=0x35b5c305; converted property
@property(retain, nonatomic) NSNumber *defaultTimedAlarmOffset;	// G=0x35b26871; S=0x35b6143d; @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet *deletedObjects;	// G=0x35b615f1; S=0x35b61601; @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString *eventStoreIdentifier;	// G=0x35b59815; 
@property(assign, nonatomic) unsigned long flags;	// G=0x35b6169d; S=0x35b616ad; @synthesize=_flags
@property(assign, nonatomic) NSMutableSet *insertedObjects;	// G=0x35b615d1; S=0x35b615e1; @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// G=0x35b61671; S=0x35b61689; @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet *objectsPendingCommit;	// G=0x35b616fd; S=0x35b6170d; @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary *publicRegisteredObjects;	// G=0x35b615b1; S=0x35b615c1; @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary *registeredObjects;	// G=0x35b61591; S=0x35b615a1; @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *registeredQueue;	// G=0x35b6173d; S=0x35b6174d; @synthesize=_registeredQueue
@property(readonly, retain) NSMutableDictionary *sources;	// G=0x35b17341; converted property
@property(copy, nonatomic) NSTimeZone *timeZone;	// G=0x35b18845; S=0x35b139e9; @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue> *unsavedChangesQueue;	// G=0x35b6175d; S=0x35b6176d; @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet *updatedObjects;	// G=0x35b61611; S=0x35b61621; @synthesize=_updatedObjects
+ (BOOL)_isAuthorizationRestrictedForService:(CFStringRef)service;	// 0x35b583b1
+ (int)authorizationStatusForEntityType:(unsigned)entityType;	// 0x35b1379d
+ (Class)classForEntityName:(id)entityName;	// 0x35b148b1
+ (Class)publicClassForEntityName:(id)entityName;	// 0x35b1faa9
- (id)init;	// 0x35b57dc5
- (id)initWithOptions:(unsigned long)options path:(id)path;	// 0x35b57dd9
- (void)_accessStatusChanged;	// 0x35b5859d
- (id)_addFetchedObjectWithID:(id)anId;	// 0x35b145f1
- (void)_addObjectToPendingCommits:(id)pendingCommits;	// 0x35b2df51
- (id)_allCalendars;	// 0x35b13c35
// declared property getter: - (id)_cachedValidatedEmails;	// 0x35b6179d
- (BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;	// 0x35b18445
- (id)_calendarItemsMatchingPredicate:(id)predicate;	// 0x35b5c9bd
- (id)_calendarWithID:(id)anId;	// 0x35b18709
// declared property getter: - (id)_calendars;	// 0x35b616bd
- (void)_databaseChangedExternally;	// 0x35b2fce9
// declared property getter: - (id)_defaultCalendarForNewEvents;	// 0x35b61631
// declared property getter: - (id)_defaultCalendarForNewReminders;	// 0x35b61641
- (void)_deleteObject:(id)object;	// 0x35b5f155
- (id)_eventWithURI:(id)uri checkValid:(BOOL)valid;	// 0x35b5ae29
- (void)_forgetRegisteredObjects;	// 0x35b5e88d
- (void)_insertObject:(id)object;	// 0x35b2b145
- (BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id *)identifier options:(id *)options;	// 0x35b5aae9
- (void)_performServerFunction:(id)function replyHandler:(id)handler;	// 0x35b5b731
- (id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;	// 0x35b21889
- (void)_protectedDataDidBecomeAvailable;	// 0x35b61435
- (void)_protectedDataWillBecomeUnavailable;	// 0x35b61431
- (void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;	// 0x35b5e449
- (void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;	// 0x35b5e1d9
- (void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x35b23325
- (void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;	// 0x35b5e315
- (void)_registerObject:(id)object;	// 0x35b2644d
- (void)_registerObjectImmediate:(id)immediate;	// 0x35b14d0d
- (void)_requestAccessForEntityType:(unsigned)entityType;	// 0x35b58415
- (void)_reregisterObject:(id)object oldID:(id)anId;	// 0x35b2f71d
- (void)_saveWithoutNotify;	// 0x35b59875
// declared property getter: - (id)_sources;	// 0x35b616dd
- (void)_trackModifiedObject:(id)object;	// 0x35b5ee3d
- (void)_unregisterObject:(id)object;	// 0x35b26725
- (void)_validateObjectIDs:(id)ids completion:(id)completion;	// 0x35b2fecd
- (void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;	// 0x35b60b81
- (id)alarmWithUUID:(id)uuid;	// 0x35b60a95
- (void)cacheValidationStatusForEmail:(id)email status:(int)status;	// 0x35b614c5
- (id)calendarItemWithIdentifier:(id)identifier;	// 0x35b5c739
- (id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;	// 0x35b5c859
// declared property getter: - (id)calendarQueue;	// 0x35b6171d
- (id)calendarWithExternalURI:(id)externalURI;	// 0x35b5d695
- (id)calendarWithID:(id)anId;	// 0x35b1ec6d
- (id)calendarWithIdentifier:(id)identifier;	// 0x35b17e21
// declared property getter: - (id)calendars;	// 0x35b59db9
- (id)calendarsForEntityType:(unsigned)entityType;	// 0x35b13a31
- (void)cancelFetchRequest:(id)request;	// 0x35b60a39
- (id)changesSinceSequenceNumber:(int)number;	// 0x35b58651
- (id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;	// 0x35b5d5a9
- (BOOL)commit:(id *)commit;	// 0x35b2dfc1
- (id)connection;	// 0x35b1b431
- (CGColorRef)copyCGColorForNewCalendar;	// 0x35b5bed5
- (int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;	// 0x35b21ae1
- (void)daemonRestarted;	// 0x35b597c9
// declared property getter: - (id)database;	// 0x35b61651
// declared property getter: - (id)dbChangedQueue;	// 0x35b6177d
- (void)dealloc;	// 0x35b580c1
- (id)defaultAllDayAlarm;	// 0x35b28721
// declared property getter: - (id)defaultAllDayAlarmOffset;	// 0x35b28795
// declared property getter: - (id)defaultCalendarForNewEvents;	// 0x35b185b1
// converted property getter: - (id)defaultCalendarForNewReminders;	// 0x35b2129d
- (id)defaultTimedAlarm;	// 0x35b267fd
// declared property getter: - (id)defaultTimedAlarmOffset;	// 0x35b26871
- (BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id *)error;	// 0x35b5a8c1
// declared property getter: - (id)deletedObjects;	// 0x35b615f1
- (id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;	// 0x35b5da41
- (int)emailAddressValidationStatus:(id)status;	// 0x35b61559
- (void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;	// 0x35b607cd
- (id)eventForUID:(id)uid occurrenceDate:(id)date;	// 0x35b5b055
- (id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;	// 0x35b21191
// declared property getter: - (id)eventStoreIdentifier;	// 0x35b59815
- (id)eventWithIdentifier:(id)identifier;	// 0x35b5a9f1
- (id)eventWithUUID:(id)uuid;	// 0x35b5d4b9
- (id)eventWithUniqueId:(id)uniqueId;	// 0x35b5b07d
- (id)eventsMatchingPredicate:(id)predicate;	// 0x35b1a9ed
- (id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;	// 0x35b1aba9
- (BOOL)fetchProperties:(id)properties forReminders:(id)reminders;	// 0x35b5d1a9
- (id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;	// 0x35b5cc3d
// declared property getter: - (unsigned long)flags;	// 0x35b6169d
- (BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id *)error;	// 0x35b59f05
- (id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;	// 0x35b5b655
- (id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;	// 0x35b5bc91
- (void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;	// 0x35b5b82d
- (id)insertNewEvent;	// 0x35b5d775
- (id)insertNewExceptionDateWithDate:(id)date;	// 0x35b5d7d1
- (id)insertNewReminder;	// 0x35b5cb7d
// declared property getter: - (id)insertedObjects;	// 0x35b615d1
- (id)inviteReplyNotifications;	// 0x35b1e001
- (int)inviteReplyNotificationsCount;	// 0x35b5ddd9
- (BOOL)isDataProtected;	// 0x35b1c909
// declared property getter: - (double)lastDatabaseNotificationTimestamp;	// 0x35b61671
- (id)localSource;	// 0x35b59ba9
- (void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;	// 0x35b60e89
- (BOOL)markCalendarAlerted:(id)alerted;	// 0x35b5a0cd
- (void)markEventAlerted:(id)alerted;	// 0x35b5b5d1
- (BOOL)markInviteReplyNotificationAlerted:(id)alerted;	// 0x35b5df51
- (void)markNotificationsAlertedAndSave:(id)save;	// 0x35b5d815
- (BOOL)markResourceChangeAlerted:(id)alerted error:(id *)error;	// 0x35b5db41
- (int)notifiableEventCount;	// 0x35b5da15
- (id)objectWithObjectID:(id)objectID;	// 0x35b213f1
// declared property getter: - (id)objectsPendingCommit;	// 0x35b616fd
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;	// 0x35b20899
- (id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;	// 0x35b20ecd
- (BOOL)occurrenceCacheOccurrencesAreBeingGenerated;	// 0x35b20de1
- (id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;	// 0x35b5cf95
- (id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;	// 0x35b5cf61
- (id)predicateForCompletedRemindersWithCalendars:(id)calendars;	// 0x35b5d029
- (id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;	// 0x35b5ce41
- (id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x35b224e1
- (id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;	// 0x35b5cf29
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;	// 0x35b6116d
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;	// 0x35b1a4e9
- (id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;	// 0x35b6127d
- (id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;	// 0x35b5cef5
- (id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;	// 0x35b2184d
- (id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;	// 0x35b5cd91
- (id)predicateForNotifiableEvents;	// 0x35b1dd9d
- (id)predicateForNotificationCenterVisibleEvents;	// 0x35b613c1
- (id)predicateForRemindersInCalendars:(id)calendars;	// 0x35b5cd49
- (id)predicateForRemindersWithSearchTerm:(id)searchTerm;	// 0x35b5d04d
- (id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;	// 0x35b5cfcd
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;	// 0x35b5d08d
- (id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;	// 0x35b5d0c9
- (id)predicateForUnacknowledgedEvents;	// 0x35b613dd
- (id)predicateForUnalertedEvents;	// 0x35b613f9
- (id)predicateForUpcomingEventsWithLimit:(int)limit;	// 0x35b61415
- (id)publicObjectWithObjectID:(id)objectID;	// 0x35b5eb51
- (id)publicObjectWithPersistentObject:(id)persistentObject;	// 0x35b169b1
// declared property getter: - (id)publicRegisteredObjects;	// 0x35b615b1
- (int)readWriteCalendarCountForEntityType:(unsigned)entityType;	// 0x35b18349
- (id)readWriteCalendarsForEntityType:(unsigned)entityType;	// 0x35b5a53d
- (void)refreshSourcesIfNecessary;	// 0x35b5e689
- (void)refreshSourcesIfNecessary:(BOOL)necessary;	// 0x35b23069
- (id)registerFetchedObjectWithID:(id)anId;	// 0x35b1562d
- (id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;	// 0x35b14491
// declared property getter: - (id)registeredObjects;	// 0x35b61591
// declared property getter: - (id)registeredQueue;	// 0x35b6173d
- (oneway void)release;	// 0x35b18269
- (id)reminderWithExternalURI:(id)externalURI;	// 0x35b5c5fd
- (id)remindersMatchingPredicate:(id)predicate;	// 0x35b22519
- (BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x35b5a805
- (BOOL)removeCalendar:(id)calendar error:(id *)error;	// 0x35b5a711
- (BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x35b5b195
- (BOOL)removeEvent:(id)event span:(int)span error:(id *)error;	// 0x35b5b16d
- (BOOL)removeInviteReplyNotification:(id)notification error:(id *)error;	// 0x35b5e041
- (BOOL)removeInviteReplyNotifications:(id)notifications error:(id *)error;	// 0x35b5e07d
- (BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x35b5c525
- (BOOL)removeReminder:(id)reminder error:(id *)error;	// 0x35b5c505
- (BOOL)removeResourceChange:(id)change error:(id *)error;	// 0x35b5dc41
- (BOOL)removeResourceChanges:(id)changes error:(id *)error;	// 0x35b5dc7d
- (BOOL)removeSource:(id)source error:(id *)error;	// 0x35b59d31
- (void)requestAccessToEntityType:(unsigned)entityType completion:(id)completion;	// 0x35b584e9
- (void)reset;	// 0x35b5f769
- (id)resourceChangesForEntityTypes:(unsigned)entityTypes;	// 0x35b1e265
- (void)rollback;	// 0x35b5f469
- (BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id *)error;	// 0x35b5a731
- (BOOL)saveCalendar:(id)calendar error:(id *)error;	// 0x35b5a6f1
- (BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id *)error;	// 0x35b2a099
- (BOOL)saveEvent:(id)event span:(int)span error:(id *)error;	// 0x35b2a071
- (BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id *)error;	// 0x35b5c431
- (BOOL)saveReminder:(id)reminder error:(id *)error;	// 0x35b5c411
- (BOOL)saveSource:(id)source error:(id *)error;	// 0x35b59c89
- (int)sequenceNumber;	// 0x35b585f9
- (unsigned)serverPort;	// 0x35b13dc5
// declared property setter: - (void)setCalendarQueue:(id)queue;	// 0x35b6172d
// declared property setter: - (void)setDatabase:(id)database;	// 0x35b61661
// declared property setter: - (void)setDbChangedQueue:(id)queue;	// 0x35b6178d
// declared property setter: - (void)setDefaultAllDayAlarmOffset:(id)offset;	// 0x35b61481
- (void)setDefaultCalendarForNewEvents:(id)newEvents;	// 0x35b5c109
// converted property setter: - (void)setDefaultCalendarForNewReminders:(id)newReminders;	// 0x35b5c305
// declared property setter: - (void)setDefaultTimedAlarmOffset:(id)offset;	// 0x35b6143d
// declared property setter: - (void)setDeletedObjects:(id)objects;	// 0x35b61601
// declared property setter: - (void)setFlags:(unsigned long)flags;	// 0x35b616ad
// declared property setter: - (void)setInsertedObjects:(id)objects;	// 0x35b615e1
- (BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id *)error;	// 0x35b5b269
- (BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id *)error;	// 0x35b5b38d
// declared property setter: - (void)setLastDatabaseNotificationTimestamp:(double)timestamp;	// 0x35b61689
// declared property setter: - (void)setObjectsPendingCommit:(id)commit;	// 0x35b6170d
// declared property setter: - (void)setPublicRegisteredObjects:(id)objects;	// 0x35b615c1
// declared property setter: - (void)setRegisteredObjects:(id)objects;	// 0x35b615a1
// declared property setter: - (void)setRegisteredQueue:(id)queue;	// 0x35b6174d
// declared property setter: - (void)setTimeZone:(id)zone;	// 0x35b139e9
// declared property setter: - (void)setUnsavedChangesQueue:(id)queue;	// 0x35b6176d
// declared property setter: - (void)setUpdatedObjects:(id)objects;	// 0x35b61621
// declared property setter: - (void)set_cachedValidatedEmails:(id)emails;	// 0x35b617ad
// declared property setter: - (void)set_calendars:(id)calendars;	// 0x35b616cd
// declared property setter: - (void)set_defaultCalendarForNewEvents:(id)newEvents;	// 0x35b18831
// declared property setter: - (void)set_defaultCalendarForNewReminders:(id)newReminders;	// 0x35b21609
// declared property setter: - (void)set_sources:(id)sources;	// 0x35b616ed
- (id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;	// 0x35b17f81
- (id)sourceWithIdentifier:(id)identifier;	// 0x35b17255
// converted property getter: - (id)sources;	// 0x35b17341
// declared property getter: - (id)timeZone;	// 0x35b18845
- (int)unacknowledgedEventCount;	// 0x35b5d9e9
// declared property getter: - (id)unsavedChangesQueue;	// 0x35b6175d
// declared property getter: - (id)updatedObjects;	// 0x35b61611
@end

