/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library


@interface UIKeyboardInputManager : NSObject {
}
@property(assign) unsigned inputIndex;	// G=0x347ee9ad; S=0x347ee9a5; converted property
@property(assign) unsigned phraseBoundary;	// G=0x347ee9dd; S=0x347ee9d9; converted property
@property(assign) BOOL usesCandidateSelection;	// G=0x347ee9e9; S=0x34643b7d; converted property
+ (id)activeInstance;	// 0x34644dc5
+ (void)clearAllCentroids;	// 0x34644d91
+ (id)dynamicDictionaryFilePathForInputMode:(id)inputMode;	// 0x347eec05
+ (id)keyboardUserDirectory;	// 0x347eeb85
+ (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x34644edd
+ (void)releaseSharedInstance;	// 0x345c902d
+ (void)removeAllDynamicDictionaries;	// 0x347eed25
+ (void)removeDynamicDictionaryForInputMode:(id)inputMode;	// 0x347eec95
+ (id)sharedInstanceForInputMode:(id)inputMode inHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x3463327d
+ (id)userDictionaryWordKeyPairsFilePath;	// 0x347eebd1
- (void)acceptInput;	// 0x347ee995
- (BOOL)acceptInputString:(id)string;	// 0x34667675
- (BOOL)acceptsCharacter:(unsigned short)character;	// 0x347ee9c1
- (id)accessibilityLabelForCandidate:(id)candidate;	// 0x347eea6d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point deletePreceding:(unsigned *)preceding deleteFollowing:(unsigned *)following fromVariantKey:(BOOL)variantKey;	// 0x3469f38d
- (id)addInput:(id)input flags:(unsigned)flags point:(CGPoint)point firstDelete:(unsigned *)aDelete fromVariantKey:(BOOL)variantKey;	// 0x347ee979
- (id)addInputObject:(id)object;	// 0x347eee7d
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)sortingMethod;	// 0x347eea5d
- (void)appendToInputContext:(id)inputContext;	// 0x347ee999
- (id)autocorrection;	// 0x347ee9c9
- (BOOL)canHandleKeyHitTest;	// 0x347eef15
- (void)candidateRejected:(id)rejected;	// 0x347eeb75
- (id)candidates;	// 0x347ee9d1
- (id)candidatesForString:(id)string;	// 0x347ee9cd
- (CFArrayRef)chargeableKeys;	// 0x347eee75
- (CFDictionaryRef)chargedKeyProbabilities;	// 0x347eee79
- (void)clearAllCentroids;	// 0x347eef2d
- (void)clearDynamicDictionary;	// 0x347eeb81
- (void)clearInput;	// 0x347ee991
- (void)clearInputContext;	// 0x347ee9a1
- (void)clearKeyAreas;	// 0x347eef19
- (void)configureInputModeSpecificFeatures:(id)features withLayout:(id)layout;	// 0x347eea89
- (void)configureKeyboard:(id)keyboard forAutocorrection:(id)autocorrection;	// 0x34635c95
- (void)configureKeyboard:(id)keyboard forCandidates:(id)candidates;	// 0x347eea8d
- (id)defaultCandidate;	// 0x347ee9f1
- (unsigned)defaultCandidateIndex;	// 0x347ee9f5
- (id)deleteFromInput:(unsigned *)input;	// 0x347ee989
- (void)deleteFromStrokeHistory;	// 0x347eef25
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;	// 0x347eea61
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id)completion;	// 0x347eea65
- (BOOL)ignoresDeadKeys;	// 0x347eeb65
- (id)indexTitlesForGroupTitles:(id)groupTitles sortingMethod:(id)method;	// 0x347eea69
- (unsigned)inputCount;	// 0x347ee9b1
- (BOOL)inputEmpty;	// 0x347ee9b5
// converted property getter: - (unsigned)inputIndex;	// 0x347ee9ad
- (void)inputLocationChanged;	// 0x347ee9bd
- (id)inputString;	// 0x347ee9b9
- (int)keyHitTest:(CGPoint)test touchStage:(int)stage atTime:(double)time withTouch:(id)touch forceShift:(BOOL)shift forcingKey:(int)key;	// 0x347eef21
- (void)lastAcceptedCandidateCorrected;	// 0x347eeb79
- (unsigned)maximumShortcutLengthAllowed;	// 0x347eef39
- (BOOL)nextInputWouldStartSentence;	// 0x347eea49
// converted property getter: - (unsigned)phraseBoundary;	// 0x347ee9dd
- (void)registerCentroid:(CGPoint)centroid forKey:(id)key;	// 0x347eef29
- (void)registerKeyArea:(CGPoint)area withRadii:(CGPoint)radii forKeyCode:(unsigned short)keyCode forLowerKey:(id)lowerKey forUpperKey:(id)upperKey;	// 0x347eef1d
- (id)remainingInput;	// 0x347ee9d5
- (id)remapKeyWithString:(id)string stringWithoutModifiers:(id)modifiers modifierFlags:(unsigned)flags;	// 0x3466a739
- (BOOL)removeSuffixOfInputContext:(id)inputContext;	// 0x347ee99d
- (id)searchStringForMarkedText;	// 0x347ee9fd
- (void)setAutoCorrects:(BOOL)corrects;	// 0x347eea75
- (void)setAutocapitalizationType:(int)type;	// 0x347eea79
- (void)setAutocorrectionHistory:(id)history;	// 0x347eeb7d
- (void)setCalculatesChargedKeyProbabilities:(BOOL)probabilities;	// 0x347eee71
- (void)setInHardwareKeyboardMode:(BOOL)hardwareKeyboardMode;	// 0x347eea81
- (void)setInSplitKeyboardMode:(BOOL)splitKeyboardMode;	// 0x347eea85
- (void)setInput:(id)input;	// 0x347ee985
// converted property setter: - (void)setInputIndex:(unsigned)index;	// 0x347ee9a5
- (id)setInputObject:(id)object;	// 0x347eeec9
- (void)setKeyboardEventsLagging:(BOOL)lagging;	// 0x347eea7d
- (void)setLearnsCorrection:(BOOL)correction;	// 0x347eeb61
- (void)setOriginalInput:(id)input;	// 0x347eeb69
// converted property setter: - (void)setPhraseBoundary:(unsigned)boundary;	// 0x347ee9d9
- (void)setTypologyRecorder:(id)recorder;	// 0x347eef31
// converted property setter: - (void)setUsesCandidateSelection:(BOOL)selection;	// 0x34643b7d
- (id)shadowTyping;	// 0x347eee6d
- (id)shortcutConversionForInput:(id)input andExistingString:(id)string existingStringStartsInMiddleOfWord:(BOOL)word;	// 0x347eef3d
- (BOOL)shouldAcceptCandidate:(id)candidate;	// 0x347eeb71
- (BOOL)shouldExtendPriorWord;	// 0x3465b4a9
- (BOOL)shouldSkipCandidateSelectionForPopupVariantString:(id)popupVariantString;	// 0x347eea4d
- (BOOL)shouldSuppressAutocorrectionWithTerminator:(id)terminator;	// 0x347eea51
- (id)sortingMethods;	// 0x347eea55
- (BOOL)stringEndsWord:(id)word;	// 0x3466c9d1
- (id)stringForDoubleKey:(id)doubleKey;	// 0x347eea11
- (BOOL)stringIsExemptFromChecker:(id)checker;	// 0x347ee9c5
- (BOOL)suppliesCompletions;	// 0x347eea09
- (BOOL)supportsNumberKeySelection;	// 0x347eea71
- (BOOL)supportsSetPhraseBoundary;	// 0x347ee9e5
- (BOOL)supportsShortcutConversion;	// 0x347eef35
- (BOOL)suppressCompletionsForFieldEditor;	// 0x347eea0d
- (BOOL)suppressesCandidateDisplay;	// 0x3466ca4d
- (void)textAccepted:(id)accepted;	// 0x347eeb6d
- (id)titleForSortingMethod:(id)sortingMethod;	// 0x347eea59
- (BOOL)usesAutoDeleteWord;	// 0x347ee9ed
// converted property getter: - (BOOL)usesCandidateSelection;	// 0x347ee9e9
- (unsigned)wordHistoryDepth;	// 0x347ee9a9
@end

