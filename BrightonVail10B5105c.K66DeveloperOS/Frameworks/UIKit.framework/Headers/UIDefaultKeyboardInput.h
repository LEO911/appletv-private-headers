/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIView.h"
#import "UIKeyboardInput.h"

@class UITextRange, NSDictionary, UITextPosition, UITextInputTraits, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface UIDefaultKeyboardInput : UIView <UIKeyboardInput> {
	UITextInputTraits *m_traits;	// 84 = 0x54
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// G=0x3478e47d; S=0x3478e479; @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign) BOOL becomesEditableWithGestures;	// G=0x3478e495; S=0x3478e499; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x3478e4cd; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x3478e4d1; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x3478e579; S=0x3478e57d; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x3478e485; 
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x3478e341; S=0x3478e339; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x3478e529; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x3478e52d; S=0x3478e531; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, getter=isSecure) BOOL secure;	// G=0x3478e471; S=0x3478e475; converted property
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x3478e4c5; S=0x3478e4c9; 
@property(assign, nonatomic) int selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x3478e429; S=0x3478e425; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x3478e575; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (NSRange)_markedTextNSRange;	// 0x3478e3f9
// declared property getter: - (BOOL)acceptsEmoji;	// 0x3478e47d
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x3478e549
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x3478e495
// declared property getter: - (id)beginningOfDocument;	// 0x3478e4cd
- (CGRect)caretRect;	// 0x3478e431
- (CGRect)caretRectForPosition:(id)position;	// 0x3478e505
- (unsigned short)characterAfterCaretSelection;	// 0x3478e34d
- (unsigned short)characterBeforeCaretSelection;	// 0x3478e349
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x3478e345
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x3478e53d
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x3478e545
- (id)closestPositionToPoint:(CGPoint)point;	// 0x3478e535
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x3478e539
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x3478e555
- (void)confirmMarkedText:(id)text;	// 0x3478e33d
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x3478e455
- (void)dealloc;	// 0x346ab279
- (id)delegate;	// 0x3478e31d
- (void)deleteBackward;	// 0x3478e321
// declared property getter: - (id)endOfDocument;	// 0x3478e4d1
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x3478e3cd
- (void)extendCurrentSelection:(int)selection;	// 0x3478e415
- (CGRect)firstRectForRange:(id)range;	// 0x3478e4e1
- (id)fontForCaretSelection;	// 0x3478e351
- (void)forwardInvocation:(id)invocation;	// 0x3478e219
- (BOOL)hasContent;	// 0x3478e3d9
- (BOOL)hasSelection;	// 0x3478e3dd
- (BOOL)hasText;	// 0x3478e4c1
// declared property getter: - (id)inputDelegate;	// 0x3478e579
- (void)insertText:(id)text;	// 0x3478e325
// declared property getter: - (id)interactionAssistant;	// 0x3478e485
- (BOOL)isEditable;	// 0x3478e489
- (BOOL)isEditing;	// 0x3478e48d
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x3478e565
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x3478e56d
// converted property getter: - (BOOL)isSecure;	// 0x3478e471
- (BOOL)isShowingPlaceholder;	// 0x3478e469
// converted property getter: - (id)markedText;	// 0x3478e341
// declared property getter: - (id)markedTextRange;	// 0x3478e529
// declared property getter: - (id)markedTextStyle;	// 0x3478e52d
- (id)methodSignatureForSelector:(SEL)selector;	// 0x3478e2a1
- (void)moveBackward:(unsigned)backward;	// 0x3478e419
- (void)moveForward:(unsigned)forward;	// 0x3478e41d
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x3478e3c1
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x3478e559
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x3478e561
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x3478e55d
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x3478e569
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x3478e541
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x3478e3bd
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x3478e411
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x3478e40d
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x3478e571
- (CGRect)rectContainingCaretSelection;	// 0x3478e399
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x3478e371
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x3478e395
- (void)replaceCurrentWordWithText:(id)text;	// 0x3478e32d
- (void)replaceRange:(id)range withText:(id)text;	// 0x3478e4dd
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x3478e329
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x3478e331
- (void)selectAll;	// 0x3478e421
- (id)selectedDOMRange;	// 0x3478e405
// declared property getter: - (id)selectedTextRange;	// 0x3478e4c5
- (BOOL)selectionAtDocumentStart;	// 0x3478e3e5
- (BOOL)selectionAtWordStart;	// 0x3478e3e9
- (NSRange)selectionRange;	// 0x3478e3ed
- (id)selectionRectsForRange:(id)range;	// 0x3478e581
- (int)selectionState;	// 0x3478e3e1
- (id)selectionView;	// 0x3478e481
// declared property setter: - (void)setAcceptsEmoji:(BOOL)emoji;	// 0x3478e479
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x3478e54d
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x3478e499
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x3478e57d
// converted property setter: - (void)setMarkedText:(id)text;	// 0x3478e339
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x3478e335
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x3478e531
// converted property setter: - (void)setSecure:(BOOL)secure;	// 0x3478e475
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x3478e409
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x3478e4c9
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x3478e42d
// converted property setter: - (void)setText:(id)text;	// 0x3478e425
- (void)setupPlaceholderTextIfNeeded;	// 0x3478e46d
- (void)takeTraitsFrom:(id)from;	// 0x3478e2f1
// converted property getter: - (id)text;	// 0x3478e429
- (id)textColorForCaretSelection;	// 0x3478e355
- (id)textInRange:(id)range;	// 0x3478e4d5
- (id)textInputTraits;	// 0x3478e1c9
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x3478e4d9
// declared property getter: - (id)tokenizer;	// 0x3478e575
- (void)unmarkText;	// 0x3478e551
- (void)updateSelection;	// 0x3478e491
- (CGRect)visibleBounds;	// 0x3478e49d
- (id)wordContainingCaretSelection;	// 0x3478e3c9
- (int)wordOffsetInRange:(id)range;	// 0x3478e3d1
- (id)wordRangeContainingCaretSelection;	// 0x3478e3c5
@end

