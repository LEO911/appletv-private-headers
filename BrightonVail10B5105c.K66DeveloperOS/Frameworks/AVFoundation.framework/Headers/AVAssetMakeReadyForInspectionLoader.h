/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVAssetInspectorLoader.h"
#import "AVFoundation-Structs.h"

@class NSURL, AVAssetCache, AVAssetInspector, NSMutableArray;

@interface AVAssetMakeReadyForInspectionLoader : AVAssetInspectorLoader {
	AVAssetInspector *_assetInspector;	// 8 = 0x8
	AVAssetCache *_assetCache;	// 12 = 0xc
	BOOL _shouldMatchDataInCacheByURLPathComponentOnly;	// 16 = 0x10
	BOOL _shouldMatchDataInCacheByURLWithoutQueryComponent;	// 17 = 0x11
	NSURL *_downloadDestinationURL;	// 20 = 0x14
	OpaqueFigFormatReader *_formatReader;	// 24 = 0x18
	OpaqueFigSimpleMutex *_loadingMutex;	// 28 = 0x1c
	NSMutableArray *_keysAwaitingCompletion;	// 32 = 0x20
	int _status;	// 36 = 0x24
	long _basicInspectionFailureCode;	// 40 = 0x28
	NSURL *_URL;	// 44 = 0x2c
}
@property(readonly, retain) NSURL *URL;	// G=0x30329925; converted property
@property(readonly, assign, nonatomic) AVAssetCache *assetCache;	// G=0x30329935; @synthesize=_assetCache
@property(readonly, retain) AVAssetInspector *assetInspector;	// G=0x30328d69; converted property
@property(readonly, assign, nonatomic) NSURL *downloadDestinationURL;	// G=0x30329965; @synthesize=_downloadDestinationURL
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLPathComponentOnly;	// G=0x30329945; @synthesize=_shouldMatchDataInCacheByURLPathComponentOnly
@property(readonly, assign, nonatomic) BOOL shouldMatchDataInCacheByURLWithoutQueryComponent;	// G=0x30329955; @synthesize=_shouldMatchDataInCacheByURLWithoutQueryComponent
- (id)initWithURL:(id)url;	// 0x30328bb9
// converted property getter: - (id)URL;	// 0x30329925
- (OpaqueFigFormatReader *)_copyFormatReaderFromFigObjectWithFigErrorCode:(int *)figErrorCode;	// 0x30328e15
- (id)_dictionaryOfSpecialGettersForKeyValueStatus;	// 0x30328e79
- (id)_dictionaryOfSpecialLoadingMethodsForKeys;	// 0x30329401
- (OpaqueFigFormatReader *)_formatReader;	// 0x30328db1
- (id)_getAndPruneCompletionsWhileMutexLocked;	// 0x30329025
- (BOOL)_inspectionRequiresAFormatReader;	// 0x30328e51
- (BOOL)_isStreaming;	// 0x30329909
- (id)_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:(id)keys;	// 0x303293cd
- (id)_loadValuesWhileMutexLockedForKeys:(id)keys;	// 0x3032942d
- (OpaqueFigSimpleMutex *)_loadingMutex;	// 0x30328e01
- (OpaqueFigPlaybackItem *)_playbackItem;	// 0x30328e55
- (BOOL)_providesAccurateTiming;	// 0x30328e11
- (void)_serverHasDied;	// 0x3032990d
- (void)_setStatus:(int)status figErrorCode:(long)code;	// 0x303292d5
- (int)_status;	// 0x303291f9
- (id)_statusOfValueForKeyThatIsAlwaysLoaded;	// 0x30328e59
- (int)_statusOfValueWhileMutexLockedForKey:(id)key error:(id *)error;	// 0x30328ead
- (BOOL)_statusOfValuesIsTerminalWhileMutexLockedForKeys:(id)keys;	// 0x30328f59
- (BOOL)_updateStatusWhileMutexLocked:(int)locked figErrorCode:(long)code;	// 0x30329209
// declared property getter: - (id)assetCache;	// 0x30329935
// converted property getter: - (id)assetInspector;	// 0x30328d69
- (void)cancelLoading;	// 0x30328d9d
- (id)chapterGroupInfo;	// 0x303298f1
- (id)copyWithZone:(NSZone *)zone;	// 0x30328d59
- (void)dealloc;	// 0x30328c31
// declared property getter: - (id)downloadDestinationURL;	// 0x30329965
- (XXStruct_pwHToB)duration;	// 0x30329885
- (void)finalize;	// 0x30328cfd
- (BOOL)hasProtectedContent;	// 0x30329905
- (BOOL)isComposable;	// 0x30329901
- (BOOL)isExportable;	// 0x303298f9
- (BOOL)isPlayable;	// 0x303298f5
- (BOOL)isReadable;	// 0x303298fd
- (void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id)handler;	// 0x30329671
- (id)lyrics;	// 0x303298c9
// declared property getter: - (BOOL)shouldMatchDataInCacheByURLPathComponentOnly;	// 0x30329945
// declared property getter: - (BOOL)shouldMatchDataInCacheByURLWithoutQueryComponent;	// 0x30329955
- (int)statusOfValueForKey:(id)key error:(id *)error;	// 0x303291b1
@end

