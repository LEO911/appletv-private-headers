/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, AVAudioMix, NSURL, NSArray, AVVideoComposition, NSString, NSError, AVAssetExportSessionInternal;

@interface AVAssetExportSession : NSObject {
	AVAssetExportSessionInternal *_exportSession;	// 4 = 0x4
}
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x302f3745; 
@property(copy, nonatomic) AVAudioMix *audioMix;	// G=0x302f50f5; S=0x302f5115; 
@property(readonly, assign, nonatomic) NSError *error;	// G=0x302f435d; 
@property(readonly, assign, nonatomic) long long estimatedOutputFileLength;	// G=0x302f4f01; 
@property(assign, nonatomic) long long fileLengthLimit;	// G=0x302f5051; S=0x302f5075; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB maxDuration;	// G=0x302f4e85; 
@property(copy, nonatomic) NSArray *metadata;	// G=0x302f4f85; S=0x302f4fa5; 
@property(copy, nonatomic) NSString *outputFileType;	// G=0x302f3ee9; S=0x302f3f09; 
@property(copy, nonatomic) NSURL *outputURL;	// G=0x302f40d9; S=0x302f40f9; 
@property(readonly, assign, nonatomic) NSString *presetName;	// G=0x302f3765; 
@property(readonly, assign, nonatomic) float progress;	// G=0x302f45e5; 
@property(assign, nonatomic) BOOL shouldOptimizeForNetworkUse;	// G=0x302f53b5; S=0x302f53d5; 
@property(readonly, assign, nonatomic) int status;	// G=0x302f41dd; 
@property(readonly, assign, nonatomic) NSArray *supportedFileTypes;	// G=0x302f39c1; 
@property(assign, nonatomic) XXStruct_yD8eWC timeRange;	// G=0x302f4d5d; S=0x302f4db9; 
@property(assign) BOOL usesHardwareVideoEncoderIfAvailable;	// G=0x302f5451; S=0x302f5471; converted property
@property(copy, nonatomic) AVVideoComposition *videoComposition;	// G=0x302f51c1; S=0x302f51e1; 
+ (id)_audioOnlyPresets;	// 0x302f54ed
+ (id)_audioVideoPresets;	// 0x302f5581
+ (BOOL)_canWriteMediaOfAsset:(id)asset toFileType:(id)fileType;	// 0x302f2d6d
+ (long long)_estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x302f6d01
+ (id)_figRemakerNotificationNames;	// 0x302f6845
+ (int)_getPassthroughExportPolicyForAssetTrack:(id)assetTrack fileType:(id)type asChapterTrack:(BOOL)track;	// 0x302f3785
+ (BOOL)_isCompositionWithMultipleNonEmptyEdits:(id)multipleNonEmptyEdits;	// 0x302f38ad
+ (BOOL)_isExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302f603d
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302f5fe1
+ (BOOL)_isNonPassthroughExportPreset:(id)preset compatibleWithAssetContainingPlayableAudio:(BOOL)assetContainingPlayableAudio playableVideo:(BOOL)video outputFileType:(id)type;	// 0x302f5e29
+ (BOOL)_isPassthroughExportPresetCompatibleWithAsset:(id)asset outputFileType:(id)type;	// 0x302f5b3d
+ (BOOL)_isPassthroughSupportedForAsset:(id)asset;	// 0x302f2d3d
+ (XXStruct_pwHToB)_maximumDurationForPreset:(id)preset fileSizeBytesLimit:(long long)limit properties:(id)properties;	// 0x302f68e5
+ (id)_settingForPreset:(id)preset;	// 0x302f60a5
+ (id)_utTypesForAudioOnly;	// 0x302f5a59
+ (id)_utTypesForDefaultPassthroughPreset;	// 0x302f591d
+ (id)_utTypesForPresets;	// 0x302f5655
+ (id)allExportPresets;	// 0x302f2a19
+ (void)determineCompatibilityOfExportPreset:(id)exportPreset withAsset:(id)asset outputFileType:(id)type completionHandler:(id)handler;	// 0x302f2e89
+ (long long)estimatedOutputFileLengthForPreset:(id)preset duration:(XXStruct_pwHToB)duration properties:(id)properties;	// 0x302f30c5
+ (id)exportPresetsCompatibleWithAsset:(id)asset;	// 0x302f2c05
+ (id)exportSessionWithAsset:(id)asset presetName:(id)name;	// 0x302f2ff9
+ (XXStruct_pwHToB)maximumDurationForPreset:(id)preset properties:(id)properties;	// 0x302f3045
- (id)init;	// 0x302f3109
- (id)initWithAsset:(id)asset presetName:(id)name;	// 0x302f311d
- (id)_actualPresetName;	// 0x302f71b1
- (id)_actualSettingForPreset:(id)preset;	// 0x302f60e9
- (void)_addListeners;	// 0x302f7855
- (BOOL)_canPassThroughAudio:(id)audio checkEnabled:(BOOL)enabled checkProtected:(BOOL)aProtected;	// 0x302f8081
- (BOOL)_canPassThroughVideo:(id)video checkEnabled:(BOOL)enabled checkAll:(BOOL)all checkProtected:(BOOL)aProtected;	// 0x302f8d01
- (OpaqueFigRemaker *)_createFigRemaker;	// 0x302f9979
- (id)_determineCompatibleFileTypes;	// 0x302f3a31
- (CGSize)_getSourceDimension;	// 0x302f79ad
- (int)_getTrackCountOfType:(id)type checkEnabled:(BOOL)enabled;	// 0x302f7bd1
- (void)_handleFigRemakerNotification:(id)notification payload:(id)payload;	// 0x302f6f2d
- (void)_handleFigRemakerNotificationAsync:(id)async payload:(id)payload;	// 0x302f70d9
- (BOOL)_hasProtectedNonAudioVideoTracks;	// 0x302f7d05
- (BOOL)_isAudioMixdownRequired:(CFStringRef)required error:(id *)error;	// 0x302f9941
- (void)_removeListeners;	// 0x302f769d
- (id)_retrieveChannelSpecificAudioSettingForAudioTrack:(id)audioTrack fromAudioSetting:(id)audioSetting;	// 0x302f8a29
- (id)_settingForFigRemaker;	// 0x302f8b95
- (BOOL)_totalSizeOfTracksIsWithinFileLengthLimit:(id)tracksIsWithinFileLengthLimit forSetting:(id)setting;	// 0x302f7ee5
- (void)_transitionToStatus:(int)status error:(id)error;	// 0x302f71e5
- (void)_updateProgress;	// 0x302f453d
- (BOOL)_validateSettablePropertiesReturningError:(id *)error;	// 0x302f4785
// declared property getter: - (id)asset;	// 0x302f3745
// declared property getter: - (id)audioMix;	// 0x302f50f5
- (void)cancelExport;	// 0x302f4d49
- (void)dealloc;	// 0x302f33c9
- (id)description;	// 0x302f36a1
- (void)determineCompatibleFileTypesWithCompletionHandler:(id)completionHandler;	// 0x302f3dcd
// declared property getter: - (id)error;	// 0x302f435d
// declared property getter: - (long long)estimatedOutputFileLength;	// 0x302f4f01
- (void)exportAsynchronouslyWithCompletionHandler:(id)completionHandler;	// 0x302f49a5
// declared property getter: - (long long)fileLengthLimit;	// 0x302f5051
- (void)finalize;	// 0x302f35c1
// declared property getter: - (XXStruct_pwHToB)maxDuration;	// 0x302f4e85
// declared property getter: - (id)metadata;	// 0x302f4f85
// declared property getter: - (id)outputFileType;	// 0x302f3ee9
// declared property getter: - (id)outputURL;	// 0x302f40d9
// declared property getter: - (id)presetName;	// 0x302f3765
// declared property getter: - (float)progress;	// 0x302f45e5
// declared property setter: - (void)setAudioMix:(id)mix;	// 0x302f5115
// declared property setter: - (void)setFileLengthLimit:(long long)limit;	// 0x302f5075
// declared property setter: - (void)setMetadata:(id)metadata;	// 0x302f4fa5
// declared property setter: - (void)setOutputFileType:(id)type;	// 0x302f3f09
// declared property setter: - (void)setOutputURL:(id)url;	// 0x302f40f9
// declared property setter: - (void)setShouldOptimizeForNetworkUse:(BOOL)optimizeForNetworkUse;	// 0x302f53d5
// declared property setter: - (void)setTimeRange:(XXStruct_yD8eWC)range;	// 0x302f4db9
// converted property setter: - (void)setUsesHardwareVideoEncoderIfAvailable:(BOOL)available;	// 0x302f5471
// declared property setter: - (void)setVideoComposition:(id)composition;	// 0x302f51e1
// declared property getter: - (BOOL)shouldOptimizeForNetworkUse;	// 0x302f53b5
// declared property getter: - (int)status;	// 0x302f41dd
// declared property getter: - (id)supportedFileTypes;	// 0x302f39c1
// declared property getter: - (XXStruct_yD8eWC)timeRange;	// 0x302f4d5d
// converted property getter: - (BOOL)usesHardwareVideoEncoderIfAvailable;	// 0x302f5451
// declared property getter: - (id)videoComposition;	// 0x302f51c1
@end

