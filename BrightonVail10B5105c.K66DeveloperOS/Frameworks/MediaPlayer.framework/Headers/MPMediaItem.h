/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPMediaEntity.h"

@class NSString, NSDate, NSArray, MPMediaItemArtwork;

@interface MPMediaItem : MPMediaEntity {
}
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x34fd85b5; 
@property(readonly, assign, nonatomic) NSString *albumTitle;	// G=0x34fd8611; 
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x34fd862d; 
@property(readonly, assign, nonatomic) MPMediaItemArtwork *artwork;	// G=0x34fd8649; 
@property(assign, nonatomic) double bookmarkTime;	// G=0x34fd8665; S=0x34fd8699; 
@property(readonly, assign, nonatomic) NSArray *chapters;	// G=0x34fd7d85; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x34fd86dd; 
@property(readonly, assign, nonatomic) NSString *effectiveAlbumArtist;	// G=0x34fd85d1; 
@property(readonly, assign, nonatomic) double effectiveStopTime;	// G=0x34fd88d9; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x34fd86f9; 
@property(assign, nonatomic) BOOL hasBeenPlayed;	// G=0x34fd8ce5; S=0x34fd8d15; 
@property(readonly, assign, nonatomic) BOOL isITunesU;	// G=0x34fd87d9; 
@property(readonly, assign, nonatomic) BOOL isRental;	// G=0x34fd8715; 
@property(readonly, assign, nonatomic) BOOL isUsableAsRepresentativeItem;	// G=0x34fd947d; 
@property(copy, nonatomic) NSDate *lastPlayedDate;	// G=0x34fd8b4d; S=0x34fd8b69; 
@property(copy, nonatomic) NSDate *lastSkippedDate;	// G=0x34fd8cad; S=0x34fd8cc9; 
@property(copy, nonatomic) NSDate *lastUsedDate;	// G=0x34fd8b85; S=0x34fd8ba1; 
@property(readonly, assign, nonatomic) int mediaType;	// G=0x34fd8809; 
@property(readonly, assign, nonatomic) BOOL mediaTypeCanSeedGenius;	// G=0x35073981; 
@property(assign, nonatomic) unsigned playCount;	// G=0x34fd8a5d; S=0x34fd8a91; 
@property(assign, nonatomic) unsigned playCountSinceSync;	// G=0x34fd8ad5; S=0x34fd8b09; 
@property(readonly, assign, nonatomic) double playbackDuration;	// G=0x34fd883d; 
@property(readonly, assign, nonatomic) NSString *podcastTitle;	// G=0x34fd891d; 
@property(assign, nonatomic) unsigned rating;	// G=0x34fd8939; S=0x34fd896d; 
@property(readonly, assign, nonatomic) NSDate *releaseDate;	// G=0x34fd89b1; 
@property(readonly, assign, nonatomic) BOOL rememberBookmarkTime;	// G=0x34fd8d59; 
@property(assign, nonatomic) unsigned skipCount;	// G=0x34fd8bbd; S=0x34fd8bf1; 
@property(assign, nonatomic) unsigned skipCountSinceSync;	// G=0x34fd8c35; S=0x34fd8c69; 
@property(readonly, assign, nonatomic) double startTime;	// G=0x34fd8871; 
@property(readonly, assign, nonatomic) double stopTime;	// G=0x34fd88a5; 
@property(readonly, assign, nonatomic) NSString *title;	// G=0x34fd89cd; 
@property(readonly, assign, nonatomic) unsigned year;	// G=0x34fd89e9; 
+ (void)_createFilterableDictionary;	// 0x34fd7da1
+ (BOOL)_isValidItemProperty:(id)property;	// 0x34fd8571
+ (BOOL)canFilterByProperty:(id)property;	// 0x34fd74f5
+ (id)dynamicProperties;	// 0x34fd7c59
+ (id)fallbackTitlePropertyForGroupingType:(int)groupingType;	// 0x34fd7c3d
+ (id)persistentIDPropertyForGroupingType:(int)groupingType;	// 0x34fd7b4d
+ (id)titlePropertyForGroupingType:(int)groupingType;	// 0x34fd7bb9
- (id)initWithCoder:(id)coder;	// 0x34fd73f1
- (id)initWithPersistentID:(unsigned long long)persistentID;	// 0x34fd72e5
- (id)_bestStoreURL;	// 0x34fd7a95
- (id)_directStoreURL;	// 0x34fd9481
- (id)_libraryLinkArtist;	// 0x34fd9629
- (id)_libraryLinkKind;	// 0x34fd969d
- (id)_libraryLinkPlaylistName;	// 0x34fd975d
- (id)_libraryLinkURL;	// 0x34fd97f1
// declared property getter: - (id)albumArtist;	// 0x34fd85b5
// declared property getter: - (id)albumTitle;	// 0x34fd8611
// declared property getter: - (id)artist;	// 0x34fd862d
// declared property getter: - (id)artwork;	// 0x34fd8649
// declared property getter: - (double)bookmarkTime;	// 0x34fd8665
- (id)chapterOfType:(int)type atIndex:(unsigned)index;	// 0x34fd8ebd
- (id)chapterOfType:(int)type atTime:(double)time;	// 0x34fd8fa9
// declared property getter: - (id)chapters;	// 0x34fd7d85
- (id)chaptersOfType:(int)type;	// 0x34fd8d89
- (void)clearBookmarkTime;	// 0x34fd7a15
// declared property getter: - (id)composer;	// 0x34fd86dd
- (unsigned)countOfChaptersOfType:(int)type;	// 0x34fd90dd
- (void)didReceiveMemoryWarning;	// 0x34fd7a91
- (BOOL)didSkipWithPlayedToTime:(double)time;	// 0x34fd76a9
// declared property getter: - (id)effectiveAlbumArtist;	// 0x34fd85d1
// declared property getter: - (double)effectiveStopTime;	// 0x34fd88d9
- (void)encodeWithCoder:(id)coder;	// 0x34fd7479
- (BOOL)existsInLibrary;	// 0x34fd7acd
- (void)gaplessHeuristicInfo:(unsigned *)info durationInSamples:(unsigned long long *)samples lastPacketsResync:(unsigned long long *)resync encodingDelay:(unsigned *)delay encodingDrain:(unsigned *)drain;	// 0x34fd91bd
// declared property getter: - (id)genre;	// 0x34fd86f9
// declared property getter: - (BOOL)hasBeenPlayed;	// 0x34fd8ce5
- (unsigned)hash;	// 0x34fd7341
- (void)incrementPlayCountForPlayingToEnd;	// 0x34fd789d
- (BOOL)incrementPlayCountForStopTime:(double)stopTime;	// 0x34fd7919
- (void)incrementSkipCount;	// 0x34fd7821
- (BOOL)isDownloadInProgress;	// 0x3506ef8d
- (BOOL)isDownloadable;	// 0x3506ed41
- (BOOL)isEqual:(id)equal;	// 0x34fd7359
// declared property getter: - (BOOL)isITunesU;	// 0x34fd87d9
// declared property getter: - (BOOL)isRental;	// 0x34fd8715
// declared property getter: - (BOOL)isUsableAsRepresentativeItem;	// 0x34fd947d
// declared property getter: - (id)lastPlayedDate;	// 0x34fd8b4d
// declared property getter: - (id)lastSkippedDate;	// 0x34fd8cad
// declared property getter: - (id)lastUsedDate;	// 0x34fd8b85
- (void)markNominalAmountHasBeenPlayed;	// 0x34fd7729
// declared property getter: - (int)mediaType;	// 0x34fd8809
// declared property getter: - (BOOL)mediaTypeCanSeedGenius;	// 0x35073981
- (void)noteWasPlayedToTime:(double)time skipped:(BOOL)skipped;	// 0x34fd77a5
// declared property getter: - (unsigned)playCount;	// 0x34fd8a5d
// declared property getter: - (unsigned)playCountSinceSync;	// 0x34fd8ad5
// declared property getter: - (double)playbackDuration;	// 0x34fd883d
// declared property getter: - (id)podcastTitle;	// 0x34fd891d
- (void)populateLocationPropertiesWithPath:(id)path;	// 0x34fd7d51
- (id)predicateForProperty:(id)property;	// 0x34fd8a1d
// declared property getter: - (unsigned)rating;	// 0x34fd8939
// declared property getter: - (id)releaseDate;	// 0x34fd89b1
// declared property getter: - (BOOL)rememberBookmarkTime;	// 0x34fd8d59
- (id)representativeItem;	// 0x34fd7ac9
// declared property setter: - (void)setBookmarkTime:(double)time;	// 0x34fd8699
// declared property setter: - (void)setHasBeenPlayed:(BOOL)played;	// 0x34fd8d15
// declared property setter: - (void)setLastPlayedDate:(id)date;	// 0x34fd8b69
// declared property setter: - (void)setLastSkippedDate:(id)date;	// 0x34fd8cc9
// declared property setter: - (void)setLastUsedDate:(id)date;	// 0x34fd8ba1
// declared property setter: - (void)setPlayCount:(unsigned)count;	// 0x34fd8a91
// declared property setter: - (void)setPlayCountSinceSync:(unsigned)sync;	// 0x34fd8b09
// declared property setter: - (void)setRating:(unsigned)rating;	// 0x34fd896d
// declared property setter: - (void)setSkipCount:(unsigned)count;	// 0x34fd8bf1
// declared property setter: - (void)setSkipCountSinceSync:(unsigned)sync;	// 0x34fd8c69
// declared property getter: - (unsigned)skipCount;	// 0x34fd8bbd
// declared property getter: - (unsigned)skipCountSinceSync;	// 0x34fd8c35
// declared property getter: - (double)startTime;	// 0x34fd8871
// declared property getter: - (double)stopTime;	// 0x34fd88a5
// declared property getter: - (id)title;	// 0x34fd89cd
- (void)updateLastUsedDateToCurrentDate;	// 0x34fd7999
- (id)valueForProperty:(id)property;	// 0x34fd7581
- (id)valuesForProperties:(id)properties;	// 0x34fd7629
// declared property getter: - (unsigned)year;	// 0x34fd89e9
@end

