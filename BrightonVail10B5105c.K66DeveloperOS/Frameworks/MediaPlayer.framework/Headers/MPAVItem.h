/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library

@class AVAsset, MPMediaItem, MPImageCache, NSURL, MPAlternateTracks, MPQueueFeeder, MPAVController, NSString, NSArray, AVPlayerItem, NSData;
@protocol OS_dispatch_queue;

@interface MPAVItem : NSObject {
	AVPlayerItem *_avPlayerItem;	// 4 = 0x4
	AVAsset *_asset;	// 8 = 0x8
	NSObject<OS_dispatch_queue> *_assetQueue;	// 12 = 0xc
	BOOL _didAttemptToLoadAsset;	// 16 = 0x10
	BOOL _isAssetLoaded;	// 17 = 0x11
	MPQueueFeeder *_feeder;	// 20 = 0x14
	MPAVController *_player;	// 24 = 0x18
	float _soundCheckVolumeNormalization;	// 28 = 0x1c
	NSArray *_chapterTimeMarkers;	// 32 = 0x20
	NSArray *_artworkTimeMarkers;	// 36 = 0x24
	NSArray *_urlTimeMarkers;	// 40 = 0x28
	NSArray *_closedCaptionTimeMarkers;	// 44 = 0x2c
	MPAlternateTracks *_alternateTracks;	// 48 = 0x30
	double _cachedDuration;	// 52 = 0x34
	double _cachedPlayableDuration;	// 60 = 0x3c
	NSArray *_cachedSeekableTimeRanges;	// 68 = 0x44
	double _seekableTimeRangesCacheTime;	// 72 = 0x48
	unsigned _type;	// 80 = 0x50
	float _defaultPlaybackRate;	// 84 = 0x54
	unsigned _indexInQueueFeeder;	// 88 = 0x58
	unsigned _advancedDuringPlayback : 1;	// 92 = 0x5c
	unsigned _handledFinishTime : 1;	// 92 = 0x5c
	unsigned _hasPlayedThisSession : 1;	// 92 = 0x5c
	unsigned _wasCountedAsSkipped : 1;	// 92 = 0x5c
	unsigned _isStreamable : 2;	// 92 = 0x5c
	unsigned _watchingAttributes : 1;	// 92 = 0x5c
	unsigned _lyricsAvailable : 1;	// 92 = 0x5c
	unsigned _timeMarkersNeedLoading : 1;	// 93 = 0x5d
}
@property(readonly, assign, nonatomic) NSString *album;	// G=0x34f91a11; 
@property(readonly, assign, nonatomic) NSString *albumArtist;	// G=0x34f91a19; 
@property(readonly, assign, nonatomic) unsigned albumTrackCount;	// G=0x34f91a21; 
@property(readonly, assign, nonatomic) unsigned albumTrackNumber;	// G=0x34f91a1d; 
@property(readonly, assign, nonatomic) BOOL allowsEQ;	// G=0x34f91c11; 
@property(readonly, assign, nonatomic) MPAlternateTracks *alternateTracks;	// G=0x34f94cf5; @synthesize=_alternateTracks
@property(readonly, assign, nonatomic) NSString *artist;	// G=0x34f91a15; 
@property(readonly, assign, nonatomic) NSData *artworkImageData;	// G=0x34f91a29; 
@property(readonly, assign, nonatomic) NSString *artworkMIMEType;	// G=0x34f91a2d; 
@property(retain, nonatomic) NSArray *artworkTimeMarkers;	// G=0x34f92fbd; S=0x34f94d05; @synthesize=_artworkTimeMarkers
@property(readonly, assign, nonatomic) AVAsset *asset;	// G=0x34f91299; 
@property(readonly, assign, nonatomic) BOOL canSeedGenius;	// G=0x34f91a31; 
@property(retain, nonatomic) NSArray *chapterTimeMarkers;	// G=0x34f92f95; S=0x34f94d15; @synthesize=_chapterTimeMarkers
@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;	// G=0x34f93089; S=0x34f9300d; 
@property(readonly, assign, nonatomic) NSString *composer;	// G=0x34f91a35; 
@property(readonly, assign, nonatomic) unsigned countForQueueFeeder;	// G=0x34f91a59; 
@property(readonly, assign, nonatomic) double currentTimeDisplayOverride;	// G=0x34f91a81; 
@property(readonly, assign, nonatomic) int customAVEQPreset;	// G=0x34f91c0d; 
@property(assign, nonatomic) float defaultPlaybackRate;	// G=0x34f94d45; S=0x34f94d55; @synthesize=_defaultPlaybackRate
@property(readonly, assign, nonatomic) unsigned discCount;	// G=0x34f91a3d; 
@property(readonly, assign, nonatomic) unsigned discNumber;	// G=0x34f91a39; 
@property(readonly, assign, nonatomic) NSString *displayableText;	// G=0x34f91ae1; 
@property(readonly, assign, nonatomic) BOOL displayableTextLoaded;	// G=0x34f91a99; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x34f935a9; 
@property(readonly, assign, nonatomic) double durationFromExternalMetadata;	// G=0x34f935f1; 
@property(readonly, assign, nonatomic) double durationIfAvailable;	// G=0x34f93691; 
@property(readonly, assign, nonatomic) BOOL durationIsValid;	// G=0x34f93609; 
@property(assign, nonatomic) MPQueueFeeder *feeder;	// G=0x34f94d25; S=0x34f94d35; @synthesize=_feeder
@property(assign, nonatomic) XXStruct_pwHToB forwardPlaybackEndTime;	// G=0x34f91d61; S=0x34f91da5; 
@property(readonly, assign, nonatomic) NSString *genre;	// G=0x34f91a55; 
@property(readonly, assign, nonatomic) BOOL hasDataForItemArtwork;	// G=0x34f91b79; 
@property(readonly, assign, nonatomic) BOOL hasDisplayableText;	// G=0x34f91b7d; 
@property(assign, nonatomic) BOOL hasPlayedThisSession;	// G=0x34f91b81; S=0x34f91e49; 
@property(readonly, assign, nonatomic) MPImageCache *imageCache;	// G=0x34f91ef5; 
@property(assign, nonatomic) unsigned indexInQueueFeeder;	// G=0x34f94d65; S=0x34f94d75; @synthesize=_indexInQueueFeeder
@property(assign) BOOL isAssetLoaded;	// G=0x34f94d85; S=0x34f94d9d; @synthesize=_isAssetLoaded
@property(readonly, assign, nonatomic) BOOL isStreamingQuality;	// G=0x35065195; 
@property(readonly, assign, nonatomic) NSString *lyrics;	// G=0x34f91af1; 
@property(readonly, assign, nonatomic) NSString *mainTitle;	// G=0x34f91c31; 
@property(readonly, assign, nonatomic) MPMediaItem *mediaItem;	// G=0x35043af5; 
@property(readonly, assign, nonatomic) CGSize naturalSize;	// G=0x34f91c35; 
@property(readonly, assign, nonatomic) unsigned long long persistentID;	// G=0x34f93469; 
@property(readonly, assign, nonatomic) double playableDuration;	// G=0x34f937d1; 
@property(readonly, assign, nonatomic) double playableDurationIfAvailable;	// G=0x34f937e9; 
@property(assign, nonatomic) double playbackCheckpointCurrentTime;	// G=0x34f91791; S=0x34f917a9; 
@property(assign, nonatomic) MPAVController *player;	// G=0x34f94db5; S=0x34f94dc5; @synthesize=_player
@property(readonly, assign, nonatomic) AVPlayerItem *playerItem;	// G=0x34f91489; 
@property(readonly, assign, nonatomic) NSURL *podcastURL;	// G=0x34f91c8d; 
@property(readonly, assign, nonatomic) CGSize presentationSize;	// G=0x34f91d25; 
@property(assign, nonatomic) float soundCheckVolumeNormalization;	// G=0x34f94dd5; S=0x34f91e81; @synthesize=_soundCheckVolumeNormalization
@property(readonly, assign, nonatomic) int status;	// G=0x34f916fd; 
@property(readonly, assign, nonatomic, getter=isStreamable) BOOL streamable;	// G=0x34f91b95; 
@property(assign, nonatomic) int subtitleTrackID;	// G=0x34f917c9; S=0x34f917cd; 
@property(readonly, assign, nonatomic) BOOL supportsRewindAndFastForward15Seconds;	// G=0x34f91eb9; 
@property(readonly, assign, nonatomic) double timeOfSeekableEnd;	// G=0x34f938e1; 
@property(readonly, assign, nonatomic) double timeOfSeekableStart;	// G=0x34f93801; 
@property(readonly, assign, nonatomic) unsigned type;	// G=0x34f93455; 
@property(retain, nonatomic) NSArray *urlTimeMarkers;	// G=0x34f92fe5; S=0x34f94de5; @synthesize=_urlTimeMarkers
@property(readonly, assign, nonatomic) BOOL useEmbeddedChapterData;	// G=0x34f92005; 
@property(readonly, assign, nonatomic) float userRating;	// G=0x34f93465; 
@property(assign) BOOL userSkippedPlayback;	// G=0x34f91839; S=0x34f91815; converted property
@property(copy, nonatomic) NSString *videoID;	// G=0x34f93555; S=0x34f9357d; 
@property(readonly, assign, nonatomic) BOOL wantsSubtitles;	// G=0x34f93475; 
@property(readonly, assign, nonatomic) BOOL wasDownloadedThisSession;	// G=0x3506524d; 
+ (id)URLFromPath:(id)path;	// 0x34f90bfd
+ (void)applyVolumeNormalizationForQueuedItems:(id)queuedItems;	// 0x34f91a25
+ (unsigned)defaultScaleMode;	// 0x34f90be9
+ (void)setDefaultScaleMode:(unsigned)mode;	// 0x34f90bed
- (id)init;	// 0x34f90cad
- (id)initWithAsset:(id)asset;	// 0x34f90d39
- (id)initWithURL:(id)url;	// 0x34f90cc1
- (id)initWithURL:(id)url options:(id)options;	// 0x34f90cfd
- (void)_applicationDidBecomeActive:(id)_application;	// 0x34f93c49
- (void)_checkAllowsBlockingDurationCall;	// 0x34f947a9
- (void)_closedCaptioningStatusDidChangeNotification:(id)_closedCaptioningStatus;	// 0x34f93c29
- (double)_durationFromExternalMetadataIfAvailable;	// 0x34f93631
- (double)_durationInSeconds;	// 0x34f9184d
- (id)_imageChapterTrackIDsForAsset:(id)asset;	// 0x34f932f1
- (void)_itemAttributeAvailableKey:(id)key;	// 0x34f93a21
- (void)_loadAssetAndPlayerItem;	// 0x34f91185
- (void)_loadAssetProperties;	// 0x34f93e99
- (void)_loadTimeMarkersAsync;	// 0x34f92e75
- (void)_loadTimeMarkersBlocking;	// 0x34f92009
- (double)_playableDurationForLoadedTimeRanges:(id)loadedTimeRanges;	// 0x34f93da9
- (void)_realoadEmbeddedTimeMarkers;	// 0x34f91ebd
- (void)_releaseAllTimeMarkers;	// 0x34f90f31
- (id)_seekableTimeRanges;	// 0x34f93ce9
- (id)_timeMarkerFromMarkers:(id)markers forTime:(double)time;	// 0x34f93099
- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;	// 0x34f93ef5
// declared property getter: - (id)album;	// 0x34f91a11
// declared property getter: - (id)albumArtist;	// 0x34f91a19
// declared property getter: - (unsigned)albumTrackCount;	// 0x34f91a21
// declared property getter: - (unsigned)albumTrackNumber;	// 0x34f91a1d
// declared property getter: - (BOOL)allowsEQ;	// 0x34f91c11
// declared property getter: - (id)alternateTracks;	// 0x34f94cf5
- (unsigned)alternatesCountForTypes:(unsigned)types;	// 0x34f91b55
// declared property getter: - (id)artist;	// 0x34f91a15
// declared property getter: - (id)artworkImageData;	// 0x34f91a29
// declared property getter: - (id)artworkMIMEType;	// 0x34f91a2d
- (id)artworkTimeMarkerForTime:(double)time;	// 0x34f9323d
// declared property getter: - (id)artworkTimeMarkers;	// 0x34f92fbd
// declared property getter: - (id)asset;	// 0x34f91299
- (id)blockForDirectAVControllerNotificationReferencingItem:(id)directAVControllerNotificationReferencingItem;	// 0x34f93f45
// declared property getter: - (BOOL)canSeedGenius;	// 0x34f91a31
- (id)chapterTimeMarkerForTime:(double)time;	// 0x34f93201
// declared property getter: - (id)chapterTimeMarkers;	// 0x34f92f95
- (id)closedCaptionTimeMarkerForTime:(double)time;	// 0x34f932b5
// declared property getter: - (id)closedCaptionTimeMarkers;	// 0x34f93089
// declared property getter: - (id)composer;	// 0x34f91a35
// declared property getter: - (unsigned)countForQueueFeeder;	// 0x34f91a59
// declared property getter: - (double)currentTimeDisplayOverride;	// 0x34f91a81
// declared property getter: - (int)customAVEQPreset;	// 0x34f91c0d
- (void)dealloc;	// 0x34f90fb1
// declared property getter: - (float)defaultPlaybackRate;	// 0x34f94d45
// declared property getter: - (unsigned)discCount;	// 0x34f91a3d
// declared property getter: - (unsigned)discNumber;	// 0x34f91a39
// declared property getter: - (id)displayableText;	// 0x34f91ae1
// declared property getter: - (BOOL)displayableTextLoaded;	// 0x34f91a99
// declared property getter: - (XXStruct_pwHToB)duration;	// 0x34f935a9
// declared property getter: - (double)durationFromExternalMetadata;	// 0x34f935f1
// declared property getter: - (double)durationIfAvailable;	// 0x34f93691
- (double)durationInSeconds;	// 0x34f918a1
// declared property getter: - (BOOL)durationIsValid;	// 0x34f93609
// declared property getter: - (id)feeder;	// 0x34f94d25
- (void)flushNowPlayingCaches;	// 0x34f91155
// declared property getter: - (XXStruct_pwHToB)forwardPlaybackEndTime;	// 0x34f91d61
// declared property getter: - (id)genre;	// 0x34f91a55
- (BOOL)hasAlternatesForTypes:(unsigned)types;	// 0x34f91b31
// declared property getter: - (BOOL)hasDataForItemArtwork;	// 0x34f91b79
// declared property getter: - (BOOL)hasDisplayableText;	// 0x34f91b7d
// declared property getter: - (BOOL)hasPlayedThisSession;	// 0x34f91b81
// declared property getter: - (id)imageCache;	// 0x34f91ef5
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time;	// 0x34f91ef9
- (id)imageCacheRequestWithSize:(CGSize)size time:(double)time usePlaceholderAsFallback:(BOOL)fallback;	// 0x34f91f25
// declared property getter: - (unsigned)indexInQueueFeeder;	// 0x34f94d65
// declared property getter: - (BOOL)isAssetLoaded;	// 0x34f94d85
- (BOOL)isAssetURLValid;	// 0x34f91a51
- (BOOL)isPlaceholderForItem:(id)item;	// 0x34f91a4d
// declared property getter: - (BOOL)isStreamable;	// 0x34f91b95
// declared property getter: - (BOOL)isStreamingQuality;	// 0x35065195
- (BOOL)isSupportedDefaultPlaybackSpeed:(unsigned)speed;	// 0x34f90bf1
- (BOOL)isValidPlayerSubstituteForItem:(id)item;	// 0x34f91a41
- (void)loadAssetAndPlayerItem;	// 0x34f91181
- (id)localeForAssetTrack:(id)assetTrack;	// 0x34f948dd
- (id)localizedPositionInPlaylistString;	// 0x34f93479
// declared property getter: - (id)lyrics;	// 0x34f91af1
// declared property getter: - (id)mainTitle;	// 0x34f91c31
// declared property getter: - (id)mediaItem;	// 0x35043af5
// declared property getter: - (CGSize)naturalSize;	// 0x34f91c35
- (void)notePlaybackFinishedByHittingEnd;	// 0x34f91779
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x34f93c69
- (id)path;	// 0x34f91911
// declared property getter: - (unsigned long long)persistentID;	// 0x34f93469
// declared property getter: - (double)playableDuration;	// 0x34f937d1
// declared property getter: - (double)playableDurationIfAvailable;	// 0x34f937e9
// declared property getter: - (double)playbackCheckpointCurrentTime;	// 0x34f91791
- (float)playbackRateForLevel:(unsigned)level direction:(int)direction paused:(BOOL)paused;	// 0x34f91c91
// declared property getter: - (id)player;	// 0x34f94db5
// declared property getter: - (id)playerItem;	// 0x34f91489
// declared property getter: - (id)podcastURL;	// 0x34f91c8d
// declared property getter: - (CGSize)presentationSize;	// 0x34f91d25
- (BOOL)prioritizeDownloadSession;	// 0x3506f341
- (void)reevaluateType;	// 0x34f9493d
- (void)replacePlayerItemWithPlayerItem:(id)playerItem;	// 0x34f94c01
- (void)resetBookkeeping;	// 0x34f9171d
- (float)scanIntervalForLevel:(unsigned)level paused:(BOOL)paused;	// 0x34f91ded
- (void)setAlternateAudioTrackID:(int)anId;	// 0x34f91771
// declared property setter: - (void)setArtworkTimeMarkers:(id)markers;	// 0x34f94d05
// declared property setter: - (void)setChapterTimeMarkers:(id)markers;	// 0x34f94d15
// declared property setter: - (void)setClosedCaptionTimeMarkers:(id)markers;	// 0x34f9300d
// declared property setter: - (void)setDefaultPlaybackRate:(float)rate;	// 0x34f94d55
// declared property setter: - (void)setFeeder:(id)feeder;	// 0x34f94d35
// declared property setter: - (void)setForwardPlaybackEndTime:(XXStruct_pwHToB)time;	// 0x34f91da5
// declared property setter: - (void)setHasPlayedThisSession:(BOOL)session;	// 0x34f91e49
// declared property setter: - (void)setIndexInQueueFeeder:(unsigned)queueFeeder;	// 0x34f94d75
// declared property setter: - (void)setIsAssetLoaded:(BOOL)loaded;	// 0x34f94d9d
- (void)setOverrideDuration:(double)duration;	// 0x34f91e6d
// declared property setter: - (void)setPlaybackCheckpointCurrentTime:(double)time;	// 0x34f917a9
- (void)setPlaybackFinishedTime:(double)time;	// 0x34f917ad
- (void)setPlaybackStoppedTime:(double)time;	// 0x34f91775
// declared property setter: - (void)setPlayer:(id)player;	// 0x34f94dc5
- (void)setPlayerItem:(id)item;	// 0x34f91665
- (void)setRating:(float)rating;	// 0x34f917c5
// declared property setter: - (void)setSoundCheckVolumeNormalization:(float)normalization;	// 0x34f91e81
// declared property setter: - (void)setSubtitleTrackID:(int)anId;	// 0x34f917cd
// declared property setter: - (void)setUrlTimeMarkers:(id)markers;	// 0x34f94de5
- (void)setUserAdvancedDuringPlayback:(BOOL)playback;	// 0x34f917d1
- (void)setUserEnabledSubtitles:(BOOL)subtitles;	// 0x34f917e9
// converted property setter: - (void)setUserSkippedPlayback:(BOOL)playback;	// 0x34f91815
// declared property setter: - (void)setVideoID:(id)anId;	// 0x34f9357d
- (void)setupEQPresetWithDefaultPreset:(int)defaultPreset;	// 0x34f940f9
- (void)setupPlaybackInfo;	// 0x34f94161
// declared property getter: - (float)soundCheckVolumeNormalization;	// 0x34f94dd5
// declared property getter: - (int)status;	// 0x34f916fd
// declared property getter: - (int)subtitleTrackID;	// 0x34f917c9
// declared property getter: - (BOOL)supportsRewindAndFastForward15Seconds;	// 0x34f91eb9
// declared property getter: - (double)timeOfSeekableEnd;	// 0x34f938e1
// declared property getter: - (double)timeOfSeekableStart;	// 0x34f93801
- (id)titlesForTime:(double)time;	// 0x34f92001
// declared property getter: - (unsigned)type;	// 0x34f93455
- (id)url;	// 0x34f9199d
- (id)urlTimeMarkerForTime:(double)time;	// 0x34f93279
// declared property getter: - (id)urlTimeMarkers;	// 0x34f92fe5
// declared property getter: - (BOOL)useEmbeddedChapterData;	// 0x34f92005
// declared property getter: - (float)userRating;	// 0x34f93465
// converted property getter: - (BOOL)userSkippedPlayback;	// 0x34f91839
// declared property getter: - (id)videoID;	// 0x34f93555
// declared property getter: - (BOOL)wantsSubtitles;	// 0x34f93475
// declared property getter: - (BOOL)wasDownloadedThisSession;	// 0x3506524d
@end

