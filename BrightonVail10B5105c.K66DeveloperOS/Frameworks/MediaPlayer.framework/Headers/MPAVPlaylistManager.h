/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <NSObject.h> // Unknown library
#import "MPAVQueuePlayerFeederSource.h"

@class MPAVItem, NSString, MPQueuePlayer, MPAVQueuePlayerFeeder;
@protocol MPAVPlaylistFeeder;

@interface MPAVPlaylistManager : NSObject <MPAVQueuePlayerFeederSource> {
	NSString *_audioSessionModeOverride;	// 4 = 0x4
	MPAVItem *_currentItem;	// 8 = 0x8
	MPAVQueuePlayerFeeder *_feeder;	// 12 = 0xc
	BOOL _goToTargetIndex;	// 16 = 0x10
	int _isChangingPlaylistFeeder;	// 20 = 0x14
	int _lastSelectionDirection;	// 24 = 0x18
	MPQueuePlayer *_player;	// 28 = 0x1c
	id<MPAVPlaylistFeeder> _playlistFeeder;	// 32 = 0x20
	int _repeatMode;	// 36 = 0x24
	int _retainCount;	// 40 = 0x28
	int _targetIndex;	// 44 = 0x2c
	BOOL _updatedAudioSessionMode;	// 48 = 0x30
}
@property(retain, nonatomic) NSString *audioSessionModeOverride;	// G=0x35025865; S=0x35025875; @synthesize=_audioSessionModeOverride
@property(readonly, assign, nonatomic) BOOL canChangePlaylistFeeder;	// G=0x35024f2d; 
@property(readonly, assign) int currentIndex;	// G=0x35024e51; 
@property(readonly, assign) MPAVItem *currentItem;	// G=0x35025885; @synthesize=_currentItem
@property(assign, nonatomic) BOOL forceSynchronousQueueFilling;	// G=0x35024985; S=0x35024a0d; 
@property(readonly, assign, nonatomic) BOOL isChangingPlaylistFeeder;	// G=0x35024f15; 
@property(readonly, assign) int lastSelectionDirection;	// G=0x350258bd; @synthesize=_lastSelectionDirection
@property(assign, nonatomic) BOOL managesSystemDownloads;	// G=0x350249a9; S=0x35024a2d; 
@property(assign, nonatomic) unsigned maxQueueDepth;	// G=0x350249cd; S=0x35024a4d; 
@property(assign, nonatomic) unsigned minQueueDepth;	// G=0x350249ed; S=0x35024a6d; 
@property(readonly, assign) MPQueuePlayer *player;	// G=0x35025899; @synthesize=_player
@property(retain, nonatomic) id<MPAVPlaylistFeeder> playlistFeeder;	// G=0x350258ad; S=0x35024f45; @synthesize=_playlistFeeder
@property(assign) int repeatMode;	// G=0x35024e85; S=0x35024e95; 
- (id)init;	// 0x35024169
- (void)_assetCancelNotification:(id)notification;	// 0x35024651
- (id)_audioSessionModeForMediaItem:(id)mediaItem;	// 0x35025659
- (id)_feeder;	// 0x35025649
- (id)_feederItemForIndex:(int)index;	// 0x35024aed
- (BOOL)_isDeallocating;	// 0x3502413d
- (id)_itemToFollowItemIndex:(int)followItemIndex skipUnavailableContent:(BOOL)content;	// 0x35025441
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)_mediaLibraryDisplayValues;	// 0x35024839
- (void)_networkTypeDidChangeNotification:(id)_networkType;	// 0x350248b5
- (int)_nextItemIndex:(int)index repeatMode:(int)mode;	// 0x35025351
- (int)_prepareToQueuePlaybackIndex:(int)queuePlaybackIndex selectionDirection:(int)direction;	// 0x35024c51
- (void)_reloadQueuedItemsIfPathBecameAvailable;	// 0x350250cd
- (BOOL)_tryRetain;	// 0x350240ed
- (void)_updateAudioSessionMode;	// 0x350256ad
// declared property getter: - (id)audioSessionModeOverride;	// 0x35025865
// declared property getter: - (BOOL)canChangePlaylistFeeder;	// 0x35024f2d
- (void)contentInvalidated;	// 0x350252f1
- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned)index;	// 0x350252a9
- (void)contentInvalidatedWithNewIndex:(unsigned)newIndex;	// 0x35025311
- (void)contentsDidChangeByRemovingRange:(NSRange)contents;	// 0x350251e1
// declared property getter: - (int)currentIndex;	// 0x35024e51
// declared property getter: - (id)currentItem;	// 0x35025885
- (void)dealloc;	// 0x35024359
// declared property getter: - (BOOL)forceSynchronousQueueFilling;	// 0x35024985
// declared property getter: - (BOOL)isChangingPlaylistFeeder;	// 0x35024f15
// declared property getter: - (int)lastSelectionDirection;	// 0x350258bd
// declared property getter: - (BOOL)managesSystemDownloads;	// 0x350249a9
// declared property getter: - (unsigned)maxQueueDepth;	// 0x350249cd
// declared property getter: - (unsigned)minQueueDepth;	// 0x350249ed
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x350244d9
// declared property getter: - (id)player;	// 0x35025899
// declared property getter: - (id)playlistFeeder;	// 0x350258ad
- (id)queuePlayerFeeder:(id)feeder itemToFollowItem:(id)followItem;	// 0x35025525
- (BOOL)queuePlayerFeeder:(id)feeder willInsertItem:(id)item;	// 0x35025561
- (void)queuePlayerFeeder:(id)feeder willRemoveItem:(id)item;	// 0x3502555d
- (void)queuePlayerFeederDidUpdateQueue:(id)queuePlayerFeeder queuedItems:(id)items dequeuedItems:(id)items3;	// 0x35025565
- (void)queuePlayerFeederFailedToQueueAnyItems:(id)queueAnyItems;	// 0x350255dd
- (oneway void)release;	// 0x35024065
// declared property getter: - (int)repeatMode;	// 0x35024e85
- (id)retain;	// 0x3502402d
- (unsigned)retainCount;	// 0x350240d9
// declared property setter: - (void)setAudioSessionModeOverride:(id)override;	// 0x35025875
- (void)setCurrentIndex:(int)index selectionDirection:(int)direction;	// 0x35024d75
// declared property setter: - (void)setForceSynchronousQueueFilling:(BOOL)filling;	// 0x35024a0d
// declared property setter: - (void)setManagesSystemDownloads:(BOOL)downloads;	// 0x35024a2d
// declared property setter: - (void)setMaxQueueDepth:(unsigned)depth;	// 0x35024a4d
// declared property setter: - (void)setMinQueueDepth:(unsigned)depth;	// 0x35024a6d
// declared property setter: - (void)setPlaylistFeeder:(id)feeder;	// 0x35024f45
- (BOOL)setPlaylistFeeder:(id)feeder startIndex:(int)index;	// 0x35025035
// declared property setter: - (void)setRepeatMode:(int)mode;	// 0x35024e95
- (void)updateForSoundCheckDefaultsChange;	// 0x35024a8d
@end

