/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import <NSObject.h> // Unknown library
#import "MPMediaPlayback.h"

@class MPMusicPlayerControllerInternal;

@protocol MPMusicPlayerController
@optional
@property(retain) id allowsRemoteUIAccess;	// converted property
@property(retain) id currentChapterIndex;	// converted property
@property(retain) id currentPlaybackRate;	// converted property
@property(retain) id currentPlaybackTime;	// converted property
@property(retain) id nowPlayingItem;	// converted property
@property(retain) id playbackSpeed;	// converted property
@property(retain) id repeatMode;	// converted property
@property(retain) id shuffleMode;	// converted property
// converted property getter: - (id)allowsRemoteUIAccess;
- (void)beginSeekingBackward;
- (void)beginSeekingForward;
// converted property getter: - (id)currentChapterIndex;
// converted property getter: - (id)currentPlaybackRate;
// converted property getter: - (id)currentPlaybackTime;
- (void)endSeeking;
- (id)indexOfNowPlayingItem;
- (id)isGeniusAvailable;
- (id)isGeniusAvailableForSeedItems:(id)seedItems;
- (id)isNowPlayingItemFromGeniusMix;
// converted property getter: - (id)nowPlayingItem;
- (id)nowPlayingItemAtIndex:(id)index;
- (id)numberOfItems;
- (void)pause;
- (void)pauseWithFadeoutDuration:(id)fadeoutDuration;
- (void)play;
- (void)playItem:(id)item;
// converted property getter: - (id)playbackSpeed;
- (id)playbackState;
- (void)prepareQueueForPlayback;
- (void)prepareToPlay;
- (id)queueAsQuery;
- (void)registerForServerDiedNotifications;
// converted property getter: - (id)repeatMode;
- (id)serverIsAlive;
// converted property setter: - (void)setAllowsRemoteUIAccess:(id)access;
// converted property setter: - (void)setCurrentChapterIndex:(id)index;
// converted property setter: - (void)setCurrentPlaybackRate:(id)rate;
// converted property setter: - (void)setCurrentPlaybackTime:(id)time;
// converted property setter: - (void)setNowPlayingItem:(id)item;
// converted property setter: - (void)setPlaybackSpeed:(id)speed;
- (void)setQueueWithGeniusMixPlaylist:(id)geniusMixPlaylist;
- (void)setQueueWithItemCollection:(id)itemCollection;
- (void)setQueueWithQuery:(id)query;
- (void)setQueueWithQuery:(id)query firstItem:(id)item;
- (id)setQueueWithSeedItems:(id)seedItems;
// converted property setter: - (void)setRepeatMode:(id)mode;
// converted property setter: - (void)setShuffleMode:(id)mode;
- (void)setUseApplicationSpecificQueue:(id)queue;
- (void)shuffle;
// converted property getter: - (id)shuffleMode;
- (id)skipInDirection:(id)direction;
- (void)skipToBeginning;
- (void)skipToBeginningOrPreviousItem;
- (void)skipToNextChapter;
- (void)skipToNextItem;
- (void)skipToPreviousChapter;
- (void)skipToPreviousItem;
- (void)stop;
- (id)unshuffledIndexOfNowPlayingItem;
@end

@interface MPMusicPlayerController : NSObject <MPMediaPlayback> {
	MPMusicPlayerControllerInternal *_internal;	// 4 = 0x4
}
@property(assign) BOOL allowsRemoteUIAccess;	// G=0x34fd5d41; S=0x34fd5d75; converted property
@property(assign) unsigned currentChapterIndex;	// G=0x34fd5f59; S=0x34fd5f91; converted property
@property(assign, nonatomic) float currentPlaybackRate;	// G=0x34fd5605; S=0x34fd56f5; 
@property(assign, nonatomic) double currentPlaybackTime;	// G=0x34fd563d; S=0x34fd573d; 
@property(readonly, assign, nonatomic) BOOL isPreparedToPlay;	// G=0x34fd5675; 
@property(assign) int playbackSpeed;	// G=0x34fd5dfd; S=0x34fd5e35; converted property
@property(assign) int repeatMode;	// G=0x34fd5925; S=0x34fd595d; converted property
@property(assign) int shuffleMode;	// G=0x34fd59a5; S=0x34fd59dd; converted property
@property(assign) float volume;	// G=0x34fd5a25; S=0x34fd5a81; converted property
+ (id)applicationMusicPlayer;	// 0x34fd50e9
+ (id)iPodMusicPlayer;	// 0x34fd5145
+ (void)initialize;	// 0x34fd61dd
+ (id)runLoopForNotifications;	// 0x34fd6279
+ (void)setRunLoopForNotifications:(id)notifications;	// 0x34fd6241
- (id)init;	// 0x34fd51a1
- (void)_clientCheckInUsingExistencePort:(BOOL)usingExistencePort;	// 0x34fd64b9
- (void)_isQueuePreparedDidChange:(BOOL)_isQueuePrepared;	// 0x34fd6a79
- (void)_itemPlaybackDidEnd:(unsigned long long)_itemPlayback;	// 0x34fd6b09
- (void)_musicPlayerDidLaunch;	// 0x34fd63b5
- (BOOL)_musicPlayerExistencePortIsValid;	// 0x34fd660d
- (void)_nowPlayingItemDidChange:(unsigned long long)_nowPlayingItem;	// 0x34fd6855
- (void)_playbackStateDidChange:(int)_playbackState;	// 0x34fd66d9
- (void)_registerForLaunchNotifications;	// 0x34fd63f1
- (void)_repeatModeDidChange:(int)_repeatMode;	// 0x34fd69f1
- (void)_runMigServerOnPort:(unsigned)port;	// 0x34fd6bfd
- (void)_serverDied:(id)died;	// 0x34fd634d
- (void)_setUseApplicationSpecificQueue:(BOOL)queue;	// 0x34fd62bd
- (void)_shuffleModeDidChange:(int)_shuffleMode;	// 0x34fd6969
- (void)_stopMigServer;	// 0x34fd6c99
- (void)_systemVolumeDidChange:(id)_systemVolume;	// 0x34fd54a9
- (void)_unregisterForLaunchNotifications;	// 0x34fd6499
// converted property getter: - (BOOL)allowsRemoteUIAccess;	// 0x34fd5d41
- (void)beginGeneratingPlaybackNotifications;	// 0x34fd5b99
- (void)beginSeekingBackward;	// 0x34fd55c5
- (void)beginSeekingForward;	// 0x34fd55a5
// converted property getter: - (unsigned)currentChapterIndex;	// 0x34fd5f59
// declared property getter: - (float)currentPlaybackRate;	// 0x34fd5605
// declared property getter: - (double)currentPlaybackTime;	// 0x34fd563d
- (void)dealloc;	// 0x34fd5355
- (void)endGeneratingPlaybackNotifications;	// 0x34fd5bbd
- (void)endSeeking;	// 0x34fd55e5
- (void)forwardInvocation:(id)invocation;	// 0x34fd5561
- (unsigned)indexOfNowPlayingItem;	// 0x34fd5e7d
- (BOOL)isGeniusAvailable;	// 0x34fd5be5
- (BOOL)isGeniusAvailableForSeedItems:(id)seedItems;	// 0x34fd5c19
- (BOOL)isNowPlayingItemFromGeniusMix;	// 0x34fd5f25
// declared property getter: - (BOOL)isPreparedToPlay;	// 0x34fd5675
- (id)methodSignatureForSelector:(SEL)selector;	// 0x34fd5585
- (id)nowPlayingItem;	// 0x34fd57a5
- (id)nowPlayingItemAtIndex:(unsigned)index;	// 0x34fd5c81
- (unsigned)numberOfItems;	// 0x34fd5eed
- (void)pause;	// 0x34fd56d5
- (void)pauseWithFadeoutDuration:(double)fadeoutDuration;	// 0x34fd5cc9
- (void)play;	// 0x34fd56b5
// converted property getter: - (int)playbackSpeed;	// 0x34fd5dfd
- (int)playbackState;	// 0x34fd5891
- (void)prepareToPlay;	// 0x34fd5695
// converted property getter: - (int)repeatMode;	// 0x34fd5925
- (BOOL)serverIsAlive;	// 0x34fd6289
// converted property setter: - (void)setAllowsRemoteUIAccess:(BOOL)access;	// 0x34fd5d75
// converted property setter: - (void)setCurrentChapterIndex:(unsigned)index;	// 0x34fd5f91
// declared property setter: - (void)setCurrentPlaybackRate:(float)rate;	// 0x34fd56f5
// declared property setter: - (void)setCurrentPlaybackTime:(double)time;	// 0x34fd573d
// converted property setter: - (void)setPlaybackSpeed:(int)speed;	// 0x34fd5e35
- (void)setQueueWithGeniusMixPlaylist:(id)geniusMixPlaylist;	// 0x34fd60b5
- (void)setQueueWithItemCollection:(id)itemCollection;	// 0x34fd57f1
- (void)setQueueWithQuery:(id)query;	// 0x34fd57dd
- (void)setQueueWithQuery:(id)query firstItem:(id)item;	// 0x34fd5fd9
- (BOOL)setQueueWithSeedItems:(id)seedItems;	// 0x34fd5c4d
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x34fd595d
// converted property setter: - (void)setShuffleMode:(int)mode;	// 0x34fd59dd
- (void)setUseCachedPlaybackState:(BOOL)state;	// 0x34fd5d11
// converted property setter: - (void)setVolume:(float)volume;	// 0x34fd5a81
// converted property getter: - (int)shuffleMode;	// 0x34fd59a5
- (BOOL)skipInDirection:(int)direction error:(id *)error;	// 0x34fd60d5
- (void)stop;	// 0x34fd5785
- (unsigned)unshuffledIndexOfNowPlayingItem;	// 0x34fd5eb5
// converted property getter: - (float)volume;	// 0x34fd5a25
@end

