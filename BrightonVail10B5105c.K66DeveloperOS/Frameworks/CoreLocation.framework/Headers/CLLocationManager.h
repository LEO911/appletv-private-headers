/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreLocation.framework/CoreLocation
 */

#import "CoreLocation-Structs.h"
#import <NSObject.h> // Unknown library

@class NSSet, CLHeading, NSString, CLLocation;
@protocol CLLocationManagerDelegate;

@interface CLLocationManager : NSObject {
	id _internal;	// 4 = 0x4
}
@property(assign, nonatomic) int activityType;	// G=0x308cbbc1; S=0x308cbabd; 
@property(readonly, assign, nonatomic) double bestAccuracy;	// G=0x308cb899; 
@property(assign, nonatomic) id<CLLocationManagerDelegate> delegate;	// G=0x308cb0f9; S=0x308cb0d9; 
@property(assign, nonatomic) double desiredAccuracy;	// G=0x308cb311; S=0x308cb229; 
@property(assign, nonatomic) double distanceFilter;	// G=0x308cb201; S=0x308cb119; 
@property(readonly, assign, nonatomic) double expectedGpsUpdateInterval;	// G=0x308cb7cd; 
@property(readonly, assign, nonatomic) CLHeading *heading;	// G=0x308cc549; 
@property(readonly, assign, nonatomic) BOOL headingAvailable;	// G=0x308cc2cd; 
@property(assign, nonatomic) double headingFilter;	// G=0x308cc419; S=0x308cc2f9; 
@property(assign, nonatomic) int headingOrientation;	// G=0x308cc529; S=0x308cc441; 
@property(readonly, assign, nonatomic) CLClientRef internalClient;	// G=0x308cb8f1; 
@property(readonly, assign, nonatomic) CLLocation *location;	// G=0x308cb515; 
@property(readonly, assign, nonatomic) BOOL locationServicesApproved;	// G=0x308cb7a1; 
@property(readonly, assign, nonatomic) BOOL locationServicesAvailable;	// G=0x308cb751; 
@property(readonly, assign, nonatomic) BOOL locationServicesEnabled;	// G=0x308cb779; 
@property(assign, nonatomic, getter=isLocationServicesPreferencesDialogEnabled) BOOL locationServicesPreferencesDialogEnabled;	// G=0x308d135d; S=0x308d137d; 
@property(readonly, assign, nonatomic) double maximumRegionMonitoringDistance;	// G=0x308ccf25; 
@property(readonly, assign, nonatomic) NSSet *monitoredRegions;	// G=0x308cd001; 
@property(assign, nonatomic) BOOL pausesLocationUpdatesAutomatically;	// G=0x308cb4d9; S=0x308cb339; 
@property(assign, nonatomic, getter=isPersistentMonitoringEnabled) BOOL persistentMonitoringEnabled;	// G=0x308d12fd; S=0x308d131d; 
@property(assign, nonatomic) BOOL privateMode;	// G=0x308cb91d; S=0x308cb911; 
@property(copy, nonatomic) NSString *purpose;	// G=0x308cb9f5; S=0x308cb92d; 
@property(assign, nonatomic) BOOL supportInfo;	// G=0x308cb895; S=0x308cb7ed; 
+ (int)_authorizationStatus;	// 0x308d1275
+ (int)_authorizationStatusForBundleIdentifier:(id)bundleIdentifier bundle:(id)bundle;	// 0x308d1215
+ (unsigned)activeLocationServiceTypesForLocationDictionary:(id)locationDictionary;	// 0x309021ed
+ (int)authorizationStatus;	// 0x308d1289
+ (int)authorizationStatusForBundle:(id)bundle;	// 0x308d1261
+ (int)authorizationStatusForBundleIdentifier:(id)bundleIdentifier;	// 0x308d124d
+ (id)dateLocationLastUsedForLocationDictionary:(id)locationDictionary;	// 0x30902221
+ (BOOL)deferredLocationUpdatesAvailable;	// 0x308cc2ad
+ (BOOL)dumpLogsWithMessage:(id)message;	// 0x308d13dd
+ (unsigned)entityClassesForLocationDictionary:(id)locationDictionary;	// 0x309021ad
+ (BOOL)headingAvailable;	// 0x308cb099
+ (BOOL)isEntityAuthorizedForLocationDictionary:(id)locationDictionary;	// 0x30902229
+ (BOOL)isLocationActiveForLocationDictionary:(id)locationDictionary;	// 0x309021d1
+ (BOOL)isStatusBarIconEnabledForLocationEntityClass:(unsigned)locationEntityClass;	// 0x30902105
+ (BOOL)locationServicesEnabled;	// 0x308cb065
+ (BOOL)locationServicesEnabled:(BOOL)enabled;	// 0x308cb075
+ (BOOL)mapCorrectionAvailable;	// 0x308cb509
+ (unsigned)primaryEntityClassForLocationDictionary:(id)locationDictionary;	// 0x3090217d
+ (BOOL)regionMonitoringAvailable;	// 0x308cb0b9
+ (BOOL)regionMonitoringEnabled;	// 0x308cb0c9
+ (void)setAuthorizationStatus:(BOOL)status forBundle:(id)bundle;	// 0x308d12a9
+ (void)setAuthorizationStatus:(BOOL)status forBundleIdentifier:(id)bundleIdentifier;	// 0x308d1299
+ (void)setDefaultEffectiveBundle:(id)bundle;	// 0x308d12dd
+ (void)setDefaultEffectiveBundleIdentifier:(id)identifier;	// 0x308d12d5
+ (void)setEntityAuthorized:(BOOL)authorized forLocationDictionary:(id)locationDictionary;	// 0x30902235
+ (void)setLocationServicesEnabled:(BOOL)enabled;	// 0x308cb08d
+ (void)setStatusBarIconEnabled:(BOOL)enabled forLocationEntityClass:(unsigned)locationEntityClass;	// 0x30902099
+ (id)sharedManager;	// 0x308cb01d
+ (BOOL)shutdownDaemon;	// 0x308d13ed
+ (BOOL)significantLocationChangeMonitoringAvailable;	// 0x308cb0a9
- (id)init;	// 0x308caf65
- (id)initWithEffectiveBundle:(id)effectiveBundle;	// 0x308caf8d
- (id)initWithEffectiveBundleIdentifier:(id)effectiveBundleIdentifier;	// 0x308caf79
- (id)initWithEffectiveBundleIdentifier:(id)effectiveBundleIdentifier bundle:(id)bundle;	// 0x308cae55
// declared property getter: - (int)activityType;	// 0x308cbbc1
- (void)allowDeferredLocationUpdatesUntilTraveled:(double)traveled timeout:(double)timeout;	// 0x308cbfa9
- (id)appsUsingLocation;	// 0x308cd4a5
- (id)appsUsingLocationWithDetails;	// 0x308cd4a9
// declared property getter: - (double)bestAccuracy;	// 0x308cb899
- (void)dealloc;	// 0x308cafa1
// declared property getter: - (id)delegate;	// 0x308cb0f9
// declared property getter: - (double)desiredAccuracy;	// 0x308cb311
- (void)disallowDeferredLocationUpdates;	// 0x308cc1e9
- (void)dismissHeadingCalibrationDisplay;	// 0x308cc8d9
// declared property getter: - (double)distanceFilter;	// 0x308cb201
// declared property getter: - (double)expectedGpsUpdateInterval;	// 0x308cb7cd
// declared property getter: - (id)heading;	// 0x308cc549
// declared property getter: - (BOOL)headingAvailable;	// 0x308cc2cd
// declared property getter: - (double)headingFilter;	// 0x308cc419
// declared property getter: - (int)headingOrientation;	// 0x308cc529
- (void)historicLocationsFromDate:(id)date forInterval:(double)interval;	// 0x308cc2b9
// declared property getter: - (CLClientRef)internalClient;	// 0x308cb8f1
// declared property getter: - (BOOL)isLocationServicesPreferencesDialogEnabled;	// 0x308d135d
// declared property getter: - (BOOL)isPersistentMonitoringEnabled;	// 0x308d12fd
// declared property getter: - (id)location;	// 0x308cb515
// declared property getter: - (BOOL)locationServicesApproved;	// 0x308cb7a1
// declared property getter: - (BOOL)locationServicesAvailable;	// 0x308cb751
// declared property getter: - (BOOL)locationServicesEnabled;	// 0x308cb779
// declared property getter: - (double)maximumRegionMonitoringDistance;	// 0x308ccf25
// declared property getter: - (id)monitoredRegions;	// 0x308cd001
- (void)onClientEvent:(int)event supportInfo:(id)info;	// 0x308cd501
- (void)onClientEventAuthStatus:(id)status;	// 0x308cd5ed
- (void)onClientEventAutopauseStatus:(id)status;	// 0x308d0ce1
- (void)onClientEventBatch:(id)batch;	// 0x308d0eb1
- (void)onClientEventError:(id)error;	// 0x308ce67d
- (void)onClientEventHeading:(id)heading;	// 0x308ce1dd
- (void)onClientEventHeadingCalibration:(id)calibration;	// 0x308ce485
- (void)onClientEventHistoricLocation:(id)location;	// 0x308ce679
- (void)onClientEventInterrupted:(id)interrupted;	// 0x308d10c1
- (void)onClientEventLocation:(id)location;	// 0x308cd7a9
- (void)onClientEventLocationUnavailable:(id)unavailable;	// 0x308ce13d
- (void)onClientEventRegion:(id)region;	// 0x308ce7c9
- (void)onClientEventRegionError:(id)error;	// 0x308cf03d
- (void)onClientEventRegionResponseDelayed:(id)delayed;	// 0x308cf729
- (void)onClientEventRegionSetupCompleted:(id)completed;	// 0x308d0391
- (void)onDidBecomeActive:(id)on;	// 0x308d0c25
- (void)pauseLocationUpdates:(BOOL)updates;	// 0x308d0ae5
// declared property getter: - (BOOL)pausesLocationUpdatesAutomatically;	// 0x308cb4d9
// declared property getter: - (BOOL)privateMode;	// 0x308cb91d
// declared property getter: - (id)purpose;	// 0x308cb9f5
- (void)registerAsLocationClient;	// 0x308d13bd
- (void)resetApps;	// 0x308cd401
- (void)resumeLocationUpdates;	// 0x308d0a11
// declared property setter: - (void)setActivityType:(int)type;	// 0x308cbabd
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x308cb0d9
// declared property setter: - (void)setDesiredAccuracy:(double)accuracy;	// 0x308cb229
// declared property setter: - (void)setDistanceFilter:(double)filter;	// 0x308cb119
// declared property setter: - (void)setHeadingFilter:(double)filter;	// 0x308cc2f9
// declared property setter: - (void)setHeadingOrientation:(int)orientation;	// 0x308cc441
// declared property setter: - (void)setLocationServicesPreferencesDialogEnabled:(BOOL)enabled;	// 0x308d137d
// declared property setter: - (void)setPausesLocationUpdatesAutomatically:(BOOL)automatically;	// 0x308cb339
// declared property setter: - (void)setPersistentMonitoringEnabled:(BOOL)enabled;	// 0x308d131d
// declared property setter: - (void)setPrivateMode:(BOOL)mode;	// 0x308cb911
// declared property setter: - (void)setPurpose:(id)purpose;	// 0x308cb92d
// declared property setter: - (void)setSupportInfo:(BOOL)info;	// 0x308cb7ed
- (void)startAppStatusUpdates;	// 0x308cc9a1
- (void)startMonitoringForRegion:(id)region;	// 0x308ccb49
- (void)startMonitoringForRegion:(id)region desiredAccuracy:(double)accuracy;	// 0x308ccb39
- (void)startMonitoringSignificantLocationChanges;	// 0x308cc9b1
- (void)startTechStatusUpdates;	// 0x308cc9a9
- (void)startUpdatingHeading;	// 0x308cc705
- (void)startUpdatingLocation;	// 0x308cbc25
- (void)startUpdatingLocationWithPrompt;	// 0x308cbbe5
- (void)stopAppStatusUpdates;	// 0x308cc9a5
- (void)stopMonitoringForRegion:(id)region;	// 0x308cce3d
- (void)stopMonitoringSignificantLocationChanges;	// 0x308cca75
- (void)stopTechStatusUpdates;	// 0x308cc9ad
- (void)stopUpdatingHeading;	// 0x308cc805
- (void)stopUpdatingLocation;	// 0x308cbec1
// declared property getter: - (BOOL)supportInfo;	// 0x308cb895
- (id)technologiesInUse;	// 0x308cd4c5
@end

