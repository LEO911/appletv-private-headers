/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AddressBook.framework/AddressBook
 */

#import "AddressBook-Structs.h"
#import "ABPredicate.h"

@class NSString, NSArray;

@interface ABNamePredicate : ABPredicate {
	void *_addressBook;	// 8 = 0x8
	NSString *_name;	// 12 = 0xc
	BOOL _matchWholeWords;	// 16 = 0x10
	BOOL _matchPersonOrCompanyNamesExclusively;	// 17 = 0x11
	BOOL _matchPreferredName;	// 18 = 0x12
	void *_tokenizations;	// 20 = 0x14
	CFArrayRef _tokenizationSortKeys;	// 24 = 0x18
	NSArray *_groups;	// 28 = 0x1c
	NSArray *_sources;	// 32 = 0x20
}
@property(copy, nonatomic) NSString *accountIdentifier;	// G=0x3374c5b9; S=0x3374c3e9; 
@property(assign, nonatomic) void *addressBook;	// G=0x3374cde1; S=0x3374c2b5; @synthesize=_addressBook
@property(assign, nonatomic) void *group;	// G=0x3374c53d; S=0x3374c341; 
@property(retain, nonatomic) NSArray *groups;	// G=0x3374ce51; S=0x3374ce61; @synthesize=_groups
@property(assign, nonatomic) BOOL matchPersonOrCompanyNamesExclusively;	// G=0x3374ce11; S=0x3374ce21; @synthesize=_matchPersonOrCompanyNamesExclusively
@property(assign, nonatomic) BOOL matchPreferredName;	// G=0x3374ce31; S=0x3374ce41; @synthesize=_matchPreferredName
@property(assign, nonatomic) BOOL matchWholeWords;	// G=0x3374cdf1; S=0x3374ce01; @synthesize=_matchWholeWords
@property(copy, nonatomic) NSString *name;	// G=0x3374cdcd; S=0x3374c2e9; @synthesize=_name
@property(assign, nonatomic) void *source;	// G=0x3374c4c1; S=0x3374c395; 
@property(retain, nonatomic) NSArray *sources;	// G=0x3374ce71; S=0x3374ce81; @synthesize=_sources
@property(readonly, assign) void *tokenizations;	// G=0x3374c635; converted property
- (id)init;	// 0x3374c1ad
- (id)_personNameKeys;	// 0x3374c6c9
- (void)ab_bindStatement:(CPSqliteStatement *)statement withBindingOffset:(int *)bindingOffset predicateIdentifier:(int)identifier;	// 0x3374ca85
// declared property getter: - (id)accountIdentifier;	// 0x3374c5b9
// declared property getter: - (void *)addressBook;	// 0x3374cde1
- (void)dealloc;	// 0x3374c201
// declared property getter: - (void *)group;	// 0x3374c53d
// declared property getter: - (id)groups;	// 0x3374ce51
- (BOOL)isValid;	// 0x3374c69d
// declared property getter: - (BOOL)matchPersonOrCompanyNamesExclusively;	// 0x3374ce11
// declared property getter: - (BOOL)matchPreferredName;	// 0x3374ce31
// declared property getter: - (BOOL)matchWholeWords;	// 0x3374cdf1
// declared property getter: - (id)name;	// 0x3374cdcd
- (id)predicateFormat;	// 0x3374ccf9
- (id)queryJoinsInCompound:(BOOL)compound;	// 0x3374c6c5
- (id)queryWhereString;	// 0x3374c7d9
// declared property setter: - (void)setAccountIdentifier:(id)identifier;	// 0x3374c3e9
// declared property setter: - (void)setAddressBook:(void *)book;	// 0x3374c2b5
// declared property setter: - (void)setGroup:(void *)group;	// 0x3374c341
// declared property setter: - (void)setGroups:(id)groups;	// 0x3374ce61
// declared property setter: - (void)setMatchPersonOrCompanyNamesExclusively:(BOOL)exclusively;	// 0x3374ce21
// declared property setter: - (void)setMatchPreferredName:(BOOL)name;	// 0x3374ce41
// declared property setter: - (void)setMatchWholeWords:(BOOL)words;	// 0x3374ce01
// declared property setter: - (void)setName:(id)name;	// 0x3374c2e9
// declared property setter: - (void)setSource:(void *)source;	// 0x3374c395
// declared property setter: - (void)setSources:(id)sources;	// 0x3374ce81
// declared property getter: - (void *)source;	// 0x3374c4c1
// declared property getter: - (id)sources;	// 0x3374ce71
// converted property getter: - (void *)tokenizations;	// 0x3374c635
@end

