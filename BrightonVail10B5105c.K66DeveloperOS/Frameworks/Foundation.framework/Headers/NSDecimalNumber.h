/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSNumber.h"
#import "Foundation-Structs.h"


@interface NSDecimalNumber : NSNumber {
	unsigned _exponent : 8;	// 4 = 0x4
	unsigned _length : 4;	// 5 = 0x5
	unsigned _isNegative : 1;	// 5 = 0x5
	unsigned _isCompact : 1;	// 5 = 0x5
	unsigned _reserved : 1;	// 5 = 0x5
	unsigned _hasExternalRefCount : 1;	// 5 = 0x5
	unsigned _refs : 16;	// 6 = 0x6
	unsigned short _mantissa[0];	// 8 = 0x8
}
+ (id)allocWithZone:(NSZone *)zone;	// 0x36129da5
+ (id)decimalNumberWithDecimal:(XXStruct_9isexA)decimal;	// 0x36129f1d
+ (id)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x36129ead
+ (id)decimalNumberWithString:(id)string;	// 0x36129f99
+ (id)decimalNumberWithString:(id)string locale:(id)locale;	// 0x36129fed
+ (id)defaultBehavior;	// 0x3612accd
+ (id)maximumDecimalNumber;	// 0x3612a225
+ (id)minimumDecimalNumber;	// 0x3612a1b9
+ (id)notANumber;	// 0x3612a341
+ (id)numberWithBool:(BOOL)aBool;	// 0x3612c369
+ (id)numberWithChar:(BOOL)aChar;	// 0x3612bf35
+ (id)numberWithDouble:(double)aDouble;	// 0x3612c319
+ (id)numberWithFloat:(float)aFloat;	// 0x3612c2cd
+ (id)numberWithInt:(int)int;	// 0x3612c065
+ (id)numberWithInteger:(int)integer;	// 0x3612c0b1
+ (id)numberWithLong:(long)aLong;	// 0x3612c195
+ (id)numberWithLongLong:(long long)longLong;	// 0x3612c22d
+ (id)numberWithShort:(short)aShort;	// 0x3612bfcd
+ (id)numberWithUnsignedChar:(unsigned char)unsignedChar;	// 0x3612bf81
+ (id)numberWithUnsignedInt:(unsigned)unsignedInt;	// 0x3612c0fd
+ (id)numberWithUnsignedInteger:(unsigned)unsignedInteger;	// 0x3612c149
+ (id)numberWithUnsignedLong:(unsigned long)unsignedLong;	// 0x3612c1e1
+ (id)numberWithUnsignedLongLong:(unsigned long long)unsignedLongLong;	// 0x3612c27d
+ (id)numberWithUnsignedShort:(unsigned short)unsignedShort;	// 0x3612c019
+ (id)one;	// 0x3612a2d1
+ (void)setDefaultBehavior:(id)behavior;	// 0x3612ac79
+ (id)zero;	// 0x3612a291
- (id)initWithCoder:(id)coder;	// 0x3612a135
- (id)initWithDecimal:(XXStruct_9isexA)decimal;	// 0x3612a081
- (id)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)negative;	// 0x3612a045
- (id)initWithString:(id)string;	// 0x3612a0bd
- (id)initWithString:(id)string locale:(id)locale;	// 0x3612a0f9
- (bool)_getCString:(char *)string length:(int)length multiplier:(double)multiplier;	// 0x3612b0f1
- (BOOL)boolValue;	// 0x3612b0cd
- (BOOL)charValue;	// 0x3612af51
- (Class)classForCoder;	// 0x3612ad3d
- (int)compare:(id)compare;	// 0x3612a3b1
- (id)copy;	// 0x36129e05
- (id)copyWithZone:(NSZone *)zone;	// 0x36129e15
- (id)decimalNumberByAdding:(id)adding;	// 0x3612a57d
- (id)decimalNumberByAdding:(id)adding withBehavior:(id)behavior;	// 0x3612a5cd
- (id)decimalNumberByDividingBy:(id)by;	// 0x3612a931
- (id)decimalNumberByDividingBy:(id)by withBehavior:(id)behavior;	// 0x3612a981
- (id)decimalNumberByMultiplyingBy:(id)by;	// 0x3612a859
- (id)decimalNumberByMultiplyingBy:(id)by withBehavior:(id)behavior;	// 0x3612a8a9
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10;	// 0x3612aae1
- (id)decimalNumberByMultiplyingByPowerOf10:(short)a10 withBehavior:(id)behavior;	// 0x3612ab31
- (id)decimalNumberByRaisingToPower:(unsigned)power;	// 0x3612aa09
- (id)decimalNumberByRaisingToPower:(unsigned)power withBehavior:(id)behavior;	// 0x3612aa59
- (id)decimalNumberByRoundingAccordingToBehavior:(id)behavior;	// 0x3612abb9
- (id)decimalNumberBySubstracting:(id)substracting;	// 0x3612a731
- (id)decimalNumberBySubstracting:(id)substracting withBehavior:(id)behavior;	// 0x3612a771
- (id)decimalNumberBySubtracting:(id)subtracting;	// 0x3612a781
- (id)decimalNumberBySubtracting:(id)subtracting withBehavior:(id)behavior;	// 0x3612a7d1
- (XXStruct_9isexA)decimalValue;	// 0x3612a18d
- (id)description;	// 0x3612a171
- (id)descriptionWithLocale:(id)locale;	// 0x3612a185
- (double)doubleValue;	// 0x3612a489
- (void)encodeWithCoder:(id)coder;	// 0x3612ad59
- (float)floatValue;	// 0x3612b0a9
- (void)getValue:(void *)value;	// 0x3612a561
- (int)intValue;	// 0x3612afe1
- (BOOL)isEqual:(id)equal;	// 0x3612a431
- (long long)longLongValue;	// 0x3612b071
- (long)longValue;	// 0x3612b029
- (const char *)objCType;	// 0x3612a479
- (short)shortValue;	// 0x3612af99
- (unsigned char)unsignedCharValue;	// 0x3612af75
- (unsigned)unsignedIntValue;	// 0x3612b005
- (unsigned long long)unsignedLongLongValue;	// 0x3612b08d
- (unsigned long)unsignedLongValue;	// 0x3612b04d
- (unsigned short)unsignedShortValue;	// 0x3612afbd
@end

