/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "NSSQLConnection.h"
#import "CoreData-Structs.h"

@class NSString, NSSQLiteStatement, NSSQLEntity, NSMutableSet, NSMutableDictionary;

@interface NSSQLiteConnection : NSSQLConnection {
	sqlite3 *_db;	// 28 = 0x1c
	sqlite3_stmt *_vmstatement;	// 32 = 0x20
	int _rowsProcessedCount;	// 36 = 0x24
	unsigned _lastEntityKey;	// 40 = 0x28
	NSSQLEntity *_finalEntity;	// 44 = 0x2c
	NSSQLEntity *_lastEntity;	// 48 = 0x30
	sqlite3_stmt *_fetchPKStatement;	// 52 = 0x34
	sqlite3_stmt *_updatePKStatement;	// 56 = 0x38
	NSSQLiteStatement *_beginStatement;	// 60 = 0x3c
	NSSQLiteStatement *_commitStatement;	// 64 = 0x40
	NSSQLiteStatement *_rollbackStatement;	// 68 = 0x44
	NSMutableSet *_vmCachedStatements;	// 72 = 0x48
	NSMutableDictionary *_pragmaSettings;	// 76 = 0x4c
	CFDictionaryRef _cachedEntityUpdateStatements;	// 80 = 0x50
	double _timeOutOption;	// 84 = 0x54
	void *_extraBuffersForRegisteredFunctions[5];	// 92 = 0x5c
	NSString *_dbPathRegisteredWithBackupd;	// 112 = 0x70
	long long _vacuumTracker;	// 116 = 0x74
	sqliteConnectionFlags _sqliteConnectionFlags;	// 124 = 0x7c
	unsigned long long _debugInode;	// 128 = 0x80
}
+ (void)__INode_Changed_AllThatIsLeftToUsIsHonor__;	// 0x30f4fb29
+ (const char *)_databaseOpenURLStringForURL:(id)url;	// 0x30f51001
+ (BOOL)_destroyPersistentStoreAtURL:(id)url options:(id)options error:(id *)error;	// 0x30f519dd
+ (BOOL)_replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url3 sourceOptions:(id)options4 error:(id *)error;	// 0x30f510d1
+ (void)_setDebugFlags:(int)flags;	// 0x30f4fb25
+ (void)initialize;	// 0x30e9ae19
+ (int)readMagicWordFromPath:(const char *)path;	// 0x30f50fa1
- (id)initWithAdapter:(id)adapter;	// 0x30e9ae65
- (id)_adapter;	// 0x30e9b1d1
- (id)_beginPowerAssertionWithAssert:(unsigned *)anAssert;	// 0x30f5246d
- (void)_bindVariablesWithDeletedRow:(id)deletedRow;	// 0x30f53bd5
- (void)_bindVariablesWithInsertedRow:(id)insertedRow;	// 0x30f52e29
- (void)_bindVariablesWithUpdatedRow:(id)updatedRow andOriginalRow:(id)row forDeltasMask:(CFBitVectorRef)deltasMask;	// 0x30f5340d
- (void **)_buffersForRegisteredFunctions;	// 0x30e9c04d
- (void)_clearBindVariablesForInsertedRow;	// 0x30f53295
- (void)_clearBindVariablesForUpdateStatement:(id)updateStatement forDeltasMask:(CFBitVectorRef)deltasMask;	// 0x30f538e5
- (void)_clearCachedStatements;	// 0x30f54729
- (void)_clearOtherStatements;	// 0x30f546ed
- (void)_clearTransactionCaches;	// 0x30f522e1
- (void)_configureAutoVacuum;	// 0x30f560f5
- (void)_configureIntegrityCheck;	// 0x30e9c089
- (void)_configurePageSize;	// 0x30f56319
- (void)_configurePragmaOptions:(int)options;	// 0x30e9c1bd
- (void)_configureSynchronousMode;	// 0x30e9c061
- (void)_configureUbiquityMetadataTable;	// 0x30e9d209
- (void)_endPowerAssertionWithAssert:(unsigned)anAssert andApp:(id)app;	// 0x30f524fd
- (void)_ensureDatabaseOpen;	// 0x30e9d0f1
- (void)_ensureNoFetchInProgress;	// 0x30e9d1a9
- (void)_ensureNoStatementPrepared;	// 0x30e9d14d
- (void)_ensureNoTransactionOpen;	// 0x30f4fe19
- (void)_executeSQLString:(id)string;	// 0x30e9c699
- (long long)_fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x30f50b49
- (void)_finalizeStatement;	// 0x30e9fd99
- (void)_forceDisconnectOnError;	// 0x30f52519
- (long long)_getCurrentAutoVacuumValue;	// 0x30f567d9
- (BOOL)_hasTableWithName:(id)name;	// 0x30f5566d
- (id)_newValueForColumn:(id)column atIndex:(unsigned)index inStatement:(sqlite3_stmt *)statement;	// 0x30e9f239
- (void)_performPostSaveTasks;	// 0x30f56579
- (void)_registerExtraFunctions;	// 0x30e9bc3d
- (int)_rowsChangedByLastExecute;	// 0x30f52e0d
- (void)_setupVacuumIfNecessary;	// 0x30f5683d
- (sqlite3_stmt *)_vmstatement;	// 0x30f54ac5
- (void)addPeerRange:(id)range;	// 0x30f57831
- (void)addPeerRangeForPeerID:(id)peerID entityName:(id)name rangeStart:(id)start rangeEnd:(id)end peerRangeStart:(id)start5 peerRangeEnd:(id)end6;	// 0x30f578dd
- (id)allPeerRanges;	// 0x30f57a55
- (void)beginTransaction;	// 0x30f52a11
- (void)cacheCurrentDBStatementOn:(id)on;	// 0x30f5483d
- (void)cacheUpdateStatement:(id)statement forEntity:(id)entity andDeltasMask:(CFBitVectorRef)mask;	// 0x30f54001
- (id)cachedUpdateStatementForEntity:(id)entity andDeltasMask:(CFBitVectorRef)mask;	// 0x30f5414d
- (BOOL)canConnect;	// 0x30e9b135
- (void)commitTransaction;	// 0x30f52b1d
- (void)connect;	// 0x30e9b23d
- (id)createMapOfEntityNameToPKMaxForEntities:(id)entities;	// 0x30f5929d
- (id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)pktable;	// 0x30f582b5
- (id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)ubrangeTable;	// 0x30f58aa9
- (BOOL)databaseIsEmpty;	// 0x30ea12e1
- (void)dealloc;	// 0x30f4fb2d
- (void)deleteCorrelation:(id)correlation;	// 0x30f53f85
- (void)deleteRow:(id)row;	// 0x30f54451
- (id)describeResults;	// 0x30f5481d
- (void)disconnect;	// 0x30f52709
- (void)dropUbiquityTables;	// 0x30f5a4cd
- (void)endFetch;	// 0x30e9fcf9
- (void)endPrimaryKeyGeneration;	// 0x30f55821
- (void)execute;	// 0x30e9dfed
- (long long)fetchMaxPrimaryKeyForEntity:(id)entity;	// 0x30f50ded
- (int)fetchResultSet:(void *)set usingFetchPlan:(id)plan;	// 0x30eae495
- (id)fetchTableCreationSQL;	// 0x30f552b5
- (id)fetchTableNames;	// 0x30f54f79
- (id)fetchUbiquityKnowledgeVector;	// 0x30f56a79
- (void)finalize;	// 0x30f4fcd9
- (long long)generatePrimaryKeysForEntity:(id)entity batch:(unsigned)batch;	// 0x30f55831
- (void)handleCorruptedDB:(id)db;	// 0x30f54891
- (BOOL)hasMetadataTable;	// 0x30f557e9
- (BOOL)hasPrimaryKeyTable;	// 0x30f560d1
- (void)insertCorrelation:(id)correlation;	// 0x30f53e8d
- (void)insertRow:(id)row;	// 0x30f53c75
- (BOOL)isFetchInProgress;	// 0x30f4fe05
- (BOOL)isLocalFS;	// 0x30f56a5d
- (BOOL)isOpen;	// 0x30e9b1b5
- (id)newFetchedArray;	// 0x30e9f0e1
- (BOOL)performIntegrityCheck;	// 0x30f54ad5
- (void)prepareForPrimaryKeyGeneration;	// 0x30f55811
- (void)prepareSQLStatement:(id)statement;	// 0x30e9d8c1
- (CFArrayRef)rawIntegerRowsForSQL:(id)sql;	// 0x30f4fe79
- (void)releaseSQLStatement;	// 0x30e9fd55
- (void)resetSQLStatement;	// 0x30f546a1
- (void)rollbackTransaction;	// 0x30f52c91
- (void)setExclusiveLockingMode:(BOOL)mode;	// 0x30f54985
- (void)setUbiquityTableValue:(id)value forKey:(id)key;	// 0x30f597fd
- (id)ubiquityTableKeysAndValues;	// 0x30f59961
- (id)ubiquityTableValueForKey:(id)key;	// 0x30f59f45
- (void)updateCorrelation:(id)correlation;	// 0x30f53f09
- (void)updateRow:(id)row;	// 0x30f5417d
- (void)updateUbiquityKnowledgeForPeerWithID:(id)anId andTransactionNumber:(id)number;	// 0x30f575b5
- (void)updateUbiquityKnowledgeVector:(id)vector;	// 0x30f571bd
- (void)willCreateSchema;	// 0x30f5645d
@end

