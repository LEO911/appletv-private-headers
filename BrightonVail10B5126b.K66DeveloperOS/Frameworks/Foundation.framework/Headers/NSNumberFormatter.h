/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import "NSFormatter.h"
#import "Foundation-Structs.h"

@class NSMutableDictionary;

@interface NSNumberFormatter : NSFormatter {
	NSMutableDictionary *_attributes;	// 4 = 0x4
	CFNumberFormatterRef _formatter;	// 8 = 0x8
	unsigned _counter;	// 12 = 0xc
	void *_reserved[12];	// 16 = 0x10
}
@property(assign) BOOL allowsFloats;	// G=0x31971eb1; S=0x318c19e9; converted property
@property(assign) BOOL alwaysShowsDecimalSeparator;	// G=0x31972065; S=0x3197212d; converted property
@property(retain) id currencyCode;	// G=0x319733e9; S=0x319734a9; converted property
@property(retain) id currencyDecimalSeparator;	// G=0x319721b1; S=0x31972271; converted property
@property(retain) id currencyGroupingSeparator;	// G=0x3197502d; S=0x319750ed; converted property
@property(retain) id currencySymbol;	// G=0x31973549; S=0x31973609; converted property
@property(retain) id decimalSeparator;	// G=0x31971ef1; S=0x31971fb1; converted property
@property(retain) id exponentSymbol;	// G=0x31973d89; S=0x31973e49; converted property
@property(assign) unsigned formatWidth;	// G=0x31974181; S=0x3197424d; converted property
@property(assign) unsigned formatterBehavior;	// G=0x319717fd; S=0x3197183d; converted property
@property(assign) BOOL generatesDecimalNumbers;	// G=0x319717b5; S=0x318ea4b9; converted property
@property(retain) id groupingSeparator;	// G=0x3197245d; S=0x3197251d; converted property
@property(assign) unsigned groupingSize;	// G=0x31973ee9; S=0x31973fb5; converted property
@property(retain) id internationalCurrencySymbol;	// G=0x319736a9; S=0x31973769; converted property
@property(assign, getter=isLenient) BOOL lenient;	// G=0x3197518d; S=0x31975269; converted property
@property(retain) id locale;	// G=0x3197170d; S=0x318ea44d; converted property
@property(retain) id maximum;	// G=0x31974f71; S=0x31974f99; converted property
@property(assign) unsigned maximumFractionDigits;	// G=0x31974d69; S=0x31974e35; converted property
@property(assign) unsigned maximumIntegerDigits;	// G=0x31974ad1; S=0x31974b9d; converted property
@property(assign) unsigned maximumSignificantDigits;	// G=0x31975599; S=0x31975665; converted property
@property(retain) id minimum;	// G=0x31974eb5; S=0x31974edd; converted property
@property(assign) unsigned minimumFractionDigits;	// G=0x31974c1d; S=0x31974ce9; converted property
@property(assign) unsigned minimumIntegerDigits;	// G=0x31974985; S=0x31974a51; converted property
@property(assign) unsigned minimumSignificantDigits;	// G=0x3197544d; S=0x31975519; converted property
@property(retain) id minusSign;	// G=0x31973ac9; S=0x31973b89; converted property
@property(retain) id multiplier;	// G=0x319742cd; S=0x3197438d; converted property
@property(retain) id negativeFormat;	// G=0x319718a1; S=0x31971975; converted property
@property(retain) id negativeInfinitySymbol;	// G=0x31972d09; S=0x318c1991; converted property
@property(retain) id negativePrefix;	// G=0x31973129; S=0x319731e9; converted property
@property(retain) id negativeSuffix;	// G=0x31973289; S=0x31973349; converted property
@property(retain) id nilSymbol;	// G=0x3197280d; S=0x318c18e1; converted property
@property(retain) id notANumberSymbol;	// G=0x3197296d; S=0x31972a2d; converted property
@property(assign) unsigned numberStyle;	// G=0x3197166d; S=0x318c1a69; converted property
@property(retain) id paddingCharacter;	// G=0x3197442d; S=0x319744ed; converted property
@property(assign) unsigned paddingPosition;	// G=0x3197458d; S=0x31974659; converted property
@property(assign, getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled;	// G=0x319756e5; S=0x3197572d; converted property
@property(retain) id perMillSymbol;	// G=0x31973969; S=0x31973a29; converted property
@property(retain) id percentSymbol;	// G=0x31973809; S=0x319738c9; converted property
@property(retain) id plusSign;	// G=0x31973c29; S=0x31973ce9; converted property
@property(retain) id positiveFormat;	// G=0x31971bd1; S=0x31971c89; converted property
@property(retain) id positiveInfinitySymbol;	// G=0x31972ba9; S=0x318c1939; converted property
@property(retain) id positivePrefix;	// G=0x31972e69; S=0x31972f29; converted property
@property(retain) id positiveSuffix;	// G=0x31972fc9; S=0x31973089; converted property
@property(retain) id roundingIncrement;	// G=0x31974825; S=0x319748e5; converted property
@property(assign) unsigned roundingMode;	// G=0x319746d9; S=0x319747a5; converted property
@property(assign) unsigned secondaryGroupingSize;	// G=0x31974035; S=0x31974101; converted property
@property(retain) id textAttributesForNegativeInfinity;	// G=0x31972d8d; S=0x31972e11; converted property
@property(retain) id textAttributesForNegativeValues;	// G=0x31971af5; S=0x31971b79; converted property
@property(retain) id textAttributesForNil;	// G=0x31972891; S=0x31972915; converted property
@property(retain) id textAttributesForNotANumber;	// G=0x31972acd; S=0x31972b51; converted property
@property(retain) id textAttributesForPositiveInfinity;	// G=0x31972c2d; S=0x31972cb1; converted property
@property(retain) id textAttributesForPositiveValues;	// G=0x31971dd5; S=0x31971e59; converted property
@property(retain) id textAttributesForZero;	// G=0x31972731; S=0x319727b5; converted property
@property(assign) BOOL usesGroupingSeparator;	// G=0x31972311; S=0x319723d9; converted property
@property(assign) BOOL usesSignificantDigits;	// G=0x319752ed; S=0x319753c9; converted property
@property(retain) id zeroSymbol;	// G=0x319725d1; S=0x31972691; converted property
+ (unsigned)defaultFormatterBehavior;	// 0x318c18ad
+ (void)initialize;	// 0x318e171d
+ (id)localizedStringFromNumber:(id)number numberStyle:(unsigned)style;	// 0x319715f5
+ (void)setDefaultFormatterBehavior:(unsigned)behavior;	// 0x318e1741
- (id)init;	// 0x318c152d
- (id)initWithCoder:(id)coder;	// 0x31970bb9
- (void *)__Keynote_NOOP;	// 0x319708e9
- (void)_clearFormatter;	// 0x318c1a45
- (void)_regenerateFormatter;	// 0x318c1c15
- (void)_reset;	// 0x319708ed
- (void)_setUsesCharacterDirection:(BOOL)direction;	// 0x31975865
- (BOOL)_usesCharacterDirection;	// 0x31975789
// converted property getter: - (BOOL)allowsFloats;	// 0x31971eb1
// converted property getter: - (BOOL)alwaysShowsDecimalSeparator;	// 0x31972065
- (id)attributedStringForObjectValue:(id)objectValue withDefaultAttributes:(id)defaultAttributes;	// 0x31970d39
- (id)copyWithZone:(NSZone *)zone;	// 0x31970aa9
// converted property getter: - (id)currencyCode;	// 0x319733e9
// converted property getter: - (id)currencyDecimalSeparator;	// 0x319721b1
// converted property getter: - (id)currencyGroupingSeparator;	// 0x3197502d
// converted property getter: - (id)currencySymbol;	// 0x31973549
- (void)dealloc;	// 0x318eb039
// converted property getter: - (id)decimalSeparator;	// 0x31971ef1
- (void)encodeWithCoder:(id)coder;	// 0x31970b11
// converted property getter: - (id)exponentSymbol;	// 0x31973d89
- (void)finalize;	// 0x31970a65
// converted property getter: - (unsigned)formatWidth;	// 0x31974181
// converted property getter: - (unsigned)formatterBehavior;	// 0x319717fd
// converted property getter: - (BOOL)generatesDecimalNumbers;	// 0x319717b5
- (BOOL)getObjectValue:(out id *)value forString:(id)string errorDescription:(out id *)description;	// 0x31970d3d
- (BOOL)getObjectValue:(out id *)value forString:(id)string range:(inout NSRange *)range error:(out id *)error;	// 0x3197159d
// converted property getter: - (id)groupingSeparator;	// 0x3197245d
// converted property getter: - (unsigned)groupingSize;	// 0x31973ee9
// converted property getter: - (id)internationalCurrencySymbol;	// 0x319736a9
// converted property getter: - (BOOL)isLenient;	// 0x3197518d
// converted property getter: - (BOOL)isPartialStringValidationEnabled;	// 0x319756e5
// converted property getter: - (id)locale;	// 0x3197170d
// converted property getter: - (id)maximum;	// 0x31974f71
// converted property getter: - (unsigned)maximumFractionDigits;	// 0x31974d69
// converted property getter: - (unsigned)maximumIntegerDigits;	// 0x31974ad1
// converted property getter: - (unsigned)maximumSignificantDigits;	// 0x31975599
// converted property getter: - (id)minimum;	// 0x31974eb5
// converted property getter: - (unsigned)minimumFractionDigits;	// 0x31974c1d
// converted property getter: - (unsigned)minimumIntegerDigits;	// 0x31974985
// converted property getter: - (unsigned)minimumSignificantDigits;	// 0x3197544d
// converted property getter: - (id)minusSign;	// 0x31973ac9
// converted property getter: - (id)multiplier;	// 0x319742cd
// converted property getter: - (id)negativeFormat;	// 0x319718a1
// converted property getter: - (id)negativeInfinitySymbol;	// 0x31972d09
// converted property getter: - (id)negativePrefix;	// 0x31973129
// converted property getter: - (id)negativeSuffix;	// 0x31973289
// converted property getter: - (id)nilSymbol;	// 0x3197280d
// converted property getter: - (id)notANumberSymbol;	// 0x3197296d
- (id)numberFromString:(id)string;	// 0x319715bd
// converted property getter: - (unsigned)numberStyle;	// 0x3197166d
// converted property getter: - (id)paddingCharacter;	// 0x3197442d
// converted property getter: - (unsigned)paddingPosition;	// 0x3197458d
// converted property getter: - (id)perMillSymbol;	// 0x31973969
// converted property getter: - (id)percentSymbol;	// 0x31973809
// converted property getter: - (id)plusSign;	// 0x31973c29
// converted property getter: - (id)positiveFormat;	// 0x31971bd1
// converted property getter: - (id)positiveInfinitySymbol;	// 0x31972ba9
// converted property getter: - (id)positivePrefix;	// 0x31972e69
// converted property getter: - (id)positiveSuffix;	// 0x31972fc9
// converted property getter: - (id)roundingIncrement;	// 0x31974825
// converted property getter: - (unsigned)roundingMode;	// 0x319746d9
// converted property getter: - (unsigned)secondaryGroupingSize;	// 0x31974035
// converted property setter: - (void)setAllowsFloats:(BOOL)floats;	// 0x318c19e9
// converted property setter: - (void)setAlwaysShowsDecimalSeparator:(BOOL)separator;	// 0x3197212d
// converted property setter: - (void)setCurrencyCode:(id)code;	// 0x319734a9
// converted property setter: - (void)setCurrencyDecimalSeparator:(id)separator;	// 0x31972271
// converted property setter: - (void)setCurrencyGroupingSeparator:(id)separator;	// 0x319750ed
// converted property setter: - (void)setCurrencySymbol:(id)symbol;	// 0x31973609
// converted property setter: - (void)setDecimalSeparator:(id)separator;	// 0x31971fb1
// converted property setter: - (void)setExponentSymbol:(id)symbol;	// 0x31973e49
// converted property setter: - (void)setFormatWidth:(unsigned)width;	// 0x3197424d
// converted property setter: - (void)setFormatterBehavior:(unsigned)behavior;	// 0x3197183d
// converted property setter: - (void)setGeneratesDecimalNumbers:(BOOL)numbers;	// 0x318ea4b9
// converted property setter: - (void)setGroupingSeparator:(id)separator;	// 0x3197251d
// converted property setter: - (void)setGroupingSize:(unsigned)size;	// 0x31973fb5
// converted property setter: - (void)setInternationalCurrencySymbol:(id)symbol;	// 0x31973769
// converted property setter: - (void)setLenient:(BOOL)lenient;	// 0x31975269
// converted property setter: - (void)setLocale:(id)locale;	// 0x318ea44d
// converted property setter: - (void)setMaximum:(id)maximum;	// 0x31974f99
// converted property setter: - (void)setMaximumFractionDigits:(unsigned)digits;	// 0x31974e35
// converted property setter: - (void)setMaximumIntegerDigits:(unsigned)digits;	// 0x31974b9d
// converted property setter: - (void)setMaximumSignificantDigits:(unsigned)digits;	// 0x31975665
// converted property setter: - (void)setMinimum:(id)minimum;	// 0x31974edd
// converted property setter: - (void)setMinimumFractionDigits:(unsigned)digits;	// 0x31974ce9
// converted property setter: - (void)setMinimumIntegerDigits:(unsigned)digits;	// 0x31974a51
// converted property setter: - (void)setMinimumSignificantDigits:(unsigned)digits;	// 0x31975519
// converted property setter: - (void)setMinusSign:(id)sign;	// 0x31973b89
// converted property setter: - (void)setMultiplier:(id)multiplier;	// 0x3197438d
// converted property setter: - (void)setNegativeFormat:(id)format;	// 0x31971975
// converted property setter: - (void)setNegativeInfinitySymbol:(id)symbol;	// 0x318c1991
// converted property setter: - (void)setNegativePrefix:(id)prefix;	// 0x319731e9
// converted property setter: - (void)setNegativeSuffix:(id)suffix;	// 0x31973349
// converted property setter: - (void)setNilSymbol:(id)symbol;	// 0x318c18e1
// converted property setter: - (void)setNotANumberSymbol:(id)symbol;	// 0x31972a2d
// converted property setter: - (void)setNumberStyle:(unsigned)style;	// 0x318c1a69
// converted property setter: - (void)setPaddingCharacter:(id)character;	// 0x319744ed
// converted property setter: - (void)setPaddingPosition:(unsigned)position;	// 0x31974659
// converted property setter: - (void)setPartialStringValidationEnabled:(BOOL)enabled;	// 0x3197572d
// converted property setter: - (void)setPerMillSymbol:(id)symbol;	// 0x31973a29
// converted property setter: - (void)setPercentSymbol:(id)symbol;	// 0x319738c9
// converted property setter: - (void)setPlusSign:(id)sign;	// 0x31973ce9
// converted property setter: - (void)setPositiveFormat:(id)format;	// 0x31971c89
// converted property setter: - (void)setPositiveInfinitySymbol:(id)symbol;	// 0x318c1939
// converted property setter: - (void)setPositivePrefix:(id)prefix;	// 0x31972f29
// converted property setter: - (void)setPositiveSuffix:(id)suffix;	// 0x31973089
// converted property setter: - (void)setRoundingIncrement:(id)increment;	// 0x319748e5
// converted property setter: - (void)setRoundingMode:(unsigned)mode;	// 0x319747a5
// converted property setter: - (void)setSecondaryGroupingSize:(unsigned)size;	// 0x31974101
// converted property setter: - (void)setTextAttributesForNegativeInfinity:(id)negativeInfinity;	// 0x31972e11
// converted property setter: - (void)setTextAttributesForNegativeValues:(id)negativeValues;	// 0x31971b79
// converted property setter: - (void)setTextAttributesForNil:(id)aNil;	// 0x31972915
// converted property setter: - (void)setTextAttributesForNotANumber:(id)notANumber;	// 0x31972b51
// converted property setter: - (void)setTextAttributesForPositiveInfinity:(id)positiveInfinity;	// 0x31972cb1
// converted property setter: - (void)setTextAttributesForPositiveValues:(id)positiveValues;	// 0x31971e59
// converted property setter: - (void)setTextAttributesForZero:(id)zero;	// 0x319727b5
// converted property setter: - (void)setUsesGroupingSeparator:(BOOL)separator;	// 0x319723d9
// converted property setter: - (void)setUsesSignificantDigits:(BOOL)digits;	// 0x319753c9
// converted property setter: - (void)setZeroSymbol:(id)symbol;	// 0x31972691
- (id)stringForObjectValue:(id)objectValue;	// 0x318c1acd
- (id)stringFromNumber:(id)number;	// 0x318ea515
// converted property getter: - (id)textAttributesForNegativeInfinity;	// 0x31972d8d
// converted property getter: - (id)textAttributesForNegativeValues;	// 0x31971af5
// converted property getter: - (id)textAttributesForNil;	// 0x31972891
// converted property getter: - (id)textAttributesForNotANumber;	// 0x31972acd
// converted property getter: - (id)textAttributesForPositiveInfinity;	// 0x31972c2d
// converted property getter: - (id)textAttributesForPositiveValues;	// 0x31971dd5
// converted property getter: - (id)textAttributesForZero;	// 0x31972731
// converted property getter: - (BOOL)usesGroupingSeparator;	// 0x31972311
// converted property getter: - (BOOL)usesSignificantDigits;	// 0x319752ed
// converted property getter: - (id)zeroSymbol;	// 0x319725d1
@end

