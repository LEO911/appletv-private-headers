/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIWebTiledView.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "_UIWebDoubleTapDelegate.h"
#import "UIWebFileUploadPanelDelegate.h"
#import "_UIRotatingActionSheetDelegate.h"
#import "UITextAutoscrolling.h"

@class _UITextServiceSession, UIWebFileUploadPanel, UIColor, UIImage, WebThreadSafeUndoManager, UITextInteractionAssistant, WebViewReachabilityObserver, UIWebRotatingSheet, NSMutableSet, NSArray, NSTimer, UITextChecker, DOMHTMLElement, UILongPressGestureRecognizer, UIAutoscroll, UITapGestureRecognizer, UIPanGestureRecognizer, CALayer, WebView, DOMNode, UITextInputTraits, DOMElement, DOMRange, UITextRange, NSDictionary, UITextPosition, UIView, UIWebSelectionAssistant;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIActionSheetDelegate, _UIRotatingActionSheetDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate> {
	WKWindow *_wkWindow;	// 100 = 0x64
	WebView *_webView;	// 104 = 0x68
	WebViewReachabilityObserver *_reachabilityObserver;	// 108 = 0x6c
	id m_parentTextView;	// 112 = 0x70
	id _delegate;	// 116 = 0x74
	id _textSuggestionDelegate;	// 120 = 0x78
	CGRect _doubleTapRect;	// 124 = 0x7c
	CGRect _mainDocumentDoubleTapRect;	// 140 = 0x8c
	CGPoint _scrollPoint;	// 156 = 0x9c
	CGPoint _doubleTapStartPosition;	// 164 = 0xa4
	double _doubleTapStartTime;	// 172 = 0xac
	CGSize _pendingSize;	// 180 = 0xb4
	int _orientation;	// 188 = 0xbc
	DOMHTMLElement *_standaloneEditingElement;	// 192 = 0xc0
	CGPoint _mouseDownPoint;	// 196 = 0xc4
	double _mouseDownTime;	// 204 = 0xcc
	UIAutoscroll *_autoscroll;	// 212 = 0xd4
	CFDictionaryRef _plugInViews;	// 216 = 0xd8
	int m_selectionGranularity;	// 220 = 0xdc
	CALayer *_contentLayersHostingLayer;	// 224 = 0xe0
	CALayer *_flattenedRotatingContentLayer;	// 228 = 0xe4
	NSMutableSet *_overflowScrollViewsPendingInsertion;	// 232 = 0xe8
	NSMutableSet *_overflowScrollViewsPendingDeletion;	// 236 = 0xec
	NSMutableSet *_overflowScrollViews;	// 240 = 0xf0
	NSArray *_additionalSubviews;	// 244 = 0xf4
	UITextInputTraits *_traits;	// 248 = 0xf8
	id<UITextInputDelegate> _inputDelegate;	// 252 = 0xfc
	UITapGestureRecognizer *_singleTapGestureRecognizer;	// 256 = 0x100
	UITapGestureRecognizer *_doubleTapGestureRecognizer;	// 260 = 0x104
	UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;	// 264 = 0x108
	UILongPressGestureRecognizer *_highlightLongPressGestureRecognizer;	// 268 = 0x10c
	UILongPressGestureRecognizer *_longPressGestureRecognizer;	// 272 = 0x110
	UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;	// 276 = 0x114
	struct {
		NSTimer *timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode *element;
		id delegate;
		UIWebRotatingSheet *interactionSheet;
		NSArray *elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
		float documentScale;
	} _interaction;	// 280 = 0x118
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];	// 332 = 0x14c
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;	// 452 = 0x1c4
	CGSize _minimumSize;	// 476 = 0x1dc
	int _documentType;	// 484 = 0x1e4
	float _documentScale;	// 488 = 0x1e8
	float _previousDocumentScale;	// 492 = 0x1ec
	CGRect _documentBounds;	// 496 = 0x1f0
	CGSize _fixedLayoutOriginRoundingDelta;	// 512 = 0x200
	CGSize _fixedLayoutSizeRoundingDelta;	// 520 = 0x208
	unsigned _customConfigurations;	// 528 = 0x210
	unsigned _mouseDownCount;	// 532 = 0x214
	unsigned _dataDetectorTypes;	// 536 = 0x218
	unsigned _webCoreNeedsSetNeedsDisplay : 1;	// 540 = 0x21c
	unsigned _webCoreNeedsDraw : 1;	// 540 = 0x21c
	unsigned _ignoresFocusingMouse : 1;	// 540 = 0x21c
	unsigned _ignoresKeyEvents : 1;	// 540 = 0x21c
	unsigned _autoresizes : 1;	// 540 = 0x21c
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;	// 540 = 0x21c
	unsigned _updatingSize : 1;	// 540 = 0x21c
	unsigned _scalesToFit : 1;	// 540 = 0x21c
	unsigned _updatesScrollView : 1;	// 541 = 0x21d
	unsigned _hasCustomScale : 1;	// 541 = 0x21d
	unsigned _shouldRestoreScrollPosition : 1;	// 541 = 0x21d
	unsigned _pageNeedsReset : 1;	// 541 = 0x21d
	unsigned _hasScrollPoint : 1;	// 541 = 0x21d
	unsigned _gesturesDisabled : 1;	// 541 = 0x21d
	unsigned _doubleTapRectIsReplaced : 1;	// 541 = 0x21d
	unsigned _standaloneEditableView : 1;	// 541 = 0x21d
	unsigned _widgetEditingView : 1;	// 542 = 0x21e
	unsigned _mouseDragged : 1;	// 542 = 0x21e
	unsigned _mouseReentrancyGuard : 1;	// 542 = 0x21e
	unsigned _isShowingFullScreenPlugIn : 1;	// 542 = 0x21e
	unsigned _isSettingRedrawFrame : 1;	// 542 = 0x21e
	unsigned _needsScrollNotifications : 1;	// 542 = 0x21e
	unsigned _loadsSynchronously : 1;	// 542 = 0x21e
	unsigned _mouseDown : 1;	// 542 = 0x21e
	unsigned _usePreTimberlineTransparencyBehavior : 1;	// 543 = 0x21f
	unsigned _geolocationDialogAllowed : 1;	// 543 = 0x21f
	unsigned _usingMinimalTilesDuringLoading : 1;	// 543 = 0x21f
	unsigned _sheetsCount : 2;	// 543 = 0x21f
	unsigned _didFirstVisuallyNonEmptyLayout : 1;	// 543 = 0x21f
	unsigned _loadInProgress : 1;	// 543 = 0x21f
	unsigned _uiwdvIsResigningFirstResponder : 1;	// 543 = 0x21f
	unsigned _classicViewportMode : 1;	// 544 = 0x220
	unsigned _sizeUpdatesSuspended : 1;	// 544 = 0x220
	unsigned _sizeUpdateOccurredWhileSuspended : 1;	// 544 = 0x220
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;	// 544 = 0x220
	unsigned _shouldIgnoreCustomViewport : 1;	// 544 = 0x220
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;	// 544 = 0x220
	unsigned _shouldCloseWebViewAtDealloc : 1;	// 544 = 0x220
	unsigned _shouldRemoveUserStyleSheet : 1;	// 544 = 0x220
	unsigned _hasDrawnTiles : 1;	// 545 = 0x221
	unsigned _showingTextStyleOptions : 1;	// 545 = 0x221
	unsigned _subviewCachesNeedUpdate : 1;	// 545 = 0x221
	unsigned _avoidFixedPositionUpdateViaDidScroll : 1;	// 545 = 0x221
	unsigned _inspectorSearchingForNode : 1;	// 545 = 0x221
	unsigned _previousScrollWasScrollToTop : 1;	// 545 = 0x221
	unsigned _skipResettingNeedsScrollNotifications : 1;	// 545 = 0x221
	WebThreadSafeUndoManager *_undoManager;	// 548 = 0x224
	UIWebSelectionAssistant *_webSelectionAssistant;	// 552 = 0x228
	UITextInteractionAssistant *_textSelectionAssistant;	// 556 = 0x22c
	UITextChecker *_textChecker;	// 560 = 0x230
	UIEdgeInsets _caretInsets;	// 564 = 0x234
	UIWebFileUploadPanel *_fileUploadPanel;	// 580 = 0x244
	int _selectionAffinity;	// 584 = 0x248
	DOMElement *_dictationResultPlaceholder;	// 588 = 0x24c
	id _dictationResultPlaceholderRemovalObserver;	// 592 = 0x250
	DOMRange *_rangeToRestoreAfterDictation;	// 596 = 0x254
	_UITextServiceSession *_definitionSession;	// 600 = 0x258
	_UITextServiceSession *_learnSession;	// 604 = 0x25c
	BOOL _suppressesIncrementalRendering;	// 608 = 0x260
}
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;	// G=0x32c58f51; S=0x32d4a451; 
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(assign, nonatomic) CGPoint autoscrollContentOffset;	// G=0x32dbe281; S=0x32dbe211; 
@property(assign) BOOL becomesEditableWithGestures;	// G=0x32d439cd; S=0x32d439d1; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x32bde99d; 
@property(assign) UIEdgeInsets caretInsets;	// G=0x32dbd9ed; S=0x32b6bed1; converted property
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign) unsigned dataDetectorTypes;	// G=0x32b6a259; S=0x32b99d3d; converted property
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign) id delegate;	// G=0x32c15541; S=0x32b9b011; converted property
@property(assign) BOOL detectsPhoneNumbers;	// G=0x32d3e405; S=0x32d3e3ad; converted property
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(readonly, assign) CGRect documentBounds;	// G=0x32b9b869; converted property
@property(readonly, assign) int documentType;	// G=0x32b9b855; converted property
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;	// G=0x32d40735; S=0x32d406f1; 
@property(readonly, assign) CGRect doubleTapRect;	// G=0x32d409ad; converted property
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32c01a41; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x32bcb6fd; S=0x32bdc8dd; 
@property(retain, nonatomic) UIColor *insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x32c153cd; 
@property(assign) id interactionDelegate;	// G=0x32d4a2d5; S=0x32b9b021; converted property
@property(assign) BOOL isStandaloneEditableView;	// G=0x32d40a09; S=0x32c415a1; converted property
@property(assign) BOOL isWidgetEditingView;	// G=0x32d40a85; S=0x32d40a6d; converted property
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(assign) BOOL loadsSynchronously;	// G=0x32d3e395; S=0x32b69cb1; converted property
@property(retain) id markedText;	// G=0x32c457c1; S=0x32caa6e1; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32b6ad05; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x32d4470d; S=0x32d44711; 
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;	// G=0x32c30d25; S=0x32d406a5; 
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation;	// G=0x32d44ca1; S=0x32d44cb1; @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange *selectedTextRange;	// G=0x32bd3901; S=0x32c15acd; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x32bd398d; S=0x32d4496d; 
@property(retain, nonatomic) UIColor *selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage *selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;	// G=0x32d44971; S=0x32c01da9; 
@property(retain, nonatomic) UIColor *selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) int selectionState;	// G=0x32c09191; 
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;	// G=0x32d3e7e1; S=0x32c4da75; 
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;	// G=0x32d40691; S=0x32d40679; 
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;	// G=0x32d3e7cd; S=0x32d3e765; 
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(retain) DOMHTMLElement *standaloneEditingElement;	// G=0x32d40a5d; S=0x32d40a1d; converted property
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(assign, nonatomic) BOOL suppressesIncrementalRendering;	// G=0x32d44cc1; S=0x32c4dd29; @synthesize=_suppressesIncrementalRendering
@property(retain) id text;	// G=0x32d42839; S=0x32d4270d; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x32b6acd9; 
@property(retain) id typingAttributes;	// G=0x32d3dce9; S=0x32d3de1d; converted property
@property(readonly, retain) WebThreadSafeUndoManager *undoManager;	// G=0x32bcb749; converted property
@property(assign) BOOL updatesScrollView;	// G=0x32d3ed2d; S=0x32d3ed15; converted property
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
@property(readonly, retain) UIWebSelectionAssistant *webSelectionAssistant;	// G=0x32d438b1; converted property
@property(readonly, retain) WebView *webView;	// G=0x32b69821; converted property
+ (id)_createDefaultHighlightView;	// 0x32c3bc31
+ (id)_sharedHighlightView;	// 0x32c3bbf9
+ (double)getTimestamp;	// 0x32d3d9e9
+ (BOOL)hasLandscapeOrientation;	// 0x32ba0825
+ (void)initialize;	// 0x32b546c1
+ (Class)layerClass;	// 0x32b680f1
+ (id)standardTextViewPreferences;	// 0x32b67809
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;	// 0x32b679a1
- (id)initWithFrame:(CGRect)frame;	// 0x32b98889
- (id)initWithWebView:(id)webView frame:(CGRect)frame;	// 0x32b67afd
- (void)_WAKViewSizeDidChange:(id)_WAKViewSize;	// 0x32c309c9
// declared property getter: - (BOOL)_acceptsFirstResponder;	// 0x32c58f51
- (SEL)_actionForLongPressOnElement:(id)longPressOnElement;	// 0x32d4906d
- (void)_addAdditionalSubview:(id)subview;	// 0x32d3fbb5
- (void)_addShortcut:(id)shortcut;	// 0x32d433cd
- (CGRect)_adjustedLayoutRectForFixedPositionObjects;	// 0x32c3c009
- (unsigned)_applyViewportArguments:(id)arguments;	// 0x32b9c7dd
- (id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x32d4bc01
- (id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;	// 0x32d4bea5
- (void)_cancelLongPressGestureRecognizer;	// 0x32c3be51
- (void)_cleanUpFrameStateAndLoad:(id)load;	// 0x32c3017d
- (void)_cleanupSheet;	// 0x32c4333d
- (void)_clearAllConsoleMessages;	// 0x32d409fd
- (void)_clearDoubleTapRect;	// 0x32b9e269
- (unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int *)count;	// 0x32d43d51
- (void *)_createIOSurfaceFromRect:(CGRect)rect;	// 0x32d4401d
- (void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;	// 0x32d4ac4d
- (BOOL)_dataDetectionIsActivated;	// 0x32b99df9
- (void)_define:(id)define;	// 0x32d432a5
- (BOOL)_dictationPlaceholderHasBeenRemoved;	// 0x32d411e9
- (void)_didMoveFromWindow:(id)window toWindow:(id)window2;	// 0x32b6c149
- (void)_didScroll;	// 0x32c3b831
- (void)_dismissViewControllerAnimated:(BOOL)animated completion:(id)completion;	// 0x32d3dac5
- (float)_documentScale;	// 0x32c31ced
- (id)_documentUrl;	// 0x32d44985
- (CGRect)_documentViewVisibleRect;	// 0x32b9acad
- (id)_doubleTapGestureRecognizer;	// 0x32d4a43d
- (void)_doubleTapRecognized:(id)recognized;	// 0x32d48fe5
- (void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x32d4c6e1
- (void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32c12d99
- (void)_finishedUsingDictationPlaceholder;	// 0x32d4187d
- (void)_flattenAndSwapContentLayersInRect:(CGRect)rect;	// 0x32d4415d
- (id)_focusedOrMainFrame;	// 0x32b6997d
- (id)_groupName;	// 0x32ca5a49
- (void)_handleDoubleTapAtLocation:(CGPoint)location;	// 0x32d40935
- (void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect *)rect;	// 0x32d40759
- (void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;	// 0x32d40971
- (BOOL)_hasSubviewContainingWebContent:(id)content;	// 0x32d4009d
- (void)_highlightLongPressRecognized:(id)recognized;	// 0x32d491f1
- (void)_inspectorDidStartSearchingForNode:(id)_inspector;	// 0x32d3da11
- (void)_inspectorDidStopSearchingForNode:(id)_inspector;	// 0x32d3da29
- (BOOL)_isInspectorSearchingForNode;	// 0x32c3224d
- (BOOL)_isSubviewOfPlugInView:(id)view;	// 0x32c56be9
- (CGRect)_lastRectForRange:(id)range;	// 0x32c533ed
- (CGRect)_layoutRectForFixedPositionObjects;	// 0x32b9aa8d
- (void)_longPressRecognized:(id)recognized;	// 0x32d492d1
- (NSRange)_markedTextNSRange;	// 0x32d42445
- (void)_noteOverflowScrollViewPendingDeletion:(id)deletion;	// 0x32d3fae9
- (void)_noteOverflowScrollViewPendingInsertion:(id)insertion;	// 0x32d3fa7d
- (void)_notifyContentHostingLayersOfScaleChange;	// 0x32b68389
- (void)_notifyPlugInViewsOfDidEndZooming;	// 0x32d3f005
- (void)_notifyPlugInViewsOfDidZoom;	// 0x32d3f119
- (void)_notifyPlugInViewsOfScaleChange;	// 0x32b9a929
- (void)_notifyPlugInViewsOfWillBeginZooming;	// 0x32d3eef5
- (void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;	// 0x32d4005d
- (void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node whileScrolling:(BOOL)scrolling;	// 0x32d3ff59
- (void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;	// 0x32d3fef5
- (id)_parentTextView;	// 0x32bdcbc9
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32d44621
- (BOOL)_presentViewController:(id)controller animated:(BOOL)animated completion:(id)completion;	// 0x32d3da61
- (CGRect)_presentationRectForSheetGivenPoint:(CGPoint)sheetGivenPoint inHostView:(id)hostView;	// 0x32d4b7f9
- (Class)_printFormatterClass;	// 0x32e5d539
- (void)_promptForReplace:(id)replace;	// 0x32d43859
- (void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;	// 0x32ba0c21
- (void)_removeAdditionalSubview:(id)subview;	// 0x32d3fc21
- (void)_removeDefinitionController:(BOOL)controller;	// 0x32bd3a69
- (void)_removeShortcutController:(BOOL)controller;	// 0x32d3da41
- (void)_renderUnbufferedInContext:(CGContextRef)context;	// 0x32d40125
- (void)_resetForNewPage;	// 0x32ba00cd
- (void)_resetFormDataForFrame:(id)frame;	// 0x32d409f9
- (void)_resetInteractionWithLocation:(CGPoint)location;	// 0x32c57d89
- (void)_resetShowingTextStyle:(id)style;	// 0x32c62265
- (void)_reshapePlugInViews;	// 0x32b6c791
- (id)_responderForBecomeFirstResponder;	// 0x32d40b45
- (void)_restoreFlattenedContentLayers;	// 0x32d442e1
- (void)_restoreScrollPointForce:(BOOL)force;	// 0x32ba0379
- (void)_restoreViewportSettingsWithSize:(CGSize)size;	// 0x32b69569
- (void)_runLoadBlock:(id)block;	// 0x32c30201
- (void)_saveStateToHistoryItem:(id)historyItem;	// 0x32b9f1d9
- (id)_scriptingInfoForForm:(id)form;	// 0x32d44f51
- (id)_scriptingInfoForLink:(id)link;	// 0x32d44cd5
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x32d446a9
- (CGRect)_selectionClipRect;	// 0x32d42d19
- (void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;	// 0x32c12d55
- (void)_sendMouseMoveAndAttemptClick:(id)click;	// 0x32d4993d
// declared property setter: - (void)_setAcceptsFirstResponder:(BOOL)responder;	// 0x32d4a451
- (void)_setDocumentScale:(float)scale;	// 0x32b9a5c9
- (void)_setDocumentType:(int)type;	// 0x32b99e35
- (void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;	// 0x32b99e55
- (void)_setFont:(id)font;	// 0x32d3db21
- (void)_setParentTextView:(id)view;	// 0x32b69ed1
- (void)_setSubviewCachesNeedUpdate:(BOOL)update;	// 0x32c31cd5
- (void)_setTextColor:(id)color;	// 0x32d3dbf1
- (CGRect)_shortcutPresentationRect;	// 0x32d431fd
- (BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;	// 0x32d43f09
- (BOOL)_shouldResetForNewPage;	// 0x32ba008d
- (BOOL)_shouldUpdateSubviewCachesForPlugins;	// 0x32b69ad9
- (BOOL)_shouldUseInitialScale;	// 0x32d43d11
- (void)_showDataDetectorsSheet;	// 0x32d4b445
- (void)_showImageSheet;	// 0x32d4af01
- (void)_showLinkSheet;	// 0x32d4b1dd
- (void)_showPendingContentLayers;	// 0x32ba0719
- (void)_showTextStyleOptions:(id)options;	// 0x32d43041
- (void)_singleTapRecognized:(id)recognized;	// 0x32c57cd9
- (id)_supportedPasteboardTypesForCurrentSelection;	// 0x32bfa8c5
- (id)_targetURL;	// 0x32d49ec1
- (id)_textSelectingContainer;	// 0x32c15df1
- (void)_twoFingerDoubleTapRecognized:(id)recognized;	// 0x32d49029
- (void)_twoFingerPanRecognized:(id)recognized;	// 0x32d49349
- (void)_undoManagerDidRedo:(id)_undoManager;	// 0x32d40d01
- (void)_undoManagerDidUndo:(id)_undoManager;	// 0x32d40c55
- (void)_updateFixedPositionContent;	// 0x32c3bf8d
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread synchronize:(BOOL)synchronize;	// 0x32d3f26d
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;	// 0x32ba06c5
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;	// 0x32b9aa75
- (void)_updateScrollViewBoundaryZoomScales;	// 0x32b69fbd
- (void)_updateSize;	// 0x32b9e4c9
- (void)_updateSubviewCaches;	// 0x32c31cfd
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;	// 0x32c315f5
- (float)_zoomedDocumentScale;	// 0x32b9dfbd
- (void)actionDidFinish;	// 0x32d4b3f5
- (void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;	// 0x32d49f71
- (void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;	// 0x32d4a021
- (void)addInputString:(id)string;	// 0x32d40de9
- (void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;	// 0x32d40dad
- (id)approximateNodeAtViewportLocation:(CGPoint *)viewportLocation;	// 0x32c58a01
- (id)asText;	// 0x32dbed9d
- (void)assistFormNode:(id)node;	// 0x32d409e5
- (void)attemptClick:(id)click;	// 0x32c58ab5
- (id)automaticallySelectedOverlay;	// 0x32c56975
- (CGRect)autoscrollContentFrame;	// 0x32d439a5
// declared property getter: - (CGPoint)autoscrollContentOffset;	// 0x32dbe281
- (CGRect)autoscrollDragFrame;	// 0x32d43981
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x32d44949
- (BOOL)becomeFirstResponder;	// 0x32c58dcd
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x32d439cd
- (id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;	// 0x32d4c3f1
- (id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x32d4c1ed
- (id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;	// 0x32d4c389
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;	// 0x32d4c161
- (id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;	// 0x32d4c191
- (void)beginSelectionChange;	// 0x32bd287d
// declared property getter: - (id)beginningOfDocument;	// 0x32bde99d
- (BOOL)canBecomeFirstResponder;	// 0x32c58f39
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x32bf9c8d
- (BOOL)canResignFirstResponder;	// 0x32d40b11
- (void)cancelAutoscroll;	// 0x32dbeb0d
- (void)cancelInteraction;	// 0x32c57e09
- (void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;	// 0x32c3ba09
- (BOOL)cancelMouseTracking;	// 0x32d3ee85
- (BOOL)cancelTouchTracking;	// 0x32d3eebd
// converted property getter: - (UIEdgeInsets)caretInsets;	// 0x32dbd9ed
- (CGRect)caretRect;	// 0x32c17031
- (CGRect)caretRectForPosition:(id)position;	// 0x32bd5215
- (CGRect)caretRectForVisiblePosition:(id)visiblePosition;	// 0x32bd54c1
- (unsigned short)characterAfterCaretSelection;	// 0x32c091f5
- (unsigned short)characterBeforeCaretSelection;	// 0x32c091c5
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x32d41ea9
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x32d447e9
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x32d448dd
- (id)checkSpellingOfString:(id)string;	// 0x32c4fd2d
- (void)clearInteractionTimer;	// 0x32c3bbb9
- (void)clearRangedSelectionInitialExtent;	// 0x32dbdb2d
- (void)clearSelection;	// 0x32dbd769
- (BOOL)clearWKFirstResponder;	// 0x32c503e1
- (CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;	// 0x32dbd809
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32c01335
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x32d44719
- (void)collapseSelection;	// 0x32dbd999
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x32c016e5
- (void)completeInteraction;	// 0x32c433cd
- (void)confirmMarkedText:(id)text;	// 0x32d41e21
- (BOOL)considerHeightForDoubleTap;	// 0x32d44b8d
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x32d4cb61
- (BOOL)containsOnlySelectableElements;	// 0x32d44361
- (CGRect)contentFrameForView:(id)view;	// 0x32dbe2fd
- (id)contentView;	// 0x32d449f9
- (void)continueInteractionWithLocation:(CGPoint)location;	// 0x32d48d71
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x32d429e1
- (CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;	// 0x32d3e665
- (CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;	// 0x32d3e61d
- (CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;	// 0x32c01415
- (CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;	// 0x32d3e709
- (CGRect)convertRect:(CGRect)rect toFrame:(id)frame;	// 0x32d3e6ad
- (CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;	// 0x32bd55bd
- (void)copy:(id)copy;	// 0x32d42f2d
- (CGImageRef)createSnapshotWithRect:(CGRect)rect;	// 0x32d3ee0d
- (float)currentDocumentScale;	// 0x32d44a0d
- (void)cut:(id)cut;	// 0x32d42e61
// converted property getter: - (unsigned)dataDetectorTypes;	// 0x32b6a259
- (void)dealloc;	// 0x32c42e25
- (id)deepestNodeAtViewportLocation:(CGPoint)viewportLocation;	// 0x32d49b7d
- (void)deferInteraction;	// 0x32d49e71
- (void)deferredBecomeFirstResponder;	// 0x32d40b15
// converted property getter: - (id)delegate;	// 0x32c15541
- (void)deleteBackward;	// 0x32d40e35
- (void)deleteFromInput;	// 0x32d40dfd
// converted property getter: - (BOOL)detectsPhoneNumbers;	// 0x32d3e405
- (id)dictationInterpretations;	// 0x32d41bb1
- (id)dictationResultMetadataForRange:(id)range;	// 0x32d41189
- (void)didEndScroll;	// 0x32d43ad1
- (void)didEndZoom;	// 0x32d43c55
- (BOOL)didFirstVisuallyNonEmptyLayout;	// 0x32d3e0a9
- (void)didMoveToSuperview;	// 0x32b69fa9
- (void)didRemovePlugInView:(id)view;	// 0x32c323fd
- (void)didRotateInteractionSheet;	// 0x32d40611
- (void)didZoom;	// 0x32d43bfd
- (void)disableClearsOnInsertion;	// 0x32c4f3f1
// converted property getter: - (CGRect)documentBounds;	// 0x32b9b869
// converted property getter: - (int)documentType;	// 0x32b9b855
// converted property getter: - (CGRect)doubleTapRect;	// 0x32d409ad
- (BOOL)doubleTapRectIsReplaced;	// 0x32d409d1
- (XXStruct_NwkmQC)doubleTapScalesForSize:(CGSize)size;	// 0x32d44b2d
- (void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;	// 0x32d4c91d
- (unsigned)effectiveDataDetectorTypes;	// 0x32c4deb9
- (void)enableReachability;	// 0x32b98fdd
- (id)enclosingScrollView;	// 0x32d449e9
// declared property getter: - (id)endOfDocument;	// 0x32c01a41
- (void)endPrintMode;	// 0x32d4c55d
- (void)endSelectionChange;	// 0x32bd3e6d
- (void)ensureSelection;	// 0x32c4e6d5
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x32d42325
- (void)extendCurrentSelection:(int)selection;	// 0x32d42501
- (void)fileUploadPanelDidDismiss:(id)fileUploadPanel;	// 0x32d3ecd5
- (CGRect)firstRectForRange:(id)range;	// 0x32c52dd5
- (id)fontForCaretSelection;	// 0x32c54455
- (void)forceLayout;	// 0x32d3ed41
- (id)formElement;	// 0x32c01481
- (void)forwardInvocation:(id)invocation;	// 0x32b996d9
- (BOOL)fragmentContainsRichContent:(id)content;	// 0x32d3f5b1
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x32d417ed
- (BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;	// 0x32c57b31
- (BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;	// 0x32c579f1
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x32c56b81
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;	// 0x32c57a65
- (BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;	// 0x32c576c5
- (int)getPasteboardChangeCount;	// 0x32d3f8dd
- (int)getPasteboardItemsCount;	// 0x32d3f57d
- (void)handleKeyWebEvent:(id)event;	// 0x32d42aa1
- (BOOL)hasContent;	// 0x32b6c3d1
- (BOOL)hasDrawnTiles;	// 0x32b9c55d
- (BOOL)hasEditableSelection;	// 0x32bfa469
- (BOOL)hasMarkedText;	// 0x32dbd7bd
- (BOOL)hasPlugInSubviews;	// 0x32d42c75
- (BOOL)hasRangedSelection;	// 0x32d411c9
- (BOOL)hasRichlyEditableSelection;	// 0x32c09051
- (BOOL)hasSelection;	// 0x32b69941
- (BOOL)hasSimpleTextOnlyStructure;	// 0x32d4439d
- (BOOL)hasText;	// 0x32c46999
- (void)hideTapHighlight;	// 0x32d49c35
- (void)highlightApproximateNodeAndDisplayInfoSheet;	// 0x32d49c79
- (void)highlightApproximateNodeInverted:(BOOL)inverted;	// 0x32c57e25
- (id)hostViewForSheet:(id)sheet;	// 0x32d4b84d
- (id)implementationWebView;	// 0x32d429f5
- (BOOL)inPopover;	// 0x32d438c1
- (CGRect)initialPresentationRectInHostViewForSheet:(id)sheet;	// 0x32d4b85d
- (float)initialScale;	// 0x32b9a401
// declared property getter: - (id)inputDelegate;	// 0x32bcb6fd
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x32d40f11
- (id)insertDictationResultPlaceholder;	// 0x32d41251
- (void)insertText:(id)text;	// 0x32c450fd
- (void)installGestureRecognizers;	// 0x32b684f9
- (float)integralScaleForScale:(float)scale;	// 0x32b9a865
- (float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint *)fixed;	// 0x32b9a87d
// declared property getter: - (id)interactionAssistant;	// 0x32c153cd
// converted property getter: - (id)interactionDelegate;	// 0x32d4a2d5
- (id)interactionElement;	// 0x32d4a301
- (CGPoint)interactionLocation;	// 0x32d4a315
- (BOOL)isCaretInEmptyParagraph;	// 0x32c09131
- (BOOL)isClassicViewportMode;	// 0x32d3e7f5
// declared property getter: - (BOOL)isDoubleTapEnabled;	// 0x32d40735
- (BOOL)isEditable;	// 0x32c4ced5
- (BOOL)isEditing;	// 0x32c19c39
- (BOOL)isEditingSingleLineElement;	// 0x32d40e79
- (BOOL)isInInteraction;	// 0x32c91069
- (BOOL)isInPrintMode;	// 0x32d4baad
- (BOOL)isInsideRichlyEditableTextWidget;	// 0x32ca6419
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x32c019a5
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x32c019dd
- (BOOL)isShowingFullScreenPlugInUI;	// 0x32ba1619
// converted property getter: - (BOOL)isStandaloneEditableView;	// 0x32d40a09
- (BOOL)isUnperturbedDictationResultMarker:(id)marker;	// 0x32d3f911
// converted property getter: - (BOOL)isWidgetEditingView;	// 0x32d40a85
- (BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;	// 0x32c4e991
- (BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;	// 0x32caa381
- (BOOL)keyboardInputChanged:(id)changed;	// 0x32c198cd
- (void)keyboardInputChangedSelection:(id)selection;	// 0x32c15461
- (BOOL)keyboardInputShouldDelete:(id)keyboardInput;	// 0x32d429fd
- (void)layoutSubviews;	// 0x32b6c485
- (void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;	// 0x32d3e261
- (void)loadHTMLString:(id)string baseURL:(id)url;	// 0x32c4ce1d
- (void)loadRequest:(id)request;	// 0x32c30125
// converted property getter: - (BOOL)loadsSynchronously;	// 0x32d3e395
- (void)makeTextWritingDirectionLeftToRight:(id)right;	// 0x32d438a1
- (void)makeTextWritingDirectionRightToLeft:(id)left;	// 0x32d43891
- (BOOL)makeWKFirstResponder;	// 0x32c15675
// converted property getter: - (id)markedText;	// 0x32c457c1
// declared property getter: - (id)markedTextRange;	// 0x32b6ad05
// declared property getter: - (id)markedTextStyle;	// 0x32d4470d
- (float)maximumDoubleTapScale;	// 0x32d43d05
- (float)maximumScale;	// 0x32d3e609
// declared property getter: - (BOOL)mediaPlaybackAllowsAirPlay;	// 0x32c30d25
- (id)metadataDictionariesForDictationResults;	// 0x32c136dd
- (id)methodSignatureForSelector:(SEL)selector;	// 0x32b99689
- (float)minimumScale;	// 0x32b9a33d
- (float)minimumScaleForMinimumSize:(CGSize)minimumSize;	// 0x32d3e435
- (float)minimumScaleForSize:(CGSize)size;	// 0x32d44a5d
- (BOOL)mouseEventsChangeSelection;	// 0x32d4cb49
- (void)moveBackward:(unsigned)backward;	// 0x32d425e1
- (void)moveForward:(unsigned)forward;	// 0x32d4264d
- (BOOL)needsScrollNotifications;	// 0x32d3e809
- (CGImageRef)newSnapshotWithRect:(CGRect)rect;	// 0x32d3ee31
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32d42275
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x32c197c9
- (unsigned)offsetInMarkedTextForSelection:(id)selection;	// 0x32dbd8cd
- (void)paste:(id)paste;	// 0x32d4357d
- (void)performClick:(id)click;	// 0x32d49419
- (void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;	// 0x32d48cd9
- (BOOL)performsTwoStepPaste:(id)paste;	// 0x32d3f601
- (BOOL)playsNicelyWithGestures;	// 0x32c4d031
- (id)positionAtStartOrEndOfWord:(id)word;	// 0x32dbeda1
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x32d44681
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x32c1609d
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x32bde941
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x32d44871
- (CGRect)presentationRectInHostViewForSheet:(id)sheet;	// 0x32d4b8d9
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32d4220d
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x32d424cd
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x32d42499
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x32bde775
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x32d44479
// declared property getter: - (id)rangeToRestoreAfterDictation;	// 0x32d44ca1
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;	// 0x32d3f80d
- (CGRect)rectContainingCaretSelection;	// 0x32d42165
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x32d41f1d
- (CGRect)rectOfInterestForPoint:(CGPoint)point;	// 0x32d44a6d
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x32d41fb1
- (void)redrawScaledDocument;	// 0x32d402d1
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x32d418b5
- (void)replace:(id)replace;	// 0x32d43785
- (void)replaceCurrentWordWithText:(id)text;	// 0x32d41cbd
- (void)replaceRange:(id)range withText:(id)text;	// 0x32d4455d
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x32d41be9
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x32caa5e9
- (void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;	// 0x32d423ad
- (BOOL)requiresKeyEvents;	// 0x32beb7cd
- (void)resetInteraction;	// 0x32c3bb81
- (void)resetTilingAfterLoadComplete;	// 0x32b9ef9d
- (BOOL)resignFirstResponder;	// 0x32bcbe09
- (void)revealedSelectionByScrollingWebFrame:(id)frame;	// 0x32bd3e35
- (void)saveStateToCurrentHistoryItem;	// 0x32b9f185
- (id)scriptingInfoWithChildren;	// 0x32c2efb9
- (void)scrollSelectionToVisible:(BOOL)visible;	// 0x32dbeb2d
- (void)scrollViewWasRemoved;	// 0x32c3eee5
- (void)select:(id)select;	// 0x32d436e9
- (void)selectAll;	// 0x32d426b9
- (void)selectAll:(id)all;	// 0x32d43735
- (void)selectWord;	// 0x32dbd715
- (id)selectedDOMRange;	// 0x32bd3959
// declared property getter: - (id)selectedTextRange;	// 0x32bd3901
// declared property getter: - (int)selectionAffinity;	// 0x32bd398d
- (BOOL)selectionAtDocumentStart;	// 0x32d42581
- (BOOL)selectionAtWordStart;	// 0x32d425b1
- (int)selectionBaseWritingDirection;	// 0x32c142b9
- (void)selectionChanged;	// 0x32bd2c05
- (void)selectionChanged:(id)changed;	// 0x32bd2b05
// declared property getter: - (int)selectionGranularity;	// 0x32d44971
- (BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;	// 0x32dbe1b1
- (NSRange)selectionRange;	// 0x32caa341
- (id)selectionRects;	// 0x32dbdec9
- (id)selectionRectsForDOMRange:(id)domrange;	// 0x32c02459
- (id)selectionRectsForRange:(id)range;	// 0x32ca61e9
// declared property getter: - (int)selectionState;	// 0x32c09191
- (id)selectionView;	// 0x32d42ccd
- (void)sendOrientationEventForOrientation:(int)orientation;	// 0x32c30a6d
- (void)sendScrollEventIfNecessary;	// 0x32d3e81d
- (void)sendScrollEventIfNecessaryWasUserScroll:(BOOL)scroll;	// 0x32c3c0e9
- (void)sendScrollWheelEvents;	// 0x32d4a06d
- (void)setAllowsDataDetectorsSheet:(BOOL)sheet;	// 0x32c909f9
- (void)setAllowsImageSheet:(BOOL)sheet;	// 0x32b9b0d1
- (void)setAllowsLinkSheet:(BOOL)sheet;	// 0x32d4a2e9
- (void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;	// 0x32b697a1
- (void)setAutoresizes:(BOOL)autoresizes;	// 0x32b99e1d
// declared property setter: - (void)setAutoscrollContentOffset:(CGPoint)offset;	// 0x32dbe211
- (void)setBaseWritingDirection:(int)direction;	// 0x32dbda69
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x32c16121
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x32d439d1
- (void)setBottomBufferHeight:(float)height;	// 0x32d42a71
- (void)setCaretChangeListener:(id)listener;	// 0x32d429b1
// converted property setter: - (void)setCaretInsets:(UIEdgeInsets)insets;	// 0x32b6bed1
- (void)setContinuousSpellCheckingEnabled:(BOOL)enabled;	// 0x32bdd6a1
// converted property setter: - (void)setDataDetectorTypes:(unsigned)types;	// 0x32b99d3d
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x32b9b011
// converted property setter: - (void)setDetectsPhoneNumbers:(BOOL)numbers;	// 0x32d3e3ad
// declared property setter: - (void)setDoubleTapEnabled:(BOOL)enabled;	// 0x32d406f1
- (void)setDrawsBackground:(BOOL)background;	// 0x32b69f25
- (void)setFrame:(CGRect)frame;	// 0x32b68151
- (void)setIgnoresFocusingMouse:(BOOL)mouse;	// 0x32b69c19
- (void)setIgnoresKeyEvents:(BOOL)events;	// 0x32c4da59
- (void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;	// 0x32d3eb7d
- (void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32b696ed
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x32bdc8dd
- (void)setInteractionAssistantGestureRecognizers;	// 0x32d40b75
// converted property setter: - (void)setInteractionDelegate:(id)delegate;	// 0x32b9b021
// converted property setter: - (void)setIsStandaloneEditableView:(BOOL)view;	// 0x32c415a1
// converted property setter: - (void)setIsWidgetEditingView:(BOOL)view;	// 0x32d40a6d
// converted property setter: - (void)setLoadsSynchronously:(BOOL)synchronously;	// 0x32b69cb1
// converted property setter: - (void)setMarkedText:(id)text;	// 0x32caa6e1
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32d41d85
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x32d44711
- (void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32b69765
// declared property setter: - (void)setMediaPlaybackAllowsAirPlay:(BOOL)play;	// 0x32d406a5
- (void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;	// 0x32b69729
- (void)setMinimumSize:(CGSize)size;	// 0x32b69545
- (void)setMinimumSize:(CGSize)size updateCurrentViewportConfigurationSize:(BOOL)size2;	// 0x32d3eb99
- (void)setOpaque:(BOOL)opaque;	// 0x32b69ee1
- (void)setPaused:(BOOL)paused;	// 0x32d42add
- (void)setPaused:(BOOL)paused withEvents:(BOOL)events;	// 0x32ba1631
// declared property setter: - (void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;	// 0x32d44cb1
- (void)setRangedSelectionBaseToCurrentSelection;	// 0x32dbda9d
- (void)setRangedSelectionBaseToCurrentSelectionEnd;	// 0x32dbdafd
- (void)setRangedSelectionBaseToCurrentSelectionStart;	// 0x32dbdacd
- (BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;	// 0x32dbdbbd
- (void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;	// 0x32dbdc5d
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;	// 0x32dbdb8d
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;	// 0x32dbdb5d
- (void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;	// 0x32dbe085
- (void)setSelectedDOMRange:(id)range affinity:(int)affinity;	// 0x32dbde11
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x32c15b99
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32c15acd
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32d443d9
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x32d4496d
// declared property setter: - (void)setSelectionGranularity:(int)granularity;	// 0x32c01da9
- (void)setSelectionToEnd;	// 0x32dbe109
- (void)setSelectionToStart;	// 0x32dbe15d
- (void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;	// 0x32dbdcf9
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32dbeb31
// declared property setter: - (void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;	// 0x32c4da75
// declared property setter: - (void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;	// 0x32d40679
// declared property setter: - (void)setSizeUpdatesSuspended:(BOOL)suspended;	// 0x32d3e765
- (void)setSmoothsFonts:(BOOL)fonts;	// 0x32b9b039
// converted property setter: - (void)setStandaloneEditingElement:(id)element;	// 0x32d40a1d
// declared property setter: - (void)setSuppressesIncrementalRendering:(BOOL)rendering;	// 0x32c4dd29
// converted property setter: - (void)setText:(id)text;	// 0x32d4270d
- (void)setTileUpdatesDisabled:(BOOL)disabled;	// 0x32b9c5dd
- (void)setTilingArea:(int)area;	// 0x32b9b349
// converted property setter: - (void)setTypingAttributes:(id)attributes;	// 0x32d3de1d
// converted property setter: - (void)setUpdatesScrollView:(BOOL)view;	// 0x32d3ed15
- (void)setUsePreTimberlineTransparencyBehavior;	// 0x32d3e419
- (void)setUserStyleSheet:(id)sheet;	// 0x32ca5955
- (void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;	// 0x32b697d9
// declared property getter: - (BOOL)shouldIgnoreCustomViewport;	// 0x32d3e7e1
// declared property getter: - (BOOL)shouldOnlyRecognizeGesturesOnActiveElements;	// 0x32d40691
- (BOOL)shouldSelectionAssistantReceiveDoubleTapAtPoint:(CGPoint)point forScale:(float)scale;	// 0x32d44bb1
// declared property getter: - (BOOL)sizeUpdatesSuspended;	// 0x32d3e7cd
- (void)smartExtendRangedSelection:(int)selection;	// 0x32dbe051
// converted property getter: - (id)standaloneEditingElement;	// 0x32d40a5d
- (BOOL)startActionSheet;	// 0x32d48e41
- (void)startAutoscroll:(CGPoint)autoscroll;	// 0x32dbe335
- (void)startInteractionWithLocation:(CGPoint)location;	// 0x32d48d3d
- (void)stopLoading:(id)loading;	// 0x32c4dcc9
- (id)subviews;	// 0x32b69a09
- (id)superviewForSheet;	// 0x32d4a331
- (id)supportedPasteboardTypesForCurrentSelection;	// 0x32bfa88d
- (BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;	// 0x32d4a1d5
// declared property getter: - (BOOL)suppressesIncrementalRendering;	// 0x32d44cc1
- (void)takeTraitsFrom:(id)from;	// 0x32d42ca1
- (void)tapInteractionWithLocation:(CGPoint)location;	// 0x32d48d99
// converted property getter: - (id)text;	// 0x32d42839
- (id)textColorForCaretSelection;	// 0x32d41ee1
- (id)textFormElement;	// 0x32d40a05
- (id)textInDOMRange:(id)domrange;	// 0x32dbde95
- (id)textInRange:(id)range;	// 0x32bdeafd
- (id)textInputTraits;	// 0x32b69071
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32bdea59
- (void)toggleBaseWritingDirection;	// 0x32dbda15
- (void)toggleBoldface:(id)boldface;	// 0x32d42f5d
- (void)toggleItalics:(id)italics;	// 0x32d42fa9
- (void)toggleUnderline:(id)underline;	// 0x32d42ff5
// declared property getter: - (id)tokenizer;	// 0x32b6acd9
// converted property getter: - (id)typingAttributes;	// 0x32d3dce9
// converted property getter: - (id)undoManager;	// 0x32bcb749
- (id)undoManagerForWebView:(id)webView;	// 0x32bcb76d
- (void)unmarkText;	// 0x32c45909
- (void)updateInteractionElements;	// 0x32d40519
- (BOOL)updateKeyboardStateOnResponderChanges;	// 0x32d40a99
- (void)updateSelection;	// 0x32d42d15
// converted property getter: - (BOOL)updatesScrollView;	// 0x32d3ed2d
- (void)useSelectionAssistantWithMode:(int)mode;	// 0x32b9917d
- (void)validateInteractionWithLocation:(CGPoint)location;	// 0x32d48de9
- (void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;	// 0x32b99fc9
- (float)viewportHeight;	// 0x32b9af19
- (float)viewportWidth;	// 0x32b9a4d5
- (CGRect)visibleBounds;	// 0x32dbebe1
- (CGRect)visibleContentFrame;	// 0x32d4395d
- (CGRect)visibleContentRect;	// 0x32d44a1d
- (CGRect)visibleFrame;	// 0x32d43939
// converted property getter: - (id)webSelectionAssistant;	// 0x32d438b1
- (void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;	// 0x32b6988d
// converted property getter: - (id)webView;	// 0x32b69821
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;	// 0x32d3eb29
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;	// 0x32b9ce81
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar7;	// 0x32d3fc89
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;	// 0x32d3ea65
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;	// 0x32b9ec45
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;	// 0x32b69835
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;	// 0x32d42bf9
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;	// 0x32d49b4d
- (void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;	// 0x32c308b1
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;	// 0x32b9c781
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;	// 0x32c3c199
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;	// 0x32c30ad9
- (void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;	// 0x32b9e011
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)resultListener allowMultipleFiles:(BOOL)files acceptMIMETypes:(id)types;	// 0x32d3e9b5
- (void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;	// 0x32c3063d
- (BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;	// 0x32bd3ae9
- (void)webView:(id)view willAddPlugInView:(id)view2;	// 0x32c31455
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;	// 0x32d3fe65
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;	// 0x32d42ba5
- (void)webViewDidCommitCompositingLayerChanges:(id)webView;	// 0x32b6c569
- (void)webViewDidDrawTiles:(id)webView;	// 0x32b6c869
- (void)webViewDidEndOverflowScroll:(id)webView;	// 0x32d3e975
- (void)webViewDidPreventDefaultForEvent:(id)webView;	// 0x32d49b75
- (void)webViewDidRestoreFromPageCache:(id)webView;	// 0x32d3ea4d
- (void)webViewDidStartOverflowScroll:(id)webView;	// 0x32d3e935
- (CGRect)webViewFrameForUIFrame:(CGRect)uiframe;	// 0x32b67a79
- (id)webVisiblePositionForPoint:(CGPoint)point;	// 0x32c01381
- (BOOL)willInteractWithLocation:(CGPoint)location;	// 0x32d48f25
- (void)willMoveToSuperview:(id)superview;	// 0x32b69f89
- (void)willRotateInteractionSheet;	// 0x32d405ad
- (void)willStartScroll;	// 0x32d439d9
- (void)willStartScrollToTop;	// 0x32d43a5d
- (void)willStartZoom;	// 0x32d43b91
- (void)willZoomToLocation:(CGPoint)location atScale:(float)scale forDuration:(double)duration;	// 0x32d44c51
- (void)willZoomToMinimumScale;	// 0x32d44ba1
- (id)wordAtPoint:(CGPoint)point;	// 0x32dbddb1
- (id)wordContainingCaretSelection;	// 0x32d422dd
- (int)wordOffsetInRange:(id)range;	// 0x32d42379
- (id)wordRangeContainingCaretSelection;	// 0x32d421dd
- (void)writeDataToPasteboard:(id)pasteboard;	// 0x32d3f485
- (float)zoomedDocumentScale;	// 0x32d449fd
@end

