/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIWebSelectionBlock.h"
#import "UITextInput_Internal.h"
#import "UITextInputTokenizer.h"
#import "UIKit-Structs.h"
#import "UIKeyboardInput.h"
#import "UIKeyInput.h"
#import <DOMNode.h> // Unknown library

@class UIResponder, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, UITextInteractionAssistant;
@protocol UITextInputDelegate;

@interface DOMNode (UIWebFormExtensions)
- (id)createPeripheral;	// 0x32d20cb9
- (id)createPickerCell;	// 0x32d20cc1
- (id)createSelectedItem;	// 0x32d20cbd
- (id)itemTitle;	// 0x32d20cc9
- (void)populateCell:(id)cell;	// 0x32d20cc5
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)tagName;	// 0x32d38539
- (id)urlScheme;	// 0x32d38591
@end

@interface DOMNode (UIWebViewAdditions)
- (CGRect)convertRect:(CGRect)rect toView:(id)view;	// 0x32d455f1
- (BOOL)isSecure;	// 0x32d45701
- (BOOL)isTextControl;	// 0x32d456fd
- (int)keyboardType;	// 0x32d45705
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UIKeyInput, UITextInputTokenizer>
@property(assign, nonatomic) BOOL acceptsEmoji;
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;
@property(assign, nonatomic) int autocorrectionType;
@property(assign) BOOL becomesEditableWithGestures;	// G=0x32d4733d; S=0x32d47341; converted property
@property(readonly, assign, nonatomic) UITextPosition *beginningOfDocument;	// G=0x32d47569; 
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// G=0x32d46d19; S=0x32d46d1d; 
@property(assign, nonatomic) BOOL deferBecomingResponder;
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;
@property(readonly, assign, nonatomic) UITextPosition *endOfDocument;	// G=0x32d475a1; 
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign) int initialSelectionBehavior;	// G=0x32d46d31; S=0x32d46d35; converted property
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;	// G=0x32d48051; S=0x32d480a9; 
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(assign, nonatomic) unsigned insertionPointWidth;
@property(readonly, assign, nonatomic) UITextInteractionAssistant *interactionAssistant;	// G=0x32d4728d; 
@property(assign, nonatomic) int keyboardAppearance;
@property(assign, nonatomic) int keyboardType;
@property(assign, nonatomic) BOOL learnsCorrections;
@property(retain) id markedText;	// G=0x32d45f91; S=0x32d45c25; converted property
@property(readonly, assign, nonatomic) UITextRange *markedTextRange;	// G=0x32d47c5d; 
@property(copy, nonatomic) NSDictionary *markedTextStyle;	// G=0x32d481e9; S=0x32d481ed; 
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// G=0x32d46d29; S=0x32d46d2d; 
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property(copy) UITextRange *selectedTextRange;	// G=0x32d4739d; S=0x32d474f5; 
@property(assign, nonatomic) int selectionAffinity;	// G=0x32d485f5; S=0x32d4864d; 
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(assign, nonatomic) int shortcutConversionType;
@property(assign, nonatomic) int spellCheckingType;
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(retain) id text;	// G=0x32d46a5d; S=0x32d469c9; converted property
@property(readonly, assign, nonatomic) UIView *textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// G=0x32d46d21; S=0x32d46d25; 
@property(assign, nonatomic) int textSelectionBehavior;
@property(assign, nonatomic) id textSuggestionDelegate;	// G=0x32d46d11; S=0x32d46d15; 
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// G=0x32d45979; S=0x32d4597d; 
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;	// G=0x32d4804d; 
@property(assign, nonatomic) BOOL useInterfaceLanguageForLocalization;
- (CGRect)_lastRectForRange:(id)range;	// 0x32d4796d
- (NSRange)_markedTextNSRange;	// 0x32d4650d
- (id)_textSelectingContainer;	// 0x32d47345
- (void)acceptedAutoFillWord:(id)word;	// 0x32d471d9
- (id)automaticallySelectedOverlay;	// 0x32d46d39
- (int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;	// 0x32d48401
// converted property getter: - (BOOL)becomesEditableWithGestures;	// 0x32d4733d
- (void)beginSelectionChange;	// 0x32d45919
// declared property getter: - (id)beginningOfDocument;	// 0x32d47569
- (CGRect)caretRect;	// 0x32d46b6d
- (CGRect)caretRectForPosition:(id)position;	// 0x32d48105
- (unsigned short)characterAfterCaretSelection;	// 0x32d461b5
- (unsigned short)characterBeforeCaretSelection;	// 0x32d45be5
- (unsigned short)characterInRelationToCaretSelection:(int)caretSelection;	// 0x32d45ba1
- (id)characterRangeAtPoint:(CGPoint)point;	// 0x32d482b1
- (id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;	// 0x32d48395
- (id)closestPositionToPoint:(CGPoint)point;	// 0x32d481f1
- (id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;	// 0x32d48251
- (int)comparePosition:(id)position toPosition:(id)position2;	// 0x32d47d75
- (void)confirmMarkedText:(id)text;	// 0x32d45d91
- (CGPoint)constrainedPoint:(CGPoint)point;	// 0x32d471a9
- (CGPoint)constrainedPoint:(CGPoint)point withInset:(float)inset;	// 0x32d468c9
- (id)content;	// 0x32d47331
// declared property getter: - (BOOL)contentsIsSingleValue;	// 0x32d46d19
- (CGRect)convertCaretRect:(CGRect)rect;	// 0x32d46c81
- (id)delegate;	// 0x32d458cd
- (void)deleteBackward;	// 0x32d45981
- (BOOL)editable;	// 0x32d485ed
- (BOOL)editing;	// 0x32d485f1
// declared property getter: - (id)endOfDocument;	// 0x32d475a1
- (void)endSelectionChange;	// 0x32d45949
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// 0x32d46471
- (void)extendCurrentSelection:(int)selection;	// 0x32d466e1
- (CGRect)firstRectForRange:(id)range;	// 0x32d47855
- (id)fontForCaretSelection;	// 0x32d461f9
- (CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;	// 0x32d45b5d
- (void)handleKeyWebEvent:(id)event;	// 0x32d458d5
- (BOOL)hasContent;	// 0x32d45735
- (BOOL)hasSelection;	// 0x32d46771
- (BOOL)hasText;	// 0x32d47d5d
// converted property getter: - (int)initialSelectionBehavior;	// 0x32d46d31
// declared property getter: - (id)inputDelegate;	// 0x32d48051
- (void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;	// 0x32d45aad
- (id)insertDictationResultPlaceholder;	// 0x32d45b05
- (void)insertText:(id)text;	// 0x32d459f5
// declared property getter: - (id)interactionAssistant;	// 0x32d4728d
- (BOOL)isAutoFillMode;	// 0x32d47235
- (BOOL)isEditable;	// 0x32d47335
- (BOOL)isEditing;	// 0x32d47339
- (BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;	// 0x32d47eb9
- (BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;	// 0x32d47f6d
- (BOOL)isShowingPlaceholder;	// 0x32d46d0d
// converted property getter: - (id)markedText;	// 0x32d45f91
// declared property getter: - (id)markedTextRange;	// 0x32d47c5d
// declared property getter: - (id)markedTextStyle;	// 0x32d481e9
- (id)metadataDictionariesForDictationResults;	// 0x32d45add
- (void)moveBackward:(unsigned)backward;	// 0x32d46821
- (void)moveDown;	// 0x32d47be9
- (void)moveForward:(unsigned)forward;	// 0x32d46825
- (void)moveLeft;	// 0x32d47b01
- (void)moveRight;	// 0x32d47a8d
- (void)moveUp;	// 0x32d47b75
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32d463ad
- (int)offsetFromPosition:(id)position toPosition:(id)position2;	// 0x32d47db1
- (id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;	// 0x32d47e59
- (id)positionFromPosition:(id)position offset:(int)offset;	// 0x32d47ded
- (id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;	// 0x32d47f01
- (id)positionWithinRange:(id)range farthestInDirection:(int)direction;	// 0x32d4832d
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;	// 0x32d46381
- (id)rangeByExtendingCurrentSelection:(int)selection;	// 0x32d466a5
- (id)rangeByMovingCurrentSelection:(int)selection;	// 0x32d46669
- (id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;	// 0x32d47fb5
- (id)rangeOfEnclosingWord:(id)enclosingWord;	// 0x32d476c5
- (CGRect)rectContainingCaretSelection;	// 0x32d462fd
- (CGRect)rectForNSRange:(NSRange)nsrange;	// 0x32d45e81
- (id)rectsForNSRange:(NSRange)nsrange;	// 0x32d45f2d
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;	// 0x32d45b2d
- (void)replaceCurrentWordWithText:(id)text;	// 0x32d460e5
- (void)replaceRange:(id)range withText:(id)text;	// 0x32d4780d
- (void)replaceRange:(id)range withText:(id)text closeTyping:(BOOL)typing;	// 0x32d47711
- (void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;	// 0x32d46001
- (void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;	// 0x32d47831
- (BOOL)requiresKeyEvents;	// 0x32d458d1
// declared property getter: - (int)returnKeyType;	// 0x32d46d29
- (void)selectAll;	// 0x32d46829
- (id)selectedDOMRange;	// 0x32d465b9
// declared property getter: - (id)selectedTextRange;	// 0x32d4739d
// declared property getter: - (int)selectionAffinity;	// 0x32d485f5
- (BOOL)selectionAtDocumentStart;	// 0x32d467b1
- (BOOL)selectionAtWordStart;	// 0x32d467e9
- (NSRange)selectionRange;	// 0x32d4656d
- (id)selectionRectsForRange:(id)range;	// 0x32d48409
- (int)selectionState;	// 0x32d46889
- (id)selectionView;	// 0x32d47305
- (void)setBaseWritingDirection:(int)direction forRange:(id)range;	// 0x32d48405
// converted property setter: - (void)setBecomesEditableWithGestures:(BOOL)gestures;	// 0x32d47341
// declared property setter: - (void)setContentsIsSingleValue:(BOOL)value;	// 0x32d46d1d
// converted property setter: - (void)setInitialSelectionBehavior:(int)behavior;	// 0x32d46d35
// declared property setter: - (void)setInputDelegate:(id)delegate;	// 0x32d480a9
// converted property setter: - (void)setMarkedText:(id)text;	// 0x32d45c25
- (void)setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32d45cd5
// declared property setter: - (void)setMarkedTextStyle:(id)style;	// 0x32d481ed
// declared property setter: - (void)setReturnKeyType:(int)type;	// 0x32d46d2d
- (void)setSecure:(BOOL)secure;	// 0x32d458c9
- (void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;	// 0x32d465f1
// declared property setter: - (void)setSelectedTextRange:(id)range;	// 0x32d474f5
- (void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32d4740d
// declared property setter: - (void)setSelectionAffinity:(int)affinity;	// 0x32d4864d
- (void)setSelectionWithPoint:(CGPoint)point;	// 0x32d46b49
- (void)setSelectionWithPoint:(CGPoint)point inset:(float)inset;	// 0x32d46aad
// converted property setter: - (void)setText:(id)text;	// 0x32d469c9
// declared property setter: - (void)setTextLoupeVisibility:(int)visibility;	// 0x32d46d25
// declared property setter: - (void)setTextSuggestionDelegate:(id)delegate;	// 0x32d46d15
// declared property setter: - (void)setTextTrimmingSet:(CFCharacterSetRef)set;	// 0x32d4597d
- (void)setupPlaceholderTextIfNeeded;	// 0x32d45775
- (void)takeTraitsFrom:(id)from;	// 0x32d45709
// converted property getter: - (id)text;	// 0x32d46a5d
- (id)textColorForCaretSelection;	// 0x32d462e1
- (id)textDocument;	// 0x32d48651
- (id)textInRange:(id)range;	// 0x32d475d9
- (id)textInputTraits;	// 0x32d45779
// declared property getter: - (int)textLoupeVisibility;	// 0x32d46d21
- (id)textRangeFromPosition:(id)position toPosition:(id)position2;	// 0x32d4762d
// declared property getter: - (id)textSuggestionDelegate;	// 0x32d46d11
// declared property getter: - (CFCharacterSetRef)textTrimmingSet;	// 0x32d45979
// declared property getter: - (id)tokenizer;	// 0x32d4804d
- (id)uiWebDocumentView;	// 0x32d45a65
- (void)unmarkText;	// 0x32d47cd9
- (void)updateAutoscroll:(id)autoscroll;	// 0x32d46d81
- (void)updateSelection;	// 0x32d4732d
- (id)wordContainingCaretSelection;	// 0x32d46419
- (int)wordOffsetInRange:(id)range;	// 0x32d464d1
- (id)wordRangeContainingCaretSelection;	// 0x32d463d9
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;	// 0x32da9779
@end

@interface DOMNode (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(CGPoint)point;	// 0x32da9939
- (BOOL)alwaysAttemptToShowTapHighlight;	// 0x32da98dd
- (BOOL)isLikelyToBeginPageLoad;	// 0x32da9949
- (BOOL)nodeCanBecomeFirstResponder;	// 0x32da994d
- (BOOL)showsTapHighlight;	// 0x32da98d9
- (id)tapHighlightColor;	// 0x32da98f5
- (BOOL)touchCalloutEnabled;	// 0x32da9935
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)asDomNode;	// 0x32dd92e1
- (id)asDomRange;	// 0x32dd92e5
- (id)asElement;	// 0x32dd8fc5
- (CGRect)boundingRect;	// 0x32dd960d
- (CGRect)boundingRectAndInsideFixedPosition:(int *)position;	// 0x32dd966d
- (BOOL)canShrinkDirectlyToTextOnly;	// 0x32dd95f5
- (BOOL)containsBlock:(id)block;	// 0x32dd9131
- (BOOL)containsNode:(id)node;	// 0x32dd8f31
- (BOOL)containsRange:(id)range;	// 0x32dd93c5
- (id)enclosingDocument;	// 0x32dd96dd
- (id)enclosingElementIncludingSelf;	// 0x32dd8fe9
- (id)firstDescendantOfAboutTheSameWidthOrHeight;	// 0x32dd98e9
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)aboutTheSameWidthOrHeightAsRect withDescentDirection:(int)descentDirection;	// 0x32dd96ed
- (BOOL)hasCustomLineHeight;	// 0x32dd90a5
- (BOOL)isSameBlock:(id)block;	// 0x32dd90e1
- (id)largerParent;	// 0x32dd91e9
- (id)lastDescendantOfAboutTheSameWidthOrHeight;	// 0x32dd9989
- (id)parentBlock;	// 0x32dd9049
- (id)rangeOfContents;	// 0x32dd94cd
- (BOOL)rendersAsBlock;	// 0x32dd92c9
- (BOOL)selectable;	// 0x32dd9059
- (BOOL)strictlyContainsBlock:(id)block;	// 0x32dd91a1
- (BOOL)strictlyContainsNode:(id)node;	// 0x32dd8f81
- (id)webFrame;	// 0x32dd9021
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x32deaad5; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
- (unsigned long)_characterAfterCaretSelection;	// 0x32deac19
- (unsigned long)_characterBeforeCaretSelection;	// 0x32deac2d
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x32deac41
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x32deacb9
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x32debdb9
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x32deb929
- (void)_deleteByWord;	// 0x32deb5c5
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x32deb951
- (void)_deleteToEndOfLine;	// 0x32deb7cd
- (void)_deleteToStartOfLine;	// 0x32deb671
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x32deb3b9
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x32deb3cd
- (void)_extendCurrentSelection:(int)selection;	// 0x32deb205
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x32debc71
- (id)_fontForCaretSelection;	// 0x32debedd
- (id)_fullRange;	// 0x32debc19
- (id)_fullText;	// 0x32deaf21
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x32deb19d
- (int)_indexForTextPosition:(id)textPosition;	// 0x32deab45
- (BOOL)_isEmptySelection;	// 0x32deb129
- (id)_keyInput;	// 0x32deaae5
- (void)_moveCurrentSelection:(int)selection;	// 0x32deb2d5
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x32ded261
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x32ded455
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x32ded551
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x32decf55
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x32dec939
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x32deccad
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x32dec64d
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x32dece99
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x32dec7b1
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x32decac1
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x32dec3d9
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x32ded06d
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x32dedbc9
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x32deab89
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x32dedcb9
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32ded651
// declared property getter: - (id)_proxyTextInput;	// 0x32deaad5
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x32debb25
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x32debb91
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x32debbd5
- (void)_replaceCurrentWordWithText:(id)text;	// 0x32debaad
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x32debb21
- (id)_selectableText;	// 0x32dee211
- (int)_selectionAffinity;	// 0x32ded6f5
- (NSRange)_selectionAsNSRange;	// 0x32deaae9
- (BOOL)_selectionAtDocumentEnd;	// 0x32deb095
- (BOOL)_selectionAtDocumentStart;	// 0x32deb025
- (BOOL)_selectionAtWordStart;	// 0x32deaf8d
- (CGRect)_selectionClipRect;	// 0x32deb105
- (void)_setCaretSelectionAtEndOfSelection;	// 0x32deb53d
- (void)_setGestureRecognizers;	// 0x32ded7ed
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32dec221
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32deda35
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32ded681
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x32debfcd
- (id)_textColorForCaretSelection;	// 0x32debe1d
- (void)_unmarkText;	// 0x32dedb71
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32debf9d
- (id)_wordContainingCaretSelection;	// 0x32deae89
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;	// 0x32dee3f9
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (void)_accessoryClear;	// 0x32e25d75
- (id)_nextAssistedNode;	// 0x32e25d79
- (id)_previousAssistedNode;	// 0x32e25dbd
- (BOOL)_requiresAccessoryView;	// 0x32e25d3d
- (BOOL)_requiresInputView;	// 0x32e25d55
- (void)_startAssistingDocumentView:(id)view;	// 0x32e25cb1
- (void)_stopAssistingDocumentView:(id)view;	// 0x32e25ce5
- (BOOL)_supportsAccessoryClear;	// 0x32e25d71
- (BOOL)_supportsAutoFill;	// 0x32e25d6d
- (id)_textFormElement;	// 0x32e25e01
@end

