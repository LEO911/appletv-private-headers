/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import <NSObject.h> // Unknown library
#import "UITextInput_Internal.h"

@class NSString, UIView, NSUndoManager;
@protocol UITextInputPrivate, UITextInput;

@interface UIResponder : NSObject <UITextInput_Internal> {
}
@property(readonly, assign, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;	// G=0x32c4d039; 
@property(readonly, assign, nonatomic) UIResponder *_editingDelegate;	// G=0x32c0902d; 
@property(readonly, assign, nonatomic) UIResponder *_responderForEditing;	// G=0x32c09009; 
@property(readonly, assign, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;	// G=0x32c0199d; 
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;	// G=0x32dee261; 
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;	// G=0x32dee241; 
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;	// G=0x32dee245; 
@property(readonly, assign) UIView *inputAccessoryView;	// G=0x32ae7a5d; 
@property(readonly, assign) UIView *inputView;	// G=0x32ae79c5; 
@property(copy, nonatomic) NSString *restorationIdentifier;	// G=0x32f2dc85; S=0x32b789a1; 
@property(readonly, assign, nonatomic) NSUndoManager *undoManager;	// G=0x32cfa419; 
+ (void)_cleanupAllStateRestorationTables;	// 0x32b54911
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;	// 0x32b54955
+ (void)_finishStateRestoration;	// 0x32f2e1dd
+ (void)_prepareForSecondPassStateRestoration;	// 0x32f2e1cd
+ (void)_setRestoredIdentifierPathForObject:(id)object identifierPath:(id)path;	// 0x32f2e0dd
+ (void)_startTrackingObjectsWithIdentifiers;	// 0x32b41fa9
+ (void)_stopTrackingObjectsWithIdentifiers;	// 0x32b54999
+ (void)_updateStateRestorationIdentifierMap;	// 0x32f2dff9
+ (id)objectWithRestorationIdentifierPath:(id)restorationIdentifierPath;	// 0x32f2dc95
- (id)_asTextSelection;	// 0x32dee25d
- (void)_becomeFirstResponder;	// 0x32ae6f75
- (void)_becomeFirstResponderAndMakeVisible;	// 0x32cfa5a5
- (BOOL)_becomeFirstResponderWhenPossible;	// 0x32b53529
- (void)_beginPinningInputViews;	// 0x32c39965
- (BOOL)_canBecomeFirstResponderWhenPossible;	// 0x32cfa71d
- (BOOL)_canShowTextServices;	// 0x32cfa6a5
// declared property getter: - (CGRect)_caretRect;	// 0x32dee261
- (unsigned long)_characterAfterCaretSelection;	// 0x32c1610d
- (unsigned long)_characterBeforeCaretSelection;	// 0x32c15e09
- (unsigned long)_characterInRelationToCaretSelection:(int)caretSelection;	// 0x32c15e1d
- (unsigned long)_characterInRelationToRangedSelection:(int)rangedSelection;	// 0x32c15e95
- (id)_clampedpositionFromPosition:(id)position offset:(int)offset;	// 0x32c4b385
- (void)_clearBecomeFirstResponderWhenCapable;	// 0x32bcafe9
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event;	// 0x32af5cdd
- (void)_completeForwardingTouches:(id)touches phase:(int)phase event:(id)event index:(unsigned)index;	// 0x32af5d01
- (BOOL)_containedInAbsoluteResponderChain;	// 0x32b53501
- (BOOL)_containsResponder:(id)responder;	// 0x32af90f9
- (void)_controlMouseDown:(GSEventRef)down;	// 0x32cfa539
- (void)_controlMouseDragged:(GSEventRef)dragged;	// 0x32cfa541
- (void)_controlMouseUp:(GSEventRef)up;	// 0x32cfa53d
- (void)_controlTouchBegan:(id)began withEvent:(id)event;	// 0x32bccba5
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;	// 0x32bed84d
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;	// 0x32c2e091
- (id)_deepestDefaultFirstResponder;	// 0x32b54851
- (id)_deepestDefaultFirstResponderMatching:(id)matching;	// 0x32cfa5b5
- (void)_deleteBackwardAndNotify:(BOOL)notify;	// 0x32de840d
- (void)_deleteByWord;	// 0x32de80a9
- (void)_deleteForwardAndNotify:(BOOL)notify;	// 0x32de8435
- (void)_deleteToEndOfLine;	// 0x32de82b1
- (void)_deleteToStartOfLine;	// 0x32de8155
// declared property getter: - (id)_editingDelegate;	// 0x32c0902d
- (void)_endPinningInputViews;	// 0x32bcb171
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;	// 0x32de7e9d
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)wordsBeforeCaretSelection;	// 0x32de7eb1
- (void)_extendCurrentSelection:(int)selection;	// 0x32de7ce9
- (id)_findPleasingWordBoundaryFromPosition:(id)position;	// 0x32c01855
- (void)_finishResignFirstResponder;	// 0x32af9431
- (id)_firstResponder;	// 0x32af93dd
- (id)_fontForCaretSelection;	// 0x32c54391
- (id)_fullRange;	// 0x32de8695
- (id)_fullText;	// 0x32ca6465
- (void)_handleKeyEvent:(GSEventRef)event;	// 0x32c0f9bd
- (BOOL)_hasMarkedTextOrRangedSelection;	// 0x32de7c81
- (int)_indexForTextPosition:(id)textPosition;	// 0x32caa811
- (BOOL)_isEmptySelection;	// 0x32de7c0d
- (BOOL)_isPinningInputViews;	// 0x32bcb115
- (BOOL)_isRootForKeyResponderCycle;	// 0x32cfa415
- (BOOL)_isTransitioningFromView:(id)view;	// 0x32c14f4d
- (BOOL)_isViewController;	// 0x32cfa659
- (id)_keyInput;	// 0x32de7a31
- (id)_keyboardResponder;	// 0x32ae7b35
- (CGRect)_lastRectForRange:(id)range;	// 0x32dea9d5
- (void)_moveCurrentSelection:(int)selection;	// 0x32de7db9
- (id)_moveDown:(BOOL)down withHistory:(id)history;	// 0x32de9a75
- (id)_moveLeft:(BOOL)left withHistory:(id)history;	// 0x32de9c69
- (id)_moveRight:(BOOL)right withHistory:(id)history;	// 0x32de9d65
- (id)_moveToEndOfDocument:(BOOL)document withHistory:(id)history;	// 0x32de9769
- (id)_moveToEndOfLine:(BOOL)line withHistory:(id)history;	// 0x32de914d
- (id)_moveToEndOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x32de94c1
- (id)_moveToEndOfWord:(BOOL)word withHistory:(id)history;	// 0x32de8e61
- (id)_moveToStartOfDocument:(BOOL)document withHistory:(id)history;	// 0x32de96ad
- (id)_moveToStartOfLine:(BOOL)line withHistory:(id)history;	// 0x32de8fc5
- (id)_moveToStartOfParagraph:(BOOL)paragraph withHistory:(id)history;	// 0x32de92d5
- (id)_moveToStartOfWord:(BOOL)word withHistory:(id)history;	// 0x32de8bed
- (id)_moveUp:(BOOL)up withHistory:(id)history;	// 0x32de9881
- (id)_newPhraseBoundaryGestureRecognizer;	// 0x32dea389
- (id)_nextFirstResponderIfAllowed;	// 0x32af92ed
- (id)_nextKeyResponder;	// 0x32cfa40d
- (id)_nextViewControllerInResponderChain;	// 0x32cfa65d
- (NSRange)_nsrangeForTextRange:(id)textRange;	// 0x32caa77d
- (void)_phraseBoundaryGesture:(id)gesture;	// 0x32dea479
- (id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32de9e65
- (id)_previousKeyResponder;	// 0x32cfa411
- (BOOL)_promoteDeepestDefaultFirstResponder;	// 0x32b546fd
// declared property getter: - (id)_proxyTextInput;	// 0x32c4d039
- (id)_rangeOfEnclosingWord:(id)enclosingWord;	// 0x32bde6c9
- (id)_rangeOfLineEnclosingPosition:(id)lineEnclosingPosition;	// 0x32de860d
- (id)_rangeOfParagraphEnclosingPosition:(id)paragraphEnclosingPosition;	// 0x32de8651
- (void)_replaceCurrentWordWithText:(id)text;	// 0x32de8591
- (BOOL)_requiresKeyboardResetOnReload;	// 0x32ae77e9
- (BOOL)_requiresKeyboardWhenFirstResponder;	// 0x32ae7ab5
- (void)_resignFirstResponder;	// 0x32af9565
- (id)_responderForBecomeFirstResponder;	// 0x32af90f5
// declared property getter: - (id)_responderForEditing;	// 0x32c09009
- (id)_restorationIdentifierPath;	// 0x32f2dd2d
- (void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;	// 0x32de8605
- (id)_selectableText;	// 0x32bde739
- (int)_selectionAffinity;	// 0x32de9f09
- (NSRange)_selectionAsNSRange;	// 0x32de7a35
- (BOOL)_selectionAtDocumentEnd;	// 0x32de7b99
- (BOOL)_selectionAtDocumentStart;	// 0x32de7b29
- (BOOL)_selectionAtWordStart;	// 0x32de7a91
- (CGRect)_selectionClipRect;	// 0x32c164a1
- (void)_setCaretSelectionAtEndOfSelection;	// 0x32de8021
- (void)_setFirstResponder:(id)responder;	// 0x32ae6f89
- (void)_setGestureRecognizers;	// 0x32dea001
- (id)_setHistory:(id)history withExtending:(BOOL)extending withAnchor:(int)anchor withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32de8a35
- (void)_setMarkedText:(id)text selectedRange:(NSRange)range;	// 0x32dea249
- (void)_setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32de9e95
- (id)_setSelectionRangeWithHistory:(id)history;	// 0x32de87e1
- (BOOL)_shouldUseDefaultFirstResponder;	// 0x32b548d9
- (BOOL)_shouldUseKeyWindowStack;	// 0x32af9405
- (BOOL)_shouldUseNextFirstResponder;	// 0x32af9339
- (id)_showServiceForText:(id)text type:(int)type fromRect:(CGRect)rect inView:(id)view;	// 0x32cfa6cd
- (id)_targetForAction:(SEL)action withSender:(id)sender;	// 0x32cfa545
- (id)_textColorForCaretSelection;	// 0x32de86f1
// declared property getter: - (id)_textSelectingContainer;	// 0x32c0199d
- (void)_trackObjectWithIdentifier:(id)identifier;	// 0x32b789d5
- (void)_unmarkText;	// 0x32c4587d
- (void)_updateSelectionWithTextRange:(id)textRange withAffinityDownstream:(BOOL)affinityDownstream;	// 0x32de87b1
- (id)_window;	// 0x32b5ae79
- (void)_windowBecameKey;	// 0x32c14edd
- (void)_windowResignedKey;	// 0x32c14ed9
- (id)_wordContainingCaretSelection;	// 0x32c9d8ed
- (BOOL)becomeFirstResponder;	// 0x32ae6ae9
- (void)beginSelectionChange;	// 0x32dee2e5
- (BOOL)canBecomeFirstResponder;	// 0x32af93d9
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;	// 0x32bc5859
- (BOOL)canResignFirstResponder;	// 0x32af92e9
- (void)decodeRestorableStateWithCoder:(id)coder;	// 0x32f2e1f1
- (id)defaultFirstResponder;	// 0x32b548d5
- (void)encodeRestorableStateWithCoder:(id)coder;	// 0x32f2e1ed
- (void)endSelectionChange;	// 0x32dee325
- (id)firstResponder;	// 0x32ae6e19
- (void)gestureChanged:(GSEventRef)changed;	// 0x32cfa409
- (void)gestureEnded:(GSEventRef)ended;	// 0x32cfa405
- (void)gestureStarted:(GSEventRef)started;	// 0x32cfa401
// declared property getter: - (id)inputAccessoryView;	// 0x32ae7a5d
// declared property getter: - (id)inputView;	// 0x32ae79c5
- (id)interactionAssistant;	// 0x32dee23d
// declared property getter: - (BOOL)isEditable;	// 0x32dee241
// declared property getter: - (BOOL)isEditing;	// 0x32dee245
- (BOOL)isFirstResponder;	// 0x32ae7255
- (void)motionBegan:(int)began withEvent:(id)event;	// 0x32cfa3ed
- (void)motionCancelled:(int)cancelled withEvent:(id)event;	// 0x32cfa3f5
- (void)motionEnded:(int)ended withEvent:(id)event;	// 0x32cfa3f1
- (void)mouseDown:(GSEventRef)down;	// 0x32cfa395
- (void)mouseDragged:(GSEventRef)dragged;	// 0x32cfa3dd
- (void)mouseEntered:(GSEventRef)entered;	// 0x32cfa3e1
- (void)mouseExited:(GSEventRef)exited;	// 0x32cfa3e5
- (void)mouseMoved:(GSEventRef)moved;	// 0x32cfa3e9
- (void)mouseUp:(GSEventRef)up;	// 0x32cfa3d9
- (id)nextFirstResponder;	// 0x32af936d
- (id)nextResponder;	// 0x32ae7a59
- (void)reloadInputViews;	// 0x32ae71a9
- (void)reloadInputViewsWithoutReset;	// 0x32cfa451
- (void)remoteControlReceivedWithEvent:(id)event;	// 0x32cfa3f9
- (BOOL)resignFirstResponder;	// 0x32af9139
// declared property getter: - (id)restorationIdentifier;	// 0x32f2dc85
- (void)scrollWheel:(GSEventRef)wheel;	// 0x32cfa3fd
- (int)selectionAffinity;	// 0x32dea9d1
// declared property setter: - (void)setRestorationIdentifier:(id)identifier;	// 0x32b789a1
- (id)textInputView;	// 0x32dee215
- (void)touchesBegan:(id)began withEvent:(id)event;	// 0x32c23ac9
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;	// 0x32c4e98d
- (void)touchesEnded:(id)ended withEvent:(id)event;	// 0x32c2602d
- (void)touchesMoved:(id)moved withEvent:(id)event;	// 0x32c2e46d
// declared property getter: - (id)undoManager;	// 0x32cfa419
@end

