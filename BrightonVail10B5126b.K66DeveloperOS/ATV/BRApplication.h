/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "BKSWorkspaceDelegate.h"
#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, BKSWorkspace, BRKeyEventData, BREvent, NSTimer, NSMutableArray;
@protocol BRResponder;

__attribute__((visibility("hidden")))
@interface BRApplication : XXUnknownSuperclass <BKSWorkspaceDelegate> {
	BREvent *_currentEvent;	// 104 = 0x68
	NSTimer *_retriggerTimer;	// 108 = 0x6c
	NSMutableArray *_eventQueue;	// 112 = 0x70
	void *_autoreleasePoolMark;	// 116 = 0x74
	CFRunLoopSourceRef _source;	// 120 = 0x78
	CFRunLoopRef _mainRunLoop;	// 124 = 0x7c
	double _flushBeforeTimeStamp;	// 128 = 0x80
	long _retriggerCount;	// 136 = 0x88
	double _nextRetriggerDelay;	// 140 = 0x8c
	BOOL _handlingEvent;	// 148 = 0x94
	BOOL _isInModalLoop;	// 149 = 0x95
	BOOL _eventsBlocked;	// 150 = 0x96
	BOOL _isTerminating;	// 151 = 0x97
	double _startingTimeOfRepeatEvent;	// 152 = 0x98
	double _lastTimeRepeatEventSent;	// 160 = 0xa0
	int _repeatingEventValue;	// 168 = 0xa8
	BOOL _repeatEventProcessedFully;	// 172 = 0xac
	BRKeyEventData *_previousKeyEventPossiblyRepeating;	// 176 = 0xb0
	BOOL _previousKeyEventWasCleared;	// 180 = 0xb4
	BKSWorkspace *_workspace;	// 184 = 0xb8
	NSMutableDictionary *_launchedAppInfo;	// 188 = 0xbc
	NSTimer *_activityHoldTimer;	// 192 = 0xc0
	id<BRResponder> _firstResponder;	// 196 = 0xc4
	BOOL _wantsSpaceCharacters;	// 200 = 0xc8
}
@property(readonly, retain) BREvent *currentEvent;	// G=0x36b315; converted property
@property(assign) id<BRResponder> firstResponder;	// G=0x36c509; S=0x36c51d; @synthesize=_firstResponder
@property(assign) BOOL isInModalLoop;	// G=0x36bfc1; S=0x36bfb1; converted property
@property(readonly, assign) BOOL isTerminating;	// G=0x36b261; converted property
@property(readonly, assign) double nextRetriggerDelay;	// G=0x36c245; converted property
@property(readonly, assign) long retriggerCount;	// G=0x36c235; converted property
@property(assign, nonatomic) BOOL wantsSpaceCharacters;	// G=0x36c535; S=0x36c545; @synthesize=_wantsSpaceCharacters
+ (void)_startStatusBarServerIfNecessary;	// 0x36b165
+ (id)arrayByFilteringWordsInSet:(id)set fromArray:(id)array;	// 0x40b5c9
+ (id)labelNoiseWords;	// 0x40b3bd
+ (BOOL)registerAsSystemApp;	// 0x36b169
+ (id)sharedApplication;	// 0x36af11
+ (id)substringStartingAtFirstNonNoiseWordFromString:(id)string;	// 0x40b461
- (id)init;	// 0x36af3d
- (BOOL)_accessibilityIsSystemAppServer;	// 0x28da81
- (id)_accessibilityResponderElement;	// 0x36cd21
- (void)_activityHoldTimerFired;	// 0x36cd3d
- (void)_blockEvents;	// 0x36c555
- (id)_controlWithAccessibilityName:(id)accessibilityName inControl:(id)control matchedTerms:(unsigned *)terms prefixWins:(BOOL)wins useFocusProximity:(BOOL)proximity;	// 0x40b685
- (id)_decodeKeyUIEvent:(id)event simulatedEventType:(int)type simulatedKey:(unsigned short)key;	// 0x40a3a1
- (void)_disposeWorkspace;	// 0x36cc19
- (void)_drainRunLoopPool;	// 0x36ca4d
- (void)_dumpAccessibilityTags:(unsigned)tags;	// 0x40cfe5
- (void)_dumpBindingInfo:(unsigned)info;	// 0x40d28d
- (void)_dumpControl:(id)control levelsDeep:(unsigned)deep usingBlock:(id)block;	// 0x40ce5d
- (void)_dumpControlGeometry:(unsigned)geometry;	// 0x40d395
- (void)_dumpStackGeometry:(unsigned)geometry;	// 0x40d439
- (id)_getWorkspaceCreatingIfNeeded:(BOOL)needed;	// 0x36cb01
- (void)_handler;	// 0x36c59d
- (BOOL)_processForTypeahead:(id)typeahead wasHandledAlready:(BOOL)already;	// 0x40a795
- (void)_processPotentialDebuggingHook:(unsigned)hook;	// 0x40cdfd
- (void)_retriggerEvent:(id)event;	// 0x36caa5
- (void)_unblockEvents;	// 0x36c569
- (void)activateApplicationWithIdentifier:(id)identifier;	// 0x36c25d
- (id)brApplicationDelegate;	// 0x36b16d
- (void)cancelRetriggerCurrentEvent;	// 0x36c0f1
- (id)controlWithName:(id)name prefixMatch:(BOOL)match useFocusProximity:(BOOL)proximity;	// 0x40c109
// converted property getter: - (id)currentEvent;	// 0x36b315
- (void)dealloc;	// 0x36b101
- (void)dispatchEventOnEventThread:(id)thread;	// 0x36be85
- (void)emptyQueue;	// 0x36beb5
- (BOOL)findAndSelectControlWithAccessibilityTag:(id)accessibilityTag;	// 0x40c3b9
// declared property getter: - (id)firstResponder;	// 0x36c509
- (BOOL)focusControl:(id)control;	// 0x40c221
// converted property getter: - (BOOL)isInModalLoop;	// 0x36bfc1
// converted property getter: - (BOOL)isTerminating;	// 0x36b261
// converted property getter: - (double)nextRetriggerDelay;	// 0x36c245
- (void)postEvent:(id)event;	// 0x36bd1d
- (void)restart;	// 0x36b271
// converted property getter: - (long)retriggerCount;	// 0x36c235
- (void)retriggerCurrentEvent;	// 0x36bfd1
- (void)retriggerCurrentEventAfterDelay:(double)delay;	// 0x36c055
- (void)retriggerCurrentEventWithDecreasingDelay;	// 0x36bfe9
- (void)sendEvent:(id)event;	// 0x36b325
// declared property setter: - (void)setFirstResponder:(id)responder;	// 0x36c51d
// converted property setter: - (void)setIsInModalLoop:(BOOL)modalLoop;	// 0x36bfb1
// declared property setter: - (void)setWantsSpaceCharacters:(BOOL)characters;	// 0x36c545
- (void)terminate;	// 0x36b17d
// declared property getter: - (BOOL)wantsSpaceCharacters;	// 0x36c535
- (void)workspace:(id)workspace applicationActivated:(id)activated;	// 0x36c3d5
- (void)workspace:(id)workspace applicationDebugStateChanged:(id)changed newState:(BOOL)state;	// 0x36c505
- (void)workspace:(id)workspace applicationDidBecomeReceiver:(id)application fromApplication:(id)application3;	// 0x36c291
- (void)workspace:(id)workspace applicationDidFailToActivate:(id)application;	// 0x36c3d9
- (void)workspace:(id)workspace applicationDidFailToLaunch:(id)application;	// 0x36c3d1
- (void)workspace:(id)workspace applicationDidFinishLaunching:(id)application withInfo:(id)info;	// 0x36c2b1
- (void)workspace:(id)workspace applicationDidRemainReceiver:(id)application fromApplication:(id)application3;	// 0x36c295
- (void)workspace:(id)workspace applicationDidStartLaunching:(id)application;	// 0x36c2a9
- (void)workspace:(id)workspace applicationExited:(id)exited withInfo:(id)info;	// 0x36c3e1
- (void)workspace:(id)workspace applicationSuspended:(id)suspended withSettings:(id)settings;	// 0x36c3dd
- (void)workspace:(id)workspace applicationSuspensionSettingsUpdated:(id)updated withSettings:(id)settings;	// 0x36c4f9
- (id)workspace:(id)workspace applicationWillBecomeReceiver:(id)application fromApplication:(id)application3;	// 0x36c28d
- (void)workspace:(id)workspace handleOpenURL:(id)url fromApplication:(id)application;	// 0x36c4fd
- (void)workspace:(id)workspace handleStatusBarReturnActionFromApplication:(id)application statusBarStyle:(id)style;	// 0x36c501
- (void)workspaceDidResume:(id)workspace;	// 0x36c2a5
- (void)workspaceDidSuspend:(id)workspace;	// 0x36c29d
- (void)workspaceWillResume:(id)workspace;	// 0x36c2a1
- (void)workspaceWillSuspend:(id)workspace;	// 0x36c299
@end

