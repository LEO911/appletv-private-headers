/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableArray, NSDictionary, NSData, NSLock;

@interface NetflixPlaybackManager : XXUnknownSuperclass {
	BOOL openNotificationSent_;	// 4 = 0x4
	NSDictionary *movieDetails_;	// 8 = 0x8
	NSData *playReadyKey_;	// 12 = 0xc
	IMediaControl *mediaControl_;	// 16 = 0x10
	NetflixMediaControlListener *mediaControlListener_;	// 20 = 0x14
	NSMutableArray *errorStack_;	// 24 = 0x18
	NSDictionary *reportableActionId_;	// 28 = 0x1c
	NSLock *subtitlesProcessingLock_;	// 32 = 0x20
	BOOL subtitlesProcessing_;	// 36 = 0x24
	int subtitlesTrackIndex_;	// 40 = 0x28
	int audioTrackIndex_;	// 44 = 0x2c
	NSLock *playbackCommandLock_;	// 48 = 0x30
	BOOL playbackCommandInProgress_;	// 52 = 0x34
	int state_;	// 56 = 0x38
	unsigned lastKnownMappedVideoBitrate_;	// 60 = 0x3c
	unsigned lastNumAccessLogEvents_;	// 64 = 0x40
	long long totalBytesTransferred_;	// 68 = 0x44
	double observedBitrate_;	// 76 = 0x4c
	BOOL pollNetworkInterface_;	// 84 = 0x54
	long long pollBytesStart_;	// 88 = 0x58
	BwEntry *bwEntry_;	// 96 = 0x60
	double lastBwEntryTime_;	// 100 = 0x64
	long long lastBwEntryBytes_;	// 108 = 0x6c
	int networkInterfaceType_;	// 116 = 0x74
	long long bufferingStartBytes_;	// 120 = 0x78
	double bufferingStartTime_;	// 128 = 0x80
	double sampleReportWindow_;	// 136 = 0x88
	bool stalled_;	// 144 = 0x90
	int totalNumberOfStalls_;	// 148 = 0x94
	BOOL trickplayIsOn_;	// 152 = 0x98
}
@property(assign, nonatomic) int audioTrackIndex;	// G=0x5057e1; S=0x5057f1; @synthesize=audioTrackIndex_
@property(readonly, assign, nonatomic) unsigned bitrate;	// G=0x505309; 
@property(assign, nonatomic) long long bufferingStartBytes;	// G=0x5059fd; S=0x505a15; @synthesize=bufferingStartBytes_
@property(assign, nonatomic) double bufferingStartTime;	// G=0x505a29; S=0x505a41; @synthesize=bufferingStartTime_
@property(assign, nonatomic) BwEntry *bwEntry;	// G=0x505965; S=0x505975; @synthesize=bwEntry_
@property(readonly, assign, nonatomic) long long bytes;	// G=0x50534d; 
@property(readonly, assign, nonatomic) long long bytesForInterface;	// G=0x5053b1; 
@property(readonly, assign, nonatomic) unsigned currentStreamBitrate;	// G=0x505471; 
@property(retain, nonatomic) NSMutableArray *errorStack;	// G=0x50572d; S=0x50573d; @synthesize=errorStack_
@property(assign, nonatomic) long long lastBwEntryBytes;	// G=0x5059b1; S=0x5059c9; @synthesize=lastBwEntryBytes_
@property(assign, nonatomic) double lastBwEntryTime;	// G=0x505985; S=0x50599d; @synthesize=lastBwEntryTime_
@property(assign, nonatomic) unsigned lastKnownMappedVideoBitrate;	// G=0x505881; S=0x505891; @synthesize=lastKnownMappedVideoBitrate_
@property(assign, nonatomic) unsigned lastNumAccessLogEvents;	// G=0x5058a1; S=0x5058b1; @synthesize=lastNumAccessLogEvents_
@property(assign, nonatomic) IMediaControl *mediaControl;	// G=0x50570d; S=0x500ca1; @synthesize=mediaControl_
@property(assign, nonatomic) NetflixMediaControlListener *mediaControlListener;	// G=0x50571d; S=0x500db5; @synthesize=mediaControlListener_
@property(retain) NSDictionary *movieDetails;	// G=0x5056c5; S=0x5056d9; @synthesize=movieDetails_
@property(assign, nonatomic) int networkInterfaceType;	// G=0x5059dd; S=0x5059ed; @synthesize=networkInterfaceType_
@property(assign, nonatomic) double observedBitrate;	// G=0x5058ed; S=0x505905; @synthesize=observedBitrate_
@property(assign, nonatomic) BOOL openNotificationSent;	// G=0x5056a5; S=0x5056b5; @synthesize=openNotificationSent_
@property(copy) NSData *playReadyKey;	// G=0x5056e9; S=0x5056fd; @synthesize=playReadyKey_
@property(assign) BOOL playbackCommandInProgress;	// G=0x505825; S=0x50583d; @synthesize=playbackCommandInProgress_
@property(retain) NSLock *playbackCommandLock;	// G=0x505801; S=0x505815; @synthesize=playbackCommandLock_
@property(assign, nonatomic) long long pollBytesStart;	// G=0x505939; S=0x505951; @synthesize=pollBytesStart_
@property(assign, nonatomic) BOOL pollNetworkInterface;	// G=0x505919; S=0x505929; @synthesize=pollNetworkInterface_
@property(retain, nonatomic) NSDictionary *reportableActionId;	// G=0x50574d; S=0x50575d; @synthesize=reportableActionId_
@property(assign, nonatomic) double sampleReportWindow;	// G=0x505a55; S=0x505a6d; @synthesize=sampleReportWindow_
@property(assign, nonatomic) bool stalled;	// G=0x505a81; S=0x505a95; @synthesize=stalled_
@property(assign) int state;	// G=0x505855; S=0x505869; @synthesize=state_
@property(assign) BOOL subtitlesProcessing;	// G=0x505791; S=0x5057a9; @synthesize=subtitlesProcessing_
@property(retain) NSLock *subtitlesProcessingLock;	// G=0x50576d; S=0x505781; @synthesize=subtitlesProcessingLock_
@property(assign, nonatomic) int subtitlesTrackIndex;	// G=0x5057c1; S=0x5057d1; @synthesize=subtitlesTrackIndex_
@property(assign, nonatomic) long long totalBytesTransferred;	// G=0x5058c1; S=0x5058d9; @synthesize=totalBytesTransferred_
@property(assign, nonatomic) int totalNumberOfStalls;	// G=0x505aa5; S=0x505ab5; @synthesize=totalNumberOfStalls_
@property(assign) BOOL trickplay;	// G=0x50568d; S=0x50567d; converted property
@property(assign) BOOL trickplayIsOn;	// G=0x505ac5; S=0x505add; @synthesize=trickplayIsOn_
+ (void)initialize;	// 0x500999
+ (id)sharedInstance;	// 0x50099d
- (id)init;	// 0x500a89
- (void)audioSelect:(id)select;	// 0x502675
- (void)audioSelectAsync:(id)async;	// 0x5026b1
// declared property getter: - (int)audioTrackIndex;	// 0x5057e1
// declared property getter: - (unsigned)bitrate;	// 0x505309
- (void)buffering:(double)buffering;	// 0x501349
- (void)bufferingComplete:(double)complete;	// 0x501461
// declared property getter: - (long long)bufferingStartBytes;	// 0x5059fd
// declared property getter: - (double)bufferingStartTime;	// 0x505a29
// declared property getter: - (BwEntry *)bwEntry;	// 0x505965
// declared property getter: - (long long)bytes;	// 0x50534d
// declared property getter: - (long long)bytesForInterface;	// 0x5053b1
- (id)capitalizeAudioTracksArray:(id)array;	// 0x502b91
- (id)capitalizeSubtitlesForMovieDetails:(id)movieDetails;	// 0x502c81
- (id)capitalizeSubtitlesForTrackCombinationArray:(id)trackCombinationArray;	// 0x502aa1
- (id)capitalizeTrackCombination:(id)combination;	// 0x5029cd
- (id)capitalizeTracks:(id)tracks;	// 0x5028dd
- (void)clearErrorStack;	// 0x505655
- (void)close;	// 0x501251
- (id)createErrorFromStack;	// 0x502fcd
// declared property getter: - (unsigned)currentStreamBitrate;	// 0x505471
- (void)dealloc;	// 0x500b8d
- (void)end:(double)end reason:(id)reason;	// 0x501071
// declared property getter: - (id)errorStack;	// 0x50572d
- (int)fetchBookmark:(id)bookmark;	// 0x505019
// declared property getter: - (long long)lastBwEntryBytes;	// 0x5059b1
// declared property getter: - (double)lastBwEntryTime;	// 0x505985
// declared property getter: - (unsigned)lastKnownMappedVideoBitrate;	// 0x505881
// declared property getter: - (unsigned)lastNumAccessLogEvents;	// 0x5058a1
// declared property getter: - (IMediaControl *)mediaControl;	// 0x50570d
// declared property getter: - (NetflixMediaControlListener *)mediaControlListener;	// 0x50571d
- (void)mediaDidAcquireLicense;	// 0x5035dd
- (void)mediaDidAuthorize;	// 0x5034ad
- (void)mediaDidBuildPlaylists;	// 0x503675
- (void)mediaDidCdnSelect;	// 0x503545
- (void)mediaDidClose;	// 0x502e19
- (void)mediaDidFailLoadSubtitles:(int)media error:(id)error;	// 0x5038d5
- (void)mediaDidFailOpen:(id)media;	// 0x503325
- (void)mediaDidFailSelectAudio:(int)media error:(id)error;	// 0x50558d
- (void)mediaDidHandleNccpError:(id)media;	// 0x502e8d
- (void)mediaDidLoadSubtitles:(id)media;	// 0x5037a1
- (void)mediaDidSelectAudio:(id)media;	// 0x5054a9
- (void)mediaDidSetSpeed:(float)media;	// 0x5036c1
- (void)mediaOpenComplete:(id)complete;	// 0x502d59
- (void)mediaWillAcquireLicense;	// 0x503591
- (void)mediaWillAuthorize;	// 0x503461
- (void)mediaWillBuildPlaylists;	// 0x503629
- (void)mediaWillCdnSelect;	// 0x5034f9
- (void)mediaWillLoadSubtitles;	// 0x503755
// declared property getter: - (id)movieDetails;	// 0x5056c5
// declared property getter: - (int)networkInterfaceType;	// 0x5059dd
- (void)networkSelection:(id)selection;	// 0x502465
- (int)networkTypeStringToType:(id)type;	// 0x5023f1
// declared property getter: - (double)observedBitrate;	// 0x5058ed
- (void)open:(id)open;	// 0x500dd9
- (void)openAsync:(id)async;	// 0x503d49
// declared property getter: - (BOOL)openNotificationSent;	// 0x5056a5
- (void)pause:(double)pause;	// 0x500e91
- (void)play:(double)play;	// 0x500e19
// declared property getter: - (id)playReadyKey;	// 0x5056e9
// declared property getter: - (BOOL)playbackCommandInProgress;	// 0x505825
// declared property getter: - (id)playbackCommandLock;	// 0x505801
- (id)playlistForIndicatedBitrate:(double)indicatedBitrate;	// 0x50519d
- (id)playlistForRequestedM3u8:(id)requestedM3u8;	// 0x502081
// declared property getter: - (long long)pollBytesStart;	// 0x505939
// declared property getter: - (BOOL)pollNetworkInterface;	// 0x505919
- (void)postMediaCloseFailure;	// 0x503c45
- (void)postMediaOpenFailure:(int)failure;	// 0x503a95
- (void)postMediaOpenFailure:(id)failure clearProgress:(BOOL)progress;	// 0x503b6d
- (void)postMediaOpenSuccess:(id)success;	// 0x5039f9
// declared property getter: - (id)reportableActionId;	// 0x50574d
- (void)reposition:(double)reposition;	// 0x500f81
// declared property getter: - (double)sampleReportWindow;	// 0x505a55
- (void)selectedPlaylist:(id)playlist;	// 0x502191
// declared property setter: - (void)setAudioTrackIndex:(int)index;	// 0x5057f1
// declared property setter: - (void)setBufferingStartBytes:(long long)bytes;	// 0x505a15
// declared property setter: - (void)setBufferingStartTime:(double)time;	// 0x505a41
// declared property setter: - (void)setBwEntry:(BwEntry *)entry;	// 0x505975
// declared property setter: - (void)setErrorStack:(id)stack;	// 0x50573d
// declared property setter: - (void)setLastBwEntryBytes:(long long)bytes;	// 0x5059c9
// declared property setter: - (void)setLastBwEntryTime:(double)time;	// 0x50599d
// declared property setter: - (void)setLastKnownMappedVideoBitrate:(unsigned)bitrate;	// 0x505891
// declared property setter: - (void)setLastNumAccessLogEvents:(unsigned)events;	// 0x5058b1
// declared property setter: - (void)setMediaControl:(IMediaControl *)control;	// 0x500ca1
// declared property setter: - (void)setMediaControlListener:(NetflixMediaControlListener *)listener;	// 0x500db5
// declared property setter: - (void)setMovieDetails:(id)details;	// 0x5056d9
// declared property setter: - (void)setNetworkInterfaceType:(int)type;	// 0x5059ed
// declared property setter: - (void)setObservedBitrate:(double)bitrate;	// 0x505905
// declared property setter: - (void)setOpenNotificationSent:(BOOL)sent;	// 0x5056b5
// declared property setter: - (void)setPlayReadyKey:(id)key;	// 0x5056fd
// declared property setter: - (void)setPlaybackCommandInProgress:(BOOL)progress;	// 0x50583d
// declared property setter: - (void)setPlaybackCommandLock:(id)lock;	// 0x505815
// declared property setter: - (void)setPollBytesStart:(long long)start;	// 0x505951
// declared property setter: - (void)setPollNetworkInterface:(BOOL)interface;	// 0x505929
// declared property setter: - (void)setReportableActionId:(id)anId;	// 0x50575d
// declared property setter: - (void)setSampleReportWindow:(double)window;	// 0x505a6d
// declared property setter: - (void)setStalled:(bool)stalled;	// 0x505a95
// declared property setter: - (void)setState:(int)state;	// 0x505869
// declared property setter: - (void)setSubtitlesProcessing:(BOOL)processing;	// 0x5057a9
// declared property setter: - (void)setSubtitlesProcessingLock:(id)lock;	// 0x505781
// declared property setter: - (void)setSubtitlesTrackIndex:(int)index;	// 0x5057d1
// declared property setter: - (void)setTotalBytesTransferred:(long long)transferred;	// 0x5058d9
// declared property setter: - (void)setTotalNumberOfStalls:(int)stalls;	// 0x505ab5
// converted property setter: - (void)setTrickplay:(BOOL)trickplay;	// 0x50567d
// declared property setter: - (void)setTrickplayIsOn:(BOOL)on;	// 0x505add
// declared property getter: - (bool)stalled;	// 0x505a81
// declared property getter: - (int)state;	// 0x505855
- (void)stop:(double)stop;	// 0x500ff9
- (void)streamSelected:(int)selected streamIndex:(int)index;	// 0x501601
- (void)subtitlesDisable;	// 0x50236d
- (void)subtitlesDisableAsync;	// 0x504ee9
// declared property getter: - (BOOL)subtitlesProcessing;	// 0x505791
// declared property getter: - (id)subtitlesProcessingLock;	// 0x50576d
- (void)subtitlesSelect:(id)select;	// 0x502331
- (void)subtitlesSelectAbort;	// 0x5023a9
- (void)subtitlesSelectAsync:(id)async;	// 0x504ae1
// declared property getter: - (int)subtitlesTrackIndex;	// 0x5057c1
// declared property getter: - (long long)totalBytesTransferred;	// 0x5058c1
// declared property getter: - (int)totalNumberOfStalls;	// 0x505aa5
- (id)trackWithCapitalizedDescriptionFromTrack:(id)track;	// 0x5027fd
// converted property getter: - (BOOL)trickplay;	// 0x50568d
// declared property getter: - (BOOL)trickplayIsOn;	// 0x505ac5
- (void)unpause:(double)unpause;	// 0x500f09
- (void)updatePts:(double)pts;	// 0x501689
- (void)updatePts:(double)pts accessLogEvents:(id)events;	// 0x501be9
@end

