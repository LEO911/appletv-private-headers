/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSData, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface BRImage : XXUnknownSuperclass {
	CGImageRef _image;	// 4 = 0x4
	CGImageSourceRef _imageSource;	// 8 = 0x8
	float _imageWidth;	// 12 = 0xc
	float _imageHeight;	// 16 = 0x10
	int _imageOrientation;	// 20 = 0x14
	BOOL _enableCache;	// 24 = 0x18
	NSURL *_imageURL;	// 28 = 0x1c
	NSData *_imageData;	// 32 = 0x20
	NSString *_imageType;	// 36 = 0x24
	BOOL _imageBufferInMemory;	// 40 = 0x28
	BOOL _rotationEnabled;	// 41 = 0x29
}
@property(assign) BOOL enableCache;	// G=0x2857d5; S=0x2857a5; converted property
@property(readonly, assign) CGImageRef image;	// G=0x2855b5; converted property
@property(readonly, assign, getter=isImageBufferInMemory) BOOL imageBufferInMemory;	// G=0x285f59; converted property
@property(readonly, retain) NSString *imageType;	// G=0x285689; converted property
@property(readonly, assign, nonatomic) int orientation;	// G=0x285f69; @synthesize=_imageOrientation
@property(readonly, assign, nonatomic) BOOL rotationEnabled;	// G=0x285f79; @synthesize=_rotationEnabled
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef;	// 0x284d65
+ (id)imageWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x284d79
+ (id)imageWithData:(id)data;	// 0x284d21
+ (id)imageWithName:(id)name ofType:(id)type inBundle:(id)bundle;	// 0x284ea9
+ (id)imageWithPDFURL:(id)pdfurl;	// 0x284dc1
+ (id)imageWithPath:(id)path;	// 0x284cb5
+ (id)imageWithRotationFromData:(id)data;	// 0x284f9d
+ (id)imageWithRotationFromPath:(id)path;	// 0x284f59
+ (id)imageWithRotationFromURL:(id)url;	// 0x284f01
+ (id)imageWithURL:(id)url;	// 0x284c71
- (id)initWithCGImageRef:(CGImageRef)cgimageRef preserveAlpha:(BOOL)alpha;	// 0x284ff5
- (id)initWithData:(id)data;	// 0x2852f9
- (id)initWithURL:(id)url;	// 0x285125
- (id)_initWithCGImageSourceRotationEnabled:(CGImageSourceRef)cgimageSourceRotationEnabled;	// 0x285f89
- (void)_initializeCGImageWithRotation;	// 0x2860d9
- (float)aspectRatio;	// 0x285701
- (id)croppedImageForSize:(CGSize)size;	// 0x285b91
- (void)dealloc;	// 0x2854dd
- (id)deletterboxedImage;	// 0x2857e5
- (void)drawImageInContext:(CGContextRef)context rect:(CGRect)rect;	// 0x285581
// converted property getter: - (BOOL)enableCache;	// 0x2857d5
- (BOOL)hasAlpha;	// 0x285699
// converted property getter: - (CGImageRef)image;	// 0x2855b5
// converted property getter: - (id)imageType;	// 0x285689
- (BOOL)isAccessibilityElement;	// 0x285aa1
// converted property getter: - (BOOL)isImageBufferInMemory;	// 0x285f59
- (BOOL)isPowerOfTwo;	// 0x28573d
- (CGRect)largestSquareRect;	// 0x285db1
- (id)mapImageWithSourceRect:(CGRect)sourceRect toSize:(CGSize)size;	// 0x285abd
// declared property getter: - (int)orientation;	// 0x285f69
- (CGSize)pixelBounds;	// 0x2856cd
- (void)purgeRawData;	// 0x3a725d
- (id)rawData;	// 0x3a7259
// declared property getter: - (BOOL)rotationEnabled;	// 0x285f79
// converted property setter: - (void)setEnableCache:(BOOL)cache;	// 0x2857a5
- (BOOL)sourceRequiresRotation;	// 0x285789
- (id)squareImageFromNearSquareImageWithAspectRatioLimit:(float)aspectRatioLimit;	// 0x285e75
@end

