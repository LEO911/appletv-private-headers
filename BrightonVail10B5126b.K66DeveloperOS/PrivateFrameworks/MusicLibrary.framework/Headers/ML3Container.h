/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "ML3Entity.h"
#import "MusicLibrary-Structs.h"

@class NSArray, NSString, ML3Predicate;

@interface ML3Container : ML3Entity {
}
@property(readonly, assign) NSArray *cloudDisplayOrderingTerms;	// G=0x346dba41; 
@property(readonly, assign) NSArray *displayOrderingTerms;	// G=0x346dbabd; 
@property(readonly, assign) ML3Predicate *dynamicPredicate;	// G=0x346db60d; 
@property(readonly, assign, getter=isLimitOrderingDescending) BOOL limitOrderingDescending;	// G=0x346db70d; 
@property(readonly, assign) NSArray *limitOrderingTerms;	// G=0x346db8fd; 
@property(readonly, assign) long long limitValue;	// G=0x346db979; 
@property(readonly, assign, getter=isLimitedByCount) BOOL limitedByCount;	// G=0x346db6c1; 
@property(readonly, assign) NSString *limitingProperty;	// G=0x346db7f9; 
@property(readonly, assign) ML3Predicate *staticPredicate;	// G=0x346db5b1; 
+ (void)_insertNewSmartPlaylist:(id)playlist criteriaBlob:(id)blob evaluationOrder:(unsigned long)order limited:(BOOL)limited trackOrder:(unsigned long)order5 distinguishedKind:(int)kind inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x346da3c9
+ (id)autoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs;	// 0x346dafa1
+ (BOOL)createMissingBuiltInSmartPlaylists:(id)smartPlaylists;	// 0x346da7f5
+ (id)databaseTable;	// 0x346a847d
+ (id)defaultOrderingProperties;	// 0x346ad9a5
+ (void)deleteAutoCreatedBuiltInSmartPlaylistsPIDs:(id)smartPlaylistsPIDs inLibrary:(id)library;	// 0x346db2e9
+ (id)extraTablesToDelete;	// 0x346d8f11
+ (id)foreignColumnForProperty:(id)property;	// 0x346d8ef5
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x346d8ed9
+ (BOOL)hasCriterionInCriteriaList:(SearchCriteriaList *)criteriaList forITDBTrackField:(int)itdbtrackField;	// 0x346da039
+ (void)initialize;	// 0x346a6951
+ (id)joinClausesForProperty:(id)property;	// 0x346a83f5
+ (id)nextFilepathForPlaylistType:(int)playlistType withPersistentID:(unsigned long long)persistentID inLibrary:(id)library;	// 0x346d8f3d
+ (id)persistentIDColumnForTable:(id)table;	// 0x346d8f21
+ (void)populateDynamicContainersInLibrary:(id)library;	// 0x346dc7ed
+ (void)populateDynamicContainersInLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x346dc811
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library;	// 0x346dc835
+ (void)populateDynamicContainersWithTrackPersistentID:(id)trackPersistentID inLibrary:(id)library createBuiltinSmartPlaylists:(BOOL)playlists;	// 0x346dc86d
+ (void)populateSortOrdersOfPropertyValues:(id)propertyValues inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x346d9129
+ (void)populateStaticItemsOfDynamicContainersInLibrary:(id)library;	// 0x346dbf45
+ (id)predicateForCriteriaList:(SearchCriteriaList *)criteriaList dynamicCriteria:(BOOL)criteria;	// 0x346da0e9
+ (int)revisionTrackingCode;	// 0x346d8eb9
+ (id)sectionPropertyForProperty:(id)property;	// 0x346d8ebd
+ (BOOL)smartCriteriaCanBeEvaluated:(id)evaluated;	// 0x346d9085
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x346d9379
- (void)_accessCurrentSwappedPersisentIDsUsingBlock:(id)block;	// 0x346dd32d
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size;	// 0x346dd2e5
- (BOOL)_setSwappedItemPersistentIDs:(const long long *)ids size:(int)size notify:(BOOL)notify;	// 0x346dcff9
- (BOOL)addTrackWithPersistentID:(long long)persistentID;	// 0x346de071
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count;	// 0x346de09d
- (BOOL)addTracksWithPersistentIDs:(long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x346de0c1
- (void)bindPopulateStatement:(id)statement withStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x346dbeb9
// declared property getter: - (id)cloudDisplayOrderingTerms;	// 0x346dba41
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x346d9eb1
// declared property getter: - (id)displayOrderingTerms;	// 0x346dbabd
// declared property getter: - (id)dynamicPredicate;	// 0x346db60d
- (id)evaluationOrderingTerms;	// 0x346db881
- (SearchCriteriaList *)importedCriteriaList;	// 0x346db51d
- (BOOL)isCustomContainerOrderingDescending;	// 0x346db7ad
- (BOOL)isEvaluationOrderingDescending;	// 0x346db669
// declared property getter: - (BOOL)isLimitOrderingDescending;	// 0x346db70d
// declared property getter: - (BOOL)isLimitedByCount;	// 0x346db6c1
// declared property getter: - (id)limitOrderingTerms;	// 0x346db8fd
// declared property getter: - (long long)limitValue;	// 0x346db979
// declared property getter: - (id)limitingProperty;	// 0x346db7f9
- (BOOL)moveTrackFromIndex:(unsigned)index toIndex:(unsigned)index2;	// 0x346de48d
- (id)populateSQLWithStaticTrackPersistentID:(id)staticTrackPersistentID;	// 0x346dbcc1
- (BOOL)removeAllTracks;	// 0x346dd309
- (BOOL)removeTracksAtIndexes:(id)indexes;	// 0x346ddee5
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify;	// 0x346ddec1
- (BOOL)removeTracksAtIndexes:(id)indexes notify:(BOOL)notify indexesTransformBlock:(id)block;	// 0x346dd69d
- (BOOL)removeTracksWithPersistentIDs:(const long long *)persistentIDs atFilteredIndexes:(id)filteredIndexes;	// 0x346ddf05
- (BOOL)setContainsTrack:(BOOL)track forPersistentID:(long long)persistentID notify:(BOOL)notify;	// 0x346ddbc1
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count;	// 0x346de8cd
- (BOOL)setTracksWithPersistentIDs:(const long long *)persistentIDs count:(unsigned)count notify:(BOOL)notify;	// 0x346de8f1
- (BOOL)setTracksWithSwappedPersistentIDData:(id)swappedPersistentIDData;	// 0x346dec69
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x346d99d1
// declared property getter: - (id)staticPredicate;	// 0x346db5b1
@end

