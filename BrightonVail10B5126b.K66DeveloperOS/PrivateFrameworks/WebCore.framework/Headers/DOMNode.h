/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

#import "WebCore-Structs.h"
#import "DOMEventTarget.h"
#import "DOMObject.h"

@class DOMDocument, NSString, DOMElement, DOMNamedNodeMap, DOMNodeList;

@interface DOMNode : DOMObject <DOMEventTarget> {
}
@property(readonly, assign) DOMNamedNodeMap *attributes;	// G=0x36013b7d; 
@property(readonly, assign) NSString *baseURI;	// G=0x360141a5; 
@property(readonly, assign) DOMNodeList *childNodes;	// G=0x35ed4dd9; 
@property(readonly, assign) DOMNode *firstChild;	// G=0x35e893f9; 
@property(readonly, assign) BOOL isContentEditable;	// G=0x360147f9; 
@property(readonly, assign) DOMNode *lastChild;	// G=0x36013a71; 
@property(readonly, assign) NSString *localName;	// G=0x36014089; 
@property(readonly, assign) NSString *namespaceURI;	// G=0x36013c95; 
@property(readonly, assign) DOMNode *nextSibling;	// G=0x35e9a645; 
@property(readonly, assign) NSString *nodeName;	// G=0x35ed4541; 
@property(readonly, assign) unsigned short nodeType;	// G=0x35e9a541; 
@property(copy) NSString *nodeValue;	// G=0x35f010c9; S=0x360138b5; 
@property(readonly, assign) DOMDocument *ownerDocument;	// G=0x35ec2e2d; 
@property(readonly, assign) DOMElement *parentElement;	// G=0x360146dd; 
@property(readonly, assign) DOMNode *parentNode;	// G=0x35ef8fb5; 
@property(copy) NSString *prefix;	// G=0x36013db1; S=0x36013ecd; 
@property(readonly, assign) DOMNode *previousSibling;	// G=0x35f03039; 
@property(copy) NSString *textContent;	// G=0x36014365; S=0x36014525; 
- (Element *)_linkElement;	// 0x35ee7c59
- (RootObject *)_rootObject;	// 0x35fa54bd
- (WKQuad)absoluteQuad;	// 0x35eec851
- (WKQuad)absoluteQuadAndInsideFixedPosition:(BOOL *)position;	// 0x35eec881
- (id)absoluteQuads;	// 0x35ee4c55
- (void)addEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x360161e9
- (void)addEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x35ebf1d5
- (id)appendChild:(id)child;	// 0x35ed3601
// declared property getter: - (id)attributes;	// 0x36013b7d
// declared property getter: - (id)baseURI;	// 0x360141a5
- (id)borderRadii;	// 0x35ee5799
- (CGRect)boundingBox;	// 0x35ee4e41
- (CGRect)boundingBoxUsingTransforms;	// 0x35fa54f1
- (id)boundingBoxes;	// 0x36027221
- (CGRect)boundingFrame;	// 0x35fa5925
// declared property getter: - (id)childNodes;	// 0x35ed4dd9
- (id)cloneNode:(BOOL)node;	// 0x36014f89
- (unsigned short)compareDocumentPosition:(id)position;	// 0x36015ecd
- (float)computedFontSize;	// 0x35fa5949
- (BOOL)contains:(id)contains;	// 0x36015fdd
- (BOOL)containsOnlyInlineObjects;	// 0x36027399
- (void)dealloc;	// 0x35cee749
- (id)description;	// 0x35fa53b5
- (BOOL)dispatchEvent:(id)event;	// 0x360168bd
- (void)finalize;	// 0x3601385d
- (id)findExplodedTextNodeAtPoint:(CGPoint)point;	// 0x360279e1
// declared property getter: - (id)firstChild;	// 0x35e893f9
- (BOOL)hasAttributes;	// 0x36015655
- (BOOL)hasChildNodes;	// 0x35e893bd
- (CGRect)hrefFrame;	// 0x35fa5549
- (id)hrefLabel;	// 0x35fa55a1
- (id)hrefTarget;	// 0x35ee7c0d
- (id)hrefTitle;	// 0x35fa5711
- (id)hrefURL;	// 0x35ee7c81
- (WKQuad)innerFrameQuad;	// 0x35ef1159
- (id)insertBefore:(id)before :(id)arg2;	// 0x36014a9d
- (id)insertBefore:(id)before refChild:(id)child;	// 0x360148f9
- (void)inspect;	// 0x360160ed
// declared property getter: - (BOOL)isContentEditable;	// 0x360147f9
- (BOOL)isDefaultNamespace:(id)aNamespace;	// 0x36015ac9
- (BOOL)isEqualNode:(id)node;	// 0x36015761
- (BOOL)isSameNode:(id)node;	// 0x35eede51
- (BOOL)isSelectableBlock;	// 0x360273e5
- (BOOL)isSupported:(id)supported :(id)arg2;	// 0x36015425
- (BOOL)isSupported:(id)supported version:(id)version;	// 0x360151f5
// declared property getter: - (id)lastChild;	// 0x36013a71
- (id)lineBoxQuads;	// 0x35ee5441
- (id)lineBoxRects;	// 0x35fa54e1
// declared property getter: - (id)localName;	// 0x36014089
- (id)lookupNamespaceURI:(id)uri;	// 0x36015c75
- (id)lookupPrefix:(id)prefix;	// 0x36015871
// declared property getter: - (id)namespaceURI;	// 0x36013c95
- (id)nextFocusNode;	// 0x35eef9cd
// declared property getter: - (id)nextSibling;	// 0x35e9a645
// declared property getter: - (id)nodeName;	// 0x35ed4541
// declared property getter: - (unsigned short)nodeType;	// 0x35e9a541
// declared property getter: - (id)nodeValue;	// 0x35f010c9
- (void)normalize;	// 0x360150f9
// declared property getter: - (id)ownerDocument;	// 0x35ec2e2d
// declared property getter: - (id)parentElement;	// 0x360146dd
// declared property getter: - (id)parentNode;	// 0x35ef8fb5
// declared property getter: - (id)prefix;	// 0x36013db1
- (id)previousFocusNode;	// 0x35ef09a1
// declared property getter: - (id)previousSibling;	// 0x35f03039
- (id)rangeOfContainingParagraph;	// 0x36027425
- (id)removeChild:(id)child;	// 0x35ed4f41
- (void)removeEventListener:(id)listener :(id)arg2 :(BOOL)arg3;	// 0x36016699
- (void)removeEventListener:(id)listener listener:(id)listener2 useCapture:(BOOL)capture;	// 0x36016475
- (id)replaceChild:(id)child :(id)arg2;	// 0x36014de5
- (id)replaceChild:(id)child oldChild:(id)child2;	// 0x36014c41
// declared property setter: - (void)setNodeValue:(id)value;	// 0x360138b5
// declared property setter: - (void)setPrefix:(id)prefix;	// 0x36013ecd
// declared property setter: - (void)setTextContent:(id)content;	// 0x36014525
// declared property getter: - (id)textContent;	// 0x36014365
- (float)textHeight;	// 0x360279a5
- (id)textRects;	// 0x35fa5975
@end

